try{this.Module=Module}catch(e$$10){this.Module=Module={}}var ENVIRONMENT_IS_NODE="object"===typeof process,ENVIRONMENT_IS_WEB="object"===typeof window,ENVIRONMENT_IS_WORKER="function"===typeof importScripts,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;
if(ENVIRONMENT_IS_NODE){Module.print=function(h){process.stdout.write(h+"\n")};Module.printErr=function(h){process.stderr.write(h+"\n")};var nodeFS=require("fs"),nodePath=require("path");Module.read=function(h){var h=nodePath.normalize(h),f=nodeFS.readFileSync(h).toString();!f&&h!=nodePath.resolve(h)&&(h=path.join(__dirname,"..","src",h),f=nodeFS.readFileSync(h).toString());return f};Module.load=function(h){globalEval(read(h))};Module.arguments||(Module.arguments=process.argv.slice(2))}else if(ENVIRONMENT_IS_SHELL)Module.print=
print,"undefined"!=typeof printErr&&(Module.printErr=printErr),Module.read="undefined"!=typeof read?read:function(h){snarf(h)},Module.arguments||("undefined"!=typeof scriptArgs?Module.arguments=scriptArgs:"undefined"!=typeof arguments&&(Module.arguments=arguments));else if(ENVIRONMENT_IS_WEB)Module.print||(Module.print=function(h){console.log(h)}),Module.printErr||(Module.printErr=function(h){console.log(h)}),Module.read=function(h){var f=new XMLHttpRequest;f.open("GET",h,!1);f.send(null);return f.responseText},
Module.arguments||"undefined"!=typeof arguments&&(Module.arguments=arguments);else if(ENVIRONMENT_IS_WORKER)Module.load=importScripts;else throw"Unknown runtime environment. Where are we?";function globalEval(h){eval.call(null,h)}"undefined"==!Module.load&&Module.read&&(Module.load=function(h){globalEval(Module.read(h))});Module.print||(Module.print=function(){});Module.printErr||(Module.printErr=Module.print);Module.arguments||(Module.arguments=[]);Module.print=Module.print;Module.printErr=Module.printErr;
Module.preRun||(Module.preRun=[]);Module.postRun||(Module.postRun=[]);
var Runtime={stackSave:function(){return STACKTOP},stackRestore:function(h){STACKTOP=h},forceAlign:function(h,f){f=f||4;if(1==f)return h;if(isNumber(h)&&isNumber(f))return Math.ceil(h/f)*f;if(isNumber(f)&&isPowerOfTwo(f)){var c=log2(f);return"(((("+h+")+"+(f-1)+")>>"+c+")<<"+c+")"}return"Math.ceil(("+h+")/"+f+")*"+f},isNumberType:function(h){return h in Runtime.INT_TYPES||h in Runtime.FLOAT_TYPES},isPointerType:function(h){return"*"==h[h.length-1]},isStructType:function(h){return isPointerType(h)?
!1:/^\[\d+\ x\ (.*)\]/.test(h)||/<?{ ?[^}]* ?}>?/.test(h)?!0:"%"==h[0]},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{"float":0,"double":0},bitshift64:function(h,f,c,a){var b=Math.pow(2,a)-1;if(32>a)switch(c){case "shl":return[h<<a,f<<a|(h&b<<32-a)>>>32-a];case "ashr":return[(h>>>a|(f&b)<<32-a)>>0>>>0,f>>a>>>0];case "lshr":return[(h>>>a|(f&b)<<32-a)>>>0,f>>>a]}else if(32==a)switch(c){case "shl":return[0,h];case "ashr":return[f,0>(f|0)?b:0];case "lshr":return[f,0]}else switch(c){case "shl":return[0,
h<<a-32];case "ashr":return[f>>a-32>>>0,0>(f|0)?b:0];case "lshr":return[f>>>a-32,0]}abort("unknown bitshift64 op: "+[value,c,a])},or64:function(h,f){var c=h|0|f|0,a=4294967296*(Math.round(h/4294967296)|Math.round(f/4294967296));return c+a},and64:function(h,f){var c=(h|0)&(f|0),a=4294967296*(Math.round(h/4294967296)&Math.round(f/4294967296));return c+a},xor64:function(h,f){var c=(h|0)^(f|0),a=4294967296*(Math.round(h/4294967296)^Math.round(f/4294967296));return c+a},getNativeTypeSize:function(h){if(1==
Runtime.QUANTUM_SIZE)return 1;var f={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+h];f||("*"==h[h.length-1]?f=Runtime.QUANTUM_SIZE:"i"==h[0]&&(h=parseInt(h.substr(1)),assert(0==h%8),f=h/8));return f},getNativeFieldSize:function(h){return Math.max(Runtime.getNativeTypeSize(h),Runtime.QUANTUM_SIZE)},dedup:function(h,f){var c={};return f?h.filter(function(a){return c[a[f]]?!1:c[a[f]]=!0}):h.filter(function(a){return c[a]?!1:c[a]=!0})},set:function(){for(var h="object"===typeof arguments[0]?
arguments[0]:arguments,f={},c=0;c<h.length;c++)f[h[c]]=0;return f},calculateStructAlignment:function(h){h.flatSize=0;h.alignSize=0;var f=[],c=-1;h.flatIndexes=h.fields.map(function(a){var b;if(Runtime.isNumberType(a)||Runtime.isPointerType(a))a=b=Runtime.getNativeTypeSize(a);else if(Runtime.isStructType(a))b=Types.types[a].flatSize,a=Types.types[a].alignSize;else throw"Unclear type in struct: "+a+", in "+h.name_+" :: "+dump(Types.types[h.name_]);a=h.packed?1:Math.min(a,Runtime.QUANTUM_SIZE);h.alignSize=
Math.max(h.alignSize,a);a=Runtime.alignMemory(h.flatSize,a);h.flatSize=a+b;0<=c&&f.push(a-c);return c=a});h.flatSize=Runtime.alignMemory(h.flatSize,h.alignSize);0==f.length?h.flatFactor=h.flatSize:1==Runtime.dedup(f).length&&(h.flatFactor=f[0]);h.needsFlattening=1!=h.flatFactor;return h.flatIndexes},generateStructInfo:function(h,f,c){var a,b;if(f){c=c||0;a=("undefined"===typeof Types?Runtime.typeInfo:Types.types)[f];if(!a)return null;if(a.fields.length!=h.length)return printErr("Number of named fields must match the type for "+
f+": possibly duplicate struct names. Cannot return structInfo"),null;b=a.flatIndexes}else a={fields:h.map(function(a){return a[0]})},b=Runtime.calculateStructAlignment(a);var d={__size__:a.flatSize};f?h.forEach(function(e,f){if("string"===typeof e)d[e]=b[f]+c;else{var h,j;for(j in e)h=j;d[h]=Runtime.generateStructInfo(e[h],a.fields[f],b[f])}}):h.forEach(function(a,c){d[a[1]]=b[c]});return d},addFunction:function(h){var f=FUNCTION_TABLE.length;FUNCTION_TABLE.push(h);FUNCTION_TABLE.push(0);return f},
warnOnce:function(h){Runtime.warnOnce.shown||(Runtime.warnOnce.shown={});Runtime.warnOnce.shown[h]||(Runtime.warnOnce.shown[h]=1,Module.printErr(h))},funcWrappers:{},getFuncWrapper:function(h){Runtime.funcWrappers[h]||(Runtime.funcWrappers[h]=function(){FUNCTION_TABLE[h].apply(null,arguments)});return Runtime.funcWrappers[h]},UTF8Processor:function(){var h=[],f=0;this.processCChar=function(c){c&=255;f&&(h.push(c),f--);if(0==h.length){if(128>c)return String.fromCharCode(c);h.push(c);f=191<c&&224>c?
1:2;return""}if(0<f)return"";var c=h[0],a=h[1],b=h[2],c=191<c&&224>c?String.fromCharCode((c&31)<<6|a&63):String.fromCharCode((c&15)<<12|(a&63)<<6|b&63);h.length=0;return c};this.processJSString=function(c){for(var c=unescape(encodeURIComponent(c)),a=[],b=0;b<c.length;b++)a.push(c.charCodeAt(b));return a}},stackAlloc:function(h){var f=STACKTOP;STACKTOP+=h;STACKTOP=STACKTOP+3>>2<<2;assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack");return f},staticAlloc:function(h){var f=STATICTOP;STATICTOP+=
h;STATICTOP=STATICTOP+3>>2<<2;STATICTOP>=TOTAL_MEMORY&&enlargeMemory();return f},alignMemory:function(h,f){return Math.ceil(h/(f?f:4))*(f?f:4)},makeBigInt:function(h,f,c){return c?(h>>>0)+4294967296*(f>>>0):(h>>>0)+4294967296*(f|0)},QUANTUM_SIZE:4,__dummy__:0},CorrectionsMonitor={MAX_ALLOWED:0,corrections:0,sigs:{},note:function(h,f){f||(this.corrections++,this.corrections>=this.MAX_ALLOWED&&abort("\n\nToo many corrections!"))},print:function(){}},__THREW__=!1,ABORT=!1,undef=0,tempValue,tempInt,tempBigInt,
tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempI64,tempI64b;function abort(h){Module.print(h+":\n"+Error().stack);ABORT=!0;throw"Assertion: "+h;}function assert(h,f){h||abort("Assertion failed: "+f)}var globalScope=this;
function ccall(h,f,c,a){function b(a,b){if("string"==b){if(null===a||void 0===a||0===a)return 0;d||(d=Runtime.stackSave());var c=Runtime.stackAlloc(a.length+1);writeStringToMemory(a,c);return c}return"array"==b?(d||(d=Runtime.stackSave()),c=Runtime.stackAlloc(a.length),writeArrayToMemory(a,c),c):a}var d=0;try{var e=eval("_"+h)}catch(g){try{e=globalScope.Module["_"+h]}catch(i){}}assert(e,"Cannot call unknown function "+h+" (perhaps LLVM optimizations or closure removed it?)");var j=0,h=a?a.map(function(a){return b(a,
c[j++])}):[],f=function(a,b){if("string"==b)return Pointer_stringify(a);assert("array"!=b);return a}(e.apply(null,h),f);d&&Runtime.stackRestore(d);return f}Module.ccall=ccall;function cwrap(h,f,c){return function(){return ccall(h,f,c,Array.prototype.slice.call(arguments))}}Module.cwrap=cwrap;
function setValue(h,f,c){c=c||"i8";"*"===c[c.length-1]&&(c="i32");switch(c){case "i1":HEAP8[h]=f;break;case "i8":HEAP8[h]=f;break;case "i16":HEAP16[h>>1]=f;break;case "i32":HEAP32[h>>2]=f;break;case "i64":HEAP32[h>>2]=f;break;case "float":HEAPF32[h>>2]=f;break;case "double":tempDoubleF64[0]=f;HEAP32[h>>2]=tempDoubleI32[0];HEAP32[h+4>>2]=tempDoubleI32[1];break;default:abort("invalid type for setValue: "+c)}}Module.setValue=setValue;
function getValue(h,f){f=f||"i8";"*"===f[f.length-1]&&(f="i32");switch(f){case "i1":return HEAP8[h];case "i8":return HEAP8[h];case "i16":return HEAP16[h>>1];case "i32":return HEAP32[h>>2];case "i64":return HEAP32[h>>2];case "float":return HEAPF32[h>>2];case "double":return tempDoubleI32[0]=HEAP32[h>>2],tempDoubleI32[1]=HEAP32[h+4>>2],tempDoubleF64[0];default:abort("invalid type for setValue: "+f)}return null}Module.getValue=getValue;var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_STATIC=2;
Module.ALLOC_NORMAL=ALLOC_NORMAL;Module.ALLOC_STACK=ALLOC_STACK;Module.ALLOC_STATIC=ALLOC_STATIC;
function allocate(h,f,c){var a,b;"number"===typeof h?(a=!0,b=h):(a=!1,b=h.length);var d="string"===typeof f?f:null,c=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc][void 0===c?ALLOC_STATIC:c](Math.max(b,d?1:f.length));if(a)return _memset(c,0,b),c;a=0;for(var e;a<b;){var g=h[a];"function"===typeof g&&(g=Runtime.getFunctionIndex(g));e=d||f[a];0===e?a++:(assert(e,"Must know what type to store in allocate!"),"i64"==e&&(e="i32"),setValue(c+a,g,e),a+=Runtime.getNativeTypeSize(e))}return c}
Module.allocate=allocate;function Pointer_stringify(h,f){for(var c=new Runtime.UTF8Processor,a="undefined"==typeof f,b="",d=0,e;;){e=HEAPU8[h+d];if(a&&0==e)break;b+=c.processCChar(e);d+=1;if(!a&&d==f)break}return b}Module.Pointer_stringify=Pointer_stringify;function Array_stringify(h){for(var f="",c=0;c<h.length;c++)f+=String.fromCharCode(h[c]);return f}Module.Array_stringify=Array_stringify;var FUNCTION_TABLE,PAGE_SIZE=4096;function alignMemoryPage(h){return h+4095>>12<<12}
var HEAP,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64,STACK_ROOT,STACKTOP,STACK_MAX,STATICTOP;
function enlargeMemory(){Module.printErr("Warning: Enlarging memory arrays, this is not fast! "+[STATICTOP,TOTAL_MEMORY]);assert(STATICTOP>=TOTAL_MEMORY);for(assert(4<TOTAL_MEMORY);TOTAL_MEMORY<=STATICTOP;)TOTAL_MEMORY=alignMemoryPage(2*TOTAL_MEMORY);var h=HEAP8,f=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(f);HEAP16=new Int16Array(f);HEAP32=new Int32Array(f);HEAPU8=new Uint8Array(f);HEAPU16=new Uint16Array(f);HEAPU32=new Uint32Array(f);HEAPF32=new Float32Array(f);HEAPF64=new Float64Array(f);
HEAP8.set(h)}var TOTAL_STACK=Module.TOTAL_STACK||5242880,TOTAL_MEMORY=Module.TOTAL_MEMORY||10485760,FAST_MEMORY=Module.FAST_MEMORY||2097152;assert(!!Int32Array&&!!Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"Cannot fallback to non-typed array case: Code is too specialized");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);
HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(255===HEAPU8[0]&&0===HEAPU8[3],"Typed arrays 2 must be run on a little-endian system");Module.HEAP=HEAP;Module.HEAP8=HEAP8;Module.HEAP16=HEAP16;Module.HEAP32=HEAP32;Module.HEAPU8=HEAPU8;Module.HEAPU16=HEAPU16;Module.HEAPU32=HEAPU32;Module.HEAPF32=HEAPF32;Module.HEAPF64=HEAPF64;STACK_ROOT=STACKTOP=Runtime.alignMemory(1);STACK_MAX=STACK_ROOT+TOTAL_STACK;
var tempDoublePtr=Runtime.alignMemory(STACK_MAX,8),tempDoubleI8=HEAP8.subarray(tempDoublePtr),tempDoubleI32=HEAP32.subarray(tempDoublePtr>>2),tempDoubleF32=HEAPF32.subarray(tempDoublePtr>>2),tempDoubleF64=HEAPF64.subarray(tempDoublePtr>>3);function copyTempFloat(h){tempDoubleI8[0]=HEAP8[h];tempDoubleI8[1]=HEAP8[h+1];tempDoubleI8[2]=HEAP8[h+2];tempDoubleI8[3]=HEAP8[h+3]}
function copyTempDouble(h){tempDoubleI8[0]=HEAP8[h];tempDoubleI8[1]=HEAP8[h+1];tempDoubleI8[2]=HEAP8[h+2];tempDoubleI8[3]=HEAP8[h+3];tempDoubleI8[4]=HEAP8[h+4];tempDoubleI8[5]=HEAP8[h+5];tempDoubleI8[6]=HEAP8[h+6];tempDoubleI8[7]=HEAP8[h+7]}STACK_MAX=tempDoublePtr+8;STATICTOP=alignMemoryPage(STACK_MAX);var nullString=allocate(intArrayFromString("(null)"),"i8",ALLOC_STATIC);
function callRuntimeCallbacks(h){for(;0<h.length;){var f=h.shift(),c=f.func;"number"===typeof c&&(c=FUNCTION_TABLE[c]);c(void 0===f.arg?null:f.arg)}}var __ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[];function initRuntime(){callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);CorrectionsMonitor.print()}function String_len(h){for(var f=h;HEAP8[f++];);return f-h-1}Module.String_len=String_len;
function intArrayFromString(h,f,c){h=(new Runtime.UTF8Processor).processJSString(h);c&&(h.length=c);f||h.push(0);return h}Module.intArrayFromString=intArrayFromString;function intArrayToString(h){for(var f=[],c=0;c<h.length;c++){var a=h[c];255<a&&(assert(!1,"Character code "+a+" ("+String.fromCharCode(a)+")  at offset "+c+" not in 0x00-0xFF."),a&=255);f.push(String.fromCharCode(a))}return f.join("")}Module.intArrayToString=intArrayToString;
function writeStringToMemory(h,f,c){h=intArrayFromString(h,c);for(c=0;c<h.length;)HEAP8[f+c]=h[c],c+=1}Module.writeStringToMemory=writeStringToMemory;function writeArrayToMemory(h,f){for(var c=0;c<h.length;c++)HEAP8[f+c]=h[c]}Module.writeArrayToMemory=writeArrayToMemory;var STRING_TABLE=[];function unSign(h,f){return 0<=h?h:32>=f?2*Math.abs(1<<f-1)+h:Math.pow(2,f)+h}function reSign(h,f){if(0>=h)return h;var c=32>=f?Math.abs(1<<f-1):Math.pow(2,f-1);if(h>=c&&(32>=f||h>c))h=-2*c+h;return h}
var runDependencies=0,runDependencyTracking={},calledRun=!1,runDependencyWatcher=null;
function addRunDependency(h){runDependencies++;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);h?(assert(!runDependencyTracking[h]),runDependencyTracking[h]=1,null===runDependencyWatcher&&"undefined"!==typeof setInterval&&(runDependencyWatcher=setInterval(function(){var f=!1,c;for(c in runDependencyTracking)f||(f=!0,Module.printErr("still waiting on run dependencies:")),Module.printErr("dependency: "+c);f&&Module.printErr("(end of list)")},6E3))):Module.printErr("warning: run dependency added without ID")}
Module.addRunDependency=addRunDependency;function removeRunDependency(h){runDependencies--;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);h?(assert(runDependencyTracking[h]),delete runDependencyTracking[h]):Module.printErr("warning: run dependency removed without ID");0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),calledRun||run())}Module.removeRunDependency=removeRunDependency;
Module.preloadedImages={};Module.preloadedAudios={};function _AgendaClearFunction(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+8|0)>>2]=0}
function _InitializeAgenda(h){_AllocateEnvironmentData(h,17,24,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+20|0)>>2]=0;_EnvAddClearFunction(h,STRING_TABLE.__str|0,2,0);_AddWatchItem(h,STRING_TABLE.__str1|0,1,HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]|0,40,4,6);_EnvDefineFunction2(h,STRING_TABLE.__str2|0,118,8,STRING_TABLE.__str3|0,STRING_TABLE.__str4|0);_EnvDefineFunction2(h,STRING_TABLE.__str5|0,118,10,STRING_TABLE.__str6|0,STRING_TABLE.__str7|
0);_EnvDefineFunction2(h,STRING_TABLE.__str8|0,119,12,STRING_TABLE.__str9|0,STRING_TABLE.__str10|0);_EnvDefineFunction2(h,STRING_TABLE.__str11|0,119,14,STRING_TABLE.__str12|0,STRING_TABLE.__str4|0);_EnvDefineFunction2(h,STRING_TABLE.__str|0,118,16,STRING_TABLE.__str13|0,STRING_TABLE.__str7|0)}
function _RefreshCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_GetConstructName(c,STRING_TABLE.__str2|0,STRING_TABLE.__str21|0);f=0==(a|0)?3:4;break;case 3:f=7;break;case 4:b=_EnvFindDefrule(c,a);f=0==(b|0)?5:6;break;case 5:_CantFindItemErrorMessage(c,STRING_TABLE.__str22|0,a);f=7;break;case 6:_EnvRefresh(c,b);f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}
function _RefreshAgendaCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;a=h;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str5|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=10;break;case 4:c=1==(b|0)?5:8;break;case 5:e=_GetModuleName(a,STRING_TABLE.__str5|0,1,d);c=0!=(HEAP32[d>>2]|0)?6:7;break;case 6:c=10;break;case 7:c=9;break;case 8:e=_EnvGetCurrentModule(a);c=9;break;case 9:_EnvRefreshAgenda(a,
e);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _GetSalienceEvaluationCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str8|0,0,0);var f=_EnvGetSalienceEvaluation(h),f=_SalienceEvaluationName(f);return _EnvAddSymbol(h,f)}
function _SetSalienceEvaluationCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g;b=h;c=_EnvGetSalienceEvaluation(b);g=_SalienceEvaluationName(c);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str11|0,0,1)|0)?3:4;break;case 3:a=_EnvAddSymbol(b,g);c=16;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str11|0,1,2,d)|0)?5:6;break;case 5:a=_EnvAddSymbol(b,g);c=16;break;case 6:e=
HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0==(_strcmp(e,STRING_TABLE.__str23|0)|0)?7:8;break;case 7:_EnvSetSalienceEvaluation(b,0);c=15;break;case 8:c=0==(_strcmp(e,STRING_TABLE.__str24|0)|0)?9:10;break;case 9:_EnvSetSalienceEvaluation(b,1);c=14;break;case 10:c=0==(_strcmp(e,STRING_TABLE.__str25|0)|0)?11:12;break;case 11:_EnvSetSalienceEvaluation(b,2);c=13;break;case 12:_ExpectedTypeError1(b,STRING_TABLE.__str11|0,1,STRING_TABLE.__str26|0);a=_EnvAddSymbol(b,g);c=16;break;case 13:c=14;break;case 14:c=
15;break;case 15:a=_EnvAddSymbol(b,g);c=16;break;case 16:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetSalienceEvaluationCommand.X=1;
function _AgendaCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;a=h;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=10;break;case 4:c=1==(b|0)?5:8;break;case 5:e=_GetModuleName(a,STRING_TABLE.__str|0,1,d);c=0!=(HEAP32[d>>2]|0)?6:7;break;case 6:c=10;break;case 7:c=9;break;case 8:e=_EnvGetCurrentModule(a);c=9;break;case 9:_EnvAgenda(a,STRING_TABLE.__str27|
0,e);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _AddActivation(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=0!=(HEAPU32[(d+32|0)>>2]>>>14&1|0)?3:4;break;case 3:_EnvFocus(b,HEAP32[(HEAP32[((d|0)+8|0)>>2]|0)>>2]);a=4;break;case 4:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=7;break;case 7:g=i;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=e;a=HEAP32[(HEAP32[(b+16|0)>>2]+68|0)>>2]+8|0;var j=HEAP32[a>>2];HEAP32[a>>2]=j+1|0;HEAP32[(g+12|0)>>2]=j;a=_EvaluateSalience(b,d);HEAP32[(g+8|0)>>2]=a;HEAP32[(g+16|0)>>2]=0;a=_genrand();HEAP32[(g+20|0)>>2]=a;HEAP32[(g+24|0)>>2]=0;HEAP32[(g+28|0)>>2]=0;a=HEAP32[(HEAP32[(b+
16|0)>>2]+68|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[((e+8|0)+((HEAPU32[e>>2]>>>6&511)<<2)|0)>>2]=g;a=0!=(HEAPU32[(HEAP32[(g|0)>>2]+32|0)>>2]>>>12&1|0)?8:9;break;case 8:_EnvPrintRouter(b,STRING_TABLE.__str14|0,STRING_TABLE.__str15|0);_PrintActivation(b,STRING_TABLE.__str14|0,g);_EnvPrintRouter(b,STRING_TABLE.__str14|0,STRING_TABLE.__str16|0);a=9;break;case 9:h=HEAP32[((d|0)+8|0)>>2];_PlaceActivation(b,h+12|0,g);return;default:assert(0,"bad label: "+a)}}_AddActivation.X=1;
function _EvaluateSalience(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;d=h;e=f;a=0==(_EnvGetSalienceEvaluation(d)|0)?3:4;break;case 3:b=HEAP32[(e+24|0)>>2];a=14;break;case 4:a=0==(HEAP32[(e+36|0)>>2]|0)?5:6;break;case 5:b=HEAP32[(e+24|0)>>2];a=14;break;case 6:_SetEvaluationError(d,0);a=0!=(_EvaluateExpression(d,HEAP32[(e+36|0)>>2],g)|0)?7:8;break;case 7:_SalienceInformationError(d,
STRING_TABLE.__str22|0,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);b=HEAP32[(e+24|0)>>2];a=14;break;case 8:a=1!=(HEAPU16[(g+4|0)>>1]&65535|0)?9:10;break;case 9:_SalienceNonIntegerError(d);_SalienceInformationError(d,STRING_TABLE.__str22|0,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);_SetEvaluationError(d,1);b=HEAP32[(e+24|0)>>2];a=14;break;case 10:i=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];a=1E4<(i|0)?12:11;break;case 11:a=-1E4>(i|0)?12:13;break;case 12:_SalienceRangeError(d,-1E4,1E4);_SetEvaluationError(d,1);_SalienceInformationError(d,
STRING_TABLE.__str22|0,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);b=HEAP32[(e+24|0)>>2];a=14;break;case 13:HEAP32[(e+24|0)>>2]=i;b=HEAP32[(e+24|0)>>2];a=14;break;case 14:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_EvaluateSalience.X=1;
function _PrintActivation(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=HEAP32[(c+8|0)>>2];_sprintf(a|0,STRING_TABLE.__str29|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));_EnvPrintRouter(h,f,a|0);_EnvPrintRouter(h,f,HEAP32[(HEAP32[(HEAP32[(c|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,f,STRING_TABLE.__str30|0);_PrintPartialMatch(h,f,HEAP32[(c+
4|0)>>2]);STACKTOP=a}function _ClearRuleFromAgenda(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;e=HEAP32[(HEAP32[((b|0)+8|0)>>2]+12|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:g=HEAP32[(e+28|0)>>2];d=b;c=5;break;case 5:c=0!=(d|0)?6:10;break;case 6:c=(HEAP32[(e|0)>>2]|0)==(d|0)?7:8;break;case 7:_RemoveActivation(a,e,1,1);c=10;break;case 8:c=9;break;case 9:d=HEAP32[(d+52|0)>>2];c=5;break;case 10:e=g;c=3;break;case 11:return;default:assert(0,"bad label: "+c)}}
_ClearRuleFromAgenda.X=1;function _EnvGetActivationName(h,f){return HEAP32[(HEAP32[(HEAP32[(f|0)>>2]|0)>>2]+16|0)>>2]}function _EnvSetActivationSalience(h,f,c){h=HEAP32[(f+8|0)>>2];HEAP32[(f+8|0)>>2]=c;return h}
function _MoveActivationToTop(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;e=f;g=HEAP32[((HEAP32[(e|0)>>2]|0)+8|0)>>2];c=(e|0)==(HEAP32[(g+12|0)>>2]|0)?3:4;break;case 3:a=0;c=7;break;case 4:d=HEAP32[(e+24|0)>>2];HEAP32[(d+28|0)>>2]=HEAP32[(e+28|0)>>2];c=0!=(HEAP32[(e+28|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(e+28|0)>>2]+24|0)>>2]=d;c=6;break;case 6:HEAP32[(e+28|0)>>2]=HEAP32[(g+12|0)>>2];HEAP32[(HEAP32[(g+12|0)>>2]+24|0)>>2]=e;HEAP32[(e+24|0)>>2]=0;HEAP32[(g+12|0)>>2]=e;a=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+68|0)>>2]+12|0)>>2]=1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}_MoveActivationToTop.X=1;function _EnvGetAgendaChanged(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+12|0)>>2]}function _EnvSetAgendaChanged(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+12|0)>>2]=f}function _GetNumberOfActivations(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+4|0)>>2]}
function _RemoveActivation(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;b=c;g=a;i=e;e=HEAP32[((HEAP32[(i|0)>>2]|0)+8|0)>>2];b=1==(b|0)?3:13;break;case 3:b=0==(HEAP32[(i+24|0)>>2]|0)?4:7;break;case 4:HEAP32[(e+12|0)>>2]=HEAP32[(HEAP32[(e+12|0)>>2]+28|0)>>2];b=0!=(HEAP32[(e+12|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(e+12|0)>>2]+24|0)>>2]=0;b=6;break;case 6:b=10;break;case 7:HEAP32[(HEAP32[(i+24|0)>>2]+28|0)>>2]=HEAP32[(i+28|0)>>2];b=0!=(HEAP32[(i+28|0)>>2]|0)?8:9;break;case 8:HEAP32[(HEAP32[(i+
28|0)>>2]+24|0)>>2]=HEAP32[(i+24|0)>>2];b=9;break;case 9:b=10;break;case 10:b=0!=(HEAPU32[(HEAP32[(i|0)>>2]+32|0)>>2]>>>12&1|0)?11:12;break;case 11:_EnvPrintRouter(d,STRING_TABLE.__str14|0,STRING_TABLE.__str20|0);_PrintActivation(d,STRING_TABLE.__str14|0,i);_EnvPrintRouter(d,STRING_TABLE.__str14|0,STRING_TABLE.__str16|0);b=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+68|0)>>2]+12|0)>>2]=1;b=13;break;case 13:b=1==(g|0)?14:16;break;case 14:b=0!=(HEAP32[(i+4|0)>>2]|0)?15:16;break;case 15:HEAP32[((HEAP32[(i+
4|0)>>2]+8|0)+((HEAPU32[HEAP32[(i+4|0)>>2]>>2]>>>6&511)<<2)|0)>>2]=0;b=16;break;case 16:b=HEAP32[(HEAP32[(d+16|0)>>2]+68|0)>>2]+4|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;b=0!=(HEAP32[(i+16|0)>>2]|0)?17:18;break;case 17:_ReturnPartialMatch(d,HEAP32[(i+16|0)>>2]);b=18;break;case 18:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+b)}}_RemoveActivation.X=1;
function _EnvGetNextActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:6;break;case 3:e=_GetModuleItem(b,0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+64|0)>>2]+4|0)>>2]);c=0==(e|0)?4:5;break;case 4:a=0;c=7;break;case 5:a=HEAP32[(e+12|0)>>2];c=7;break;case 6:a=HEAP32[(d+28|0)>>2];c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _EnvGetActivationPPForm(h,f,c,a){_OpenStringDestination(h,STRING_TABLE.__str17|0,f,c);_PrintActivation(h,STRING_TABLE.__str17|0,a);_CloseStringDestination(h,STRING_TABLE.__str17|0)}function _EnvGetActivationBasisPPForm(h,f,c,a){_OpenStringDestination(h,STRING_TABLE.__str17|0,f,c);_PrintPartialMatch(h,STRING_TABLE.__str17|0,HEAP32[(a+4|0)>>2]);_CloseStringDestination(h,STRING_TABLE.__str17|0)}
function _EnvDeleteActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:_RemoveAllActivations(a);c=5;break;case 4:_RemoveActivation(a,b,1,1);c=5;break;case 5:return 1;default:assert(0,"bad label: "+c)}}
function _RemoveAllActivations(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=_GetDefruleModuleItem(c,0)+12|0;a=HEAP32[a>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+28|0)>>2];_RemoveActivation(c,a,1,1);a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _DetachActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;d=f;c=0==(d|0)?3:4;break;case 3:_SystemError(a,STRING_TABLE.__str18|0,1);c=4;break;case 4:b=HEAP32[((HEAP32[(d|0)>>2]|0)+8|0)>>2];c=(d|0)==(HEAP32[(b+12|0)>>2]|0)?5:6;break;case 5:HEAP32[(b+12|0)>>2]=HEAP32[(d+28|0)>>2];c=6;break;case 6:c=0!=(HEAP32[(d+24|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(d+24|0)>>2]+28|0)>>2]=HEAP32[(d+28|0)>>2];c=8;break;case 8:c=0!=(HEAP32[(d+28|0)>>2]|0)?9:10;break;case 9:HEAP32[(HEAP32[(d+
28|0)>>2]+24|0)>>2]=HEAP32[(d+24|0)>>2];c=10;break;case 10:return HEAP32[(d+24|0)>>2]=0,HEAP32[(d+28|0)>>2]=0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+68|0)>>2]+12|0)>>2]=1;default:assert(0,"bad label: "+c)}}_DetachActivation.X=1;function _EnvAgenda(h,f,c){_ListItemsDriver(h,f,c,STRING_TABLE.__str19|0,STRING_TABLE.__str1|0,18,0,20,0)}
function _EnvReorderAgenda(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;d=f;e=0;c=0==(d|0)?3:4;break;case 3:e=1;d=_EnvGetNextDefmodule(a,0);c=4;break;case 4:c=5;break;case 5:c=0!=(d|0)?6:13;break;case 6:g=_GetDefruleModuleItem(a,d);b=HEAP32[(g+12|0)>>2];HEAP32[(g+12|0)>>2]=0;c=7;break;case 7:c=0!=(b|0)?8:9;break;case 8:c=HEAP32[(b+28|0)>>2];HEAP32[(b+28|0)>>2]=0;HEAP32[(b+24|0)>>2]=0;_PlaceActivation(a,g+12|0,b);b=c;c=7;break;case 9:c=0!=(e|0)?11:10;break;case 10:c=13;break;case 11:c=12;
break;case 12:d=_EnvGetNextDefmodule(a,d);c=5;break;case 13:return;default:assert(0,"bad label: "+c)}}_EnvReorderAgenda.X=1;
function _EnvRefresh(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:15;break;case 4:d=HEAP32[(HEAP32[(b+48|0)>>2]+8|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:13;break;case 6:c=0!=(HEAPU32[d>>2]>>>2&1|0)?7:11;break;case 7:c=0!=(HEAPU32[d>>2]>>>5&1|0)?11:8;break;case 8:c=0==(HEAP32[((d+8|0)+((HEAPU32[d>>2]>>>6&511)<<2)|0)>>2]|0)?9:10;break;case 9:_AddActivation(a,b,d);c=10;break;case 10:c=11;break;case 11:c=12;break;case 12:d=HEAP32[(d+4|0)>>2];c=5;break;case 13:c=
14;break;case 14:b=HEAP32[(b+52|0)>>2];c=3;break;case 15:return 1;default:assert(0,"bad label: "+c)}}_EnvRefresh.X=1;
function _EnvRefreshAgenda(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;d=f;g=0;_SaveCurrentModule(a);c=0==(d|0)?3:4;break;case 3:g=1;d=_EnvGetNextDefmodule(a,0);c=4;break;case 4:e=_EnvGetSalienceEvaluation(a);_EnvSetSalienceEvaluation(a,1);c=5;break;case 5:c=0!=(d|0)?6:14;break;case 6:_EnvSetCurrentModule(a,d);b=_EnvGetNextActivation(a,0);c=7;break;case 7:c=0!=(b|0)?8:10;break;case 8:c=_EvaluateSalience(a,HEAP32[(b|0)>>2]);HEAP32[(b+8|0)>>2]=c;c=9;break;case 9:b=_EnvGetNextActivation(a,
b);c=7;break;case 10:_EnvReorderAgenda(a,d);c=0!=(g|0)?12:11;break;case 11:_EnvSetSalienceEvaluation(a,e);_RestoreCurrentModule(a);c=15;break;case 12:c=13;break;case 13:d=_EnvGetNextDefmodule(a,d);c=5;break;case 14:_EnvSetSalienceEvaluation(a,e);_RestoreCurrentModule(a);c=15;break;case 15:return;default:assert(0,"bad label: "+c)}}_EnvRefreshAgenda.X=1;
function _SalienceEvaluationName(h){var f;for(f=2;;)switch(f){case 2:var c;f=h;f=0==(f|0)?3:1==(f|0)?4:2==(f|0)?5:6;break;case 3:c=STRING_TABLE.__str23|0;f=7;break;case 4:c=STRING_TABLE.__str24|0;f=7;break;case 5:c=STRING_TABLE.__str25|0;f=7;break;case 6:c=STRING_TABLE.__str28|0;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}function _EnvGetSalienceEvaluation(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+16|0)>>2]}
function _EnvSetSalienceEvaluation(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+16|0)>>2]=f;return c}
function _VariableAnalysis(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;j=0;c=3;break;case 3:c=0!=(d|0)?4:27;break;case 4:c=150==(HEAPU16[(d|0)>>1]&65535|0)?5:14;break;case 5:c=0!=(HEAP32[(d+4|0)>>2]|0)?6:11;break;case 6:c=0!=(HEAP32[(d+24|0)>>2]|0)?7:11;break;case 7:j=1;c=-1==(HEAP16[(HEAP32[(d+24|0)>>2]+34|0)>>1]<<16>>16|0)?8:9;break;case 8:_PrintErrorID(b,STRING_TABLE.__str31|0,1,1);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str233|0);_EnvPrintRouter(b,STRING_TABLE.__str132|
0,HEAP32[(HEAP32[(d+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str334|0);_PrintLongInteger(b,STRING_TABLE.__str132|0,HEAPU32[(d+8|0)>>2]>>>6&127);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str435|0);c=10;break;case 9:_PrintErrorID(b,STRING_TABLE.__str31|0,2,1);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str536|0);_EnvPrintRouter(b,STRING_TABLE.__str132|0,HEAP32[(HEAP32[(d+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str637|
0);_PrintLongInteger(b,STRING_TABLE.__str132|0,HEAPU32[(d+8|0)>>2]>>>6&127);_EnvPrintRouter(b,STRING_TABLE.__str132|0,STRING_TABLE.__str738|0);c=10;break;case 10:c=11;break;case 11:c=0!=(_GetVariables(b,d)|0)?12:13;break;case 12:a=1;c=28;break;case 13:c=26;break;case 14:c=154==(HEAPU16[(d|0)>>1]&65535|0)?15:25;break;case 15:e=_CheckExpression(b,HEAP32[(d+56|0)>>2],0,HEAPU32[(d+8|0)>>2]>>>6&127,0,0);i=g=_GetExpressionVarConstraints(b,HEAP32[(d+56|0)>>2]);c=16;break;case 16:c=0!=(i|0)?17:21;break;case 17:c=
0!=(_PropagateVariableDriver(b,d,d,0,35,HEAP32[(i+4|0)>>2],i,0)|0)?18:19;break;case 18:_ReturnLHSParseNodes(b,g);a=1;c=28;break;case 19:c=20;break;case 20:i=HEAP32[(i+64|0)>>2];c=16;break;case 21:_ReturnLHSParseNodes(b,g);c=0!=(e|0)?22:23;break;case 22:j=1;c=24;break;case 23:c=_GetvarReplace(b,HEAP32[(d+56|0)>>2]);HEAP32[(d+52|0)>>2]=c;c=24;break;case 24:c=25;break;case 25:c=26;break;case 26:d=HEAP32[(d+68|0)>>2];c=3;break;case 27:a=j;c=28;break;case 28:return a;default:assert(0,"bad label: "+c)}}
_VariableAnalysis.X=1;
function _GetVariables(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;e=d=f;g=0;c=3;break;case 3:c=0!=(d|0)?4:25;break;case 4:c=0!=(HEAPU32[(d+8|0)>>2]>>>2&1|0)?5:6;break;case 5:g=d;d=HEAP32[(d+68|0)>>2];c=6;break;case 6:c=0!=(d|0)?7:18;break;case 7:c=35==(HEAPU16[(d|0)>>1]&65535|0)?11:8;break;case 8:c=36==(HEAPU16[(d|0)>>1]&65535|0)?11:9;break;case 9:c=150==(HEAPU16[(d|0)>>1]&65535|0)?10:14;break;case 10:c=0!=(HEAP32[(d+4|0)>>2]|0)?11:14;break;case 11:c=0!=(_ProcessVariable(b,d,g,e)|0)?
12:13;break;case 12:a=1;c=26;break;case 13:c=17;break;case 14:c=0!=(_ProcessField(b,d,g,e)|0)?15:16;break;case 15:a=1;c=26;break;case 16:c=17;break;case 17:c=18;break;case 18:c=0==(d|0)?19:20;break;case 19:d=g;c=24;break;case 20:c=0==(HEAP32[(d+64|0)>>2]|0)?21:23;break;case 21:c=0!=(g|0)?22:23;break;case 22:d=g;g=0;c=23;break;case 23:c=24;break;case 24:d=HEAP32[(d+64|0)>>2];c=3;break;case 25:a=0;c=26;break;case 26:return a;default:assert(0,"bad label: "+c)}}_GetVariables.X=1;
function _CheckExpression(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r=e;j=h;k=f;l=c;m=a;n=b;o=d;q=1;g=3;break;case 3:g=0!=(k|0)?4:30;break;case 4:g=35==(HEAPU16[(k|0)>>1]&65535|0)?5:12;break;case 5:g=0==(HEAP32[(k+24|0)>>2]|0)?6:7;break;case 6:_VariableReferenceErrorMessage(j,HEAP32[(k+4|0)>>2],l,m,n,o);i=k;g=31;break;case 7:g=0!=(_UnmatchableConstraint(HEAP32[(k+
20|0)>>2])|0)?8:10;break;case 8:g=0!=(_EnvGetStaticConstraintChecking(j)|0)?9:10;break;case 9:_ConstraintReferenceErrorMessage(j,HEAP32[(k+4|0)>>2],l,q,m,n,o);i=k;g=31;break;case 10:g=11;break;case 11:g=29;break;case 12:g=36==(HEAPU16[(k|0)>>1]&65535|0)?13:15;break;case 13:g=0==(HEAP32[(k+24|0)>>2]|0)?14:15;break;case 14:_VariableReferenceErrorMessage(j,HEAP32[(k+4|0)>>2],l,m,n,o);i=k;g=31;break;case 15:g=33==(HEAPU16[(k|0)>>1]&65535|0)?16:19;break;case 16:g=0==(_FindImportedConstruct(j,STRING_TABLE.__str839|
0,0,HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2],r,1,0)|0)?17:18;break;case 17:_VariableReferenceErrorMessage(j,HEAP32[(k+4|0)>>2],l,m,n,o);i=k;g=31;break;case 18:g=27;break;case 19:g=30==(HEAPU16[(k|0)>>1]&65535|0)?22:20;break;case 20:g=31==(HEAPU16[(k|0)>>1]&65535|0)?22:21;break;case 21:g=32==(HEAPU16[(k|0)>>1]&65535|0)?22:26;break;case 22:g=0!=(HEAP32[(k+68|0)>>2]|0)?23:26;break;case 23:p=g=_CheckExpression(j,HEAP32[(k+68|0)>>2],k,m,n,o);g=0!=(g|0)?24:25;break;case 24:i=p;g=31;break;case 25:g=26;break;
case 26:g=27;break;case 27:g=28;break;case 28:g=29;break;case 29:q=q+1|0;k=HEAP32[(k+64|0)>>2];g=3;break;case 30:i=0;g=31;break;case 31:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_CheckExpression.X=1;
function _PropagateVariableDriver(h,f,c,a,b,d,e,g){var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;i=0!=(n|0)?3:6;break;case 3:i=0!=(_PropagateVariableToNodes(k,HEAP32[(n+64|0)>>2],o,p,q,HEAP32[(l+44|0)>>2],r,0)|0)?4:5;break;case 4:_VariableMixingErrorMessage(k,p);j=1;i=19;break;case 5:i=6;break;case 6:i=0!=(_PropagateVariableToNodes(k,HEAP32[(m+64|0)>>2],o,p,q,HEAP32[(l+44|0)>>2],r,0)|0)?7:8;break;case 7:_VariableMixingErrorMessage(k,p);j=1;i=19;break;case 8:i=
150==(HEAPU16[(l|0)>>1]&65535|0)?10:9;break;case 9:i=154==(HEAPU16[(l|0)>>1]&65535|0)?10:18;break;case 10:i=0==(HEAP32[(l+8|0)>>2]&1|0)?11:18;break;case 11:i=(HEAP32[(l+44|0)>>2]|0)<=(HEAP32[(l+48|0)>>2]|0)?12:18;break;case 12:i=154==(HEAPU16[(l|0)>>1]&65535|0)?13:14;break;case 13:s=1;i=15;break;case 14:s=0;i=15;break;case 15:i=0!=(_PropagateVariableToNodes(k,HEAP32[(l+68|0)>>2],o,p,q,HEAP32[(l+44|0)>>2],r,s)|0)?16:17;break;case 16:_VariableMixingErrorMessage(k,p);j=1;i=19;break;case 17:i=18;break;
case 18:j=0;i=19;break;case 19:return j;default:assert(0,"bad label: "+i)}}_PropagateVariableDriver.X=1;
function _VariableReferenceErrorMessage(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;e=f;i=c;j=a;k=b;l=d;_PrintErrorID(g,STRING_TABLE.__str31|0,4,1);_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str940|0);_EnvPrintRouter(g,STRING_TABLE.__str132|0,HEAP32[(e+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1041|0);e=0!=(i|0)?3:4;break;case 3:e=_LHSParseNodesToExpression(g,i);_ReturnExpression(g,HEAP32[(e+12|0)>>2]);HEAP32[(e+12|0)>>2]=0;_EnvPrintRouter(g,
STRING_TABLE.__str132|0,STRING_TABLE.__str1142|0);_PrintExpression(g,STRING_TABLE.__str132|0,e);_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1243|0);_ReturnExpression(g,e);e=4;break;case 4:_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1344|0);_PrintLongInteger(g,STRING_TABLE.__str132|0,j);e=0==(k|0)?5:8;break;case 5:e=0<(l|0)?6:7;break;case 6:_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1445|0);_PrintLongInteger(g,STRING_TABLE.__str132|0,l);e=7;break;case 7:e=
9;break;case 8:_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1546|0);_EnvPrintRouter(g,STRING_TABLE.__str132|0,HEAP32[(k+16|0)>>2]);e=9;break;case 9:_EnvPrintRouter(g,STRING_TABLE.__str132|0,STRING_TABLE.__str1647|0);return;default:assert(0,"bad label: "+e)}}_VariableReferenceErrorMessage.X=1;
function _PropagateVariableToNodes(h,f,c,a,b,d,e,g){var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;i=3;break;case 3:i=0!=(l|0)?4:52;break;case 4:i=0!=(HEAP32[(l+56|0)>>2]|0)?5:6;break;case 5:_PropagateVariableToNodes(k,HEAP32[(l+56|0)>>2],m,n,o,p,q,1);i=40;break;case 6:i=35==(HEAPU16[(l|0)>>1]&65535|0)?8:7;break;case 7:i=36==(HEAPU16[(l|0)>>1]&65535|0)?8:32;break;case 8:i=(HEAP32[(l+4|0)>>2]|0)==(n|0)?9:32;break;case 9:i=0==(r|0)?10:16;break;case 10:i=35==
(m|0)?11:12;break;case 11:i=36==(HEAPU16[(l|0)>>1]&65535|0)?14:12;break;case 12:i=36==(m|0)?13:15;break;case 13:i=35==(HEAPU16[(l|0)>>1]&65535|0)?14:15;break;case 14:j=1;i=53;break;case 15:i=16;break;case 16:i=0!=(HEAP32[(o+20|0)>>2]|0)?17:21;break;case 17:i=0!=(HEAP32[(l+8|0)>>2]&1|0)?21:18;break;case 18:s=HEAP32[(l+20|0)>>2];i=_IntersectConstraints(k,HEAP32[(o+20|0)>>2],s);HEAP32[(l+20|0)>>2]=i;i=0!=(HEAPU32[(l+8|0)>>2]>>>4&1|0)?19:20;break;case 19:_RemoveConstraint(k,s);i=20;break;case 20:i=l+
8|0;HEAP32[i>>2]=HEAP32[i>>2]&-17|16;i=21;break;case 21:i=0!=(q|0)?22:31;break;case 22:i=0==(HEAP32[(l+24|0)>>2]|0)?23:24;break;case 23:HEAP32[(l+24|0)>>2]=o;i=30;break;case 24:i=(HEAP16[(o+32|0)>>1]<<16>>16|0)==(HEAP16[(l+32|0)>>1]<<16>>16|0)?25:26;break;case 25:HEAP32[(l+24|0)>>2]=o;i=29;break;case 26:i=(HEAP32[(o+28|0)>>2]|0)==(HEAP32[(l+28|0)>>2]|0)?27:28;break;case 27:HEAP32[(l+24|0)>>2]=o;i=28;break;case 28:i=29;break;case 29:i=30;break;case 30:i=31;break;case 31:i=39;break;case 32:i=150==(HEAPU16[(l|
0)>>1]&65535|0)?33:38;break;case 33:i=(HEAP32[(l+4|0)>>2]|0)==(n|0)?34:38;break;case 34:i=1==(q|0)?35:38;break;case 35:i=36==(m|0)?36:37;break;case 36:j=1;i=53;break;case 37:HEAP32[(l+24|0)>>2]=o;i=38;break;case 38:i=39;break;case 39:i=40;break;case 40:i=0!=(HEAP32[(l+64|0)>>2]|0)?41:44;break;case 41:i=0!=(_PropagateVariableToNodes(k,HEAP32[(l+64|0)>>2],m,n,o,p,q,r)|0)?42:43;break;case 42:j=1;i=53;break;case 43:i=44;break;case 44:i=150==(HEAPU16[(l|0)>>1]&65535|0)?46:45;break;case 45:i=154==(HEAPU16[(l|
0)>>1]&65535|0)?46:50;break;case 46:i=(HEAP32[(l+48|0)>>2]|0)<(p|0)?47:48;break;case 47:l=0;i=49;break;case 48:l=HEAP32[(l+68|0)>>2];i=49;break;case 49:i=51;break;case 50:l=HEAP32[(l+68|0)>>2];i=51;break;case 51:i=3;break;case 52:j=0;i=53;break;case 53:return j;default:assert(0,"bad label: "+i)}}_PropagateVariableToNodes.X=1;
function _VariableMixingErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str31|0,3,1);_EnvPrintRouter(h,STRING_TABLE.__str132|0,STRING_TABLE.__str940|0);_EnvPrintRouter(h,STRING_TABLE.__str132|0,HEAP32[(f+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str132|0,STRING_TABLE.__str1748|0)}
function _ProcessVariable(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=150==(HEAPU16[(g|0)>>1]&65535|0)?3:6;break;case 3:k=35;l=HEAP32[(g+4|0)>>2];b=0!=(HEAPU32[(g+8|0)>>2]>>>4&1|0)?4:5;break;case 4:_RemoveConstraint(e,HEAP32[(g+20|0)>>2]);b=5;break;case 5:b=_GetConstraintRecord(e);HEAP32[(g+20|0)>>2]=b;b=HEAP32[(g+20|0)>>2];HEAP32[b>>2]&=-2;b=HEAP32[(g+20|0)>>2];HEAP32[b>>2]=HEAP32[b>>2]&-65|64;b=HEAP32[(g+20|0)>>2];HEAP32[b>>2]=HEAP32[b>>2]&-257|256;b=g+8|0;HEAP32[b>>
2]=HEAP32[b>>2]&-17|16;b=7;break;case 6:k=HEAPU16[(g|0)>>1]&65535;l=HEAP32[(g+4|0)>>2];b=7;break;case 7:b=150!=(HEAPU16[(g|0)>>1]&65535|0)?8:11;break;case 8:_PropagateVariableToNodes(e,HEAP32[(g+68|0)>>2],k,l,g,HEAP32[(j+44|0)>>2],1,0);b=0!=(_ProcessField(e,g,i,j)|0)?9:10;break;case 9:d=1;b=12;break;case 10:b=11;break;case 11:d=_PropagateVariableDriver(e,j,g,i,k,l,g,1);b=12;break;case 12:return d;default:assert(0,"bad label: "+b)}}_ProcessVariable.X=1;
function _ProcessField(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=150==(HEAPU16[(g|0)>>1]&65535|0)?3:4;break;case 3:d=0;b=15;break;case 4:l=k=_DeriveVariableConstraints(e,g);b=5;break;case 5:b=0!=(l|0)?6:10;break;case 6:b=0!=(_PropagateVariableDriver(e,j,g,i,HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2],l,0)|0)?7:8;break;case 7:_ReturnLHSParseNodes(e,k);d=1;b=15;break;case 8:b=9;break;case 9:l=HEAP32[(l+64|0)>>2];b=5;break;case 10:_ReturnLHSParseNodes(e,k);b=0!=(_UnboundVariablesInPattern(e,
g,HEAPU32[(j+8|0)>>2]>>>6&127)|0)?11:12;break;case 11:d=1;b=15;break;case 12:b=0!=(_ProcessConnectedConstraints(e,g,i,j)|0)?13:14;break;case 13:d=1;b=15;break;case 14:_FieldConversion(e,g,j);d=0;b=15;break;case 15:return d;default:assert(0,"bad label: "+b)}}_ProcessField.X=1;
function _UnboundVariablesInPattern(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n;d=h;e=f;g=c;a=0!=(HEAPU32[(e+8|0)>>2]>>>2&1|0)?3:9;break;case 3:e=HEAP32[(e+68|0)>>2];a=4;break;case 4:a=0!=(e|0)?5:8;break;case 5:a=0!=(_UnboundVariablesInPattern(d,e,g)|0)?6:7;break;case 6:b=1;a=38;break;case 7:e=HEAP32[(e+64|0)>>2];a=4;break;case 8:b=0;a=38;break;case 9:l=HEAP32[(e+36|0)>>2];n=HEAP16[(e+34|0)>>1]<<16>>16;m=HEAP32[(e+20|0)>>2];k=HEAP32[(e+68|0)>>2];a=10;break;case 10:a=0!=(k|0)?11:
37;break;case 11:i=k;a=12;break;case 12:a=0!=(i|0)?13:35;break;case 13:a=35==(HEAPU16[(i|0)>>1]&65535|0)?15:14;break;case 14:a=36==(HEAPU16[(i|0)>>1]&65535|0)?15:17;break;case 15:a=0==(HEAP32[(i+24|0)>>2]|0)?16:17;break;case 16:_VariableReferenceErrorMessage(d,HEAP32[(i+4|0)>>2],0,g,l,n);b=1;a=38;break;case 17:a=163==(HEAPU16[(i|0)>>1]&65535|0)?19:18;break;case 18:a=164==(HEAPU16[(i|0)>>1]&65535|0)?19:22;break;case 19:a=_CheckExpression(d,HEAP32[(i+56|0)>>2],0,g,l,n);a=0!=(a|0)?20:21;break;case 20:b=
1;a=38;break;case 21:a=32;break;case 22:a=1==(HEAPU16[(i|0)>>1]&65535|0)?27:23;break;case 23:a=0==(HEAPU16[(i|0)>>1]&65535|0)?27:24;break;case 24:a=2==(HEAPU16[(i|0)>>1]&65535|0)?27:25;break;case 25:a=3==(HEAPU16[(i|0)>>1]&65535|0)?27:26;break;case 26:a=8==(HEAPU16[(i|0)>>1]&65535|0)?27:31;break;case 27:a=0!=(_EnvGetStaticConstraintChecking(d)|0)?28:31;break;case 28:j=_ConstraintCheckValue(d,HEAPU16[(i|0)>>1]&65535,HEAP32[(i+4|0)>>2],m);a=0!=(j|0)?29:30;break;case 29:_ConstraintViolationErrorMessage(d,
STRING_TABLE.__str1849|0,0,0,g,l,n,j,m,1);b=1;a=38;break;case 30:a=31;break;case 31:a=32;break;case 32:a=33;break;case 33:a=34;break;case 34:i=HEAP32[(i+64|0)>>2];a=12;break;case 35:a=36;break;case 36:k=HEAP32[(k+68|0)>>2];a=10;break;case 37:b=0;a=38;break;case 38:return b;default:assert(0,"bad label: "+a)}}_UnboundVariablesInPattern.X=1;
function _EnvRtnArgCount(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;c=0;a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:c=c+1|0;f=5;break;case 5:a=HEAP32[(a+12|0)>>2];f=3;break;case 6:return c;default:assert(0,"bad label: "+f)}}
function _EnvRtnLexeme(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j;d=h;e=f;g=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:if(0!=(j|0))a=4;else{var k=0;a=5}break;case 4:k=(g|0)<(e|0);a=5;break;case 5:a=k?6:8;break;case 6:g=g+1|0;a=7;break;case 7:j=HEAP32[(j+12|0)>>2];a=3;break;case 8:a=0==(j|0)?9:10;break;case 9:_NonexistantError(d,
STRING_TABLE.__str50|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=0;a=15;break;case 10:_EvaluateExpression(d,j,i);a=2==(HEAPU16[(i+4|0)>>1]&65535|0)?13:11;break;case 11:a=8==(HEAPU16[(i+4|0)>>1]&65535|0)?13:12;break;case 12:a=3==(HEAPU16[(i+4|0)>>1]&65535|0)?13:14;break;case 13:b=HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2];a=15;break;case 14:_ExpectedTypeError3(d,STRING_TABLE.__str50|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e,STRING_TABLE.__str151|0);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=0;a=15;break;case 15:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_EnvRtnLexeme.X=1;
function _NonexistantError(h,f,c,a){_PrintErrorID(h,STRING_TABLE.__str656|0,3,0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,f);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str42|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,c);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str43|0);_PrintLongInteger(h,STRING_TABLE.__str757|0,a);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str45|0)}
function _ExpectedTypeError3(h,f,c,a,b){_PrintErrorID(h,STRING_TABLE.__str656|0,6,0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,f);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str42|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,c);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str43|0);_PrintLongInteger(h,STRING_TABLE.__str757|0,a);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str44|0);_EnvPrintRouter(h,
STRING_TABLE.__str757|0,b);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str35|0)}
function _EnvRtnDouble(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j;d=h;e=f;g=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:if(0!=(j|0))a=4;else{var k=0;a=5}break;case 4:k=(g|0)<(e|0);a=5;break;case 5:a=k?6:8;break;case 6:g=g+1|0;a=7;break;case 7:j=HEAP32[(j+12|0)>>2];a=3;break;case 8:a=0==(j|0)?9:10;break;case 9:_NonexistantError(d,
STRING_TABLE.__str252|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=1;a=16;break;case 10:_EvaluateExpression(d,j,i);a=0==(HEAPU16[(i+4|0)>>1]&65535|0)?11:12;break;case 11:a=HEAP32[(i+8|0)>>2]+16|0;b=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);a=16;break;case 12:a=1==(HEAPU16[(i+4|0)>>1]&65535|0)?13:14;break;case 13:b=HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>
2]|0;a=16;break;case 14:a=15;break;case 15:_ExpectedTypeError3(d,STRING_TABLE.__str252|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e,STRING_TABLE.__str353|0);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=1;a=16;break;case 16:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_EnvRtnDouble.X=1;
function _EnvRtnLong(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j;d=h;e=f;g=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:if(0!=(j|0))a=4;else{var k=0;a=5}break;case 4:k=(g|0)<(e|0);a=5;break;case 5:a=k?6:8;break;case 6:g=g+1|0;a=7;break;case 7:j=HEAP32[(j+12|0)>>2];a=3;break;case 8:a=0==(j|0)?9:10;break;case 9:_NonexistantError(d,
STRING_TABLE.__str454|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=1;a=16;break;case 10:_EvaluateExpression(d,j,i);a=0==(HEAPU16[(i+4|0)>>1]&65535|0)?11:12;break;case 11:a=HEAP32[(i+8|0)>>2]+16|0;b=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0])&-1;a=16;break;case 12:a=1==(HEAPU16[(i+4|0)>>1]&65535|0)?13:14;break;case 13:b=HEAP32[(HEAP32[(i+8|0)>>2]+16|
0)>>2];a=16;break;case 14:a=15;break;case 15:_ExpectedTypeError3(d,STRING_TABLE.__str454|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],e,STRING_TABLE.__str353|0);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=1;a=16;break;case 16:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_EnvRtnLong.X=1;
function _EnvRtnUnknown(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;i=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:if(0!=(j|0))a=4;else{var k=0;a=5}break;case 4:k=(i|0)<(e|0);a=5;break;case 5:a=k?6:8;break;case 6:i=i+1|0;a=7;break;case 7:j=HEAP32[(j+12|0)>>2];a=3;break;case 8:a=0==(j|0)?9:10;break;case 9:_NonexistantError(d,STRING_TABLE.__str555|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+4|
0)>>2]|0)>>2]+16|0)>>2],e);_SetHaltExecution(d,1);_SetEvaluationError(d,1);b=0;a=11;break;case 10:_EvaluateExpression(d,j,g);b=g;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_EnvRtnUnknown.X=1;
function _EnvArgCountCheck(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;k=_EnvRtnArgCount(e);b=0==(i|0)?3:6;break;case 3:b=(k|0)==(j|0)?4:5;break;case 4:d=k;b=17;break;case 5:b=16;break;case 6:b=1==(i|0)?7:10;break;case 7:b=(k|0)>=(j|0)?8:9;break;case 8:d=k;b=17;break;case 9:b=15;break;case 10:b=2==(i|0)?11:14;break;case 11:b=(k|0)<=(j|0)?12:13;break;case 12:d=k;b=17;break;case 13:b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:_ExpectedCountError(e,g,i,j);_SetHaltExecution(e,
1);_SetEvaluationError(e,1);d=-1;b=17;break;case 17:return d;default:assert(0,"bad label: "+b)}}_EnvArgCountCheck.X=1;
function _ExpectedCountError(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;b=f;e=c;g=a;_PrintErrorID(d,STRING_TABLE.__str656|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(d,STRING_TABLE.__str757|0,b);b=0==(e|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str2979|0);b=11;break;case 4:b=1==(e|0)?5:6;break;case 5:_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str959|0);b=10;break;case 6:b=2==(e|0)?7:8;break;
case 7:_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str3080|0);b=9;break;case 8:_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str3181|0);b=9;break;case 9:b=10;break;case 10:b=11;break;case 11:_PrintLongInteger(d,STRING_TABLE.__str757|0,g);_EnvPrintRouter(d,STRING_TABLE.__str757|0,STRING_TABLE.__str32|0);return;default:assert(0,"bad label: "+b)}}
function _EnvArgRangeCheck(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;k=_EnvRtnArgCount(e);b=(k|0)<(i|0)?4:3;break;case 3:b=(k|0)>(j|0)?4:5;break;case 4:_PrintErrorID(e,STRING_TABLE.__str656|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(e,STRING_TABLE.__str757|0,g);_EnvPrintRouter(e,STRING_TABLE.__str757|0,STRING_TABLE.__str959|0);_PrintLongInteger(e,STRING_TABLE.__str757|0,i);_EnvPrintRouter(e,STRING_TABLE.__str757|0,STRING_TABLE.__str1060|
0);_PrintLongInteger(e,STRING_TABLE.__str757|0,j);_EnvPrintRouter(e,STRING_TABLE.__str757|0,STRING_TABLE.__str1161|0);_SetHaltExecution(e,1);_SetEvaluationError(e,1);d=-1;b=6;break;case 5:d=k;b=6;break;case 6:return d;default:assert(0,"bad label: "+b)}}_EnvArgRangeCheck.X=1;
function _EnvArgTypeCheck(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;_EnvRtnUnknown(g,j,l);d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:e=0;d=63;break;case 4:d=(HEAPU16[(l+4|0)>>1]&65535|0)==(k|0)?5:6;break;case 5:e=1;d=63;break;case 6:d=180==(k|0)?7:10;break;case 7:d=1==(HEAPU16[(l+4|0)>>1]&65535|0)?9:8;break;case 8:d=0==(HEAPU16[(l+4|0)>>1]&65535|0)?9:10;break;case 9:e=1;d=63;break;case 10:d=181==(k|0)?11:14;break;case 11:d=
2==(HEAPU16[(l+4|0)>>1]&65535|0)?13:12;break;case 12:d=3==(HEAPU16[(l+4|0)>>1]&65535|0)?13:14;break;case 13:e=1;d=63;break;case 14:d=181==(k|0)?16:15;break;case 15:d=2==(k|0)?16:18;break;case 16:d=8==(HEAPU16[(l+4|0)>>1]&65535|0)?17:18;break;case 17:e=1;d=63;break;case 18:d=8==(k|0)?19:22;break;case 19:d=8==(HEAPU16[(l+4|0)>>1]&65535|0)?21:20;break;case 20:d=2==(HEAPU16[(l+4|0)>>1]&65535|0)?21:22;break;case 21:e=1;d=63;break;case 22:d=182==(k|0)?23:27;break;case 23:d=7==(HEAPU16[(l+4|0)>>1]&65535|
0)?26:24;break;case 24:d=8==(HEAPU16[(l+4|0)>>1]&65535|0)?26:25;break;case 25:d=2==(HEAPU16[(l+4|0)>>1]&65535|0)?26:27;break;case 26:e=1;d=63;break;case 27:d=1==(HEAPU16[(l+4|0)>>1]&65535|0)?28:30;break;case 28:d=0==(k|0)?29:30;break;case 29:HEAP16[(l+4|0)>>1]=0;d=_EnvAddDouble(g,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]|0);HEAP32[(l+8|0)>>2]=d;e=1;d=63;break;case 30:d=0==(HEAPU16[(l+4|0)>>1]&65535|0)?31:33;break;case 31:d=1==(k|0)?32:33;break;case 32:HEAP16[(l+4|0)>>1]=1;d=g;e=HEAP32[(l+8|0)>>2]+16|0;
e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0])&-1;d=_EnvAddLong(d,e);HEAP32[(l+8|0)>>2]=d;e=1;d=63;break;case 33:d=0==(k|0)?34:35;break;case 34:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1262|0);d=62;break;case 35:d=1==(k|0)?36:37;break;case 36:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1363|0);d=61;break;case 37:d=2==(k|0)?38:39;break;case 38:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1464|0);d=60;break;case 39:d=3==(k|0)?40:41;break;case 40:_ExpectedTypeError1(g,
i,j,STRING_TABLE.__str1565|0);d=59;break;case 41:d=4==(k|0)?42:43;break;case 42:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1666|0);d=58;break;case 43:d=180==(k|0)?44:45;break;case 44:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1767|0);d=57;break;case 45:d=181==(k|0)?46:47;break;case 46:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1868|0);d=56;break;case 47:d=8==(k|0)?48:49;break;case 48:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str1969|0);d=55;break;case 49:d=7==(k|0)?50:51;break;case 50:_ExpectedTypeError1(g,
i,j,STRING_TABLE.__str2070|0);d=54;break;case 51:d=182==(k|0)?52:53;break;case 52:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str2171|0);d=53;break;case 53:d=54;break;case 54:d=55;break;case 55:d=56;break;case 56:d=57;break;case 57:d=58;break;case 58:d=59;break;case 59:d=60;break;case 60:d=61;break;case 61:d=62;break;case 62:_SetHaltExecution(g,1);_SetEvaluationError(g,1);e=0;d=63;break;case 63:return e;default:assert(0,"bad label: "+d)}}_EnvArgTypeCheck.X=1;
function _ExpectedTypeError1(h,f,c,a){_PrintErrorID(h,STRING_TABLE.__str656|0,5,0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,f);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str33|0);_PrintLongInteger(h,STRING_TABLE.__str757|0,c);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str34|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,a);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str35|0)}
function _GetNumericArgument(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;i=h;j=f;k=c;l=a;m=b;n=d;e=HEAPU16[(j|0)>>1]&65535;e=0==(e|0)||1==(e|0)?3:4;break;case 3:o=HEAP16[(j|0)>>1];p=HEAP32[(j+4|0)>>2];e=5;break;case 4:_EvaluateExpression(i,j,l);o=HEAP16[(l+4|0)>>1];p=HEAP32[(l+8|0)>>2];e=5;break;case 5:e=0!=(o&65535|0)?6:8;break;case 6:e=1!=(o&65535|0)?7:8;break;case 7:_ExpectedTypeError1(i,k,n,STRING_TABLE.__str1767|0);_SetHaltExecution(i,1);_SetEvaluationError(i,1);HEAP16[(l+
4|0)>>1]=1;g=_EnvAddLong(i,0);HEAP32[(l+8|0)>>2]=g;g=0;e=12;break;case 8:e=0!=(m|0)?9:11;break;case 9:e=1==(o&65535|0)?10:11;break;case 10:o=0;p=_EnvAddDouble(i,HEAP32[(p+16|0)>>2]|0);e=11;break;case 11:HEAP16[(l+4|0)>>1]=o;HEAP32[(l+8|0)>>2]=p;g=1;e=12;break;case 12:return g;default:assert(0,"bad label: "+e)}}_GetNumericArgument.X=1;
function _GetLogicalName(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;b=f;e=c;_EnvRtnUnknown(d,b,i);b=2==(HEAPU16[(i+4|0)>>1]&65535|0)?5:3;break;case 3:b=3==(HEAPU16[(i+4|0)>>1]&65535|0)?5:4;break;case 4:b=8==(HEAPU16[(i+4|0)>>1]&65535|0)?5:9;break;case 5:g=HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2];b=0==(_strcmp(g,STRING_TABLE.__str2272|0)|0)?7:6;break;case 6:b=0==(_strcmp(g,
STRING_TABLE.__str2373|0)|0)?7:8;break;case 7:g=e;b=8;break;case 8:b=16;break;case 9:b=0==(HEAPU16[(i+4|0)>>1]&65535|0)?10:11;break;case 10:b=g=d;var j=HEAP32[(i+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);b=_FloatToString(b,j);g=_EnvAddSymbol(g,b)+16|0;g=HEAP32[g>>2];b=15;break;case 11:b=1==(HEAPU16[(i+4|0)>>1]&65535|0)?12:13;break;case 12:g=d;b=_LongIntegerToString(d,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2]);g=_EnvAddSymbol(g,b)+16|0;g=HEAP32[g>>
2];b=14;break;case 13:g=0;b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:return h=g,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetLogicalName.X=1;
function _GetFileName(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;_EnvRtnUnknown(e,i,j);b=3!=(HEAPU16[(j+4|0)>>1]&65535|0)?3:5;break;case 3:b=2!=(HEAPU16[(j+4|0)>>1]&65535|0)?4:5;break;case 4:_ExpectedTypeError1(e,g,i,STRING_TABLE.__str2474|0);d=0;b=6;break;case 5:d=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];b=6;break;case 6:return h=d,STACKTOP=a,h;default:assert(0,
"bad label: "+b)}}function _OpenErrorMessage(h,f,c){_PrintErrorID(h,STRING_TABLE.__str656|0,2,0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str858|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,f);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str2575|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,c);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str2676|0)}
function _GetModuleName(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m;g=h;i=f;j=c;k=a;HEAP32[k>>2]=0;_EnvRtnUnknown(g,j,l);d=2!=(HEAPU16[(l+4|0)>>1]&65535|0)?3:4;break;case 3:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str2777|0);HEAP32[k>>2]=1;e=0;d=9;break;case 4:m=d=_EnvFindDefmodule(g,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);d=0==(d|0)?5:8;break;case 5:d=0!=(_strcmp(STRING_TABLE.__str2878|
0,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2])|0)?6:7;break;case 6:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str2777|0);HEAP32[k>>2]=1;d=7;break;case 7:e=0;d=9;break;case 8:e=m;d=9;break;case 9:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_GetModuleName.X=1;
function _GetConstructName(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=1!=(_EnvRtnArgCount(e)|0)?3:4;break;case 3:_ExpectedCountError(e,g,0,1);d=0;b=7;break;case 4:_EnvRtnUnknown(e,1,j);b=2!=(HEAPU16[(j+4|0)>>1]&65535|0)?5:6;break;case 5:_ExpectedTypeError1(e,g,1,i);d=0;b=7;break;case 6:d=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];b=7;break;case 7:return h=d,STACKTOP=
a,h;default:assert(0,"bad label: "+b)}}
function _CheckFunctionArgCount(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n=b;g=h;i=f;j=c;k=a;HEAP8[n|0]=48;HEAP8[n+1|0]=0;d=0==(j|0)?3:4;break;case 3:e=1;d=19;break;case 4:d=0!=(_isdigit(HEAP8[j|0]<<24>>24)|0)?5:6;break;case 5:HEAP8[n|0]=HEAP8[j|0];l=_atoi(n|0);d=7;break;case 6:l=-1;d=7;break;case 7:d=0!=(_isdigit(HEAP8[j+1|0]<<24>>24)|0)?8:9;break;case 8:HEAP8[n|
0]=HEAP8[j+1|0];m=_atoi(n|0);d=10;break;case 9:m=1E4;d=10;break;case 10:d=(l|0)==(m|0)?11:14;break;case 11:d=(k|0)!=(l|0)?12:13;break;case 12:_ExpectedCountError(g,i,0,l);_SetEvaluationError(g,1);e=0;d=19;break;case 13:e=1;d=19;break;case 14:d=(k|0)<(l|0)?15:16;break;case 15:_ExpectedCountError(g,i,1,l);_SetEvaluationError(g,1);e=0;d=19;break;case 16:d=(k|0)>(m|0)?17:18;break;case 17:_ExpectedCountError(g,i,2,m);_SetEvaluationError(g,1);e=0;d=19;break;case 18:e=1;d=19;break;case 19:return h=e,STACKTOP=
b,h;default:assert(0,"bad label: "+d)}}_CheckFunctionArgCount.X=1;function _ExpectedTypeError2(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=_FindFunction(b,d);a=0==(g|0)?3:4;break;case 3:a=5;break;case 4:a=_GetNthRestriction(g,e);a=_GetArgumentTypeName(a);_ExpectedTypeError1(b,d,e,a);a=5;break;case 5:return;default:assert(0,"bad label: "+a)}}
function _GetFactOrInstanceArgument(h,f,c,a){var b=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;_EnvRtnUnknown(g,i,j);d=6==(HEAPU16[(j+4|0)>>1]&65535|0)?4:3;break;case 3:d=7==(HEAPU16[(j+4|0)>>1]&65535|0)?4:5;break;case 4:e=HEAP32[(j+8|0)>>2];d=17;break;case 5:d=1==(HEAPU16[(j+4|0)>>1]&65535|0)?6:9;break;case 6:l=d=_FindIndexedFact(g,HEAP32[(HEAP32[(j+8|0)>>2]+16|
0)>>2]);d=0==(d|0)?7:8;break;case 7:d=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];_sprintf(m|0,STRING_TABLE.__str36|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));_CantFindItemErrorMessage(g,STRING_TABLE.__str37|0,m|0);d=8;break;case 8:e=l;d=17;break;case 9:d=8==(HEAPU16[(j+4|0)>>1]&65535|0)?11:10;break;case 10:d=2==(HEAPU16[(j+4|0)>>1]&65535|0)?11:14;break;case 11:l=d=_FindInstanceBySymbol(g,HEAP32[(j+8|0)>>2]);d=0==(d|0)?12:13;break;
case 12:_CantFindItemErrorMessage(g,STRING_TABLE.__str38|0,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);d=13;break;case 13:e=l;d=17;break;case 14:d=15;break;case 15:d=16;break;case 16:_ExpectedTypeError2(g,k,i);e=0;d=17;break;case 17:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_GetFactOrInstanceArgument.X=1;
function _IllegalLogicalNameMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str39|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str40|0);_EnvPrintRouter(h,STRING_TABLE.__str757|0,f);_EnvPrintRouter(h,STRING_TABLE.__str757|0,STRING_TABLE.__str41|0)}
function _InitializeBloadData(h){_AllocateEnvironmentData(h,38,32,0);_AddEnvironmentCleanupFunction(h,STRING_TABLE.__str92|0,22,-1500);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]|0)>>2]=STRING_TABLE.__str193|0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+4|0)>>2]=STRING_TABLE.__str294|0}
function _DeallocateBloadData(h){_DeallocateCallList(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+16|0)>>2]);_DeallocateCallList(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+20|0)>>2]);_DeallocateCallList(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+24|0)>>2]);_DeallocateCallList(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+28|0)>>2])}
function _EnvBload(h,f){var c=STACKTOP;STACKTOP+=52;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+4,j=c+8,k=c+12,l=c+32,m,n,o,p;d=h;e=f;a=0==(_GenOpenReadBinary(d,STRING_TABLE.__str92|0,e)|0)?3:4;break;case 3:b=0;a=63;break;case 4:a=d;var q=k|0,r=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]|0)>>2])+1|0;_GenReadBinary(a,q,r);a=0!=(_strcmp(k|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]|0)>>2])|
0)?5:6;break;case 5:_PrintErrorID(d,STRING_TABLE.__str395|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str597|0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,e);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str698|0);_GenCloseBinary(d);b=0;a=63;break;case 6:a=d;q=k|0;r=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+4|0)>>2])+1|0;_GenReadBinary(a,q,r);a=0!=(_strcmp(k|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+4|0)>>2])|0)?7:8;break;case 7:_PrintErrorID(d,STRING_TABLE.__str395|
0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str597|0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,e);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str799|0);_GenCloseBinary(d);b=0;a=63;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+12|0)>>2]|0)?9:12;break;case 9:a=0==(_ClearBload(d)|0)?10:11;break;case 10:_GenCloseBinary(d);b=0;a=63;break;case 11:a=12;break;case 12:a=0==(_ClearReady(d)|0)?13:14;break;case 13:_GenCloseBinary(d);_EnvPrintRouter(d,STRING_TABLE.__str496|
0,STRING_TABLE.__str8100|0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str9101|0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str10102|0);_EnvPrintRouter(d,STRING_TABLE.__str496|0,STRING_TABLE.__str11103|0);b=0;a=63;break;case 14:n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+16|0)>>2];a=15;break;case 15:a=0!=(n|0)?16:21;break;case 16:a=0!=HEAP16[(n+16|0)>>1]<<16>>16?17:18;break;case 17:FUNCTION_TABLE[HEAP32[(n+4|0)>>2]](d);a=19;break;case 18:FUNCTION_TABLE[HEAP32[(n+
4|0)>>2]]();a=19;break;case 19:a=20;break;case 20:n=HEAP32[(n+12|0)>>2];a=15;break;case 21:a=_ReadNeededFunctions(d,g,j);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+8|0)>>2]=a;a=0!=(HEAP32[j>>2]|0)?22:23;break;case 22:_GenCloseBinary(d);_AbortBload(d);b=0;a=63;break;case 23:_ReadNeededAtomicValues(d);_AllocateExpressions(d);_GenReadBinary(d,l|0,20);a=24;break;case 24:a=0!=(_strncmp(l|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]|0)>>2],20)|0)?25:39;break;case 25:o=0;m=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+156|0)>>2]|0)>>2];a=26;break;case 26:a=0!=(m|0)?27:33;break;case 27:a=0==(_strncmp(HEAP32[(m|0)>>2],l|0,20)|0)?28:31;break;case 28:a=0!=(HEAP32[(m+8|0)>>2]|0)?29:30;break;case 29:FUNCTION_TABLE[HEAP32[(m+8|0)>>2]](d);o=1;a=30;break;case 30:a=33;break;case 31:a=32;break;case 32:m=HEAP32[(m+36|0)>>2];a=26;break;case 33:a=0!=(o|0)?37:34;break;case 34:_GenReadBinary(d,i,4);_GetSeekCurBinary(d,HEAP32[i>>2]);a=0!=(HEAP32[i>>2]|0)?35:36;break;case 35:_EnvPrintRouter(d,STRING_TABLE.__str12104|0,
STRING_TABLE.__str13105|0);_EnvPrintRouter(d,STRING_TABLE.__str12104|0,l|0);_EnvPrintRouter(d,STRING_TABLE.__str12104|0,STRING_TABLE.__str14106|0);a=36;break;case 36:a=37;break;case 37:a=38;break;case 38:_GenReadBinary(d,l|0,20);a=24;break;case 39:_RefreshExpressions(d);_ReadNeededConstraints(d);_GenReadBinary(d,l|0,20);a=40;break;case 40:a=0!=(_strncmp(l|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]|0)>>2],20)|0)?41:53;break;case 41:p=0;m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+156|0)>>2]|0)>>2];
a=42;break;case 42:a=0!=(m|0)?43:49;break;case 43:a=0==(_strncmp(HEAP32[(m|0)>>2],l|0,20)|0)?44:47;break;case 44:a=0!=(HEAP32[(m+12|0)>>2]|0)?45:46;break;case 45:FUNCTION_TABLE[HEAP32[(m+12|0)>>2]](d);p=1;a=46;break;case 46:a=49;break;case 47:a=48;break;case 48:m=HEAP32[(m+36|0)>>2];a=42;break;case 49:a=0!=(p|0)?51:50;break;case 50:_GenReadBinary(d,i,4);_GetSeekCurBinary(d,HEAP32[i>>2]);a=51;break;case 51:a=52;break;case 52:_GenReadBinary(d,l|0,20);a=40;break;case 53:_GenCloseBinary(d);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+152|0)>>2]+8|0)>>2]|0)?54:55;break;case 54:_genlongfree(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+8|0)>>2],HEAP32[g>>2]<<2|0);a=55;break;case 55:_FreeAtomicValueStorage(d);n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+20|0)>>2];a=56;break;case 56:a=0!=(n|0)?57:62;break;case 57:a=0!=HEAP16[(n+16|0)>>1]<<16>>16?58:59;break;case 58:FUNCTION_TABLE[HEAP32[(n+4|0)>>2]](d);a=60;break;case 59:FUNCTION_TABLE[HEAP32[(n+4|0)>>2]]();a=60;break;case 60:a=61;break;case 61:n=HEAP32[(n+12|0)>>
2];a=56;break;case 62:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+152|0)>>2]+12|0)>>2]=1;_EnvAddClearFunction(d,STRING_TABLE.__str92|0,24,1E4);b=1;a=63;break;case 63:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_EnvBload.X=1;function _BloadOutOfMemoryFunction(){return 1}function _Bloaded(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+12|0)>>2]}
function _ClearBload(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g;a=h;g=0;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+152|0)>>2]+24|0)>>2];f=3;break;case 3:f=0!=(d|0)?4:13;break;case 4:f=0!=HEAP16[(d+16|0)>>1]<<16>>16?5:6;break;case 5:e=FUNCTION_TABLE[HEAP32[(d+4|0)>>2]](a);f=7;break;case 6:e=FUNCTION_TABLE[HEAP32[(d+4|0)>>2]]();f=7;break;case 7:f=0==(e|0)?8:11;break;case 8:f=0!=(g|0)?10:9;break;case 9:_PrintErrorID(a,STRING_TABLE.__str395|0,5,0);_EnvPrintRouter(a,STRING_TABLE.__str496|0,STRING_TABLE.__str17109|
0);f=10;break;case 10:_EnvPrintRouter(a,STRING_TABLE.__str496|0,STRING_TABLE.__str18110|0);_EnvPrintRouter(a,STRING_TABLE.__str496|0,HEAP32[(d|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str496|0,STRING_TABLE.__str19111|0);g=1;f=11;break;case 11:f=12;break;case 12:d=HEAP32[(d+12|0)>>2];f=3;break;case 13:f=1==(g|0)?14:15;break;case 14:_EnvPrintRouter(a,STRING_TABLE.__str496|0,STRING_TABLE.__str20112|0);c=0;f=22;break;case 15:b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+156|0)>>2]|0)>>2];f=16;break;case 16:f=
0!=(b|0)?17:21;break;case 17:f=0!=(HEAP32[(b+16|0)>>2]|0)?18:19;break;case 18:FUNCTION_TABLE[HEAP32[(b+16|0)>>2]](a);f=19;break;case 19:f=20;break;case 20:b=HEAP32[(b+36|0)>>2];f=16;break;case 21:_ClearBloadedExpressions(a);_ClearBloadedConstraints(a);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+152|0)>>2]+12|0)>>2]=0;_EnvRemoveClearFunction(a,STRING_TABLE.__str92|0);c=1;f=22;break;case 22:return c;default:assert(0,"bad label: "+f)}}_ClearBload.X=1;
function _ReadNeededFunctions(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l=a,m,n,o,p,q;e=h;g=f;i=c;q=0;_GenReadBinary(e,g,4);_GenReadBinary(e,l,4);b=0==(HEAP32[g>>2]|0)?3:4;break;case 3:d=HEAP32[i>>2]=0;b=15;break;case 4:j=_genlongalloc(e,HEAP32[l>>2]);_GenReadBinary(e,j,HEAP32[l>>2]);m=HEAP32[g>>2]<<2|0;o=_genlongalloc(e,m);k=j;n=p=0;b=5;break;case 5:b=(n|0)<(HEAP32[g>>
2]|0)?6:12;break;case 6:p=b=_FastFindFunction(e,k,p);b=0==(b|0)?7:10;break;case 7:b=0!=(q|0)?9:8;break;case 8:_PrintErrorID(e,STRING_TABLE.__str395|0,6,0);_EnvPrintRouter(e,STRING_TABLE.__str496|0,STRING_TABLE.__str21113|0);_EnvPrintRouter(e,STRING_TABLE.__str496|0,STRING_TABLE.__str22114|0);b=9;break;case 9:_EnvPrintRouter(e,STRING_TABLE.__str496|0,STRING_TABLE.__str18110|0);_EnvPrintRouter(e,STRING_TABLE.__str496|0,k);_EnvPrintRouter(e,STRING_TABLE.__str496|0,STRING_TABLE.__str19111|0);q=1;b=10;
break;case 10:HEAP32[(o+(n<<2)|0)>>2]=p;b=_strlen(k)+1|0;k=k+b|0;b=11;break;case 11:n=n+1|0;b=5;break;case 12:_genlongfree(e,j,HEAP32[l>>2]);b=0!=(q|0)?13:14;break;case 13:_genlongfree(e,o,m);o=0;b=14;break;case 14:HEAP32[i>>2]=q;d=o;b=15;break;case 15:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ReadNeededFunctions.X=1;
function _AbortBload(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+152|0)>>2]+28|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:9;break;case 4:f=0!=HEAP16[(a+16|0)>>1]<<16>>16?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]](c);f=7;break;case 6:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]]();f=7;break;case 7:f=8;break;case 8:a=HEAP32[(a+12|0)>>2];f=3;break;case 9:return;default:assert(0,"bad label: "+f)}}
function _BloadandRefresh(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p;d=h;e=f;g=c;i=a;b=0==(e|0)?3:4;break;case 3:b=25;break;case 4:p=_EnvSetOutOfMemoryFunction(d,26);m=e;b=5;break;case 5:o=m*g|0;l=_genlongalloc(d,o);b=0==(l|0)?6:12;break;case 6:b=0==((m|0)/2&-1|0)?7:10;break;case 7:b=1==(FUNCTION_TABLE[p](d,o)|0)?8:9;break;case 8:_EnvSetOutOfMemoryFunction(d,p);b=25;break;case 9:b=11;break;case 10:m=(m|0)/2&-1;b=11;break;case 11:b=12;break;case 12:b=13;break;case 13:b=0==
(l|0)?5:14;break;case 14:_EnvSetOutOfMemoryFunction(d,p);j=0;b=15;break;case 15:b=(m|0)>(e-j|0)?16:17;break;case 16:var q=e-j|0;b=18;break;case 17:q=m;b=18;break;case 18:n=q;_GenReadBinary(d,l,n*g|0);k=0;b=19;break;case 19:b=(k|0)<(n|0)?20:22;break;case 20:FUNCTION_TABLE[i](d,l+(g*k|0)|0,j);b=21;break;case 21:k=k+1|0;j=j+1|0;b=19;break;case 22:b=23;break;case 23:b=(j|0)<(e|0)?15:24;break;case 24:_genlongfree(d,l,o);b=25;break;case 25:return;default:assert(0,"bad label: "+b)}}_BloadandRefresh.X=1;
function _AddBeforeBloadFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+16|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+16|0)>>2]=f}function _AddAfterBloadFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+20|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+20|0)>>2]=f}
function _AddClearBloadReadyFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+24|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+24|0)>>2]=f}function _AddAbortBloadFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+28|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+28|0)>>2]=f}
function _CannotLoadWithBloadMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str395|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str496|0,STRING_TABLE.__str15107|0);_EnvPrintRouter(h,STRING_TABLE.__str496|0,f);_EnvPrintRouter(h,STRING_TABLE.__str496|0,STRING_TABLE.__str16108|0)}
function _BloadCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str92|0,0,1)|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=_GetFileName(a,STRING_TABLE.__str92|0,1);f=0!=(b|0)?5:6;break;case 5:c=_EnvBload(a,b);f=7;break;case 6:c=0;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _FastFindFunction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;a=h;d=f;e=c;g=_GetFunctionList(a);a=0==(g|0)?3:4;break;case 3:b=0;a=15;break;case 4:a=0!=(e|0)?5:6;break;case 5:i=HEAP32[(e+32|0)>>2];a=7;break;case 6:i=g;a=7;break;case 7:a=8;break;case 8:a=0!=(_strcmp(d,HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2])|0)?9:14;break;case 9:i=HEAP32[(i+32|0)>>2];a=(i|0)==(e|0)?10:11;break;case 10:b=0;a=15;break;case 11:a=0==(i|0)?12:13;break;case 12:i=g;a=13;break;case 13:a=8;break;case 14:b=i;a=
15;break;case 15:return b;default:assert(0,"bad label: "+a)}}_FastFindFunction.X=1;
function _BasicMathFunctionDefinitions(h){_AllocateEnvironmentData(h,6,4,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+24|0)>>2]|0)>>2]=1;_EnvDefineFunction2(h,STRING_TABLE.__str115|0,110,28,STRING_TABLE.__str1116|0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str3118|0,110,30,STRING_TABLE.__str4119|0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str5120|0,110,32,STRING_TABLE.__str6121|0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str7122|0,110,34,STRING_TABLE.__str8123|
0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str9124|0,108,36,STRING_TABLE.__str10125|0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str11126|0,98,38,STRING_TABLE.__str12127|0,STRING_TABLE.__str13128|0);_EnvDefineFunction2(h,STRING_TABLE.__str14129|0,98,40,STRING_TABLE.__str15130|0,STRING_TABLE.__str16131|0);_EnvDefineFunction2(h,STRING_TABLE.__str17132|0,108,42,STRING_TABLE.__str18133|0,STRING_TABLE.__str19134|0);_EnvDefineFunction2(h,STRING_TABLE.__str20135|
0,100,44,STRING_TABLE.__str21136|0,STRING_TABLE.__str19134|0);_EnvDefineFunction2(h,STRING_TABLE.__str22137|0,110,46,STRING_TABLE.__str23138|0,STRING_TABLE.__str19134|0);_EnvDefineFunction2(h,STRING_TABLE.__str24139|0,110,48,STRING_TABLE.__str25140|0,STRING_TABLE.__str2117|0);_EnvDefineFunction2(h,STRING_TABLE.__str26141|0,110,50,STRING_TABLE.__str27142|0,STRING_TABLE.__str2117|0)}
function _AdditionFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l;b=h;d=f;i=g=e=0;l=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:a=0!=(j|0)?4:14;break;case 4:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str115|0,k,i,l)|0)?6:5;break;case 5:j=0;a=7;break;case 6:j=HEAP32[(j+12|0)>>2];a=7;break;case 7:a=0!=(i|0)?8:9;break;
case 8:a=HEAP32[(k+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);e+=a;a=13;break;case 9:a=1==(HEAPU16[(k+4|0)>>1]&65535|0)?10:11;break;case 10:g=g+HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]|0;a=12;break;case 11:e=g|0;i=HEAP32[(k+8|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0]);e+=i;i=1;a=12;break;case 12:a=13;break;case 13:l=l+1|0;a=3;break;case 14:a=0!=(i|0)?15:16;break;case 15:HEAP16[(d+4|0)>>1]=0;a=_EnvAddDouble(b,
e);HEAP32[(d+8|0)>>2]=a;a=17;break;case 16:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,g);HEAP32[(d+8|0)>>2]=a;a=17;break;case 17:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_AdditionFunction.X=1;
function _MultiplicationFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l;b=h;d=f;g=e=1;i=0;l=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=3;break;case 3:a=0!=(j|0)?4:14;break;case 4:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str3118|0,k,i,l)|0)?6:5;break;case 5:j=0;a=7;break;case 6:j=HEAP32[(j+12|0)>>2];a=7;break;case 7:a=0!=(i|
0)?8:9;break;case 8:a=HEAP32[(k+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);e*=a;a=13;break;case 9:a=1==(HEAPU16[(k+4|0)>>1]&65535|0)?10:11;break;case 10:g=g*HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]|0;a=12;break;case 11:e=g|0;i=HEAP32[(k+8|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0]);e*=i;i=1;a=12;break;case 12:a=13;break;case 13:l=l+1|0;a=3;break;case 14:a=0!=(i|0)?15:16;break;case 15:HEAP16[(d+4|0)>>
1]=0;a=_EnvAddDouble(b,e);HEAP32[(d+8|0)>>2]=a;a=17;break;case 16:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,g);HEAP32[(d+8|0)>>2]=a;a=17;break;case 17:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MultiplicationFunction.X=1;
function _SubtractionFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l;b=h;d=f;i=g=e=0;l=1;j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=0!=(j|0)?3:10;break;case 3:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str5120|0,k,i,l)|0)?5:4;break;case 4:j=0;a=6;break;case 5:j=HEAP32[(j+12|0)>>2];a=6;break;case 6:a=1==(HEAPU16[(k+4|0)>>1]&65535|
0)?7:8;break;case 7:g=HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2];a=9;break;case 8:e=HEAP32[(k+8|0)>>2]+16|0;e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]);i=1;a=9;break;case 9:l=l+1|0;a=10;break;case 10:a=11;break;case 11:a=0!=(j|0)?12:22;break;case 12:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str5120|0,k,i,l)|0)?14:13;break;case 13:j=0;a=15;break;case 14:j=HEAP32[(j+12|0)>>2];a=15;break;case 15:a=0!=(i|0)?16:17;break;case 16:a=HEAP32[(k+8|0)>>2]+16|0;a=(tempDoubleI32[0]=
HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);e-=a;a=21;break;case 17:a=1==(HEAPU16[(k+4|0)>>1]&65535|0)?18:19;break;case 18:g=g-HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]|0;a=20;break;case 19:e=g|0;i=HEAP32[(k+8|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0]);e-=i;i=1;a=20;break;case 20:a=21;break;case 21:l=l+1|0;a=11;break;case 22:a=0!=(i|0)?23:24;break;case 23:HEAP16[(d+4|0)>>1]=0;a=_EnvAddDouble(b,e);HEAP32[(d+8|0)>>2]=a;a=25;break;case 24:HEAP16[(d+
4|0)>>1]=1;a=_EnvAddLong(b,g);HEAP32[(d+8|0)>>2]=a;a=25;break;case 25:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SubtractionFunction.X=1;
function _DivisionFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l;b=h;d=f;l=g=e=1;i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+24|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=0!=(j|0)?3:10;break;case 3:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str7122|0,k,i,l)|0)?5:4;break;case 4:j=0;a=6;break;case 5:j=HEAP32[(j+12|0)>>2];
a=6;break;case 6:a=1==(HEAPU16[(k+4|0)>>1]&65535|0)?7:8;break;case 7:g=HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2];a=9;break;case 8:e=HEAP32[(k+8|0)>>2]+16|0;e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]);i=1;a=9;break;case 9:l=l+1|0;a=10;break;case 10:a=11;break;case 11:a=0!=(j|0)?12:28;break;case 12:a=0!=(_GetNumericArgument(b,j,STRING_TABLE.__str7122|0,k,i,l)|0)?14:13;break;case 13:j=0;a=15;break;case 14:j=HEAP32[(j+12|0)>>2];a=15;break;case 15:a=1==(HEAPU16[(k+4|0)>>
1]&65535|0)?16:17;break;case 16:a=0==(HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]|0)?20:21;break;case 17:a=0==(HEAPU16[(k+4|0)>>1]&65535|0)?18:19;break;case 18:a=HEAP32[(k+8|0)>>2]+16|0;a=0==(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0])?20:21;break;case 19:a=21;break;case 20:_DivideByZeroErrorMessage(b,STRING_TABLE.__str7122|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=0;a=_EnvAddDouble(b,1);HEAP32[(d+8|0)>>2]=a;a=31;break;case 21:a=0!=(i|0)?22:
23;break;case 22:a=HEAP32[(k+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);e/=a;a=27;break;case 23:a=1==(HEAPU16[(k+4|0)>>1]&65535|0)?24:25;break;case 24:g=(g|0)/(HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]|0)&-1;a=26;break;case 25:e=g|0;i=HEAP32[(k+8|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0]);e/=i;i=1;a=26;break;case 26:a=27;break;case 27:l=l+1|0;a=11;break;case 28:a=0!=(i|0)?29:30;break;case 29:HEAP16[(d+
4|0)>>1]=0;a=_EnvAddDouble(b,e);HEAP32[(d+8|0)>>2]=a;a=31;break;case 30:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,g);HEAP32[(d+8|0)>>2]=a;a=31;break;case 31:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DivisionFunction.X=1;
function _DivFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i,j;b=h;i=d=1;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0!=(e|0)?3:10;break;case 3:c=0!=(_GetNumericArgument(b,e,STRING_TABLE.__str9124|0,g,0,i)|0)?5:4;break;case 4:e=0;c=6;break;case 5:e=HEAP32[(e+12|0)>>2];c=6;break;case 6:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?7:8;break;case 7:d=
HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];c=9;break;case 8:d=HEAP32[(g+8|0)>>2]+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])&-1;c=9;break;case 9:i=i+1|0;c=10;break;case 10:c=11;break;case 11:c=0!=(e|0)?12:27;break;case 12:c=0!=(_GetNumericArgument(b,e,STRING_TABLE.__str9124|0,g,0,i)|0)?14:13;break;case 13:e=0;c=15;break;case 14:e=HEAP32[(e+12|0)>>2];c=15;break;case 15:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?16:17;break;case 16:j=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];
c=21;break;case 17:c=0==(HEAPU16[(g+4|0)>>1]&65535|0)?18:19;break;case 18:j=HEAP32[(g+8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0])&-1;c=20;break;case 19:j=1;c=20;break;case 20:c=21;break;case 21:c=0==(j|0)?22:23;break;case 22:_DivideByZeroErrorMessage(b,STRING_TABLE.__str9124|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);a=1;c=28;break;case 23:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?24:25;break;case 24:d=(d|0)/(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>
2]|0)&-1;c=26;break;case 25:c=HEAP32[(g+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])&-1;d=(d|0)/(c|0)&-1;c=26;break;case 26:i=i+1|0;c=11;break;case 27:a=d;c=28;break;case 28:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DivFunction.X=1;function _EnvGetAutoFloatDividend(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+24|0)>>2]|0)>>2]}
function _EnvSetAutoFloatDividend(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+24|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+24|0)>>2]|0)>>2]=f;return c}
function _DeallocateBsaveData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+156|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+36|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateBsaveData.X=1;
function _SetAutoFloatDividendCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+24|0)>>2]|0)>>2];c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str11126|0,0,1)|0)?3:4;break;case 3:a=d;c=9;break;case 4:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:7;break;case 5:c=2==(HEAPU16[(e+
4|0)>>1]&65535|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+24|0)>>2]|0)>>2]=0;c=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+24|0)>>2]|0)>>2]=1;c=8;break;case 8:a=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetAutoFloatDividendCommand.X=1;function _GetAutoFloatDividendCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str14129|0,0,0);return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+24|0)>>2]|0)>>2]}
function _IntegerFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str17132|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str17132|0,1,1,d)|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+
c)}}
function _FloatFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str20135|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str20135|0,1,0,d)|0)?5:6;break;case 5:a=0;c=7;break;case 6:c=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);c=
7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AbsFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str22137|0,0,1)|0)?3:4;break;case 3:HEAP16[(b+4|0)>>1]=1;c=_EnvAddLong(a,0);HEAP32[(b+8|0)>>2]=c;c=13;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str22137|0,1,180,b)|0)?5:6;break;case 5:HEAP16[(b+4|0)>>1]=1;c=_EnvAddLong(a,0);HEAP32[(b+8|0)>>2]=c;c=13;break;case 6:c=1==(HEAPU16[(b+4|0)>>1]&65535|0)?7:10;break;case 7:c=0>(HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]|0)?8:9;break;case 8:c=
_EnvAddLong(a,-HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]|0);HEAP32[(b+8|0)>>2]=c;c=9;break;case 9:c=13;break;case 10:c=HEAP32[(b+8|0)>>2]+16|0;c=0>(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])?11:12;break;case 11:c=a;var d=HEAP32[(b+8|0)>>2]+16|0,d=-(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);c=_EnvAddDouble(c,d);HEAP32[(b+8|0)>>2]=c;c=12;break;case 12:c=13;break;case 13:return;default:assert(0,"bad label: "+c)}}_AbsFunction.X=1;
function _MinFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;g=a=_EnvArgCountCheck(b,STRING_TABLE.__str24139|0,1,1);a=-1==(a|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str24139|0,1,180,d)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=
a;a=30;break;case 6:i=2;a=7;break;case 7:a=(i|0)<=(g|0)?8:29;break;case 8:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str24139|0,i,180,e)|0)?9:10;break;case 9:a=30;break;case 10:a=1==(HEAPU16[(d+4|0)>>1]&65535|0)?11:19;break;case 11:a=1==(HEAPU16[(e+4|0)>>1]&65535|0)?12:15;break;case 12:a=(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]|0)>(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=14;break;case 14:a=18;break;case 15:a=
HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(e+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);a=a>j?16:17;break;case 16:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=17;break;case 17:a=18;break;case 18:a=27;break;case 19:a=1==(HEAPU16[(e+4|0)>>1]&65535|0)?20:23;break;case 20:a=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0])>(HEAP32[(HEAP32[(e+8|0)>>2]+
16|0)>>2]|0)?21:22;break;case 21:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=22;break;case 22:a=26;break;case 23:a=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);j=HEAP32[(e+8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);a=a>j?24:25;break;case 24:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=25;break;case 25:a=26;break;case 26:a=
27;break;case 27:a=28;break;case 28:i=i+1|0;a=7;break;case 29:a=30;break;case 30:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MinFunction.X=1;
function _MaxFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;g=a=_EnvArgCountCheck(b,STRING_TABLE.__str26141|0,1,1);a=-1==(a|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str26141|0,1,180,d)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=
a;a=30;break;case 6:i=2;a=7;break;case 7:a=(i|0)<=(g|0)?8:29;break;case 8:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str26141|0,i,180,e)|0)?9:10;break;case 9:a=30;break;case 10:a=1==(HEAPU16[(d+4|0)>>1]&65535|0)?11:19;break;case 11:a=1==(HEAPU16[(e+4|0)>>1]&65535|0)?12:15;break;case 12:a=(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]|0)<(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=14;break;case 14:a=18;break;case 15:a=
HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(e+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);a=a<j?16:17;break;case 16:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=17;break;case 17:a=18;break;case 18:a=27;break;case 19:a=1==(HEAPU16[(e+4|0)>>1]&65535|0)?20:23;break;case 20:a=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0])<(HEAP32[(HEAP32[(e+8|0)>>2]+
16|0)>>2]|0)?21:22;break;case 21:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=22;break;case 22:a=26;break;case 23:a=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);j=HEAP32[(e+8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);a=a<j?24:25;break;case 24:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=25;break;case 25:a=26;break;case 26:a=
27;break;case 27:a=28;break;case 28:i=i+1|0;a=7;break;case 29:a=30;break;case 30:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MaxFunction.X=1;function _InitializeBsaveData(h){_AllocateEnvironmentData(h,39,8,52)}
function _BsaveCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str143|0,0,1)|0)?3:4;break;case 3:c=0;f=9;break;case 4:b=_GetFileName(a,STRING_TABLE.__str143|0,1);f=0!=(b|0)?5:8;break;case 5:f=0!=(_EnvBsave(a,b)|0)?6:7;break;case 6:c=1;f=9;break;case 7:f=8;break;case 8:c=0;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _RestoreBloadCount(h,f){var c;HEAP32[f>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+156|0)>>2]+4|0)>>2]|0)>>2];c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+156|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+156|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+156|0)>>2]+4|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>
2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_RestoreBloadCount.X=1;
function _EnvBsave(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c;d=h;e=f;a=0!=(_Bloaded(d)|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str1144|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str2145|0,STRING_TABLE.__str3146|0);b=0;a=19;break;case 4:g=a=_GenOpen(d,e,STRING_TABLE.__str4147|0);a=0==(a|0)?5:6;break;case 5:_OpenErrorMessage(d,STRING_TABLE.__str143|0,e);b=0;a=19;
break;case 6:_SaveCurrentModule(d);_WriteBinaryHeader(d,g);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2]=0;_InitializeFunctionNeededFlags(d);_InitAtomicValueNeededFlags(d);_FindHashedExpressions(d);_FindNeededItems(d);_SetAtomicValueIndices(d,0);_WriteNeededFunctions(d,g);_WriteNeededAtomicValues(d,g);_GenWrite(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0,4,g);i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+156|0)>>2]|0)>>2];a=7;break;case 7:a=0!=(i|0)?8:12;break;case 8:a=0!=(HEAP32[(i+24|0)>>2]|
0)?9:10;break;case 9:_strncpy(j|0,HEAP32[(i|0)>>2],20);_GenWrite(j|0,20,g);FUNCTION_TABLE[HEAP32[(i+24|0)>>2]](d,g);a=10;break;case 10:a=11;break;case 11:i=HEAP32[(i+36|0)>>2];a=7;break;case 12:_WriteBinaryFooter(d,g);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2]=0;_BsaveHashedExpressions(d,g);i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];_BsaveConstructExpressions(d,g);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2]=i;_WriteNeededConstraints(d,g);i=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+156|0)>>2]|0)>>2];a=13;break;case 13:a=0!=(i|0)?14:18;break;case 14:a=0!=(HEAP32[(i+28|0)>>2]|0)?15:16;break;case 15:_strncpy(j|0,HEAP32[(i|0)>>2],20);_GenWrite(j|0,20,g);FUNCTION_TABLE[HEAP32[(i+28|0)>>2]](d,g);a=16;break;case 16:a=17;break;case 17:i=HEAP32[(i+36|0)>>2];a=13;break;case 18:_WriteBinaryFooter(d,g);_RestoreAtomicValueBuckets(d);_GenClose(d,g);_RestoreCurrentModule(d);b=1;a=19;break;case 19:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_EnvBsave.X=1;
function _WriteBinaryHeader(h,f){var c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]|0)>>2],a=_strlen(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]|0)>>2])+1|0;_GenWrite(c,a,f);c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+4|0)>>2];a=_strlen(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]+4|0)>>2])+1|0;_GenWrite(c,a,f)}
function _InitializeFunctionNeededFlags(h){var f;for(f=2;;)switch(f){case 2:var c;c=_GetFunctionList(h);f=3;break;case 3:f=0!=(c|0)?4:6;break;case 4:HEAP16[(c+30|0)>>1]=0;f=5;break;case 5:c=HEAP32[(c+32|0)>>2];f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _FindNeededItems(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+156|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:8;break;case 4:f=0!=(HEAP32[(a+4|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]](c);f=6;break;case 6:f=7;break;case 7:a=HEAP32[(a+36|0)>>2];f=3;break;case 8:return;default:assert(0,"bad label: "+f)}}
function _WriteNeededFunctions(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4,i;b=h;d=f;HEAP32[g>>2]=0;i=_GetFunctionList(b);a=3;break;case 3:a=0!=(i|0)?4:9;break;case 4:a=0!=HEAP16[(i+30|0)>>1]<<16>>16?5:6;break;case 5:a=HEAP32[g>>2];HEAP32[g>>2]=a+1|0;HEAP16[(i+30|0)>>1]=a&65535;a=7;break;case 6:HEAP16[(i+30|0)>>1]=-1;a=7;break;case 7:a=8;break;case 8:i=HEAP32[(i+32|0)>>2];
a=3;break;case 9:_GenWrite(g,4,d);a=0==(HEAP32[g>>2]|0)?10:11;break;case 10:_GenWrite(g,4,d);a=17;break;case 11:i=_FunctionBinarySize(b);HEAP32[e>>2]=i;_GenWrite(e,4,d);i=_GetFunctionList(b);a=12;break;case 12:a=0!=(i|0)?13:17;break;case 13:a=0<=(HEAP16[(i+30|0)>>1]<<16>>16|0)?14:15;break;case 14:a=_strlen(HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2])+1|0;_GenWrite(HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2],a,d);a=15;break;case 15:a=16;break;case 16:i=HEAP32[(i+32|0)>>2];a=12;break;case 17:STACKTOP=c;return;default:assert(0,
"bad label: "+a)}}_WriteNeededFunctions.X=1;function _WriteBinaryFooter(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_strncpy(c|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+152|0)>>2]|0)>>2],20);_GenWrite(c|0,20,f);STACKTOP=c}
function _SaveBloadCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var g=_genalloc(a,8);c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
g=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:d=g;HEAP32[(d|0)>>2]=b;HEAP32[(d+4|0)>>2]=0;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+156|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+156|0)>>2]+4|0)>>2]=d;c=11;break;case 7:e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+156|0)>>2]+4|0)>>2];c=8;break;case 8:c=0!=(HEAP32[(e+4|0)>>2]|0)?9:10;break;case 9:e=HEAP32[(e+4|0)>>2];c=8;break;case 10:HEAP32[(e+4|0)>>2]=d;c=11;break;case 11:return;default:assert(0,
"bad label: "+c)}}_SaveBloadCount.X=1;
function _MarkNeededItems(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:18;break;case 4:c=HEAPU16[(b|0)>>1]&65535;c=2==(c|0)||3==(c|0)||33==(c|0)||8==(c|0)?5:0==(c|0)?6:1==(c|0)?7:30==(c|0)?8:175==(c|0)?9:10;break;case 5:c=HEAP32[(b+4|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=15;break;case 6:c=HEAP32[(b+4|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=15;break;case 7:c=HEAP32[(b+4|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=15;break;case 8:HEAP16[(HEAP32[(b+
4|0)>>2]+30|0)>>1]=1;c=15;break;case 9:c=15;break;case 10:c=0==(HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(b|0)>>1]&65535)<<2)|0)>>2]|0)?11:12;break;case 11:c=15;break;case 12:c=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(b|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?13:14;break;case 13:c=HEAP32[(b+4|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=14;break;case 14:c=15;break;case 15:c=0!=(HEAP32[(b+8|0)>>2]|0)?16:17;break;case 16:_MarkNeededItems(a,
HEAP32[(b+8|0)>>2]);c=17;break;case 17:b=HEAP32[(b+12|0)>>2];c=3;break;case 18:return;default:assert(0,"bad label: "+c)}}_MarkNeededItems.X=1;
function _AddBinaryItem(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u,v,w,x,y;m=h;n=f;o=c;p=a;q=b;r=d;s=e;t=g;u=i;v=j;y=0;k=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]|0)?3:4;break;case 3:var A=_genalloc(m,40);k=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];A=HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+236|0)>>2]+16|0)>>2];k=5;break;case 5:w=A;HEAP32[(w|0)>>2]=n;HEAP32[(w+4|0)>>2]=p;HEAP32[(w+20|0)>>2]=q;HEAP32[(w+24|0)>>2]=r;HEAP32[(w+28|0)>>2]=s;HEAP32[(w+8|0)>>2]=t;HEAP32[(w+12|0)>>2]=u;HEAP32[(w+16|0)>>2]=v;HEAP32[(w+32|0)>>2]=o;k=0==(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+156|0)>>2]|0)>>2]|0)?6:7;break;case 6:HEAP32[(w+36|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+156|0)>>2]|0)>>
2]=w;l=1;k=17;break;case 7:x=HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+156|0)>>2]|0)>>2];k=8;break;case 8:k=0!=(x|0)?9:10;break;case 9:var z=(o|0)<(HEAP32[(x+32|0)>>2]|0)&1;k=11;break;case 10:z=0;k=11;break;case 11:k=0!=(z|0)?12:13;break;case 12:y=x;x=HEAP32[(x+36|0)>>2];k=8;break;case 13:k=0==(y|0)?14:15;break;case 14:HEAP32[(w+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+156|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+156|0)>>2]|0)>>2]=w;k=16;break;case 15:HEAP32[(w+36|0)>>2]=x;HEAP32[(y+36|0)>>
2]=w;k=16;break;case 16:l=1;k=17;break;case 17:return l;default:assert(0,"bad label: "+k)}}_AddBinaryItem.X=1;function _FunctionBinarySize(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;c=_GetFunctionList(c);f=3;break;case 3:f=0!=(c|0)?4:8;break;case 4:f=0<=(HEAP16[(c+30|0)>>1]<<16>>16|0)?5:6;break;case 5:f=_strlen(HEAP32[(HEAP32[(c|0)>>2]+16|0)>>2])+1|0;a=a+f|0;f=6;break;case 6:f=7;break;case 7:c=HEAP32[(c+32|0)>>2];f=3;break;case 8:return a;default:assert(0,"bad label: "+f)}}
function _EnvFindDefclass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;i=e=0;_SaveCurrentModule(b);c=0!=(_ExtractModuleAndConstructName(b,d)|0)?3:4;break;case 3:e=b;i=_ExtractModuleAndConstructName(b,d);e=_FindSymbolHN(e,i);i=_EnvGetCurrentModule(b);c=4;break;case 4:_RestoreCurrentModule(b);c=0==(e|0)?5:6;break;case 5:a=0;c=18;break;case 6:g=_HashClass(e);g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+104|0)>>2]+(g<<2)|0)>>2];c=7;break;case 7:c=0!=(g|0)?8:17;break;case 8:c=
(HEAP32[(g|0)>>2]|0)==(e|0)?9:16;break;case 9:c=0!=(HEAPU32[(g+24|0)>>2]>>>1&1|0)?11:10;break;case 10:c=(HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2]|0)==(i|0)?11:15;break;case 11:c=0!=(HEAP32[(g+24|0)>>2]&1|0)?12:13;break;case 12:var j=g;c=14;break;case 13:j=0;c=14;break;case 14:a=j;c=18;break;case 15:c=16;break;case 16:g=HEAP32[(g+108|0)>>2];c=7;break;case 17:a=0;c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}_EnvFindDefclass.X=1;
function _LookupDefclassByMdlOrScope(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;c=0==(_FindModuleSeparator(d)|0)?3:4;break;case 3:a=_LookupDefclassInScope(b,d);c=18;break;case 4:_SaveCurrentModule(b);g=_ExtractModuleAndConstructName(b,d);j=_EnvGetCurrentModule(b);_RestoreCurrentModule(b);c=0==(g|0)?5:6;break;case 5:a=0;c=18;break;case 6:i=c=_FindSymbolHN(b,g);c=0==(c|0)?7:8;break;case 7:a=0;c=18;break;case 8:e=_HashClass(i);e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>
2]+104|0)>>2]+(e<<2)|0)>>2];c=9;break;case 9:c=0!=(e|0)?10:17;break;case 10:c=(HEAP32[(e|0)>>2]|0)==(i|0)?11:16;break;case 11:c=(HEAP32[(HEAP32[((e|0)+8|0)>>2]|0)>>2]|0)==(j|0)?12:16;break;case 12:c=0!=(HEAP32[(e+24|0)>>2]&1|0)?13:14;break;case 13:var k=e;c=15;break;case 14:k=0;c=15;break;case 15:a=k;c=18;break;case 16:e=HEAP32[(e+108|0)>>2];c=9;break;case 17:a=0;c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}_LookupDefclassByMdlOrScope.X=1;
function _LookupDefclassInScope(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;e=c=_FindSymbolHN(b,f);c=0==(c|0)?3:4;break;case 3:a=0;c=14;break;case 4:d=_HashClass(e);d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+104|0)>>2]+(d<<2)|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:13;break;case 6:c=(HEAP32[(d|0)>>2]|0)==(e|0)?7:12;break;case 7:c=0!=(_DefclassInScope(b,d,0)|0)?8:12;break;case 8:c=0!=(HEAP32[(d+24|0)>>2]&1|0)?9:10;break;case 9:var g=d;c=11;break;case 10:g=0;c=11;break;case 11:a=
g;c=14;break;case 12:d=HEAP32[(d+108|0)>>2];c=5;break;case 13:a=0;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_LookupDefclassInScope.X=1;function _DefclassInScope(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;d=HEAP32[(HEAP32[(d+112|0)>>2]+16|0)>>2];a=0==(e|0)?3:4;break;case 3:e=_EnvGetCurrentModule(b);a=4;break;case 4:return h=HEAP32[(e+24|0)>>2],0!=(HEAP8[d+((h|0)/8&-1)|0]<<24>>24&(1<<(h|0)%8&255)<<24>>24|0)?1:0;default:assert(0,"bad label: "+a)}}
function _LookupDefclassAnywhere(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;i=a=_FindSymbolHN(d,c);a=0==(a|0)?3:4;break;case 3:b=0;a=15;break;case 4:g=_HashClass(i);g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+104|0)>>2]+(g<<2)|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:14;break;case 6:a=(HEAP32[(g|0)>>2]|0)==(i|0)?7:13;break;case 7:a=0==(e|0)?9:8;break;case 8:a=(HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2]|0)==(e|0)?9:13;break;case 9:a=0!=(HEAP32[(g+24|0)>>2]&1|0)?10:11;break;case 10:var j=
g;a=12;break;case 11:j=0;a=12;break;case 12:b=j;a=15;break;case 13:g=HEAP32[(g+108|0)>>2];a=5;break;case 14:b=0;a=15;break;case 15:return b;default:assert(0,"bad label: "+a)}}_LookupDefclassAnywhere.X=1;function _EnvGetNextDefclass(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+4|0)>>2])}
function _EnvIsDefclassDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=7;break;case 4:d=b;c=1==(HEAPU32[(d+24|0)>>2]>>>1&1|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=0==(_IsClassBeingUsed(d)|0)?1:0;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}function _UndefclassCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str148|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2])}
function _EnvUndefclass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0!=(_Bloaded(b)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0==(d|0)?5:6;break;case 5:a=_RemoveAllUserClasses(b);c=7;break;case 6:a=_DeleteClassUAG(b,d);c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}function _PPDefclassCommand(h){_PPConstructCommand(h,STRING_TABLE.__str1149|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2])}
function _ListDefclassesCommand(h){_ListConstructCommand(h,STRING_TABLE.__str2150|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2])}function _GetClassDefaultsModeName(h){var f;for(f=2;;)switch(f){case 2:var c;f=h&65535;f=1==(f|0)?3:0==(f|0)?4:5;break;case 3:c=STRING_TABLE.__str6154|0;f=6;break;case 4:c=STRING_TABLE.__str7155|0;f=6;break;case 5:c=STRING_TABLE.__str9157|0;f=6;break;case 6:return c;default:assert(0,"bad label: "+f)}}
function _EnvGetDefclassWatchInstances(h,f){return HEAPU32[(f+24|0)>>2]>>>4&1}function _EnvSetDefclassWatchInstances(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=0!=(HEAPU32[(b+24|0)>>2]>>>2&1|0)?3:4;break;case 3:h=5;break;case 4:h=b+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-17|(a&1)<<4;h=5;break;case 5:return;default:assert(0,"bad label: "+h)}}function _EnvGetDefclassWatchSlots(h,f){return HEAPU32[(f+24|0)>>2]>>>5&1}
function _EnvSetDefclassWatchSlots(h,f,c){h=c+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-33|(f&1)<<5}function _HasSuperclass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=1;c=3;break;case 3:c=e>>>0<(HEAPU16[(b+52|0)>>1]&65535)>>>0?4:8;break;case 4:c=(HEAP32[(HEAP32[((b+52|0)+4|0)>>2]+(e<<2)|0)>>2]|0)==(d|0)?5:6;break;case 5:a=1;c=9;break;case 6:c=7;break;case 7:e=e+1|0;c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvSetClassDefaultsMode(h,f){var c;c=HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+152|0)>>1];HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+152|0)>>1]=f;return c}function _EnvGetClassDefaultsMode(h){return HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+152|0)>>1]}function _EnvListDefclasses(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2],f,c)}
function _DefclassWatchAccess(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;b=f;g=c;i=a;b=0!=(b|0)?3:4;break;case 3:d=_ConstructSetWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]|0)>>2],g,i,54,56);b=5;break;case 4:d=_ConstructSetWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]|0)>>2],g,i,58,60);b=5;break;case 5:return d;default:assert(0,"bad label: "+b)}}
function _DefclassWatchPrint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;b=c;i=a;b=0!=(b|0)?3:4;break;case 3:d=_ConstructPrintWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]|0)>>2],g,i,54,56);b=5;break;case 4:d=_ConstructPrintWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]|0)>>2],g,i,58,60);b=5;break;case 5:return d;default:assert(0,"bad label: "+b)}}
function _GetDefclassListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str3151|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2])}function _EnvGetDefclassList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2],c)}
function _CheckClassAndSlot(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=0==(_EnvArgTypeCheck(e,g,1,2,j)|0)?3:4;break;case 3:d=0;b=9;break;case 4:b=_LookupDefclassByMdlOrScope(e,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);HEAP32[i>>2]=b;b=0==(HEAP32[i>>2]|0)?5:6;break;case 5:_ClassExistError(e,g,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);d=0;b=9;break;case 6:b=0==(_EnvArgTypeCheck(e,
g,2,2,j)|0)?7:8;break;case 7:d=0;b=9;break;case 8:d=HEAP32[(j+8|0)>>2];b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_CheckClassAndSlot.X=1;function _SaveDefclasses(h,f,c){_DoForAllConstructsInModule(h,f,62,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+4|0)>>2],0,c)}
function _SaveDefclass(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;i=_GetConstructPPForm(b,d);a=0!=(i|0)?3:9;break;case 3:_PrintInChunks(b,e,i);_EnvPrintRouter(b,e,STRING_TABLE.__str10158|0);g=_EnvGetNextDefmessageHandler(b,d,0);a=4;break;case 4:a=0!=(g|0)?5:8;break;case 5:i=_EnvGetDefmessageHandlerPPForm(b,d,g);a=0!=(i|0)?6:7;break;case 6:_PrintInChunks(b,e,i);_EnvPrintRouter(b,e,STRING_TABLE.__str10158|0);a=7;break;case 7:g=_EnvGetNextDefmessageHandler(b,d,g);a=4;break;case 8:a=
9;break;case 9:return;default:assert(0,"bad label: "+a)}}_SaveDefclass.X=1;function _GetClassDefaultsModeCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str4152|0,0,0);var f=_EnvGetClassDefaultsMode(h),f=_GetClassDefaultsModeName(f);return _EnvAddSymbol(h,f)}
function _SetClassDefaultsModeCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g;b=h;g=HEAP16[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+152|0)>>1];c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str5153|0,0,1)|0)?3:4;break;case 3:c=b;a=_EnvGetClassDefaultsMode(b);a=_GetClassDefaultsModeName(a);a=_EnvAddSymbol(c,a);c=13;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str5153|0,
1,2,d)|0)?5:6;break;case 5:c=b;a=_EnvGetClassDefaultsMode(b);a=_GetClassDefaultsModeName(a);a=_EnvAddSymbol(c,a);c=13;break;case 6:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0==(_strcmp(e,STRING_TABLE.__str6154|0)|0)?7:8;break;case 7:_EnvSetClassDefaultsMode(b,1);c=12;break;case 8:c=0==(_strcmp(e,STRING_TABLE.__str7155|0)|0)?9:10;break;case 9:_EnvSetClassDefaultsMode(b,0);c=11;break;case 10:_ExpectedTypeError1(b,STRING_TABLE.__str5153|0,1,STRING_TABLE.__str8156|0);c=b;a=_EnvGetClassDefaultsMode(b);
a=_GetClassDefaultsModeName(a);a=_EnvAddSymbol(c,a);c=13;break;case 11:c=12;break;case 12:c=b;a=_GetClassDefaultsModeName(g);a=_EnvAddSymbol(c,a);c=13;break;case 13:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetClassDefaultsModeCommand.X=1;
function _BrowseClassesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;a=h;c=0==(_EnvRtnArgCount(a)|0)?3:4;break;case 3:b=_LookupDefclassByMdlOrScope(a,STRING_TABLE.__str159|0);c=9;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str1160|0,1,2,d)|0)?5:6;break;case 5:c=10;break;case 6:b=_LookupDefclassByMdlOrScope(a,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=0==(b|0)?7:8;break;
case 7:_ClassExistError(a,STRING_TABLE.__str1160|0,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=10;break;case 8:c=9;break;case 9:_EnvBrowseClasses(a,STRING_TABLE.__str2161|0,b);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _EnvBrowseClasses(h,f,c){_PrintClassBrowse(h,f,c,0)}
function _PrintClassBrowse(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=0;b=3;break;case 3:b=j>>>0<i>>>0?4:6;break;case 4:_EnvPrintRouter(d,e,STRING_TABLE.__str67|0);b=5;break;case 5:j=j+1|0;b=3;break;case 6:b=d;var k=e,l=_GetConstructNameString(g);_EnvPrintRouter(b,k,l);b=1<(HEAPU16[(g+36|0)>>1]&65535|0)?7:8;break;case 7:_EnvPrintRouter(d,e,STRING_TABLE.__str68|0);b=8;break;case 8:_EnvPrintRouter(d,e,STRING_TABLE.__str43202|0);j=0;b=9;break;case 9:b=j>>>0<(HEAPU16[(g+
44|0)>>1]&65535)>>>0?10:12;break;case 10:_PrintClassBrowse(d,e,HEAP32[(HEAP32[((g+44|0)+4|0)>>2]+(j<<2)|0)>>2],i+1|0);b=11;break;case 11:j=j+1|0;b=9;break;case 12:return;default:assert(0,"bad label: "+b)}}_PrintClassBrowse.X=1;
function _DescribeClassCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_GetClassNameArgument(c,STRING_TABLE.__str3162|0);f=0==(a|0)?3:4;break;case 3:f=7;break;case 4:b=_CheckClass(c,STRING_TABLE.__str3162|0,a);f=0==(b|0)?5:6;break;case 5:f=7;break;case 6:_EnvDescribeClass(c,STRING_TABLE.__str2161|0,b);f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}
function _GetClassNameArgument(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=0==(_EnvArgTypeCheck(h,f,1,2,d)|0)?3:4;break;case 3:b=0;a=5;break;case 4:b=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];a=5;break;case 5:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}
function _CheckClass(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=_LookupDefclassByMdlOrScope(b,e);a=0==(g|0)?3:4;break;case 3:_ClassExistError(b,d,e);a=4;break;case 4:return g;default:assert(0,"bad label: "+a)}}
function _EnvDescribeClass(h,f,c){var a=STACKTOP;STACKTOP+=108;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a,j=a+84,k=a+96,l,m,n,o,p,q;d=h;e=f;g=c;_DisplaySeparator(d,e,i|0,82,61);_DisplaySeparator(d,e,i|0,82,42);b=0!=(HEAPU32[(g+24|0)>>2]>>>2&1|0)?3:4;break;case 3:_EnvPrintRouter(d,e,STRING_TABLE.__str4163|0);b=8;break;case 4:_EnvPrintRouter(d,e,STRING_TABLE.__str5164|0);b=0!=(HEAPU32[(g+24|0)>>2]>>>3&1|0)?
5:6;break;case 5:_EnvPrintRouter(d,e,STRING_TABLE.__str6165|0);b=7;break;case 6:_EnvPrintRouter(d,e,STRING_TABLE.__str7166|0);b=7;break;case 7:b=8;break;case 8:_PrintPackedClassLinks(d,e,STRING_TABLE.__str8167|0,g+36|0);_PrintPackedClassLinks(d,e,STRING_TABLE.__str9168|0,g+52|0);_PrintPackedClassLinks(d,e,STRING_TABLE.__str10169|0,g+44|0);b=0!=(HEAP32[(g+64|0)>>2]|0)?9:24;break;case 9:_DisplaySeparator(d,e,i|0,82,45);o=5;q=8;m=0;b=10;break;case 10:b=m>>>0<HEAPU32[(g+80|0)>>2]>>>0?11:19;break;case 11:n=
_strlen(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+64|0)>>2]+(m<<2)|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);b=n>>>0>o>>>0?12:13;break;case 12:o=n;b=13;break;case 13:b=0==(HEAPU32[HEAP32[(HEAP32[(g+64|0)>>2]+(m<<2)|0)>>2]>>2]>>>4&1|0)?14:17;break;case 14:p=_strlen(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+64|0)>>2]+(m<<2)|0)>>2]+12|0)>>2]+16|0)>>2]);b=p>>>0>q>>>0?15:16;break;case 15:q=p;b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:m=m+1|0;b=10;break;case 19:b=16<o>>>0?20:21;break;case 20:o=16;b=21;
break;case 21:b=12<q>>>0?22:23;break;case 22:q=12;b=23;break;case 23:var r=b=o;_sprintf(j|0,STRING_TABLE.__str11170|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=r,tempInt));r=b=q;_sprintf(k|0,STRING_TABLE.__str12171|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=r,tempInt));_DisplaySlotBasicInfo(d,e,j|0,k|0,i|0,g);_EnvPrintRouter(d,
e,STRING_TABLE.__str13172|0);_DisplaySlotConstraintInfo(d,e,j|0,i|0,82,g);b=24;break;case 24:b=0<HEAPU32[(g+104|0)>>2]>>>0?25:26;break;case 25:l=1;b=33;break;case 26:l=0;m=1;b=27;break;case 27:b=m>>>0<(HEAPU16[(g+52|0)>>1]&65535)>>>0?28:32;break;case 28:b=0<HEAPU32[(HEAP32[(HEAP32[((g+52|0)+4|0)>>2]+(m<<2)|0)>>2]+104|0)>>2]>>>0?29:30;break;case 29:l=1;b=32;break;case 30:b=31;break;case 31:m=m+1|0;b=27;break;case 32:b=33;break;case 33:b=0!=(l|0)?34:35;break;case 34:_DisplaySeparator(d,e,i|0,82,45);
_EnvPrintRouter(d,e,STRING_TABLE.__str14173|0);_DisplayHandlersInLinks(d,e,g+52|0,0);b=35;break;case 35:_DisplaySeparator(d,e,i|0,82,42);_DisplaySeparator(d,e,i|0,82,61);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_EnvDescribeClass.X=1;
function _DisplaySeparator(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=b;l=0;d=3;break;case 3:d=(l|0)<(j-2|0)?4:6;break;case 4:HEAP8[i+l|0]=k&255;d=5;break;case 5:l=l+1|0;d=3;break;case 6:h=l;l=h+1|0;HEAP8[i+h|0]=10;HEAP8[i+l|0]=0;_EnvPrintRouter(e,g,i);return;default:assert(0,"bad label: "+d)}}
function _DisplaySlotBasicInfo(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;_sprintf(m,k,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=STRING_TABLE.__str34193|0,tempInt));_strcat(m,STRING_TABLE.__str47|0);_EnvPrintRouter(i,j,m);_sprintf(m,l,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=STRING_TABLE.__str48|0,tempInt));_EnvPrintRouter(i,j,m);_EnvPrintRouter(i,j,STRING_TABLE.__str49|0);o=0;g=3;break;case 3:g=o>>>0<HEAPU32[(n+80|0)>>2]>>>0?4:24;break;case 4:p=HEAP32[(HEAP32[(n+64|0)>>2]+(o<<2)|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(p+8|0)>>2]+12|0)>>2]+16|0)>>2];_sprintf(m,k,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));_strcat(m,0!=(HEAPU32[p>>2]>>>1&1|0)?STRING_TABLE.__str50205|
0:STRING_TABLE.__str51|0);g=0!=(HEAPU32[p>>2]>>>8&1|0)?5:6;break;case 5:_strcat(m,STRING_TABLE.__str52|0);g=7;break;case 6:_strcat(m,0!=(HEAPU32[p>>2]>>>6&1|0)?STRING_TABLE.__str53|0:STRING_TABLE.__str54|0);g=7;break;case 7:_strcat(m,0!=(HEAPU32[p>>2]>>>3&1|0)?STRING_TABLE.__str52|0:STRING_TABLE.__str55|0);g=0!=(HEAPU32[p>>2]>>>5&1|0)?8:9;break;case 8:_strcat(m,STRING_TABLE.__str56|0);g=13;break;case 9:g=0!=(HEAPU32[p>>2]>>>4&1|0)?10:11;break;case 10:_strcat(m,STRING_TABLE.__str57|0);g=12;break;case 11:_strcat(m,
STRING_TABLE.__str58|0);g=12;break;case 12:g=13;break;case 13:_strcat(m,0!=(HEAP32[p>>2]&1|0)?STRING_TABLE.__str59|0:STRING_TABLE.__str60|0);_strcat(m,0!=(HEAPU32[p>>2]>>>9&1|0)?STRING_TABLE.__str61|0:STRING_TABLE.__str52|0);_strcat(m,0!=(HEAPU32[p>>2]>>>2&1|0)?STRING_TABLE.__str62|0:STRING_TABLE.__str63|0);_strcat(m,0!=(HEAPU32[p>>2]>>>10&1|0)?STRING_TABLE.__str64|0:STRING_TABLE.__str65|0);q=_GetCreateAccessorString(p);g=0==(HEAP8[q+1|0]<<24>>24|0)?14:15;break;case 14:_strcat(m,STRING_TABLE.__str66|
0);g=15;break;case 15:_strcat(m,q);g=0==(HEAP8[q+1|0]<<24>>24|0)?16:17;break;case 16:g=18;break;case 17:g=0==(HEAP8[q+2|0]<<24>>24|0)?18:19;break;case 18:_strcat(m,STRING_TABLE.__str66|0);g=19;break;case 19:_strcat(m,STRING_TABLE.__str66|0);_EnvPrintRouter(i,j,m);var r=m,s=l;g=0!=(HEAPU32[p>>2]>>>4&1|0)?20:21;break;case 20:var t=STRING_TABLE.__str16175|0;g=22;break;case 21:t=HEAP32[(HEAP32[(p+12|0)>>2]+16|0)>>2];g=22;break;case 22:_sprintf(r,s,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,tempInt));_EnvPrintRouter(i,j,m);_PrintSlotSources(i,j,HEAP32[(HEAP32[(p+8|0)>>2]+12|0)>>2],HEAP32[(p+4|0)>>2]+52|0,0,1);_EnvPrintRouter(i,j,STRING_TABLE.__str43202|0);g=23;break;case 23:o=o+1|0;g=3;break;case 24:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_DisplaySlotBasicInfo.X=1;
function _DisplaySlotConstraintInfo(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=STRING_TABLE.__str33192|0;_sprintf(l,k,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=STRING_TABLE.__str34193|0,tempInt));_strcat(l,STRING_TABLE.__str35194|0);_EnvPrintRouter(i,j,l);o=0;g=3;break;case 3:g=o>>>
0<HEAPU32[(n+80|0)>>2]>>>0?4:19;break;case 4:p=HEAP32[(HEAP32[(HEAP32[(n+64|0)>>2]+(o<<2)|0)>>2]+20|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(n+64|0)>>2]+(o<<2)|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2];_sprintf(l,k,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=0!=(p|0)?5:14;break;case 5:var r=l,s=_ConstraintCode(p,HEAPU32[p>>2]>>>1&1,HEAPU32[p>>2]>>>11&1);_strcat(r,s);r=l;s=_ConstraintCode(p,HEAPU32[p>>2]>>>2&1,HEAPU32[p>>
2]>>>12&1);_strcat(r,s);var r=l,s=p,t=HEAPU32[p>>2]>>>5&1;if(0!=(HEAPU32[p>>2]>>>16&1|0)){var u=1;g=7}else g=6;break;case 6:u=0!=(HEAPU32[p>>2]>>>15&1|0);g=7;break;case 7:g=_ConstraintCode(s,t,u&1);_strcat(r,g);g=l;var v=_ConstraintCode(p,HEAPU32[p>>2]>>>6&1,HEAPU32[p>>2]>>>15&1);_strcat(g,v);g=l;v=_ConstraintCode(p,HEAPU32[p>>2]>>>7&1,0);_strcat(g,v);g=l;v=_ConstraintCode(p,HEAPU32[p>>2]>>>8&1,0);_strcat(g,v);g=l;v=_ConstraintCode(p,HEAPU32[p>>2]>>>4&1,HEAPU32[p>>2]>>>14&1);_strcat(g,v);g=l;v=_ConstraintCode(p,
HEAPU32[p>>2]>>>3&1,HEAPU32[p>>2]>>>13&1);_strcat(g,v);g=i;var v=q,w=l,x=_strlen(l),w=w+x|0,x=m,y=_strlen(l);_OpenStringDestination(g,v,w,(x-y|0)-1|0);g=0!=(HEAPU32[p>>2]>>>4&1|0)?10:8;break;case 8:g=0!=(HEAPU32[p>>2]>>>3&1|0)?10:9;break;case 9:g=0!=(HEAP32[p>>2]&1|0)?10:11;break;case 10:_EnvPrintRouter(i,q,STRING_TABLE.__str36195|0);_PrintExpression(i,q,HEAP32[(p+16|0)>>2]);_EnvPrintRouter(i,q,STRING_TABLE.__str37196|0);_PrintExpression(i,q,HEAP32[(p+20|0)>>2]);_EnvPrintRouter(i,q,STRING_TABLE.__str38197|
0);g=11;break;case 11:g=0!=(HEAPU32[HEAP32[(HEAP32[(n+64|0)>>2]+(o<<2)|0)>>2]>>2]>>>1&1|0)?12:13;break;case 12:_EnvPrintRouter(i,q,STRING_TABLE.__str39198|0);_PrintExpression(i,q,HEAP32[(p+24|0)>>2]);_EnvPrintRouter(i,q,STRING_TABLE.__str37196|0);_PrintExpression(i,q,HEAP32[(p+28|0)>>2]);_EnvPrintRouter(i,q,STRING_TABLE.__str40199|0);g=13;break;case 13:g=17;break;case 14:_OpenStringDestination(i,q,l,m);_EnvPrintRouter(i,q,STRING_TABLE.__str41200|0);g=0!=(HEAPU32[HEAP32[(HEAP32[(n+64|0)>>2]+(o<<2)|
0)>>2]>>2]>>>1&1|0)?15:16;break;case 15:_EnvPrintRouter(i,q,STRING_TABLE.__str42201|0);g=16;break;case 16:g=17;break;case 17:_EnvPrintRouter(i,q,STRING_TABLE.__str43202|0);_CloseStringDestination(i,q);_EnvPrintRouter(i,j,l);g=18;break;case 18:o=o+1|0;g=3;break;case 19:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_DisplaySlotConstraintInfo.X=1;
function _GetCreateAccessorString(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(HEAPU32[a>>2]>>>11&1|0)?3:5;break;case 3:f=0!=(HEAPU32[a>>2]>>>12&1|0)?4:5;break;case 4:c=STRING_TABLE.__str15174|0;f=9;break;case 5:f=0==(HEAPU32[a>>2]>>>11&1|0)?6:8;break;case 6:f=0==(HEAPU32[a>>2]>>>12&1|0)?7:8;break;case 7:c=STRING_TABLE.__str16175|0;f=9;break;case 8:c=0!=(HEAPU32[a>>2]>>>11&1|0)?STRING_TABLE.__str17176|0:STRING_TABLE.__str18177|0;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
_GetCreateAccessorString.X=1;function _GetDefclassModuleCommand(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str19178|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2])}
function _SuperclassPCommand(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+4;b=h;c=0==(_CheckTwoClasses(b,STRING_TABLE.__str20179|0,d,e)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvSuperclassP(b,HEAP32[d>>2],HEAP32[e>>2]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CheckTwoClasses(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b;g=h;i=f;j=c;k=a;d=0==(_EnvArgTypeCheck(g,i,1,2,l)|0)?3:4;break;case 3:e=0;d=11;break;case 4:d=_LookupDefclassByMdlOrScope(g,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);HEAP32[j>>2]=d;d=0==(HEAP32[j>>2]|0)?5:6;break;case 5:_ClassExistError(g,i,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);e=0;d=11;break;case 6:d=
0==(_EnvArgTypeCheck(g,i,2,2,l)|0)?7:8;break;case 7:e=0;d=11;break;case 8:d=_LookupDefclassByMdlOrScope(g,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);HEAP32[k>>2]=d;d=0==(HEAP32[k>>2]|0)?9:10;break;case 9:_ClassExistError(g,i,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);e=0;d=11;break;case 10:e=1;d=11;break;case 11:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_CheckTwoClasses.X=1;function _EnvSuperclassP(h,f,c){return _HasSuperclass(c,f)}
function _SubclassPCommand(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+4;b=h;c=0==(_CheckTwoClasses(b,STRING_TABLE.__str21180|0,d,e)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvSubclassP(b,HEAP32[d>>2],HEAP32[e>>2]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}function _EnvSubclassP(h,f,c){return _HasSuperclass(f,c)}
function _SlotExistPCommand(h){var f=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g,i=f+4;b=h;g=0;e=_CheckSlotExists(b,STRING_TABLE.__str22181|0,d,0,1);c=0==(e|0)?3:4;break;case 3:a=0;c=14;break;case 4:c=3==(_EnvRtnArgCount(b)|0)?5:10;break;case 5:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str22181|0,3,2,i)|0)?6:7;break;case 6:a=0;c=14;break;case 7:c=0!=(_strcmp(HEAP32[(HEAP32[(i+8|0)>>2]+
16|0)>>2],STRING_TABLE.__str23182|0)|0)?8:9;break;case 8:_ExpectedTypeError1(b,STRING_TABLE.__str22181|0,3,STRING_TABLE.__str24183|0);_SetEvaluationError(b,1);a=0;c=14;break;case 9:g=1;c=10;break;case 10:c=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[d>>2]|0)?11:12;break;case 11:var j=1;c=13;break;case 12:j=g;c=13;break;case 13:a=j;c=14;break;case 14:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SlotExistPCommand.X=1;
function _CheckSlotExists(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;l=b;m=_CheckClassAndSlot(g,i,j);d=0==(m|0)?3:4;break;case 3:e=0;d=12;break;case 4:n=_FindInstanceTemplateSlot(g,HEAP32[j>>2],m);d=-1==(n|0)?5:8;break;case 5:d=0!=(k|0)?6:7;break;case 6:_SlotExistError(g,HEAP32[(m+16|0)>>2],i);_SetEvaluationError(g,1);d=7;break;case 7:e=0;d=12;break;case 8:o=HEAP32[(HEAP32[(HEAP32[j>>2]+64|0)>>2]+(n<<2)|0)>>2];d=(HEAP32[(o+4|0)>>2]|0)==(HEAP32[j>>2]|0)?10:9;
break;case 9:d=0!=(l|0)?10:11;break;case 10:e=o;d=12;break;case 11:_PrintErrorID(g,STRING_TABLE.__str69|0,1,0);_EnvPrintRouter(g,STRING_TABLE.__str70|0,STRING_TABLE.__str71|0);_EnvPrintRouter(g,STRING_TABLE.__str70|0,HEAP32[(m+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str70|0,STRING_TABLE.__str72|0);_PrintClassName(g,STRING_TABLE.__str70|0,HEAP32[(o+4|0)>>2],0);_EnvPrintRouter(g,STRING_TABLE.__str70|0,STRING_TABLE.__str73|0);_EnvPrintRouter(g,STRING_TABLE.__str70|0,i);_EnvPrintRouter(g,STRING_TABLE.__str70|
0,STRING_TABLE.__str43202|0);_SetEvaluationError(g,1);e=0;d=12;break;case 12:return e;default:assert(0,"bad label: "+d)}}_CheckSlotExists.X=1;function _EnvSlotExistP(h,f,c,a){return 0!=(_LookupSlot(h,f,c,a)|0)?1:0}
function _LookupSlot(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;b=c;i=a;j=_FindSymbolHN(e,b);b=0==(j|0)?3:4;break;case 3:d=0;b=10;break;case 4:k=_FindInstanceTemplateSlot(e,g,j);b=-1==(k|0)?5:6;break;case 5:d=0;b=10;break;case 6:l=HEAP32[(HEAP32[(g+64|0)>>2]+(k<<2)|0)>>2];b=(HEAP32[(l+4|0)>>2]|0)!=(g|0)?7:9;break;case 7:b=0==(i|0)?8:9;break;case 8:d=0;b=10;break;case 9:d=l;b=10;break;case 10:return d;default:assert(0,"bad label: "+b)}}_LookupSlot.X=1;
function _MessageHandlerExistPCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i;b=h;i=2;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str25184|0,1,2,g)|0)?3:4;break;case 3:a=0;c=17;break;case 4:d=_LookupDefclassByMdlOrScope(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);c=0==(d|0)?5:6;break;case 5:_ClassExistError(b,STRING_TABLE.__str25184|0,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);a=0;
c=17;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str25184|0,2,2,g)|0)?7:8;break;case 7:a=0;c=17;break;case 8:e=HEAP32[(g+8|0)>>2];c=3==(_EnvRtnArgCount(b)|0)?9:14;break;case 9:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str25184|0,3,2,g)|0)?10:11;break;case 10:a=0;c=17;break;case 11:i=_HandlerType(b,STRING_TABLE.__str25184|0,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);c=4==(i|0)?12:13;break;case 12:_SetEvaluationError(b,1);a=0;c=17;break;case 13:c=14;break;case 14:c=0!=(_FindHandlerByAddress(d,e,i)|
0)?15:16;break;case 15:a=1;c=17;break;case 16:a=0;c=17;break;case 17:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_MessageHandlerExistPCommand.X=1;
function _SlotWritablePCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b;b=_CheckSlotExists(h,STRING_TABLE.__str26185|0,f,1,1);c=0==(b|0)?3:4;break;case 3:a=0;c=7;break;case 4:if(0!=(HEAPU32[b>>2]>>>4&1|0)){var d=1;c=6}else c=5;break;case 5:d=0!=(HEAPU32[b>>2]>>>5&1|0);c=6;break;case 6:a=d?0:1;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _EnvSlotWritableP(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;d=a=_LookupSlot(h,f,c,1);a=0==(a|0)?3:4;break;case 3:b=0;a=7;break;case 4:if(0!=(HEAPU32[d>>2]>>>4&1|0)){var e=1;a=6}else a=5;break;case 5:e=0!=(HEAPU32[d>>2]>>>5&1|0);a=6;break;case 6:b=e?0:1;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _SlotInitablePCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b;b=_CheckSlotExists(h,STRING_TABLE.__str27186|0,f,1,1);c=0==(b|0)?3:4;break;case 3:a=0;c=7;break;case 4:if(0!=(HEAPU32[b>>2]>>>4&1|0))c=5;else{var d=0;c=6}break;case 5:d=0==(HEAPU32[b>>2]>>>5&1|0);c=6;break;case 6:a=d?0:1;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _EnvSlotInitableP(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;d=a=_LookupSlot(h,f,c,1);a=0==(a|0)?3:4;break;case 3:b=0;a=7;break;case 4:if(0!=(HEAPU32[d>>2]>>>4&1|0))a=5;else{var e=0;a=6}break;case 5:e=0==(HEAPU32[d>>2]>>>5&1|0);a=6;break;case 6:b=e?0:1;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _SlotPublicPCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b;b=_CheckSlotExists(h,STRING_TABLE.__str28187|0,f,1,0);c=0==(b|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=0!=(HEAPU32[b>>2]>>>10&1|0)?1:0;c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _EnvSlotPublicP(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;d=a=_LookupSlot(h,f,c,0);a=0==(a|0)?3:4;break;case 3:b=0;a=5;break;case 4:b=0!=(HEAPU32[d>>2]>>>10&1|0)?1:0;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _SlotDirectAccessPCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;d=_CheckSlotExists(h,STRING_TABLE.__str29188|0,b,1,1);c=0==(d|0)?3:4;break;case 3:a=0;c=7;break;case 4:if(0!=(HEAPU32[d>>2]>>>10&1|0)){var e=1;c=6}else c=5;break;case 5:e=(HEAP32[(d+4|0)>>2]|0)==(HEAP32[b>>2]|0);c=6;break;case 6:a=e?1:0;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+
c)}}function _ConstraintCode(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;d=h;a=f;e=c;a=0!=(a|0)?4:3;break;case 3:a=0!=(HEAP32[d>>2]&1|0)?4:7;break;case 4:if(0!=(e|0)){var g=1;a=6}else a=5;break;case 5:g=0!=(HEAPU32[d>>2]>>>10&1|0);a=6;break;case 6:b=g?STRING_TABLE.__str44203|0:STRING_TABLE.__str45204|0;a=8;break;case 7:b=STRING_TABLE.__str46|0;a=8;break;case 8:return b;default:assert(0,"bad label: "+a)}}function _IncrementDefclassBusyCount(h,f){var c=f+28|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}
function _DecrementDefclassBusyCount(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=h;a=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:c=a+28|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _FindClassSlot(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=0;c=3;break;case 3:c=e>>>0<HEAPU32[(b+72|0)>>2]>>>0?4:8;break;case 4:c=(HEAP32[(HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+8|0)>>2]+12|0)>>2]|0)==(d|0)?5:6;break;case 5:a=HEAP32[(b+60|0)>>2]+44*e|0;c=9;break;case 6:c=7;break;case 7:e=e+1|0;c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _DeleteClassLinks(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;d=b=f;c=3;break;case 3:c=0!=(d|0)?4:6;break;case 4:b=HEAP32[(b+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:d=
b;c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}_DeleteClassLinks.X=1;function _HashClass(h){return((11329*(HEAPU32[(h+12|0)>>2]>>>3&536870911)|0)>>>0)%167}
function _EnvSlotDirectAccessP(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;d=h;e=f;d=a=_LookupSlot(d,e,c,1);a=0==(a|0)?3:4;break;case 3:b=0;a=7;break;case 4:if(0!=(HEAPU32[d>>2]>>>10&1|0)){var g=1;a=6}else a=5;break;case 5:g=(HEAP32[(d+4|0)>>2]|0)==(e|0);a=6;break;case 6:b=g?1:0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _SlotDefaultValueCommand(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_CheckSlotExists(b,STRING_TABLE.__str30189|0,e,1,1);a=0==(e|0)?3:4;break;case 3:a=9;break;case 4:a=0!=(HEAPU32[e>>2]>>>8&1|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str31190|
0);HEAP32[(d+8|0)>>2]=a;a=9;break;case 6:a=0!=(HEAPU32[e>>2]>>>6&1|0)?7:8;break;case 7:_EvaluateAndStoreInDataObject(b,HEAPU32[e>>2]>>>1&1,HEAP32[(e+16|0)>>2],d,1);a=9;break;case 8:a=d;var g=HEAP32[(e+16|0)>>2];assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,g,24,1);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SlotDefaultValueCommand.X=1;
function _EnvSlotDefaultValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;b=c;i=a;HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];g=b=_LookupSlot(e,g,b,1);b=0==(b|0)?3:4;break;case 3:d=0;b=9;break;case 4:b=0!=(HEAPU32[g>>2]>>>8&1|0)?5:6;break;case 5:HEAP16[(i+4|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str31190|0);HEAP32[(i+8|0)>>2]=d;d=1;b=9;break;case 6:b=0!=(HEAPU32[g>>2]>>>6&1|0)?7:8;break;case 7:d=_EvaluateAndStoreInDataObject(e,
HEAPU32[g>>2]>>>1&1,HEAP32[(g+16|0)>>2],i,1);b=9;break;case 8:d=i;b=HEAP32[(g+16|0)>>2];assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(d,b,24,1);d=1;b=9;break;case 9:return d;default:assert(0,"bad label: "+b)}}_EnvSlotDefaultValue.X=1;
function _ClassExistPCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str32191|0,1,2,d)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=0!=(_LookupDefclassByMdlOrScope(b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2])|0)?1:0;c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _PrintSlotSources(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;e=(m|0)==(HEAPU16[(l|0)>>1]&65535|0)?3:4;break;case 3:g=0;e=14;break;case 4:o=_FindClassSlot(HEAP32[(HEAP32[(l+4|0)>>2]+(m<<2)|0)>>2],k);e=0!=(o|0)?5:7;break;case 5:e=0==(HEAPU32[o>>2]>>>3&1|0)?8:6;break;case 6:e=0!=(n|0)?8:13;break;case 7:e=13;break;case 8:e=0!=(HEAPU32[o>>2]>>>2&1|0)?9:12;break;case 9:e=0!=(_PrintSlotSources(i,j,k,l,m+1|0,0)|0)?10:11;break;case 10:_EnvPrintRouter(i,
j,STRING_TABLE.__str66|0);e=11;break;case 11:e=12;break;case 12:_PrintClassName(i,j,HEAP32[(HEAP32[(l+4|0)>>2]+(m<<2)|0)>>2],0);g=1;e=14;break;case 13:g=_PrintSlotSources(i,j,k,l,m+1|0,0);e=14;break;case 14:return g;default:assert(0,"bad label: "+e)}}_PrintSlotSources.X=1;
function _InstancesPurge(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_DestroyAllInstances(c);a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2];f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]=-1;f=4;break;case 4:return _CleanupInstances(c),HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]=a,0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+172|0)>>2]|0)?0:1;default:assert(0,"bad label: "+
f)}}_InstancesPurge.X=1;
function _InitializeClasses(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=_gm2(c,668);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+104|0)>>2]=f;a=0;f=3;break;case 3:f=167>(a|0)?4:6;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+104|0)>>2]+(a<<2)|0)>>2]=0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:f=_gm2(c,668);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]=f;a=0;f=7;break;case 7:f=167>(a|0)?8:10;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|
0)>>2]+(a<<2)|0)>>2]=0;f=9;break;case 9:a=a+1|0;f=7;break;case 10:return;default:assert(0,"bad label: "+f)}}_InitializeClasses.X=1;
function _ClassExistError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str206|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str1207|0,STRING_TABLE.__str2208|0);_EnvPrintRouter(h,STRING_TABLE.__str1207|0,c);_EnvPrintRouter(h,STRING_TABLE.__str1207|0,STRING_TABLE.__str3209|0);_EnvPrintRouter(h,STRING_TABLE.__str1207|0,f);_EnvPrintRouter(h,STRING_TABLE.__str1207|0,STRING_TABLE.__str4210|0);_SetEvaluationError(h,1)}
function _PrintClassName(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2];var j=_EnvGetCurrentModule(d);b=(b|0)!=(j|0)?3:5;break;case 3:b=0==(HEAPU32[(g+24|0)>>2]>>>1&1|0)?4:5;break;case 4:b=d;var j=e,k=_EnvGetDefmoduleName(d,HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2]);_EnvPrintRouter(b,j,k);_EnvPrintRouter(d,e,STRING_TABLE.__str5211|0);b=5;break;case 5:_EnvPrintRouter(d,e,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2]);b=0!=(i|0)?6:7;break;case 6:_EnvPrintRouter(d,
e,STRING_TABLE.__str6212|0);b=7;break;case 7:return;default:assert(0,"bad label: "+b)}}_PrintClassName.X=1;
function _PrintPackedClassLinks(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;b=c;g=a;_EnvPrintRouter(d,e,b);i=0;b=3;break;case 3:b=i>>>0<(HEAPU16[(g|0)>>1]&65535)>>>0?4:6;break;case 4:_EnvPrintRouter(d,e,STRING_TABLE.__str7213|0);_PrintClassName(d,e,HEAP32[(HEAP32[(g+4|0)>>2]+(i<<2)|0)>>2],0);b=5;break;case 5:i=i+1|0;b=3;break;case 6:_EnvPrintRouter(d,e,STRING_TABLE.__str6212|0);return;default:assert(0,"bad label: "+b)}}
function _PutClassInTable(h,f){var c=_GetConstructNamePointer(f),c=_HashClass(c);HEAP32[(f+32|0)>>2]=c;HEAP32[(f+108|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(f+32|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(f+32|0)>>2]<<2)|0)>>2]=f}
function _RemoveClassFromTable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(b+32|0)>>2]<<2)|0)>>2];c=3;break;case 3:c=(e|0)!=(b|0)?4:5;break;case 4:d=e;e=HEAP32[(e+108|0)>>2];c=3;break;case 5:c=0==(d|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(b+32|0)>>2]<<2)|0)>>2]=HEAP32[(b+108|0)>>2];c=8;break;case 7:HEAP32[(d+108|0)>>2]=HEAP32[(b+108|0)>>2];c=8;break;case 8:return;
default:assert(0,"bad label: "+c)}}_RemoveClassFromTable.X=1;
function _AddClassLink(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;g=f;i=c;j=a;d=_gm2(e,((HEAPU16[(g|0)>>1]&65535)+1|0)<<2|0);HEAP32[(k+4|0)>>2]=d;d=-1==(j|0)?3:4;break;case 3:d=HEAP32[(k+4|0)>>2];var l=HEAP32[(g+4|0)>>2],m=(HEAPU16[(g|0)>>1]&65535)<<2|0;assert(0===m%1,"memcpy given "+m+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(d,l,m,1);
HEAP32[(HEAP32[(k+4|0)>>2]+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]=i;d=7;break;case 4:d=0!=(j|0)?5:6;break;case 5:d=HEAP32[(k+4|0)>>2];l=HEAP32[(g+4|0)>>2];m=j<<2|0;assert(0===m%1,"memcpy given "+m+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(d,l,m,1);d=6;break;case 6:d=(HEAP32[(k+4|0)>>2]+(j<<2)|0)+4|0;l=HEAP32[(g+4|0)>>2]+(j<<2)|0;m=((HEAPU16[(g|0)>>1]&65535)-j|0)<<2|0;assert(0===m%1,"memcpy given "+m+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(d,
l,m,1);HEAP32[(HEAP32[(k+4|0)>>2]+(j<<2)|0)>>2]=i;d=7;break;case 7:HEAP16[(k|0)>>1]=((HEAPU16[(g|0)>>1]&65535)+1|0)&65535;_DeletePackedClassLinks(e,g,0);HEAP16[(g|0)>>1]=HEAP16[(k|0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(k+4|0)>>2];STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_AddClassLink.X=1;
function _DeletePackedClassLinks(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0<(HEAPU16[(d|0)>>1]&65535|0)?3:4;break;case 3:_rm(b,HEAP32[(d+4|0)>>2],(HEAPU16[(d|0)>>1]&65535)<<2|0);HEAP16[(d|0)>>1]=0;HEAP32[(d+4|0)>>2]=0;a=4;break;case 4:a=0!=(e|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=6;break;case 6:return;default:assert(0,"bad label: "+a)}}_DeletePackedClassLinks.X=1;
function _DeleteSubclassLink(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;i=e+44|0;e=0;b=3;break;case 3:b=e>>>0<(HEAPU16[(i|0)>>1]&65535)>>>0?4:8;break;case 4:b=(HEAP32[(HEAP32[(i+4|0)>>2]+(e<<2)|0)>>2]|0)==(g|0)?5:6;break;case 5:b=8;break;case 6:b=7;break;case 7:e=e+1|0;b=3;break;case 8:b=(e|0)==(HEAPU16[(i|0)>>1]&65535|0)?9:10;break;case 9:b=16;break;case 10:b=
1<(HEAPU16[(i|0)>>1]&65535|0)?11:14;break;case 11:b=_gm2(d,((HEAPU16[(i|0)>>1]&65535)-1|0)<<2|0);HEAP32[(j+4|0)>>2]=b;b=0!=(e|0)?12:13;break;case 12:b=HEAP32[(j+4|0)>>2];var k=HEAP32[(i+4|0)>>2],l=e<<2|0;assert(0===l%1,"memcpy given "+l+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(b,k,l,1);b=13;break;case 13:b=HEAP32[(j+4|0)>>2]+(e<<2)|0;k=(HEAP32[(i+4|0)>>2]+(e<<2)|0)+4|0;l=(((HEAPU16[(i|0)>>1]&65535)-e|0)-1|0)<<2|0;assert(0===l%1,"memcpy given "+l+" bytes to copy. Problem with quantum=1 corrections perhaps?");
_memcpy(b,k,l,1);b=15;break;case 14:HEAP32[(j+4|0)>>2]=0;b=15;break;case 15:HEAP16[(j|0)>>1]=((HEAPU16[(i|0)>>1]&65535)-1|0)&65535;_DeletePackedClassLinks(d,i,0);HEAP16[(i|0)>>1]=HEAP16[(j|0)>>1];HEAP32[(i+4|0)>>2]=HEAP32[(j+4|0)>>2];b=16;break;case 16:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_DeleteSubclassLink.X=1;
function _NewClass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2]|0)?3:4;break;case 3:var d=_genalloc(a,148);c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return c=d,_InitializeConstructHeader(a,STRING_TABLE.__str8214|0,c,b),HEAP16[(c+26|0)>>1]=0,b=c+24|0,HEAP32[b>>2]&=-2,HEAP32[(c+28|0)>>2]=0,b=c+24|0,HEAP32[b>>2]&=-3,b=c+24|0,HEAP32[b>>2]&=-5,b=c+24|0,HEAP32[b>>2]=HEAP32[b>>2]&-9|8,b=c+24|0,HEAP32[b>>2]=HEAP32[b>>2]&-17|(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+128|0)>>2]&1)<<4,b=c+24|0,HEAP32[b>>2]=HEAP32[b>>2]&-33|(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+132|0)>>2]&1)<<5,HEAP32[(c+32|0)>>
2]=0,HEAP16[(c+36|0)>>1]=0,HEAP32[((c+36|0)+4|0)>>2]=0,HEAP16[(c+44|0)>>1]=0,HEAP32[((c+44|0)+4|0)>>2]=0,HEAP16[(c+52|0)>>1]=0,HEAP32[((c+52|0)+4|0)>>2]=0,HEAP32[(c+60|0)>>2]=0,HEAP32[(c+64|0)>>2]=0,HEAP32[(c+68|0)>>2]=0,HEAP32[(c+80|0)>>2]=0,HEAP32[(c+76|0)>>2]=0,HEAP32[(c+72|0)>>2]=0,HEAP32[(c+84|0)>>2]=0,HEAP32[(c+96|0)>>2]=0,HEAP32[(c+100|0)>>2]=0,HEAP32[(c+104|0)>>2]=0,HEAP32[(c+88|0)>>2]=0,HEAP32[(c+92|0)>>2]=0,HEAP32[(c+108|0)>>2]=0,HEAP32[(c+112|0)>>2]=0,_ClearBitString(c+116|0,32),c;default:assert(0,
"bad label: "+c)}}_NewClass.X=1;
function _AssignClassID(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535|0)%30|0)?3:8;break;case 3:c=_genrealloc(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2],(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)<<2|0,((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)+30|0)<<2|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]=c;c=HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+110|
0;HEAP16[c>>1]=((HEAPU16[c>>1]&65535)+30|0)&65535;d=HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535;c=4;break;case 4:c=d>>>0<((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)+30|0)>>>0?5:7;break;case 5:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]+(d<<2)|0)>>2]=0;c=6;break;case 6:d=d+1|0;c=4;break;case 7:c=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]+((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)<<
2)|0)>>2]=b;a=HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0;c=HEAP16[a>>1];HEAP16[a>>1]=c+1&65535;HEAP16[(b+26|0)>>1]=c;return;default:assert(0,"bad label: "+c)}}_AssignClassID.X=1;function _HashSlotName(h){return((11329*(HEAPU32[(h+12|0)>>2]>>>3&536870911)|0)>>>0)%167}
function _NewSlotNameID(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;a=0;f=3;break;case 3:b=0;f=4;break;case 4:f=167>b>>>0?5:15;break;case 5:d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]+(b<<2)|0)>>2];f=6;break;case 6:f=0!=(d|0)?7:8;break;case 7:var e=(HEAP32[(d+8|0)>>2]|0)!=(a|0)&1;f=9;break;case 8:e=0;f=9;break;case 9:f=0!=(e|0)?10:11;break;case 10:d=HEAP32[(d+20|0)>>2];f=6;break;case 11:f=0!=(d|0)?12:13;break;case 12:f=15;break;case 13:f=14;break;case 14:b=b+1|0;f=4;
break;case 15:f=167>b>>>0?16:17;break;case 16:a=a+1|0;f=18;break;case 17:f=19;break;case 18:f=3;break;case 19:return a;default:assert(0,"bad label: "+f)}}_NewSlotNameID.X=1;
function _AddSlotName(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;k=_HashSlotName(e);j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+112|0)>>2]+(k<<2)|0)>>2];b=3;break;case 3:b=0!=(j|0)?4:5;break;case 4:var m=(HEAP32[(j+12|0)>>2]|0)!=(e|0)&1;b=6;break;case 5:m=0;b=6;break;case 6:b=0!=(m|0)?7:8;break;case 7:j=HEAP32[(j+20|0)>>2];b=3;break;case 8:b=0!=(j|0)?9:13;break;case 9:b=0!=(i|0)?10:12;break;case 10:b=(g|0)!=(HEAP32[(j+8|0)>>2]|0)?11:12;break;case 11:_SystemError(d,
STRING_TABLE.__str206|0,1);_EnvExitRouter(d,1);b=12;break;case 12:b=j+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=20;break;case 13:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]|0)?14:15;break;case 14:var n=_genalloc(d,28);b=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=16;break;case 16:j=n;HEAP32[(j+12|0)>>2]=e;HEAP32[(j|0)>>2]=k;HEAP32[(j+4|0)>>2]=1;b=0!=(i|0)?17:18;break;case 17:var o=g;b=19;break;case 18:o=_NewSlotNameID(d);b=19;break;case 19:HEAP32[(j+8|0)>>2]=o;HEAP32[(j+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+112|0)>>2]+(k<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+112|0)>>2]+(k<<2)|0)>>2]=j;b=e+4|0;HEAP32[b>>2]=
HEAP32[b>>2]+1|0;l=(_strlen(HEAP32[(e+16|0)>>2])+4|0)+1|0;b=_gm2(d,l);_strcpy(b,STRING_TABLE.__str9215|0);_strcat(b,HEAP32[(e+16|0)>>2]);var p=_EnvAddSymbol(d,b);HEAP32[(j+16|0)>>2]=p;p=HEAP32[(j+16|0)>>2]+4|0;HEAP32[p>>2]=HEAP32[p>>2]+1|0;_rm(d,b,l);HEAP32[(j+24|0)>>2]=0;b=20;break;case 20:return j;default:assert(0,"bad label: "+b)}}_AddSlotName.X=1;
function _DeleteSlotName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=13;break;case 4:e=0;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+112|0)>>2]+(HEAP32[(b|0)>>2]<<2)|0)>>2];c=5;break;case 5:c=(d|0)!=(b|0)?6:7;break;case 6:e=d;d=HEAP32[(d+20|0)>>2];c=5;break;case 7:c=d+4|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(HEAP32[(d+4|0)>>2]|0)?8:9;break;case 8:c=13;break;case 9:c=0==(e|0)?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>
2]+112|0)>>2]+(HEAP32[(d|0)>>2]<<2)|0)>>2]=HEAP32[(d+20|0)>>2];c=12;break;case 11:HEAP32[(e+20|0)>>2]=HEAP32[(d+20|0)>>2];c=12;break;case 12:_DecrementSymbolCount(a,HEAP32[(d+12|0)>>2]);_DecrementSymbolCount(a,HEAP32[(d+16|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+
112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=13;break;case 13:return;default:assert(0,"bad label: "+c)}}_DeleteSlotName.X=1;
function _RemoveDefclass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=0;c=3;break;case 3:c=e>>>0<(HEAPU16[(b+36|0)>>1]&65535)>>>0?4:6;break;case 4:_DeleteSubclassLink(a,HEAP32[(HEAP32[((b+36|0)+4|0)>>2]+(e<<2)|0)>>2],b);c=5;break;case 5:e=e+1|0;c=3;break;case 6:_RemoveClassFromTable(a,b);_InstallClass(a,b,0);_DeletePackedClassLinks(a,b+36|0,0);_DeletePackedClassLinks(a,b+52|0,0);_DeletePackedClassLinks(a,b+44|0,0);e=0;c=7;break;case 7:c=e>>>0<HEAPU32[(b+72|0)>>2]>>>0?8:15;break;case 8:c=
0!=(HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+16|0)>>2]|0)?9:13;break;case 9:c=0!=(HEAPU32[(HEAP32[(b+60|0)>>2]+44*e|0)>>2]>>>6&1|0)?10:11;break;case 10:_ReturnPackedExpression(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+16|0)>>2]);c=12;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=12;break;case 12:c=13;break;case 13:_DeleteSlotName(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+8|0)>>2]);_RemoveConstraint(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*e|0)+20|0)>>2]);c=14;break;case 14:e=e+1|0;c=7;break;case 15:c=0!=(HEAP32[(b+80|0)>>2]|0)?16:17;break;case 16:_rm(a,HEAP32[(b+64|0)>>2],HEAP32[(b+80|0)>>2]<<2|0);_rm(a,HEAP32[(b+68|0)>>2],(HEAP32[(b+84|0)>>2]+1|0)<<2|0);c=17;break;case 17:c=0!=(HEAP32[(b+
72|0)>>2]|0)?18:19;break;case 18:_rm(a,HEAP32[(b+60|0)>>2],44*HEAP32[(b+72|0)>>2]|0);c=19;break;case 19:e=0;c=20;break;case 20:c=e>>>0<HEAPU32[(b+104|0)>>2]>>>0?21:29;break;case 21:d=HEAP32[(b+96|0)>>2]+40*e|0;c=0!=(HEAP32[(d+28|0)>>2]|0)?22:23;break;case 22:_ReturnPackedExpression(a,HEAP32[(d+28|0)>>2]);c=23;break;case 23:c=0!=(HEAP32[(d+32|0)>>2]|0)?24:25;break;case 24:c=a;var g=HEAP32[(d+32|0)>>2],i=_strlen(HEAP32[(d+32|0)>>2])+1|0;_rm(c,g,i);c=25;break;case 25:c=0!=(HEAP32[(d+36|0)>>2]|0)?26:
27;break;case 26:_ClearUserDataList(a,HEAP32[(d+36|0)>>2]);c=27;break;case 27:c=28;break;case 28:e=e+1|0;c=20;break;case 29:c=0!=(HEAP32[(b+104|0)>>2]|0)?30:31;break;case 30:_rm(a,HEAP32[(b+96|0)>>2],40*HEAP32[(b+104|0)>>2]|0);_rm(a,HEAP32[(b+100|0)>>2],HEAP32[(b+104|0)>>2]<<2|0);c=31;break;case 31:_SetConstructPPForm(a,b,0);_DeassignClassID(a,HEAPU16[(b+26|0)>>1]&65535);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+c)}}_RemoveDefclass.X=1;
function _InstallClass(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;a=0!=(e|0)?3:4;break;case 3:a=0!=(HEAP32[(d+24|0)>>2]&1|0)?6:4;break;case 4:a=0==(e|0)?5:7;break;case 5:a=0==(HEAP32[(d+24|0)>>2]&1|0)?6:7;break;case 6:a=25;break;case 7:a=0==(e|0)?8:24;break;case 8:j=d+24|0;HEAP32[j>>2]&=-2;_DecrementSymbolCount(b,HEAP32[(d|0)>>2]);_DecrementBitMapCount(b,HEAP32[(d+112|0)>>2]);_ClearUserDataList(b,HEAP32[((d|0)+20|0)>>2]);j=0;a=9;break;case 9:a=j>>>0<HEAPU32[(d+72|0)>>2]>>>
0?10:17;break;case 10:g=HEAP32[(d+60|0)>>2]+44*j|0;_DecrementSymbolCount(b,HEAP32[(g+12|0)>>2]);a=0!=(HEAP32[(g+16|0)>>2]|0)?11:15;break;case 11:a=0!=(HEAPU32[g>>2]>>>6&1|0)?12:13;break;case 12:_ExpressionDeinstall(b,HEAP32[(g+16|0)>>2]);a=14;break;case 13:_ValueDeinstall(b,HEAP32[(g+16|0)>>2]);a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:j=j+1|0;a=9;break;case 17:j=0;a=18;break;case 18:a=j>>>0<HEAPU32[(d+104|0)>>2]>>>0?19:23;break;case 19:i=HEAP32[(d+96|0)>>2]+40*j|0;_DecrementSymbolCount(b,
HEAP32[(i+8|0)>>2]);a=0!=(HEAP32[(i+28|0)>>2]|0)?20:21;break;case 20:_ExpressionDeinstall(b,HEAP32[(i+28|0)>>2]);a=21;break;case 21:a=22;break;case 22:j=j+1|0;a=18;break;case 23:a=25;break;case 24:a=d+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=HEAP32[(d|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=25;break;case 25:return;default:assert(0,"bad label: "+a)}}_InstallClass.X=1;
function _DeassignClassID(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;a=h;b=f;i=g=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]+(b<<2)|0)>>2]=0;d=b+1|0;c=3;break;case 3:c=d>>>0<(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)>>>0?4:8;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]+(d<<2)|0)>>2]|0)?5:6;break;case 5:c=19;break;case 6:c=7;break;case 7:d=d+1|0;c=3;break;case 8:e=0;c=9;break;case 9:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+84|0)>>2]+100|0)>>2]+(b<<2)|0)>>2]|0)?10:17;break;case 10:HEAP16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]=b&65535;c=0==((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535|0)%30|0)?11:14;break;case 11:i=HEAP16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1];c=0==(e|0)?12:13;break;case 12:g=((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)+30|0)&65535;e=1;c=13;break;case 13:c=14;break;case 14:c=0==(b|0)?15:16;break;case 15:c=17;break;case 16:b=b-1|
0;c=9;break;case 17:c=0!=(e|0)?18:19;break;case 18:c=_genrealloc(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2],(g&65535)<<2|0,(i&65535)<<2|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]=c;HEAP16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+110|0)>>1]=i;c=19;break;case 19:return;default:assert(0,"bad label: "+c)}}_DeassignClassID.X=1;
function _DestroyDefclass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;_DeletePackedClassLinks(a,b+36|0,0);_DeletePackedClassLinks(a,b+52|0,0);_DeletePackedClassLinks(a,b+44|0,0);d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(b+72|0)>>2]>>>0?4:11;break;case 4:c=0!=(HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]|0)?5:9;break;case 5:c=0!=(HEAPU32[(HEAP32[(b+60|0)>>2]+44*d|0)>>2]>>>6&1|0)?6:7;break;case 6:_ReturnPackedExpression(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]);c=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=8;break;case 8:c=9;break;case 9:c=10;break;case 10:d=d+1|0;c=3;break;case 11:c=0!=(HEAP32[(b+80|0)>>2]|0)?12:13;break;case 12:_rm(a,HEAP32[(b+
64|0)>>2],HEAP32[(b+80|0)>>2]<<2|0);_rm(a,HEAP32[(b+68|0)>>2],(HEAP32[(b+84|0)>>2]+1|0)<<2|0);c=13;break;case 13:c=0!=(HEAP32[(b+72|0)>>2]|0)?14:15;break;case 14:_rm(a,HEAP32[(b+60|0)>>2],44*HEAP32[(b+72|0)>>2]|0);c=15;break;case 15:d=0;c=16;break;case 16:c=d>>>0<HEAPU32[(b+104|0)>>2]>>>0?17:25;break;case 17:e=HEAP32[(b+96|0)>>2]+40*d|0;c=0!=(HEAP32[(e+28|0)>>2]|0)?18:19;break;case 18:_ReturnPackedExpression(a,HEAP32[(e+28|0)>>2]);c=19;break;case 19:c=0!=(HEAP32[(e+32|0)>>2]|0)?20:21;break;case 20:c=
a;var g=HEAP32[(e+32|0)>>2],i=_strlen(HEAP32[(e+32|0)>>2])+1|0;_rm(c,g,i);c=21;break;case 21:c=0!=(HEAP32[(e+36|0)>>2]|0)?22:23;break;case 22:_ClearUserDataList(a,HEAP32[(e+36|0)>>2]);c=23;break;case 23:c=24;break;case 24:d=d+1|0;c=16;break;case 25:c=0!=(HEAP32[(b+104|0)>>2]|0)?26:27;break;case 26:_rm(a,HEAP32[(b+96|0)>>2],40*HEAP32[(b+104|0)>>2]|0);_rm(a,HEAP32[(b+100|0)>>2],HEAP32[(b+104|0)>>2]<<2|0);c=27;break;case 27:_DestroyConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+
16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+592|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+c)}}_DestroyDefclass.X=1;
function _IsClassBeingUsed(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0<HEAPU32[(a+28|0)>>2]>>>0?3:4;break;case 3:c=1;f=11;break;case 4:b=0;f=5;break;case 5:f=b>>>0<(HEAPU16[(a+44|0)>>1]&65535)>>>0?6:10;break;case 6:f=0!=(_IsClassBeingUsed(HEAP32[(HEAP32[((a+44|0)+4|0)>>2]+(b<<2)|0)>>2])|0)?7:8;break;case 7:c=1;f=11;break;case 8:f=9;break;case 9:b=b+1|0;f=5;break;case 10:c=0;f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}
function _RemoveAllUserClasses(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;a=h;e=1;f=0!=(_Bloaded(a)|0)?3:4;break;case 3:c=0;f=16;break;case 4:b=_EnvGetNextDefclass(a,0);f=5;break;case 5:f=0!=(b|0)?6:9;break;case 6:f=0==(HEAPU32[(b+24|0)>>2]>>>1&1|0)?7:8;break;case 7:f=9;break;case 8:b=_EnvGetNextDefclass(a,b);f=5;break;case 9:f=10;break;case 10:f=0!=(b|0)?11:15;break;case 11:d=b;b=_EnvGetNextDefclass(a,b);f=0!=(_EnvIsDefclassDeletable(a,d)|0)?12:13;break;case 12:_RemoveConstructFromModule(a,
d);_RemoveDefclass(a,d);f=14;break;case 13:e=0;f=a;var g=_GetConstructNameString(d);_CantDeleteItemErrorMessage(f,STRING_TABLE.__str8214|0,g);f=14;break;case 14:f=10;break;case 15:c=e;f=16;break;case 16:return c;default:assert(0,"bad label: "+f)}}_RemoveAllUserClasses.X=1;
function _FindIDSlotNameHash(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=0;c=3;break;case 3:c=167>(e|0)?4:11;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+112|0)>>2]+(e<<2)|0)>>2];c=5;break;case 5:c=0!=(g|0)?6:9;break;case 6:c=(HEAP32[(g+8|0)>>2]|0)==(d|0)?7:8;break;case 7:a=g;c=12;break;case 8:g=HEAP32[(g+20|0)>>2];c=5;break;case 9:c=10;break;case 10:e=e+1|0;c=3;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
_FindIDSlotNameHash.X=1;function _ReleaseTraversalID(h){h=HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+136|0;HEAP16[h>>1]=HEAP16[h>>1]-1&65535}function _EnvClassAbstractP(h,f){return HEAPU32[(f+24|0)>>2]>>>2&1}function _EnvClassReactiveP(h,f){return HEAPU32[(f+24|0)>>2]>>>3&1}
function _DeleteClassUAG(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:c=0!=(HEAPU16[(d+44|0)>>1]&65535|0)?4:7;break;case 4:c=HEAPU16[(d+44|0)>>1]&65535;_DeleteClassUAG(b,HEAP32[(HEAP32[((d+44|0)+4|0)>>2]|0)>>2]);c=(HEAPU16[(d+44|0)>>1]&65535|0)==(c|0)?5:6;break;case 5:a=0;c=10;break;case 6:c=3;break;case 7:c=0!=(_EnvIsDefclassDeletable(b,d)|0)?8:9;break;case 8:_RemoveConstructFromModule(b,d);_RemoveDefclass(b,d);a=1;c=10;break;case 9:a=0;c=10;break;case 10:return a;default:assert(0,
"bad label: "+c)}}_DeleteClassUAG.X=1;
function _MarkBitMapSubclasses(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=0!=(e|0)?3:4;break;case 3:a=b+((HEAPU16[(d+26|0)>>1]&65535|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(HEAPU16[(d+26|0)>>1]&65535|0)%8&255)<<24>>24)&255;a=5;break;case 4:a=b+((HEAPU16[(d+26|0)>>1]&65535|0)/8&-1)|0;HEAP8[a]=HEAP8[a]<<24>>24&((1<<(HEAPU16[(d+26|0)>>1]&65535|0)%8^-1)&255)<<24>>24&255;a=5;break;case 5:g=0;a=6;break;case 6:a=g>>>0<(HEAPU16[(d+44|0)>>1]&65535)>>>0?7:9;break;case 7:_MarkBitMapSubclasses(b,
HEAP32[(HEAP32[((d+44|0)+4|0)>>2]+(g<<2)|0)>>2],e);a=8;break;case 8:g=g+1|0;a=6;break;case 9:return;default:assert(0,"bad label: "+a)}}_MarkBitMapSubclasses.X=1;
function _FindSlotNameID(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;a=f;b=_HashSlotName(a);b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]+(b<<2)|0)>>2];c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:var d=(HEAP32[(b+12|0)>>2]|0)!=(a|0)&1;c=6;break;case 5:d=0;c=6;break;case 6:c=0!=(d|0)?7:8;break;case 7:b=HEAP32[(b+20|0)>>2];c=3;break;case 8:c=0!=(b|0)?9:10;break;case 9:var e=(HEAP32[(b+8|0)>>2]&65535)<<16>>16;c=11;break;case 10:e=-1;c=11;break;case 11:return e&65535;default:assert(0,
"bad label: "+c)}}_FindSlotNameID.X=1;function _FindIDSlotName(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=_FindIDSlotNameHash(h,f);c=0!=(a|0)?3:4;break;case 3:var b=HEAP32[(a+12|0)>>2];c=5;break;case 4:b=0;c=5;break;case 5:return b;default:assert(0,"bad label: "+c)}}
function _GetTraversalID(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;f=256<=(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+136|0)>>1]&65535|0)?3:4;break;case 3:_PrintErrorID(a,STRING_TABLE.__str206|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str1207|0,STRING_TABLE.__str10216|0);_PrintLongInteger(a,STRING_TABLE.__str1207|0,256);_EnvPrintRouter(a,STRING_TABLE.__str1207|0,STRING_TABLE.__str4210|0);_SetEvaluationError(a,1);c=-1;f=13;break;case 4:b=0;f=5;break;case 5:f=167>b>>>0?6:12;break;case 6:d=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+104|0)>>2]+(b<<2)|0)>>2];f=7;break;case 7:f=0!=(d|0)?8:10;break;case 8:f=(d+116|0)+((HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+136|0)>>1]&65535|0)/8&-1)|0;HEAP8[f]=HEAP8[f]<<24>>24&((1<<(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+136|0)>>1]&65535|0)%8^-1)&255)<<24>>24&255;f=9;break;case 9:d=HEAP32[(d+108|0)>>2];f=7;break;case 10:f=11;break;case 11:b=b+1|0;f=5;break;case 12:c=HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+136|0;f=HEAPU16[c>>1];
HEAP16[c>>1]=f+1&65535;c=f&65535;f=13;break;case 13:return c;default:assert(0,"bad label: "+f)}}_GetTraversalID.X=1;
function _ClassAbstractPCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str234|0,1,2,d)|0)?3:4;break;case 3:a=0;c=7;break;case 4:e=_LookupDefclassByMdlOrScope(b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=0==(e|0)?5:6;break;case 5:_ClassExistError(b,STRING_TABLE.__str234|0,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);a=0;c=7;break;case 6:a=
_EnvClassAbstractP(b,e);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _ClassReactivePCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str1235|0,1,2,d)|0)?3:4;break;case 3:a=0;c=7;break;case 4:e=_LookupDefclassByMdlOrScope(b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=0==(e|0)?5:6;break;case 5:_ClassExistError(b,STRING_TABLE.__str1235|0,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);a=0;c=7;break;case 6:a=
_EnvClassReactiveP(b,e);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _ClassInfoFnxArgs(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;HEAP32[i>>2]=0;b=0==(_EnvRtnArgCount(e)|0)?3:4;break;case 3:_ExpectedCountError(e,g,1,1);_SetEvaluationError(e,1);d=0;b=16;break;case 4:b=0==(_EnvArgTypeCheck(e,g,1,2,k)|0)?5:6;break;case 5:d=0;b=16;break;case 6:j=_LookupDefclassByMdlOrScope(e,HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]);b=0==
(j|0)?7:8;break;case 7:_ClassExistError(e,g,HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]);d=0;b=16;break;case 8:b=2==(_EnvRtnArgCount(e)|0)?9:15;break;case 9:b=0==(_EnvArgTypeCheck(e,g,2,2,k)|0)?10:11;break;case 10:d=0;b=16;break;case 11:b=0==(_strcmp(HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2],STRING_TABLE.__str2236|0)|0)?12:13;break;case 12:HEAP32[i>>2]=1;b=14;break;case 13:_SyntaxErrorMessage(e,g);_SetEvaluationError(e,1);d=0;b=16;break;case 14:b=15;break;case 15:d=j;b=16;break;case 16:return h=d,STACKTOP=a,
h;default:assert(0,"bad label: "+b)}}_ClassInfoFnxArgs.X=1;function _ClassSlotsCommand(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_ClassInfoFnxArgs(b,STRING_TABLE.__str3237|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvClassSlots(b,g,d,HEAP32[e>>2]);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _EnvClassSlots(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=0!=(i|0)?3:4;break;case 3:var k=HEAP32[(e+80|0)>>2];b=5;break;case 4:k=HEAP32[(e+72|0)>>2];b=5;break;case 5:b=k;HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=b-1|0;var l=_EnvCreateMultifield(d,b);HEAP32[(g+8|0)>>2]=l;b=0==(b|0)?6:7;break;case 6:b=18;break;case 7:b=0!=(i|0)?8:13;break;case 8:j=0;b=9;break;case 9:b=j>>>0<HEAPU32[(e+80|0)>>2]>>>0?10:12;break;case 10:HEAP16[((HEAP32[(g+8|
0)>>2]+16|0)+(((j+1|0)-1|0)<<3)|0)>>1]=2;HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+(((j+1|0)-1|0)<<3)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+64|0)>>2]+(j<<2)|0)>>2]+8|0)>>2]+12|0)>>2];b=11;break;case 11:j=j+1|0;b=9;break;case 12:b=18;break;case 13:j=0;b=14;break;case 14:b=j>>>0<HEAPU32[(e+72|0)>>2]>>>0?15:17;break;case 15:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+(((j+1|0)-1|0)<<3)|0)>>1]=2;HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+(((j+1|0)-1|0)<<3)|0)+4|0)>>2]=HEAP32[(HEAP32[((HEAP32[(e+60|0)>>2]+44*j|0)+8|0)>>
2]+12|0)>>2];b=16;break;case 16:j=j+1|0;b=14;break;case 17:b=18;break;case 18:return;default:assert(0,"bad label: "+b)}}_EnvClassSlots.X=1;
function _ClassSuperclassesCommand(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_ClassInfoFnxArgs(b,STRING_TABLE.__str4238|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvClassSuperclasses(b,g,d,HEAP32[e>>2]);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _EnvClassSuperclasses(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;b=0!=(a|0)?3:4;break;case 3:i=e+52|0;j=1;b=5;break;case 4:i=e+36|0;j=0;b=5;break;case 5:HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=((HEAPU16[(i|0)>>1]&65535)-j|0)-1|0;b=_EnvCreateMultifield(d,HEAP32[(g+16|0)>>2]+1|0);HEAP32[(g+8|0)>>2]=b;b=-1==(HEAP32[(g+16|0)>>2]|0)?6:7;break;case 6:b=11;break;case 7:k=j;l=1;b=8;break;case 8:b=k>>>0<(HEAPU16[(i|0)>>1]&65535)>>>0?9:11;break;case 9:HEAP16[((HEAP32[(g+
8|0)>>2]+16|0)+((l-1|0)<<3)|0)>>1]=2;b=_GetConstructNamePointer(HEAP32[(HEAP32[(i+4|0)>>2]+(k<<2)|0)>>2]);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((l-1|0)<<3)|0)+4|0)>>2]=b;b=10;break;case 10:k=k+1|0;l=l+1|0;b=8;break;case 11:return;default:assert(0,"bad label: "+b)}}_EnvClassSuperclasses.X=1;
function _ClassSubclassesCommand(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_ClassInfoFnxArgs(b,STRING_TABLE.__str5239|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvClassSubclasses(b,g,d,HEAP32[e>>2]);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _EnvClassSubclasses(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=b=_GetTraversalID(d);b=-1==(b|0)?3:4;break;case 3:b=9;break;case 4:b=_CountSubclasses(e,i,j);_ReleaseTraversalID(d);HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=b-1|0;var k=_EnvCreateMultifield(d,b);HEAP32[(g+8|0)>>2]=k;b=0==(b|0)?5:6;break;case 5:b=9;break;case 6:j=b=_GetTraversalID(d);b=-1==(b|0)?7:8;break;case 7:b=9;break;case 8:_StoreSubclasses(HEAP32[(g+8|0)>>2],1,e,i,j,1);
_ReleaseTraversalID(d);b=9;break;case 9:return;default:assert(0,"bad label: "+b)}}_EnvClassSubclasses.X=1;
function _GetDefmessageHandlersListCmd(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;a=0==(_EnvRtnArgCount(b)|0)?3:4;break;case 3:_EnvGetDefmessageHandlerList(b,0,d,0);a=7;break;case 4:g=_ClassInfoFnxArgs(b,STRING_TABLE.__str6240|0,e);a=0==(g|0)?5:6;break;case 5:_EnvSetMultifieldErrorValue(b,d);a=7;break;case 6:_EnvGetDefmessageHandlerList(b,g,d,HEAP32[e>>2]);a=7;break;
case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _EnvGetDefmessageHandlerList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s;d=h;e=f;g=c;i=a;b=0==(e|0)?3:4;break;case 3:i=0;j=_EnvGetNextDefclass(d,0);l=_EnvGetNextDefclass(d,j);b=5;break;case 4:j=e;l=_EnvGetNextDefclass(d,j);_SetNextConstruct(j,0);b=5;break;case 5:k=j;q=0;b=6;break;case 6:b=0!=(j|0)?7:16;break;case 7:b=0!=(i|0)?8:9;break;case 8:var t=HEAPU16[(j+52|0)>>1]&65535;b=10;break;case 9:t=1;b=10;break;case 10:p=t;o=0;b=11;break;case 11:b=(o|0)<(p|0)?12:
14;break;case 12:q=q+HEAP32[(HEAP32[(HEAP32[((j+52|0)+4|0)>>2]+(o<<2)|0)>>2]+104|0)>>2]|0;b=13;break;case 13:o=o+1|0;b=11;break;case 14:b=15;break;case 15:j=_EnvGetNextDefclass(d,j);b=6;break;case 16:s=3*q|0;HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=s-1|0;j=_EnvCreateMultifield(d,s);HEAP32[(g+8|0)>>2]=j;j=k;r=0;b=17;break;case 17:b=0!=(j|0)?18:34;break;case 18:b=0!=(i|0)?19:20;break;case 19:var u=HEAPU16[(j+52|0)>>1]&65535;b=21;break;case 20:u=1;b=21;break;case 21:p=u;o=0;b=22;
break;case 22:b=(o|0)<(p|0)?23:32;break;case 23:m=HEAP32[(HEAP32[((j+52|0)+4|0)>>2]+(o<<2)|0)>>2];b=0==(i|0)?24:25;break;case 24:q=r+1|0;b=26;break;case 25:q=((s-(3*HEAP32[(m+104|0)>>2]|0)|0)-r|0)+1|0;b=26;break;case 26:n=0;b=27;break;case 27:b=n>>>0<HEAPU32[(m+104|0)>>2]>>>0?28:30;break;case 28:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((q-1|0)<<3)|0)>>1]=2;b=_GetConstructNamePointer(m);var v=q;q=v+1|0;HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((v-1|0)<<3)|0)+4|0)>>2]=b;HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((q-1|
0)<<3)|0)>>1]=2;b=HEAP32[((HEAP32[(m+96|0)>>2]+40*n|0)+8|0)>>2];v=q;q=v+1|0;HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((v-1|0)<<3)|0)+4|0)>>2]=b;HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((q-1|0)<<3)|0)>>1]=2;b=_EnvAddSymbol(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+132|0)+((HEAPU32[(HEAP32[(m+96|0)>>2]+40*n|0)>>2]>>>1&3)<<2)|0)>>2]);v=q;q=v+1|0;HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((v-1|0)<<3)|0)+4|0)>>2]=b;b=29;break;case 29:n=n+1|0;b=27;break;case 30:r=r+(3*HEAP32[(m+104|0)>>2]|0)|0;b=31;break;case 31:o=
o+1|0;b=22;break;case 32:b=33;break;case 33:j=_EnvGetNextDefclass(d,j);b=17;break;case 34:b=0!=(k|0)?35:36;break;case 35:_SetNextConstruct(k,l);b=36;break;case 36:return;default:assert(0,"bad label: "+b)}}_EnvGetDefmessageHandlerList.X=1;function _SlotFacetsCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str7241|0,64)}
function _SlotInfoSupportFunction(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;g=f;d=c;i=a;j=_CheckClassAndSlot(e,d,k);d=0==(j|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(e,g);d=5;break;case 4:FUNCTION_TABLE[i](e,HEAP32[k>>2],HEAP32[(j+16|0)>>2],g);d=5;break;case 5:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}
function _EnvSlotFacets(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str7241|0);b=0==(b|0)?3:4;break;case 3:b=21;break;case 4:HEAP32[(g+16|0)>>2]=9;i=_EnvCreateMultifield(d,10);HEAP32[(g+8|0)>>2]=i;i=1;b=5;break;case 5:b=10>=(i|0)?6:8;break;case 6:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=2;b=7;break;case 7:i=i+1|0;b=5;break;case 8:b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>1&1|0)?STRING_TABLE.__str14248|0:STRING_TABLE.__str15249|
0);HEAP32[((HEAP32[(g+8|0)>>2]+16|0)+4|0)>>2]=b;b=0!=(HEAPU32[e>>2]>>>8&1|0)?9:10;break;case 9:b=_EnvAddSymbol(d,STRING_TABLE.__str16250|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+8|0)+4|0)>>2]=b;b=11;break;case 10:b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>6&1|0)?STRING_TABLE.__str17251|0:STRING_TABLE.__str18252|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+8|0)+4|0)>>2]=b;b=11;break;case 11:b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>3&1|0)?STRING_TABLE.__str16250|0:STRING_TABLE.__str19253|0);HEAP32[(((HEAP32[(g+8|0)>>
2]+16|0)+16|0)+4|0)>>2]=b;b=0!=(HEAPU32[e>>2]>>>5&1|0)?12:13;break;case 12:b=_EnvAddSymbol(d,STRING_TABLE.__str20254|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+24|0)+4|0)>>2]=b;b=17;break;case 13:b=0!=(HEAPU32[e>>2]>>>4&1|0)?14:15;break;case 14:b=_EnvAddSymbol(d,STRING_TABLE.__str21255|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+24|0)+4|0)>>2]=b;b=16;break;case 15:b=_EnvAddSymbol(d,STRING_TABLE.__str22256|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+24|0)+4|0)>>2]=b;b=16;break;case 16:b=17;break;case 17:b=_EnvAddSymbol(d,
0!=(HEAP32[e>>2]&1|0)?STRING_TABLE.__str23257|0:STRING_TABLE.__str24258|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+32|0)+4|0)>>2]=b;b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>9&1|0)?STRING_TABLE.__str25259|0:STRING_TABLE.__str16250|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+40|0)+4|0)>>2]=b;b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>2&1|0)?STRING_TABLE.__str26260|0:STRING_TABLE.__str27261|0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+48|0)+4|0)>>2]=b;b=_EnvAddSymbol(d,0!=(HEAPU32[e>>2]>>>10&1|0)?STRING_TABLE.__str28262|0:STRING_TABLE.__str29263|
0);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+56|0)+4|0)>>2]=b;b=d;var j=_GetCreateAccessorString(e);b=_EnvAddSymbol(b,j);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+64|0)+4|0)>>2]=b;b=0!=(HEAPU32[e>>2]>>>4&1|0)?18:19;break;case 18:var k=_EnvAddSymbol(d,STRING_TABLE.__str16250|0);b=20;break;case 19:k=HEAP32[(e+12|0)>>2];b=20;break;case 20:HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+72|0)+4|0)>>2]=k;b=21;break;case 21:return;default:assert(0,"bad label: "+b)}}_EnvSlotFacets.X=1;
function _SlotSourcesCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str8242|0,66)}
function _EnvSlotSources(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str8242|0);b=0==(b|0)?3:4;break;case 3:b=27;break;case 4:i=1;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:var o=_genalloc(d,8);b=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=7;break;case 7:l=o;HEAP32[(l|0)>>2]=HEAP32[(e+4|0)>>2];HEAP32[(l+4|0)>>2]=0;b=0!=(HEAPU32[e>>2]>>>2&1|0)?8:22;break;case 8:j=1;b=9;break;case 9:b=(j|0)<(HEAPU16[(HEAP32[(e+4|0)>>2]+52|0)>>1]&65535|0)?10:21;break;case 10:n=HEAP32[(HEAP32[((HEAP32[(e+4|0)>>2]+52|0)+4|0)>>2]+(j<<2)|0)>>2];k=_FindClassSlot(n,HEAP32[(HEAP32[(e+8|0)>>
2]+12|0)>>2]);b=0!=(k|0)?11:12;break;case 11:b=0==(HEAPU32[k>>2]>>>3&1|0)?13:19;break;case 12:b=19;break;case 13:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?14:15;break;case 14:var p=_genalloc(d,8);b=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|
0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=16;break;case 16:m=p;HEAP32[(m|0)>>2]=n;HEAP32[(m+4|0)>>2]=l;l=m;i=i+1|0;b=0==(HEAPU32[k>>2]>>>2&1|0)?17:18;break;case 17:b=21;break;case 18:b=19;break;case 19:b=20;break;case 20:j=j+1|0;b=9;break;case 21:b=22;break;case 22:HEAP32[(g+16|0)>>2]=i-1|0;i=_EnvCreateMultifield(d,i);HEAP32[(g+8|0)>>2]=i;m=l;i=1;b=23;break;case 23:b=0!=(m|0)?24:26;break;case 24:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>
1]=2;b=_GetConstructNamePointer(HEAP32[(m|0)>>2]);HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=b;b=25;break;case 25:m=HEAP32[(m+4|0)>>2];i=i+1|0;b=23;break;case 26:_DeleteClassLinks(d,l);b=27;break;case 27:return;default:assert(0,"bad label: "+b)}}_EnvSlotSources.X=1;function _SlotTypesCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str9243|0,68)}
function _EnvSlotTypes(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m;e=h;g=f;d=c;i=a;g=d=_SlotInfoSlot(e,i,g,d,STRING_TABLE.__str9243|0);d=0==(d|0)?3:4;break;case 3:d=30;break;case 4:d=0!=(HEAP32[(g+20|0)>>2]|0)?5:6;break;case 5:d=0!=(HEAP32[HEAP32[(g+20|0)>>2]>>2]&1|0)?7:8;break;case 6:d=7;break;case 7:HEAP8[l+1|0]=-1;HEAP8[l|0]=-1;m=l|0;HEAP8[m]=HEAP8[m]<<24>>24&239;
m=8;d=25;break;case 8:HEAP8[l+1|0]=0;m=HEAP8[l|0]=0;d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>1&1|0)?9:10;break;case 9:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|4)&255;d=10;break;case 10:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>2&1|0)?11:12;break;case 11:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|8)&255;d=12;break;case 12:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>3&1|0)?13:14;break;case 13:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|1)&255;d=14;break;case 14:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>4&1|0)?15:
16;break;case 15:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|2)&255;d=16;break;case 16:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>5&1|0)?17:18;break;case 17:m=m+1|0;d=l+1|0;HEAP8[d]=(HEAP8[d]<<24>>24|1)&255;d=18;break;case 18:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>6&1|0)?19:20;break;case 19:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|-128)&255;d=20;break;case 20:d=0!=(HEAPU32[HEAP32[(g+20|0)>>2]>>2]>>>7&1|0)?21:22;break;case 21:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|32)&255;d=22;break;case 22:d=0!=(HEAPU32[HEAP32[(g+
20|0)>>2]>>2]>>>8&1|0)?23:24;break;case 23:m=m+1|0;d=l|0;HEAP8[d]=(HEAP8[d]<<24>>24|64)&255;d=24;break;case 24:d=25;break;case 25:HEAP32[(i+16|0)>>2]=m-1|0;j=_EnvCreateMultifield(e,m);HEAP32[(i+8|0)>>2]=j;j=1;k=0;d=26;break;case 26:d=j>>>0<=m>>>0?27:30;break;case 27:d=0!=(HEAP8[l+Math.floor((k>>>0)/8)|0]<<24>>24&(1<<(k>>>0)%8&255)<<24>>24|0)?28:29;break;case 28:HEAP16[((HEAP32[(i+8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1]=2;d=_GetConstructNamePointer(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+64|0)+(k<<
2)|0)>>2]);HEAP32[(((HEAP32[(i+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=d;j=j+1|0;d=29;break;case 29:k=k+1|0;d=26;break;case 30:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvSlotTypes.X=1;function _SlotAllowedValuesCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str10244|0,70)}
function _EnvSlotAllowedValues(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str10244|0);b=0==(b|0)?3:4;break;case 3:b=11;break;case 4:b=0!=(HEAP32[(e+20|0)>>2]|0)?5:6;break;case 5:b=0==(HEAP32[(HEAP32[(e+20|0)>>2]+12|0)>>2]|0)?7:8;break;case 6:b=7;break;case 7:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 8:i=_ExpressionSize(HEAP32[(HEAP32[(e+20|0)>>2]+12|0)>>2])-1|
0;HEAP32[(g+16|0)>>2]=i;i=_EnvCreateMultifield(d,HEAP32[(g+16|0)>>2]+1|0);HEAP32[(g+8|0)>>2]=i;i=1;j=HEAP32[(HEAP32[(e+20|0)>>2]+12|0)>>2];b=9;break;case 9:b=0!=(j|0)?10:11;break;case 10:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=HEAP16[(j|0)>>1];HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=HEAP32[(j+4|0)>>2];j=HEAP32[(j+12|0)>>2];i=i+1|0;b=9;break;case 11:return;default:assert(0,"bad label: "+b)}}_EnvSlotAllowedValues.X=1;
function _SlotAllowedClassesCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str11245|0,72)}
function _EnvSlotAllowedClasses(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str11245|0);b=0==(b|0)?3:4;break;case 3:b=11;break;case 4:b=0!=(HEAP32[(e+20|0)>>2]|0)?5:6;break;case 5:b=0==(HEAP32[(HEAP32[(e+20|0)>>2]+8|0)>>2]|0)?7:8;break;case 6:b=7;break;case 7:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 8:i=_ExpressionSize(HEAP32[(HEAP32[(e+20|0)>>2]+8|0)>>2])-1|
0;HEAP32[(g+16|0)>>2]=i;i=_EnvCreateMultifield(d,HEAP32[(g+16|0)>>2]+1|0);HEAP32[(g+8|0)>>2]=i;i=1;j=HEAP32[(HEAP32[(e+20|0)>>2]+8|0)>>2];b=9;break;case 9:b=0!=(j|0)?10:11;break;case 10:HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=HEAP16[(j|0)>>1];HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=HEAP32[(j+4|0)>>2];j=HEAP32[(j+12|0)>>2];i=i+1|0;b=9;break;case 11:return;default:assert(0,"bad label: "+b)}}_EnvSlotAllowedClasses.X=1;
function _SlotRangeCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str12246|0,74)}
function _EnvSlotRange(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str12246|0);b=0==(b|0)?3:4;break;case 3:b=11;break;case 4:b=0==(HEAP32[(e+20|0)>>2]|0)?5:6;break;case 5:b=10;break;case 6:b=0!=(HEAP32[HEAP32[(e+20|0)>>2]>>2]&1|0)?9:7;break;case 7:b=0!=(HEAPU32[HEAP32[(e+20|0)>>2]>>2]>>>3&1|0)?9:8;break;case 8:b=0!=(HEAPU32[HEAP32[(e+20|0)>>2]>>2]>>>4&1|0)?9:10;break;case 9:HEAP32[(g+16|0)>>2]=1;b=_EnvCreateMultifield(d,2);HEAP32[(g+
8|0)>>2]=b;HEAP16[(HEAP32[(g+8|0)>>2]+16|0)>>1]=HEAP16[(HEAP32[(HEAP32[(e+20|0)>>2]+16|0)>>2]|0)>>1];HEAP32[((HEAP32[(g+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+16|0)>>2]+4|0)>>2];HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+8|0)>>1]=HEAP16[(HEAP32[(HEAP32[(e+20|0)>>2]+20|0)>>2]|0)>>1];HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+20|0)>>2]+4|0)>>2];b=11;break;case 10:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>
2]+4|0)>>2];b=11;break;case 11:return;default:assert(0,"bad label: "+b)}}_EnvSlotRange.X=1;function _SlotCardinalityCommand(h,f){_SlotInfoSupportFunction(h,f,STRING_TABLE.__str13247|0,76)}
function _EnvSlotCardinality(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;b=c;g=a;e=b=_SlotInfoSlot(d,g,e,b,STRING_TABLE.__str13247|0);b=0==(b|0)?3:4;break;case 3:b=9;break;case 4:b=0==(HEAPU32[e>>2]>>>1&1|0)?5:6;break;case 5:_EnvSetMultifieldErrorValue(d,g);b=9;break;case 6:HEAP32[(g+16|0)>>2]=1;b=_EnvCreateMultifield(d,2);HEAP32[(g+8|0)>>2]=b;b=0!=(HEAP32[(e+20|0)>>2]|0)?7:8;break;case 7:HEAP16[(HEAP32[(g+8|0)>>2]+16|0)>>1]=HEAP16[(HEAP32[(HEAP32[(e+20|0)>>2]+24|0)>>2]|0)>>1];HEAP32[((HEAP32[(g+
8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+24|0)>>2]+4|0)>>2];HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+8|0)>>1]=HEAP16[(HEAP32[(HEAP32[(e+20|0)>>2]+28|0)>>2]|0)>>1];HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+28|0)>>2]+4|0)>>2];b=9;break;case 8:HEAP16[(HEAP32[(g+8|0)>>2]+16|0)>>1]=1;HEAP32[((HEAP32[(g+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+16|0)>>2];HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+8|0)>>1]=2;HEAP32[(((HEAP32[(g+8|
0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+8|0)>>2];b=9;break;case 9:return;default:assert(0,"bad label: "+b)}}_EnvSlotCardinality.X=1;
function _CountSubclasses(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;g=i=0;a=3;break;case 3:a=g>>>0<(HEAPU16[(b+44|0)>>1]&65535)>>>0?4:11;break;case 4:j=HEAP32[(HEAP32[((b+44|0)+4|0)>>2]+(g<<2)|0)>>2];a=0==(HEAP8[(j+116|0)+((e|0)/8&-1)|0]<<24>>24&(1<<(e|0)%8&255)<<24>>24|0)?5:9;break;case 5:i=i+1|0;a=(j+116|0)+((e|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(e|0)%8&255)<<24>>24)&255;a=0!=(d|0)?6:8;break;case 6:a=0!=(HEAPU16[(j+44|0)>>1]&65535|0)?7:8;break;case 7:a=_CountSubclasses(j,
d,e);i=i+a|0;a=8;break;case 8:a=9;break;case 9:a=10;break;case 10:g=g+1|0;a=3;break;case 11:return i;default:assert(0,"bad label: "+a)}}_CountSubclasses.X=1;
function _StoreSubclasses(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;g=h;i=f;j=c;k=a;l=b;m=d;n=i;o=0;e=3;break;case 3:e=o>>>0<(HEAPU16[(j+44|0)>>1]&65535)>>>0?4:14;break;case 4:p=HEAP32[(HEAP32[((j+44|0)+4|0)>>2]+(o<<2)|0)>>2];e=0==(HEAP8[(p+116|0)+((l|0)/8&-1)|0]<<24>>24&(1<<(l|0)%8&255)<<24>>24|0)?5:12;break;case 5:e=(p+116|0)+((l|0)/8&-1)|0;HEAP8[e]=(HEAP8[e]<<24>>24|(1<<(l|0)%8&255)<<24>>24)&255;e=0!=m<<16>>16?6:7;break;case 6:HEAP16[((g+16|0)+((n-1|0)<<3)|0)>>1]=2;e=
_GetConstructNamePointer(p);var q=n;n=q+1|0;HEAP32[(((g+16|0)+((q-1|0)<<3)|0)+4|0)>>2]=e;e=8;break;case 7:HEAP16[((g+16|0)+((n-1|0)<<3)|0)>>1]=82;e=p;q=n;n=q+1|0;HEAP32[(((g+16|0)+((q-1|0)<<3)|0)+4|0)>>2]=e;e=8;break;case 8:e=0!=(k|0)?9:11;break;case 9:e=0!=(HEAPU16[(p+44|0)>>1]&65535|0)?10:11;break;case 10:e=_StoreSubclasses(g,n,p,k,l,m);n=n+e|0;e=11;break;case 11:e=12;break;case 12:e=13;break;case 13:o=o+1|0;e=3;break;case 14:return n-i|0;default:assert(0,"bad label: "+e)}}_StoreSubclasses.X=1;
function _ClassSubclassAddresses(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=b=_GetTraversalID(d);b=-1==(b|0)?3:4;break;case 3:b=9;break;case 4:b=_CountSubclasses(e,i,j);_ReleaseTraversalID(d);HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=b-1|0;var k=_EnvCreateMultifield(d,b);HEAP32[(g+8|0)>>2]=k;b=0==(b|0)?5:6;break;case 5:b=9;break;case 6:j=b=_GetTraversalID(d);b=-1==(b|0)?7:8;break;case 7:b=9;break;case 8:_StoreSubclasses(HEAP32[(g+8|0)>>2],1,e,i,
j,0);_ReleaseTraversalID(d);b=9;break;case 9:return;default:assert(0,"bad label: "+b)}}_ClassSubclassAddresses.X=1;
function _SlotInfoSlot(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;m=d=_FindSymbolHN(g,k);d=0==(d|0)?3:4;break;case 3:_SetEvaluationError(g,1);_EnvSetMultifieldErrorValue(g,i);e=0;d=7;break;case 4:n=_FindInstanceTemplateSlot(g,j,m);d=-1==(n|0)?5:6;break;case 5:_SlotExistError(g,k,l);_SetEvaluationError(g,1);_EnvSetMultifieldErrorValue(g,i);e=0;d=7;break;case 6:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+12|0)>>2]=0;e=HEAP32[(HEAP32[(j+64|0)>>2]+(n<<2)|0)>>2];d=7;break;case 7:return e;
default:assert(0,"bad label: "+d)}}_SlotInfoSlot.X=1;
function _SetupObjectSystem(h){var f=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var c=_SetupObjectSystem_defclassEntityRecord>>2,a=f>>2,b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_AllocateEnvironmentData(h,21,156,0);_AddEnvironmentCleanupFunction(h,STRING_TABLE.__str1265|0,78,-500);a=HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+8|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
c=f>>2;a>>=2;for(b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+152|0)>>1]=0;c=_EnvAddSymbol(h,STRING_TABLE.__str2266|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+116|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+116|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=_EnvAddSymbol(h,STRING_TABLE.__str3267|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+120|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+120|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+
1|0;c=_EnvAddSymbol(h,STRING_TABLE.__str4268|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+124|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+124|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;_SetupDefclasses(h);_SetupInstances(h);_SetupMessageHandlers(h);_SetupDefinstances(h);_SetupQuery(h);_SetupObjectsBload(h);_SetupObjectsCompiler(h);_SetupObjectPatternStuff(h);STACKTOP=f}_SetupObjectSystem.X=1;
function _DeallocateDefclassData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;e=0;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:e=1;f=4;break;case 4:f=0!=(e|0)?10:5;break;case 5:_DoForAllConstructs(c,80,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+4|0)>>2],0,0);d=_EnvGetNextDefmodule(c,0);f=6;break;case 6:f=0!=(d|0)?7:9;break;case 7:f=_GetModuleItem(c,d,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=8;break;case 8:d=_EnvGetNextDefmodule(c,d);f=6;break;case 9:f=10;break;case 10:f=0!=(e|0)?14:11;break;case 11:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+100|0)>>2]|0)?12:13;break;case 12:_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+100|
0)>>2],(HEAPU16[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+110|0)>>1]&65535)<<2|0);f=13;break;case 13:f=14;break;case 14:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+104|0)>>2]|0)?15:16;break;case 15:_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+104|0)>>2],668);f=16;break;case 16:f=0!=(e|0)?25:17;break;case 17:b=0;f=18;break;case 18:f=167>(b|0)?19:24;break;case 19:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]+(b<<2)|0)>>2];f=20;break;case 20:f=0!=(a|0)?21:22;break;
case 21:f=HEAP32[(a+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=20;break;case 22:f=23;break;case 23:b=b+1|0;f=18;break;case 24:f=25;break;case 25:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|
0)>>2]+112|0)>>2]|0)?26:27;break;case 26:_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2],668);f=27;break;case 27:return;default:assert(0,"bad label: "+f)}}_DeallocateDefclassData.X=1;
function _SetupDefclasses(h){_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+8|0,82);var f=_RegisterModuleItem(h,STRING_TABLE.__str22286|0,82,84,86,88,90);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+4|0)>>2]=f;f=_AddConstruct(h,STRING_TABLE.__str22286|0,STRING_TABLE.__str1265|0,92,90,94,96,98,100,102,104,106,108);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2]=f;_AddClearReadyFunction(h,STRING_TABLE.__str22286|0,110,0);_EnvAddClearFunction(h,STRING_TABLE.__str22286|0,112,0);_InitializeClasses(h);
_AddPortConstructItem(h,STRING_TABLE.__str22286|0,2);_AddAfterModuleDefinedFunction(h,STRING_TABLE.__str22286|0,114,0);_EnvDefineFunction2(h,STRING_TABLE.__str23287|0,118,116,STRING_TABLE.__str24288|0,STRING_TABLE.__str25289|0);_AddSaveFunction(h,STRING_TABLE.__str22286|0,118,10);_EnvDefineFunction2(h,STRING_TABLE.__str26290|0,118,120,STRING_TABLE.__str27291|0,STRING_TABLE.__str28292|0);_EnvDefineFunction2(h,STRING_TABLE.__str29293|0,118,122,STRING_TABLE.__str30294|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,
STRING_TABLE.__str31295|0,118,124,STRING_TABLE.__str32296|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,STRING_TABLE.__str33297|0,118,126,STRING_TABLE.__str34298|0,STRING_TABLE.__str35299|0);_EnvDefineFunction2(h,STRING_TABLE.__str36300|0,109,128,STRING_TABLE.__str37301|0,STRING_TABLE.__str28292|0);_EnvDefineFunction2(h,STRING_TABLE.__str38302|0,98,130,STRING_TABLE.__str39303|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str41305|0,98,132,STRING_TABLE.__str42306|0,STRING_TABLE.__str40304|
0);_EnvDefineFunction2(h,STRING_TABLE.__str43307|0,98,134,STRING_TABLE.__str44308|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,STRING_TABLE.__str45309|0,98,136,STRING_TABLE.__str46310|0,STRING_TABLE.__str47311|0);_EnvDefineFunction2(h,STRING_TABLE.__str48312|0,98,138,STRING_TABLE.__str49313|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,STRING_TABLE.__str50314|0,98,140,STRING_TABLE.__str51315|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,STRING_TABLE.__str52316|0,109,142,STRING_TABLE.__str53317|
0,STRING_TABLE.__str54318|0);_EnvDefineFunction2(h,STRING_TABLE.__str55319|0,109,144,STRING_TABLE.__str56320|0,STRING_TABLE.__str54318|0);_EnvDefineFunction2(h,STRING_TABLE.__str57321|0,109,146,STRING_TABLE.__str58322|0,STRING_TABLE.__str54318|0);_EnvDefineFunction2(h,STRING_TABLE.__str59323|0,109,148,STRING_TABLE.__str60324|0,STRING_TABLE.__str61325|0);_EnvDefineFunction2(h,STRING_TABLE.__str62326|0,98,150,STRING_TABLE.__str63327|0,STRING_TABLE.__str47311|0);_EnvDefineFunction2(h,STRING_TABLE.__str64328|
0,109,152,STRING_TABLE.__str65329|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str66330|0,109,154,STRING_TABLE.__str67331|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str68332|0,109,156,STRING_TABLE.__str69333|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str70334|0,109,158,STRING_TABLE.__str71335|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str72336|0,109,160,STRING_TABLE.__str73337|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,
STRING_TABLE.__str74|0,109,162,STRING_TABLE.__str75|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str76|0,109,164,STRING_TABLE.__str77|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str78|0,98,166,STRING_TABLE.__str79|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str80|0,98,168,STRING_TABLE.__str81|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str82|0,98,170,STRING_TABLE.__str83|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,
STRING_TABLE.__str84|0,98,172,STRING_TABLE.__str85|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str86|0,117,174,STRING_TABLE.__str87|0,STRING_TABLE.__str40304|0);_EnvDefineFunction2(h,STRING_TABLE.__str88|0,119,176,STRING_TABLE.__str89|0,STRING_TABLE.__str25289|0);_EnvDefineFunction2(h,STRING_TABLE.__str90|0,119,178,STRING_TABLE.__str91|0,STRING_TABLE.__str92338|0);_EnvDefineFunction2(h,STRING_TABLE.__str93|0,119,180,STRING_TABLE.__str94|0,STRING_TABLE.__str25289|0);_AddWatchItem(h,
STRING_TABLE.__str95|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+128|0,75,182,184);_AddWatchItem(h,STRING_TABLE.__str96|0,1,HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+132|0,74,182,184)}_SetupDefclasses.X=1;
function _CreateSystemClasses(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j;c=h;_AddSlotName(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+116|0)>>2],0,1);_AddSlotName(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+120|0)>>2],1,1);a=_AddSystemClass(c,STRING_TABLE.__str5269|0,0);b=_AddSystemClass(c,STRING_TABLE.__str6270|0,a);f=_AddSystemClass(c,STRING_TABLE.__str7271|0,a);d=_AddSystemClass(c,STRING_TABLE.__str8272|0,b);e=_AddSystemClass(c,STRING_TABLE.__str9273|0,d);HEAP32[((HEAP32[(HEAP32[(c+
16|0)>>2]+84|0)>>2]+64|0)+4|0)>>2]=e;e=_AddSystemClass(c,STRING_TABLE.__str10274|0,d);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)>>2]=e;e=_AddSystemClass(c,STRING_TABLE.__str11275|0,b);g=_AddSystemClass(c,STRING_TABLE.__str12276|0,e);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+8|0)>>2]=g;g=_AddSystemClass(c,STRING_TABLE.__str13277|0,e);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+12|0)>>2]=g;g=_AddSystemClass(c,STRING_TABLE.__str14278|0,b);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>
2]+84|0)>>2]+64|0)+16|0)>>2]=g;g=_AddSystemClass(c,STRING_TABLE.__str15279|0,b);i=_AddSystemClass(c,STRING_TABLE.__str16280|0,g);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+20|0)>>2]=i;i=_AddSystemClass(c,STRING_TABLE.__str17281|0,g);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+24|0)>>2]=i;i=_AddSystemClass(c,STRING_TABLE.__str18282|0,b);j=_AddSystemClass(c,STRING_TABLE.__str19283|0,i);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]=j;j=_AddSystemClass(c,STRING_TABLE.__str20284|
0,i);HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]=j;j=_AddSystemClass(c,STRING_TABLE.__str21285|0,f);var k=j+24|0;HEAP32[k>>2]&=-5;k=j+24|0;HEAP32[k>>2]=HEAP32[k>>2]&-9|8;_AddClassLink(c,HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]+36|0,g,-1);_AddClassLink(c,HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]+52|0,g,2);_AddClassLink(c,g+44|0,HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2],-1);_AddConstructToModule(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+84|0)>>2]+64|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+4|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+8|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+12|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+16|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+20|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+
16|0)>>2]+84|0)>>2]+64|0)+24|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]);_AddConstructToModule(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]);_AddConstructToModule(a);_AddConstructToModule(b);_AddConstructToModule(d);_AddConstructToModule(e);_AddConstructToModule(g);_AddConstructToModule(i);_AddConstructToModule(f);_AddConstructToModule(j);a=_EnvGetNextDefclass(c,0);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:_AssignClassID(c,a);
f=5;break;case 5:a=_EnvGetNextDefclass(c,a);f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}_CreateSystemClasses.X=1;
function _AddSystemClass(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;b=f;e=c;g=d;b=_EnvAddSymbol(d,b);g=_NewClass(g,b);b=g+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-5|4;b=g+24|0;HEAP32[b>>2]&=-9;b=HEAP32[(g|0)>>2]+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=g+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=g+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;b=_HashClass(HEAP32[(g|0)>>2]);HEAP32[(g+32|0)>>2]=
b;_AddClassLink(d,g+52|0,g,-1);b=0!=(e|0)?3:8;break;case 3:_AddClassLink(d,g+36|0,e,-1);_AddClassLink(d,e+44|0,g,-1);_AddClassLink(d,g+52|0,e,-1);i=1;b=4;break;case 4:b=i>>>0<(HEAPU16[(e+52|0)>>1]&65535)>>>0?5:7;break;case 5:_AddClassLink(d,g+52|0,HEAP32[(HEAP32[((e+52|0)+4|0)>>2]+(i<<2)|0)>>2],-1);b=6;break;case 6:i=i+1|0;b=4;break;case 7:b=8;break;case 8:return HEAP32[(g+108|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(g+32|0)>>2]<<2)|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[(g+32|0)>>2]<<2)|0)>>2]=g,_ClearBitString(j|0,1),h=j|0,HEAP8[h]=(HEAP8[h]<<24>>24|1)&255,d=_AddBitMap(d,j|0,1),HEAP32[(g+112|0)>>2]=d,d=HEAP32[(g+112|0)>>2]+4|0,HEAP32[d>>2]=HEAP32[d>>2]+1|0,d=g,STACKTOP=a,d;default:assert(0,"bad label: "+b)}}_AddSystemClass.X=1;
function _AllocateModule(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule.X=1;
function _ReturnModule(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]|0)>>2]);var c=_FindIDSlotNameHash(h,0);_DeleteSlotName(h,c);c=_FindIDSlotNameHash(h,1);_DeleteSlotName(h,c);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule.X=1;
function _UpdateDefclassesScope(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i,j,k,l;a=h;b=_EnvGetCurrentModule(a)+24|0;e=HEAP32[b>>2];j=((_GetNumberOfDefmodules(a)|0)/8&-1)+1|0;i=_gm2(a,j);b=0;c=3;break;case 3:c=167>b>>>0?4:15;break;case 4:d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+104|0)>>2]+(b<<2)|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:13;break;case 6:l=HEAP32[(HEAP32[((d|
0)+8|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2];_ClearBitString(i,j);c=i;var m=HEAP32[(HEAP32[(d+112|0)>>2]+16|0)>>2],n=HEAPU16[(HEAP32[(d+112|0)>>2]+20|0)>>1]&65535|0;assert(0===n%1,"memcpy given "+n+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(c,m,n,1);_DecrementBitMapCount(a,HEAP32[(d+112|0)>>2]);c=0!=(HEAPU32[(d+24|0)>>2]>>>1&1|0)?7:8;break;case 7:c=i+((e|0)/8&-1)|0;HEAP8[c]=(HEAP8[c]<<24>>24|(1<<(e|0)%8&255)<<24>>24)&255;c=11;break;case 8:c=0!=(_FindImportedConstruct(a,
STRING_TABLE.__str22286|0,l,k,g,1,0)|0)?9:10;break;case 9:c=i+((e|0)/8&-1)|0;HEAP8[c]=(HEAP8[c]<<24>>24|(1<<(e|0)%8&255)<<24>>24)&255;c=10;break;case 10:c=11;break;case 11:c=_AddBitMap(a,i,j);HEAP32[(d+112|0)>>2]=c;c=HEAP32[(d+112|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=12;break;case 12:d=HEAP32[(d+108|0)>>2];c=5;break;case 13:c=14;break;case 14:b=b+1|0;c=3;break;case 15:_rm(a,i,j);STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_UpdateDefclassesScope.X=1;
function _DestroyDefclassAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_DestroyDefclass(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _ParseDefclass(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k,l,m=c+4,n=c+8,o,p=c+12,q=c+16;d=h;e=f;l=0;HEAP32[m>>2]=0;HEAP32[n>>2]=0;HEAP32[p>>2]=0;HEAP32[q>>2]=1;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str339|0);a=0!=(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>
2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str1340|0);b=1;a=74;break;case 5:g=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0,STRING_TABLE.__str1340|0,90,0,STRING_TABLE.__str2341|0,1,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=74;break;case 7:a=0==(_ValidClassName(d,HEAP32[(g+16|0)>>2],i)|0)?8:9;break;case 8:b=1;a=74;break;case 9:j=_ParseSuperclasses(d,e,g);a=0==(j|0)?10:11;break;case 10:b=1;a=74;break;case 11:k=_FindPrecedenceList(d,HEAP32[i>>2],j);
a=0==(k|0)?12:13;break;case 12:_DeletePackedClassLinks(d,j,1);b=1;a=74;break;case 13:o=0;_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=14;break;case 14:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?15:50;break;case 15:a=170!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?16:17;break;case 16:_SyntaxErrorMessage(d,STRING_TABLE.__str1340|0);o=1;a=50;break;case 17:_PPBackup(d);_PPCRAndIndent(d);_SavePPBuffer(d,STRING_TABLE.__str3342|0);
_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?18:19;break;case 18:_SyntaxErrorMessage(d,STRING_TABLE.__str1340|0);o=1;a=50;break;case 19:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str4343|0)|0)?20:23;break;case 20:a=0==(_ParseSimpleQualifier(d,e,STRING_TABLE.__str4343|0,STRING_TABLE.__str5344|0,STRING_TABLE.__str6345|0,m,n)|0)?21:22;break;case 21:o=
1;a=50;break;case 22:a=49;break;case 23:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str7346|0)|0)?24:27;break;case 24:a=0==(_ParseSimpleQualifier(d,e,STRING_TABLE.__str7346|0,STRING_TABLE.__str8347|0,STRING_TABLE.__str9348|0,p,q)|0)?25:26;break;case 25:o=1;a=50;break;case 26:a=48;break;case 27:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str10349|0)|0)?28:31;break;case 28:l=
_ParseSlot(d,e,l,k,0,0);a=0==(l|0)?29:30;break;case 29:o=1;a=50;break;case 30:a=47;break;case 31:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str11350|0)|0)?32:35;break;case 32:l=_ParseSlot(d,e,l,k,0,1);a=0==(l|0)?33:34;break;case 33:o=1;a=50;break;case 34:a=46;break;case 35:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str12351|0)|0)?36:39;break;case 36:l=_ParseSlot(d,
e,l,k,1,1);a=0==(l|0)?37:38;break;case 37:o=1;a=50;break;case 38:a=45;break;case 39:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str13352|0)|0)?40:43;break;case 40:a=0==(_ReadUntilClosingParen(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)|0)?41:42;break;case 41:o=1;a=50;break;case 42:a=44;break;case 43:_SyntaxErrorMessage(d,STRING_TABLE.__str1340|0);o=1;a=50;break;case 44:a=45;break;case 45:a=46;break;case 46:a=47;break;case 47:a=
48;break;case 48:a=49;break;case 49:_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=14;break;case 50:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?52:51;break;case 51:a=1==(o|0)?52:53;break;case 52:_DeletePackedClassLinks(d,j,1);_DeletePackedClassLinks(d,k,1);_DeleteSlots(d,l);b=1;a=74;break;case 53:_SavePPBuffer(d,STRING_TABLE.__str14353|0);a=0==(HEAP32[m>>2]|0)?54:59;break;case 54:a=0!=(HEAPU32[(HEAP32[(HEAP32[(k+4|0)>>2]+4|0)>>2]+24|0)>>2]>>>1&1|0)?55:
57;break;case 55:a=0==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+152|0)>>1]&65535|0)?56:57;break;case 56:HEAP32[n>>2]=0;a=58;break;case 57:HEAP32[n>>2]=HEAPU32[(HEAP32[(HEAP32[(k+4|0)>>2]+4|0)>>2]+24|0)>>2]>>>2&1;a=58;break;case 58:a=59;break;case 59:a=0==(HEAP32[p>>2]|0)?60:66;break;case 60:a=0!=(HEAPU32[(HEAP32[(HEAP32[(k+4|0)>>2]+4|0)>>2]+24|0)>>2]>>>1&1|0)?61:64;break;case 61:a=0!=(HEAP32[n>>2]|0)?64:62;break;case 62:a=0==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+152|0)>>1]&65535|0)?
63:64;break;case 63:HEAP32[q>>2]=1;a=65;break;case 64:HEAP32[q>>2]=HEAPU32[(HEAP32[(HEAP32[(k+4|0)>>2]+4|0)>>2]+24|0)>>2]>>>3&1;a=65;break;case 65:a=66;break;case 66:a=0!=(HEAP32[n>>2]|0)?67:69;break;case 67:a=0!=(HEAP32[q>>2]|0)?68:69;break;case 68:_PrintErrorID(d,STRING_TABLE.__str15354|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str16355|0,STRING_TABLE.__str17356|0);_DeletePackedClassLinks(d,j,1);_DeletePackedClassLinks(d,k,1);_DeleteSlots(d,l);b=1;a=74;break;case 69:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?70:71;break;case 70:_DeletePackedClassLinks(d,j,1);_DeletePackedClassLinks(d,k,1);_DeleteSlots(d,l);b=0;a=74;break;case 71:a=_NewClass(d,g);HEAP32[i>>2]=a;a=HEAP32[i>>2]+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAP32[n>>2]&1)<<2;a=HEAP32[i>>2]+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAP32[q>>2]&1)<<3;HEAP16[(HEAP32[i>>2]+36|0)>>1]=HEAP16[(j|0)>>1];HEAP32[((HEAP32[i>>2]+36|0)+4|0)>>2]=HEAP32[(j+4|0)>>2];HEAP32[(HEAP32[(k+4|0)>>2]|0)>>2]=HEAP32[i>>2];HEAP16[(HEAP32[i>>2]+52|
0)>>1]=HEAP16[(k|0)>>1];HEAP32[((HEAP32[i>>2]+52|0)+4|0)>>2]=HEAP32[(k+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=0!=(l|0)?72:73;break;case 72:_PackSlots(d,HEAP32[i>>2],l);a=73;break;case 73:_AddClass(d,HEAP32[i>>2]);b=0;a=74;break;case 74:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefclass.X=1;
function _ValidClassName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;d=h;a=f;e=c;a=_EnvFindDefclass(d,a);HEAP32[e>>2]=a;a=0!=(HEAP32[e>>2]|0)?3:9;break;case 3:a=0!=(HEAPU32[(HEAP32[e>>2]+24|0)>>2]>>>1&1|0)?4:5;break;case 4:_PrintErrorID(d,STRING_TABLE.__str15354|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str16355|0,STRING_TABLE.__str23362|0);b=0;a=10;break;case 5:a=0==(_EnvIsDefclassDeletable(d,HEAP32[e>>2])|0)?6:8;break;case 6:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?
8:7;break;case 7:_PrintErrorID(d,STRING_TABLE.__str15354|0,3,0);b=d;a=_GetConstructNameString(HEAP32[e>>2]);_EnvPrintRouter(b,STRING_TABLE.__str16355|0,a);_EnvPrintRouter(d,STRING_TABLE.__str16355|0,STRING_TABLE.__str24363|0);_EnvPrintRouter(d,STRING_TABLE.__str16355|0,STRING_TABLE.__str25364|0);b=0;a=10;break;case 8:a=9;break;case 9:b=1;a=10;break;case 10:return b;default:assert(0,"bad label: "+a)}}_ValidClassName.X=1;
function _ParseSimpleQualifier(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p;j=h;k=f;l=c;m=a;n=b;o=d;p=e;g=0!=(HEAP32[o>>2]|0)?3:4;break;case 3:_PrintErrorID(j,STRING_TABLE.__str15354|0,4,0);_EnvPrintRouter(j,STRING_TABLE.__str16355|0,STRING_TABLE.__str21360|0);_EnvPrintRouter(j,STRING_TABLE.__str16355|0,l);_EnvPrintRouter(j,STRING_TABLE.__str16355|0,STRING_TABLE.__str22361|0);i=0;g=16;break;case 4:_SavePPBuffer(j,STRING_TABLE.__str18357|0);_GetToken(j,k,HEAP32[(HEAP32[(j+16|
0)>>2]+84|0)>>2]+140|0);g=2!=(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?5:6;break;case 5:g=15;break;case 6:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],n)|0)?7:8;break;case 7:HEAP32[p>>2]=1;g=12;break;case 8:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],m)|0)?9:10;break;case 9:HEAP32[p>>2]=0;g=11;break;case 10:g=15;break;case 11:g=12;break;case 12:_GetToken(j,k,HEAP32[(HEAP32[(j+
16|0)>>2]+84|0)>>2]+140|0);g=171!=(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?13:14;break;case 13:g=15;break;case 14:i=HEAP32[o>>2]=1;g=16;break;case 15:_SyntaxErrorMessage(j,STRING_TABLE.__str1340|0);i=0;g=16;break;case 16:return i;default:assert(0,"bad label: "+g)}}_ParseSimpleQualifier.X=1;
function _ReadUntilClosingParen(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;i=1;j=0;a=3;break;case 3:a=0==(j|0)?4:5;break;case 4:_SavePPBuffer(d,STRING_TABLE.__str18357|0);a=5;break;case 5:_GetToken(d,e,g);a=172==(HEAPU16[(g|0)>>1]&65535|0)?6:7;break;case 6:_SyntaxErrorMessage(d,STRING_TABLE.__str19358|0);b=0;a=19;break;case 7:a=170==(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:j=1;i=i+1|0;a=15;break;case 9:a=171==(HEAPU16[(g|0)>>1]&65535|0)?10:13;break;case 10:i=i-1|0;a=0==
(j|0)?11:12;break;case 11:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str20359|0);a=12;break;case 12:j=0;a=14;break;case 13:j=0;a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:a=17;break;case 17:a=0<(i|0)?3:18;break;case 18:b=1;a=19;break;case 19:return b;default:assert(0,"bad label: "+a)}}_ReadUntilClosingParen.X=1;
function _PackSlots(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;g=e=c;a=3;break;case 3:a=0!=(g|0)?4:5;break;case 4:HEAP32[(HEAP32[(g|0)>>2]+4|0)>>2]=d;a=d+72|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;g=HEAP32[(g+4|0)>>2];a=3;break;case 5:g=_gm2(b,44*HEAP32[(d+72|0)>>2]|0);HEAP32[(d+60|0)>>2]=g;g=e;i=0;a=6;break;case 6:a=i>>>0<HEAPU32[(d+72|0)>>2]>>>0?7:9;break;case 7:a=g;g=HEAP32[(g+4|0)>>2];var j=HEAP32[(d+60|0)>>2]+44*i|0,k=HEAP32[(a|0)>>2];assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");
_memcpy(j,k,44,1);HEAP32[((HEAP32[(d+60|0)>>2]+44*i|0)+32|0)>>2]=HEAP32[(d+60|0)>>2]+44*i|0;HEAP32[(((HEAP32[(d+60|0)>>2]+44*i|0)+32|0)+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];
HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=8;break;case 8:i=i+1|0;a=6;break;case 9:return;default:assert(0,"bad label: "+a)}}_PackSlots.X=1;
function _AddClass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=e=0;d=_GetConstructNamePointer(b);d=_HashClass(d);HEAP32[(b+32|0)>>2]=d;d=a;c=_GetConstructNameString(b);d=_EnvFindDefclass(d,c);c=0!=(d|0)?3:4;break;case 3:e=HEAPU32[(d+24|0)>>2]>>>4&1;g=HEAPU32[(d+24|0)>>2]>>>5&1;_DeleteClassUAG(a,d);c=4;break;case 4:_PutClassInTable(a,b);_BuildSubclassLinks(a,b);_InstallClass(a,b,1);_AddConstructToModule(b);_FormInstanceTemplate(a,b);_FormSlotNameMap(a,b);_AssignClassID(a,b);c=0!=
(HEAPU32[(b+24|0)>>2]>>>2&1|0)?5:6;break;case 5:c=b+24|0;HEAP32[c>>2]&=-17;c=b+24|0;HEAP32[c>>2]&=-33;c=11;break;case 6:c=0!=(e|0)?7:8;break;case 7:c=b+24|0;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=8;break;case 8:c=0!=(g|0)?9:10;break;case 9:c=b+24|0;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=10;break;case 10:c=11;break;case 11:c=0==(_EnvGetConserveMemory(a)|0)?12:13;break;case 12:c=a;var i=b,j=_CopyPPBuffer(a);_SetConstructPPForm(c,i,j);c=13;break;case 13:_CreateClassScopeMap(a,b);_CreatePublicSlotMessageHandlers(a,
b);return;default:assert(0,"bad label: "+c)}}_AddClass.X=1;function _BuildSubclassLinks(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=0;c=3;break;case 3:c=d>>>0<(HEAPU16[(b+36|0)>>1]&65535)>>>0?4:6;break;case 4:_AddClassLink(a,HEAP32[(HEAP32[((b+36|0)+4|0)>>2]+(d<<2)|0)>>2]+44|0,b,-1);c=5;break;case 5:d=d+1|0;c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _FormInstanceTemplate(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j;b=h;d=f;e=0;HEAP32[i>>2]=0;e=_MergeSlots(b,e,d,i,0);j=1;a=3;break;case 3:a=j>>>0<(HEAPU16[(d+52|0)>>1]&65535)>>>0?4:6;break;case 4:e=_MergeSlots(b,e,HEAP32[(HEAP32[((d+52|0)+4|0)>>2]+(j<<2)|0)>>2],i,1);a=5;break;case 5:j=j+1|0;a=3;break;case 6:HEAP32[(d+80|0)>>2]=HEAP32[i>>2];HEAP32[(d+76|0)>>2]=0;
a=0<HEAPU32[i>>2]>>>0?7:8;break;case 7:a=_gm2(b,HEAP32[i>>2]<<2|0);HEAP32[(d+64|0)>>2]=a;a=8;break;case 8:j=0;a=9;break;case 9:a=j>>>0<HEAPU32[i>>2]>>>0?10:14;break;case 10:g=e;e=HEAP32[(e+4|0)>>2];HEAP32[(HEAP32[(d+64|0)>>2]+(j<<2)|0)>>2]=HEAP32[(g|0)>>2];a=0==(HEAP32[HEAP32[(g|0)>>2]>>2]&1|0)?11:12;break;case 11:a=d+76|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=13;break;case 13:j=j+1|0;a=9;break;case 14:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_FormInstanceTemplate.X=1;
function _FormSlotNameMap(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;HEAP32[(b+84|0)>>2]=0;HEAP32[(b+68|0)>>2]=0;c=0==(HEAP32[(b+80|0)>>2]|0)?3:4;break;case 3:c=18;break;case 4:d=0;c=5;break;case 5:c=d>>>0<HEAPU32[(b+80|0)>>2]>>>0?6:10;break;case 6:c=HEAPU32[(HEAP32[(HEAP32[(HEAP32[(b+64|0)>>2]+(d<<2)|0)>>2]+8|0)>>2]+8|0)>>2]>>>0>HEAPU32[(b+84|0)>>2]>>>0?7:8;break;case 7:HEAP32[(b+84|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+64|0)>>2]+(d<<2)|0)>>2]+8|0)>>2]+8|0)>>2];c=8;break;case 8:c=
9;break;case 9:d=d+1|0;c=5;break;case 10:c=_gm2(a,(HEAP32[(b+84|0)>>2]+1|0)<<2|0);HEAP32[(b+68|0)>>2]=c;d=0;c=11;break;case 11:c=d>>>0<=HEAPU32[(b+84|0)>>2]>>>0?12:14;break;case 12:HEAP32[(HEAP32[(b+68|0)>>2]+(d<<2)|0)>>2]=0;c=13;break;case 13:d=d+1|0;c=11;break;case 14:d=0;c=15;break;case 15:c=d>>>0<HEAPU32[(b+80|0)>>2]>>>0?16:18;break;case 16:HEAP32[(HEAP32[(b+68|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+64|0)>>2]+(d<<2)|0)>>2]+8|0)>>2]+8|0)>>2]<<2)|0)>>2]=d+1|0;c=17;break;case 17:d=d+1|0;c=15;
break;case 18:return;default:assert(0,"bad label: "+c)}}_FormSlotNameMap.X=1;
function _CreateClassScopeMap(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m=c;b=h;d=f;i=HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2];j=HEAP32[(HEAP32[((d|0)+8|0)>>2]|0)>>2];e=((_GetNumberOfDefmodules(b)|0)/8&-1)+1|0;g=_gm2(b,e);_ClearBitString(g,e);_SaveCurrentModule(b);k=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(k|0)?4:8;break;case 4:_EnvSetCurrentModule(b,k);l=HEAP32[(k+
24|0)>>2];a=0!=(_FindImportedConstruct(b,STRING_TABLE.__str1340|0,j,i,m,1,0)|0)?5:6;break;case 5:a=g+((l|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(l|0)%8&255)<<24>>24)&255;a=6;break;case 6:a=7;break;case 7:k=_EnvGetNextDefmodule(b,k);a=3;break;case 8:_RestoreCurrentModule(b);i=_AddBitMap(b,g,e);HEAP32[(d+112|0)>>2]=i;d=HEAP32[(d+112|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_rm(b,g,e);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CreateClassScopeMap.X=1;
function _CreatePublicSlotMessageHandlers(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(b+72|0)>>2]>>>0?4:6;break;case 4:c=HEAP32[(b+60|0)>>2]+44*d|0;_CreateGetAndPutHandlers(a,c);c=5;break;case 5:d=d+1|0;c=3;break;case 6:d=0;c=7;break;case 7:c=d>>>0<HEAPU32[(b+104|0)>>2]>>>0?8:10;break;case 8:c=HEAP32[(b+96|0)>>2]+40*d|0;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=9;break;case 9:d=d+1|0;c=7;break;case 10:return;default:assert(0,"bad label: "+c)}}
_CreatePublicSlotMessageHandlers.X=1;
function _MergeSlots(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;k=b;m=HEAP32[(i+72|0)>>2]-1|0;d=3;break;case 3:d=0<=(m|0)?4:21;break;case 4:n=HEAP32[(i+60|0)>>2]+44*m|0;d=0==(HEAPU32[n>>2]>>>3&1|0)?5:6;break;case 5:d=7;break;case 6:d=0==(k|0)?7:19;break;case 7:l=g;d=8;break;case 8:d=0!=(l|0)?9:10;break;case 9:var o=(HEAP32[(n+8|0)>>2]|0)!=(HEAP32[(HEAP32[(l|0)>>2]+8|0)>>2]|0)&1;d=11;break;case 10:o=0;d=11;break;case 11:d=0!=(o|0)?12:13;break;case 12:l=HEAP32[(l+
4|0)>>2];d=8;break;case 13:d=0==(l|0)?14:18;break;case 14:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?15:16;break;case 15:var p=_genalloc(e,8);d=17;break;case 16:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+16|0)>>2];d=17;break;case 17:d=p;HEAP32[(d|0)>>2]=n;HEAP32[(d+4|0)>>2]=g;g=d;d=j;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=18;break;case 18:d=19;break;case 19:d=20;break;case 20:m=m-1|0;d=3;break;case 21:return g;default:assert(0,"bad label: "+d)}}_MergeSlots.X=1;
function _ParseSlot(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q=e,r=e+4,s,t=e+8;j=h;k=f;l=c;m=a;n=b;o=d;_SavePPBuffer(j,STRING_TABLE.__str367|0);HEAP8[r+1|0]=0;HEAP8[r|0]=0;_GetToken(j,k,HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0);g=2!=(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?3:4;break;case 3:_DeleteSlots(j,l);_SyntaxErrorMessage(j,
STRING_TABLE.__str1368|0);i=0;g=110;break;case 4:g=(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+116|0)>>2]|0)?6:5;break;case 5:g=(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+120|0)>>2]|0)?6:7;break;case 6:_DeleteSlots(j,l);_SyntaxErrorMessage(j,STRING_TABLE.__str1368|0);i=0;g=110;break;case 7:p=_NewSlot(j,HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+
4|0)>>2]);l=_InsertSlot(j,l,p);g=0==(l|0)?8:9;break;case 8:i=0;g=110;break;case 9:g=0!=(n|0)?10:11;break;case 10:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-3|2;g=11;break;case 11:g=0!=(o|0)?12:13;break;case 12:g=r|0;HEAP8[g]=(HEAP8[g]<<24>>24|2)&255;g=13;break;case 13:_GetToken(j,k,HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0);_IncrementIndentDepth(j,3);_InitializeConstraintParseRecord(q);g=14;break;case 14:g=170==(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?15:88;break;case 15:_PPBackup(j);
_PPCRAndIndent(j);_SavePPBuffer(j,STRING_TABLE.__str2369|0);_GetToken(j,k,HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0);g=2!=(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?16:17;break;case 16:_SyntaxErrorMessage(j,STRING_TABLE.__str1368|0);g=109;break;case 17:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str3370|0)|0)?18:21;break;case 18:g=0==(_ParseDefaultFacet(j,k,r|0,p)|0)?19:20;break;case 19:g=109;break;case 20:g=
86;break;case 21:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str4371|0)|0)?22:25;break;case 22:g=r|0;HEAP8[g]=(HEAP8[g]<<24>>24|-128)&255;g=0==(_ParseDefaultFacet(j,k,r|0,p)|0)?23:24;break;case 23:g=109;break;case 24:g=85;break;case 25:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str5372|0)|0)?26:35;break;case 26:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str5372|0,2,
STRING_TABLE.__str6373|0,STRING_TABLE.__str7374|0,STRING_TABLE.__str8375|0,0,0);g=-1==(s|0)?27:28;break;case 27:g=109;break;case 28:g=1==(s|0)?29:30;break;case 29:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-17|16;g=33;break;case 30:g=2==(s|0)?31:32;break;case 31:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-33|32;g=32;break;case 32:g=33;break;case 33:g=34;break;case 34:g=84;break;case 35:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str9376|0)|0)?36:39;break;case 36:s=
_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str9376|0,0,STRING_TABLE.__str10377|0,STRING_TABLE.__str11378|0,0,0,0);g=-1==(s|0)?37:38;break;case 37:g=109;break;case 38:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-2|s&1;g=83;break;case 39:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str12379|0)|0)?40:43;break;case 40:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str12379|0,3,STRING_TABLE.__str13380|0,STRING_TABLE.__str14381|0,0,0,0);g=-1==(s|0)?41:42;break;
case 41:g=109;break;case 42:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-9|(s&1)<<3;g=82;break;case 43:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str15382|0)|0)?44:47;break;case 44:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str15382|0,4,STRING_TABLE.__str16383|0,STRING_TABLE.__str17384|0,0,0,0);g=-1==(s|0)?45:46;break;case 45:g=109;break;case 46:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-5|(s&1)<<2;g=81;break;case 47:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+
16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str18385|0)|0)?48:51;break;case 48:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str18385|0,5,STRING_TABLE.__str19386|0,STRING_TABLE.__str20387|0,0,0,0);g=-1==(s|0)?49:50;break;case 49:g=109;break;case 50:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-513|(s&1)<<9;g=80;break;case 51:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str21388|0)|0)?52:55;break;case 52:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str21388|
0,8,STRING_TABLE.__str22389|0,STRING_TABLE.__str23390|0,0,0,0);g=-1==(s|0)?53:54;break;case 53:g=109;break;case 54:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-1025|(s&1)<<10;g=79;break;case 55:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str24391|0)|0)?56:65;break;case 56:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str24391|0,9,STRING_TABLE.__str25392|0,STRING_TABLE.__str26393|0,STRING_TABLE.__str6373|0,STRING_TABLE.__str27394|0,0);g=-1==(s|0)?57:
58;break;case 57:g=109;break;case 58:g=0==(s|0)?60:59;break;case 59:g=2==(s|0)?60:61;break;case 60:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-2049|2048;g=61;break;case 61:g=1==(s|0)?63:62;break;case 62:g=2==(s|0)?63:64;break;case 63:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-4097|4096;g=64;break;case 64:g=78;break;case 65:g=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str28395|0)|0)?66:71;break;case 66:s=_ParseSimpleFacet(j,k,r|0,STRING_TABLE.__str28395|0,10,
0,0,0,STRING_TABLE.__str29396|0,t);g=-1==(s|0)?67:68;break;case 67:g=109;break;case 68:g=4==(s|0)?69:70;break;case 69:_DecrementSymbolCount(j,HEAP32[(p+12|0)>>2]);HEAP32[(p+12|0)>>2]=HEAP32[t>>2];g=HEAP32[(p+12|0)>>2]+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=70;break;case 70:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-8193|8192;g=77;break;case 71:g=0!=(_StandardConstraint(HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2])|0)?72:75;break;case 72:g=0==(_ParseStandardConstraint(j,k,HEAP32[(HEAP32[((HEAP32[(HEAP32[(j+
16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],HEAP32[(p+20|0)>>2],q,1)|0)?73:74;break;case 73:g=109;break;case 74:g=76;break;case 75:_SyntaxErrorMessage(j,STRING_TABLE.__str1368|0);g=109;break;case 76:g=77;break;case 77:g=78;break;case 78:g=79;break;case 79:g=80;break;case 80:g=81;break;case 81:g=82;break;case 82:g=83;break;case 83:g=84;break;case 84:g=85;break;case 85:g=86;break;case 86:g=87;break;case 87:_GetToken(j,k,HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+140|0);g=14;break;case 88:g=171!=(HEAPU16[(HEAP32[(HEAP32[(j+
16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?89:90;break;case 89:_SyntaxErrorMessage(j,STRING_TABLE.__str1368|0);g=109;break;case 90:g=0==(HEAPU16[(HEAP32[(HEAP32[(j+16|0)>>2]+84|0)>>2]+152|0)>>1]&65535|0)?91:96;break;case 91:g=0!=(HEAP8[r+1|0]<<24>>24&2|0)?95:92;break;case 92:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-2049|2048;g=0!=(HEAPU32[p>>2]>>>4&1|0)?94:93;break;case 93:g=p;HEAP32[g>>2]=HEAP32[g>>2]&-4097|4096;g=94;break;case 94:g=95;break;case 95:g=96;break;case 96:g=0!=(HEAPU32[p>>2]>>>2&1|0)?97:98;break;
case 97:_BuildCompositeFacets(j,p,m,r|0,q);g=98;break;case 98:g=0==(_CheckForFacetConflicts(j,p,q)|0)?99:100;break;case 99:g=109;break;case 100:g=0==(_CheckConstraintParseConflicts(j,HEAP32[(p+20|0)>>2])|0)?101:102;break;case 101:g=109;break;case 102:g=0==(_EvaluateSlotDefaultValue(j,p,r|0)|0)?103:104;break;case 103:g=109;break;case 104:g=0==(HEAPU32[p>>2]>>>6&1|0)?105:108;break;case 105:g=1==(HEAPU32[p>>2]>>>4&1|0)?106:108;break;case 106:g=0==(HEAPU32[p>>2]>>>5&1|0)?107:108;break;case 107:g=p;HEAP32[g>>
2]=HEAP32[g>>2]&-2|1;g=108;break;case 108:i=_AddConstraint(j,HEAP32[(p+20|0)>>2]);HEAP32[(p+20|0)>>2]=i;_DecrementIndentDepth(j,3);i=l;g=110;break;case 109:_DecrementIndentDepth(j,3);_DeleteSlots(j,l);i=0;g=110;break;case 110:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ParseSlot.X=1;
function _DeleteSlots(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:10;break;case 4:d=b;b=HEAP32[(b+4|0)>>2];_DeleteSlotName(a,HEAP32[(HEAP32[(d|0)>>2]+8|0)>>2]);_DecrementSymbolCount(a,HEAP32[(HEAP32[(d|0)>>2]+12|0)>>2]);_RemoveConstraint(a,HEAP32[(HEAP32[(d|0)>>2]+20|0)>>2]);c=1==(HEAPU32[HEAP32[(d|0)>>2]>>2]>>>6&1|0)?5:6;break;case 5:_ExpressionDeinstall(a,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);_ReturnPackedExpression(a,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);c=
9;break;case 6:c=0!=(HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]|0)?7:8;break;case 7:_ValueDeinstall(a,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];
c=8;break;case 8:c=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;case 10:return;default:assert(0,"bad label: "+c)}}_DeleteSlots.X=1;
function _NewSlot(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]|0)?3:4;break;case 3:var d=_genalloc(a,44);c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return d=c=d,HEAP32[d>>2]=HEAP32[d>>2]&-65|64,d=c,HEAP32[d>>2]&=-129,d=c,HEAP32[d>>2]&=-257,d=c,HEAP32[d>>2]=HEAP32[d>>2]&-513|512,d=c,HEAP32[d>>2]&=-9,d=c,HEAP32[d>>2]&=-17,d=c,HEAP32[d>>2]&=-33,d=c,HEAP32[d>>2]&=-2,d=c,HEAP32[d>>2]&=-3,d=c,HEAP32[d>>2]&=-5,HEAP32[(c+24|0)>>2]=0,d=c,HEAP32[d>>2]&=-1025,d=c,HEAP32[d>>2]&=-2049,d=c,HEAP32[d>>2]&=-4097,d=c,HEAP32[d>>2]&=-8193,HEAP32[(c+4|0)>>2]=0,HEAP32[(c+16|0)>>2]=0,d=_GetConstraintRecord(a),HEAP32[(c+
20|0)>>2]=d,a=_AddSlotName(a,b,0,0),HEAP32[(c+8|0)>>2]=a,HEAP32[(c+12|0)>>2]=HEAP32[(HEAP32[(c+8|0)>>2]+16|0)>>2],a=HEAP32[(c+12|0)>>2]+4|0,HEAP32[a>>2]=HEAP32[a>>2]+1|0,c;default:assert(0,"bad label: "+c)}}_NewSlot.X=1;
function _InsertSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(d,8);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|
0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:k=l;HEAP32[(k|0)>>2]=g;HEAP32[(k+4|0)>>2]=0;a=0==(e|0)?6:7;break;case 6:e=k;a=13;break;case 7:i=e;j=0;a=8;break;case 8:a=0!=(i|0)?9:12;break;case 9:a=(HEAP32[(HEAP32[(i|0)>>2]+8|0)>>2]|0)==(HEAP32[(g+8|0)>>2]|0)?10:11;break;case 10:HEAP32[(k+4|0)>>2]=e;_DeleteSlots(d,k);_PrintErrorID(d,STRING_TABLE.__str35402|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str32399|0,STRING_TABLE.__str43410|0);b=0;a=14;break;case 11:j=i;i=
HEAP32[(i+4|0)>>2];a=8;break;case 12:HEAP32[(j+4|0)>>2]=k;a=13;break;case 13:b=e;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_InsertSlot.X=1;
function _ParseDefaultFacet(h,f,c,a){var b=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b,n=b+4,o=b+8;g=h;i=f;j=c;k=a;d=0!=(HEAP8[j|0]<<24>>24&64|0)?3:4;break;case 3:_PrintErrorID(g,STRING_TABLE.__str35402|0,2,0);_EnvPrintRouter(g,STRING_TABLE.__str32399|0,STRING_TABLE.__str40407|0);e=0;d=14;break;case 4:l=j|0;HEAP8[l]=(HEAP8[l]<<24>>24|64)&255;HEAP32[m>>2]=0;l=_ParseDefault(g,i,1,
HEAP8[j|0]<<24>>24&-128,0,n,o,m);d=1==(HEAP32[m>>2]|0)?5:6;break;case 5:e=0;d=14;break;case 6:d=0!=(HEAP32[n>>2]|0)?8:7;break;case 7:d=0!=(HEAP32[o>>2]|0)?8:12;break;case 8:d=0!=(HEAP32[n>>2]|0)?9:10;break;case 9:d=k;HEAP32[d>>2]=HEAP32[d>>2]&-257|256;d=k;HEAP32[d>>2]=HEAP32[d>>2]&-129|128;d=11;break;case 10:d=j|0;HEAP8[d]=HEAP8[d]<<24>>24&191;d=11;break;case 11:d=13;break;case 12:d=_PackExpression(g,l);HEAP32[(k+16|0)>>2]=d;_ReturnExpression(g,l);_ExpressionInstall(g,HEAP32[(k+16|0)>>2]);d=k;HEAP32[d>>
2]=HEAP32[d>>2]&-129|128;d=13;break;case 13:e=1;d=14;break;case 14:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseDefaultFacet.X=1;
function _ParseSimpleFacet(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u,v,w;m=h;n=f;o=c;p=a;q=b;r=d;s=e;t=g;u=i;v=j;k=0!=(HEAP8[o+((q|0)/8&-1)|0]<<24>>24&(1<<(q|0)%8&255)<<24>>24|0)?3:4;break;case 3:_PrintErrorID(m,STRING_TABLE.__str35402|0,2,0);_EnvPrintRouter(m,STRING_TABLE.__str32399|0,p);_EnvPrintRouter(m,STRING_TABLE.__str32399|0,STRING_TABLE.__str41408|0);l=-1;k=32;break;case 4:k=o+((q|0)/8&-1)|0;HEAP8[k]=(HEAP8[k]<<24>>24|(1<<(q|0)%8&255)<<24>>24)&255;_SavePPBuffer(m,
STRING_TABLE.__str367|0);_GetToken(m,n,HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0);k=35==(HEAPU16[(HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?5:11;break;case 5:k=0==(u|0)?6:7;break;case 6:k=9;break;case 7:k=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],u)|0)?8:9;break;case 8:w=3;k=10;break;case 9:k=31;break;case 10:k=28;break;case 11:k=2!=(HEAPU16[(HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?12:13;break;case 12:k=31;break;
case 13:k=0==(v|0)?14:26;break;case 14:k=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],r)|0)?15:16;break;case 15:w=0;k=25;break;case 16:k=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],s)|0)?17:18;break;case 17:w=1;k=24;break;case 18:k=0==(t|0)?19:20;break;case 19:k=22;break;case 20:k=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],t)|0)?21:22;break;case 21:w=2;
k=23;break;case 22:k=31;break;case 23:k=24;break;case 24:k=25;break;case 25:k=27;break;case 26:w=4;HEAP32[v>>2]=HEAP32[((HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2];k=27;break;case 27:k=28;break;case 28:_GetToken(m,n,HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0);k=171!=(HEAPU16[(HEAP32[(HEAP32[(m+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?29:30;break;case 29:k=31;break;case 30:l=w;k=32;break;case 31:_SyntaxErrorMessage(m,STRING_TABLE.__str42409|0);l=-1;k=32;break;case 32:return l;default:assert(0,
"bad label: "+k)}}_ParseSimpleFacet.X=1;
function _BuildCompositeFacets(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;k=b;l=0;m=1;d=3;break;case 3:d=m>>>0<(HEAPU16[(i|0)>>1]&65535)>>>0?4:10;break;case 4:l=_FindClassSlot(HEAP32[(HEAP32[(i+4|0)>>2]+(m<<2)|0)>>2],HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]);d=0!=(l|0)?5:6;break;case 5:d=0==(HEAPU32[l>>2]>>>3&1|0)?7:8;break;case 6:d=8;break;case 7:d=10;break;case 8:d=9;break;case 9:m=m+1|0;d=3;break;case 10:d=0!=(l|0)?11:38;break;case 11:d=0==(HEAPU32[g>>2]>>>7&1|0)?
12:22;break;case 12:d=1==(HEAPU32[l>>2]>>>7&1|0)?13:22;break;case 13:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-65|(HEAPU32[l>>2]>>>6&1)<<6;d=g;HEAP32[d>>2]=HEAP32[d>>2]&-257|(HEAPU32[l>>2]>>>8&1)<<8;d=g;HEAP32[d>>2]=HEAP32[d>>2]&-129|128;d=0!=(HEAP32[(l+16|0)>>2]|0)?14:21;break;case 14:d=0!=(HEAPU32[g>>2]>>>6&1|0)?15:16;break;case 15:d=_PackExpression(e,HEAP32[(l+16|0)>>2]);HEAP32[(g+16|0)>>2]=d;_ExpressionInstall(e,HEAP32[(g+16|0)>>2]);d=20;break;case 16:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|
0)>>2]+20|0)>>2]+96|0)>>2]|0)?17:18;break;case 17:var n=_genalloc(e,24);d=19;break;case 18:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=19;break;case 19:HEAP32[(g+16|0)>>2]=n;d=HEAP32[(g+16|0)>>2];var o=HEAP32[(l+
16|0)>>2];assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(d,o,24,1);_ValueInstall(e,HEAP32[(g+16|0)>>2]);d=20;break;case 20:d=21;break;case 21:d=22;break;case 22:d=0==(HEAP8[j|0]<<24>>24&2|0)?23:24;break;case 23:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-3|(HEAPU32[l>>2]>>>1&1)<<1;d=24;break;case 24:d=0==(HEAP8[j|0]<<24>>24&1|0)?25:26;break;case 25:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-2|HEAP32[l>>2]&1;d=26;break;case 26:d=0==(HEAP8[j|0]<<24>>24&4|0)?27:28;break;case 27:d=
g;HEAP32[d>>2]=HEAP32[d>>2]&-17|(HEAPU32[l>>2]>>>4&1)<<4;d=g;HEAP32[d>>2]=HEAP32[d>>2]&-33|(HEAPU32[l>>2]>>>5&1)<<5;d=28;break;case 28:d=0==(HEAP8[j|0]<<24>>24&32|0)?29:30;break;case 29:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-513|(HEAPU32[l>>2]>>>9&1)<<9;d=30;break;case 30:d=0==(HEAP8[j+1|0]<<24>>24&1|0)?31:32;break;case 31:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-1025|(HEAPU32[l>>2]>>>10&1)<<10;d=32;break;case 32:d=0==(HEAP8[j+1|0]<<24>>24&2|0)?33:34;break;case 33:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-2049|(HEAPU32[l>>2]>>>
11&1)<<11;d=g;HEAP32[d>>2]=HEAP32[d>>2]&-4097|(HEAPU32[l>>2]>>>12&1)<<12;d=34;break;case 34:d=0==(HEAP8[j+1|0]<<24>>24&4|0)?35:37;break;case 35:d=0!=(HEAPU32[l>>2]>>>13&1|0)?36:37;break;case 36:_DecrementSymbolCount(e,HEAP32[(g+12|0)>>2]);HEAP32[(g+12|0)>>2]=HEAP32[(l+12|0)>>2];d=HEAP32[(g+12|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=g;HEAP32[d>>2]=HEAP32[d>>2]&-8193|8192;d=37;break;case 37:_OverlayConstraint(e,k,HEAP32[(g+20|0)>>2],HEAP32[(l+20|0)>>2]);d=38;break;case 38:return;default:assert(0,
"bad label: "+d)}}_BuildCompositeFacets.X=1;
function _CheckForFacetConflicts(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(HEAPU32[e>>2]>>>1&1|0)?3:7;break;case 3:a=0!=(HEAPU32[g>>2]>>>11&1|0)?4:5;break;case 4:_PrintErrorID(d,STRING_TABLE.__str35402|0,3,1);_EnvPrintRouter(d,STRING_TABLE.__str32399|0,STRING_TABLE.__str36403|0);b=0;a=18;break;case 5:_ReturnExpression(d,HEAP32[(HEAP32[(e+20|0)>>2]+24|0)>>2]);_ReturnExpression(d,HEAP32[(HEAP32[(e+20|0)>>2]+28|0)>>2]);a=d;var i=_EnvAddLong(d,1);a=_GenConstant(a,1,i);HEAP32[(HEAP32[(e+
20|0)>>2]+24|0)>>2]=a;a=d;i=_EnvAddLong(d,1);a=_GenConstant(a,1,i);HEAP32[(HEAP32[(e+20|0)>>2]+28|0)>>2]=a;a=6;break;case 6:a=7;break;case 7:a=0!=(HEAPU32[e>>2]>>>8&1|0)?8:10;break;case 8:a=0!=(HEAPU32[e>>2]>>>4&1|0)?9:10;break;case 9:_PrintErrorID(d,STRING_TABLE.__str35402|0,4,1);_EnvPrintRouter(d,STRING_TABLE.__str32399|0,STRING_TABLE.__str37404|0);b=0;a=18;break;case 10:a=0!=(HEAPU32[e>>2]>>>4&1|0)?11:14;break;case 11:a=0!=(HEAPU32[e>>2]>>>12&1|0)?13:12;break;case 12:a=0!=(HEAPU32[e>>2]>>>13&1|
0)?13:14;break;case 13:_PrintErrorID(d,STRING_TABLE.__str35402|0,5,1);_EnvPrintRouter(d,STRING_TABLE.__str32399|0,STRING_TABLE.__str38405|0);b=0;a=18;break;case 14:a=0!=(HEAPU32[e>>2]>>>3&1|0)?15:17;break;case 15:a=0!=(HEAPU32[e>>2]>>>10&1|0)?16:17;break;case 16:_PrintErrorID(d,STRING_TABLE.__str35402|0,6,1);_EnvPrintRouter(d,STRING_TABLE.__str32399|0,STRING_TABLE.__str39406|0);b=0;a=18;break;case 17:b=1;a=18;break;case 18:return b;default:assert(0,"bad label: "+a)}}_CheckForFacetConflicts.X=1;
function _GetCommandString(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]}
function _EvaluateSlotDefaultValue(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l,m;e=h;g=f;i=c;b=0==(HEAP8[i|0]<<24>>24&-128|0)?3:4;break;case 3:b=g;HEAP32[b>>2]&=-65;b=4;break;case 4:b=0!=(HEAPU32[g>>2]>>>8&1|0)?5:6;break;case 5:d=1;b=30;break;case 6:b=0==(HEAPU32[g>>2]>>>6&1|0)?7:24;break;case 7:b=0!=(HEAP8[i|0]<<24>>24&64|0)?8:17;break;case 8:k=_ExecutingConstruct(e);
_SetExecutingConstruct(e,1);l=e;m=_EnvGetStaticConstraintChecking(e);l=_EnvSetDynamicConstraintChecking(l,m);m=_EvaluateAndStoreInDataObject(e,HEAPU32[g>>2]>>>1&1,HEAP32[(g+16|0)>>2],j,1);b=0!=(m|0)?9:10;break;case 9:m=_ValidSlotValue(e,j,g,0,STRING_TABLE.__str30397|0);b=10;break;case 10:_EnvSetDynamicConstraintChecking(e,l);_SetExecutingConstruct(e,k);b=0!=(m|0)?11:15;break;case 11:_ExpressionDeinstall(e,HEAP32[(g+16|0)>>2]);_ReturnPackedExpression(e,HEAP32[(g+16|0)>>2]);b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?12:13;break;case 12:var n=_genalloc(e,24);b=14;break;case 13:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=14;break;case 14:HEAP32[(g+16|0)>>2]=n;b=HEAP32[(g+16|0)>>
2];var o=j;assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(b,o,24,1);_ValueInstall(e,HEAP32[(g+16|0)>>2]);b=16;break;case 15:d=g;HEAP32[d>>2]=HEAP32[d>>2]&-65|64;d=0;b=30;break;case 16:b=23;break;case 17:b=0==(HEAPU32[g>>2]>>>7&1|0)?18:22;break;case 18:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?19:20;break;case 19:var p=_genalloc(e,24);b=21;break;case 20:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=21;break;case 21:HEAP32[(g+16|0)>>2]=p;_DeriveDefaultFromConstraints(e,HEAP32[(g+20|0)>>2],HEAP32[(g+16|0)>>2],HEAPU32[g>>2]>>>1&1,1);_ValueInstall(e,HEAP32[(g+16|0)>>2]);b=22;break;case 22:b=23;break;case 23:b=29;break;
case 24:b=0!=(_EnvGetStaticConstraintChecking(e)|0)?25:28;break;case 25:m=_ConstraintCheckExpressionChain(e,HEAP32[(g+16|0)>>2],HEAP32[(g+20|0)>>2]);b=0!=(m|0)?26:27;break;case 26:_PrintErrorID(e,STRING_TABLE.__str31398|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str32399|0,STRING_TABLE.__str33400|0);_PrintSlot(e,STRING_TABLE.__str32399|0,g,0,STRING_TABLE.__str34401|0);_ConstraintViolationErrorMessage(e,0,0,0,0,0,0,m,HEAP32[(g+20|0)>>2],0);d=0;b=30;break;case 27:b=28;break;case 28:b=29;break;case 29:d=
1;b=30;break;case 30:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EvaluateSlotDefaultValue.X=1;function _InitializeCommandLineData(h){_AllocateEnvironmentData(h,40,32,188);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+20|0)>>2]=__str415|0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+24|0)>>2]=186}
function _DeallocateCommandLineData(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+12|0)>>2]);f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}
function _DefaultGetNextEvent(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=_EnvGetcRouter(c,STRING_TABLE.__str2417|0);f=-1==(a|0)?3:4;break;case 3:a=10;f=4;break;case 4:return _ExpandCommandString(c,(a&255)<<24>>24),0;default:assert(0,"bad label: "+f)}}
function _ExpandCommandString(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0)>>2];var a=_ExpandStringWithChar(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0,HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]=a;return(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0)>>2]|0)!=(c|0)?1:0}_ExpandCommandString.X=1;
function _FlushCommandString(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+12|0)>>2]);f=4;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+184|0)>>2]|0)>>2]=0;return;default:assert(0,"bad label: "+
f)}}_FlushCommandString.X=1;
function _SetCommandString(h,f){var c;_FlushCommandString(h);c=_strlen(f);var a=_genrealloc(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>2],(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>2]+c|0)+1|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]=a;_strcpy(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],f);a=HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+(c+1|0)|0;a=HEAP32[(HEAP32[(h+
16|0)>>2]+184|0)>>2]|0;HEAP32[a>>2]=HEAP32[a>>2]+c|0}_SetCommandString.X=1;
function _SetNCommandString(h,f,c){_FlushCommandString(h);var a=_genrealloc(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>2],(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>2]+c|0)+1|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]=a;_strncpy(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],f,c);HEAP8[HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0)>>
2]+c|0)|0]=0;f=HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]+(c+1|0)|0;h=HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0;HEAP32[h>>2]=HEAP32[h>>2]+c|0}_SetNCommandString.X=1;function _AppendCommandString(h,f){var c=_AppendToString(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0,HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]=c}
function _AppendNCommandString(h,f,c){f=_AppendNToString(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2],c,HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0,HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+12|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+8|0)>>2]=f}
function _DoWhiteSpace(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=HEAP8[a+b|0]<<24>>24;c=3;break;case 3:if(32==(d|0)){var e=1;c=6}else c=4;break;case 4:12==(d|0)?(e=1,c=6):c=5;break;case 5:e=9==(d|0);c=6;break;case 6:c=e?7:8;break;case 7:b=b+1|0;d=HEAP8[a+b|0]<<24>>24;c=3;break;case 8:return b;default:assert(0,"bad label: "+c)}}
function _DoString(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=HEAP8[d+e|0]<<24>>24;a=3;break;case 3:a=34!=(i|0)?4:9;break;case 4:a=92==(i|0)?5:6;break;case 5:e=e+1|0;i=HEAP8[d+e|0]<<24>>24;a=6;break;case 6:a=0==(i|0)?7:8;break;case 7:HEAP32[g>>2]=0;b=e;a=10;break;case 8:e=e+1|0;i=HEAP8[d+e|0]<<24>>24;a=3;break;case 9:e=e+1|0;HEAP32[g>>2]=1;b=e;a=10;break;case 10:return b;default:assert(0,"bad label: "+a)}}_DoString.X=1;
function _DoComment(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=HEAP8[b+d|0]<<24>>24;c=3;break;case 3:if(10!=(e|0))c=4;else{var g=0;c=5}break;case 4:g=13!=(e|0);c=5;break;case 5:c=g?6:9;break;case 6:c=0==(e|0)?7:8;break;case 7:a=d;c=10;break;case 8:d=d+1|0;e=HEAP8[b+d|0]<<24>>24;c=3;break;case 9:a=d;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}function _GetHaltCommandLoopBatch(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+4|0)>>2]}
function _SetHaltCommandLoopBatch(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+4|0)>>2]=f}
function _CompleteCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f,k;b=h;k=i=g=0;c=0==(b|0)?3:4;break;case 3:a=0;c=53;break;case 4:d=0;c=5;break;case 5:e=d;d=e+1|0;e=c=HEAP8[b+e|0];c=0!=(c<<24>>24|0)?6:52;break;case 6:c=e<<24>>24;c=10==(c|0)||13==(c|0)?7:32==(c|0)||12==(c|0)||9==(c|0)?13:34==(c|0)?14:59==(c|0)?18:40==(c|0)?28:41==(c|0)?32:38;break;case 7:c=0!=(k|0)?8:
9;break;case 8:a=-1;c=53;break;case 9:c=0!=(i|0)?10:12;break;case 10:c=0==(g|0)?11:12;break;case 11:a=1;c=53;break;case 12:d=_DoWhiteSpace(b,d);c=51;break;case 13:d=_DoWhiteSpace(b,d);c=51;break;case 14:d=_DoString(b,d,j);c=0==(g|0)?15:17;break;case 15:c=0!=(HEAP32[j>>2]|0)?16:17;break;case 16:i=1;c=17;break;case 17:c=51;break;case 18:d=_DoComment(b,d);c=0!=(i|0)?19:24;break;case 19:c=0==(g|0)?20:24;break;case 20:c=0!=(HEAP8[b+d|0]<<24>>24|0)?21:24;break;case 21:c=0!=(k|0)?22:23;break;case 22:a=-1;
c=53;break;case 23:a=1;c=53;break;case 24:c=0!=(HEAP8[b+d|0]<<24>>24|0)?25:26;break;case 25:d=d+1|0;c=26;break;case 26:c=27;break;case 27:c=51;break;case 28:c=0<(g|0)?30:29;break;case 29:c=0==(i|0)?30:31;break;case 30:g=g+1|0;i=1;c=31;break;case 31:c=51;break;case 32:c=0<(g|0)?33:34;break;case 33:g=g-1|0;c=37;break;case 34:c=0==(i|0)?35:36;break;case 35:k=1;c=36;break;case 36:c=37;break;case 37:c=51;break;case 38:c=0==(g|0)?39:50;break;case 39:c=0!=(_isprint(e<<24>>24)|0)?40:49;break;case 40:c=41;
break;case 41:e=d;d=e+1|0;e=c=HEAP8[b+e|0];c=0!=(c<<24>>24|0)?42:48;break;case 42:c=10==(e<<24>>24|0)?44:43;break;case 43:c=13==(e<<24>>24|0)?44:47;break;case 44:c=0!=(k|0)?45:46;break;case 45:a=-1;c=53;break;case 46:a=1;c=53;break;case 47:c=41;break;case 48:a=0;c=53;break;case 49:c=50;break;case 50:c=51;break;case 51:c=5;break;case 52:a=0;c=53;break;case 53:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_CompleteCommand.X=1;
function _CommandLoop(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_EnvPrintRouter(c,STRING_TABLE.__str1416|0,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+20|0)>>2]);_SetHaltExecution(c,0);_SetEvaluationError(c,0);_PeriodicCleanup(c,1,0);_PrintPrompt(c);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+184|0)>>2]|0)>>2]=0;f=3;break;case 3:f=1==(_BatchActive(c)|0)?4:8;break;case 4:a=_LLGetcBatch(c,STRING_TABLE.__str2417|0,1);f=-1==(a|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|
0)>>2]+24|0)>>2]](c);f=7;break;case 6:_ExpandCommandString(c,(a&255)<<24>>24);f=7;break;case 7:f=9;break;case 8:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+24|0)>>2]](c);f=9;break;case 9:f=1==(_GetHaltExecution(c)|0)?10:11;break;case 10:_SetHaltExecution(c,0);_SetEvaluationError(c,0);_FlushCommandString(c);_EnvPrintRouter(c,STRING_TABLE.__str1416|0,STRING_TABLE.__str3418|0);_PrintPrompt(c);f=11;break;case 11:_ExecuteIfCommandComplete(c);f=3;break;default:assert(0,"bad label: "+f)}}
_CommandLoop.X=1;function _PrintPrompt(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;_EnvPrintRouter(c,STRING_TABLE.__str1416|0,__str415|0);f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+28|0)>>2]|0)?3:4;break;case 3:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]+28|0)>>2]](c);f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}
function _ExecuteIfCommandComplete(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(_CompleteCommand(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+160|0)>>2]+8|0)>>2])|0)?4:3;break;case 3:f=0>=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]|0)>>2]|0)?4:5;break;case 4:c=0;f=6;break;case 5:_FlushPPBuffer(a);_SetPPBufferStatus(a,0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]|0)>>2]=-1;_RouteCommand(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+160|0)>>2]+8|0)>>2],1);_FlushPPBuffer(a);_SetHaltExecution(a,0);_SetEvaluationError(a,
0);_FlushCommandString(a);_FlushBindList(a);_PeriodicCleanup(a,1,0);_PrintPrompt(a);c=1;f=6;break;case 6:return c;default:assert(0,"bad label: "+f)}}_ExecuteIfCommandComplete.X=1;function _CommandLoopBatch(h){_SetHaltExecution(h,0);_SetEvaluationError(h,0);_PeriodicCleanup(h,1,0);_PrintPrompt(h);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0)>>2]=0;_CommandLoopBatchDriver(h)}
function _CommandLoopBatchDriver(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=3;break;case 3:f=1==(_GetHaltCommandLoopBatch(c)|0)?4:5;break;case 4:_CloseAllBatchSources(c);_SetHaltCommandLoopBatch(c,0);f=5;break;case 5:f=1==(_BatchActive(c)|0)?6:10;break;case 6:a=_LLGetcBatch(c,STRING_TABLE.__str2417|0,1);f=-1==(a|0)?7:8;break;case 7:f=14;break;case 8:_ExpandCommandString(c,(a&255)<<24>>24);f=9;break;case 9:f=11;break;case 10:f=14;break;case 11:f=1==(_GetHaltExecution(c)|0)?12:13;break;case 12:_SetHaltExecution(c,
0);_SetEvaluationError(c,0);_FlushCommandString(c);_EnvPrintRouter(c,STRING_TABLE.__str1416|0,STRING_TABLE.__str3418|0);_PrintPrompt(c);f=13;break;case 13:_ExecuteIfCommandComplete(c);f=3;break;case 14:return;default:assert(0,"bad label: "+f)}}_CommandLoopBatchDriver.X=1;
function _CommandLoopOnceThenBatch(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(_ExecuteIfCommandComplete(c)|0)?4:3;break;case 3:f=5;break;case 4:_CommandLoopBatchDriver(c);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}function _SetAfterPromptFunction(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+28|0)>>2]=f}
function _SetEventFunction(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+24|0)>>2]=f;return c}function _TopLevelCommand(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+16|0)>>2]}
function _RouteCommand(h,f,c){var a=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l,m=a+24,n;e=h;g=f;i=c;b=0==(g|0)?3:4;break;case 3:d=0;b=30;break;case 4:_OpenStringSource(e,STRING_TABLE.__str4419|0,g,0);_GetToken(e,STRING_TABLE.__str4419|0,m);b=2==(HEAPU16[(m|0)>>1]&65535|0)?9:5;break;case 5:b=3==(HEAPU16[(m|0)>>1]&65535|0)?9:6;break;case 6:b=0==(HEAPU16[(m|0)>>1]&65535|0)?9:7;break;
case 7:b=1==(HEAPU16[(m|0)>>1]&65535|0)?9:8;break;case 8:b=8==(HEAPU16[(m|0)>>1]&65535|0)?9:12;break;case 9:_CloseStringSource(e,STRING_TABLE.__str4419|0);b=0!=(i|0)?10:11;break;case 10:_PrintAtom(e,STRING_TABLE.__str5420|0,HEAPU16[(m|0)>>1]&65535,HEAP32[(m+4|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str5420|0,STRING_TABLE.__str3418|0);b=11;break;case 11:d=1;b=30;break;case 12:b=33==(HEAPU16[(m|0)>>1]&65535|0)?13:16;break;case 13:_CloseStringSource(e,STRING_TABLE.__str4419|0);k=_GenConstant(e,HEAP16[(m|
0)>>1],HEAP32[(m+4|0)>>2]);_EvaluateExpression(e,k,j);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=0!=(i|0)?14:15;break;case 14:_PrintDataObject(e,STRING_TABLE.__str5420|0,j);_EnvPrintRouter(e,STRING_TABLE.__str5420|
0,STRING_TABLE.__str3418|0);b=15;break;case 15:d=1;b=30;break;case 16:b=170!=(HEAPU16[(m|0)>>1]&65535|0)?17:18;break;case 17:_PrintErrorID(e,STRING_TABLE.__str6421|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str7422|0,STRING_TABLE.__str8423|0);_CloseStringSource(e,STRING_TABLE.__str4419|0);d=0;b=30;break;case 18:_GetToken(e,STRING_TABLE.__str4419|0,m);b=2!=(HEAPU16[(m|0)>>1]&65535|0)?19:20;break;case 19:_PrintErrorID(e,STRING_TABLE.__str6421|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str7422|0,STRING_TABLE.__str9424|
0);_CloseStringSource(e,STRING_TABLE.__str4419|0);d=0;b=30;break;case 20:l=HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2];n=_ParseConstruct(e,l,STRING_TABLE.__str4419|0);b=-1!=(n|0)?21:24;break;case 21:_CloseStringSource(e,STRING_TABLE.__str4419|0);b=1==(n|0)?22:23;break;case 22:_EnvPrintRouter(e,STRING_TABLE.__str7422|0,STRING_TABLE.__str10425|0);b=e;var o=_GetPPBuffer(e);_PrintInChunks(b,STRING_TABLE.__str7422|0,o);_EnvPrintRouter(e,STRING_TABLE.__str7422|0,STRING_TABLE.__str3418|0);b=23;break;case 23:_DestroyPPBuffer(e);
d=n;b=30;break;case 24:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+160|0)>>2]+16|0)>>2]=1;k=_Function2Parse(e,STRING_TABLE.__str4419|0,l);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+160|0)>>2]+16|0)>>2]=0;_ClearParsedBindNames(e);_CloseStringSource(e,STRING_TABLE.__str4419|0);b=0==(k|0)?25:26;break;case 25:d=0;b=30;break;case 26:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+160|0)>>2]|0)>>2]=1;_ExpressionInstall(e,k);_EvaluateExpression(e,k,j);_ExpressionDeinstall(e,k);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+160|0)>>2]|0)>>2]=
0;_ReturnExpression(e,k);b=175!=(HEAPU16[(j+4|0)>>1]&65535|0)?27:29;break;case 27:b=0!=(i|0)?28:29;break;case 28:_PrintDataObject(e,STRING_TABLE.__str5420|0,j);_EnvPrintRouter(e,STRING_TABLE.__str5420|0,STRING_TABLE.__str3418|0);b=29;break;case 29:d=1;b=30;break;case 30:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_RouteCommand.X=1;
function _CommandCompleteAndNotEmpty(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(_CompleteCommand(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+160|0)>>2]+8|0)>>2])|0)?4:3;break;case 3:f=0>=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]|0)>>2]|0)?4:5;break;case 4:c=0;f=6;break;case 5:c=1;f=6;break;case 6:return c;default:assert(0,"bad label: "+f)}}function _PrintBanner(h){_EnvPrintRouter(h,STRING_TABLE.__str1416|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+160|0)>>2]+20|0)>>2])}
function _GetCommandCompletionString(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+12,l,m;e=h;g=f;i=c;b=0==(g|0)?3:4;break;case 3:d=__str415|0;b=37;break;case 4:l=HEAP8[g+(i-1|0)|0];b=32==(l<<24>>24|0)?10:5;break;case 5:b=34==(l<<24>>24|0)?10:6;break;case 6:b=9==(l<<24>>24|0)?10:7;break;case 7:b=12==(l<<24>>24|0)?10:8;break;case 8:b=10==(l<<24>>24|0)?10:9;break;case 9:b=
13==(l<<24>>24|0)?10:11;break;case 10:d=__str415|0;b=37;break;case 11:_OpenTextSource(e,STRING_TABLE.__str11426|0,g,0,i);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]+16|0)>>2]=1;_GetToken(e,STRING_TABLE.__str11426|0,k);_CopyToken(j,k);b=12;break;case 12:b=172!=(HEAPU16[(k|0)>>1]&65535|0)?13:14;break;case 13:_CopyToken(j,k);_GetToken(e,STRING_TABLE.__str11426|0,k);b=12;break;case 14:_CloseStringSource(e,STRING_TABLE.__str11426|0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]+16|0)>>2]=0;b=2==(HEAPU16[(j|
0)>>1]&65535|0)?15:18;break;case 15:m=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];b=91==(HEAP8[m|0]<<24>>24|0)?16:17;break;case 16:d=m+1|0;b=37;break;case 17:d=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];b=37;break;case 18:b=35==(HEAPU16[(j|0)>>1]&65535|0)?19:20;break;case 19:d=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];b=37;break;case 20:b=36==(HEAPU16[(j|0)>>1]&65535|0)?21:22;break;case 21:d=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];b=37;break;case 22:b=33==(HEAPU16[(j|0)>>1]&65535|0)?25:23;break;case 23:b=34==(HEAPU16[(j|
0)>>1]&65535|0)?25:24;break;case 24:b=8==(HEAPU16[(j|0)>>1]&65535|0)?25:26;break;case 25:d=0;b=37;break;case 26:b=3==(HEAPU16[(j|0)>>1]&65535|0)?27:28;break;case 27:b=_strlen(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);d=_GetCommandCompletionString(e,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],b);b=37;break;case 28:b=0==(HEAPU16[(j|0)>>1]&65535|0)?30:29;break;case 29:b=1==(HEAPU16[(j|0)>>1]&65535|0)?30:31;break;case 30:d=0;b=37;break;case 31:b=32;break;case 32:b=33;break;case 33:b=34;break;case 34:b=35;break;
case 35:b=36;break;case 36:d=__str415|0;b=37;break;case 37:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetCommandCompletionString.X=1;function _InitializeConstructCompilerData(h){_AllocateEnvironmentData(h,41,44,190);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+8|0)>>2]=2E3;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+36|0)>>2]=0}
function _DeallocateConstructCompilerData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+164|0)>>2]+40|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:11;break;case 4:b=HEAP32[(a+28|0)>>2];d=0;f=5;break;case 5:f=(d|0)<(HEAP32[(a+24|0)>>2]|0)?6:8;break;case 6:f=c;var e=HEAP32[(HEAP32[(a+20|0)>>2]+(d<<2)|0)>>2],g=_strlen(HEAP32[(HEAP32[(a+20|0)>>2]+(d<<2)|0)>>2])+1|0;_rm(f,e,g);f=7;break;case 7:d=d+1|0;f=5;break;case 8:f=0!=(HEAP32[(a+24|0)>>2]|0)?9:10;break;case 9:_rm(c,
HEAP32[(a+20|0)>>2],HEAP32[(a+24|0)>>2]<<2|0);f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=b;f=3;break;case 11:return;default:assert(0,"bad label: "+f)}}
_DeallocateConstructCompilerData.X=1;
function _ConstructsToCCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g,i,j;a=h;e=c=_EnvArgRangeCheck(a,STRING_TABLE.__str427|0,2,3);c=-1==(c|0)?3:4;break;case 3:c=22;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str427|0,1,181,d)|0)?5:6;break;case 5:c=22;break;case 6:b=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];j=_strlen(b);c=1024<(j+20|0)?7:8;break;case 7:_PrintErrorID(a,
STRING_TABLE.__str1428|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str2429|0,STRING_TABLE.__str3430|0);_PrintLongInteger(a,STRING_TABLE.__str2429|0,1024);_EnvPrintRouter(a,STRING_TABLE.__str2429|0,STRING_TABLE.__str4431|0);c=22;break;case 8:c=3<(j|0)?9:10;break;case 9:_PrintWarningID(a,STRING_TABLE.__str1428|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str5432|0,STRING_TABLE.__str6433|0);_EnvPrintRouter(a,STRING_TABLE.__str5432|0,STRING_TABLE.__str7434|0);_EnvPrintRouter(a,STRING_TABLE.__str5432|0,STRING_TABLE.__str8435|
0);c=10;break;case 10:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str427|0,2,1,d)|0)?11:12;break;case 11:c=22;break;case 12:g=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0>(g|0)?13:14;break;case 13:_ExpectedTypeError1(a,STRING_TABLE.__str427|0,2,STRING_TABLE.__str9436|0);c=22;break;case 14:c=3==(e|0)?15:20;break;case 15:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str427|0,3,1,d)|0)?16:17;break;case 16:c=22;break;case 17:i=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0>(i|0)?18:19;break;case 18:_ExpectedTypeError1(a,
STRING_TABLE.__str427|0,3,STRING_TABLE.__str9436|0);c=22;break;case 19:c=21;break;case 20:i=1E4;c=21;break;case 21:_ConstructsToC(a,b,g,i);c=22;break;case 22:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ConstructsToCCommand.X=1;
function _ConstructsToC(h,f,c,a){var b=STACKTOP;STACKTOP+=1028;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m;g=h;i=f;j=c;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+8|0)>>2]=a;m=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+40|0)>>2];d=3;break;case 3:d=0!=(m|0)?4:8;break;case 4:d=0!=(HEAP32[(m+4|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(m+4|0)>>2]](g);d=6;break;case 6:d=7;break;case 7:m=HEAP32[(m+
28|0)>>2];d=3;break;case 8:_PeriodicCleanup(g,0,0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+20|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+32|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+24|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+28|0)>>2]=0;d=i;_sprintf(k|0,STRING_TABLE.__str49476|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));d=_GenOpen(g,k|0,STRING_TABLE.__str14441|0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2]=d;d=0==(d|0)?9:10;break;case 9:_OpenErrorMessage(g,STRING_TABLE.__str427|0,k|0);e=0;d=23;break;case 10:_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str50477|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str51478|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str52479|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str53480|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str54481|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str55482|0,(tempInt=STACKTOP,STACKTOP+=1,
STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str56483|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=STRING_TABLE.__str57484|0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str58485|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_WriteFunctionExternDeclarations(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2]);_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str59486|0,(tempInt=STACKTOP,
STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str60487|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str61488|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>
2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str62489|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));d=i;_sprintf(k|0,STRING_TABLE.__str63490|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));d=_GenOpen(g,
k|0,STRING_TABLE.__str14441|0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2]=d;d=0==(d|0)?11:12;break;case 11:_OpenErrorMessage(g,STRING_TABLE.__str427|0,k|0);e=0;d=23;break;case 12:l=i;_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str15442|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=l,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str16443|0,(tempInt=
STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str64491|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str65492|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str64491|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));l=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str66493|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=l,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str67494|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str68495|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_AtomicValuesToCode(g,i);_FunctionsToCode(g,i);_HashedExpressionsToCode(g);_ConstraintsToCode(g,i,4,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|
0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+8|0)>>2]);l=5;m=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+40|0)>>2];d=13;break;case 13:d=0!=(m|0)?14:18;break;case 14:d=0!=(HEAP32[(m+12|0)>>2]|0)?15:16;break;case 15:FUNCTION_TABLE[HEAP32[(m+12|0)>>2]](g,i,l,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+8|0)>>2]);l=l+1|0;d=16;break;case 16:d=17;break;case 17:m=HEAP32[(m+28|
0)>>2];d=13;break;case 18:_RestoreAtomicValueBuckets(g);d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+12|0)>>2]|0)?19:20;break;case 19:_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str22449|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+12|0)>>2]);d=20;break;case 20:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|
0)>>2]+164|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:_fprintf(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str69496|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+16|0)>>2]);d=22;break;case 22:_WriteInitializationFunction(g,i);_GenClose(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+164|0)>>2]+4|0)>>2]);e=1;d=23;break;case 23:return h=
e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ConstructsToC.X=1;
function _PrintFunctionReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0==(g|0)?3:4;break;case 3:_fprintf(e,STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];var i=((HEAP16[(g+30|
0)>>1]<<16>>16|0)/(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,j=(HEAP16[(g+30|0)>>1]<<16>>16|0)%(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(e,STRING_TABLE.__str11438|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=j,tempInt));b=5;break;case 5:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_PrintFunctionReference.X=1;
function _NewCFile(h,f,c,a,b){var d=STACKTOP;STACKTOP+=1028;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n;i=h;j=f;k=c;e=a;l=b;n=j;_sprintf(m|0,STRING_TABLE.__str12439|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=n,HEAP32[tempInt+4>>2]=k,HEAP32[tempInt+8>>2]=e,tempInt));n=_GenOpen(i,m|0,0!=(l|0)?STRING_TABLE.__str13440|0:STRING_TABLE.__str14441|
0);e=0==(n|0)?3:4;break;case 3:_OpenErrorMessage(i,STRING_TABLE.__str427|0,m|0);g=0;e=7;break;case 4:e=0==(l|0)?5:6;break;case 5:e=j;_fprintf(n,STRING_TABLE.__str15442|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));_fprintf(n,STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=6;break;case 6:g=n;e=7;break;case 7:return h=
g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}
function _PrintHashedExpressionReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:m=_HashedExpressionIndex(g,j);e=k;var n=(m|0)/(l|0)&
-1;m=(m|0)%(l|0);_fprintf(i,STRING_TABLE.__str17444|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=m,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _ExpressionToCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;i=c;b=0==(i|0)?3:6;break;case 3:b=0!=(g|0)?4:5;break;case 4:_fprintf(g,STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 5:d=0;b=17;break;case 6:b=0!=(g|0)?7:8;break;case 7:b=
HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+32|0)>>2],k=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+28|0)>>2];_fprintf(g,STRING_TABLE.__str18445|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=j,HEAP32[tempInt+8>>2]=k,tempInt));b=8;break;case 8:b=9;break;case 9:b=1==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+24|0)>>2]|0)?10:13;break;case 10:b=_NewCFile(e,
HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+20|0)>>2],3,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+32|0)>>2],0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+12|0)>>2]=b;b=0==(b|0)?11:12;break;case 11:d=-1;b=17;break;case 12:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+32|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str19446|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=j,tempInt));b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+32|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str20447|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=j,tempInt));HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+24|0)>>2]=0;b=14;break;case 13:_fprintf(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str21448|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=14;break;case 14:_DumpExpression(e,i);b=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+28|0)>>2]|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?15:16;break;case 15:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+28|0)>>2]=0;b=HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+32|0;HEAP32[b>>2]=
HEAP32[b>>2]+1|0;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str22449|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+24|0)>>2]=1;b=16;break;case 16:d=1;b=17;break;case 17:return h=d,STACKTOP=
a,h;default:assert(0,"bad label: "+b)}}_ExpressionToCode.X=1;
function _DumpExpression(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d;b=h;d=f;a=3;break;case 3:a=0!=(d|0)?4:35;break;case 4:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str32459|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=HEAPU16[(d|0)>>1]&65535;_fprintf(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str43470|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str44471|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=HEAPU16[(d|0)>>1]&65535;a=30==(a|0)?5:1==(a|0)?6:0==(a|0)?7:32==(a|0)?8:31==(a|0)?9:63==
(a|0)?10:90==(a|0)?11:82==(a|0)?12:6==(a|0)?13:7==(a|0)?14:3==(a|0)||2==(a|0)||8==(a|0)||33==(a|0)?15:175==(a|0)?16:17;break;case 5:_PrintFunctionReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2]);a=24;break;case 6:_PrintIntegerReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2]);a=24;break;case 7:_PrintFloatReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2]);a=24;break;case 8:_PrintDeffunctionReference(b,
HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+8|0)>>2]);a=24;break;case 9:_PrintGenericFunctionReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+8|0)>>2]);a=24;break;case 10:_DeftemplateCConstructReference(b,HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+8|0)>>2]);a=24;break;case 11:_DefglobalCConstructReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+8|0)>>2]);a=24;break;case 12:_PrintClassReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+
4|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+8|0)>>2]);a=24;break;case 13:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2];var e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+32|0)>>2],g=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+28|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str45472|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=e,HEAP32[tempInt+8>>2]=g,tempInt));a=24;break;case 14:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+32|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+28|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+16|0)>>2],STRING_TABLE.__str46473|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=e,HEAP32[tempInt+8>>2]=g,tempInt));a=24;break;case 15:_PrintSymbolReference(b,
HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2]);a=24;break;case 16:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=24;break;case 17:a=0==(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(d|0)>>1]&65535)<<2)|0)>>2]|0)?18:19;break;case 18:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=23;break;case 19:a=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(d|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?20:21;break;case 20:_PrintBitMapReference(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],HEAP32[(d+4|0)>>2]);a=22;break;case 21:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=22;break;case 22:a=23;break;case 23:a=24;break;case 24:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str38465|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+28|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0==(HEAP32[(d+8|0)>>2]|0)?25:26;break;case 25:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str39466|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=27;break;case 26:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+32|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+28|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str47474|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=e,HEAP32[tempInt+8>>2]=g,tempInt));a=27;break;case 27:a=0==(HEAP32[(d+12|0)>>2]|0)?28:29;break;case 28:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str36463|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<
2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=30;break;case 29:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2];var e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]|0)>>2],g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+32|0)>>2],i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+28|0)>>2],j=_ExpressionSize(HEAP32[(d+8|0)>>2]),i=i+j|0;_fprintf(a,STRING_TABLE.__str48475|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=g,HEAP32[tempInt+8>>2]=i,tempInt));a=30;break;case 30:a=0!=(HEAP32[(d+8|0)>>2]|0)?31:32;break;case 31:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str21448|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_DumpExpression(b,HEAP32[(d+8|0)>>2]);a=32;break;case 32:d=HEAP32[(d+12|0)>>2];a=0!=(d|0)?33:34;break;case 33:_fprintf(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+164|0)>>2]+12|0)>>2],STRING_TABLE.__str21448|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=34;break;case 34:a=3;break;case 35:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DumpExpression.X=1;function _ConstructsToCCommandDefinition(h){_EnvDefineFunction2(h,STRING_TABLE.__str427|0,118,192,STRING_TABLE.__str23450|0,STRING_TABLE.__str24451|0)}
function _MarkConstruct(h,f,c){h=HEAP32[c>>2];HEAP32[c>>2]=h+1|0;HEAP32[(f+12|0)>>2]=h}
function _AddCodeGeneratorItem(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u,v=g;k=h;l=f;m=c;n=a;o=b;p=d;q=e;t=0;i=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?3:4;break;case 3:var w=_genalloc(k,32);i=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+
236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];w=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2];i=5;break;case 5:r=w;HEAP32[(r|0)>>2]=l;HEAP32[(r+4|0)>>2]=n;HEAP32[(r+8|0)>>2]=o;HEAP32[(r+12|0)>>2]=p;HEAP32[(r+16|0)>>2]=m;HEAP32[(r+24|0)>>2]=q;i=0!=(q|0)?6:16;break;case 6:i=44<(q+HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+36|0)>>2]|0)?7:8;break;case 7:_SystemError(k,
STRING_TABLE.__str1428|0,2);_EnvExitRouter(k,1);i=8;break;case 8:u=_gm2(k,q<<2|0);HEAP32[(r+20|0)>>2]=u;u=0;i=9;break;case 9:i=(u|0)<(q|0)?10:15;break;case 10:i=18>(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+36|0)>>2]|0)?11:12;break;case 11:i=HEAP8[STRING_TABLE.__str26453+HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+36|0)>>2]|0]<<24>>24;_sprintf(v|0,STRING_TABLE.__str25452|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));
i=13;break;case 12:i=HEAP8[STRING_TABLE.__str28455+(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+36|0)>>2]-18|0)|0]<<24>>24;_sprintf(v|0,STRING_TABLE.__str27454|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));i=13;break;case 13:i=HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+36|0;HEAP32[i>>2]=HEAP32[i>>2]+1|0;i=k;var x=_strlen(v|0)+1|0;i=_gm2(i,x);HEAP32[(HEAP32[(r+20|0)>>2]+(u<<2)|0)>>2]=i;_strcpy(HEAP32[(HEAP32[(r+20|0)>>2]+(u<<
2)|0)>>2],v|0);i=14;break;case 14:u=u+1|0;i=9;break;case 15:i=17;break;case 16:HEAP32[(r+20|0)>>2]=0;i=17;break;case 17:i=0==(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+40|0)>>2]|0)?18:19;break;case 18:HEAP32[(r+28|0)>>2]=0;j=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+40|0)>>2]=r;i=29;break;case 19:s=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+40|0)>>2];i=20;break;case 20:i=0!=(s|0)?21:22;break;case 21:var y=(m|0)<(HEAP32[(s+16|0)>>2]|0)&1;i=23;break;case 22:y=0;i=23;break;case 23:i=0!=
(y|0)?24:25;break;case 24:t=s;s=HEAP32[(s+28|0)>>2];i=20;break;case 25:i=0==(t|0)?26:27;break;case 26:HEAP32[(r+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+40|0)>>2];HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+164|0)>>2]+40|0)>>2]=r;i=28;break;case 27:HEAP32[(r+28|0)>>2]=s;HEAP32[(t+28|0)>>2]=r;i=28;break;case 28:j=r;i=29;break;case 29:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_AddCodeGeneratorItem.X=1;
function _CloseFileIfNeeded(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p;k=h;l=f;m=c;n=a;i=b;o=d;p=e;i=(HEAP32[m>>2]|0)<(i|0)?3:6;break;case 3:i=0!=(o|0)?4:5;break;case 4:HEAP32[o>>2]=1;_GenClose(k,l);j=0;i=18;break;case 5:j=l;i=18;break;case 6:i=0!=(o|0)?7:8;break;case 7:HEAP32[o>>2]=0;i=8;break;case 8:i=0==(l|0)?9:17;break;case 9:i=0==(o|0)?11:10;break;case 10:i=0==(p|0)?
11:12;break;case 11:_SystemError(k,STRING_TABLE.__str1428|0,3);_EnvExitRouter(k,1);i=12;break;case 12:i=0==(HEAP32[(p|0)>>2]|0)?13:14;break;case 13:j=0;i=18;break;case 14:l=_NewCFile(k,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP32[(p+8|0)>>2],1);i=0==(l|0)?15:16;break;case 15:_SystemError(k,STRING_TABLE.__str1428|0,4);_EnvExitRouter(k,1);i=16;break;case 16:i=17;break;case 17:_fprintf(l,STRING_TABLE.__str22449|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(k,l);HEAP32[m>>2]=0;j=n;HEAP32[j>>2]=HEAP32[j>>2]+1|0;j=0;i=18;break;case 18:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_CloseFileIfNeeded.X=1;
function _OpenFileIfNeeded(h,f,c,a,b,d,e,g,i,j,k,l){var m=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var n;for(n=2;;)switch(n){case 2:var o,p,q,r,s,t,u,v,w,x,y,A,z,B=m,C,D,E;p=h;q=f;r=c;s=a;t=b;u=d;v=e;w=g;x=i;y=j;A=k;z=l;n=0!=(A|0)?3:6;break;case 3:n=0==(z|0)?4:5;break;case 4:_SystemError(p,STRING_TABLE.__str1428|0,5);_EnvExitRouter(p,1);n=5;break;case 5:C=HEAP32[(z|0)>>2];D=HEAP32[(z+4|0)>>2];E=HEAP32[(z+8|0)>>2];n=9;break;case 6:C=
r;E=HEAP32[u>>2];D=s;n=0!=(z|0)?7:8;break;case 7:HEAP32[(z+8|0)>>2]=E;HEAP32[(z|0)>>2]=C;HEAP32[(z+4|0)>>2]=D;n=8;break;case 8:n=9;break;case 9:n=0!=(q|0)?10:11;break;case 10:_fprintf(q,STRING_TABLE.__str21448|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=q;n=17;break;case 11:q=n=_NewCFile(p,C,D,E,A);n=0==(n|0)?12:13;break;case 12:o=0;n=17;break;case 13:n=0==(A|0)?14:15;break;case 14:n=u;HEAP32[n>>
2]=HEAP32[n>>2]+1|0;n=y;var F=t,G=v;_sprintf(B|0,STRING_TABLE.__str29456|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=n,HEAP32[tempInt+4>>2]=F,HEAP32[tempInt+8>>2]=G,tempInt));n=x;F=B|0;_fprintf(q,STRING_TABLE.__str30457|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=n,HEAP32[tempInt+4>>2]=F,tempInt));n=x;F=B|0;_fprintf(w,STRING_TABLE.__str31458|0,(tempInt=STACKTOP,STACKTOP+=
8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=n,HEAP32[tempInt+4>>2]=F,tempInt));n=16;break;case 15:_fprintf(q,STRING_TABLE.__str21448|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));n=16;break;case 16:o=q;n=17;break;case 17:return h=o,STACKTOP=m,h;default:assert(0,"bad label: "+n)}}_OpenFileIfNeeded.X=1;
function _MarkConstructBsaveIDs(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=0;_DoForAllConstructs(h,194,f,0,c);STACKTOP=c}
function _ConstructHeaderToCode(h,f,c,a,b,d,e,g){var i=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q;k=h;l=f;m=c;n=a;o=b;j=d;p=e;q=g;_fprintf(l,STRING_TABLE.__str32459|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(k,l,HEAP32[(m|0)>>2]);_fprintf(l,STRING_TABLE.__str33460|0,(tempInt=
STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));k=p;p=n;var r=((j|0)/(o|0)&-1)+1|0;j=(j|0)%(o|0);_fprintf(l,STRING_TABLE.__str34461|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,HEAP32[tempInt+4>>2]=p,HEAP32[tempInt+8>>2]=r,HEAP32[tempInt+12>>2]=j,tempInt));_fprintf(l,STRING_TABLE.__str35462|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<
2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=0==(HEAP32[(m+16|0)>>2]|0)?3:4;break;case 3:_fprintf(l,STRING_TABLE.__str36463|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=5;break;case 4:j=q;k=n;p=((HEAP32[(HEAP32[(m+16|0)>>2]+12|0)>>2]|0)/(o|0)&-1)+1|0;r=(HEAP32[(HEAP32[(m+16|0)>>2]+12|0)>>2]|0)%(o|0);_fprintf(l,STRING_TABLE.__str37464|0,(tempInt=STACKTOP,
STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,HEAP32[tempInt+4>>2]=k,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=r,tempInt));j=5;break;case 5:STACKTOP=i;return;default:assert(0,"bad label: "+j)}}_ConstructHeaderToCode.X=1;
function _ConstructModuleToCode(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;o=e;_fprintf(j,STRING_TABLE.__str32459|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));n=_GetModuleItem(i,k,n);_PrintDefmoduleReference(i,j,k);_fprintf(j,STRING_TABLE.__str38465|0,
(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=0==(HEAP32[(n+4|0)>>2]|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str39466|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=5;break;case 4:i=o;k=l;var p=((HEAP32[(HEAP32[(n+4|0)>>2]+12|0)>>2]|0)/(m|0)&-1)+1|0,q=(HEAP32[(HEAP32[(n+4|0)>>2]+12|0)>>2]|0)%(m|
0);_fprintf(j,STRING_TABLE.__str40467|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=k,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,tempInt));i=5;break;case 5:i=0==(HEAP32[(n+8|0)>>2]|0)?6:7;break;case 6:_fprintf(j,STRING_TABLE.__str10437|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=8;break;case 7:i=o;k=l;p=((HEAP32[(HEAP32[(n+
8|0)>>2]+12|0)>>2]|0)/(m|0)&-1)+1|0;q=(HEAP32[(HEAP32[(n+8|0)>>2]+12|0)>>2]|0)%(m|0);_fprintf(j,STRING_TABLE.__str41468|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=k,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,tempInt));i=8;break;case 8:_fprintf(j,STRING_TABLE.__str42469|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
STACKTOP=g;return;default:assert(0,"bad label: "+i)}}_ConstructModuleToCode.X=1;
function _WriteFunctionExternDeclarations(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;_fprintf(d,STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(d,STRING_TABLE.__str92519|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(d,STRING_TABLE.__str104|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(d,STRING_TABLE.__str94521|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=_GetFunctionList(b);a=3;break;case 3:a=0!=(e|0)?4:25;break;case 4:_fprintf(d,STRING_TABLE.__str105|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=HEAP8[e+8|0]<<24>>24;a=105==(a|0)||98==(a|0)?5:108==(a|0)?6:102==(a|0)?7:100==(a|0)?8:119==(a|0)||115==(a|0)||111==(a|0)?9:99==(a|0)?10:97==(a|0)||120==(a|0)?11:118==(a|0)||109==(a|0)||117==(a|0)||110==(a|0)||106==(a|0)||107==(a|0)?12:13;break;case 5:_fprintf(d,STRING_TABLE.__str106|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 6:_fprintf(d,STRING_TABLE.__str107|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 7:_fprintf(d,STRING_TABLE.__str108|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 8:_fprintf(d,STRING_TABLE.__str109|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 9:_fprintf(d,STRING_TABLE.__str110|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 10:_fprintf(d,STRING_TABLE.__str111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 11:_fprintf(d,STRING_TABLE.__str112|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 12:_fprintf(d,STRING_TABLE.__str113|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=14;break;case 13:_SystemError(b,STRING_TABLE.__str1428|0,1);a=14;break;case 14:a=
HEAP32[(e+4|0)>>2];_fprintf(d,STRING_TABLE.__str114|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=HEAP8[e+8|0]<<24>>24;a=105==(a|0)||98==(a|0)||108==(a|0)||102==(a|0)||100==(a|0)||119==(a|0)||115==(a|0)||111==(a|0)||99==(a|0)||97==(a|0)||120==(a|0)||118==(a|0)?15:109==(a|0)||117==(a|0)||110==(a|0)||106==(a|0)||107==(a|0)?19:23;break;case 15:a=0!=HEAP16[(e+28|0)>>1]<<16>>16?16:17;break;case 16:_fprintf(d,STRING_TABLE.__str110|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=18;break;case 17:_fprintf(d,STRING_TABLE.__str115524|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=18;break;case 18:a=23;break;case 19:a=0!=HEAP16[(e+28|0)>>1]<<16>>16?20:21;break;case 20:_fprintf(d,STRING_TABLE.__str116|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=22;break;case 21:_fprintf(d,STRING_TABLE.__str117|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=22;break;case 22:a=23;break;case 23:_fprintf(d,STRING_TABLE.__str118|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=0,tempInt));a=24;break;case 24:e=HEAP32[(e+32|0)>>2];a=3;break;case 25:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteFunctionExternDeclarations.X=1;
function _FunctionsToCode(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=0;k=j=1;l=_GetFunctionList(d);a=3;break;case 3:a=0!=(l|0)?4:6;break;case 4:a=g;g=a+1&65535;HEAP16[(l+30|0)>>1]=a;a=5;break;case 5:l=HEAP32[(l+32|0)>>2];a=3;break;case 6:i=a=_NewCFile(d,e,2,j,0);a=0==(a|0)?7:8;break;case 7:b=0;a=25;break;case 8:_fprintf(i,STRING_TABLE.__str91518|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str92519|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str93520|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str94521|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=1;l=_GetFunctionList(d);a=9;break;case 9:a=0!=(l|0)?10:24;break;case 10:a=0!=(k|0)?11:12;break;case 11:k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];a=j;_fprintf(i,STRING_TABLE.__str95522|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,HEAP32[tempInt+4>>2]=a,tempInt));k=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+164|0)>>2]|0)>>2];a=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str96523|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,HEAP32[tempInt+4>>2]=a,tempInt));k=0;a=12;break;case 12:_fprintf(i,STRING_TABLE.__str32459|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(d,i,HEAP32[(l|
0)>>2]);a=HEAP32[(l+4|0)>>2];_fprintf(i,STRING_TABLE.__str97|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=HEAP8[l+8|0]<<24>>24;_fprintf(i,STRING_TABLE.__str98|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=HEAP32[(l+4|0)>>2];_fprintf(i,STRING_TABLE.__str99|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=a,tempInt));_fprintf(i,STRING_TABLE.__str39466|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=0!=(HEAP32[(l+20|0)>>2]|0)?13:14;break;case 13:a=HEAP32[(l+20|0)>>2];_fprintf(i,STRING_TABLE.__str100|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=15;break;case 14:_fprintf(i,STRING_TABLE.__str39466|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=15;break;case 15:a=0!=(HEAP16[(l+28|0)>>1]<<16>>16|0)?1:0;_fprintf(i,STRING_TABLE.__str101|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));_PrintFunctionReference(d,i,HEAP32[(l+32|0)>>2]);g=g+1&65535;l=HEAP32[(l+32|0)>>2];a=(g<<16>>16|0)>(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?17:16;break;case 16:a=
0==(l|0)?17:22;break;case 17:_fprintf(i,STRING_TABLE.__str102|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);g=1;j=j+1|0;a=0!=(l|0)?18:21;break;case 18:i=a=_NewCFile(d,e,2,j,0);a=0==(a|0)?19:20;break;case 19:b=0;a=25;break;case 20:k=1;a=21;break;case 21:a=23;break;case 22:_fprintf(i,STRING_TABLE.__str103|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=23;break;case 23:a=9;break;case 24:b=1;a=25;break;case 25:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_FunctionsToCode.X=1;
function _HashedExpressionsToCode(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;f=3;break;case 3:f=503>a>>>0?4:10;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2]+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:8;break;case 6:HEAP32[(b+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+164|0)>>2]+28|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+164|0)>>2]+8|0)>>2]*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+164|0)>>2]+32|0)>>2]|0)|0;_ExpressionToCode(c,0,HEAP32[(b+8|0)>>2]);f=
7;break;case 7:b=HEAP32[(b+12|0)>>2];f=5;break;case 8:f=9;break;case 9:a=a+1|0;f=3;break;case 10:return;default:assert(0,"bad label: "+f)}}_HashedExpressionsToCode.X=1;
function _WriteInitializationFunction(h,f){var c=STACKTOP;STACKTOP+=1028;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j;d=h;i=e=f;_sprintf(g|0,STRING_TABLE.__str70497|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));i=a=_GenOpen(d,g|0,STRING_TABLE.__str14441|0);a=0==(a|0)?3:4;break;case 3:_OpenErrorMessage(d,STRING_TABLE.__str427|0,g|0);
b=0;a=10;break;case 4:j=e;_fprintf(i,STRING_TABLE.__str15442|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,tempInt));_fprintf(i,STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str71498|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str72499|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str73500|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str54481|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str55482|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str74501|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str75502|0,(tempInt=STACKTOP,STACKTOP+=1,
STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str76503|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str77504|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,tempInt));_fprintf(i,STRING_TABLE.__str16443|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str78505|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str79506|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str78505|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str80507|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=j,tempInt));_fprintf(i,STRING_TABLE.__str68495|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str81508|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str82509|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];var k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2],l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str83510|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=k,HEAP32[tempInt+
12>>2]=l,tempInt));_fprintf(i,STRING_TABLE.__str84511|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str85512|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str86513|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str87514|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,tempInt));_fprintf(i,STRING_TABLE.__str88515|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|
0)>>2];_fprintf(i,STRING_TABLE.__str89516|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,tempInt));j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+40|0)>>2];a=5;break;case 5:a=0!=(j|0)?6:9;break;case 6:a=0!=(HEAP32[(j+8|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(j+8|0)>>2]](d,i,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]);_fprintf(i,STRING_TABLE.__str16443|0,(tempInt=
STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=8;break;case 8:j=HEAP32[(j+28|0)>>2];a=5;break;case 9:_fprintf(i,STRING_TABLE.__str90517|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(i,STRING_TABLE.__str69496|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);b=1;a=10;break;case 10:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_WriteInitializationFunction.X=1;function _InitializeConstructData(h){_AllocateEnvironmentData(h,42,56,196);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+24|0)>>2]=1}
function _DeallocateConstructData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+16|0)>>2]);_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+32|0)>>2]);_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+36|0)>>2]);_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+40|0)>>2]);a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+28|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=
HEAP32[(a+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateConstructData.X=1;
function _FindConstruct(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+28|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(b,HEAP32[(d|0)>>2])|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+48|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}function _SetCompilationsWatch(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+24|0)>>2]=f}
function _GetCompilationsWatch(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+24|0)>>2]}function _SetPrintWhileLoading(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+20|0)>>2]=f}function _GetPrintWhileLoading(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+20|0)>>2]}function _SetBeforeResetFunction(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+48|0)>>2]=f;return c}
function _RemoveConstruct(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=0;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+168|0)>>2]+28|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:c=0==(_strcmp(d,HEAP32[(e|0)>>2])|0)?5:9;break;case 5:c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+168|0)>>2]+28|0)>>2]=HEAP32[(e+48|0)>>2];c=8;break;case 7:HEAP32[(g+48|0)>>2]=HEAP32[(e+48|0)>>2];c=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=12;break;case 9:g=e;c=10;break;case 10:e=HEAP32[(e+48|0)>>2];c=3;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_RemoveConstruct.X=1;
function _EnvSave(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;e=c=_GenOpen(b,f,STRING_TABLE.__str525|0);c=0==(c|0)?3:4;break;case 3:a=0;c=13;break;case 4:_SetFastSave(b,e);g=_EnvGetNextDefmodule(b,0);c=5;break;case 5:c=0!=(g|0)?6:12;break;case 6:d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+168|0)>>2]+16|0)>>2];c=7;break;case 7:c=0!=(d|0)?8:10;break;case 8:FUNCTION_TABLE[HEAP32[(d+4|0)>>2]](b,g,e);c=9;break;case 9:d=HEAP32[(d+12|0)>>2];c=7;break;case 10:c=11;break;case 11:g=_EnvGetNextDefmodule(b,
g);c=5;break;case 12:_GenClose(b,e);_SetFastSave(b,0);a=1;c=13;break;case 13:return a;default:assert(0,"bad label: "+c)}}_EnvSave.X=1;
function _RemoveSaveFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=h;var e=_RemoveFunctionFromCallList(a,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+16|0)>>2],d);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+16|0)>>2]=e;a=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:b=1;a=5;break;case 4:b=0;a=5;break;case 5:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _InitializeConstructs(h){_EnvDefineFunction2(h,STRING_TABLE.__str1526|0,118,198,STRING_TABLE.__str2527|0,STRING_TABLE.__str3528|0);_EnvDefineFunction2(h,STRING_TABLE.__str4529|0,118,200,STRING_TABLE.__str5530|0,STRING_TABLE.__str3528|0);_AddWatchItem(h,STRING_TABLE.__str6531|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+24|0,30,0,0)}
function _ClearCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str1526|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvClear(c);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}function _ResetCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str4529|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvReset(c);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _EnvClear(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_EnvActivateRouter(c,STRING_TABLE.__str8533|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]|0)>>2]=1;f=0==(_ClearReady(c)|0)?3:4;break;case 3:_PrintErrorID(c,STRING_TABLE.__str9534|0,1,0);_EnvPrintRouter(c,STRING_TABLE.__str10535|0,STRING_TABLE.__str11536|0);_EnvDeactivateRouter(c,STRING_TABLE.__str8533|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]|0)>>2]=0;f=16;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]|0)>>
2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]=1;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+36|0)>>2];f=5;break;case 5:f=0!=(a|0)?6:11;break;case 6:f=0!=HEAP16[(a+16|0)>>1]<<16>>16?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]](c);f=9;break;case 8:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]]();f=9;break;case 9:f=10;break;case 10:a=HEAP32[(a+12|0)>>2];f=5;break;case 11:_EnvDeactivateRouter(c,STRING_TABLE.__str8533|0);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?
12:15;break;case 12:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]|0)>>2]|0)?15:13;break;case 13:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]|0)>>2]|0)?14:15;break;case 14:_PeriodicCleanup(c,1,0);f=15;break;case 15:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]=0;f=16;break;case 16:return;default:assert(0,"bad label: "+f)}}_EnvClear.X=1;
function _EnvReset(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:f=24;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+12|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+8|0)>>2]=1;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:_SetHaltExecution(c,0);f=6;break;case 6:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+48|0)>>2]|0)?7:8;break;case 7:f=0==(FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+168|0)>>2]+48|0)>>2]](c)|0)?9:10;break;case 8:f=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+12|0)>>2]=0;f=24;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+8|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+32|0)>>2];f=11;break;case 11:if(0!=(a|0))f=12;else{var b=0;f=13}break;case 12:b=0==(_GetHaltExecution(c)|0);f=13;break;case 13:f=b?14:19;break;case 14:f=0!=HEAP16[(a+16|0)>>1]<<16>>16?
15:16;break;case 15:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]](c);f=17;break;case 16:FUNCTION_TABLE[HEAP32[(a+4|0)>>2]]();f=17;break;case 17:f=18;break;case 18:a=HEAP32[(a+12|0)>>2];f=11;break;case 19:f=c;var d=_EnvFindDefmodule(c,STRING_TABLE.__str7532|0);_EnvSetCurrentModule(f,d);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?20:23;break;case 20:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+160|0)>>2]|0)>>2]|0)?23:21;break;case 21:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]|0)>>
2]|0)?22:23;break;case 22:_PeriodicCleanup(c,1,0);f=23;break;case 23:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+12|0)>>2]=0;f=24;break;case 24:return;default:assert(0,"bad label: "+f)}}_EnvReset.X=1;function _AddResetFunction(h,f,c){var a;a=_GetCurrentEnvironment();h=_AddFunctionToCallList(a,h,c,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+32|0)>>2],0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+32|0)>>2]=h;return 1}
function _EnvAddResetFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+32|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+32|0)>>2]=f;return 1}
function _EnvRemoveResetFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=h;var e=_RemoveFunctionFromCallList(a,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+32|0)>>2],d);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+32|0)>>2]=e;a=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:b=1;a=5;break;case 4:b=0;a=5;break;case 5:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _ExecutingConstruct(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+44|0)>>2]}function _SetExecutingConstruct(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+44|0)>>2]=f}
function _ClearReady(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+40|0)>>2];f=3;break;case 3:f=0!=(b|0)?4:8;break;case 4:f=HEAP32[(b+4|0)>>2];f=0==(FUNCTION_TABLE[f](a)|0)?5:6;break;case 5:c=0;f=9;break;case 6:f=7;break;case 7:b=HEAP32[(b+12|0)>>2];f=3;break;case 8:c=1;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _AddClearReadyFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+40|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+40|0)>>2]=f;return 1}
function _RemoveClearReadyFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=h;var e=_RemoveFunctionFromCallList(a,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+40|0)>>2],d);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+40|0)>>2]=e;a=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:b=1;a=5;break;case 4:b=0;a=5;break;case 5:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _AddClearFunction(h,f,c){var a;a=_GetCurrentEnvironment();h=_AddFunctionToCallList(a,h,c,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+36|0)>>2],0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+36|0)>>2]=h;return 1}function _EnvAddClearFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+36|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+36|0)>>2]=f;return 1}
function _EnvRemoveClearFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=h;var e=_RemoveFunctionFromCallList(a,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+36|0)>>2],d);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+36|0)>>2]=e;a=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:b=1;a=5;break;case 4:b=0;a=5;break;case 5:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _OldGetConstructList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;k=0;j=FUNCTION_TABLE[g](d,0);b=3;break;case 3:b=0!=(j|0)?4:6;break;case 4:k=k+1|0;b=5;break;case 5:j=FUNCTION_TABLE[g](d,j);b=3;break;case 6:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=k-1|0;l=_EnvCreateMultifield(d,k);HEAP32[(e+8|0)>>2]=l;j=FUNCTION_TABLE[g](d,0);k=1;b=7;break;case 7:b=0!=(j|0)?8:12;break;case 8:b=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|
0)?9:10;break;case 9:_EnvSetMultifieldErrorValue(d,e);b=12;break;case 10:HEAP16[((l+16|0)+((k-1|0)<<3)|0)>>1]=2;b=d;var m=FUNCTION_TABLE[i](d,j);b=_EnvAddSymbol(b,m);HEAP32[(((l+16|0)+((k-1|0)<<3)|0)+4|0)>>2]=b;b=11;break;case 11:j=FUNCTION_TABLE[g](d,j);k=k+1|0;b=7;break;case 12:return;default:assert(0,"bad label: "+b)}}_OldGetConstructList.X=1;
function _DeinstallConstructHeader(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;_DecrementSymbolCount(a,HEAP32[(b|0)>>2]);c=0!=(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:c=a;var d=HEAP32[(b+4|0)>>2],e=_strlen(HEAP32[(b+4|0)>>2])+1|0;_rm(c,d,e);HEAP32[(b+4|0)>>2]=0;c=4;break;case 4:c=0!=(HEAP32[(b+20|0)>>2]|0)?5:6;break;case 5:_ClearUserDataList(a,HEAP32[(b+20|0)>>2]);HEAP32[(b+20|0)>>2]=0;c=6;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _DestroyConstructHeader(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:c=a;var d=HEAP32[(b+4|0)>>2],e=_strlen(HEAP32[(b+4|0)>>2])+1|0;_rm(c,d,e);HEAP32[(b+4|0)>>2]=0;c=4;break;case 4:c=0!=(HEAP32[(b+20|0)>>2]|0)?5:6;break;case 5:_ClearUserDataList(a,HEAP32[(b+20|0)>>2]);HEAP32[(b+20|0)>>2]=0;c=6;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _AddConstruct(h,f,c,a,b,d,e,g,i,j,k,l,m){var n;for(n=2;;)switch(n){case 2:var o,p,q,r,s,t,u,v,w,x,y,A,z;o=h;p=f;q=c;r=a;s=b;t=d;u=e;v=g;w=i;x=j;y=k;A=l;z=m;n=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]|0)?3:4;break;case 3:var B=_genalloc(o,52);n=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+20|0)>>
2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];B=HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+236|0)>>2]+16|0)>>2];n=5;break;case 5:return h=B,HEAP32[(h|0)>>2]=p,HEAP32[(h+4|0)>>2]=q,HEAP32[(h+8|0)>>2]=r,HEAP32[(h+12|0)>>2]=s,HEAP32[(h+16|0)>>2]=t,HEAP32[(h+20|0)>>2]=u,HEAP32[(h+24|0)>>2]=v,HEAP32[(h+28|0)>>2]=w,HEAP32[(h+32|0)>>2]=x,HEAP32[(h+36|0)>>2]=y,HEAP32[(h+40|0)>>2]=A,HEAP32[(h+44|0)>>2]=z,HEAP32[(h+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+168|0)>>2]+28|
0)>>2],HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+168|0)>>2]+28|0)>>2]=h;default:assert(0,"bad label: "+n)}}_AddConstruct.X=1;function _AddSaveFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+16|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+168|0)>>2]+16|0)>>2]=f;return 1}
function _InitializeConstraints(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_AllocateEnvironmentData(c,43,20,202);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+4|0)>>2]=1;f=_gm2(c,668);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]|0)>>2]=f;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]|0)>>2]|0)?3:4;break;case 3:_EnvExitRouter(c,1);f=4;break;case 4:a=0;f=5;break;case 5:f=167>(a|0)?6:8;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]|0)>>2]+(a<<2)|0)>>2]=0;f=7;break;
case 7:a=a+1|0;f=5;break;case 8:_EnvDefineFunction2(c,STRING_TABLE.__str556|0,98,204,STRING_TABLE.__str1557|0,STRING_TABLE.__str2558|0);_EnvDefineFunction2(c,STRING_TABLE.__str3559|0,98,206,STRING_TABLE.__str4560|0,STRING_TABLE.__str5561|0);_EnvDefineFunction2(c,STRING_TABLE.__str6562|0,98,208,STRING_TABLE.__str7563|0,STRING_TABLE.__str2558|0);_EnvDefineFunction2(c,STRING_TABLE.__str8564|0,98,210,STRING_TABLE.__str9565|0,STRING_TABLE.__str5561|0);return;default:assert(0,"bad label: "+f)}}
_InitializeConstraints.X=1;
function _DeallocateConstraintData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:f=167>(b|0)?4:9;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]|0)>>2]+(b<<2)|0)>>2];f=5;break;case 5:f=0!=(a|0)?6:7;break;case 6:f=HEAP32[(a+36|0)>>2];_ReturnConstraintRecord(c,a);a=f;f=5;break;case 7:f=8;break;case 8:b=b+1|0;f=3;break;case 9:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]|0)>>2],668);f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0)?
10:11;break;case 10:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+12|0)>>2],48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0);f=11;break;case 11:return;default:assert(0,"bad label: "+f)}}_DeallocateConstraintData.X=1;
function _GDCCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=_EnvGetDynamicConstraintChecking(f);f=-1==(_EnvArgCountCheck(f,STRING_TABLE.__str556|0,0,0)|0)?3:4;break;case 3:c=a;f=5;break;case 4:c=a;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SDCCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_EnvGetDynamicConstraintChecking(b);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str3559|0,0,1)|0)?3:4;break;case 3:a=d;c=9;break;case 4:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:7;break;case 5:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?6:7;break;case 6:_EnvSetDynamicConstraintChecking(b,
0);c=8;break;case 7:_EnvSetDynamicConstraintChecking(b,1);c=8;break;case 8:a=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}function _GSCCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=_EnvGetStaticConstraintChecking(f);f=-1==(_EnvArgCountCheck(f,STRING_TABLE.__str6562|0,0,0)|0)?3:4;break;case 3:c=a;f=5;break;case 4:c=a;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SSCCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_EnvGetStaticConstraintChecking(b);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str8564|0,0,1)|0)?3:4;break;case 3:a=d;c=9;break;case 4:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:7;break;case 5:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?6:7;break;case 6:_EnvSetStaticConstraintChecking(b,
0);c=8;break;case 7:_EnvSetStaticConstraintChecking(b,1);c=8;break;case 8:a=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _RemoveConstraint(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=0;c=0==(b|0)?3:4;break;case 3:c=17;break;case 4:c=0>(HEAP32[(b+40|0)>>2]|0)?5:6;break;case 5:_ReturnConstraintRecord(a,b);c=17;break;case 6:d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+172|0)>>2]|0)>>2]+(HEAP32[(b+40|0)>>2]<<2)|0)>>2];c=7;break;case 7:c=0!=(d|0)?8:16;break;case 8:c=(d|0)==(b|0)?9:15;break;case 9:c=b+44|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0==(HEAP32[(b+44|0)>>2]|0)?10:14;break;case 10:c=0==(e|0)?
11:12;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+172|0)>>2]|0)>>2]+(HEAP32[(b+40|0)>>2]<<2)|0)>>2]=HEAP32[(b+36|0)>>2];c=13;break;case 12:HEAP32[(e+36|0)>>2]=HEAP32[(b+36|0)>>2];c=13;break;case 13:_DeinstallConstraintRecord(a,b);_ReturnConstraintRecord(a,b);c=14;break;case 14:c=17;break;case 15:e=d;d=HEAP32[(d+36|0)>>2];c=7;break;case 16:c=17;break;case 17:return;default:assert(0,"bad label: "+c)}}_RemoveConstraint.X=1;
function _ReturnConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=0>(HEAP32[(b+40|0)>>2]|0)?5:6;break;case 5:_ReturnExpression(a,HEAP32[(b+8|0)>>2]);_ReturnExpression(a,HEAP32[(b+12|0)>>2]);_ReturnExpression(a,HEAP32[(b+20|0)>>2]);_ReturnExpression(a,HEAP32[(b+16|0)>>2]);_ReturnExpression(a,HEAP32[(b+24|0)>>2]);_ReturnExpression(a,HEAP32[(b+28|0)>>2]);c=6;break;case 6:_ReturnConstraintRecord(a,HEAP32[(b+32|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}_ReturnConstraintRecord.X=1;
function _DeinstallConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0<=(HEAP32[(b+40|0)>>2]|0)?3:4;break;case 3:_RemoveHashedExpression(a,HEAP32[(b+8|0)>>2]);_RemoveHashedExpression(a,HEAP32[(b+12|0)>>2]);_RemoveHashedExpression(a,HEAP32[(b+20|0)>>2]);_RemoveHashedExpression(a,HEAP32[(b+16|0)>>2]);_RemoveHashedExpression(a,HEAP32[(b+24|0)>>2]);_RemoveHashedExpression(a,HEAP32[(b+28|0)>>2]);c=5;break;case 4:_ExpressionDeinstall(a,HEAP32[(b+8|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+
12|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+20|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+16|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+24|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+28|0)>>2]);c=5;break;case 5:c=0!=(HEAP32[(b+32|0)>>2]|0)?6:7;break;case 6:_DeinstallConstraintRecord(a,HEAP32[(b+32|0)>>2]);c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}_DeinstallConstraintRecord.X=1;
function _HashConstraint(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;b=a=0;b=b+(((((((17*(HEAP32[c>>2]&1)|0)+(5*(HEAPU32[c>>2]>>>1&1)|0)|0)+(23*(HEAPU32[c>>2]>>>2&1)|0)|0)+(19*(HEAPU32[c>>2]>>>3&1)|0)|0)+(29*(HEAPU32[c>>2]>>>4&1)|0)|0)+(31*(HEAPU32[c>>2]>>>5&1)|0)|0)+(17*(HEAPU32[c>>2]>>>6&1)|0)|0)|0;b=b+((((((29*(HEAPU32[c>>2]>>>7&1)|0)+(29*(HEAPU32[c>>2]>>>9&1)|0)|0)+(29*(HEAPU32[c>>2]>>>17&1)|0)|0)+(79*(HEAPU32[c>>2]>>>8&1)|0)|0)+(59*(HEAPU32[c>>2]>>>10&1)|0)|0)+(61*(HEAPU32[c>>2]>>>
11&1)|0)|0)|0;b=b+(((((3*(HEAPU32[c>>2]>>>12&1)|0)+(37*(HEAPU32[c>>2]>>>13&1)|0)|0)+(9*(HEAPU32[c>>2]>>>14&1)|0)|0)+(11*(HEAPU32[c>>2]>>>15&1)|0)|0)+(7*(HEAPU32[c>>2]>>>16&1)|0)|0)|0;e=HEAP32[(c+8|0)>>2];f=3;break;case 3:f=0!=(e|0)?4:6;break;case 4:f=HEAP16[(e|0)>>1];var g=HEAP32[(e+4|0)>>2],i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=5;break;case 5:e=HEAP32[(e+12|0)>>2];f=3;break;case 6:e=HEAP32[(c+12|0)>>2];f=7;break;case 7:f=0!=(e|0)?8:10;break;case 8:f=HEAP16[(e|0)>>1];g=HEAP32[(e+4|0)>>
2];i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=9;break;case 9:e=HEAP32[(e+12|0)>>2];f=7;break;case 10:e=HEAP32[(c+16|0)>>2];f=11;break;case 11:f=0!=(e|0)?12:14;break;case 12:f=HEAP16[(e|0)>>1];g=HEAP32[(e+4|0)>>2];i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=13;break;case 13:e=HEAP32[(e+12|0)>>2];f=11;break;case 14:e=HEAP32[(c+20|0)>>2];f=15;break;case 15:f=0!=(e|0)?16:18;break;case 16:f=HEAP16[(e|0)>>1];g=HEAP32[(e+4|0)>>2];i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=17;break;
case 17:e=HEAP32[(e+12|0)>>2];f=15;break;case 18:e=HEAP32[(c+24|0)>>2];f=19;break;case 19:f=0!=(e|0)?20:22;break;case 20:f=HEAP16[(e|0)>>1];g=HEAP32[(e+4|0)>>2];i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=21;break;case 21:e=HEAP32[(e+12|0)>>2];f=19;break;case 22:e=HEAP32[(c+28|0)>>2];f=23;break;case 23:f=0!=(e|0)?24:26;break;case 24:f=HEAP16[(e|0)>>1];g=HEAP32[(e+4|0)>>2];i=a;a=i+1|0;f=_GetAtomicHashValue(f,g,i);b=b+f|0;f=25;break;case 25:e=HEAP32[(e+12|0)>>2];f=23;break;case 26:f=0!=(HEAP32[(c+
32|0)>>2]|0)?27:28;break;case 27:f=_HashConstraint(HEAP32[(c+32|0)>>2]);b=b+f|0;f=28;break;case 28:d=(b>>>0)%167;f=0>(d|0)?29:30;break;case 29:d=-d|0;f=30;break;case 30:return d;default:assert(0,"bad label: "+f)}}_HashConstraint.X=1;
function _AddConstraint(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=11;break;case 4:g=_HashConstraint(d);e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]|0)>>2]+(g<<2)|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:10;break;case 6:c=0!=(_ConstraintCompare(d,e)|0)?7:8;break;case 7:c=e+44|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;_ReturnConstraintRecord(b,d);a=e;c=11;break;case 8:c=9;break;case 9:e=HEAP32[(e+36|0)>>2];c=5;break;case 10:_InstallConstraintRecord(b,
d);HEAP32[(d+44|0)>>2]=1;HEAP32[(d+40|0)>>2]=g;HEAP32[(d+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]|0)>>2]+(g<<2)|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]|0)>>2]+(g<<2)|0)>>2]=d;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}_AddConstraint.X=1;function _EnvGetDynamicConstraintChecking(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+8|0)>>2]}
function _EnvSetDynamicConstraintChecking(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+8|0)>>2]=f;return c}function _EnvGetStaticConstraintChecking(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+4|0)>>2]}function _EnvSetStaticConstraintChecking(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+172|0)>>2]+4|0)>>2]=f;return c}
function _ConstraintCompare(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=(HEAP32[b>>2]&1|0)!=(HEAP32[d>>2]&1|0)?21:3;break;case 3:c=(HEAPU32[b>>2]>>>1&1|0)!=(HEAPU32[d>>2]>>>1&1|0)?21:4;break;case 4:c=(HEAPU32[b>>2]>>>2&1|0)!=(HEAPU32[d>>2]>>>2&1|0)?21:5;break;case 5:c=(HEAPU32[b>>2]>>>3&1|0)!=(HEAPU32[d>>2]>>>3&1|0)?21:6;break;case 6:c=(HEAPU32[b>>2]>>>4&1|0)!=(HEAPU32[d>>2]>>>4&1|0)?21:7;break;case 7:c=(HEAPU32[b>>2]>>>5&1|0)!=(HEAPU32[d>>2]>>>5&1|0)?21:8;break;case 8:c=(HEAPU32[b>>
2]>>>6&1|0)!=(HEAPU32[d>>2]>>>6&1|0)?21:9;break;case 9:c=(HEAPU32[b>>2]>>>7&1|0)!=(HEAPU32[d>>2]>>>7&1|0)?21:10;break;case 10:c=(HEAPU32[b>>2]>>>9&1|0)!=(HEAPU32[d>>2]>>>9&1|0)?21:11;break;case 11:c=(HEAPU32[b>>2]>>>17&1|0)!=(HEAPU32[d>>2]>>>17&1|0)?21:12;break;case 12:c=(HEAPU32[b>>2]>>>18&1|0)!=(HEAPU32[d>>2]>>>18&1|0)?21:13;break;case 13:c=(HEAPU32[b>>2]>>>8&1|0)!=(HEAPU32[d>>2]>>>8&1|0)?21:14;break;case 14:c=(HEAPU32[b>>2]>>>10&1|0)!=(HEAPU32[d>>2]>>>10&1|0)?21:15;break;case 15:c=(HEAPU32[b>>
2]>>>11&1|0)!=(HEAPU32[d>>2]>>>11&1|0)?21:16;break;case 16:c=(HEAPU32[b>>2]>>>12&1|0)!=(HEAPU32[d>>2]>>>12&1|0)?21:17;break;case 17:c=(HEAPU32[b>>2]>>>13&1|0)!=(HEAPU32[d>>2]>>>13&1|0)?21:18;break;case 18:c=(HEAPU32[b>>2]>>>14&1|0)!=(HEAPU32[d>>2]>>>14&1|0)?21:19;break;case 19:c=(HEAPU32[b>>2]>>>15&1|0)!=(HEAPU32[d>>2]>>>15&1|0)?21:20;break;case 20:c=(HEAPU32[b>>2]>>>16&1|0)!=(HEAPU32[d>>2]>>>16&1|0)?21:22;break;case 21:a=0;c=97;break;case 22:e=HEAP32[(b+8|0)>>2];g=HEAP32[(d+8|0)>>2];c=23;break;case 23:if(0!=
(e|0))c=24;else{var i=0;c=25}break;case 24:i=0!=(g|0);c=25;break;case 25:c=i?26:31;break;case 26:c=(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(g|0)>>1]&65535|0)?28:27;break;case 27:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?28:29;break;case 28:a=0;c=97;break;case 29:c=30;break;case 30:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=23;break;case 31:c=(e|0)!=(g|0)?32:33;break;case 32:a=0;c=97;break;case 33:e=HEAP32[(b+12|0)>>2];g=HEAP32[(d+12|0)>>2];c=34;break;case 34:if(0!=(e|0))c=35;else{var j=0;
c=36}break;case 35:j=0!=(g|0);c=36;break;case 36:c=j?37:42;break;case 37:c=(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(g|0)>>1]&65535|0)?39:38;break;case 38:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?39:40;break;case 39:a=0;c=97;break;case 40:c=41;break;case 41:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=34;break;case 42:c=(e|0)!=(g|0)?43:44;break;case 43:a=0;c=97;break;case 44:e=HEAP32[(b+16|0)>>2];g=HEAP32[(d+16|0)>>2];c=45;break;case 45:if(0!=(e|0))c=46;else{var k=0;c=47}break;case 46:k=0!=
(g|0);c=47;break;case 47:c=k?48:53;break;case 48:c=(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(g|0)>>1]&65535|0)?50:49;break;case 49:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?50:51;break;case 50:a=0;c=97;break;case 51:c=52;break;case 52:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=45;break;case 53:c=(e|0)!=(g|0)?54:55;break;case 54:a=0;c=97;break;case 55:e=HEAP32[(b+20|0)>>2];g=HEAP32[(d+20|0)>>2];c=56;break;case 56:if(0!=(e|0))c=57;else{var l=0;c=58}break;case 57:l=0!=(g|0);c=58;break;case 58:c=
l?59:64;break;case 59:c=(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(g|0)>>1]&65535|0)?61:60;break;case 60:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?61:62;break;case 61:a=0;c=97;break;case 62:c=63;break;case 63:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=56;break;case 64:c=(e|0)!=(g|0)?65:66;break;case 65:a=0;c=97;break;case 66:e=HEAP32[(b+24|0)>>2];g=HEAP32[(d+24|0)>>2];c=67;break;case 67:if(0!=(e|0))c=68;else{var m=0;c=69}break;case 68:m=0!=(g|0);c=69;break;case 69:c=m?70:75;break;case 70:c=
(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(g|0)>>1]&65535|0)?72:71;break;case 71:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?72:73;break;case 72:a=0;c=97;break;case 73:c=74;break;case 74:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=67;break;case 75:c=(e|0)!=(g|0)?76:77;break;case 76:a=0;c=97;break;case 77:e=HEAP32[(b+28|0)>>2];g=HEAP32[(d+28|0)>>2];c=78;break;case 78:if(0!=(e|0))c=79;else{var n=0;c=80}break;case 79:n=0!=(g|0);c=80;break;case 80:c=n?81:86;break;case 81:c=(HEAPU16[(e|0)>>1]&65535|
0)!=(HEAPU16[(g|0)>>1]&65535|0)?83:82;break;case 82:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(g+4|0)>>2]|0)?83:84;break;case 83:a=0;c=97;break;case 84:c=85;break;case 85:e=HEAP32[(e+12|0)>>2];g=HEAP32[(g+12|0)>>2];c=78;break;case 86:c=(e|0)!=(g|0)?87:88;break;case 87:a=0;c=97;break;case 88:c=0==(HEAP32[(b+32|0)>>2]|0)?89:90;break;case 89:c=0!=(HEAP32[(d+32|0)>>2]|0)?92:90;break;case 90:c=0!=(HEAP32[(b+32|0)>>2]|0)?91:93;break;case 91:c=0==(HEAP32[(d+32|0)>>2]|0)?92:93;break;case 92:a=0;c=97;break;case 93:c=
(HEAP32[(b+32|0)>>2]|0)==(HEAP32[(d+32|0)>>2]|0)?94:95;break;case 94:a=1;c=97;break;case 95:c=96;break;case 96:a=_ConstraintCompare(HEAP32[(b+32|0)>>2],HEAP32[(d+32|0)>>2]);c=97;break;case 97:return a;default:assert(0,"bad label: "+c)}}_ConstraintCompare.X=1;
function _InstallConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=_AddHashedExpression(a,HEAP32[(b+8|0)>>2]);_ReturnExpression(a,HEAP32[(b+8|0)>>2]);HEAP32[(b+8|0)>>2]=c;c=_AddHashedExpression(a,HEAP32[(b+12|0)>>2]);_ReturnExpression(a,HEAP32[(b+12|0)>>2]);HEAP32[(b+12|0)>>2]=c;c=_AddHashedExpression(a,HEAP32[(b+20|0)>>2]);_ReturnExpression(a,HEAP32[(b+20|0)>>2]);HEAP32[(b+20|0)>>2]=c;c=_AddHashedExpression(a,HEAP32[(b+16|0)>>2]);_ReturnExpression(a,HEAP32[(b+16|0)>>2]);HEAP32[(b+
16|0)>>2]=c;c=_AddHashedExpression(a,HEAP32[(b+24|0)>>2]);_ReturnExpression(a,HEAP32[(b+24|0)>>2]);HEAP32[(b+24|0)>>2]=c;c=_AddHashedExpression(a,HEAP32[(b+28|0)>>2]);_ReturnExpression(a,HEAP32[(b+28|0)>>2]);HEAP32[(b+28|0)>>2]=c;c=0!=(HEAP32[(b+32|0)>>2]|0)?3:4;break;case 3:_InstallConstraintRecord(a,HEAP32[(b+32|0)>>2]);c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}_InstallConstraintRecord.X=1;
function _PlaceDepthActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;c=f;d=HEAP32[(c+8|0)>>2];e=HEAP32[(c+12|0)>>2];g=0;c=3;break;case 3:c=0!=(b|0)?4:14;break;case 4:c=(HEAP32[(b+8|0)>>2]|0)>(d|0)?5:6;break;case 5:g=b;b=HEAP32[(b+28|0)>>2];c=13;break;case 6:c=(HEAP32[(b+8|0)>>2]|0)<(d|0)?7:8;break;case 7:a=g;c=15;break;case 8:c=e>>>0<HEAPU32[(b+12|0)>>2]>>>0?9:10;break;case 9:g=b;b=HEAP32[(b+28|0)>>2];c=11;break;case 10:a=g;c=15;break;case 11:c=12;break;case 12:c=13;break;case 13:c=
3;break;case 14:a=g;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_PlaceDepthActivation.X=1;
function _PlaceBreadthActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;c=f;d=HEAP32[(c+8|0)>>2];e=HEAP32[(c+12|0)>>2];g=0;c=3;break;case 3:c=0!=(b|0)?4:14;break;case 4:c=(HEAP32[(b+8|0)>>2]|0)>(d|0)?5:6;break;case 5:g=b;b=HEAP32[(b+28|0)>>2];c=13;break;case 6:c=(HEAP32[(b+8|0)>>2]|0)<(d|0)?7:8;break;case 7:a=g;c=15;break;case 8:c=e>>>0>HEAPU32[(b+12|0)>>2]>>>0?9:10;break;case 9:g=b;b=HEAP32[(b+28|0)>>2];c=11;break;case 10:a=g;c=15;break;case 11:c=12;break;case 12:c=13;break;case 13:c=
3;break;case 14:a=g;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_PlaceBreadthActivation.X=1;
function _PlaceComplexityActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;c=f;g=HEAP32[(c+12|0)>>2];d=HEAP32[(c+8|0)>>2];e=HEAP32[(HEAP32[(c|0)>>2]+32|0)>>2]&2047;i=0;c=3;break;case 3:c=0!=(b|0)?4:20;break;case 4:c=(HEAP32[(b+8|0)>>2]|0)>(d|0)?5:6;break;case 5:i=b;b=HEAP32[(b+28|0)>>2];c=19;break;case 6:c=(HEAP32[(b+8|0)>>2]|0)<(d|0)?7:8;break;case 7:a=i;c=21;break;case 8:c=(e|0)<(HEAP32[(HEAP32[(b|0)>>2]+32|0)>>2]&2047|0)?9:10;break;case 9:i=b;b=HEAP32[(b+28|0)>>2];c=17;break;
case 10:c=(e|0)>(HEAP32[(HEAP32[(b|0)>>2]+32|0)>>2]&2047|0)?11:12;break;case 11:a=i;c=21;break;case 12:c=g>>>0>HEAPU32[(b+12|0)>>2]>>>0?13:14;break;case 13:i=b;b=HEAP32[(b+28|0)>>2];c=15;break;case 14:a=i;c=21;break;case 15:c=16;break;case 16:c=17;break;case 17:c=18;break;case 18:c=19;break;case 19:c=3;break;case 20:a=i;c=21;break;case 21:return a;default:assert(0,"bad label: "+c)}}_PlaceComplexityActivation.X=1;
function _PlaceActivation(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=0;_EnvSetAgendaChanged(b,1);a=0!=(HEAP32[d>>2]|0)?3:12;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+68|0)>>2]+20|0)>>2];a=0==(a|0)?4:1==(a|0)?5:2==(a|0)?6:3==(a|0)?7:4==(a|0)?8:5==(a|0)?9:6==(a|0)?10:11;break;case 4:g=_PlaceDepthActivation(HEAP32[d>>2],e);a=11;break;case 5:g=_PlaceBreadthActivation(HEAP32[d>>2],e);a=11;break;case 6:g=_PlaceLEXActivation(b,HEAP32[d>>2],e);a=11;break;case 7:g=_PlaceMEAActivation(b,
HEAP32[d>>2],e);a=11;break;case 8:g=_PlaceComplexityActivation(HEAP32[d>>2],e);a=11;break;case 9:g=_PlaceSimplicityActivation(HEAP32[d>>2],e);a=11;break;case 10:g=_PlaceRandomActivation(HEAP32[d>>2],e);a=11;break;case 11:a=12;break;case 12:a=0==(g|0)?13:16;break;case 13:HEAP32[(e+28|0)>>2]=HEAP32[d>>2];HEAP32[d>>2]=e;a=0!=(HEAP32[(e+28|0)>>2]|0)?14:15;break;case 14:HEAP32[(HEAP32[(e+28|0)>>2]+24|0)>>2]=e;a=15;break;case 15:a=19;break;case 16:HEAP32[(e+28|0)>>2]=HEAP32[(g+28|0)>>2];HEAP32[(e+24|0)>>
2]=g;HEAP32[(g+28|0)>>2]=e;a=0!=(HEAP32[(e+28|0)>>2]|0)?17:18;break;case 17:HEAP32[(HEAP32[(e+28|0)>>2]+24|0)>>2]=e;a=18;break;case 18:a=19;break;case 19:return;default:assert(0,"bad label: "+a)}}_PlaceActivation.X=1;
function _PlaceLEXActivation(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;a=0==(HEAP32[(g+16|0)>>2]|0)?3:4;break;case 3:a=_SortPartialMatch(d,HEAP32[(g+4|0)>>2]);HEAP32[(g+16|0)>>2]=a;a=4;break;case 4:j=HEAP32[(g+12|0)>>2];i=HEAP32[(g+8|0)>>2];k=0;a=5;break;case 5:a=0!=(e|0)?6:22;break;case 6:a=(HEAP32[(e+8|0)>>2]|0)>(i|0)?7:8;break;case 7:k=e;e=HEAP32[(e+28|0)>>2];a=21;break;case 8:a=(HEAP32[(e+8|0)>>2]|0)<(i|0)?9:10;break;case 9:b=k;a=23;break;case 10:l=_ComparePartialMatches(d,
e,g);a=0==(l|0)?11:12;break;case 11:k=e;e=HEAP32[(e+28|0)>>2];a=19;break;case 12:a=1==(l|0)?13:14;break;case 13:b=k;a=23;break;case 14:a=j>>>0>HEAPU32[(e+12|0)>>2]>>>0?15:16;break;case 15:k=e;e=HEAP32[(e+28|0)>>2];a=17;break;case 16:b=k;a=23;break;case 17:a=18;break;case 18:a=19;break;case 19:a=20;break;case 20:a=21;break;case 21:a=5;break;case 22:b=k;a=23;break;case 23:return b;default:assert(0,"bad label: "+a)}}_PlaceLEXActivation.X=1;
function _PlaceMEAActivation(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n;d=h;e=f;g=c;a=0==(HEAP32[(g+16|0)>>2]|0)?3:4;break;case 3:a=_SortPartialMatch(d,HEAP32[(g+4|0)>>2]);HEAP32[(g+16|0)>>2]=a;a=4;break;case 4:j=HEAP32[(g+12|0)>>2];i=HEAP32[(g+8|0)>>2];k=0;a=5;break;case 5:a=0!=(e|0)?6:38;break;case 6:a=(HEAP32[(e+8|0)>>2]|0)>(i|0)?7:8;break;case 7:k=e;e=HEAP32[(e+28|0)>>2];a=37;break;case 8:a=(HEAP32[(e+8|0)>>2]|0)<(i|0)?9:10;break;case 9:b=k;a=39;break;case 10:n=m=-1;a=0!=
(HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]+8|0)>>2]|0)>>2]|0)?11:12;break;case 11:m=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]+8|0)>>2]|0)>>2]+12|0)>>2];a=12;break;case 12:a=0!=(HEAP32[(HEAP32[(HEAP32[(e+4|0)>>2]+8|0)>>2]|0)>>2]|0)?13:14;break;case 13:n=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+4|0)>>2]+8|0)>>2]|0)>>2]+12|0)>>2];a=14;break;case 14:a=(n|0)<(m|0)?15:19;break;case 15:a=0<(m|0)?16:17;break;case 16:l=1;a=18;break;case 17:l=0;a=18;break;case 18:a=26;break;case 19:a=(n|0)>(m|0)?20:24;break;case 20:a=0<
(n|0)?21:22;break;case 21:l=0;a=23;break;case 22:l=1;a=23;break;case 23:a=25;break;case 24:l=_ComparePartialMatches(d,e,g);a=25;break;case 25:a=26;break;case 26:a=0==(l|0)?27:28;break;case 27:k=e;e=HEAP32[(e+28|0)>>2];a=35;break;case 28:a=1==(l|0)?29:30;break;case 29:b=k;a=39;break;case 30:a=j>>>0>HEAPU32[(e+12|0)>>2]>>>0?31:32;break;case 31:k=e;e=HEAP32[(e+28|0)>>2];a=33;break;case 32:b=k;a=39;break;case 33:a=34;break;case 34:a=35;break;case 35:a=36;break;case 36:a=37;break;case 37:a=5;break;case 38:b=
k;a=39;break;case 39:return b;default:assert(0,"bad label: "+a)}}_PlaceMEAActivation.X=1;
function _GetStrategyName(h){var f;for(f=2;;)switch(f){case 2:var c;f=h;f=0==(f|0)?3:1==(f|0)?4:2==(f|0)?5:3==(f|0)?6:4==(f|0)?7:5==(f|0)?8:6==(f|0)?9:10;break;case 3:c=STRING_TABLE.__str2576|0;f=11;break;case 4:c=STRING_TABLE.__str3577|0;f=11;break;case 5:c=STRING_TABLE.__str4578|0;f=11;break;case 6:c=STRING_TABLE.__str5579|0;f=11;break;case 7:c=STRING_TABLE.__str6580|0;f=11;break;case 8:c=STRING_TABLE.__str7581|0;f=11;break;case 9:c=STRING_TABLE.__str8582|0;f=11;break;case 10:c=STRING_TABLE.__str10584|
0;f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}
function _PlaceSimplicityActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;c=f;g=HEAP32[(c+12|0)>>2];d=HEAP32[(c+8|0)>>2];e=HEAP32[(HEAP32[(c|0)>>2]+32|0)>>2]&2047;i=0;c=3;break;case 3:c=0!=(b|0)?4:20;break;case 4:c=(HEAP32[(b+8|0)>>2]|0)>(d|0)?5:6;break;case 5:i=b;b=HEAP32[(b+28|0)>>2];c=19;break;case 6:c=(HEAP32[(b+8|0)>>2]|0)<(d|0)?7:8;break;case 7:a=i;c=21;break;case 8:c=(e|0)>(HEAP32[(HEAP32[(b|0)>>2]+32|0)>>2]&2047|0)?9:10;break;case 9:i=b;b=HEAP32[(b+28|0)>>2];c=17;break;
case 10:c=(e|0)<(HEAP32[(HEAP32[(b|0)>>2]+32|0)>>2]&2047|0)?11:12;break;case 11:a=i;c=21;break;case 12:c=g>>>0>HEAPU32[(b+12|0)>>2]>>>0?13:14;break;case 13:i=b;b=HEAP32[(b+28|0)>>2];c=15;break;case 14:a=i;c=21;break;case 15:c=16;break;case 16:c=17;break;case 17:c=18;break;case 18:c=19;break;case 19:c=3;break;case 20:a=i;c=21;break;case 21:return a;default:assert(0,"bad label: "+c)}}_PlaceSimplicityActivation.X=1;
function _PlaceRandomActivation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;c=f;g=HEAP32[(c+12|0)>>2];d=HEAP32[(c+8|0)>>2];e=HEAP32[(c+20|0)>>2];i=0;c=3;break;case 3:c=0!=(b|0)?4:20;break;case 4:c=(HEAP32[(b+8|0)>>2]|0)>(d|0)?5:6;break;case 5:i=b;b=HEAP32[(b+28|0)>>2];c=19;break;case 6:c=(HEAP32[(b+8|0)>>2]|0)<(d|0)?7:8;break;case 7:a=i;c=21;break;case 8:c=(e|0)>(HEAP32[(b+20|0)>>2]|0)?9:10;break;case 9:i=b;b=HEAP32[(b+28|0)>>2];c=17;break;case 10:c=(e|0)<(HEAP32[(b+20|0)>>2]|0)?11:
12;break;case 11:a=i;c=21;break;case 12:c=g>>>0>HEAPU32[(b+12|0)>>2]>>>0?13:14;break;case 13:i=b;b=HEAP32[(b+28|0)>>2];c=15;break;case 14:a=i;c=21;break;case 15:c=16;break;case 16:c=17;break;case 17:c=18;break;case 18:c=19;break;case 19:c=3;break;case 20:a=i;c=21;break;case 21:return a;default:assert(0,"bad label: "+c)}}_PlaceRandomActivation.X=1;function _EnvGetStrategy(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+68|0)>>2]+20|0)>>2]}
function _EnvSetStrategy(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;c=f;b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+68|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+68|0)>>2]+20|0)>>2]=c;c=(b|0)!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+68|0)>>2]+20|0)>>2]|0)?3:4;break;case 3:_EnvReorderAgenda(a,0);c=4;break;case 4:return b;default:assert(0,"bad label: "+c)}}
function _GetStrategyCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str574|0,0,0);var f=_EnvGetStrategy(h),f=_GetStrategyName(f);return _EnvAddSymbol(h,f)}
function _SetStrategyCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g;b=h;g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+68|0)>>2]+20|0)>>2];c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str1575|0,0,1)|0)?3:4;break;case 3:c=b;a=_EnvGetStrategy(b);a=_GetStrategyName(a);a=_EnvAddSymbol(c,a);c=28;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str1575|0,1,2,d)|0)?5:6;break;case 5:c=
b;a=_EnvGetStrategy(b);a=_GetStrategyName(a);a=_EnvAddSymbol(c,a);c=28;break;case 6:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0==(_strcmp(e,STRING_TABLE.__str2576|0)|0)?7:8;break;case 7:_EnvSetStrategy(b,0);c=27;break;case 8:c=0==(_strcmp(e,STRING_TABLE.__str3577|0)|0)?9:10;break;case 9:_EnvSetStrategy(b,1);c=26;break;case 10:c=0==(_strcmp(e,STRING_TABLE.__str4578|0)|0)?11:12;break;case 11:_EnvSetStrategy(b,2);c=25;break;case 12:c=0==(_strcmp(e,STRING_TABLE.__str5579|0)|0)?13:14;break;case 13:_EnvSetStrategy(b,
3);c=24;break;case 14:c=0==(_strcmp(e,STRING_TABLE.__str6580|0)|0)?15:16;break;case 15:_EnvSetStrategy(b,4);c=23;break;case 16:c=0==(_strcmp(e,STRING_TABLE.__str7581|0)|0)?17:18;break;case 17:_EnvSetStrategy(b,5);c=22;break;case 18:c=0==(_strcmp(e,STRING_TABLE.__str8582|0)|0)?19:20;break;case 19:_EnvSetStrategy(b,6);c=21;break;case 20:_ExpectedTypeError1(b,STRING_TABLE.__str1575|0,1,STRING_TABLE.__str9583|0);c=b;a=_EnvGetStrategy(b);a=_GetStrategyName(a);a=_EnvAddSymbol(c,a);c=28;break;case 21:c=
22;break;case 22:c=23;break;case 23:c=24;break;case 24:c=25;break;case 25:c=26;break;case 26:c=27;break;case 27:c=b;a=_GetStrategyName(g);a=_EnvAddSymbol(c,a);c=28;break;case 28:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetStrategyCommand.X=1;
function _SortPartialMatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;a=_CopyPartialMatch(a,b,0,0);d=1;b=(HEAPU32[b>>2]>>>6&511)-1|0;c=3;break;case 3:c=1==(d|0)?4:15;break;case 4:e=d=0;c=5;break;case 5:c=(e|0)<(b|0)?6:13;break;case 6:c=0!=(HEAP32[(HEAP32[((a+8|0)+(e<<2)|0)>>2]|0)>>2]|0)?7:11;break;case 7:c=0!=(HEAP32[(HEAP32[((a+8|0)+((e+1|0)<<2)|0)>>2]|0)>>2]|0)?8:11;break;case 8:c=(HEAP32[(HEAP32[(HEAP32[((a+8|0)+(e<<2)|0)>>2]|0)>>2]+12|0)>>2]|0)<(HEAP32[(HEAP32[(HEAP32[((a+8|0)+
((e+1|0)<<2)|0)>>2]|0)>>2]+12|0)>>2]|0)?9:10;break;case 9:d=HEAP32[((a+8|0)+(e<<2)|0)>>2];HEAP32[((a+8|0)+(e<<2)|0)>>2]=HEAP32[((a+8|0)+((e+1|0)<<2)|0)>>2];HEAP32[((a+8|0)+((e+1|0)<<2)|0)>>2]=d;d=1;c=10;break;case 10:c=11;break;case 11:c=12;break;case 12:e=e+1|0;c=5;break;case 13:c=14;break;case 14:b=b-1|0;c=3;break;case 15:return a;default:assert(0,"bad label: "+c)}}_SortPartialMatch.X=1;
function _MarkConstructHeaderNeededItems(h,f){var c=HEAP32[(h|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;HEAP32[(h+12|0)>>2]=f}
function _AssignBsaveConstructHeaderVals(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;HEAP32[(a|0)>>2]=HEAPU32[(HEAP32[(b|0)>>2]+12|0)>>2]>>>3&536870911;HEAP32[(a+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+8|0)>>2]|0)>>2]+24|0)>>2];c=0!=(HEAP32[(b+16|0)>>2]|0)?3:4;break;case 3:HEAP32[(a+8|0)>>2]=HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2];c=5;break;case 4:HEAP32[(a+8|0)>>2]=-1;c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _UpdateConstructHeader(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;m=d;n=e;HEAP32[(j+8|0)>>2]=l+(k*HEAP32[(i+4|0)>>2]|0)|0;HEAP32[(j|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(i|0)>>2]<<2)|0)>>2];g=HEAP32[(j|0)>>2]+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=-1!=(HEAP32[(i+8|0)>>2]|0)?3:4;break;case 3:g=m*HEAP32[(i+8|0)>>2]|0;HEAP32[(j+16|0)>>2]=n+g|0;g=5;break;case 4:HEAP32[(j+16|0)>>2]=0;g=5;break;case 5:HEAP32[(j+4|
0)>>2]=0;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+20|0)>>2]=0;return;default:assert(0,"bad label: "+g)}}_UpdateConstructHeader.X=1;function _AddConstructToModule(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(c+8|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(c+8|0)>>2]+4|0)>>2]=c;f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+8|0)>>2]+8|0)>>2]+16|0)>>2]=c;f=5;break;case 5:HEAP32[(HEAP32[(c+8|0)>>2]+8|0)>>2]=c;HEAP32[(c+16|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}
function _ComparePartialMatches(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;a=0==(HEAP32[(e+16|0)>>2]|0)?3:4;break;case 3:a=_SortPartialMatch(d,HEAP32[(e+4|0)>>2]);HEAP32[(e+16|0)>>2]=a;a=4;break;case 4:i=HEAPU32[HEAP32[(g+16|0)>>2]>>2]>>>6&511;j=HEAPU32[HEAP32[(e+16|0)>>2]>>2]>>>6&511;a=(j|0)>(i|0)?5:6;break;case 5:k=i;a=7;break;case 6:k=j;a=7;break;case 7:l=0;a=8;break;case 8:a=(l|0)<(k|0)?9:25;break;case 9:a=0!=(HEAP32[(HEAP32[((HEAP32[(e+16|0)>>2]+8|0)+(l<<2)|0)>>2]|
0)>>2]|0)?10:17;break;case 10:a=0!=(HEAP32[(HEAP32[((HEAP32[(g+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]|0)?11:17;break;case 11:a=(HEAP32[(HEAP32[(HEAP32[((HEAP32[(g+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]+12|0)>>2]|0)<(HEAP32[(HEAP32[(HEAP32[((HEAP32[(e+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]+12|0)>>2]|0)?12:13;break;case 12:b=0;a=36;break;case 13:a=(HEAP32[(HEAP32[(HEAP32[((HEAP32[(g+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]+12|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[((HEAP32[(e+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]+12|0)>>
2]|0)?14:15;break;case 14:b=1;a=36;break;case 15:a=16;break;case 16:a=23;break;case 17:a=0!=(HEAP32[(HEAP32[((HEAP32[(g+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]|0)?18:19;break;case 18:b=1;a=36;break;case 19:a=0!=(HEAP32[(HEAP32[((HEAP32[(e+16|0)>>2]+8|0)+(l<<2)|0)>>2]|0)>>2]|0)?20:21;break;case 20:b=0;a=36;break;case 21:a=22;break;case 22:a=23;break;case 23:a=24;break;case 24:l=l+1|0;a=8;break;case 25:a=(i|0)<(j|0)?26:27;break;case 26:b=0;a=36;break;case 27:a=(i|0)>(j|0)?28:29;break;case 28:b=1;a=36;break;
case 29:a=30;break;case 30:a=(HEAP32[(HEAP32[(g|0)>>2]+32|0)>>2]&2047|0)<(HEAP32[(HEAP32[(e|0)>>2]+32|0)>>2]&2047|0)?31:32;break;case 31:b=0;a=36;break;case 32:a=(HEAP32[(HEAP32[(g|0)>>2]+32|0)>>2]&2047|0)>(HEAP32[(HEAP32[(e|0)>>2]+32|0)>>2]&2047|0)?33:34;break;case 33:b=1;a=36;break;case 34:a=35;break;case 35:b=2;a=36;break;case 36:return b;default:assert(0,"bad label: "+a)}}_ComparePartialMatches.X=1;function _UnmarkConstructHeader(h,f){_DecrementSymbolCount(h,HEAP32[(f|0)>>2])}
function _DeleteNamedConstruct(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=1==(_Bloaded(d)|0)?3:4;break;case 3:b=0;a=9;break;case 4:i=FUNCTION_TABLE[HEAP32[(g+12|0)>>2]](d,e);a=0!=(i|0)?5:6;break;case 5:b=FUNCTION_TABLE[HEAP32[(g+40|0)>>2]](d,i);a=9;break;case 6:a=0==(_strcmp(STRING_TABLE.__str587|0,e)|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(g+40|0)>>2]](d,0);b=1;a=9;break;case 8:b=0;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}
function _FindNamedConstruct(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;_SaveCurrentModule(d);e=_ExtractModuleAndConstructName(d,e);a=0==(e|0)?3:4;break;case 3:a=5;break;case 4:j=a=_FindSymbolHN(d,e);a=0==(a|0)?5:6;break;case 5:_RestoreCurrentModule(d);b=0;a=13;break;case 6:i=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,0);a=7;break;case 7:a=0!=(i|0)?8:12;break;case 8:a=j;var k=FUNCTION_TABLE[HEAP32[(g+16|0)>>2]](i);a=(a|0)==(k|0)?9:10;break;case 9:_RestoreCurrentModule(d);b=i;a=
13;break;case 10:a=11;break;case 11:i=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,i);a=7;break;case 12:_RestoreCurrentModule(d);b=0;a=13;break;case 13:return b;default:assert(0,"bad label: "+a)}}_FindNamedConstruct.X=1;
function _UndefconstructCommand(h,f,c){var a=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;g=a;d=h;b=f;e=c;var i=HEAP32[(e|0)>>2];_sprintf(g|0,STRING_TABLE.__str1588|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));g=_GetConstructName(d,b,g|0);b=0==(g|0)?3:4;break;case 3:b=11;break;case 4:b=0==(FUNCTION_TABLE[HEAP32[(e+12|
0)>>2]](d,g)|0)?5:7;break;case 5:b=0!=(_strcmp(STRING_TABLE.__str587|0,g)|0)?6:7;break;case 6:_CantFindItemErrorMessage(d,HEAP32[(e|0)>>2],g);b=11;break;case 7:b=0==(_DeleteNamedConstruct(d,g,e)|0)?8:9;break;case 8:_CantDeleteItemErrorMessage(d,HEAP32[(e|0)>>2],g);b=11;break;case 9:b=10;break;case 10:b=11;break;case 11:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_UndefconstructCommand.X=1;
function _PPConstructCommand(h,f,c){var a=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;g=a;d=h;b=f;e=c;var i=HEAP32[(e|0)>>2];_sprintf(g|0,STRING_TABLE.__str1588|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));g=_GetConstructName(d,b,g|0);b=0==(g|0)?3:4;break;case 3:b=6;break;case 4:b=0==(_PPConstruct(d,g,STRING_TABLE.__str2589|
0,e)|0)?5:6;break;case 5:_CantFindItemErrorMessage(d,HEAP32[(e|0)>>2],g);b=6;break;case 6:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}
function _PPConstruct(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;g=FUNCTION_TABLE[HEAP32[(j+12|0)>>2]](e,g);b=0==(g|0)?3:4;break;case 3:d=0;b=7;break;case 4:b=0==(FUNCTION_TABLE[HEAP32[(j+20|0)>>2]](e,g)|0)?5:6;break;case 5:d=1;b=7;break;case 6:d=e;b=i;var k=FUNCTION_TABLE[HEAP32[(j+20|0)>>2]](e,g);_PrintInChunks(d,b,k);d=1;b=7;break;case 7:return d;default:assert(0,"bad label: "+b)}}
function _GetConstructModuleCommand(h,f,c){var a=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i;i=a;var j;e=h;b=f;g=c;var k=HEAP32[(g|0)>>2];_sprintf(i|0,STRING_TABLE.__str1588|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,tempInt));i=_GetConstructName(e,b,i|0);b=0==(i|0)?3:4;break;case 3:d=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+
196|0)>>2]+4|0)>>2];b=7;break;case 4:j=_GetConstructModule(e,i,g);b=0==(j|0)?5:6;break;case 5:_CantFindItemErrorMessage(e,HEAP32[(g|0)>>2],i);d=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];b=7;break;case 6:d=HEAP32[(j|0)>>2];b=7;break;case 7:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetConstructModuleCommand.X=1;function _GetConstructNameString(h){return HEAP32[(HEAP32[(h|0)>>2]+16|0)>>2]}
function _EnvGetConstructNameString(h,f){return HEAP32[(HEAP32[(f|0)>>2]+16|0)>>2]}function _GetConstructNamePointer(h){return HEAP32[(h|0)>>2]}
function _GetConstructModule(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l,m;e=h;g=f;i=c;l=b=_FindModuleSeparator(g);b=0!=(b|0)?3:6;break;case 3:m=_ExtractModuleName(e,l,g);b=0!=(m|0)?4:5;break;case 4:d=_EnvFindDefmodule(e,HEAP32[(m+16|0)>>2]);b=9;break;case 5:b=6;break;case 6:j=_FindImportedConstruct(e,HEAP32[(i|0)>>2],0,g,k,1,0);b=0==(j|0)?7:8;break;case 7:d=0;b=9;break;
case 8:d=HEAP32[(HEAP32[(j+8|0)>>2]|0)>>2];b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetConstructModule.X=1;
function _Undefconstruct(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;a=0==(e|0)?3:14;break;case 3:k=1;i=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,0);a=4;break;case 4:a=0!=(i|0)?5:9;break;case 5:j=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,i);a=0!=(FUNCTION_TABLE[HEAP32[(g+36|0)>>2]](d,i)|0)?6:7;break;case 6:_RemoveConstructFromModule(d,i);FUNCTION_TABLE[HEAP32[(g+44|0)>>2]](d,i);a=8;break;case 7:a=d;k=HEAP32[(g|0)>>2];var l=FUNCTION_TABLE[HEAP32[(g+16|0)>>2]](i)+16|0;_CantDeleteItemErrorMessage(a,
k,HEAP32[l>>2]);k=0;a=8;break;case 8:i=j;a=4;break;case 9:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?10:13;break;case 10:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+160|0)>>2]|0)>>2]|0)?13:11;break;case 11:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]|0)?12:13;break;case 12:_PeriodicCleanup(d,1,0);a=13;break;case 13:b=k;a=21;break;case 14:a=0==(FUNCTION_TABLE[HEAP32[(g+36|0)>>2]](d,e)|0)?15:16;break;case 15:b=0;a=21;break;case 16:_RemoveConstructFromModule(d,e);
FUNCTION_TABLE[HEAP32[(g+44|0)>>2]](d,e);a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?17:20;break;case 17:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+160|0)>>2]|0)>>2]|0)?20:18;break;case 18:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]|0)?19:20;break;case 19:_PeriodicCleanup(d,1,0);a=20;break;case 20:b=1;a=21;break;case 21:return b;default:assert(0,"bad label: "+a)}}_Undefconstruct.X=1;
function _SaveConstruct(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;b=f;e=c;g=a;_SaveCurrentModule(d);_EnvSetCurrentModule(d,b);j=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,0);b=3;break;case 3:b=0!=(j|0)?4:8;break;case 4:i=FUNCTION_TABLE[HEAP32[(g+20|0)>>2]](d,j);b=0!=(i|0)?5:6;break;case 5:_PrintInChunks(d,e,i);_EnvPrintRouter(d,e,STRING_TABLE.__str3590|0);b=6;break;case 6:b=7;break;case 7:j=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,j);b=3;break;case 8:_RestoreCurrentModule(d);return;default:assert(0,
"bad label: "+b)}}_SaveConstruct.X=1;function _GetConstructModuleName(h){return _EnvGetDefmoduleName(0,HEAP32[(HEAP32[(h+8|0)>>2]|0)>>2])}
function _GetConstructListFunction(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m;e=h;g=f;i=c;j=a;m=d=_EnvArgCountCheck(e,g,2,1);d=-1==(d|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(e,i);d=14;break;case 4:d=1==(m|0)?5:12;break;case 5:_EnvRtnUnknown(e,1,l);d=2!=(HEAPU16[(l+4|0)>>1]&65535|0)?6:7;break;case 6:_EnvSetMultifieldErrorValue(e,i);_ExpectedTypeError1(e,g,
1,STRING_TABLE.__str4591|0);d=14;break;case 7:k=d=_EnvFindDefmodule(e,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]);d=0==(d|0)?8:11;break;case 8:d=0!=(_strcmp(STRING_TABLE.__str587|0,HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2])|0)?9:10;break;case 9:_EnvSetMultifieldErrorValue(e,i);_ExpectedTypeError1(e,g,1,STRING_TABLE.__str4591|0);d=14;break;case 10:k=0;d=11;break;case 11:d=13;break;case 12:k=_EnvGetCurrentModule(e);d=13;break;case 13:_GetConstructList(e,i,j,k);d=14;break;case 14:STACKTOP=b;return;default:assert(0,
"bad label: "+d)}}_GetConstructListFunction.X=1;
function _GetConstructList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s;d=h;e=f;g=c;i=a;p=o=k=0;q=80;_SaveCurrentModule(d);b=0==(i|0)?3:4;break;case 3:i=_EnvGetNextDefmodule(d,0);o=1;b=4;break;case 4:n=i;b=5;break;case 5:b=0!=(n|0)?6:17;break;case 6:_EnvSetCurrentModule(d,n);p=j=0;b=7;break;case 7:j=b=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,j);b=0!=(b|0)?8:11;break;case 8:k=k+1|0;s=FUNCTION_TABLE[HEAP32[(g+16|0)>>2]](j)+16|0;s=_strlen(HEAP32[s>>2]);b=s>>>0>p>>>0?9:10;break;
case 9:p=s;b=10;break;case 10:b=7;break;case 11:s=_EnvGetDefmoduleName(d,n);s=_strlen(s);b=((s+p|0)+5|0)>>>0>q>>>0?12:13;break;case 12:q=(s+p|0)+5|0;b=13;break;case 13:b=0!=(o|0)?14:15;break;case 14:n=_EnvGetNextDefmodule(d,n);b=16;break;case 15:n=0;b=16;break;case 16:b=5;break;case 17:r=_genalloc(d,q);HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=k-1|0;l=_EnvCreateMultifield(d,k);HEAP32[(e+8|0)>>2]=l;n=i;k=1;b=18;break;case 18:b=0!=(n|0)?19:29;break;case 19:_EnvSetCurrentModule(d,
n);j=0;b=20;break;case 20:j=b=FUNCTION_TABLE[HEAP32[(g+28|0)>>2]](d,j);b=0!=(b|0)?21:25;break;case 21:m=FUNCTION_TABLE[HEAP32[(g+16|0)>>2]](j);HEAP16[((l+16|0)+((k-1|0)<<3)|0)>>1]=2;b=0!=(o|0)?22:23;break;case 22:b=r;var t=_EnvGetDefmoduleName(d,n);_strcpy(b,t);_strcat(r,STRING_TABLE.__str5592|0);_strcat(r,HEAP32[(m+16|0)>>2]);b=_EnvAddSymbol(d,r);HEAP32[(((l+16|0)+((k-1|0)<<3)|0)+4|0)>>2]=b;b=24;break;case 23:b=_EnvAddSymbol(d,HEAP32[(m+16|0)>>2]);HEAP32[(((l+16|0)+((k-1|0)<<3)|0)+4|0)>>2]=b;b=24;
break;case 24:k=k+1|0;b=20;break;case 25:b=0!=(o|0)?26:27;break;case 26:n=_EnvGetNextDefmodule(d,n);b=28;break;case 27:n=0;b=28;break;case 28:b=18;break;case 29:_genfree(d,r,q);_RestoreCurrentModule(d);return;default:assert(0,"bad label: "+b)}}_GetConstructList.X=1;
function _ListConstructCommand(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;d=h;e=f;g=c;k=b=_EnvArgCountCheck(d,e,2,1);b=-1==(b|0)?3:4;break;case 3:b=14;break;case 4:b=1==(k|0)?5:12;break;case 5:_EnvRtnUnknown(d,1,j);b=2!=(HEAPU16[(j+4|0)>>1]&65535|0)?6:7;break;case 6:_ExpectedTypeError1(d,e,1,STRING_TABLE.__str4591|0);b=14;break;case 7:i=b=_EnvFindDefmodule(d,HEAP32[(HEAP32[(j+
8|0)>>2]+16|0)>>2]);b=0==(b|0)?8:11;break;case 8:b=0!=(_strcmp(STRING_TABLE.__str587|0,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2])|0)?9:10;break;case 9:_ExpectedTypeError1(d,e,1,STRING_TABLE.__str4591|0);b=14;break;case 10:i=0;b=11;break;case 11:b=13;break;case 12:i=_EnvGetCurrentModule(d);b=13;break;case 13:_ListConstruct(d,g,STRING_TABLE.__str2589|0,i);b=14;break;case 14:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_ListConstructCommand.X=1;
function _SetNextConstruct(h,f){HEAP32[(h+16|0)>>2]=f}function _GetConstructModuleItem(h){return HEAP32[(h+8|0)>>2]}function _GetConstructPPForm(h,f){return HEAP32[(f+4|0)>>2]}
function _ListConstruct(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m;d=h;e=f;g=c;i=a;m=l=0;_SaveCurrentModule(d);b=0==(i|0)?3:4;break;case 3:i=_EnvGetNextDefmodule(d,0);m=1;b=4;break;case 4:b=5;break;case 5:b=0!=(i|0)?6:22;break;case 6:b=0!=(m|0)?7:8;break;case 7:b=d;var n=g,o=_EnvGetDefmoduleName(d,i);_EnvPrintRouter(b,n,o);_EnvPrintRouter(d,g,STRING_TABLE.__str6593|0);b=8;break;case 8:_EnvSetCurrentModule(d,i);j=FUNCTION_TABLE[HEAP32[(e+28|0)>>2]](d,0);b=9;break;case 9:b=0!=(j|
0)?10:18;break;case 10:b=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?11:12;break;case 11:b=23;break;case 12:k=FUNCTION_TABLE[HEAP32[(e+16|0)>>2]](j);b=0!=(k|0)?13:16;break;case 13:b=0!=(m|0)?14:15;break;case 14:_EnvPrintRouter(d,STRING_TABLE.__str2589|0,STRING_TABLE.__str7594|0);b=15;break;case 15:_EnvPrintRouter(d,g,HEAP32[(k+16|0)>>2]);_EnvPrintRouter(d,g,STRING_TABLE.__str3590|0);b=16;break;case 16:l=l+1|0;b=17;break;case 17:j=FUNCTION_TABLE[HEAP32[(e+28|0)>>2]](d,j);b=9;break;
case 18:b=0!=(m|0)?19:20;break;case 19:i=_EnvGetNextDefmodule(d,i);b=21;break;case 20:i=0;b=21;break;case 21:b=5;break;case 22:_PrintTally(d,STRING_TABLE.__str2589|0,l,HEAP32[(e|0)>>2],HEAP32[(e+4|0)>>2]);_RestoreCurrentModule(d);b=23;break;case 23:return;default:assert(0,"bad label: "+b)}}_ListConstruct.X=1;
function _GetNextConstructItem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(e|0)?3:6;break;case 3:i=_GetModuleItem(d,0,g);a=0==(i|0)?4:5;break;case 4:b=0;a=7;break;case 5:b=HEAP32[(i+4|0)>>2];a=7;break;case 6:b=HEAP32[(e+16|0)>>2];a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _GetConstructModuleItemByIndex(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0!=(e|0)?3:4;break;case 3:b=_GetModuleItem(d,e,g);a=5;break;case 4:a=d;b=_EnvGetCurrentModule(d);b=_GetModuleItem(a,b,g);a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _FreeConstructHeaderModule(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;d=HEAP32[(d+4|0)>>2];a=3;break;case 3:a=0!=(d|0)?4:5;break;case 4:a=HEAP32[(d+16|0)>>2];FUNCTION_TABLE[HEAP32[(e+44|0)>>2]](b,d);d=a;a=3;break;case 5:return;default:assert(0,"bad label: "+a)}}
function _DoForAllConstructs(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;l=b;o=0;_SaveCurrentModule(g);n=_EnvGetNextDefmodule(g,0);d=3;break;case 3:d=0!=(n|0)?4:14;break;case 4:_EnvSetCurrentModule(g,n);d=_GetModuleItem(g,n,j);m=HEAP32[(d+4|0)>>2];d=5;break;case 5:d=0!=(m|0)?6:12;break;case 6:d=0!=(k|0)?7:10;break;case 7:d=1==(_GetHaltExecution(g)|0)?8:9;break;case 8:_RestoreCurrentModule(g);e=-1;d=15;break;case 9:d=10;break;case 10:FUNCTION_TABLE[i](g,m,l);d=
11;break;case 11:m=HEAP32[(m+16|0)>>2];d=5;break;case 12:d=13;break;case 13:n=_EnvGetNextDefmodule(g,n);o=o+1|0;d=3;break;case 14:_RestoreCurrentModule(g);e=o;d=15;break;case 15:return e;default:assert(0,"bad label: "+d)}}_DoForAllConstructs.X=1;
function _DoForAllConstructsInModule(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;e=f;i=c;j=a;k=b;l=d;_SaveCurrentModule(g);_EnvSetCurrentModule(g,e);e=_GetModuleItem(g,e,j);j=HEAP32[(e+4|0)>>2];e=3;break;case 3:e=0!=(j|0)?4:10;break;case 4:e=0!=(k|0)?5:8;break;case 5:e=1==(_GetHaltExecution(g)|0)?6:7;break;case 6:_RestoreCurrentModule(g);e=11;break;case 7:e=8;break;case 8:FUNCTION_TABLE[i](g,j,l);e=9;break;case 9:j=HEAP32[(j+16|0)>>2];e=3;break;case 10:_RestoreCurrentModule(g);
e=11;break;case 11:return;default:assert(0,"bad label: "+e)}}_DoForAllConstructsInModule.X=1;function _InitializeConstructHeader(h,f,c,a){f=_FindModuleItem(h,f);h=_GetModuleItem(h,0,HEAP32[(f+4|0)>>2]);HEAP32[(c+8|0)>>2]=h;HEAP32[(c|0)>>2]=a;HEAP32[(c+4|0)>>2]=0;HEAP32[(c+12|0)>>2]=0;HEAP32[(c+16|0)>>2]=0;HEAP32[(c+20|0)>>2]=0}
function _SetConstructPPForm(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAP32[(d+4|0)>>2]|0)?3:4;break;case 3:a=b;var g=HEAP32[(d+4|0)>>2],i=_strlen(HEAP32[(d+4|0)>>2])+1|0;_rm(a,g,i);a=4;break;case 4:HEAP32[(d+4|0)>>2]=e;return;default:assert(0,"bad label: "+a)}}function _ConstructPrintWatchAccess(h,f,c,a,b,d){return _ConstructWatchSupport(h,f,STRING_TABLE.__str8595|0,c,a,0,0,b,d)}
function _ConstructWatchSupport(h,f,c,a,b,d,e,g,i){var j=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u,v,w,x=j,y;m=h;n=f;o=c;p=a;q=b;r=d;s=e;t=g;u=i;y=2;k=0==(q|0)?3:17;break;case 3:_SaveCurrentModule(m);v=_EnvGetNextDefmodule(m,0);k=4;break;case 4:k=0!=(v|0)?5:16;break;case 5:_EnvSetCurrentModule(m,v);k=0==(r|0)?6:7;break;case 6:k=m;var A=p,z=_EnvGetDefmoduleName(m,v);_EnvPrintRouter(k,
A,z);_EnvPrintRouter(m,p,STRING_TABLE.__str6593|0);k=7;break;case 7:w=FUNCTION_TABLE[HEAP32[(n+28|0)>>2]](m,0);k=8;break;case 8:k=0!=(w|0)?9:14;break;case 9:k=0!=(r|0)?10:11;break;case 10:FUNCTION_TABLE[u](m,s,w);k=12;break;case 11:_EnvPrintRouter(m,p,STRING_TABLE.__str7594|0);_ConstructPrintWatch(m,p,n,w,t);k=12;break;case 12:k=13;break;case 13:w=FUNCTION_TABLE[HEAP32[(n+28|0)>>2]](m,w);k=8;break;case 14:k=15;break;case 15:v=_EnvGetNextDefmodule(m,v);k=4;break;case 16:_RestoreCurrentModule(m);l=
1;k=30;break;case 17:k=18;break;case 18:k=0!=(q|0)?19:29;break;case 19:k=0!=(_EvaluateExpression(m,q,x)|0)?20:21;break;case 20:l=0;k=30;break;case 21:k=2!=(HEAPU16[(x+4|0)>>1]&65535|0)?22:23;break;case 22:k=24;break;case 23:w=k=_LookupConstruct(m,n,HEAP32[(HEAP32[(x+8|0)>>2]+16|0)>>2],1);k=0==(k|0)?24:25;break;case 24:_ExpectedTypeError1(m,o,y,HEAP32[(n|0)>>2]);l=0;k=30;break;case 25:k=0!=(r|0)?26:27;break;case 26:FUNCTION_TABLE[u](m,s,w);k=28;break;case 27:_ConstructPrintWatch(m,p,n,w,t);k=28;break;
case 28:y=y+1|0;q=HEAP32[(q+12|0)>>2];k=18;break;case 29:l=1;k=30;break;case 30:return h=l,STACKTOP=j,h;default:assert(0,"bad label: "+k)}}_ConstructWatchSupport.X=1;function _ConstructSetWatchAccess(h,f,c,a,b,d){return _ConstructWatchSupport(h,f,STRING_TABLE.__str9596|0,STRING_TABLE.__str10597|0,a,1,c,b,d)}
function _LookupConstruct(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n=b;g=h;i=f;j=c;k=a;m=HEAP32[(i|0)>>2];l=_FindImportedConstruct(g,m,0,j,n,1,0);d=0!=(l|0)?3:6;break;case 3:d=1<(HEAP32[n>>2]|0)?4:5;break;case 4:_AmbiguousReferenceErrorMessage(g,m,j);e=0;d=10;break;case 5:e=l;d=10;break;case 6:d=0!=(k|0)?7:9;break;case 7:d=0!=(_FindModuleSeparator(j)|0)?8:9;break;
case 8:l=FUNCTION_TABLE[HEAP32[(i+12|0)>>2]](g,j);d=9;break;case 9:e=l;d=10;break;case 10:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_LookupConstruct.X=1;function _ConstructsDeletable(h){var f;for(f=2;;)switch(f){case 2:var c;f=0!=(_Bloaded(h)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=1;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _ConstructPrintWatch(h,f,c,a,b){c=FUNCTION_TABLE[HEAP32[(c+16|0)>>2]](a)+16|0;_EnvPrintRouter(h,f,HEAP32[c>>2]);a=0!=(FUNCTION_TABLE[b](h,a)|0)?STRING_TABLE.__str11598|0:STRING_TABLE.__str12599|0;_EnvPrintRouter(h,f,a)}
function _EnvLoad(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=c=_GenOpen(b,f,STRING_TABLE.__str644|0);c=0==(c|0)?3:4;break;case 3:a=0;c=7;break;case 4:_SetFastLoad(b,d);c=_LoadConstructsFromLogicalName(b,d);_SetFastLoad(b,0);_GenClose(b,d);c=0!=(c|0)?5:6;break;case 5:a=1;c=7;break;case 6:a=-1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _LoadConstructsFromLogicalName(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+12,i;b=h;d=f;HEAP32[g>>2]=1;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:_SetHaltExecution(b,0);a=4;break;case 4:_SetEvaluationError(b,0);i=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[i>>2]=HEAP32[i>>2]+1|0;_GetToken(b,d,e);i=_FindConstructBeginning(b,
d,e,0,g);a=5;break;case 5:if(1==(i|0))a=6;else{var j=0;a=7}break;case 6:j=0==(_GetHaltExecution(b)|0);a=7;break;case 7:a=j?8:16;break;case 8:_FlushPPBuffer(b);a=_ParseConstruct(b,HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2],d);a=1==(a|0)?9:10;break;case 9:_EnvPrintRouter(b,STRING_TABLE.__str1645|0,STRING_TABLE.__str2646|0);i=b;a=_GetPPBuffer(b);_PrintInChunks(i,STRING_TABLE.__str1645|0,a);_EnvPrintRouter(b,STRING_TABLE.__str1645|0,STRING_TABLE.__str3647|0);HEAP32[g>>2]=0;_GetToken(b,d,e);i=_FindConstructBeginning(b,
d,e,1,g);a=11;break;case 10:_GetToken(b,d,e);i=_FindConstructBeginning(b,d,e,0,g);a=11;break;case 11:a=0!=(i|0)?12:13;break;case 12:a=HEAP32[(e+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=13;break;case 13:a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;_PeriodicCleanup(b,0,1);_YieldTime(b);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0!=(i|0)?14:15;break;case 14:_DecrementSymbolCount(b,HEAP32[(e+4|0)>>2]);a=15;break;case 15:a=5;break;case 16:a=
HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1!=(_EnvGetWatchItem(b,STRING_TABLE.__str4648|0)|0)?17:19;break;case 17:a=0!=(_GetPrintWhileLoading(b)|0)?18:19;break;case 18:_EnvPrintRouter(b,STRING_TABLE.__str5649|0,STRING_TABLE.__str3647|0);a=19;break;case 19:return _DestroyPPBuffer(b),b=HEAP32[g>>2],STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_LoadConstructsFromLogicalName.X=1;
function _FindConstructBeginning(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;m=0;n=1;d=3;break;case 3:d=172!=(HEAPU16[(j|0)>>1]&65535|0)?4:20;break;case 4:d=170==(HEAPU16[(j|0)>>1]&65535|0)?5:6;break;case 5:m=1;d=19;break;case 6:d=2==(HEAPU16[(j|0)>>1]&65535|0)?7:14;break;case 7:d=1==(m|0)?8:14;break;case 8:d=0!=(_FindConstruct(g,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2])|0)?9:10;break;case 9:e=1;d=21;break;case 10:d=0!=(n|0)?11:13;break;case 11:d=0!=(k|0)?13:12;
break;case 12:k=1;HEAP32[l>>2]=0;_PrintErrorID(g,STRING_TABLE.__str6650|0,1,1);_EnvPrintRouter(g,STRING_TABLE.__str1645|0,STRING_TABLE.__str24668|0);d=13;break;case 13:m=n=0;d=18;break;case 14:d=0!=(n|0)?15:17;break;case 15:d=0!=(k|0)?17:16;break;case 16:k=1;HEAP32[l>>2]=0;_PrintErrorID(g,STRING_TABLE.__str6650|0,1,1);_EnvPrintRouter(g,STRING_TABLE.__str1645|0,STRING_TABLE.__str24668|0);d=17;break;case 17:m=n=0;d=18;break;case 18:d=19;break;case 19:_GetToken(g,i,j);d=3;break;case 20:e=0;d=21;break;
case 21:return e;default:assert(0,"bad label: "+d)}}_FindConstructBeginning.X=1;
function _ParseConstruct(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;e=_FindConstruct(d,e);a=0==(e|0)?3:4;break;case 3:b=-1;a=5;break;case 4:b=_GetHaltExecution(d);_SetEvaluationError(d,0);_SetHaltExecution(d,0);_ClearParsedBindNames(d);_PushRtnBrkContexts(d);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+44|0)>>2]=0;a=HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=FUNCTION_TABLE[HEAP32[(e+
8|0)>>2]](d,g);var i=HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0;HEAP32[i>>2]=HEAP32[i>>2]-1|0;_PopRtnBrkContexts(d);_ClearParsedBindNames(d);_SetPPBufferStatus(d,0);_SetHaltExecution(d,b);b=a;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}_ParseConstruct.X=1;
function _GetConstructNameAndComment(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B;m=h;n=f;o=c;p=a;q=b;r=d;s=e;t=g;u=i;v=j;y=0;_GetToken(m,n,o);k=2!=(HEAPU16[(o|0)>>1]&65535|0)?3:4;break;case 3:_PrintErrorID(m,STRING_TABLE.__str6650|0,2,1);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,STRING_TABLE.__str7651|0);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,p);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,STRING_TABLE.__str8652|0);l=0;k=51;break;case 4:w=HEAP32[(o+
4|0)>>2];z=_FindModuleSeparator(HEAP32[(w+16|0)>>2]);k=0!=(z|0)?5:14;break;case 5:k=0==(v|0)?6:7;break;case 6:_SyntaxErrorMessage(m,STRING_TABLE.__str9653|0);l=0;k=51;break;case 7:x=_ExtractModuleName(m,z,HEAP32[(w+16|0)>>2]);k=0==(x|0)?8:9;break;case 8:_SyntaxErrorMessage(m,STRING_TABLE.__str10654|0);l=0;k=51;break;case 9:B=_EnvFindDefmodule(m,HEAP32[(x+16|0)>>2]);k=0==(B|0)?10:11;break;case 10:_CantFindItemErrorMessage(m,STRING_TABLE.__str11655|0,HEAP32[(x+16|0)>>2]);l=0;k=51;break;case 11:_EnvSetCurrentModule(m,
B);w=_ExtractConstructName(m,z,HEAP32[(w+16|0)>>2]);k=0==(w|0)?12:13;break;case 12:_SyntaxErrorMessage(m,STRING_TABLE.__str10654|0);l=0;k=51;break;case 13:k=17;break;case 14:B=_EnvGetCurrentModule(m);k=0!=(v|0)?15:16;break;case 15:_PPBackup(m);k=m;var C=_EnvGetDefmoduleName(m,B);_SavePPBuffer(k,C);_SavePPBuffer(m,STRING_TABLE.__str12656|0);_SavePPBuffer(m,HEAP32[(w+16|0)>>2]);k=16;break;case 16:k=17;break;case 17:k=0!=(_FindImportExportConflict(m,p,B,HEAP32[(w+16|0)>>2])|0)?18:19;break;case 18:_ImportExportConflictMessage(m,
p,HEAP32[(w+16|0)>>2],0,0);l=0;k=51;break;case 19:k=0!=(q|0)?20:28;break;case 20:k=0!=(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?28:21;break;case 21:A=FUNCTION_TABLE[q](m,HEAP32[(w+16|0)>>2]);k=0!=(A|0)?22:27;break;case 22:y=1;k=0!=(r|0)?23:26;break;case 23:k=0==(FUNCTION_TABLE[r](m,A)|0)?24:25;break;case 24:_PrintErrorID(m,STRING_TABLE.__str6650|0,4,1);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,STRING_TABLE.__str13657|0);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,p);_EnvPrintRouter(m,
STRING_TABLE.__str1645|0,STRING_TABLE.__str14658|0);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,HEAP32[(w+16|0)>>2]);_EnvPrintRouter(m,STRING_TABLE.__str1645|0,STRING_TABLE.__str15659|0);l=0;k=51;break;case 25:k=26;break;case 26:k=27;break;case 27:k=28;break;case 28:k=1==(_EnvGetWatchItem(m,STRING_TABLE.__str4648|0)|0)?29:38;break;case 29:k=0!=(_GetPrintWhileLoading(m)|0)?30:38;break;case 30:k=0!=(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?38:31;break;case 31:k=0!=(y|0)?32:33;break;
case 32:_PrintWarningID(m,STRING_TABLE.__str6650|0,1,1);_EnvPrintRouter(m,STRING_TABLE.__str5649|0,STRING_TABLE.__str16660|0);k=34;break;case 33:_EnvPrintRouter(m,STRING_TABLE.__str5649|0,STRING_TABLE.__str17661|0);k=34;break;case 34:_EnvPrintRouter(m,STRING_TABLE.__str5649|0,p);_EnvPrintRouter(m,STRING_TABLE.__str5649|0,STRING_TABLE.__str18662|0);_EnvPrintRouter(m,STRING_TABLE.__str5649|0,HEAP32[(w+16|0)>>2]);k=0!=(t|0)?35:36;break;case 35:_EnvPrintRouter(m,STRING_TABLE.__str5649|0,STRING_TABLE.__str3647|
0);k=37;break;case 36:_EnvPrintRouter(m,STRING_TABLE.__str5649|0,STRING_TABLE.__str14658|0);k=37;break;case 37:k=42;break;case 38:k=0!=(_GetPrintWhileLoading(m)|0)?39:41;break;case 39:k=0!=(HEAP32[(HEAP32[(HEAP32[(m+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?41:40;break;case 40:_EnvPrintRouter(m,STRING_TABLE.__str5649|0,s);k=41;break;case 41:k=42;break;case 42:_GetToken(m,n,o);k=3==(HEAPU16[(o|0)>>1]&65535|0)?43:47;break;case 43:k=0!=(u|0)?44:47;break;case 44:_PPBackup(m);_SavePPBuffer(m,STRING_TABLE.__str14658|
0);_SavePPBuffer(m,HEAP32[(o+8|0)>>2]);_GetToken(m,n,o);k=171!=(HEAPU16[(o|0)>>1]&65535|0)?45:46;break;case 45:_PPBackup(m);_SavePPBuffer(m,STRING_TABLE.__str19663|0);_SavePPBuffer(m,HEAP32[(o+8|0)>>2]);k=46;break;case 46:k=50;break;case 47:k=171!=(HEAPU16[(o|0)>>1]&65535|0)?48:49;break;case 48:_PPBackup(m);_SavePPBuffer(m,STRING_TABLE.__str19663|0);_SavePPBuffer(m,HEAP32[(o+8|0)>>2]);k=49;break;case 49:k=50;break;case 50:l=w;k=51;break;case 51:return l;default:assert(0,"bad label: "+k)}}
_GetConstructNameAndComment.X=1;
function _ImportExportConflictMessage(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j;e=h;d=f;g=c;i=a;j=b;_PrintErrorID(e,STRING_TABLE.__str6650|0,3,1);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str20664|0);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,d);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str14658|0);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,g);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str21665|0);d=0==(i|0)?3:4;break;case 3:_EnvPrintRouter(e,
STRING_TABLE.__str1645|0,STRING_TABLE.__str22666|0);d=5;break;case 4:_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str23667|0);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,i);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str14658|0);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,j);_EnvPrintRouter(e,STRING_TABLE.__str1645|0,STRING_TABLE.__str22666|0);d=5;break;case 5:return;default:assert(0,"bad label: "+d)}}
function _RemoveConstructFromModule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;e=HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2];c=3;break;case 3:c=(e|0)!=(b|0)?4:5;break;case 4:d=e;e=HEAP32[(e+16|0)>>2];c=3;break;case 5:c=0==(e|0)?6:7;break;case 6:_SystemError(a,STRING_TABLE.__str6650|0,1);_EnvExitRouter(a,1);c=7;break;case 7:c=0==(d|0)?8:9;break;case 8:HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2]=HEAP32[(b+16|0)>>2];c=10;break;case 9:HEAP32[(d+16|0)>>2]=HEAP32[(b+16|0)>>2];c=10;break;case 10:c=(b|
0)==(HEAP32[(HEAP32[(b+8|0)>>2]+8|0)>>2]|0)?11:12;break;case 11:HEAP32[(HEAP32[(b+8|0)>>2]+8|0)>>2]=d;c=12;break;case 12:return;default:assert(0,"bad label: "+c)}}_RemoveConstructFromModule.X=1;
function _WriteNeededConstraints(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k=c+4;b=h;d=f;g=0;e=HEAP32[i>>2]=0;a=3;break;case 3:a=167>(e|0)?4:10;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]|0)>>2]+(e<<2)|0)>>2];a=5;break;case 5:a=0!=(j|0)?6:8;break;case 6:a=g;g=a+1&65535;HEAP16[(j+4|0)>>1]=a;HEAP32[i>>2]=HEAP32[i>>2]+1|0;a=7;break;case 7:j=HEAP32[(j+
36|0)>>2];a=5;break;case 8:a=9;break;case 9:e=e+1|0;a=3;break;case 10:a=0!=(_EnvGetDynamicConstraintChecking(b)|0)?13:11;break;case 11:a=0!=(HEAP32[i>>2]|0)?12:13;break;case 12:HEAP32[i>>2]=0;_PrintWarningID(b,STRING_TABLE.__str675|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str1676|0,STRING_TABLE.__str2677|0);_EnvPrintRouter(b,STRING_TABLE.__str1676|0,STRING_TABLE.__str3678|0);a=13;break;case 13:_GenWrite(i,4,d);a=0==(HEAP32[i>>2]|0)?14:15;break;case 14:a=23;break;case 15:e=0;a=16;break;case 16:a=167>
(e|0)?17:23;break;case 17:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]|0)>>2]+(e<<2)|0)>>2];a=18;break;case 18:a=0!=(j|0)?19:21;break;case 19:_CopyToBsaveConstraintRecord(b,j,k);_GenWrite(k,28,d);a=20;break;case 20:j=HEAP32[(j+36|0)>>2];a=18;break;case 21:a=22;break;case 22:e=e+1|0;a=16;break;case 23:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteNeededConstraints.X=1;
function _CopyToBsaveConstraintRecord(h,f,c){HEAP32[c>>2]=HEAP32[c>>2]&-2|HEAP32[f>>2]&1;HEAP32[c>>2]=HEAP32[c>>2]&-3|(HEAPU32[f>>2]>>>1&1)<<1;HEAP32[c>>2]=HEAP32[c>>2]&-5|(HEAPU32[f>>2]>>>2&1)<<2;HEAP32[c>>2]=HEAP32[c>>2]&-9|(HEAPU32[f>>2]>>>3&1)<<3;HEAP32[c>>2]=HEAP32[c>>2]&-17|(HEAPU32[f>>2]>>>4&1)<<4;HEAP32[c>>2]=HEAP32[c>>2]&-33|(HEAPU32[f>>2]>>>5&1)<<5;HEAP32[c>>2]=HEAP32[c>>2]&-65|(HEAPU32[f>>2]>>>6&1)<<6;HEAP32[c>>2]=HEAP32[c>>2]&-129|(HEAPU32[f>>2]>>>7&1)<<7;HEAP32[c>>2]=HEAP32[c>>2]&-131073|
(HEAPU32[f>>2]>>>17&1)<<17;HEAP32[c>>2]=HEAP32[c>>2]&-262145|(HEAPU32[f>>2]>>>18&1)<<18;HEAP32[c>>2]=HEAP32[c>>2]&-257|(HEAPU32[f>>2]>>>8&1)<<8;HEAP32[c>>2]=HEAP32[c>>2]&-513|(HEAPU32[f>>2]>>>10&1)<<9;HEAP32[c>>2]=HEAP32[c>>2]&-1025|(HEAPU32[f>>2]>>>11&1)<<10;HEAP32[c>>2]=HEAP32[c>>2]&-2049|(HEAPU32[f>>2]>>>12&1)<<11;HEAP32[c>>2]=HEAP32[c>>2]&-8193|(HEAPU32[f>>2]>>>13&1)<<13;HEAP32[c>>2]=HEAP32[c>>2]&-16385|(HEAPU32[f>>2]>>>14&1)<<14;HEAP32[c>>2]=HEAP32[c>>2]&-32769|(HEAPU32[f>>2]>>>15&1)<<15;HEAP32[c>>
2]=HEAP32[c>>2]&-65537|(HEAPU32[f>>2]>>>16&1)<<16;var a=_HashedExpressionIndex(h,HEAP32[(f+12|0)>>2]);HEAP32[(c+8|0)>>2]=a;a=_HashedExpressionIndex(h,HEAP32[(f+8|0)>>2]);HEAP32[(c+4|0)>>2]=a;a=_HashedExpressionIndex(h,HEAP32[(f+16|0)>>2]);HEAP32[(c+12|0)>>2]=a;a=_HashedExpressionIndex(h,HEAP32[(f+20|0)>>2]);HEAP32[(c+16|0)>>2]=a;a=_HashedExpressionIndex(h,HEAP32[(f+24|0)>>2]);HEAP32[(c+20|0)>>2]=a;h=_HashedExpressionIndex(h,HEAP32[(f+28|0)>>2]);HEAP32[(c+24|0)>>2]=h}
_CopyToBsaveConstraintRecord.X=1;
function _ReadNeededConstraints(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;_GenReadBinary(c,HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0,4);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:f=5;break;case 4:f=_genlongalloc(c,48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+12|0)>>2]=f;_BloadandRefresh(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2],28,212);f=5;break;case 5:return;default:assert(0,
"bad label: "+f)}}_ReadNeededConstraints.X=1;
function _CopyFromBsaveConstraintRecord(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]+12|0)>>2]+48*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[d>>2]&1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[d>>2]>>>1&1)<<1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[d>>2]>>>2&1)<<2;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[d>>2]>>>3&1)<<3;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-17|(HEAPU32[d>>2]>>>4&1)<<4;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-33|(HEAPU32[d>>2]>>>5&1)<<
5;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-65|(HEAPU32[d>>2]>>>6&1)<<6;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-129|(HEAPU32[d>>2]>>>7&1)<<7;a=e;HEAP32[a>>2]&=-513;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-131073|(HEAPU32[d>>2]>>>17&1)<<17;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-262145|(HEAPU32[d>>2]>>>18&1)<<18;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-257|(HEAPU32[d>>2]>>>8&1)<<8;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-1025|(HEAPU32[d>>2]>>>9&1)<<10;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(HEAPU32[d>>2]>>>10&1)<<11;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(HEAPU32[d>>
2]>>>11&1)<<12;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-8193|(HEAPU32[d>>2]>>>13&1)<<13;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(HEAPU32[d>>2]>>>14&1)<<14;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-32769|(HEAPU32[d>>2]>>>15&1)<<15;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(HEAPU32[d>>2]>>>16&1)<<16;a=-1==(HEAP32[(d+8|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+8|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[(e+12|0)>>2]=g;a=-1==(HEAP32[(d+4|0)>>2]|0)?6:7;break;
case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+4|0)>>2]<<4)|0;a=8;break;case 8:HEAP32[(e+8|0)>>2]=i;a=-1==(HEAP32[(d+12|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=11;break;case 11:HEAP32[(e+16|0)>>2]=j;a=-1==(HEAP32[(d+16|0)>>2]|0)?12:13;break;case 12:var k=0;a=14;break;case 13:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+
16|0)>>2]<<4)|0;a=14;break;case 14:HEAP32[(e+20|0)>>2]=k;a=-1==(HEAP32[(d+20|0)>>2]|0)?15:16;break;case 15:var l=0;a=17;break;case 16:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+20|0)>>2]<<4)|0;a=17;break;case 17:HEAP32[(e+24|0)>>2]=l;a=-1==(HEAP32[(d+24|0)>>2]|0)?18:19;break;case 18:var m=0;a=20;break;case 19:m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+24|0)>>2]<<4)|0;a=20;break;case 20:HEAP32[(e+28|0)>>2]=m;HEAP32[(e+32|0)>>2]=0;return;default:assert(0,
"bad label: "+a)}}_CopyFromBsaveConstraintRecord.X=1;
function _CheckCardinalityConstraint(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(g|0)?3:4;break;case 3:b=1;a=17;break;case 4:a=0!=(HEAP32[(g+24|0)>>2]|0)?5:10;break;case 5:a=(HEAP32[(HEAP32[(g+24|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?6:9;break;case 6:a=(e|0)<(HEAP32[(HEAP32[(HEAP32[(g+24|0)>>2]+4|0)>>2]+16|0)>>2]|0)?7:8;break;case 7:b=0;a=17;break;case 8:a=9;break;case 9:a=10;break;case 10:a=0!=(HEAP32[(g+28|0)>>2]|0)?11:16;break;
case 11:a=(HEAP32[(HEAP32[(g+28|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?12:15;break;case 12:a=(e|0)>(HEAP32[(HEAP32[(HEAP32[(g+28|0)>>2]+4|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:b=0;a=17;break;case 14:a=15;break;case 15:a=16;break;case 16:b=1;a=17;break;case 17:return b;default:assert(0,"bad label: "+a)}}_CheckCardinalityConstraint.X=1;
function _CheckAllowedValuesConstraint(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(g|0)?3:4;break;case 3:b=1;a=34;break;case 4:a=d;a=2==(a|0)?5:8==(a|0)?9:3==(a|0)?13:1==(a|0)?17:0==(a|0)?21:25;break;case 5:a=0==(HEAPU32[g>>2]>>>11&1|0)?6:8;break;case 6:a=0==(HEAPU32[g>>2]>>>10&1|0)?7:8;break;case 7:b=1;a=34;break;case 8:a=26;break;case 9:a=0==(HEAPU32[g>>2]>>>16&1|0)?10:12;break;case 10:a=0==(HEAPU32[g>>2]>>>10&1|0)?11:12;break;case 11:b=1;a=34;break;case 12:a=26;break;
case 13:a=0==(HEAPU32[g>>2]>>>12&1|0)?14:16;break;case 14:a=0==(HEAPU32[g>>2]>>>10&1|0)?15:16;break;case 15:b=1;a=34;break;case 16:a=26;break;case 17:a=0==(HEAPU32[g>>2]>>>14&1|0)?18:20;break;case 18:a=0==(HEAPU32[g>>2]>>>10&1|0)?19:20;break;case 19:b=1;a=34;break;case 20:a=26;break;case 21:a=0==(HEAPU32[g>>2]>>>13&1|0)?22:24;break;case 22:a=0==(HEAPU32[g>>2]>>>10&1|0)?23:24;break;case 23:b=1;a=34;break;case 24:a=26;break;case 25:b=1;a=34;break;case 26:i=HEAP32[(g+12|0)>>2];a=27;break;case 27:a=0!=
(i|0)?28:33;break;case 28:a=(HEAPU16[(i|0)>>1]&65535|0)==(d|0)?29:31;break;case 29:a=(HEAP32[(i+4|0)>>2]|0)==(e|0)?30:31;break;case 30:b=1;a=34;break;case 31:a=32;break;case 32:i=HEAP32[(i+12|0)>>2];a=27;break;case 33:b=0;a=34;break;case 34:return b;default:assert(0,"bad label: "+a)}}_CheckAllowedValuesConstraint.X=1;
function _ClearBloadedConstraints(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+12|0)>>2],48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+172|0)>>2]+16|0)>>2]=0;f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}
function _CheckAllowedClassesConstraint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;b=0==(j|0)?3:4;break;case 3:d=1;b=25;break;case 4:b=0==(HEAP32[(j+8|0)>>2]|0)?5:6;break;case 5:d=1;b=25;break;case 6:b=7!=(g|0)?7:9;break;case 7:b=8!=(g|0)?8:9;break;case 8:d=1;b=25;break;case 9:b=7==(g|0)?10:11;break;case 10:l=i;b=12;break;case 11:l=_FindInstanceBySymbol(e,i);b=12;break;case 12:b=0==(l|0)?13:14;break;case 13:d=0;b=25;break;case 14:m=_EnvGetInstanceClass(e,l);k=
HEAP32[(j+8|0)>>2];b=15;break;case 15:b=0!=(k|0)?16:24;break;case 16:n=_EnvFindDefclass(e,HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2]);b=0==(n|0)?17:18;break;case 17:b=23;break;case 18:b=(n|0)==(m|0)?19:20;break;case 19:d=1;b=25;break;case 20:b=0!=(_EnvSubclassP(e,m,n)|0)?21:22;break;case 21:d=1;b=25;break;case 22:b=23;break;case 23:k=HEAP32[(k+12|0)>>2];b=15;break;case 24:d=0;b=25;break;case 25:return d;default:assert(0,"bad label: "+b)}}_CheckAllowedClassesConstraint.X=1;
function _CheckTypeConstraint(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=175==(b|0)?3:4;break;case 3:a=0;c=36;break;case 4:c=0==(d|0)?5:6;break;case 5:a=1;c=36;break;case 6:c=1==(HEAP32[d>>2]&1|0)?7:8;break;case 7:a=1;c=36;break;case 8:c=2==(b|0)?9:11;break;case 9:c=1!=(HEAPU32[d>>2]>>>1&1|0)?10:11;break;case 10:a=0;c=36;break;case 11:c=3==(b|0)?12:14;break;case 12:c=1!=(HEAPU32[d>>2]>>>2&1|0)?13:14;break;case 13:a=0;c=36;break;case 14:c=0==(b|0)?15:17;break;case 15:c=1!=(HEAPU32[d>>
2]>>>3&1|0)?16:17;break;case 16:a=0;c=36;break;case 17:c=1==(b|0)?18:20;break;case 18:c=1!=(HEAPU32[d>>2]>>>4&1|0)?19:20;break;case 19:a=0;c=36;break;case 20:c=8==(b|0)?21:23;break;case 21:c=1!=(HEAPU32[d>>2]>>>5&1|0)?22:23;break;case 22:a=0;c=36;break;case 23:c=7==(b|0)?24:26;break;case 24:c=1!=(HEAPU32[d>>2]>>>6&1|0)?25:26;break;case 25:a=0;c=36;break;case 26:c=5==(b|0)?27:29;break;case 27:c=1!=(HEAPU32[d>>2]>>>7&1|0)?28:29;break;case 28:a=0;c=36;break;case 29:c=175==(b|0)?30:32;break;case 30:c=
1!=(HEAPU32[d>>2]>>>9&1|0)?31:32;break;case 31:a=0;c=36;break;case 32:c=6==(b|0)?33:35;break;case 33:c=1!=(HEAPU32[d>>2]>>>8&1|0)?34:35;break;case 34:a=0;c=36;break;case 35:a=1;c=36;break;case 36:return a;default:assert(0,"bad label: "+c)}}_CheckTypeConstraint.X=1;
function _ConstraintViolationErrorMessage(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;t=i;k=0!=(j|0)?3:17;break;case 3:k=4==(s|0)?4:5;break;case 4:_PrintErrorID(l,STRING_TABLE.__str685|0,1,1);_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str2687|0);k=8;break;case 5:k=0!=(m|0)?6:7;break;case 6:_PrintErrorID(l,STRING_TABLE.__str685|0,1,1);_EnvPrintRouter(l,STRING_TABLE.__str1686|0,m);_EnvPrintRouter(l,STRING_TABLE.__str1686|
0,STRING_TABLE.__str3688|0);k=7;break;case 7:k=8;break;case 8:k=0!=(n|0)?9:14;break;case 9:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str4689|0);k=0!=(o|0)?10:11;break;case 10:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str5690|0);k=11;break;case 11:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,n);k=0!=(o|0)?12:13;break;case 12:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str6691|0);k=13;break;case 13:k=14;break;case 14:k=0<(p|0)?15:16;break;case 15:_EnvPrintRouter(l,
STRING_TABLE.__str1686|0,STRING_TABLE.__str7692|0);_PrintLongInteger(l,STRING_TABLE.__str1686|0,p);k=16;break;case 16:k=17;break;case 17:k=1==(s|0)?19:18;break;case 18:k=4==(s|0)?19:20;break;case 19:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str8693|0);k=32;break;case 20:k=2==(s|0)?21:22;break;case 21:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str9694|0);_PrintRange(l,STRING_TABLE.__str1686|0,t);k=31;break;case 22:k=3==(s|0)?23:24;break;case 23:_EnvPrintRouter(l,STRING_TABLE.__str1686|
0,STRING_TABLE.__str10695|0);k=30;break;case 24:k=5==(s|0)?25:26;break;case 25:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str11696|0);k=29;break;case 26:k=6==(s|0)?27:28;break;case 27:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str12697|0);k=28;break;case 28:k=29;break;case 29:k=30;break;case 30:k=31;break;case 31:k=32;break;case 32:k=0!=(q|0)?33:34;break;case 33:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str13698|0);_EnvPrintRouter(l,STRING_TABLE.__str1686|
0,HEAP32[(q+16|0)>>2]);k=37;break;case 34:k=0<(r|0)?35:36;break;case 35:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str14699|0);_PrintLongInteger(l,STRING_TABLE.__str1686|0,r);k=36;break;case 36:k=37;break;case 37:_EnvPrintRouter(l,STRING_TABLE.__str1686|0,STRING_TABLE.__str15700|0);return;default:assert(0,"bad label: "+k)}}_ConstraintViolationErrorMessage.X=1;
function _PrintRange(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=(HEAP32[(HEAP32[(e+16|0)>>2]+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:_EnvPrintRouter(b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+12|0)>>2]+16|0)>>2]);a=5;break;case 4:_PrintExpression(b,d,HEAP32[(e+16|0)>>2]);a=5;break;case 5:_EnvPrintRouter(b,d,STRING_TABLE.__str16701|0);a=(HEAP32[(HEAP32[(e+20|0)>>2]+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+196|0)>>2]+8|0)>>2]|0)?6:7;break;case 6:_EnvPrintRouter(b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+8|0)>>2]+16|0)>>2]);a=8;break;case 7:_PrintExpression(b,d,HEAP32[(e+20|0)>>2]);a=8;break;case 8:return;default:assert(0,"bad label: "+a)}}_PrintRange.X=1;
function _ConstraintCheckDataObject(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;a=0==(g|0)?3:4;break;case 3:b=0;a=17;break;case 4:a=4==(HEAPU16[(e+4|0)>>1]&65535|0)?5:14;break;case 5:a=0==(_CheckCardinalityConstraint(d,(HEAP32[(e+16|0)>>2]-HEAP32[(e+12|0)>>2]|0)+1|0,g)|0)?6:7;break;case 6:b=5;a=17;break;case 7:k=HEAP32[(e+8|0)>>2]+16|0;i=HEAP32[(e+12|0)>>2];a=8;break;case 8:a=(i|0)<=(HEAP32[(e+16|0)>>2]|0)?9:13;break;case 9:j=a=_ConstraintCheckValue(d,HEAPU16[(k+(i<<3)|0)>>
1]&65535,HEAP32[((k+(i<<3)|0)+4|0)>>2],g);a=0!=(a|0)?10:11;break;case 10:b=j;a=17;break;case 11:a=12;break;case 12:i=i+1|0;a=8;break;case 13:b=0;a=17;break;case 14:a=0==(_CheckCardinalityConstraint(d,1,g)|0)?15:16;break;case 15:b=5;a=17;break;case 16:b=_ConstraintCheckValue(d,HEAPU16[(e+4|0)>>1]&65535,HEAP32[(e+8|0)>>2],g);a=17;break;case 17:return b;default:assert(0,"bad label: "+a)}}_ConstraintCheckDataObject.X=1;
function _ConstraintCheckValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;b=0==(_CheckTypeConstraint(g,j)|0)?3:4;break;case 3:d=1;b=19;break;case 4:b=0==(_CheckAllowedValuesConstraint(g,i,j)|0)?5:6;break;case 5:d=3;b=19;break;case 6:b=0==(_CheckAllowedClassesConstraint(e,g,i,j)|0)?7:8;break;case 7:d=6;b=19;break;case 8:b=0==(_CheckRangeConstraint(e,g,i,j)|0)?9:10;break;case 9:d=2;b=19;break;case 10:b=30==(g|0)?11:14;break;case 11:b=0==(_CheckFunctionReturnType(HEAP8[i+
8|0]<<24>>24,j)|0)?12:13;break;case 12:d=4;b=19;break;case 13:b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:d=0;b=19;break;case 19:return d;default:assert(0,"bad label: "+b)}}_ConstraintCheckValue.X=1;
function _CheckRangeConstraint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0==(j|0)?3:4;break;case 3:d=1;b=17;break;case 4:b=1!=(g|0)?5:7;break;case 5:b=0!=(g|0)?6:7;break;case 6:d=1;b=17;break;case 7:k=HEAP32[(j+16|0)>>2];l=HEAP32[(j+20|0)>>2];b=8;break;case 8:b=0!=(k|0)?9:16;break;case 9:b=0==(_CompareNumbers(e,g,i,HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2])|0)?10:11;break;case 10:k=HEAP32[(k+12|0)>>2];l=HEAP32[(l+12|0)>>2];b=15;break;case 11:b=1==(_CompareNumbers(e,
g,i,HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2])|0)?12:13;break;case 12:k=HEAP32[(k+12|0)>>2];l=HEAP32[(l+12|0)>>2];b=14;break;case 13:d=1;b=17;break;case 14:b=15;break;case 15:b=8;break;case 16:d=0;b=17;break;case 17:return d;default:assert(0,"bad label: "+b)}}_CheckRangeConstraint.X=1;
function _CheckFunctionReturnType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=1;c=49;break;case 4:c=0!=(HEAP32[d>>2]&1|0)?5:6;break;case 5:a=1;c=49;break;case 6:c=b;c=99==(c|0)||119==(c|0)||98==(c|0)?7:115==(c|0)?10:106==(c|0)?13:107==(c|0)?18:100==(c|0)||102==(c|0)?22:105==(c|0)||108==(c|0)?25:110==(c|0)?28:109==(c|0)?32:97==(c|0)?35:120==(c|0)?38:111==(c|0)?41:117==(c|0)?44:118==(c|0)?45:48;break;case 7:c=0!=(HEAPU32[d>>2]>>>1&1|0)?8:9;break;case 8:a=1;
c=49;break;case 9:a=0;c=49;break;case 10:c=0!=(HEAPU32[d>>2]>>>2&1|0)?11:12;break;case 11:a=1;c=49;break;case 12:a=0;c=49;break;case 13:c=0!=(HEAPU32[d>>2]>>>1&1|0)?16:14;break;case 14:c=0!=(HEAPU32[d>>2]>>>2&1|0)?16:15;break;case 15:c=0!=(HEAPU32[d>>2]>>>5&1|0)?16:17;break;case 16:a=1;c=49;break;case 17:a=0;c=49;break;case 18:c=0!=(HEAPU32[d>>2]>>>1&1|0)?20:19;break;case 19:c=0!=(HEAPU32[d>>2]>>>2&1|0)?20:21;break;case 20:a=1;c=49;break;case 21:a=0;c=49;break;case 22:c=0!=(HEAPU32[d>>2]>>>3&1|0)?
23:24;break;case 23:a=1;c=49;break;case 24:a=0;c=49;break;case 25:c=0!=(HEAPU32[d>>2]>>>4&1|0)?26:27;break;case 26:a=1;c=49;break;case 27:a=0;c=49;break;case 28:c=0!=(HEAPU32[d>>2]>>>4&1|0)?30:29;break;case 29:c=0!=(HEAPU32[d>>2]>>>3&1|0)?30:31;break;case 30:a=1;c=49;break;case 31:a=0;c=49;break;case 32:c=0!=(HEAPU32[d>>2]>>>17&1|0)?33:34;break;case 33:a=1;c=49;break;case 34:a=0;c=49;break;case 35:c=0!=(HEAPU32[d>>2]>>>7&1|0)?36:37;break;case 36:a=1;c=49;break;case 37:a=0;c=49;break;case 38:c=0!=
(HEAPU32[d>>2]>>>6&1|0)?39:40;break;case 39:a=1;c=49;break;case 40:a=0;c=49;break;case 41:c=0!=(HEAPU32[d>>2]>>>5&1|0)?42:43;break;case 42:a=1;c=49;break;case 43:a=0;c=49;break;case 44:a=1;c=49;break;case 45:c=0!=(HEAPU32[d>>2]>>>9&1|0)?46:47;break;case 46:a=1;c=49;break;case 47:c=48;break;case 48:a=1;c=49;break;case 49:return a;default:assert(0,"bad label: "+c)}}_CheckFunctionReturnType.X=1;
function _UnmatchableConstraint(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(a|0)?3:4;break;case 3:c=0;f=17;break;case 4:f=0!=(HEAP32[a>>2]&1|0)?16:5;break;case 5:f=0!=(HEAPU32[a>>2]>>>1&1|0)?16:6;break;case 6:f=0!=(HEAPU32[a>>2]>>>2&1|0)?16:7;break;case 7:f=0!=(HEAPU32[a>>2]>>>3&1|0)?16:8;break;case 8:f=0!=(HEAPU32[a>>2]>>>4&1|0)?16:9;break;case 9:f=0!=(HEAPU32[a>>2]>>>5&1|0)?16:10;break;case 10:f=0!=(HEAPU32[a>>2]>>>6&1|0)?16:11;break;case 11:f=0!=(HEAPU32[a>>2]>>>17&1|0)?16:12;break;case 12:f=
0!=(HEAPU32[a>>2]>>>7&1|0)?16:13;break;case 13:f=0!=(HEAPU32[a>>2]>>>9&1|0)?16:14;break;case 14:f=0!=(HEAPU32[a>>2]>>>8&1|0)?16:15;break;case 15:c=1;f=17;break;case 16:c=0;f=17;break;case 17:return c;default:assert(0,"bad label: "+f)}}_UnmatchableConstraint.X=1;
function _CheckRangeAgainstCardinalityConstraint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;b=0==(j|0)?3:4;break;case 3:d=1;b=18;break;case 4:b=0!=(HEAP32[(j+28|0)>>2]|0)?5:10;break;case 5:b=(HEAP32[(HEAP32[(j+28|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?6:9;break;case 6:b=(g|0)>(HEAP32[(HEAP32[(HEAP32[(j+28|0)>>2]+4|0)>>2]+16|0)>>2]|0)?7:8;break;case 7:d=0;b=18;break;case 8:b=9;break;case 9:b=10;break;case 10:b=0!=(HEAP32[(j+24|0)>>
2]|0)?11:17;break;case 11:b=-1!=(i|0)?12:17;break;case 12:b=(HEAP32[(HEAP32[(j+24|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?13:16;break;case 13:b=(i|0)<(HEAP32[(HEAP32[(HEAP32[(j+24|0)>>2]+4|0)>>2]+16|0)>>2]|0)?14:15;break;case 14:d=0;b=18;break;case 15:b=16;break;case 16:b=17;break;case 17:d=1;b=18;break;case 18:return d;default:assert(0,"bad label: "+b)}}_CheckRangeAgainstCardinalityConstraint.X=1;
function _ConstraintCheckExpressionChain(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;k=j=0;i=e;a=3;break;case 3:a=0!=(i|0)?4:16;break;case 4:a=0!=(_ConstantType(HEAPU16[(i|0)>>1]&65535)|0)?5:6;break;case 5:j=j+1|0;a=14;break;case 6:a=30==(HEAPU16[(i|0)>>1]&65535|0)?7:12;break;case 7:a=109!=(HEAP8[HEAP32[(i+4|0)>>2]+8|0]<<24>>24|0)?8:10;break;case 8:a=117!=(HEAP8[HEAP32[(i+4|0)>>2]+8|0]<<24>>24|0)?9:10;break;case 9:j=j+1|0;a=11;break;case 10:k=-1;a=11;break;case 11:a=13;
break;case 12:k=-1;a=13;break;case 13:a=14;break;case 14:a=15;break;case 15:i=HEAP32[(i+12|0)>>2];a=3;break;case 16:a=0==(k|0)?17:18;break;case 17:k=j;a=18;break;case 18:a=0==(_CheckRangeAgainstCardinalityConstraint(d,j,k,g)|0)?19:20;break;case 19:b=5;a=27;break;case 20:i=e;a=21;break;case 21:a=0!=(i|0)?22:26;break;case 22:l=_ConstraintCheckValue(d,HEAPU16[(i|0)>>1]&65535,HEAP32[(i+4|0)>>2],g);a=0!=(l|0)?23:24;break;case 23:b=l;a=27;break;case 24:a=25;break;case 25:i=HEAP32[(i+12|0)>>2];a=21;break;
case 26:b=0;a=27;break;case 27:return b;default:assert(0,"bad label: "+a)}}_ConstraintCheckExpressionChain.X=1;
function _ConstraintCheckExpression(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=0;a=0==(g|0)?3:4;break;case 3:b=i;a=12;break;case 4:a=5;break;case 5:a=0!=(e|0)?6:11;break;case 6:i=_ConstraintCheckValue(d,HEAPU16[(e|0)>>1]&65535,HEAP32[(e+4|0)>>2],g);a=0!=(i|0)?7:8;break;case 7:b=i;a=12;break;case 8:i=_ConstraintCheckExpression(d,HEAP32[(e+8|0)>>2],g);a=0!=(i|0)?9:10;break;case 9:b=i;a=12;break;case 10:e=HEAP32[(e+12|0)>>2];a=5;break;case 11:b=i;a=12;break;case 12:return b;
default:assert(0,"bad label: "+a)}}_ConstraintCheckExpression.X=1;
function _ConstraintsToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;j=h;k=f;l=c;m=a;n=b;o=d;v=u=s=1;p=w=0;g=3;break;case 3:g=167>(p|0)?4:10;break;case 4:x=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+172|0)>>2]|0)>>2]+(p<<2)|0)>>2];g=5;break;case 5:g=0!=(x|0)?6:8;break;case 6:g=w;w=g+1&65535;HEAP16[(x+4|0)>>1]=g;g=7;break;case 7:x=HEAP32[(x+36|0)>>2];g=5;
break;case 8:g=9;break;case 9:p=p+1|0;g=3;break;case 10:g=0!=(_EnvGetDynamicConstraintChecking(j)|0)?13:11;break;case 11:g=0!=(w&65535|0)?12:13;break;case 12:w=0;_PrintWarningID(j,STRING_TABLE.__str710|0,1,0);_EnvPrintRouter(j,STRING_TABLE.__str1711|0,STRING_TABLE.__str2712|0);_EnvPrintRouter(j,STRING_TABLE.__str1711|0,STRING_TABLE.__str3713|0);g=13;break;case 13:g=0==(w&65535|0)?14:15;break;case 14:i=-1;g=46;break;case 15:p=1;g=16;break;case 16:g=(p|0)<=(((w&65535|0)/(o|0)&-1)+1|0)?17:19;break;case 17:g=
n;var y=p;_fprintf(m,STRING_TABLE.__str4714|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=y,tempInt));g=18;break;case 18:p=p+1|0;g=16;break;case 19:t=g=_NewCFile(j,k,l,u,0);g=0==(g|0)?20:21;break;case 20:i=-1;g=46;break;case 21:p=r=q=0;g=22;break;case 22:g=167>(p|0)?23:45;break;case 23:x=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+172|0)>>2]|0)>>2]+(p<<2)|0)>>2];g=24;break;case 24:g=0!=(x|0)?25:43;break;case 25:g=
0!=(s|0)?26:27;break;case 26:s=n;g=v;_fprintf(t,STRING_TABLE.__str5715|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=s,HEAP32[tempInt+4>>2]=g,tempInt));s=0;g=27;break;case 27:g=HEAP32[x>>2]&1;var y=HEAPU32[x>>2]>>>1&1,A=HEAPU32[x>>2]>>>2&1,z=HEAPU32[x>>2]>>>3&1,B=HEAPU32[x>>2]>>>4&1,C=HEAPU32[x>>2]>>>5&1,D=HEAPU32[x>>2]>>>6&1,E=HEAPU32[x>>2]>>>7&1,F=HEAPU32[x>>2]>>>8&1,G=HEAPU32[x>>2]>>>10&1,H=HEAPU32[x>>2]>>>11&1,J=HEAPU32[x>>2]>>>12&
1,O=HEAPU32[x>>2]>>>13&1,K=HEAPU32[x>>2]>>>14&1,L=HEAPU32[x>>2]>>>15&1,I=HEAPU32[x>>2]>>>16&1,M=HEAPU32[x>>2]>>>17&1,N=HEAPU32[x>>2]>>>18&1;_fprintf(t,STRING_TABLE.__str6716|0,(tempInt=STACKTOP,STACKTOP+=76,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=y,HEAP32[tempInt+8>>2]=A,HEAP32[tempInt+12>>2]=z,HEAP32[tempInt+16>>2]=B,HEAP32[tempInt+20>>2]=C,HEAP32[tempInt+24>>2]=D,HEAP32[tempInt+28>>2]=E,HEAP32[tempInt+32>>2]=F,HEAP32[tempInt+36>>2]=0,HEAP32[tempInt+
40>>2]=G,HEAP32[tempInt+44>>2]=H,HEAP32[tempInt+48>>2]=J,HEAP32[tempInt+52>>2]=O,HEAP32[tempInt+56>>2]=K,HEAP32[tempInt+60>>2]=L,HEAP32[tempInt+64>>2]=I,HEAP32[tempInt+68>>2]=M,HEAP32[tempInt+72>>2]=N,tempInt));_fprintf(t,STRING_TABLE.__str7717|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+8|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str8718|0,(tempInt=STACKTOP,
STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+12|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str8718|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+16|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str8718|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+20|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str8718|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+24|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str8718|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(j,t,HEAP32[(x+28|0)>>2],n,o);_fprintf(t,STRING_TABLE.__str9719|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0==(HEAP32[(x+36|0)>>2]|0)?28:29;break;case 28:_fprintf(t,STRING_TABLE.__str10720|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));g=33;break;case 29:g=(q+1|0)>=(o|0)?30:31;break;case 30:g=n;y=v+1|0;_fprintf(t,STRING_TABLE.__str11721|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=y,HEAP32[tempInt+8>>2]=0,tempInt));g=32;break;case 31:g=n;y=v;A=q+1|0;_fprintf(t,STRING_TABLE.__str11721|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=
y,HEAP32[tempInt+8>>2]=A,tempInt));g=32;break;case 32:g=33;break;case 33:g=HEAP32[(x+40|0)>>2];y=HEAP32[(x+44|0)>>2]+1|0;_fprintf(t,STRING_TABLE.__str12722|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=y,tempInt));r=r+1|0;q=q+1|0;g=(r|0)==(w&65535|0)?35:34;break;case 34:g=(q|0)>=(o|0)?35:40;break;case 35:_fprintf(t,STRING_TABLE.__str13723|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(j,t);q=0;u=u+1|0;v=v+1|0;g=(r|0)<(w&65535|0)?36:39;break;case 36:t=g=_NewCFile(j,k,1,u,0);g=0==(g|0)?37:38;break;case 37:i=0;g=46;break;case 38:s=1;g=39;break;case 39:g=41;break;case 40:_fprintf(t,STRING_TABLE.__str14724|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=41;break;case 41:g=42;break;case 42:x=HEAP32[(x+36|0)>>2];g=24;
break;case 43:g=44;break;case 44:p=p+1|0;g=22;break;case 45:i=u;g=46;break;case 46:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstraintsToCode.X=1;
function _PrintConstraintReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?4:3;break;case 3:e=0!=(_EnvGetDynamicConstraintChecking(g)|0)?5:4;break;case 4:_fprintf(i,STRING_TABLE.__str15725|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=6;break;case 5:e=
k;var m=((HEAPU16[(j+4|0)>>1]&65535|0)/(l|0)&-1)+1|0,n=(HEAPU16[(j+4|0)>>1]&65535|0)%(l|0);_fprintf(i,STRING_TABLE.__str16726|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,tempInt));e=6;break;case 6:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _IntersectConstraints(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;k=j=0;a=0==(e|0)?3:5;break;case 3:a=0==(g|0)?4:5;break;case 4:b=i=_GetConstraintRecord(d);HEAP32[b>>2]=HEAP32[b>>2]&-131073|131072;b=i;a=74;break;case 5:a=0==(e|0)?6:7;break;case 6:b=_CopyConstraintRecord(d,g);a=74;break;case 7:a=0==(g|0)?8:9;break;case 8:b=_CopyConstraintRecord(d,e);a=74;break;case 9:i=_GetConstraintRecord(d);a=(HEAPU32[e>>2]>>>17&1|0)!=(HEAPU32[g>>2]>>>17&1|0)?10:12;break;case 10:a=
(HEAPU32[e>>2]>>>18&1|0)!=(HEAPU32[g>>2]>>>18&1|0)?11:12;break;case 11:b=i;HEAP32[b>>2]&=-2;b=i;a=74;break;case 12:a=0!=(HEAPU32[e>>2]>>>17&1|0)?13:15;break;case 13:a=0!=(HEAPU32[g>>2]>>>17&1|0)?14:15;break;case 14:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-131073|131072;a=16;break;case 15:a=i;HEAP32[a>>2]&=-131073;a=16;break;case 16:a=0!=(HEAPU32[e>>2]>>>18&1|0)?17:19;break;case 17:a=0!=(HEAPU32[g>>2]>>>18&1|0)?18:19;break;case 18:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-262145|262144;a=20;break;case 19:a=i;HEAP32[a>>
2]&=-262145;a=20;break;case 20:a=0!=(HEAP32[e>>2]&1|0)?21:23;break;case 21:a=0!=(HEAP32[g>>2]&1|0)?22:23;break;case 22:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=53;break;case 23:a=0!=(HEAP32[e>>2]&1|0)?24:25;break;case 24:j=1;_SetAnyAllowedFlags(e,0);a=28;break;case 25:a=0!=(HEAP32[g>>2]&1|0)?26:27;break;case 26:k=1;_SetAnyAllowedFlags(g,0);a=27;break;case 27:a=28;break;case 28:a=i;HEAP32[a>>2]&=-2;if(0!=(HEAPU32[e>>2]>>>1&1|0))a=29;else{var l=0;a=30}break;case 29:l=0!=(HEAPU32[g>>2]>>>1&1|0);a=30;break;
case 30:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-3|(l&1)<<1;if(0!=(HEAPU32[e>>2]>>>2&1|0))a=31;else{var m=0;a=32}break;case 31:m=0!=(HEAPU32[g>>2]>>>2&1|0);a=32;break;case 32:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-5|(m&1)<<2;if(0!=(HEAPU32[e>>2]>>>3&1|0))a=33;else{var n=0;a=34}break;case 33:n=0!=(HEAPU32[g>>2]>>>3&1|0);a=34;break;case 34:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-9|(n&1)<<3;if(0!=(HEAPU32[e>>2]>>>4&1|0))a=35;else{var o=0;a=36}break;case 35:o=0!=(HEAPU32[g>>2]>>>4&1|0);a=36;break;case 36:a=i;HEAP32[a>>2]=HEAP32[a>>
2]&-17|(o&1)<<4;if(0!=(HEAPU32[e>>2]>>>5&1|0))a=37;else{var p=0;a=38}break;case 37:p=0!=(HEAPU32[g>>2]>>>5&1|0);a=38;break;case 38:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-33|(p&1)<<5;if(0!=(HEAPU32[e>>2]>>>6&1|0))a=39;else{var q=0;a=40}break;case 39:q=0!=(HEAPU32[g>>2]>>>6&1|0);a=40;break;case 40:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-65|(q&1)<<6;if(0!=(HEAPU32[e>>2]>>>7&1|0))a=41;else{var r=0;a=42}break;case 41:r=0!=(HEAPU32[g>>2]>>>7&1|0);a=42;break;case 42:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-129|(r&1)<<7;if(0!=(HEAPU32[e>>
2]>>>9&1|0))a=43;else{var s=0;a=44}break;case 43:s=0!=(HEAPU32[g>>2]>>>9&1|0);a=44;break;case 44:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-513|(s&1)<<9;if(0!=(HEAPU32[e>>2]>>>17&1|0))a=45;else{var t=0;a=46}break;case 45:t=0!=(HEAPU32[g>>2]>>>17&1|0);a=46;break;case 46:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-131073|(t&1)<<17;if(0!=(HEAPU32[e>>2]>>>8&1|0))a=47;else{var u=0;a=48}break;case 47:u=0!=(HEAPU32[g>>2]>>>8&1|0);a=48;break;case 48:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-257|(u&1)<<8;a=0!=(j|0)?49:50;break;case 49:_SetAnyAllowedFlags(e,
1);a=50;break;case 50:a=0!=(k|0)?51:52;break;case 51:_SetAnyAllowedFlags(g,1);a=52;break;case 52:a=53;break;case 53:a=0!=(HEAPU32[e>>2]>>>10&1|0)?55:54;break;case 54:a=0!=(HEAPU32[g>>2]>>>10&1|0)?55:56;break;case 55:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-1025|1024;a=69;break;case 56:a=i;HEAP32[a>>2]&=-1025;if(0!=(HEAPU32[e>>2]>>>11&1|0)){var v=1;a=58}else a=57;break;case 57:v=0!=(HEAPU32[g>>2]>>>11&1|0);a=58;break;case 58:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(v&1)<<11;if(0!=(HEAPU32[e>>2]>>>12&1|0)){var w=
1;a=60}else a=59;break;case 59:w=0!=(HEAPU32[g>>2]>>>12&1|0);a=60;break;case 60:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(w&1)<<12;if(0!=(HEAPU32[e>>2]>>>13&1|0)){var x=1;a=62}else a=61;break;case 61:x=0!=(HEAPU32[g>>2]>>>13&1|0);a=62;break;case 62:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-8193|(x&1)<<13;if(0!=(HEAPU32[e>>2]>>>14&1|0)){var y=1;a=64}else a=63;break;case 63:y=0!=(HEAPU32[g>>2]>>>14&1|0);a=64;break;case 64:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(y&1)<<14;if(0!=(HEAPU32[e>>2]>>>15&1|0)){var A=1;a=66}else a=
65;break;case 65:A=0!=(HEAPU32[g>>2]>>>15&1|0);a=66;break;case 66:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-32769|(A&1)<<15;if(0!=(HEAPU32[e>>2]>>>16&1|0)){var z=1;a=68}else a=67;break;case 67:z=0!=(HEAPU32[g>>2]>>>16&1|0);a=68;break;case 68:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(z&1)<<16;a=69;break;case 69:_IntersectAllowedValueExpressions(d,e,g,i);_IntersectAllowedClassExpressions(d,e,g,i);_IntersectNumericExpressions(d,e,g,i,1);_IntersectNumericExpressions(d,e,g,i,0);_UpdateRestrictionFlags(i);a=0!=(HEAPU32[i>>
2]>>>17&1|0)?70:73;break;case 70:a=_IntersectConstraints(d,HEAP32[(e+32|0)>>2],HEAP32[(g+32|0)>>2]);HEAP32[(i+32|0)>>2]=a;a=0!=(_UnmatchableConstraint(HEAP32[(i+32|0)>>2])|0)?71:72;break;case 71:a=i;HEAP32[a>>2]&=-131073;a=72;break;case 72:a=73;break;case 73:b=i;a=74;break;case 74:return b;default:assert(0,"bad label: "+a)}}_IntersectConstraints.X=1;
function _IntersectAllowedValueExpressions(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;l=0;j=HEAP32[(e+12|0)>>2];b=3;break;case 3:b=0!=(j|0)?4:9;break;case 4:b=0!=(_CheckAllowedValuesConstraint(HEAPU16[(j|0)>>1]&65535,HEAP32[(j+4|0)>>2],e)|0)?5:7;break;case 5:b=0!=(_CheckAllowedValuesConstraint(HEAPU16[(j|0)>>1]&65535,HEAP32[(j+4|0)>>2],g)|0)?6:7;break;case 6:b=_GenConstant(d,HEAP16[(j|0)>>1],HEAP32[(j+4|0)>>2]);HEAP32[(b+12|0)>>2]=l;l=b;b=7;break;case 7:b=8;break;
case 8:j=HEAP32[(j+12|0)>>2];b=3;break;case 9:k=HEAP32[(g+12|0)>>2];b=10;break;case 10:b=0!=(k|0)?11:19;break;case 11:b=0!=(_FindItemInExpression(HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],1,l)|0)?12:13;break;case 12:b=17;break;case 13:b=0!=(_CheckAllowedValuesConstraint(HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],e)|0)?14:16;break;case 14:b=0!=(_CheckAllowedValuesConstraint(HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],g)|0)?15:16;break;case 15:b=_GenConstant(d,HEAP16[(k|0)>>1],HEAP32[(k+4|0)>>2]);HEAP32[(b+
12|0)>>2]=l;l=b;b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:k=HEAP32[(k+12|0)>>2];b=10;break;case 19:HEAP32[(i+12|0)>>2]=l;return;default:assert(0,"bad label: "+b)}}_IntersectAllowedValueExpressions.X=1;
function _IntersectAllowedClassExpressions(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;l=0;j=HEAP32[(e+8|0)>>2];b=3;break;case 3:b=0!=(j|0)?4:9;break;case 4:b=0!=(_CheckAllowedClassesConstraint(d,HEAPU16[(j|0)>>1]&65535,HEAP32[(j+4|0)>>2],e)|0)?5:7;break;case 5:b=0!=(_CheckAllowedClassesConstraint(d,HEAPU16[(j|0)>>1]&65535,HEAP32[(j+4|0)>>2],g)|0)?6:7;break;case 6:b=_GenConstant(d,HEAP16[(j|0)>>1],HEAP32[(j+4|0)>>2]);HEAP32[(b+12|0)>>2]=l;l=b;b=7;break;case 7:b=8;break;
case 8:j=HEAP32[(j+12|0)>>2];b=3;break;case 9:k=HEAP32[(g+8|0)>>2];b=10;break;case 10:b=0!=(k|0)?11:19;break;case 11:b=0!=(_FindItemInExpression(HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],1,l)|0)?12:13;break;case 12:b=17;break;case 13:b=0!=(_CheckAllowedClassesConstraint(d,HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],e)|0)?14:16;break;case 14:b=0!=(_CheckAllowedClassesConstraint(d,HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],g)|0)?15:16;break;case 15:b=_GenConstant(d,HEAP16[(k|0)>>1],HEAP32[(k+4|0)>>
2]);HEAP32[(b+12|0)>>2]=l;l=b;b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:k=HEAP32[(k+12|0)>>2];b=10;break;case 19:HEAP32[(i+8|0)>>2]=l;return;default:assert(0,"bad label: "+b)}}_IntersectAllowedClassExpressions.X=1;
function _IntersectNumericExpressions(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;e=h;g=f;i=c;j=a;k=b;s=r=u=t=0;d=0!=(k|0)?3:4;break;case 3:l=HEAP32[(g+16|0)>>2];m=HEAP32[(g+20|0)>>2];d=5;break;case 4:l=HEAP32[(g+24|0)>>2];m=HEAP32[(g+28|0)>>2];d=5;break;case 5:d=6;break;case 6:d=0!=(l|0)?7:28;break;case 7:d=0!=(k|0)?8:9;break;case 8:n=HEAP32[(i+16|0)>>2];o=HEAP32[(i+20|0)>>2];d=10;break;case 9:n=HEAP32[(i+24|0)>>2];o=HEAP32[(i+28|0)>>2];d=10;break;case 10:d=
11;break;case 11:d=0!=(n|0)?12:26;break;case 12:v=_CompareNumbers(e,HEAPU16[(m|0)>>1]&65535,HEAP32[(m+4|0)>>2],HEAPU16[(o|0)>>1]&65535,HEAP32[(o+4|0)>>2]);w=_CompareNumbers(e,HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2],HEAPU16[(n|0)>>1]&65535,HEAP32[(n+4|0)>>2]);d=_CompareNumbers(e,HEAPU16[(m|0)>>1]&65535,HEAP32[(m+4|0)>>2],HEAPU16[(n|0)>>1]&65535,HEAP32[(n+4|0)>>2]);x=_CompareNumbers(e,HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2],HEAPU16[(o|0)>>1]&65535,HEAP32[(o+4|0)>>2]);d=0==(d|0)?14:13;break;case 13:d=
1==(x|0)?14:15;break;case 14:d=25;break;case 15:d=1==(w|0)?16:17;break;case 16:p=_GenConstant(e,HEAP16[(l|0)>>1],HEAP32[(l+4|0)>>2]);d=18;break;case 17:p=_GenConstant(e,HEAP16[(n|0)>>1],HEAP32[(n+4|0)>>2]);d=18;break;case 18:d=0==(v|0)?19:20;break;case 19:q=_GenConstant(e,HEAP16[(m|0)>>1],HEAP32[(m+4|0)>>2]);d=21;break;case 20:q=_GenConstant(e,HEAP16[(o|0)>>1],HEAP32[(o+4|0)>>2]);d=21;break;case 21:d=0==(t|0)?22:23;break;case 22:r=p;s=q;d=24;break;case 23:HEAP32[(t+12|0)>>2]=p;HEAP32[(u+12|0)>>2]=
q;d=24;break;case 24:t=p;u=q;d=25;break;case 25:n=HEAP32[(n+12|0)>>2];o=HEAP32[(o+12|0)>>2];d=11;break;case 26:d=27;break;case 27:l=HEAP32[(l+12|0)>>2];m=HEAP32[(m+12|0)>>2];d=6;break;case 28:d=0!=(r|0)?29:33;break;case 29:d=0!=(k|0)?30:31;break;case 30:_ReturnExpression(e,HEAP32[(j+16|0)>>2]);_ReturnExpression(e,HEAP32[(j+20|0)>>2]);HEAP32[(j+16|0)>>2]=r;HEAP32[(j+20|0)>>2]=s;d=32;break;case 31:_ReturnExpression(e,HEAP32[(j+24|0)>>2]);_ReturnExpression(e,HEAP32[(j+28|0)>>2]);HEAP32[(j+24|0)>>2]=
r;HEAP32[(j+28|0)>>2]=s;d=32;break;case 32:d=39;break;case 33:d=0!=(k|0)?34:37;break;case 34:d=0!=(HEAP32[j>>2]&1|0)?35:36;break;case 35:_SetAnyAllowedFlags(j,0);d=36;break;case 36:d=j;HEAP32[d>>2]&=-17;d=j;HEAP32[d>>2]&=-9;d=38;break;case 37:_SetAnyAllowedFlags(j,1);d=j;HEAP32[d>>2]&=-262145;d=j;HEAP32[d>>2]&=-131073;d=j;HEAP32[d>>2]&=-2;d=38;break;case 38:d=39;break;case 39:return;default:assert(0,"bad label: "+d)}}_IntersectNumericExpressions.X=1;
function _UpdateRestrictionFlags(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAPU32[c>>2]>>>10&1|0)?3:5;break;case 3:f=0==(HEAP32[(c+12|0)>>2]|0)?4:5;break;case 4:_SetAnyAllowedFlags(c,1);f=c;HEAP32[f>>2]&=-2;f=5;break;case 5:f=0!=(HEAPU32[c>>2]>>>11&1|0)?6:8;break;case 6:f=0!=(HEAPU32[c>>2]>>>1&1|0)?7:8;break;case 7:f=_FindItemInExpression(2,0,0,HEAP32[(c+12|0)>>2]);var a=c;HEAP32[a>>2]=HEAP32[a>>2]&-3|(f&1)<<1;f=8;break;case 8:f=0!=(HEAPU32[c>>2]>>>12&1|0)?9:11;break;case 9:f=0!=(HEAPU32[c>>
2]>>>2&1|0)?10:11;break;case 10:f=_FindItemInExpression(3,0,0,HEAP32[(c+12|0)>>2]);a=c;HEAP32[a>>2]=HEAP32[a>>2]&-5|(f&1)<<2;f=11;break;case 11:f=0!=(HEAPU32[c>>2]>>>13&1|0)?12:14;break;case 12:f=0!=(HEAPU32[c>>2]>>>3&1|0)?13:14;break;case 13:f=_FindItemInExpression(0,0,0,HEAP32[(c+12|0)>>2]);a=c;HEAP32[a>>2]=HEAP32[a>>2]&-9|(f&1)<<3;f=14;break;case 14:f=0!=(HEAPU32[c>>2]>>>14&1|0)?15:17;break;case 15:f=0!=(HEAPU32[c>>2]>>>4&1|0)?16:17;break;case 16:f=_FindItemInExpression(1,0,0,HEAP32[(c+12|0)>>
2]);a=c;HEAP32[a>>2]=HEAP32[a>>2]&-17|(f&1)<<4;f=17;break;case 17:f=0!=(HEAPU32[c>>2]>>>16&1|0)?18:20;break;case 18:f=0!=(HEAPU32[c>>2]>>>5&1|0)?19:20;break;case 19:f=_FindItemInExpression(8,0,0,HEAP32[(c+12|0)>>2]);a=c;HEAP32[a>>2]=HEAP32[a>>2]&-33|(f&1)<<5;f=20;break;case 20:return;default:assert(0,"bad label: "+f)}}_UpdateRestrictionFlags.X=1;
function _UnionConstraints(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;k=j=0;a=0==(e|0)?3:5;break;case 3:a=0==(g|0)?4:5;break;case 4:b=_GetConstraintRecord(d);a=66;break;case 5:a=0==(e|0)?6:7;break;case 6:b=_CopyConstraintRecord(d,g);a=66;break;case 7:a=0==(g|0)?8:9;break;case 8:b=_CopyConstraintRecord(d,e);a=66;break;case 9:i=_GetConstraintRecord(d);a=0!=(HEAPU32[e>>2]>>>17&1|0)?11:10;break;case 10:a=0!=(HEAPU32[g>>2]>>>17&1|0)?11:12;break;case 11:a=i;HEAP32[a>>2]=HEAP32[a>>
2]&-131073|131072;a=12;break;case 12:a=0!=(HEAPU32[e>>2]>>>18&1|0)?14:13;break;case 13:a=0!=(HEAPU32[g>>2]>>>18&1|0)?14:15;break;case 14:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-262145|262144;a=15;break;case 15:a=0!=(HEAP32[e>>2]&1|0)?17:16;break;case 16:a=0!=(HEAP32[g>>2]&1|0)?17:18;break;case 17:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=37;break;case 18:a=i;HEAP32[a>>2]&=-2;if(0!=(HEAPU32[e>>2]>>>1&1|0)){var l=1;a=20}else a=19;break;case 19:l=0!=(HEAPU32[g>>2]>>>1&1|0);a=20;break;case 20:a=i;HEAP32[a>>2]=HEAP32[a>>
2]&-3|(l&1)<<1;if(0!=(HEAPU32[e>>2]>>>2&1|0)){var m=1;a=22}else a=21;break;case 21:m=0!=(HEAPU32[g>>2]>>>2&1|0);a=22;break;case 22:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-5|(m&1)<<2;if(0!=(HEAPU32[e>>2]>>>3&1|0)){var n=1;a=24}else a=23;break;case 23:n=0!=(HEAPU32[g>>2]>>>3&1|0);a=24;break;case 24:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-9|(n&1)<<3;if(0!=(HEAPU32[e>>2]>>>4&1|0)){var o=1;a=26}else a=25;break;case 25:o=0!=(HEAPU32[g>>2]>>>4&1|0);a=26;break;case 26:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-17|(o&1)<<4;if(0!=(HEAPU32[e>>
2]>>>5&1|0)){var p=1;a=28}else a=27;break;case 27:p=0!=(HEAPU32[g>>2]>>>5&1|0);a=28;break;case 28:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-33|(p&1)<<5;if(0!=(HEAPU32[e>>2]>>>6&1|0)){var q=1;a=30}else a=29;break;case 29:q=0!=(HEAPU32[g>>2]>>>6&1|0);a=30;break;case 30:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-65|(q&1)<<6;if(0!=(HEAPU32[e>>2]>>>7&1|0)){var r=1;a=32}else a=31;break;case 31:r=0!=(HEAPU32[g>>2]>>>7&1|0);a=32;break;case 32:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-129|(r&1)<<7;if(0!=(HEAPU32[e>>2]>>>9&1|0)){var s=1;a=
34}else a=33;break;case 33:s=0!=(HEAPU32[g>>2]>>>9&1|0);a=34;break;case 34:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-513|(s&1)<<9;if(0!=(HEAPU32[e>>2]>>>8&1|0)){var t=1;a=36}else a=35;break;case 35:t=0!=(HEAPU32[g>>2]>>>8&1|0);a=36;break;case 36:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-257|(t&1)<<8;a=37;break;case 37:a=0!=(HEAPU32[e>>2]>>>10&1|0)?38:40;break;case 38:a=0!=(HEAPU32[g>>2]>>>10&1|0)?39:40;break;case 39:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-1025|1024;a=63;break;case 40:a=0!=(HEAPU32[e>>2]>>>10&1|0)?41:42;break;case 41:j=
1;_SetAnyRestrictionFlags(e,0);a=45;break;case 42:a=0!=(HEAPU32[g>>2]>>>10&1|0)?43:44;break;case 43:k=1;_SetAnyRestrictionFlags(g,0);a=44;break;case 44:a=45;break;case 45:a=i;HEAP32[a>>2]&=-1025;if(0!=(HEAPU32[e>>2]>>>11&1|0))a=46;else{var u=0;a=47}break;case 46:u=0!=(HEAPU32[g>>2]>>>11&1|0);a=47;break;case 47:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(u&1)<<11;if(0!=(HEAPU32[e>>2]>>>12&1|0))a=48;else{var v=0;a=49}break;case 48:v=0!=(HEAPU32[g>>2]>>>12&1|0);a=49;break;case 49:a=i;HEAP32[a>>2]=HEAP32[a>>
2]&-4097|(v&1)<<12;if(0!=(HEAPU32[e>>2]>>>13&1|0))a=50;else{var w=0;a=51}break;case 50:w=0!=(HEAPU32[g>>2]>>>13&1|0);a=51;break;case 51:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-8193|(w&1)<<13;if(0!=(HEAPU32[e>>2]>>>14&1|0))a=52;else{var x=0;a=53}break;case 52:x=0!=(HEAPU32[g>>2]>>>14&1|0);a=53;break;case 53:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(x&1)<<14;if(0!=(HEAPU32[e>>2]>>>15&1|0))a=54;else{var y=0;a=55}break;case 54:y=0!=(HEAPU32[g>>2]>>>15&1|0);a=55;break;case 55:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-32769|(y&
1)<<15;if(0!=(HEAPU32[e>>2]>>>16&1|0))a=56;else{var A=0;a=57}break;case 56:A=0!=(HEAPU32[g>>2]>>>16&1|0);a=57;break;case 57:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(A&1)<<16;a=0!=(j|0)?58:59;break;case 58:_SetAnyRestrictionFlags(e,0);a=62;break;case 59:a=0!=(k|0)?60:61;break;case 60:_SetAnyRestrictionFlags(g,0);a=61;break;case 61:a=62;break;case 62:a=63;break;case 63:_UnionAllowedValueExpressions(d,e,g,i);_UnionAllowedClassExpressions(d,e,g,i);_UnionNumericExpressions(d,e,g,i,1);_UnionNumericExpressions(d,
e,g,i,0);a=0!=(HEAPU32[i>>2]>>>17&1|0)?64:65;break;case 64:a=_UnionConstraints(d,HEAP32[(e+32|0)>>2],HEAP32[(g+32|0)>>2]);HEAP32[(i+32|0)>>2]=a;a=65;break;case 65:b=i;a=66;break;case 66:return b;default:assert(0,"bad label: "+a)}}_UnionConstraints.X=1;function _UnionAllowedValueExpressions(h,f,c,a){f=_AddToUnionList(h,HEAP32[(f+12|0)>>2],0,a);f=_AddToUnionList(h,HEAP32[(c+12|0)>>2],f,a);HEAP32[(a+12|0)>>2]=f}
function _UnionAllowedClassExpressions(h,f,c,a){f=_AddToUnionList(h,HEAP32[(f+8|0)>>2],0,a);f=_AddToUnionList(h,HEAP32[(c+8|0)>>2],f,a);HEAP32[(a+8|0)>>2]=f}
function _RestrictionOnType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=20;break;case 4:c=0!=(HEAPU32[d>>2]>>>10&1|0)?18:5;break;case 5:c=0!=(HEAPU32[d>>2]>>>11&1|0)?6:7;break;case 6:c=2==(b|0)?18:7;break;case 7:c=0!=(HEAPU32[d>>2]>>>12&1|0)?8:9;break;case 8:c=3==(b|0)?18:9;break;case 9:c=0!=(HEAPU32[d>>2]>>>13&1|0)?10:11;break;case 10:c=0==(b|0)?18:11;break;case 11:c=0!=(HEAPU32[d>>2]>>>14&1|0)?12:13;break;case 12:c=1==(b|0)?18:13;break;case 13:c=0!=
(HEAPU32[d>>2]>>>15&1|0)?14:16;break;case 14:c=7==(b|0)?18:15;break;case 15:c=8==(b|0)?18:16;break;case 16:c=0!=(HEAPU32[d>>2]>>>16&1|0)?17:19;break;case 17:c=8==(b|0)?18:19;break;case 18:a=1;c=20;break;case 19:a=0;c=20;break;case 20:return a;default:assert(0,"bad label: "+c)}}_RestrictionOnType.X=1;
function _UnionNumericExpressions(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o=d,p=d+4;g=h;i=f;j=c;k=a;l=b;HEAP32[o>>2]=0;HEAP32[p>>2]=0;e=0!=(l|0)?3:4;break;case 3:m=HEAP32[(i+16|0)>>2];n=HEAP32[(i+20|0)>>2];e=5;break;case 4:m=HEAP32[(i+24|0)>>2];n=HEAP32[(i+28|0)>>2];e=5;break;case 5:e=6;break;case 6:e=0!=(m|0)?7:9;break;case 7:_UnionRangeMinMaxValueWithList(g,m,
n,o,p);e=8;break;case 8:m=HEAP32[(m+12|0)>>2];n=HEAP32[(n+12|0)>>2];e=6;break;case 9:e=0!=(l|0)?10:11;break;case 10:m=HEAP32[(j+16|0)>>2];n=HEAP32[(j+20|0)>>2];e=12;break;case 11:m=HEAP32[(j+24|0)>>2];n=HEAP32[(j+28|0)>>2];e=12;break;case 12:e=13;break;case 13:e=0!=(m|0)?14:16;break;case 14:_UnionRangeMinMaxValueWithList(g,m,n,o,p);e=15;break;case 15:m=HEAP32[(m+12|0)>>2];n=HEAP32[(n+12|0)>>2];e=13;break;case 16:e=0!=(HEAP32[o>>2]|0)?17:21;break;case 17:e=0!=(l|0)?18:19;break;case 18:_ReturnExpression(g,
HEAP32[(k+16|0)>>2]);_ReturnExpression(g,HEAP32[(k+20|0)>>2]);HEAP32[(k+16|0)>>2]=HEAP32[o>>2];HEAP32[(k+20|0)>>2]=HEAP32[p>>2];e=20;break;case 19:_ReturnExpression(g,HEAP32[(k+24|0)>>2]);_ReturnExpression(g,HEAP32[(k+28|0)>>2]);HEAP32[(k+24|0)>>2]=HEAP32[o>>2];HEAP32[(k+28|0)>>2]=HEAP32[p>>2];e=20;break;case 20:e=27;break;case 21:e=0!=(l|0)?22:25;break;case 22:e=0!=(HEAP32[k>>2]&1|0)?23:24;break;case 23:_SetAnyAllowedFlags(k,0);e=24;break;case 24:e=k;HEAP32[e>>2]&=-17;e=k;HEAP32[e>>2]&=-9;e=26;break;
case 25:_SetAnyAllowedFlags(k,1);e=k;HEAP32[e>>2]=HEAP32[e>>2]&-2|1;e=26;break;case 26:e=27;break;case 27:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_UnionNumericExpressions.X=1;
function _RemoveConstantFromConstraint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;k=0;b=0==(i|0)?3:4;break;case 3:b=15;break;case 4:j=HEAP32[(i+12|0)>>2];HEAP32[(i+12|0)>>2]=0;b=5;break;case 5:b=0!=(j|0)?6:14;break;case 6:b=(HEAPU16[(j|0)>>1]&65535|0)!=(e|0)?8:7;break;case 7:b=(HEAP32[(j+4|0)>>2]|0)!=(g|0)?8:12;break;case 8:b=0==(k|0)?9:10;break;case 9:HEAP32[(i+12|0)>>2]=j;b=11;break;case 10:HEAP32[(k+12|0)>>2]=j;b=11;break;case 11:k=j;j=HEAP32[(j+12|0)>>2];HEAP32[(k+
12|0)>>2]=0;b=13;break;case 12:b=j;j=HEAP32[(j+12|0)>>2];HEAP32[(b+12|0)>>2]=0;_ReturnExpression(d,b);b=13;break;case 13:b=5;break;case 14:_UpdateRestrictionFlags(i);b=15;break;case 15:return;default:assert(0,"bad label: "+b)}}_RemoveConstantFromConstraint.X=1;
function _AddToUnionList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;b=3;break;case 3:b=0!=(e|0)?4:17;break;case 4:k=1;j=g;b=5;break;case 5:b=0!=(j|0)?6:11;break;case 6:b=(HEAPU16[(e|0)>>1]&65535|0)==(HEAPU16[(j|0)>>1]&65535|0)?7:9;break;case 7:b=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[(j+4|0)>>2]|0)?8:9;break;case 8:k=0;b=11;break;case 9:b=10;break;case 10:j=HEAP32[(j+12|0)>>2];b=5;break;case 11:b=0!=(k|0)?12:15;break;case 12:b=0!=(_RestrictionOnType(HEAPU16[(e|0)>>1]&65535,
i)|0)?13:14;break;case 13:j=_GenConstant(d,HEAP16[(e|0)>>1],HEAP32[(e+4|0)>>2]);HEAP32[(j+12|0)>>2]=g;g=j;b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:e=HEAP32[(e+12|0)>>2];b=3;break;case 17:return g;default:assert(0,"bad label: "+b)}}_AddToUnionList.X=1;
function _FindItemInExpression(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;b=3;break;case 3:b=0!=(j|0)?4:12;break;case 4:b=(HEAPU16[(j|0)>>1]&65535|0)==(e|0)?5:11;break;case 5:b=0!=(i|0)?7:6;break;case 6:d=1;b=13;break;case 7:b=(HEAP32[(j+4|0)>>2]|0)==(g|0)?8:9;break;case 8:d=1;b=13;break;case 9:b=10;break;case 10:b=11;break;case 11:j=HEAP32[(j+12|0)>>2];b=3;break;case 12:d=0;b=13;break;case 13:return d;default:assert(0,"bad label: "+b)}}
function _UnionRangeMinMaxValueWithList(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v;e=h;g=f;i=c;j=a;k=b;d=0==(HEAP32[j>>2]|0)?3:4;break;case 3:d=_GenConstant(e,HEAP16[(g|0)>>1],HEAP32[(g+4|0)>>2]);HEAP32[j>>2]=d;d=_GenConstant(e,HEAP16[(i|0)>>1],HEAP32[(i+4|0)>>2]);HEAP32[k>>2]=d;d=36;break;case 4:o=n=0;l=HEAP32[j>>2];m=HEAP32[k>>2];d=5;break;case 5:d=0!=(l|0)?6:26;break;case 6:t=_CompareNumbers(e,HEAPU16[(i|0)>>1]&65535,HEAP32[(i+4|0)>>2],HEAPU16[(m|0)>>1]&65535,
HEAP32[(m+4|0)>>2]);u=_CompareNumbers(e,HEAPU16[(g|0)>>1]&65535,HEAP32[(g+4|0)>>2],HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2]);s=_CompareNumbers(e,HEAPU16[(i|0)>>1]&65535,HEAP32[(i+4|0)>>2],HEAPU16[(l|0)>>1]&65535,HEAP32[(l+4|0)>>2]);v=_CompareNumbers(e,HEAPU16[(g|0)>>1]&65535,HEAP32[(g+4|0)>>2],HEAPU16[(m|0)>>1]&65535,HEAP32[(m+4|0)>>2]);d=0==(t|0)?8:7;break;case 7:d=2==(t|0)?8:11;break;case 8:d=1==(u|0)?10:9;break;case 9:d=2==(u|0)?10:11;break;case 10:d=36;break;case 11:d=1==(t|0)?12:15;break;case 12:d=
0==(v|0)?14:13;break;case 13:d=2==(v|0)?14:15;break;case 14:HEAP16[(m|0)>>1]=HEAP16[(i|0)>>1];HEAP32[(m+4|0)>>2]=HEAP32[(i+4|0)>>2];d=15;break;case 15:d=0==(u|0)?16:19;break;case 16:d=1==(s|0)?18:17;break;case 17:d=2==(s|0)?18:19;break;case 18:HEAP16[(l|0)>>1]=HEAP16[(g|0)>>1];HEAP32[(l+4|0)>>2]=HEAP32[(g+4|0)>>2];d=19;break;case 19:d=0==(s|0)?20:25;break;case 20:d=0==(o|0)?21:22;break;case 21:d=_GenConstant(e,HEAP16[(g|0)>>1],HEAP32[(g+4|0)>>2]);p=_GenConstant(e,HEAP16[(i|0)>>1],HEAP32[(i+4|0)>>
2]);HEAP32[(d+12|0)>>2]=HEAP32[j>>2];HEAP32[(p+12|0)>>2]=HEAP32[k>>2];HEAP32[j>>2]=d;HEAP32[k>>2]=p;d=36;break;case 22:d=1==(_CompareNumbers(e,HEAPU16[(g|0)>>1]&65535,HEAP32[(g+4|0)>>2],HEAPU16[(o|0)>>1]&65535,HEAP32[(o+4|0)>>2])|0)?23:24;break;case 23:d=_GenConstant(e,HEAP16[(g|0)>>1],HEAP32[(g+4|0)>>2]);p=_GenConstant(e,HEAP16[(i|0)>>1],HEAP32[(i+4|0)>>2]);HEAP32[(d+12|0)>>2]=HEAP32[(n+12|0)>>2];HEAP32[(p+12|0)>>2]=HEAP32[(o+12|0)>>2];HEAP32[(n+12|0)>>2]=d;HEAP32[(o+12|0)>>2]=p;d=36;break;case 24:d=
25;break;case 25:l=HEAP32[(l+12|0)>>2];m=HEAP32[(m+12|0)>>2];d=5;break;case 26:l=HEAP32[j>>2];m=HEAP32[k>>2];d=27;break;case 27:d=0!=(l|0)?28:36;break;case 28:q=HEAP32[(l+12|0)>>2];r=HEAP32[(m+12|0)>>2];d=0!=(q|0)?29:34;break;case 29:s=_CompareNumbers(e,HEAPU16[(m|0)>>1]&65535,HEAP32[(m+4|0)>>2],HEAPU16[(q|0)>>1]&65535,HEAP32[(q+4|0)>>2]);d=1==(s|0)?31:30;break;case 30:d=2==(s|0)?31:32;break;case 31:HEAP16[(m|0)>>1]=HEAP16[(r|0)>>1];HEAP32[(m+4|0)>>2]=HEAP32[(r+4|0)>>2];HEAP32[(m+12|0)>>2]=HEAP32[(r+
12|0)>>2];HEAP32[(l+12|0)>>2]=HEAP32[(q+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=33;break;case 32:l=HEAP32[(l+12|0)>>2];m=HEAP32[(m+12|0)>>2];d=33;break;case 33:d=35;break;case 34:l=q;m=r;d=35;break;case 35:d=27;break;case 36:return;default:assert(0,"bad label: "+d)}}_UnionRangeMinMaxValueWithList.X=1;
function _InitializeConstraintParseRecord(h){HEAP32[h>>2]&=-2;HEAP32[h>>2]&=-3;HEAP32[h>>2]&=-5;HEAP32[h>>2]&=-9;HEAP32[h>>2]&=-17;HEAP32[h>>2]&=-65;HEAP32[h>>2]&=-33;HEAP32[h>>2]&=-129;HEAP32[h>>2]&=-257;HEAP32[h>>2]&=-1025;HEAP32[h>>2]&=-513;HEAP32[h>>2]&=-2049}_InitializeConstraintParseRecord.X=1;
function _CheckConstraintParseConflicts(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=1==(HEAP32[d>>2]&1|0)?3:4;break;case 3:c=38;break;case 4:c=0!=(HEAPU32[d>>2]>>>11&1|0)?5:7;break;case 5:c=0==(HEAPU32[d>>2]>>>1&1|0)?6:7;break;case 6:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str1732|0);a=0;c=60;break;case 7:c=0!=(HEAPU32[d>>2]>>>12&1|0)?8:10;break;case 8:c=0==(HEAPU32[d>>2]>>>2&1|0)?9:10;break;case 9:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|
0,STRING_TABLE.__str2733|0);a=0;c=60;break;case 10:c=0!=(HEAPU32[d>>2]>>>14&1|0)?11:13;break;case 11:c=0==(HEAPU32[d>>2]>>>4&1|0)?12:13;break;case 12:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str3734|0);a=0;c=60;break;case 13:c=0!=(HEAPU32[d>>2]>>>13&1|0)?14:16;break;case 14:c=0==(HEAPU32[d>>2]>>>3&1|0)?15:16;break;case 15:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str4735|0);a=0;c=60;break;case 16:c=0!=(HEAPU32[d>>2]>>>15&1|0)?17:20;break;
case 17:c=0==(HEAPU32[d>>2]>>>6&1|0)?18:20;break;case 18:c=0==(HEAPU32[d>>2]>>>5&1|0)?19:20;break;case 19:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str5736|0);a=0;c=60;break;case 20:c=0!=(HEAPU32[d>>2]>>>16&1|0)?21:23;break;case 21:c=0==(HEAPU32[d>>2]>>>5&1|0)?22:23;break;case 22:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str6737|0);a=0;c=60;break;case 23:c=0!=(HEAPU32[d>>2]>>>10&1|0)?24:31;break;case 24:e=HEAP32[(d+12|0)>>2];c=25;break;case 25:c=
0!=(e|0)?26:30;break;case 26:c=0!=(_ConstraintCheckValue(b,HEAPU16[(e|0)>>1]&65535,HEAP32[(e+4|0)>>2],d)|0)?27:28;break;case 27:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str7738|0);a=0;c=60;break;case 28:c=29;break;case 29:e=HEAP32[(e+12|0)>>2];c=25;break;case 30:c=31;break;case 31:c=32;break;case 32:c=33;break;case 33:c=34;break;case 34:c=35;break;case 35:c=36;break;case 36:c=37;break;case 37:c=38;break;case 38:c=0!=(HEAP32[(d+20|0)>>2]|0)?39:46;break;case 39:c=0==(HEAP32[d>>
2]&1|0)?40:46;break;case 40:c=1==(HEAPU16[(HEAP32[(d+20|0)>>2]|0)>>1]&65535|0)?41:42;break;case 41:c=0==(HEAPU32[d>>2]>>>4&1|0)?44:42;break;case 42:c=0==(HEAPU16[(HEAP32[(d+20|0)>>2]|0)>>1]&65535|0)?43:45;break;case 43:c=0==(HEAPU32[d>>2]>>>3&1|0)?44:45;break;case 44:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str8739|0);a=0;c=60;break;case 45:c=46;break;case 46:c=0!=(HEAP32[(d+16|0)>>2]|0)?47:54;break;case 47:c=0==(HEAP32[d>>2]&1|0)?48:54;break;case 48:c=1==(HEAPU16[(HEAP32[(d+
16|0)>>2]|0)>>1]&65535|0)?49:50;break;case 49:c=0==(HEAPU32[d>>2]>>>4&1|0)?52:50;break;case 50:c=0==(HEAPU16[(HEAP32[(d+16|0)>>2]|0)>>1]&65535|0)?51:53;break;case 51:c=0==(HEAPU32[d>>2]>>>3&1|0)?52:53;break;case 52:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str8739|0);a=0;c=60;break;case 53:c=54;break;case 54:c=0!=(HEAP32[(d+8|0)>>2]|0)?55:59;break;case 55:c=0==(HEAP32[d>>2]&1|0)?56:59;break;case 56:c=0==(HEAPU32[d>>2]>>>5&1|0)?57:59;break;case 57:c=0==(HEAPU32[d>>2]>>>
6&1|0)?58:59;break;case 58:_AttributeConflictErrorMessage(b,STRING_TABLE.__str731|0,STRING_TABLE.__str9740|0);a=0;c=60;break;case 59:a=1;c=60;break;case 60:return a;default:assert(0,"bad label: "+c)}}_CheckConstraintParseConflicts.X=1;
function _AttributeConflictErrorMessage(h,f,c){_PrintErrorID(h,STRING_TABLE.__str10741|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str12743|0);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,f);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str13744|0);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,c);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str14745|0)}
function _StandardConstraint(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(_strcmp(a,STRING_TABLE.__str731|0)|0)?14:3;break;case 3:f=0==(_strcmp(a,STRING_TABLE.__str8739|0)|0)?14:4;break;case 4:f=0==(_strcmp(a,STRING_TABLE.__str15746|0)|0)?14:5;break;case 5:f=0==(_strcmp(a,STRING_TABLE.__str1732|0)|0)?14:6;break;case 6:f=0==(_strcmp(a,STRING_TABLE.__str2733|0)|0)?14:7;break;case 7:f=0==(_strcmp(a,STRING_TABLE.__str16747|0)|0)?14:8;break;case 8:f=0==(_strcmp(a,STRING_TABLE.__str17748|0)|0)?
14:9;break;case 9:f=0==(_strcmp(a,STRING_TABLE.__str18749|0)|0)?14:10;break;case 10:f=0==(_strcmp(a,STRING_TABLE.__str19750|0)|0)?14:11;break;case 11:f=0==(_strcmp(a,STRING_TABLE.__str6737|0)|0)?14:12;break;case 12:f=0==(_strcmp(a,STRING_TABLE.__str5736|0)|0)?14:13;break;case 13:f=0==(_strcmp(a,STRING_TABLE.__str7738|0)|0)?14:15;break;case 14:c=1;f=16;break;case 15:c=0;f=16;break;case 16:return c;default:assert(0,"bad label: "+f)}}_StandardConstraint.X=1;
function _ParseStandardConstraint(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;o=0;e=0!=(_GetAttributeParseValue(k,m)|0)?3:4;break;case 3:_AlreadyParsedErrorMessage(i,k,STRING_TABLE.__str20751|0);g=0;e=24;break;case 4:e=0==(_strcmp(k,STRING_TABLE.__str8739|0)|0)?5:6;break;case 5:o=_ParseRangeCardinalityAttribute(i,j,l,m,k,n);e=23;break;case 6:e=0==(_strcmp(k,STRING_TABLE.__str15746|0)|0)?7:8;break;case 7:o=_ParseRangeCardinalityAttribute(i,j,l,m,k,n);e=
22;break;case 8:e=0==(_strcmp(k,STRING_TABLE.__str731|0)|0)?9:10;break;case 9:o=_ParseTypeAttribute(i,j,l);e=21;break;case 10:e=0==(_strcmp(k,STRING_TABLE.__str1732|0)|0)?19:11;break;case 11:e=0==(_strcmp(k,STRING_TABLE.__str2733|0)|0)?19:12;break;case 12:e=0==(_strcmp(k,STRING_TABLE.__str16747|0)|0)?19:13;break;case 13:e=0==(_strcmp(k,STRING_TABLE.__str17748|0)|0)?19:14;break;case 14:e=0==(_strcmp(k,STRING_TABLE.__str18749|0)|0)?19:15;break;case 15:e=0==(_strcmp(k,STRING_TABLE.__str19750|0)|0)?19:
16;break;case 16:e=0==(_strcmp(k,STRING_TABLE.__str6737|0)|0)?19:17;break;case 17:e=0==(_strcmp(k,STRING_TABLE.__str5736|0)|0)?19:18;break;case 18:e=0==(_strcmp(k,STRING_TABLE.__str7738|0)|0)?19:20;break;case 19:o=_ParseAllowedValuesAttribute(i,j,k,l,m);e=20;break;case 20:e=21;break;case 21:e=22;break;case 22:e=23;break;case 23:_SetParseFlag(m,k);g=o;e=24;break;case 24:return g;default:assert(0,"bad label: "+e)}}_ParseStandardConstraint.X=1;
function _GetAttributeParseValue(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(_strcmp(b,STRING_TABLE.__str731|0)|0)?3:4;break;case 3:a=HEAP32[d>>2]&1;c=38;break;case 4:c=0==(_strcmp(b,STRING_TABLE.__str8739|0)|0)?5:6;break;case 5:a=HEAPU32[d>>2]>>>1&1;c=38;break;case 6:c=0==(_strcmp(b,STRING_TABLE.__str15746|0)|0)?7:8;break;case 7:a=HEAPU32[d>>2]>>>11&1;c=38;break;case 8:c=0==(_strcmp(b,STRING_TABLE.__str7738|0)|0)?9:10;break;case 9:a=HEAPU32[d>>2]>>>8&1;c=38;break;case 10:c=0==(_strcmp(b,
STRING_TABLE.__str1732|0)|0)?11:12;break;case 11:a=HEAPU32[d>>2]>>>2&1;c=38;break;case 12:c=0==(_strcmp(b,STRING_TABLE.__str2733|0)|0)?13:14;break;case 13:a=HEAPU32[d>>2]>>>3&1;c=38;break;case 14:c=0==(_strcmp(b,STRING_TABLE.__str16747|0)|0)?15:16;break;case 15:a=HEAPU32[d>>2]>>>4&1;c=38;break;case 16:c=0==(_strcmp(b,STRING_TABLE.__str6737|0)|0)?17:18;break;case 17:a=HEAPU32[d>>2]>>>10&1;c=38;break;case 18:c=0==(_strcmp(b,STRING_TABLE.__str5736|0)|0)?19:20;break;case 19:a=HEAPU32[d>>2]>>>9&1;c=38;
break;case 20:c=0==(_strcmp(b,STRING_TABLE.__str17748|0)|0)?21:22;break;case 21:a=HEAPU32[d>>2]>>>6&1;c=38;break;case 22:c=0==(_strcmp(b,STRING_TABLE.__str18749|0)|0)?23:24;break;case 23:a=HEAPU32[d>>2]>>>5&1;c=38;break;case 24:c=0==(_strcmp(b,STRING_TABLE.__str19750|0)|0)?25:26;break;case 25:a=HEAPU32[d>>2]>>>7&1;c=38;break;case 26:c=27;break;case 27:c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=31;break;case 31:c=32;break;case 32:c=33;break;case 33:c=34;break;case 34:c=35;break;case 35:c=
36;break;case 36:c=37;break;case 37:a=1;c=38;break;case 38:return a;default:assert(0,"bad label: "+c)}}_GetAttributeParseValue.X=1;
function _ParseRangeCardinalityAttribute(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=252;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s=e+12,t=e+132;j=h;k=f;l=c;m=a;n=b;o=d;r=0;g=0==(_strcmp(n,STRING_TABLE.__str8739|0)|0)?3:4;break;case 3:q=m;HEAP32[q>>2]=HEAP32[q>>2]&-3|2;q=1;g=5;break;case 4:q=m;HEAP32[q>>2]=HEAP32[q>>2]&-2049|2048;q=0;g=5;break;case 5:g=0==(q|0)?6:8;break;case 6:g=0==(o|0)?7:8;break;
case 7:_PrintErrorID(j,STRING_TABLE.__str10741|0,5,1);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str21752|0);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str22753|0);i=0;g=59;break;case 8:g=1==(q|0)?9:25;break;case 9:g=0!=(HEAPU32[m>>2]>>>8&1|0)?13:10;break;case 10:g=0!=(HEAPU32[m>>2]>>>7&1|0)?13:11;break;case 11:g=0!=(HEAPU32[m>>2]>>>6&1|0)?13:12;break;case 12:g=0!=(HEAPU32[m>>2]>>>5&1|0)?13:25;break;case 13:g=0!=(HEAPU32[m>>2]>>>8&1|0)?14:15;break;case 14:r=STRING_TABLE.__str7738|
0;g=24;break;case 15:g=0!=(HEAPU32[m>>2]>>>6&1|0)?16:17;break;case 16:r=STRING_TABLE.__str17748|0;g=23;break;case 17:g=0!=(HEAPU32[m>>2]>>>5&1|0)?18:19;break;case 18:r=STRING_TABLE.__str18749|0;g=22;break;case 19:g=0!=(HEAPU32[m>>2]>>>7&1|0)?20:21;break;case 20:r=STRING_TABLE.__str19750|0;g=21;break;case 21:g=22;break;case 22:g=23;break;case 23:g=24;break;case 24:_NoConjunctiveUseError(j,STRING_TABLE.__str8739|0,r);i=0;g=59;break;case 25:_SavePPBuffer(j,STRING_TABLE.__str23754|0);_GetToken(j,k,p);
g=1==(HEAPU16[(p|0)>>1]&65535|0)?28:26;break;case 26:g=0==(HEAPU16[(p|0)>>1]&65535|0)?27:32;break;case 27:g=0!=(q|0)?28:32;break;case 28:g=0!=(q|0)?29:30;break;case 29:_ReturnExpression(j,HEAP32[(l+16|0)>>2]);g=_GenConstant(j,HEAP16[(p|0)>>1],HEAP32[(p+4|0)>>2]);HEAP32[(l+16|0)>>2]=g;g=31;break;case 30:_ReturnExpression(j,HEAP32[(l+24|0)>>2]);g=_GenConstant(j,HEAP16[(p|0)>>1],HEAP32[(p+4|0)>>2]);HEAP32[(l+24|0)>>2]=g;g=31;break;case 31:g=37;break;case 32:g=35==(HEAPU16[(p|0)>>1]&65535|0)?33:35;break;
case 33:g=0==(_strcmp(HEAP32[(p+8|0)>>2],STRING_TABLE.__str24755|0)|0)?34:35;break;case 34:g=36;break;case 35:i=n;_sprintf(s|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));_SyntaxErrorMessage(j,s|0);i=0;g=59;break;case 36:g=37;break;case 37:_SavePPBuffer(j,STRING_TABLE.__str23754|0);_GetToken(j,k,p);g=1==(HEAPU16[(p|0)>>1]&65535|0)?40:38;break;case 38:g=0==(HEAPU16[(p|0)>>1]&65535|0)?39:44;break;case 39:g=
0!=(q|0)?40:44;break;case 40:g=0!=(q|0)?41:42;break;case 41:_ReturnExpression(j,HEAP32[(l+20|0)>>2]);g=_GenConstant(j,HEAP16[(p|0)>>1],HEAP32[(p+4|0)>>2]);HEAP32[(l+20|0)>>2]=g;g=43;break;case 42:_ReturnExpression(j,HEAP32[(l+28|0)>>2]);g=_GenConstant(j,HEAP16[(p|0)>>1],HEAP32[(p+4|0)>>2]);HEAP32[(l+28|0)>>2]=g;g=43;break;case 43:g=49;break;case 44:g=35==(HEAPU16[(p|0)>>1]&65535|0)?45:47;break;case 45:g=0==(_strcmp(HEAP32[(p+8|0)>>2],STRING_TABLE.__str24755|0)|0)?46:47;break;case 46:g=48;break;case 47:i=
n;_sprintf(t|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));_SyntaxErrorMessage(j,t|0);i=0;g=59;break;case 48:g=49;break;case 49:_GetToken(j,k,p);g=171!=(HEAPU16[(p|0)>>1]&65535|0)?50:51;break;case 50:_SyntaxErrorMessage(j,STRING_TABLE.__str26757|0);i=0;g=59;break;case 51:g=0!=(q|0)?52:55;break;case 52:g=1==(_CompareNumbers(j,HEAPU16[(HEAP32[(l+16|0)>>2]|0)>>1]&65535,HEAP32[(HEAP32[(l+16|0)>>2]+4|0)>>
2],HEAPU16[(HEAP32[(l+20|0)>>2]|0)>>1]&65535,HEAP32[(HEAP32[(l+20|0)>>2]+4|0)>>2])|0)?53:54;break;case 53:_PrintErrorID(j,STRING_TABLE.__str10741|0,2,1);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str27758|0);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str28759|0);i=0;g=59;break;case 54:g=58;break;case 55:g=1==(_CompareNumbers(j,HEAPU16[(HEAP32[(l+24|0)>>2]|0)>>1]&65535,HEAP32[(HEAP32[(l+24|0)>>2]+4|0)>>2],HEAPU16[(HEAP32[(l+28|0)>>2]|0)>>1]&65535,HEAP32[(HEAP32[(l+28|
0)>>2]+4|0)>>2])|0)?56:57;break;case 56:_PrintErrorID(j,STRING_TABLE.__str10741|0,2,1);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str29760|0);_EnvPrintRouter(j,STRING_TABLE.__str11742|0,STRING_TABLE.__str30761|0);i=0;g=59;break;case 57:g=58;break;case 58:i=1;g=59;break;case 59:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ParseRangeCardinalityAttribute.X=1;
function _ParseTypeAttribute(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m=a;e=h;g=f;i=c;k=j=0;_SavePPBuffer(e,STRING_TABLE.__str23754|0);_GetToken(e,g,m);b=3;break;case 3:b=171!=(HEAPU16[(m|0)>>1]&65535|0)?4:23;break;case 4:_SavePPBuffer(e,STRING_TABLE.__str23754|0);b=2==(HEAPU16[(m|0)>>1]&65535|0)?5:12;break;case 5:b=1==(k|0)?6:7;break;case 6:_SyntaxErrorMessage(e,STRING_TABLE.__str33764|
0);d=0;b=27;break;case 7:l=_GetConstraintTypeFromTypeName(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2]);b=0>(l|0)?8:9;break;case 8:_SyntaxErrorMessage(e,STRING_TABLE.__str33764|0);d=0;b=27;break;case 9:b=0!=(_SetConstraintType(l,i)|0)?10:11;break;case 10:_SyntaxErrorMessage(e,STRING_TABLE.__str33764|0);d=0;b=27;break;case 11:b=i;HEAP32[b>>2]&=-2;j=1;b=21;break;case 12:b=35==(HEAPU16[(m|0)>>1]&65535|0)?13:19;break;case 13:b=0!=(_strcmp(HEAP32[(m+8|0)>>2],STRING_TABLE.__str24755|0)|0)?14:15;break;case 14:_SyntaxErrorMessage(e,
STRING_TABLE.__str33764|0);d=0;b=27;break;case 15:b=0!=(j|0)?17:16;break;case 16:b=0!=(k|0)?17:18;break;case 17:_SyntaxErrorMessage(e,STRING_TABLE.__str33764|0);d=0;b=27;break;case 18:k=1;b=20;break;case 19:_SyntaxErrorMessage(e,STRING_TABLE.__str33764|0);d=0;b=27;break;case 20:b=21;break;case 21:b=22;break;case 22:_GetToken(e,g,m);b=3;break;case 23:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str34765|0);b=0!=(j|0)?26:24;break;case 24:b=0!=(k|0)?26:25;break;case 25:_SyntaxErrorMessage(e,
STRING_TABLE.__str33764|0);d=0;b=27;break;case 26:d=1;b=27;break;case 27:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseTypeAttribute.X=1;
function _ParseAllowedValuesAttribute(h,f,c,a,b){var d=STACKTOP;STACKTOP+=492;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o,p,q,r,s,t,u,v,w=d+12,x=d+132,y=d+252,A=d+372;i=h;j=f;k=c;l=a;m=b;v=u=t=q=0;e=0==(_strcmp(k,STRING_TABLE.__str7738|0)|0)?3:31;break;case 3:e=0!=(HEAPU32[m>>2]>>>2&1|0)?10:4;break;case 4:e=0!=(HEAPU32[m>>2]>>>3&1|0)?10:5;break;case 5:e=0!=(HEAPU32[m>>2]>>>4&1|0)?10:6;break;case 6:e=
0!=(HEAPU32[m>>2]>>>6&1|0)?10:7;break;case 7:e=0!=(HEAPU32[m>>2]>>>5&1|0)?10:8;break;case 8:e=0!=(HEAPU32[m>>2]>>>7&1|0)?10:9;break;case 9:e=0!=(HEAPU32[m>>2]>>>10&1|0)?10:31;break;case 10:e=0!=(HEAPU32[m>>2]>>>2&1|0)?11:12;break;case 11:v=STRING_TABLE.__str1732|0;e=30;break;case 12:e=0!=(HEAPU32[m>>2]>>>3&1|0)?13:14;break;case 13:v=STRING_TABLE.__str2733|0;e=29;break;case 14:e=0!=(HEAPU32[m>>2]>>>4&1|0)?15:16;break;case 15:v=STRING_TABLE.__str16747|0;e=28;break;case 16:e=0!=(HEAPU32[m>>2]>>>6&1|
0)?17:18;break;case 17:v=STRING_TABLE.__str17748|0;e=27;break;case 18:e=0!=(HEAPU32[m>>2]>>>5&1|0)?19:20;break;case 19:v=STRING_TABLE.__str18749|0;e=26;break;case 20:e=0!=(HEAPU32[m>>2]>>>7&1|0)?21:22;break;case 21:v=STRING_TABLE.__str19750|0;e=25;break;case 22:e=0!=(HEAPU32[m>>2]>>>10&1|0)?23:24;break;case 23:v=STRING_TABLE.__str6737|0;e=24;break;case 24:e=25;break;case 25:e=26;break;case 26:e=27;break;case 27:e=28;break;case 28:e=29;break;case 29:e=30;break;case 30:_NoConjunctiveUseError(i,STRING_TABLE.__str7738|
0,v);g=0;e=133;break;case 31:e=0==(_strcmp(k,STRING_TABLE.__str7738|0)|0)?35:32;break;case 32:e=0==(_strcmp(k,STRING_TABLE.__str19750|0)|0)?35:33;break;case 33:e=0==(_strcmp(k,STRING_TABLE.__str17748|0)|0)?35:34;break;case 34:e=0==(_strcmp(k,STRING_TABLE.__str18749|0)|0)?35:37;break;case 35:e=0!=(HEAPU32[m>>2]>>>1&1|0)?36:37;break;case 36:_NoConjunctiveUseError(i,k,STRING_TABLE.__str8739|0);g=0;e=133;break;case 37:e=0!=(_strcmp(k,STRING_TABLE.__str7738|0)|0)?38:40;break;case 38:e=0!=(HEAPU32[m>>2]>>>
8&1|0)?39:40;break;case 39:_NoConjunctiveUseError(i,k,STRING_TABLE.__str7738|0);g=0;e=133;break;case 40:e=0==(_strcmp(k,STRING_TABLE.__str19750|0)|0)?41:47;break;case 41:e=0!=(HEAPU32[m>>2]>>>5&1|0)?43:42;break;case 42:e=0!=(HEAPU32[m>>2]>>>6&1|0)?43:47;break;case 43:e=0!=(HEAPU32[m>>2]>>>5&1|0)?44:45;break;case 44:v=STRING_TABLE.__str18749|0;e=46;break;case 45:v=STRING_TABLE.__str17748|0;e=46;break;case 46:_NoConjunctiveUseError(i,STRING_TABLE.__str19750|0,v);g=0;e=133;break;case 47:e=0==(_strcmp(k,
STRING_TABLE.__str17748|0)|0)?49:48;break;case 48:e=0==(_strcmp(k,STRING_TABLE.__str18749|0)|0)?49:51;break;case 49:e=0!=(HEAPU32[m>>2]>>>7&1|0)?50:51;break;case 50:_NoConjunctiveUseError(i,k,STRING_TABLE.__str46777|0);g=0;e=133;break;case 51:e=0==(_strcmp(k,STRING_TABLE.__str16747|0)|0)?52:58;break;case 52:e=0!=(HEAPU32[m>>2]>>>2&1|0)?54:53;break;case 53:e=0!=(HEAPU32[m>>2]>>>3&1|0)?54:58;break;case 54:e=0!=(HEAPU32[m>>2]>>>2&1|0)?55:56;break;case 55:v=STRING_TABLE.__str1732|0;e=57;break;case 56:v=
STRING_TABLE.__str2733|0;e=57;break;case 57:_NoConjunctiveUseError(i,STRING_TABLE.__str16747|0,v);g=0;e=133;break;case 58:e=0==(_strcmp(k,STRING_TABLE.__str1732|0)|0)?60:59;break;case 59:e=0==(_strcmp(k,STRING_TABLE.__str2733|0)|0)?60:62;break;case 60:e=0!=(HEAPU32[m>>2]>>>4&1|0)?61:62;break;case 61:_NoConjunctiveUseError(i,k,STRING_TABLE.__str16747|0);g=0;e=133;break;case 62:p=_GetConstraintTypeFromAllowedName(k);_SetRestrictionFlag(p,l,1);e=0==(_strcmp(k,STRING_TABLE.__str5736|0)|0)?63:64;break;
case 63:o=2;e=65;break;case 64:o=p;e=65;break;case 65:e=0==(_strcmp(k,STRING_TABLE.__str5736|0)|0)?66:67;break;case 66:s=HEAP32[(l+8|0)>>2];e=68;break;case 67:s=HEAP32[(l+12|0)>>2];e=68;break;case 68:e=0!=(s|0)?69:73;break;case 69:e=70;break;case 70:e=0!=(HEAP32[(s+12|0)>>2]|0)?71:72;break;case 71:s=HEAP32[(s+12|0)>>2];e=70;break;case 72:e=73;break;case 73:_SavePPBuffer(i,STRING_TABLE.__str23754|0);_GetToken(i,j,n);e=74;break;case 74:e=171!=(HEAPU16[(n|0)>>1]&65535|0)?75:117;break;case 75:_SavePPBuffer(i,
STRING_TABLE.__str23754|0);e=HEAPU16[(n|0)>>1]&65535;e=1==(e|0)?76:0==(e|0)?81:3==(e|0)?86:2==(e|0)?91:8==(e|0)?96:35==(e|0)?100:104;break;case 76:e=173!=(o|0)?77:80;break;case 77:e=1!=(o|0)?78:80;break;case 78:e=180!=(o|0)?79:80;break;case 79:q=1;e=80;break;case 80:t=1;e=105;break;case 81:e=173!=(o|0)?82:85;break;case 82:e=0!=(o|0)?83:85;break;case 83:e=180!=(o|0)?84:85;break;case 84:q=1;e=85;break;case 85:t=1;e=105;break;case 86:e=173!=(o|0)?87:90;break;case 87:e=3!=(o|0)?88:90;break;case 88:e=
181!=(o|0)?89:90;break;case 89:q=1;e=90;break;case 90:t=1;e=105;break;case 91:e=173!=(o|0)?92:95;break;case 92:e=2!=(o|0)?93:95;break;case 93:e=181!=(o|0)?94:95;break;case 94:q=1;e=95;break;case 95:t=1;e=105;break;case 96:e=173!=(o|0)?97:99;break;case 97:e=8!=(o|0)?98:99;break;case 98:q=1;e=99;break;case 99:t=1;e=105;break;case 100:e=0==(_strcmp(HEAP32[(n+8|0)>>2],STRING_TABLE.__str24755|0)|0)?101:102;break;case 101:u=1;e=103;break;case 102:g=k;_sprintf(w|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,
STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));_SyntaxErrorMessage(i,w|0);g=0;e=133;break;case 103:e=105;break;case 104:g=k;_sprintf(x|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));_SyntaxErrorMessage(i,x|0);g=0;e=133;break;case 105:e=0!=(q|0)?106:107;break;case 106:_PrintErrorID(i,STRING_TABLE.__str10741|0,4,1);_EnvPrintRouter(i,STRING_TABLE.__str11742|
0,STRING_TABLE.__str47778|0);_EnvPrintRouter(i,STRING_TABLE.__str11742|0,k);_EnvPrintRouter(i,STRING_TABLE.__str11742|0,STRING_TABLE.__str48779|0);g=0;e=133;break;case 107:e=0!=(t|0)?108:110;break;case 108:e=0!=(u|0)?109:110;break;case 109:g=k;_sprintf(y|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));_SyntaxErrorMessage(i,y|0);g=0;e=133;break;case 110:r=_GenConstant(i,HEAP16[(n|0)>>1],HEAP32[(n+4|0)>>
2]);e=0==(s|0)?111:115;break;case 111:e=0==(_strcmp(k,STRING_TABLE.__str5736|0)|0)?112:113;break;case 112:HEAP32[(l+8|0)>>2]=r;e=114;break;case 113:HEAP32[(l+12|0)>>2]=r;e=114;break;case 114:e=116;break;case 115:HEAP32[(s+12|0)>>2]=r;e=116;break;case 116:s=r;_GetToken(i,j,n);e=74;break;case 117:e=0!=(t|0)?120:118;break;case 118:e=0!=(u|0)?120:119;break;case 119:g=k;_sprintf(A|0,STRING_TABLE.__str25756|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=g,tempInt));_SyntaxErrorMessage(i,A|0);g=0;e=133;break;case 120:e=0!=(u|0)?121:132;break;case 121:e=p;e=173==(e|0)?122:2==(e|0)?123:3==(e|0)?124:1==(e|0)?125:0==(e|0)?126:180==(e|0)?127:181==(e|0)?128:8==(e|0)?129:182==(e|0)?130:131;break;case 122:e=l;HEAP32[e>>2]&=-1025;e=131;break;case 123:e=l;HEAP32[e>>2]&=-2049;e=131;break;case 124:e=l;HEAP32[e>>2]&=-4097;e=131;break;case 125:e=l;HEAP32[e>>2]&=-16385;e=131;break;case 126:e=l;HEAP32[e>>2]&=-8193;e=131;break;case 127:e=l;HEAP32[e>>2]&=-8193;
e=l;HEAP32[e>>2]&=-16385;e=131;break;case 128:e=l;HEAP32[e>>2]&=-2049;e=l;HEAP32[e>>2]&=-4097;e=131;break;case 129:e=l;HEAP32[e>>2]&=-65537;e=131;break;case 130:e=l;HEAP32[e>>2]&=-32769;e=131;break;case 131:e=132;break;case 132:_PPBackup(i);_PPBackup(i);_SavePPBuffer(i,STRING_TABLE.__str34765|0);g=1;e=133;break;case 133:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_ParseAllowedValuesAttribute.X=1;
function _SetParseFlag(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(_strcmp(b,STRING_TABLE.__str8739|0)|0)?3:4;break;case 3:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=34;break;case 4:c=0==(_strcmp(b,STRING_TABLE.__str731|0)|0)?5:6;break;case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=33;break;case 6:c=0==(_strcmp(b,STRING_TABLE.__str15746|0)|0)?7:8;break;case 7:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2049|2048;c=32;break;case 8:c=0==(_strcmp(b,STRING_TABLE.__str1732|0)|0)?9:10;break;case 9:c=a;HEAP32[c>>
2]=HEAP32[c>>2]&-5|4;c=31;break;case 10:c=0==(_strcmp(b,STRING_TABLE.__str2733|0)|0)?11:12;break;case 11:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=30;break;case 12:c=0==(_strcmp(b,STRING_TABLE.__str16747|0)|0)?13:14;break;case 13:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=29;break;case 14:c=0==(_strcmp(b,STRING_TABLE.__str17748|0)|0)?15:16;break;case 15:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=28;break;case 16:c=0==(_strcmp(b,STRING_TABLE.__str18749|0)|0)?17:18;break;case 17:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|
32;c=27;break;case 18:c=0==(_strcmp(b,STRING_TABLE.__str19750|0)|0)?19:20;break;case 19:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-129|128;c=26;break;case 20:c=0==(_strcmp(b,STRING_TABLE.__str7738|0)|0)?21:22;break;case 21:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=25;break;case 22:c=0==(_strcmp(b,STRING_TABLE.__str5736|0)|0)?23:24;break;case 23:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-513|512;c=24;break;case 24:c=25;break;case 25:c=26;break;case 26:c=27;break;case 27:c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=
31;break;case 31:c=32;break;case 32:c=33;break;case 33:c=34;break;case 34:return;default:assert(0,"bad label: "+c)}}_SetParseFlag.X=1;
function _OverlayConstraint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0==(HEAP32[e>>2]&1|0)?3:4;break;case 3:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2|HEAP32[i>>2]&1;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-3|(HEAPU32[i>>2]>>>1&1)<<1;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-5|(HEAPU32[i>>2]>>>2&1)<<2;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-9|(HEAPU32[i>>2]>>>3&1)<<3;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-17|(HEAPU32[i>>2]>>>4&1)<<4;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-33|(HEAPU32[i>>2]>>>5&1)<<5;b=g;HEAP32[b>>2]=HEAP32[b>>
2]&-65|(HEAPU32[i>>2]>>>6&1)<<6;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-129|(HEAPU32[i>>2]>>>7&1)<<7;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-513|(HEAPU32[i>>2]>>>9&1)<<9;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-257|(HEAPU32[i>>2]>>>8&1)<<8;b=4;break;case 4:b=0==(HEAPU32[e>>2]>>>1&1|0)?5:6;break;case 5:_ReturnExpression(d,HEAP32[(g+16|0)>>2]);_ReturnExpression(d,HEAP32[(g+20|0)>>2]);b=_CopyExpression(d,HEAP32[(i+16|0)>>2]);HEAP32[(g+16|0)>>2]=b;b=_CopyExpression(d,HEAP32[(i+20|0)>>2]);HEAP32[(g+20|0)>>2]=b;b=6;break;case 6:b=
0==(HEAPU32[e>>2]>>>9&1|0)?7:8;break;case 7:_ReturnExpression(d,HEAP32[(g+8|0)>>2]);b=_CopyExpression(d,HEAP32[(i+8|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=8;break;case 8:b=0==(HEAPU32[e>>2]>>>8&1|0)?9:42;break;case 9:b=0==(HEAPU32[e>>2]>>>2&1|0)?10:17;break;case 10:b=0==(HEAPU32[e>>2]>>>3&1|0)?11:17;break;case 11:b=0==(HEAPU32[e>>2]>>>4&1|0)?12:17;break;case 12:b=0==(HEAPU32[e>>2]>>>6&1|0)?13:17;break;case 13:b=0==(HEAPU32[e>>2]>>>5&1|0)?14:17;break;case 14:b=0==(HEAPU32[e>>2]>>>7&1|0)?15:17;break;case 15:b=
0==(HEAPU32[e>>2]>>>10&1|0)?16:17;break;case 16:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-1025|(HEAPU32[i>>2]>>>10&1)<<10;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2049|(HEAPU32[i>>2]>>>11&1)<<11;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-4097|(HEAPU32[i>>2]>>>12&1)<<12;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-8193|(HEAPU32[i>>2]>>>13&1)<<13;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-16385|(HEAPU32[i>>2]>>>14&1)<<14;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-32769|(HEAPU32[i>>2]>>>15&1)<<15;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-65537|(HEAPU32[i>>2]>>>16&1)<<16;b=_CopyExpression(d,
HEAP32[(i+12|0)>>2]);HEAP32[(g+12|0)>>2]=b;b=41;break;case 17:b=0==(HEAPU32[e>>2]>>>2&1|0)?18:20;break;case 18:b=0!=(HEAPU32[i>>2]>>>11&1|0)?19:20;break;case 19:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2049|2048;_AddToRestrictionList(d,2,g,i);b=20;break;case 20:b=0==(HEAPU32[e>>2]>>>3&1|0)?21:23;break;case 21:b=0!=(HEAPU32[i>>2]>>>12&1|0)?22:23;break;case 22:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-4097|4096;_AddToRestrictionList(d,3,g,i);b=23;break;case 23:b=0==(HEAPU32[e>>2]>>>4&1|0)?24:27;break;case 24:b=0!=(HEAPU32[i>>
2]>>>11&1|0)?25:27;break;case 25:b=0!=(HEAPU32[i>>2]>>>12&1|0)?26:27;break;case 26:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2049|2048;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-4097|4096;_AddToRestrictionList(d,2,g,i);_AddToRestrictionList(d,3,g,i);b=27;break;case 27:b=0==(HEAPU32[e>>2]>>>6&1|0)?28:30;break;case 28:b=0!=(HEAPU32[i>>2]>>>14&1|0)?29:30;break;case 29:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-16385|16384;_AddToRestrictionList(d,1,g,i);b=30;break;case 30:b=0==(HEAPU32[e>>2]>>>5&1|0)?31:33;break;case 31:b=0!=(HEAPU32[i>>
2]>>>13&1|0)?32:33;break;case 32:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-8193|8192;_AddToRestrictionList(d,0,g,i);b=33;break;case 33:b=0==(HEAPU32[e>>2]>>>7&1|0)?34:37;break;case 34:b=0!=(HEAPU32[i>>2]>>>14&1|0)?35:37;break;case 35:b=0!=(HEAPU32[i>>2]>>>13&1|0)?36:37;break;case 36:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-16385|16384;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-8193|8192;_AddToRestrictionList(d,1,g,i);_AddToRestrictionList(d,0,g,i);b=37;break;case 37:b=0==(HEAPU32[e>>2]>>>10&1|0)?38:40;break;case 38:b=0!=(HEAPU32[i>>
2]>>>16&1|0)?39:40;break;case 39:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-65537|65536;_AddToRestrictionList(d,8,g,i);b=40;break;case 40:b=41;break;case 41:b=42;break;case 42:b=0==(HEAPU32[e>>2]>>>11&1|0)?43:44;break;case 43:_ReturnExpression(d,HEAP32[(g+24|0)>>2]);_ReturnExpression(d,HEAP32[(g+28|0)>>2]);b=_CopyExpression(d,HEAP32[(i+24|0)>>2]);HEAP32[(g+24|0)>>2]=b;b=_CopyExpression(d,HEAP32[(i+28|0)>>2]);HEAP32[(g+28|0)>>2]=b;b=44;break;case 44:return;default:assert(0,"bad label: "+b)}}
_OverlayConstraint.X=1;function _AddToRestrictionList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=HEAP32[(a+12|0)>>2];b=3;break;case 3:b=0!=(i|0)?4:8;break;case 4:b=(HEAPU16[(i|0)>>1]&65535|0)==(e|0)?5:6;break;case 5:b=_GenConstant(d,HEAP16[(i|0)>>1],HEAP32[(i+4|0)>>2]);HEAP32[(b+12|0)>>2]=HEAP32[(g+12|0)>>2];HEAP32[(g+12|0)>>2]=b;b=6;break;case 6:b=7;break;case 7:i=HEAP32[(i+12|0)>>2];b=3;break;case 8:return;default:assert(0,"bad label: "+b)}}_AddToRestrictionList.X=1;
function _OverlayConstraintParseRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(HEAP32[b>>2]&1|0)?3:4;break;case 3:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=4;break;case 4:c=0!=(HEAPU32[b>>2]>>>1&1|0)?5:6;break;case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=6;break;case 6:c=0!=(HEAPU32[b>>2]>>>2&1|0)?7:8;break;case 7:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=8;break;case 8:c=0!=(HEAPU32[b>>2]>>>3&1|0)?9:10;break;case 9:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=10;break;case 10:c=0!=(HEAPU32[b>>2]>>>
4&1|0)?11:12;break;case 11:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=12;break;case 12:c=0!=(HEAPU32[b>>2]>>>6&1|0)?13:14;break;case 13:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=14;break;case 14:c=0!=(HEAPU32[b>>2]>>>5&1|0)?15:16;break;case 15:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=16;break;case 16:c=0!=(HEAPU32[b>>2]>>>7&1|0)?17:18;break;case 17:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-129|128;c=18;break;case 18:c=0!=(HEAPU32[b>>2]>>>8&1|0)?19:20;break;case 19:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=20;break;case 20:c=
0!=(HEAPU32[b>>2]>>>10&1|0)?21:22;break;case 21:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-1025|1024;c=22;break;case 22:c=0!=(HEAPU32[b>>2]>>>9&1|0)?23:24;break;case 23:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-513|512;c=24;break;case 24:c=0!=(HEAPU32[b>>2]>>>11&1|0)?25:26;break;case 25:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2049|2048;c=26;break;case 26:return;default:assert(0,"bad label: "+c)}}_OverlayConstraintParseRecord.X=1;
function _SetRestrictionFlag(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;a=h;b=f;d=c;a=173==(a|0)?3:2==(a|0)?4:3==(a|0)?5:1==(a|0)?6:0==(a|0)?7:180==(a|0)?8:181==(a|0)?9:8==(a|0)?10:182==(a|0)?11:12;break;case 3:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-1025|(d&1)<<10;a=12;break;case 4:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(d&1)<<11;a=12;break;case 5:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(d&1)<<12;a=12;break;case 6:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(d&1)<<14;a=12;break;case 7:a=b;HEAP32[a>>2]=HEAP32[a>>2]&
-8193|(d&1)<<13;a=12;break;case 8:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(d&1)<<14;a=b;HEAP32[a>>2]=HEAP32[a>>2]&-8193|(d&1)<<13;a=12;break;case 9:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(d&1)<<11;a=b;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(d&1)<<12;a=12;break;case 10:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(d&1)<<16;a=12;break;case 11:a=b;HEAP32[a>>2]=HEAP32[a>>2]&-32769|(d&1)<<15;a=12;break;case 12:return;default:assert(0,"bad label: "+a)}}_SetRestrictionFlag.X=1;
function _NoConjunctiveUseError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str10741|0,3,1);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str12743|0);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,f);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str31762|0);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str32763|0);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,c);_EnvPrintRouter(h,STRING_TABLE.__str11742|0,STRING_TABLE.__str14745|0)}
function _GetConstraintTypeFromTypeName(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(_strcmp(a,STRING_TABLE.__str35766|0)|0)?3:4;break;case 3:c=2;f=35;break;case 4:f=0==(_strcmp(a,STRING_TABLE.__str36767|0)|0)?5:6;break;case 5:c=3;f=35;break;case 6:f=0==(_strcmp(a,STRING_TABLE.__str37768|0)|0)?7:8;break;case 7:c=181;f=35;break;case 8:f=0==(_strcmp(a,STRING_TABLE.__str38769|0)|0)?9:10;break;case 9:c=1;f=35;break;case 10:f=0==(_strcmp(a,STRING_TABLE.__str39770|0)|0)?11:12;break;case 11:c=0;
f=35;break;case 12:f=0==(_strcmp(a,STRING_TABLE.__str40771|0)|0)?13:14;break;case 13:c=180;f=35;break;case 14:f=0==(_strcmp(a,STRING_TABLE.__str41772|0)|0)?15:16;break;case 15:c=8;f=35;break;case 16:f=0==(_strcmp(a,STRING_TABLE.__str42773|0)|0)?17:18;break;case 17:c=7;f=35;break;case 18:f=0==(_strcmp(a,STRING_TABLE.__str43774|0)|0)?19:20;break;case 19:c=182;f=35;break;case 20:f=0==(_strcmp(a,STRING_TABLE.__str44775|0)|0)?21:22;break;case 21:c=5;f=35;break;case 22:f=0==(_strcmp(a,STRING_TABLE.__str45776|
0)|0)?23:24;break;case 23:c=6;f=35;break;case 24:f=25;break;case 25:f=26;break;case 26:f=27;break;case 27:f=28;break;case 28:f=29;break;case 29:f=30;break;case 30:f=31;break;case 31:f=32;break;case 32:f=33;break;case 33:f=34;break;case 34:c=-1;f=35;break;case 35:return c;default:assert(0,"bad label: "+f)}}_GetConstraintTypeFromTypeName.X=1;
function _GetConstraintTypeFromAllowedName(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(_strcmp(a,STRING_TABLE.__str7738|0)|0)?3:4;break;case 3:c=173;f=29;break;case 4:f=0==(_strcmp(a,STRING_TABLE.__str1732|0)|0)?5:6;break;case 5:c=2;f=29;break;case 6:f=0==(_strcmp(a,STRING_TABLE.__str2733|0)|0)?7:8;break;case 7:c=3;f=29;break;case 8:f=0==(_strcmp(a,STRING_TABLE.__str16747|0)|0)?9:10;break;case 9:c=181;f=29;break;case 10:f=0==(_strcmp(a,STRING_TABLE.__str17748|0)|0)?11:12;break;case 11:c=
1;f=29;break;case 12:f=0==(_strcmp(a,STRING_TABLE.__str19750|0)|0)?13:14;break;case 13:c=180;f=29;break;case 14:f=0==(_strcmp(a,STRING_TABLE.__str6737|0)|0)?15:16;break;case 15:c=8;f=29;break;case 16:f=0==(_strcmp(a,STRING_TABLE.__str5736|0)|0)?17:18;break;case 17:c=182;f=29;break;case 18:f=0==(_strcmp(a,STRING_TABLE.__str18749|0)|0)?19:20;break;case 19:c=0;f=29;break;case 20:f=21;break;case 21:f=22;break;case 22:f=23;break;case 23:f=24;break;case 24:f=25;break;case 25:f=26;break;case 26:f=27;break;
case 27:f=28;break;case 28:c=-1;f=29;break;case 29:return c;default:assert(0,"bad label: "+f)}}_GetConstraintTypeFromAllowedName.X=1;
function _GetConstraintRecord(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]|0)?3:4;break;case 3:var d=_genalloc(c,48);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:a=d;b=0;f=6;break;case 6:f=48>b>>>0?7:9;break;case 7:HEAP8[a+b|0]=0;f=8;break;case 8:b=b+1|0;f=6;break;case 9:return _SetAnyAllowedFlags(a,1),h=a,HEAP32[h>>2]&=-131073,h=a,HEAP32[h>>2]=HEAP32[h>>2]&-262145|262144,h=a,HEAP32[h>>2]&=-1025,h=a,HEAP32[h>>2]&=-2049,h=a,HEAP32[h>>2]&=-4097,h=a,HEAP32[h>>2]&=-8193,h=a,HEAP32[h>>2]&=-16385,h=a,HEAP32[h>>2]&=-32769,h=a,HEAP32[h>>2]&=-65537,HEAP32[(a+8|0)>>2]=0,HEAP32[(a+12|0)>>2]=
0,h=_GenConstant(c,2,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+12|0)>>2]),HEAP32[(a+16|0)>>2]=h,h=_GenConstant(c,2,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+8|0)>>2]),HEAP32[(a+20|0)>>2]=h,h=_GenConstant(c,1,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+16|0)>>2]),HEAP32[(a+24|0)>>2]=h,c=_GenConstant(c,2,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+8|0)>>2]),HEAP32[(a+28|0)>>2]=c,HEAP32[(a+40|0)>>2]=-1,HEAP32[(a+44|0)>>2]=0,HEAP32[(a+32|0)>>2]=0,HEAP32[(a+36|0)>>2]=0,a;default:assert(0,
"bad label: "+f)}}_GetConstraintRecord.X=1;
function _SetAnyAllowedFlags(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=0!=(f|0)?3:4;break;case 3:b=1;d=0;c=5;break;case 4:b=0;d=1;c=5;break;case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2|b&1;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-3|(d&1)<<1;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-5|(d&1)<<2;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-9|(d&1)<<3;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-17|(d&1)<<4;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-33|(d&1)<<5;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-65|(d&1)<<6;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-129|(d&1)<<7;b=a;HEAP32[b>>
2]=HEAP32[b>>2]&-513|(d&1)<<9;HEAP32[a>>2]=HEAP32[a>>2]&-257|(d&1)<<8;return;default:assert(0,"bad label: "+c)}}_SetAnyAllowedFlags.X=1;
function _SetAnyRestrictionFlags(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=0!=(f|0)?3:4;break;case 3:b=1;d=0;c=5;break;case 4:b=0;d=1;c=5;break;case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-1025|(b&1)<<10;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-2049|(d&1)<<11;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-4097|(d&1)<<12;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-8193|(d&1)<<13;b=a;HEAP32[b>>2]=HEAP32[b>>2]&-16385|(d&1)<<14;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(d&1)<<16;return;default:assert(0,"bad label: "+c)}}
_SetAnyRestrictionFlags.X=1;
function _SetConstraintType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=1;c=a;c=173==(c|0)?3:2==(c|0)?4:3==(c|0)?5:181==(c|0)?6:1==(c|0)?7:0==(c|0)?8:180==(c|0)?9:7==(c|0)?10:8==(c|0)?11:182==(c|0)?12:5==(c|0)?13:175==(c|0)?14:6==(c|0)?15:4==(c|0)?16:17;break;case 3:d=HEAP32[b>>2]&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=17;break;case 4:d=HEAPU32[b>>2]>>>1&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=17;break;case 5:d=HEAPU32[b>>2]>>>2&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=17;break;case 6:d=
HEAPU32[b>>2]>>>2&1|HEAPU32[b>>2]>>>1&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=17;break;case 7:d=HEAPU32[b>>2]>>>4&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=17;break;case 8:d=HEAPU32[b>>2]>>>3&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=17;break;case 9:d=HEAPU32[b>>2]>>>4&1|HEAPU32[b>>2]>>>3&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=17;break;case 10:d=HEAPU32[b>>2]>>>6&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=17;break;case 11:d=HEAPU32[b>>
2]>>>5&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=17;break;case 12:d=HEAPU32[b>>2]>>>5&1|HEAPU32[b>>2]>>>6&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=17;break;case 13:d=HEAPU32[b>>2]>>>7&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-129|128;c=17;break;case 14:d=HEAPU32[b>>2]>>>9&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-513|512;c=17;break;case 15:d=HEAPU32[b>>2]>>>8&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=17;break;case 16:d=HEAPU32[b>>2]>>>17&1;c=b;HEAP32[c>>2]=HEAP32[c>>2]&-131073|
131072;c=17;break;case 17:c=173!=(a|0)?18:19;break;case 18:c=b;HEAP32[c>>2]&=-2;c=19;break;case 19:return d;default:assert(0,"bad label: "+c)}}_SetConstraintType.X=1;
function _CopyConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]|0)?5:6;break;case 5:var e=_genalloc(b,48);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:a=c=e;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[d>>2]&1;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[d>>2]>>>1&1)<<1;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[d>>2]>>>2&1)<<2;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[d>>2]>>>3&1)<<3;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-17|(HEAPU32[d>>2]>>>4&1)<<4;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-33|(HEAPU32[d>>2]>>>5&1)<<5;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-65|(HEAPU32[d>>
2]>>>6&1)<<6;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-129|(HEAPU32[d>>2]>>>7&1)<<7;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-513|(HEAPU32[d>>2]>>>9&1)<<9;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-131073|(HEAPU32[d>>2]>>>17&1)<<17;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-262145|(HEAPU32[d>>2]>>>18&1)<<18;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-257|(HEAPU32[d>>2]>>>8&1)<<8;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-1025|(HEAPU32[d>>2]>>>10&1)<<10;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(HEAPU32[d>>2]>>>11&1)<<11;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(HEAPU32[d>>2]>>>
12&1)<<12;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-8193|(HEAPU32[d>>2]>>>13&1)<<13;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-16385|(HEAPU32[d>>2]>>>14&1)<<14;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-32769|(HEAPU32[d>>2]>>>15&1)<<15;a=c;HEAP32[a>>2]=HEAP32[a>>2]&-65537|(HEAPU32[d>>2]>>>16&1)<<16;a=_CopyExpression(b,HEAP32[(d+8|0)>>2]);HEAP32[(c+8|0)>>2]=a;a=_CopyExpression(b,HEAP32[(d+12|0)>>2]);HEAP32[(c+12|0)>>2]=a;a=_CopyExpression(b,HEAP32[(d+16|0)>>2]);HEAP32[(c+16|0)>>2]=a;a=_CopyExpression(b,HEAP32[(d+20|0)>>2]);HEAP32[(c+
20|0)>>2]=a;a=_CopyExpression(b,HEAP32[(d+24|0)>>2]);HEAP32[(c+24|0)>>2]=a;a=_CopyExpression(b,HEAP32[(d+28|0)>>2]);HEAP32[(c+28|0)>>2]=a;HEAP32[(c+40|0)>>2]=-1;HEAP32[(c+44|0)>>2]=0;a=_CopyConstraintRecord(b,HEAP32[(d+32|0)>>2]);HEAP32[(c+32|0)>>2]=a;HEAP32[(c+36|0)>>2]=0;a=c;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_CopyConstraintRecord.X=1;
function _CompareNumbers(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;d=(j|0)==(l|0)?3:4;break;case 3:e=2;d=45;break;case 4:d=(j|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?5:6;break;case 5:e=1;d=45;break;case 6:d=(j|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:e=0;d=45;break;case 8:d=(l|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?9:10;break;case 9:e=0;d=45;break;case 10:d=(l|0)==(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?11:12;break;case 11:e=1;d=45;break;case 12:d=1==(i|0)?13:20;break;case 13:d=1==(k|0)?14:20;break;case 14:d=(HEAP32[(j+16|0)>>2]|0)<(HEAP32[(l+16|0)>>2]|0)?15:16;break;case 15:e=0;d=45;break;case 16:d=(HEAP32[(j+16|0)>>2]|0)>(HEAP32[(l+16|0)>>2]|0)?17:18;break;case 17:e=1;d=45;break;case 18:d=19;break;case 19:e=2;d=45;break;case 20:d=0==(i|0)?21:28;break;case 21:d=0==(k|0)?22:28;break;case 22:d=j+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],
tempDoubleF64[0]);var m=l+16|0,m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);d=d<m?23:24;break;case 23:e=0;d=45;break;case 24:d=j+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);m=l+16|0;m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);d=d>m?25:26;break;case 25:e=1;d=45;break;case 26:d=27;break;case 27:e=2;d=45;break;case 28:d=1==(i|0)?29:36;break;case 29:d=0==(k|0)?30:36;break;case 30:d=
HEAP32[(j+16|0)>>2]|0;m=l+16|0;m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);d=d<m?31:32;break;case 31:e=0;d=45;break;case 32:d=HEAP32[(j+16|0)>>2]|0;m=l+16|0;m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);d=d>m?33:34;break;case 33:e=1;d=45;break;case 34:d=35;break;case 35:e=2;d=45;break;case 36:d=0==(i|0)?37:44;break;case 37:d=1==(k|0)?38:44;break;case 38:d=j+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>
2],tempDoubleF64[0])<(HEAP32[(l+16|0)>>2]|0)?39:40;break;case 39:e=0;d=45;break;case 40:d=j+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])>(HEAP32[(l+16|0)>>2]|0)?41:42;break;case 41:e=1;d=45;break;case 42:d=43;break;case 43:e=2;d=45;break;case 44:e=-1;d=45;break;case 45:return e;default:assert(0,"bad label: "+d)}}_CompareNumbers.X=1;
function _ExpressionToConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=e=_GetConstraintRecord(b);HEAP32[a>>2]&=-2;a=e;c=38;break;case 4:c=35==(HEAPU16[(d|0)>>1]&65535|0)?10:5;break;case 5:c=36==(HEAPU16[(d|0)>>1]&65535|0)?10:6;break;case 6:c=31==(HEAPU16[(d|0)>>1]&65535|0)?10:7;break;case 7:c=32==(HEAPU16[(d|0)>>1]&65535|0)?10:8;break;case 8:c=33==(HEAPU16[(d|0)>>1]&65535|0)?10:9;break;case 9:c=34==(HEAPU16[(d|0)>>1]&65535|0)?10:11;break;case 10:a=
e=_GetConstraintRecord(b);HEAP32[a>>2]=HEAP32[a>>2]&-131073|131072;a=e;c=38;break;case 11:c=30==(HEAPU16[(d|0)>>1]&65535|0)?12:13;break;case 12:a=_FunctionCallToConstraintRecord(b,HEAP32[(d+4|0)>>2]);c=38;break;case 13:c=14;break;case 14:c=e=_GetConstraintRecord(b);HEAP32[c>>2]&=-2;c=0==(HEAPU16[(d|0)>>1]&65535|0)?15:16;break;case 15:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-8193|8192;c=e;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=31;break;case 16:c=1==(HEAPU16[(d|0)>>1]&65535|0)?17:18;break;case 17:c=e;HEAP32[c>>2]=
HEAP32[c>>2]&-16385|16384;c=e;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=30;break;case 18:c=2==(HEAPU16[(d|0)>>1]&65535|0)?19:20;break;case 19:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-2049|2048;c=e;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=29;break;case 20:c=3==(HEAPU16[(d|0)>>1]&65535|0)?21:22;break;case 21:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-4097|4096;c=e;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=28;break;case 22:c=8==(HEAPU16[(d|0)>>1]&65535|0)?23:24;break;case 23:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-65537|65536;c=e;HEAP32[c>>2]=HEAP32[c>>
2]&-33|32;c=27;break;case 24:c=7==(HEAPU16[(d|0)>>1]&65535|0)?25:26;break;case 25:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=26;break;case 26:c=27;break;case 27:c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=31;break;case 31:c=0!=(HEAPU32[e>>2]>>>3&1|0)?36:32;break;case 32:c=0!=(HEAPU32[e>>2]>>>4&1|0)?36:33;break;case 33:c=0!=(HEAPU32[e>>2]>>>1&1|0)?36:34;break;case 34:c=0!=(HEAPU32[e>>2]>>>2&1|0)?36:35;break;case 35:c=0!=(HEAPU32[e>>2]>>>5&1|0)?36:37;break;case 36:c=_GenConstant(b,HEAP16[(d|
0)>>1],HEAP32[(d+4|0)>>2]);HEAP32[(e+12|0)>>2]=c;c=37;break;case 37:a=e;c=38;break;case 38:return a;default:assert(0,"bad label: "+c)}}_ExpressionToConstraintRecord.X=1;
function _FunctionCallToConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;var b=a=_GetConstraintRecord(a);HEAP32[b>>2]&=-2;c=HEAP8[c+8|0]<<24>>24;c=97==(c|0)?3:102==(c|0)||100==(c|0)?4:105==(c|0)||108==(c|0)?5:106==(c|0)?6:107==(c|0)?7:109==(c|0)?8:110==(c|0)?9:111==(c|0)?10:115==(c|0)?11:117==(c|0)?12:119==(c|0)||99==(c|0)||98==(c|0)?13:120==(c|0)?14:118==(c|0)?15:16;break;case 3:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-129|128;c=16;break;case 4:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=16;break;
case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=16;break;case 6:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=16;break;case 7:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=16;break;case 8:c=a;HEAP32[c>>2]&=-262145;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-131073|131072;c=16;break;case 9:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=16;break;case 10:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=16;break;
case 11:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=16;break;case 12:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-131073|131072;c=16;break;case 13:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=16;break;case 14:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=16;break;case 15:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-513|512;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_FunctionCallToConstraintRecord.X=1;
function _ArgumentTypeToConstraintRecord(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;var b=a=_GetConstraintRecord(a);HEAP32[b>>2]&=-2;c=97==(c|0)?3:101==(c|0)?4:100==(c|0)||102==(c|0)?5:103==(c|0)?6:104==(c|0)?7:105==(c|0)||108==(c|0)?8:106==(c|0)?9:107==(c|0)?10:109==(c|0)?11:110==(c|0)?12:111==(c|0)?13:112==(c|0)?14:113==(c|0)?15:115==(c|0)?16:119==(c|0)?17:120==(c|0)?18:121==(c|0)?19:122==(c|0)?20:117==(c|0)?21:118==(c|0)?22:23;break;case 3:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-129|128;c=23;break;
case 4:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=23;break;case 5:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=23;break;case 6:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=23;break;case 7:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=23;
break;case 8:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=23;break;case 9:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=23;break;case 10:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=23;break;case 11:c=a;HEAP32[c>>2]&=-262145;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-131073|131072;c=23;break;case 12:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-9|8;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=23;break;case 13:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;
c=23;break;case 14:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=23;break;case 15:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-131073|131072;c=23;break;case 16:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=23;break;case 17:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=23;break;case 18:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-65|64;c=23;break;case 19:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=23;break;case 20:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;
c=a;HEAP32[c>>2]=HEAP32[c>>2]&-257|256;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=23;break;case 21:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;c=a;HEAP32[c>>2]=HEAP32[c>>2]&-131073|131072;c=23;break;case 22:c=a;HEAP32[c>>2]=HEAP32[c>>2]&-513|512;c=23;break;case 23:return a;default:assert(0,"bad label: "+c)}}_ArgumentTypeToConstraintRecord.X=1;
function _DeriveDefaultFromConstraints(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;k=b;d=0==(g|0)?3:10;break;case 3:d=0!=(j|0)?4:8;break;case 4:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=-1;d=0!=(k|0)?5:6;break;case 5:d=_EnvCreateMultifield(e,0);HEAP32[(i+8|0)>>2]=d;d=7;break;case 6:d=_CreateMultifield2(e,0);HEAP32[(i+8|0)>>2]=d;d=7;break;case 7:d=9;break;case 8:HEAP16[(i+4|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str802|0);HEAP32[(i+8|0)>>
2]=d;d=9;break;case 9:d=51;break;case 10:d=0!=(HEAP32[g>>2]&1|0)?12:11;break;case 11:d=0!=(HEAPU32[g>>2]>>>1&1|0)?12:13;break;case 12:l=2;n=e;d=g;var o=_EnvAddSymbol(e,STRING_TABLE.__str802|0);n=_FindDefaultValue(n,2,d,o);d=35;break;case 13:d=0!=(HEAPU32[g>>2]>>>2&1|0)?14:15;break;case 14:l=3;n=e;d=g;o=_EnvAddSymbol(e,__str1803|0);n=_FindDefaultValue(n,3,d,o);d=34;break;case 15:d=0!=(HEAPU32[g>>2]>>>4&1|0)?16:17;break;case 16:l=1;n=e;d=g;o=_EnvAddLong(e,0);n=_FindDefaultValue(n,1,d,o);d=33;break;
case 17:d=0!=(HEAPU32[g>>2]>>>3&1|0)?18:19;break;case 18:l=0;n=e;d=g;o=_EnvAddDouble(e,0);n=_FindDefaultValue(n,0,d,o);d=32;break;case 19:d=0!=(HEAPU32[g>>2]>>>5&1|0)?20:21;break;case 20:l=8;n=e;d=g;o=_EnvAddSymbol(e,STRING_TABLE.__str802|0);n=_FindDefaultValue(n,8,d,o);d=31;break;case 21:d=0!=(HEAPU32[g>>2]>>>6&1|0)?22:23;break;case 22:l=7;n=HEAP32[(HEAP32[(e+16|0)>>2]+116|0)>>2]|0;d=30;break;case 23:d=0!=(HEAPU32[g>>2]>>>8&1|0)?24:25;break;case 24:l=6;n=HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+8|0;
d=29;break;case 25:d=0!=(HEAPU32[g>>2]>>>7&1|0)?26:27;break;case 26:l=5;n=0;d=28;break;case 27:l=2;n=_EnvAddSymbol(e,STRING_TABLE.__str802|0);d=28;break;case 28:d=29;break;case 29:d=30;break;case 30:d=31;break;case 31:d=32;break;case 32:d=33;break;case 33:d=34;break;case 34:d=35;break;case 35:d=0!=(j|0)?36:50;break;case 36:d=0==(HEAP32[(g+24|0)>>2]|0)?37:38;break;case 37:m=0;d=42;break;case 38:d=(HEAP32[(HEAP32[(g+24|0)>>2]+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?
39:40;break;case 39:m=0;d=41;break;case 40:m=HEAP32[(HEAP32[(HEAP32[(g+24|0)>>2]+4|0)>>2]+16|0)>>2];d=41;break;case 41:d=42;break;case 42:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=m-1|0;d=0!=(k|0)?43:44;break;case 43:d=_EnvCreateMultifield(e,m);HEAP32[(i+8|0)>>2]=d;d=45;break;case 44:d=_CreateMultifield2(e,m);HEAP32[(i+8|0)>>2]=d;d=45;break;case 45:d=46;break;case 46:d=0<m>>>0?47:49;break;case 47:HEAP16[((HEAP32[(i+8|0)>>2]+16|0)+((m-1|0)<<3)|0)>>1]=l;HEAP32[(((HEAP32[(i+8|0)>>
2]+16|0)+((m-1|0)<<3)|0)+4|0)>>2]=n;d=48;break;case 48:m=m-1|0;d=46;break;case 49:d=51;break;case 50:HEAP16[(i+4|0)>>1]=l;HEAP32[(i+8|0)>>2]=n;d=51;break;case 51:return;default:assert(0,"bad label: "+d)}}_DeriveDefaultFromConstraints.X=1;
function _FindDefaultValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;k=HEAP32[(i+12|0)>>2];b=3;break;case 3:b=0!=(k|0)?4:7;break;case 4:b=(HEAPU16[(k|0)>>1]&65535|0)==(g|0)?5:6;break;case 5:d=HEAP32[(k+4|0)>>2];b=35;break;case 6:k=HEAP32[(k+12|0)>>2];b=3;break;case 7:b=1==(g|0)?8:20;break;case 8:b=1==(HEAPU16[(HEAP32[(i+16|0)>>2]|0)>>1]&65535|0)?9:10;break;case 9:d=HEAP32[(HEAP32[(i+16|0)>>2]+4|0)>>2];b=35;break;case 10:b=0==(HEAPU16[(HEAP32[(i+16|0)>>2]|0)>>1]&65535|
0)?11:12;break;case 11:b=e;d=HEAP32[(HEAP32[(i+16|0)>>2]+4|0)>>2]+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])&-1;d=_EnvAddLong(b,d);b=35;break;case 12:b=1==(HEAPU16[(HEAP32[(i+20|0)>>2]|0)>>1]&65535|0)?13:14;break;case 13:d=HEAP32[(HEAP32[(i+20|0)>>2]+4|0)>>2];b=35;break;case 14:b=0==(HEAPU16[(HEAP32[(i+20|0)>>2]|0)>>1]&65535|0)?15:16;break;case 15:b=e;d=HEAP32[(HEAP32[(i+20|0)>>2]+4|0)>>2]+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+
4>>2],tempDoubleF64[0])&-1;d=_EnvAddLong(b,d);b=35;break;case 16:b=17;break;case 17:b=18;break;case 18:b=19;break;case 19:b=34;break;case 20:b=0==(g|0)?21:33;break;case 21:b=0==(HEAPU16[(HEAP32[(i+16|0)>>2]|0)>>1]&65535|0)?22:23;break;case 22:d=HEAP32[(HEAP32[(i+16|0)>>2]+4|0)>>2];b=35;break;case 23:b=1==(HEAPU16[(HEAP32[(i+16|0)>>2]|0)>>1]&65535|0)?24:25;break;case 24:d=_EnvAddDouble(e,HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+4|0)>>2]+16|0)>>2]|0);b=35;break;case 25:b=0==(HEAPU16[(HEAP32[(i+20|0)>>2]|
0)>>1]&65535|0)?26:27;break;case 26:d=HEAP32[(HEAP32[(i+20|0)>>2]+4|0)>>2];b=35;break;case 27:b=1==(HEAPU16[(HEAP32[(i+20|0)>>2]|0)>>1]&65535|0)?28:29;break;case 28:d=_EnvAddDouble(e,HEAP32[(HEAP32[(HEAP32[(i+20|0)>>2]+4|0)>>2]+16|0)>>2]|0);b=35;break;case 29:b=30;break;case 30:b=31;break;case 31:b=32;break;case 32:b=33;break;case 33:b=34;break;case 34:d=j;b=35;break;case 35:return d;default:assert(0,"bad label: "+b)}}_FindDefaultValue.X=1;
function _ParseDefault(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w,x=i,y=i+12,A,z;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;u=t=0;HEAP32[q>>2]=0;HEAP32[r>>2]=0;_SavePPBuffer(l,STRING_TABLE.__str2804|0);_GetToken(l,m,x);j=3;break;case 3:j=171!=(HEAPU16[(x|0)>>1]&65535|0)?4:41;break;case 4:v=_ParseAtomOrExpression(l,m,x);j=0==(v|0)?5:6;break;case 5:_ReturnExpression(l,
t);HEAP32[s>>2]=1;k=0;j=69;break;case 6:j=35==(HEAPU16[(v|0)>>1]&65535|0)?8:7;break;case 7:j=36==(HEAPU16[(v|0)>>1]&65535|0)?8:32;break;case 8:j=0==(_strcmp(HEAP32[(HEAP32[(v+4|0)>>2]+16|0)>>2],STRING_TABLE.__str3805|0)|0)?9:10;break;case 9:z=0;j=14;break;case 10:j=0==(_strcmp(HEAP32[(HEAP32[(v+4|0)>>2]+16|0)>>2],STRING_TABLE.__str4806|0)|0)?11:12;break;case 11:z=1;j=13;break;case 12:z=-1;j=13;break;case 13:j=14;break;case 14:j=0!=(o|0)?19:15;break;case 15:j=36==(HEAPU16[(v|0)>>1]&65535|0)?19:16;
break;case 16:j=-1==(z|0)?19:17;break;case 17:j=-1!=(z|0)?18:23;break;case 18:j=0!=(t|0)?19:23;break;case 19:j=0!=(o|0)?20:21;break;case 20:_SyntaxErrorMessage(l,STRING_TABLE.__str5807|0);j=22;break;case 21:_SyntaxErrorMessage(l,STRING_TABLE.__str6808|0);j=22;break;case 22:_ReturnExpression(l,v);_ReturnExpression(l,t);HEAP32[s>>2]=1;k=0;j=69;break;case 23:_ReturnExpression(l,v);_GetToken(l,m,x);j=171!=(HEAPU16[(x|0)>>1]&65535|0)?24:28;break;case 24:j=0!=(o|0)?25:26;break;case 25:_SyntaxErrorMessage(l,
STRING_TABLE.__str5807|0);j=27;break;case 26:_SyntaxErrorMessage(l,STRING_TABLE.__str6808|0);j=27;break;case 27:_PPBackup(l);_SavePPBuffer(l,STRING_TABLE.__str2804|0);_SavePPBuffer(l,HEAP32[(x+8|0)>>2]);HEAP32[s>>2]=1;j=28;break;case 28:j=0==(z|0)?29:30;break;case 29:HEAP32[q>>2]=1;j=31;break;case 30:HEAP32[r>>2]=1;j=31;break;case 31:k=0;j=69;break;case 32:j=1==(_ExpressionContainsVariables(v,0)|0)?33:37;break;case 33:_ReturnExpression(l,t);_ReturnExpression(l,v);HEAP32[s>>2]=1;j=0!=(o|0)?34:35;break;
case 34:_SyntaxErrorMessage(l,STRING_TABLE.__str5807|0);j=36;break;case 35:_SyntaxErrorMessage(l,STRING_TABLE.__str6808|0);j=36;break;case 36:k=0;j=69;break;case 37:j=0==(u|0)?38:39;break;case 38:t=v;j=40;break;case 39:HEAP32[(u+12|0)>>2]=v;j=40;break;case 40:u=v;_SavePPBuffer(l,STRING_TABLE.__str2804|0);_GetToken(l,m,x);j=3;break;case 41:_PPBackup(l);_PPBackup(l);_SavePPBuffer(l,STRING_TABLE.__str7809|0);j=0==(n|0)?42:53;break;case 42:j=0==(t|0)?43:44;break;case 43:HEAP32[s>>2]=1;j=50;break;case 44:j=
0!=(HEAP32[(t+12|0)>>2]|0)?45:46;break;case 45:HEAP32[s>>2]=1;j=49;break;case 46:j=A=_ExpressionToConstraintRecord(l,t);HEAP32[j>>2]&=-131073;j=0!=(_UnmatchableConstraint(A)|0)?47:48;break;case 47:HEAP32[s>>2]=1;j=48;break;case 48:_RemoveConstraint(l,A);j=49;break;case 49:j=50;break;case 50:j=0!=(HEAP32[s>>2]|0)?51:52;break;case 51:_PrintErrorID(l,STRING_TABLE.__str8810|0,1,1);_EnvPrintRouter(l,STRING_TABLE.__str9811|0,STRING_TABLE.__str10812|0);_ReturnExpression(l,t);k=0;j=69;break;case 52:j=53;
break;case 53:j=0!=(o|0)?56:54;break;case 54:j=0!=(p|0)?55:56;break;case 55:j=0==(t|0)?56:57;break;case 56:k=t;j=69;break;case 57:v=w=t;t=0;j=58;break;case 58:j=0!=(v|0)?59:68;break;case 59:_SetEvaluationError(l,0);j=0!=(_EvaluateExpression(l,v,y)|0)?60:61;break;case 60:HEAP32[s>>2]=1;j=61;break;case 61:j=4==(HEAPU16[(y+4|0)>>1]&65535|0)?62:65;break;case 62:j=0==(n|0)?63:65;break;case 63:j=0==(HEAP32[s>>2]|0)?64:65;break;case 64:_PrintErrorID(l,STRING_TABLE.__str8810|0,1,1);_EnvPrintRouter(l,STRING_TABLE.__str9811|
0,STRING_TABLE.__str10812|0);HEAP32[s>>2]=1;j=65;break;case 65:j=0!=(HEAP32[s>>2]|0)?66:67;break;case 66:_ReturnExpression(l,w);_ReturnExpression(l,t);HEAP32[s>>2]=1;k=0;j=69;break;case 67:u=_ConvertValueToExpression(l,y);t=_AppendExpressions(t,u);v=HEAP32[(v+12|0)>>2];j=58;break;case 68:_ReturnExpression(l,w);k=t;j=69;break;case 69:return h=k,STACKTOP=i,h;default:assert(0,"bad label: "+j)}}_ParseDefault.X=1;
function _SetupDefinstances(h){_AllocateEnvironmentData(h,22,12,214);var f=_RegisterModuleItem(h,STRING_TABLE.__str817|0,216,218,220,222,224);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2]=f;f=_AddConstruct(h,STRING_TABLE.__str817|0,STRING_TABLE.__str817|0,226,224,94,96,98,228,102,230,232,234);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2]=f;_AddClearReadyFunction(h,STRING_TABLE.__str817|0,236,0);_EnvDefineFunction2(h,STRING_TABLE.__str1818|0,118,238,STRING_TABLE.__str2819|0,STRING_TABLE.__str3820|
0);_AddSaveFunction(h,STRING_TABLE.__str817|0,240,0);_EnvAddClearFunction(h,STRING_TABLE.__str817|0,242,-1E3);_EnvDefineFunction2(h,STRING_TABLE.__str4821|0,118,244,STRING_TABLE.__str5822|0,STRING_TABLE.__str3820|0);_EnvDefineFunction2(h,STRING_TABLE.__str6823|0,118,246,STRING_TABLE.__str7824|0,STRING_TABLE.__str8825|0);_EnvDefineFunction2(h,STRING_TABLE.__str9826|0,109,248,STRING_TABLE.__str10827|0,STRING_TABLE.__str8825|0);_EnvDefineFunction2(h,STRING_TABLE.__str11828|0,119,250,STRING_TABLE.__str12829|
0,STRING_TABLE.__str3820|0);_EnvAddResetFunction(h,STRING_TABLE.__str817|0,252,0);_SetupDefinstancesBload(h);_SetupDefinstancesCompiler(h)}
function _DeallocateDefinstancesData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,254,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+88|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+88|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDefinstancesData.X=1;
function _AllocateModule840(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule840.X=1;
function _ReturnModule841(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule841.X=1;
function _EnvFindDefinstances(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}
function _ParseDefinstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m=c;d=h;e=f;k=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str15832|0);a=0!=(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str817|0);b=
1;a=30;break;case 5:g=_ParseDefinstancesName(d,e,m);a=0==(g|0)?6:7;break;case 6:b=1;a=30;break;case 7:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?8:9;break;case 8:var n=_genalloc(d,32);a=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|
0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=10;break;case 10:l=n;_InitializeConstructHeader(d,STRING_TABLE.__str817|0,l,g);HEAP32[(l+24|0)>>2]=0;HEAP32[(l+28|0)>>2]=0;i=_FindFunction(d,0!=(HEAP32[m>>2]|0)?STRING_TABLE.__str16833|0:STRING_TABLE.__str13830|0);a=11;break;case 11:a=170==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?12:20;break;case 12:j=_GenConstant(d,173,i);j=_ParseInitializeInstance(d,j,e);a=0==(j|0)?13:14;break;case 13:_ReturnExpression(d,
HEAP32[(l+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=1;a=30;break;case 14:a=1==(_ExpressionContainsVariables(j,0)|0)?15:16;break;case 15:_LocalVariableErrorMessage(d,STRING_TABLE.__str817|0);
_ReturnExpression(d,j);_ReturnExpression(d,HEAP32[(l+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=1;a=30;break;case 16:a=0==(k|0)?17:18;break;case 17:HEAP32[(l+28|0)>>2]=j;a=19;break;case 18:HEAP32[(k+
12|0)>>2]=j;a=19;break;case 19:k=j;_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);_PPBackup(d);_PPCRAndIndent(d);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);a=11;break;case 20:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?21:22;break;case 21:_ReturnExpression(d,HEAP32[(l+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];_SyntaxErrorMessage(d,STRING_TABLE.__str817|0);b=1;a=30;break;case 22:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?23:24;break;case 23:_ReturnExpression(d,HEAP32[(l+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=0;a=30;break;case 24:a=0==(_EnvGetConserveMemory(d)|0)?25:28;break;case 25:a=0!=(HEAP32[(l+28|0)>>2]|0)?26:27;break;case 26:_PPBackup(d);a=27;break;case 27:_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str17834|0);a=d;var o=l,p=_CopyPPBuffer(d);_SetConstructPPForm(a,o,p);a=28;break;case 28:j=
HEAP32[(l+28|0)>>2];a=_PackExpression(d,j);HEAP32[(l+28|0)>>2]=a;_ReturnExpression(d,j);a=_GetConstructNamePointer(l)+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_ExpressionInstall(d,HEAP32[(l+28|0)>>2]);a=29;break;case 29:_AddConstructToModule(l);b=0;a=30;break;case 30:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefinstances.X=1;function _EnvGetNextDefinstances(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2])}
function _EnvIsDefinstancesDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=5;break;case 4:a=0==(HEAP32[(b+24|0)>>2]|0)?1:0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _EnvUndefinstances(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;e=d=f;c=0!=(_Bloaded(b)|0)?3:4;break;case 3:a=0;c=9;break;case 4:c=0==(e|0)?5:6;break;case 5:a=_RemoveAllDefinstances(b);c=9;break;case 6:c=0==(_EnvIsDefinstancesDeletable(b,d)|0)?7:8;break;case 7:a=0;c=9;break;case 8:_RemoveConstructFromModule(b,d);_RemoveDefinstances(b,e);a=1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _RemoveDefinstances(h,f){var c=_GetConstructNamePointer(f);_DecrementSymbolCount(h,c);_ExpressionDeinstall(h,HEAP32[(f+28|0)>>2]);_ReturnPackedExpression(h,HEAP32[(f+28|0)>>2]);_SetConstructPPForm(h,f,0);_ClearUserDataList(h,HEAP32[((f|0)+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|
0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_RemoveDefinstances.X=1;function _ClearDefinstancesReady(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[f>>2]=1;_DoForAllConstructs(h,256,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2],0,f);h=HEAP32[f>>2];STACKTOP=f;return h}
function _CheckDefinstancesBusy(h,f,c){for(h=2;;)switch(h){case 2:var a,h=f;a=c;h=0<HEAPU32[(h+24|0)>>2]>>>0?3:4;break;case 3:HEAP32[a>>2]=0;h=4;break;case 4:return;default:assert(0,"bad label: "+h)}}function _UndefinstancesCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str1818|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}function _SaveDefinstances(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}
function _CreateInitialDefinstances(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,32);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2];a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;_InitializeConstructHeader(c,STRING_TABLE.__str817|0,h,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+124|0)>>2]);HEAP32[(h+24|0)>>2]=0;f=c;a=_FindFunction(c,STRING_TABLE.__str13830|0);f=_GenConstant(f,30,a);a=_GenConstant(c,8,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+124|0)>>2]);HEAP32[(f+8|0)>>2]=a;var a=c,b=_LookupDefclassInScope(c,STRING_TABLE.__str14831|0),a=_GenConstant(a,82,b);HEAP32[(HEAP32[(f+8|0)>>2]+12|
0)>>2]=a;a=_PackExpression(c,f);HEAP32[(h+28|0)>>2]=a;_ReturnExpression(c,f);f=_GetConstructNamePointer(h)+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;_ExpressionInstall(c,HEAP32[(h+28|0)>>2]);_AddConstructToModule(h);return;default:assert(0,"bad label: "+f)}}_CreateInitialDefinstances.X=1;function _PPDefinstancesCommand(h){_PPConstructCommand(h,STRING_TABLE.__str4821|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}
function _ListDefinstancesCommand(h){_ListConstructCommand(h,STRING_TABLE.__str6823|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}function _GetDefinstancesListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str9826|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}function _GetDefinstancesModuleCommand(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str11828|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2])}
function _ResetDefinstances(h){_DoForAllConstructs(h,258,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2],1,0)}
function _RemoveAllDefinstances(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;a=h;e=1;f=0!=(_Bloaded(a)|0)?3:4;break;case 3:c=0;f=11;break;case 4:d=_EnvGetNextDefinstances(a,0);f=5;break;case 5:f=0!=(d|0)?6:10;break;case 6:b=d;d=_EnvGetNextDefinstances(a,d);f=0!=(_EnvIsDefinstancesDeletable(a,b)|0)?7:8;break;case 7:_RemoveConstructFromModule(a,b);_RemoveDefinstances(a,b);f=9;break;case 8:f=a;e=_GetConstructNameString(b);_DefinstancesDeleteError(f,e);e=0;f=9;break;case 9:f=5;break;case 10:c=e;
f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}_RemoveAllDefinstances.X=1;function _EnvListDefinstances(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2],f,c)}function _EnvGetDefinstancesList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]|0)>>2],c)}
function _ResetDefinstancesAction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;e=d=f;_SaveCurrentModule(b);_EnvSetCurrentModule(b,HEAP32[(HEAP32[(d+8|0)>>2]|0)>>2]);d=e+24|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=HEAP32[(e+28|0)>>2];a=3;break;case 3:a=0!=(d|0)?4:10;break;case 4:_EvaluateExpression(b,d,g);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?7:5;break;
case 5:a=2==(HEAPU16[(g+4|0)>>1]&65535|0)?6:8;break;case 6:a=(HEAP32[(g+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?7:8;break;case 7:_RestoreCurrentModule(b);a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=11;break;case 8:a=9;break;case 9:d=HEAP32[(d+12|0)>>2];a=3;break;case 10:a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;_RestoreCurrentModule(b);a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ResetDefinstancesAction.X=1;
function _DefinstancesDeleteError(h,f){_CantDeleteItemErrorMessage(h,STRING_TABLE.__str817|0,f)}
function _ParseDefinstancesName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;HEAP32[g>>2]=0;i=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0,STRING_TABLE.__str817|0,224,232,STRING_TABLE.__str18835|0,1,0,1);a=0==(i|0)?3:4;break;case 3:b=0;a=11;break;case 4:a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?5:6;break;case 5:a=8;break;case 6:a=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|
0)>>2],STRING_TABLE.__str19836|0)|0)?7:8;break;case 7:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str20837|0);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);_PPCRAndIndent(d);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);HEAP32[g>>2]=1;a=8;break;case 8:a=3==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?9:10;break;case 9:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str20837|0);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);_PPCRAndIndent(d);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=10;break;case 10:b=i;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_ParseDefinstancesName.X=1;
function _DestroyDefinstancesAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_ReturnPackedExpression(a,HEAP32[(b+28|0)>>2]);_DestroyConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}_DestroyDefinstancesAction.X=1;function _DeffactsBinarySetup(h){_AllocateEnvironmentData(h,26,16,260);_AddBinaryItem(h,STRING_TABLE.__str842|0,0,262,264,266,268,270,272,274)}
function _DeallocateDeffactsBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=28*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]|0)>>2],a);f=4;break;case 4:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0)>>2]|0;f=0!=(a|0)?5:6;break;case 5:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+8|0)>>2],a);f=6;break;case 6:return;default:assert(0,"bad label: "+f)}}
_DeallocateDeffactsBloadData.X=1;function _BloadDeffactsModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+8|0)>>2]+12*f|0}
function _BsaveFind(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0)>>2]=0;b=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(b|0)?4:10;break;case 4:_EnvSetCurrentModule(c,b);a=HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>
2]+1|0;a=_EnvGetNextDeffacts(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=a|0;var d=HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0,e=HEAP32[d>>2];HEAP32[d>>2]=e+1|0;_MarkConstructHeaderNeededItems(f,e);f=_ExpressionSize(HEAP32[(a+24|0)>>2]);d=HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+32|0;HEAP32[d>>2]=HEAP32[d>>2]+f|0;_MarkNeededItems(c,HEAP32[(a+24|0)>>2]);f=7;break;case 7:a=_EnvGetNextDeffacts(c,a);f=5;break;case 8:f=9;break;case 9:b=_EnvGetNextDefmodule(c,b);f=3;break;case 10:return;default:assert(0,
"bad label: "+f)}}_BsaveFind.X=1;function _BsaveExpressions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(e|0)?4:10;break;case 4:_EnvSetCurrentModule(a,e);d=_EnvGetNextDeffacts(a,0);c=5;break;case 5:c=0!=(d|0)?6:8;break;case 6:_BsaveExpression(a,HEAP32[(d+24|0)>>2],b);c=7;break;case 7:d=_EnvGetNextDeffacts(a,d);c=5;break;case 8:c=9;break;case 9:e=_EnvGetNextDefmodule(a,e);c=3;break;case 10:return;default:assert(0,"bad label: "+c)}}
function _BsaveStorage(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+4|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+12|0,4,f);STACKTOP=c}
function _BsaveBinaryItem(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4,j=c+20;b=h;d=f;HEAP32[e>>2]=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+4|0)>>2]<<4|0)+(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+12|0)>>2]|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:6;break;case 4:_EnvSetCurrentModule(b,
e);a=_GetModuleItem(b,0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]|0)>>2]+4|0)>>2]);_AssignBsaveDefmdlItemHdrVals(j|0,a|0);_GenWrite(j,12,d);a=5;break;case 5:e=_EnvGetNextDefmodule(b,e);a=3;break;case 6:e=_EnvGetNextDefmodule(b,0);a=7;break;case 7:a=0!=(e|0)?8:17;break;case 8:_EnvSetCurrentModule(b,e);g=_EnvGetNextDeffacts(b,0);a=9;break;case 9:a=0!=(g|0)?10:15;break;case 10:_AssignBsaveConstructHeaderVals(i|0,g|0);a=0!=(HEAP32[(g+24|0)>>2]|0)?11:12;break;case 11:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+32|0)>>2];a=_ExpressionSize(HEAP32[(g+24|0)>>2]);var k=HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+32|0;HEAP32[k>>2]=HEAP32[k>>2]+a|0;a=13;break;case 12:HEAP32[(i+12|0)>>2]=-1;a=13;break;case 13:_GenWrite(i,16,d);a=14;break;case 14:g=_EnvGetNextDeffacts(b,g);a=9;break;case 15:a=16;break;case 16:e=_EnvGetNextDefmodule(b,e);a=7;break;case 17:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+12|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+4|0);STACKTOP=c;return;
default:assert(0,"bad label: "+a)}}_BsaveBinaryItem.X=1;
function _BloadStorage(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+4|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+12|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+104|0)>>2]+8|0)>>2]=0;c=7;break;case 4:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+12|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+8|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]|0)>>2]=0;c=7;break;case 6:HEAP32[b>>2]=28*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+104|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+104|0)>>2]|0)>>2]=c;c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorage.X=1;function _BloadBinaryItem(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+12|0)>>2],12,276);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+4|0)>>2],16,278);STACKTOP=f}
function _ClearBload843(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;f=3;break;case 3:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0)>>2]|0)?4:6;break;case 4:_UnmarkConstructHeader(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]|0)>>2]+28*a|0);f=5;break;case 5:a=a+1|0;f=3;break;case 6:b=28*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+4|0)>>2]|0;f=0!=(b|0)?7:8;break;case 7:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]|0)>>2],b);f=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+104|0)>>2]+4|0)>>2]=0;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0)>>2]|0;f=0!=(b|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+8|0)>>2],b);f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+104|0)>>2]+12|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}_ClearBload843.X=1;
function _UpdateDeffactsModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]+8|0)>>2]+12*c|0,28,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+104|0)>>2]|0)>>2])}
function _UpdateDeffacts(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=a;_UpdateConstructHeader(b,e|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]|0)>>2]+28*d|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]+8|0)>>2],28,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+104|0)>>2]|0)>>2]);a=-1==(HEAP32[(e+12|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(e+12|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+104|0)>>2]|0)>>2]+28*d|0)+24|0)>>2]=g;return;default:assert(0,"bad label: "+a)}}_UpdateDeffacts.X=1;
function _DeffactsBasicCommands(h){_EnvAddResetFunction(h,STRING_TABLE.__str844|0,280,0);_EnvAddClearFunction(h,STRING_TABLE.__str844|0,282,0);_AddSaveFunction(h,STRING_TABLE.__str844|0,284,10);_EnvDefineFunction2(h,STRING_TABLE.__str1845|0,109,286,STRING_TABLE.__str2846|0,STRING_TABLE.__str3847|0);_EnvDefineFunction2(h,STRING_TABLE.__str4848|0,118,288,STRING_TABLE.__str5849|0,STRING_TABLE.__str6850|0);_EnvDefineFunction2(h,STRING_TABLE.__str7851|0,119,290,STRING_TABLE.__str8852|0,STRING_TABLE.__str6850|
0);_EnvDefineFunction2(h,STRING_TABLE.__str9853|0,118,292,STRING_TABLE.__str10854|0,STRING_TABLE.__str3847|0);_EnvDefineFunction2(h,STRING_TABLE.__str11855|0,118,294,STRING_TABLE.__str12856|0,STRING_TABLE.__str6850|0);_DeffactsBinarySetup(h);_DeffactsCompilerSetup(h)}function _ResetDeffacts(h){_DoForAllConstructs(h,296,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2],1,0)}
function _ClearDeffacts(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=c=h;f=_FindFunction(c,STRING_TABLE.__str13857|0);a=_GenConstant(a,30,f);f=c;var b=_EnvFindDeftemplate(c,STRING_TABLE.__str14858|0);f=_GenConstant(f,63,b);HEAP32[(a+8|0)>>2]=f;_ExpressionInstall(c,a);f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]|0)?3:4;break;case 3:var d=_genalloc(c,28);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=d;d=_GetDeffactsModuleItem(c,0);HEAP32[((h|0)+8|0)>>2]=d;d=_EnvAddSymbol(c,STRING_TABLE.__str14858|0);HEAP32[(h|0)>>2]=d;d=HEAP32[(h|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=_PackExpression(c,a);HEAP32[(h+24|0)>>2]=d;HEAP32[((h|0)+
16|0)>>2]=0;HEAP32[((h|0)+4|0)>>2]=0;HEAP32[((h|0)+20|0)>>2]=0;_ReturnExpression(c,a);_AddConstructToModule(h|0);return;default:assert(0,"bad label: "+f)}}_ClearDeffacts.X=1;function _SaveDeffacts(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _GetDeffactsListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str1845|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}
function _UndeffactsCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str4848|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _DeffactsModuleFunction(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str7851|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _ListDeffactsCommand(h){_ListConstructCommand(h,STRING_TABLE.__str9853|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}
function _PPDeffactsCommand(h){_PPConstructCommand(h,STRING_TABLE.__str11855|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _EnvUndeffacts(h,f){return _Undefconstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _EnvGetDeffactsList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2],c)}function _PPDeffacts(h,f,c){return _PPConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}
function _EnvListDeffacts(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2],f,c)}
function _ResetDeffactsAction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c,e;b=h;e=f;a=0==(HEAP32[(e+24|0)>>2]|0)?3:4;break;case 3:a=5;break;case 4:_SetEvaluationError(b,0);_EvaluateExpression(b,HEAP32[(e+24|0)>>2],d);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _DeffactsCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str859|0,0,298,0,300,2);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+8|0)>>2]=f}function _BeforeDeffactsToCode(h){_MarkConstructBsaveIDs(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2])}
function _ConstructToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v=e+12,w=e+16,x,y;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;s=0;HEAP32[t>>2]=0;HEAP32[u>>2]=1;HEAP32[v>>2]=0;HEAP32[w>>2]=1;y=x=0;_fprintf(m,STRING_TABLE.__str2861|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:14;break;case 4:_EnvSetCurrentModule(j,q);x=_OpenFileIfNeeded(j,x,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str3862|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(x|0)?5:6;break;case 5:_CloseDeffactsFiles(j,x,y,o);i=0;g=15;break;case 6:_DeffactsModuleToCode(j,x,q,n,o,s);x=_CloseFileIfNeeded(j,x,t,u,o,0,0);r=_EnvGetNextDeffacts(j,0);g=7;break;case 7:g=0!=(r|0)?8:12;
break;case 8:y=_OpenFileIfNeeded(j,y,k,l,n,p,HEAP32[w>>2],m,STRING_TABLE.__str4863|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]|0)>>2]+8|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(y|0)?9:10;break;case 9:_CloseDeffactsFiles(j,x,y,o);i=0;g=15;break;case 10:_DeffactsToCode(j,y,r,n,o,s);HEAP32[v>>2]=HEAP32[v>>2]+1|0;y=_CloseFileIfNeeded(j,y,v,w,o,0,0);g=11;break;case 11:r=_EnvGetNextDeffacts(j,r);g=7;break;case 12:s=s+1|0;HEAP32[t>>2]=HEAP32[t>>2]+1|0;g=13;break;case 13:q=_EnvGetNextDefmodule(j,q);
g=3;break;case 14:_CloseDeffactsFiles(j,x,y,o);i=1;g=15;break;case 15:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstructToCode.X=1;
function _DeffactsCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str1860|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}
function _CloseDeffactsFiles(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l=b+4;e=h;g=f;i=c;j=a;HEAP32[k>>2]=j;HEAP32[l>>2]=0;d=0!=(i|0)?3:4;break;case 3:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,i,k,l,j,0,0);d=4;break;case 4:d=0!=(g|0)?5:6;break;case 5:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,g,k,l,j,0,0);d=6;break;case 6:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}
function _DeffactsModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str5864|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+8|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(f,
STRING_TABLE.__str7866|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _DeffactsToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str5864|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(h,f,c|0,a,b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+
8|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(f,STRING_TABLE.__str6865|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ExpressionToCode(h,f,HEAP32[(c+24|0)>>2]);_fprintf(f,STRING_TABLE.__str7866|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=e}_DeffactsToCode.X=1;
function _InitializeDeffacts(h){_AllocateEnvironmentData(h,0,12,302);_InitializeDeffactsModules(h);_DeffactsBasicCommands(h);var f=_AddConstruct(h,STRING_TABLE.__str869|0,STRING_TABLE.__str869|0,304,306,94,96,98,308,102,310,312,314);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2]=f}
function _DeallocateDeffactsData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,316,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDeffactsData.X=1;function _InitializeDeffactsModules(h){var f=_RegisterModuleItem(h,STRING_TABLE.__str869|0,318,320,322,324,306);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2]=f}
function _EnvFindDeffacts(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2])}function _EnvGetNextDeffacts(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2])}
function _EnvIsDeffactsDeletable(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(_ConstructsDeletable(a)|0)?4:3;break;case 3:c=0;f=7;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+168|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:c=0;f=7;break;case 6:c=1;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _ReturnDeffacts(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_ExpressionDeinstall(a,HEAP32[(b+24|0)>>2]);_ReturnPackedExpression(a,HEAP32[(b+24|0)>>2]);_DeinstallConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}_ReturnDeffacts.X=1;function _GetDeffactsModuleItem(h,f){return _GetConstructModuleItemByIndex(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]+4|0)>>2])}
function _AllocateModule874(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule874.X=1;
function _ReturnModule875(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule875.X=1;
function _DestroyDeffactsAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_ReturnPackedExpression(a,HEAP32[(b+24|0)>>2]);_DestroyConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}_DestroyDeffactsAction.X=1;
function _ParseDeffacts(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l=c+4;d=h;e=f;HEAP32[k>>2]=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str876|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str1877|
0);b=1;a=20;break;case 5:g=_GetConstructNameAndComment(d,e,l,STRING_TABLE.__str1877|0,306,312,STRING_TABLE.__str2879|0,1,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=20;break;case 7:i=_BuildRHSAssert(d,e,l,k,0,0,STRING_TABLE.__str1877|0);a=1==(HEAP32[k>>2]|0)?8:9;break;case 8:b=1;a=20;break;case 9:a=0!=(_ExpressionContainsVariables(i,0)|0)?10:11;break;case 10:_LocalVariableErrorMessage(d,STRING_TABLE.__str3880|0);_ReturnExpression(d,i);b=1;a=20;break;case 11:_SavePPBuffer(d,STRING_TABLE.__str4881|0);a=
0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?12:13;break;case 12:_ReturnExpression(d,i);b=0;a=20;break;case 13:_ExpressionInstall(d,i);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]|0)?14:15;break;case 14:var m=_genalloc(d,28);a=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=16;break;case 16:j=m;HEAP32[(j|0)>>2]=g;a=g+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=_PackExpression(d,i);HEAP32[(j+24|0)>>2]=a;a=d;var n=_FindModuleItem(d,STRING_TABLE.__str1877|0)+4|0;a=_GetModuleItem(a,0,HEAP32[n>>2]);HEAP32[((j|0)+8|0)>>2]=a;HEAP32[((j|0)+16|0)>>2]=0;HEAP32[((j|0)+20|0)>>2]=0;_ReturnExpression(d,i);a=1==(_EnvGetConserveMemory(d)|0)?17:18;break;
case 17:HEAP32[((j|0)+4|0)>>2]=0;a=19;break;case 18:a=_CopyPPBuffer(d);HEAP32[((j|0)+4|0)>>2]=a;a=19;break;case 19:_AddConstructToModule(j|0);b=0;a=20;break;case 20:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDeffacts.X=1;function _SetupDeffunctionsBload(h){_AllocateEnvironmentData(h,24,16,326);_AddBinaryItem(h,STRING_TABLE.__str884|0,0,328,330,332,334,336,338,340)}
function _DeallocateDeffunctionBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=52*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]|0)>>2],a);f=4;break;case 4:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?5:6;break;case 5:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+12|0)>>2],a);f=6;break;case 6:return;default:assert(0,"bad label: "+f)}}
_DeallocateDeffunctionBloadData.X=1;function _BsaveDeffunctionFind(h){_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+8|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+4|0)>>2]=0;var f=_DoForAllConstructs(h,342,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2],0,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+8|0)>>2]=f}_BsaveDeffunctionFind.X=1;
function _BsaveDeffunctionExpressions(h,f){_DoForAllConstructs(h,344,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2],0,f)}function _BsaveStorageDeffunctions(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+8|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+4|0,4,f);STACKTOP=c}
function _BsaveDeffunctions(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4;b=h;d=f;HEAP32[e>>2]=(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+8|0)>>2]|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+4|0)>>2]<<5|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:5;break;case 4:a=b;var i=
e,j=_FindModuleItem(b,STRING_TABLE.__str1885|0)+4|0;a=_GetModuleItem(a,i,HEAP32[j>>2]);_AssignBsaveDefmdlItemHdrVals(g|0,a|0);_GenWrite(g,12,d);e=_EnvGetNextDefmodule(b,e);a=3;break;case 5:_DoForAllConstructs(b,346,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+92|0)>>2]+4|0)>>2],0,d);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+8|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+4|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveDeffunctions.X=1;
function _BloadDeffunctionModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+12|0)>>2]+12*f|0}
function _BloadStorageDeffunctions(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);c=0==(HEAP32[b>>2]|0)?3:4;break;case 3:c=9;break;case 4:_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+8|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+4|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+8|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+96|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]|0)>>2]=0;c=9;break;case 6:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+12|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+4|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]|0)>>2]=0;c=9;break;case 8:HEAP32[b>>2]=52*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,
HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+96|0)>>2]|0)>>2]=c;c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageDeffunctions.X=1;
function _BloadDeffunctions(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+8|0)>>2],12,348);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+4|0)>>2],32,350);STACKTOP=f}
function _ClearDeffunctionBload(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+8|0)>>2]|0;f=0==(b|0)?3:4;break;case 3:f=11;break;case 4:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+12|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+8|0)>>2]=0;f=5;break;case 5:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+4|0)>>2]|0)?6:8;break;case 6:_UnmarkConstructHeader(c,
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]|0)>>2]+52*a|0);f=7;break;case 7:a=a+1|0;f=5;break;case 8:b=52*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+4|0)>>2]|0;f=0==(b|0)?9:10;break;case 9:f=11;break;case 10:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+96|0)>>2]+4|0)>>2]=0;f=11;break;case 11:return;default:assert(0,"bad label: "+f)}}_ClearDeffunctionBload.X=1;
function _UpdateDeffunctionModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+12|0)>>2]+12*c|0,52,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]|0)>>2])}
function _UpdateDeffunction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;a=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]|0)>>2]+52*a|0;_UpdateConstructHeader(b,d|0,e|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]+12|0)>>2],52,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+96|0)>>2]|0)>>2]);a=-1==(HEAP32[(d+28|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+28|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[(e+36|0)>>2]=g;HEAP32[(e+
24|0)>>2]=0;HEAP32[(e+28|0)>>2]=0;HEAP16[(e+32|0)>>1]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+92|0)>>2]+64|0)>>2]&65535;HEAP32[(e+40|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[(e+44|0)>>2]=HEAP32[(d+16|0)>>2];HEAP32[(e+48|0)>>2]=HEAP32[(d+20|0)>>2];return;default:assert(0,"bad label: "+a)}}_UpdateDeffunction.X=1;
function _BsaveDeffunction(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;g=c;_AssignBsaveConstructHeaderVals(i|0,e|0);HEAP32[(i+12|0)>>2]=HEAP32[(e+40|0)>>2];HEAP32[(i+16|0)>>2]=HEAP32[(e+44|0)>>2];HEAP32[(i+20|0)>>2]=HEAP32[(e+48|0)>>2];b=0!=(HEAP32[(e+36|0)>>2]|0)?3:4;break;case 3:HEAP32[(i+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(e+
36|0)>>2]);var j=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[j>>2]=HEAP32[j>>2]+b|0;b=5;break;case 4:HEAP32[(i+28|0)>>2]=-1;b=5;break;case 5:_GenWrite(i,32,g);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveDeffunction.X=1;function _BsaveDeffunctionExpression(h,f,c){_BsaveExpression(h,HEAP32[(f+36|0)>>2],c)}
function _MarkDeffunctionItems(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+96|0)>>2]+4|0,a=HEAP32[c>>2];HEAP32[c>>2]=a+1|0;_MarkConstructHeaderNeededItems(f,a);c=_ExpressionSize(HEAP32[(f+36|0)>>2]);a=HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+32|0;HEAP32[a>>2]=HEAP32[a>>2]+c|0;_MarkNeededItems(h,HEAP32[(f+36|0)>>2])}function _SetupDeffunctionCompiler(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str886|0,0,352,0,354,2);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+68|0)>>2]=f}
function _ReadyDeffunctionsForCode(h){_MarkConstructBsaveIDs(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2])}
function _DeffunctionsToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v=e+12,w=e+16,x,y;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;s=0;HEAP32[t>>2]=0;HEAP32[u>>2]=1;HEAP32[v>>2]=0;HEAP32[w>>2]=1;y=x=0;_fprintf(m,STRING_TABLE.__str4890|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:12;break;case 4:_EnvSetCurrentModule(j,q);x=_OpenFileIfNeeded(j,x,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str5891|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(x|0)?5:6;break;case 5:_CloseDeffunctionFiles(j,x,y,o);i=0;g=13;break;case 6:_DeffunctionModuleToCode(j,x,q,n,o);x=_CloseFileIfNeeded(j,x,t,u,o,0,0);r=_EnvGetNextDeffunction(j,0);g=7;break;case 7:g=0!=
(r|0)?8:11;break;case 8:y=_OpenFileIfNeeded(j,y,k,l,n,p,HEAP32[w>>2],m,STRING_TABLE.__str6892|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(y|0)?9:10;break;case 9:_CloseDeffunctionFiles(j,x,y,o);i=0;g=13;break;case 10:_SingleDeffunctionToCode(j,y,r,n,o,s);HEAP32[v>>2]=HEAP32[v>>2]+1|0;y=_CloseFileIfNeeded(j,y,v,w,o,0,0);r=_EnvGetNextDeffunction(j,r);g=7;break;case 11:q=_EnvGetNextDefmodule(j,q);s=s+1|0;HEAP32[t>>2]=HEAP32[t>>2]+1|0;g=3;break;
case 12:_CloseDeffunctionFiles(j,x,y,o);i=1;g=13;break;case 13:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_DeffunctionsToCode.X=1;
function _PrintDeffunctionReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str1887|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+92|0)>>
2]+68|0)>>2]+20|0)>>2]+4|0)>>2];var m=k,n=((HEAP32[((j|0)+12|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[((j|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str2888|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _DeffunctionCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str3889|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}function _PrintDeffunctionCall(){}function _DecrementDeffunctionBusyCount(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=h;a=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:c=a+24|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}function _IncrementDeffunctionBusyCount(h,f){var c=f+24|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}
function _CloseDeffunctionFiles(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l=b+4;e=h;g=f;i=c;j=a;HEAP32[k>>2]=j;HEAP32[l>>2]=0;d=0!=(i|0)?3:4;break;case 3:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,i,k,l,j,0,0);d=4;break;case 4:d=0!=(g|0)?5:6;break;case 5:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,g,k,l,j,0,0);d=6;break;case 6:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}
function _DeffunctionModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str7893|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]+4|
0)>>2]);_fprintf(f,STRING_TABLE.__str10896|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _SingleDeffunctionToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str7893|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(h,f,c|0,a,b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|
0)>>2]+92|0)>>2]+68|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(f,STRING_TABLE.__str8894|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ExpressionToCode(h,f,HEAP32[(c+36|0)>>2]);h=HEAP32[(c+40|0)>>2];a=HEAP32[(c+44|0)>>2];c=HEAP32[(c+48|0)>>2];_fprintf(f,STRING_TABLE.__str9895|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=
a,HEAP32[tempInt+8>>2]=c,tempInt));_fprintf(f,STRING_TABLE.__str10896|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=e}_SingleDeffunctionToCode.X=1;
function _CallDeffunction(h,f,c,a){var b=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;e=h;g=f;i=c;j=a;HEAP16[(j+4|0)>>1]=2;HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:d=11;break;case 4:k=_ExecutingConstruct(e);_SetExecutingConstruct(e,
1);l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+92|0)>>2]+72|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+92|0)>>2]+72|0)>>2]=g;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=g+28|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=e;var n=i,o=_CountArguments(i),p=_GetConstructNameString(g);_PushProcParameters(d,n,o,p,STRING_TABLE.__str899|0,356);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:d=g+28|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(e+16|
0)>>2]+92|0)>>2]+72|0)>>2]=l;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PeriodicCleanup(e,0,1);_SetExecutingConstruct(e,k);d=11;break;case 6:d=0!=HEAP16[(g+32|0)>>1]<<16>>16?7:8;break;case 7:_WatchDeffunction(e,STRING_TABLE.__str1900|0);d=8;break;case 8:_StartProfile(e,m,(g|0)+20|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(e,HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2],HEAP32[(g+36|0)>>2],HEAP32[(g+48|0)>>2],j,356);_EndProfile(e,m);d=
0!=HEAP16[(g+32|0)>>1]<<16>>16?9:10;break;case 9:_WatchDeffunction(e,STRING_TABLE.__str2901|0);d=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+52|0)>>2]|0)>>2]=0;d=g+28|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PopProcParameters(e);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+92|0)>>2]+72|0)>>2]=l;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PropagateReturnValue(e,j);_PeriodicCleanup(e,0,1);_SetExecutingConstruct(e,k);d=11;break;case 11:STACKTOP=b;return;default:assert(0,"bad label: "+
d)}}_CallDeffunction.X=1;function _UnboundDeffunctionErr(h){_EnvPrintRouter(h,STRING_TABLE.__str7906|0,STRING_TABLE.__str8907|0);var f=_GetConstructNameString(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+72|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str7906|0,f);_EnvPrintRouter(h,STRING_TABLE.__str7906|0,STRING_TABLE.__str9908|0)}
function _WatchDeffunction(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;_EnvPrintRouter(a,STRING_TABLE.__str3902|0,STRING_TABLE.__str4903|0);_EnvPrintRouter(a,STRING_TABLE.__str3902|0,c);c=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+92|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2];var b=_EnvGetCurrentModule(a);c=(c|0)!=(b|0)?3:4;break;case 3:c=a;b=_EnvGetDefmoduleName(a,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+92|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2]);_EnvPrintRouter(c,STRING_TABLE.__str3902|
0,b);_EnvPrintRouter(a,STRING_TABLE.__str3902|0,STRING_TABLE.__str5904|0);c=4;break;case 4:_EnvPrintRouter(a,STRING_TABLE.__str3902|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+92|0)>>2]+72|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str3902|0,STRING_TABLE.__str6905|0);_PrintLongInteger(a,STRING_TABLE.__str3902|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]);_PrintProcParamArray(a,STRING_TABLE.__str3902|0);return;default:assert(0,"bad label: "+c)}}
_WatchDeffunction.X=1;
function _SetupDeffunctions(h){var f=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var c=_SetupDeffunctions_deffunctionEntityRecord>>2,a=f>>2,b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_AllocateEnvironmentData(h,23,88,358);a=HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+8|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");c=
f>>2;a>>=2;for(b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+8|0,32);c=_RegisterModuleItem(h,STRING_TABLE.__str1910|0,360,362,364,366,368);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2]=c;c=_AddConstruct(h,STRING_TABLE.__str1910|0,STRING_TABLE.__str2911|0,370,368,94,96,98,372,102,374,376,378);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2]=c;_AddClearReadyFunction(h,STRING_TABLE.__str1910|0,380,0);_AddPortConstructItem(h,STRING_TABLE.__str1910|
0,2);_AddSaveFunction(h,STRING_TABLE.__str3912|0,382,1E3);_AddSaveFunction(h,STRING_TABLE.__str2911|0,384,0);_EnvDefineFunction2(h,STRING_TABLE.__str4913|0,118,386,STRING_TABLE.__str5914|0,STRING_TABLE.__str6915|0);_EnvDefineFunction2(h,STRING_TABLE.__str7916|0,118,388,STRING_TABLE.__str8917|0,STRING_TABLE.__str9918|0);_EnvDefineFunction2(h,STRING_TABLE.__str10919|0,118,390,STRING_TABLE.__str11920|0,STRING_TABLE.__str6915|0);_EnvDefineFunction2(h,STRING_TABLE.__str12921|0,109,392,STRING_TABLE.__str13922|
0,STRING_TABLE.__str9918|0);_EnvDefineFunction2(h,STRING_TABLE.__str14923|0,119,394,STRING_TABLE.__str15924|0,STRING_TABLE.__str6915|0);_SetupDeffunctionsBload(h);_SetupDeffunctionCompiler(h);_AddWatchItem(h,STRING_TABLE.__str2911|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+64|0,32,396,398);STACKTOP=f}_SetupDeffunctions.X=1;
function _EvaluateDeffunctionCall(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;d=h;a=f;e=c;_CallDeffunction(d,a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],e);a=2==(HEAPU16[(e+4|0)>>1]&65535|0)?3:5;break;case 3:a=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?4:5;break;case 4:b=0;a=6;break;case 5:b=1;a=6;break;case 6:return b;default:assert(0,"bad label: "+a)}}
function _DeallocateDeffunctionData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,400,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+92|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+92|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDeffunctionData.X=1;
function _AllocateModule936(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule936.X=1;
function _ReturnModule937(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule937.X=1;
function _ClearDeffunctionsReady(h){return 0!=(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+72|0)>>2]|0)?0:1}function _EnvSetDeffunctionWatch(h,f,c){HEAP16[(c+32|0)>>1]=f&65535}function _EnvGetDeffunctionWatch(h,f){return HEAPU16[(f+32|0)>>1]&65535}function _EnvFindDeffunction(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}function _EnvGetNextDeffunction(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2])}
function _EnvIsDeffunctionDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=7;break;case 4:d=b;if(0==(HEAP32[(d+24|0)>>2]|0))c=5;else{var e=0;c=6}break;case 5:e=0==(HEAP32[(d+28|0)>>2]|0);c=6;break;case 6:a=e?1:0;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _EnvUndeffunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=1==(_Bloaded(b)|0)?3:4;break;case 3:a=0;c=9;break;case 4:c=0==(d|0)?5:6;break;case 5:a=_RemoveAllDeffunctions(b);c=9;break;case 6:c=0==(_EnvIsDeffunctionDeletable(b,d)|0)?7:8;break;case 7:a=0;c=9;break;case 8:_RemoveConstructFromModule(b,d);_RemoveDeffunction(b,d);a=1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _RemoveDeffunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:c=a;var d=_GetConstructNamePointer(b);_DecrementSymbolCount(c,d);_ExpressionDeinstall(a,HEAP32[(b+36|0)>>2]);_ReturnPackedExpression(a,HEAP32[(b+36|0)>>2]);_SetConstructPPForm(a,b,0);_ClearUserDataList(a,HEAP32[((b|0)+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}_RemoveDeffunction.X=1;function _SaveDeffunctionHeaders(h,f,c){_DoForAllConstructsInModule(h,f,402,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]+4|0)>>2],0,c)}
function _SaveDeffunctions(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}function _UndeffunctionCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str4913|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}function _ListDeffunctionsCommand(h){_ListConstructCommand(h,STRING_TABLE.__str7916|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}
function _PPDeffunctionCommand(h){_PPConstructCommand(h,STRING_TABLE.__str10919|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}function _GetDeffunctionListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str12921|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}function _GetDeffunctionModuleCommand(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str14923|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2])}
function _DeffunctionWatchAccess(h,f,c,a){return _ConstructSetWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],c,a,404,406)}function _DeffunctionWatchPrint(h,f,c,a){return _ConstructPrintWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],f,a,404,406)}function _LookupDeffunctionByMdlOrScope(h,f){return _LookupConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],f,1)}
function _LookupDeffunctionInScope(h,f){return _LookupConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],f,0)}
function _RemoveAllDeffunctions(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;a=h;e=1;f=1==(_Bloaded(a)|0)?3:4;break;case 3:c=0;f=19;break;case 4:b=_EnvGetNextDeffunction(a,0);f=5;break;case 5:f=0!=(b|0)?6:10;break;case 6:f=0<HEAPU32[(b+28|0)>>2]>>>0?7:8;break;case 7:e=a;f=_GetConstructNameString(b);_DeffunctionDeleteError(e,f);e=0;f=9;break;case 8:f=HEAP32[(b+24|0)>>2];_ExpressionDeinstall(a,HEAP32[(b+36|0)>>2]);HEAP32[(b+24|0)>>2]=f;_ReturnPackedExpression(a,HEAP32[(b+36|0)>>2]);HEAP32[(b+36|
0)>>2]=0;f=9;break;case 9:b=_EnvGetNextDeffunction(a,b);f=5;break;case 10:b=_EnvGetNextDeffunction(a,0);f=11;break;case 11:f=0!=(b|0)?12:18;break;case 12:d=b;b=_EnvGetNextDeffunction(a,b);f=0==(HEAP32[(d+28|0)>>2]|0)?13:17;break;case 13:f=0<HEAPU32[(d+24|0)>>2]>>>0?14:15;break;case 14:_PrintWarningID(a,STRING_TABLE.__str23932|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str24933|0,STRING_TABLE.__str25934|0);e=a;f=_GetConstructNameString(d);_EnvPrintRouter(e,STRING_TABLE.__str24933|0,f);_EnvPrintRouter(a,
STRING_TABLE.__str24933|0,STRING_TABLE.__str26935|0);_SetConstructPPForm(a,d,0);e=0;f=16;break;case 15:_RemoveConstructFromModule(a,d);_RemoveDeffunction(a,d);f=16;break;case 16:f=17;break;case 17:f=11;break;case 18:c=e;f=19;break;case 19:return c;default:assert(0,"bad label: "+f)}}_RemoveAllDeffunctions.X=1;function _EnvListDeffunctions(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],f,c)}
function _EnvGetDeffunctionList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+92|0)>>2]|0)>>2],c)}
function _CheckDeffunctionCall(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(e|0)?3:4;break;case 3:b=0;a=14;break;case 4:i=e;a=(g|0)<(HEAP32[(i+40|0)>>2]|0)?5:9;break;case 5:a=-1==(HEAP32[(i+44|0)>>2]|0)?6:7;break;case 6:a=d;var j=_GetConstructNameString(i);_ExpectedCountError(a,j,1,HEAP32[(i+40|0)>>2]);a=8;break;case 7:a=d;j=_GetConstructNameString(i);_ExpectedCountError(a,j,0,HEAP32[(i+40|0)>>2]);a=8;break;case 8:b=0;a=14;break;case 9:a=(g|0)>(HEAP32[(i+40|0)>>2]|0)?10:
12;break;case 10:a=-1!=(HEAP32[(i+44|0)>>2]|0)?11:12;break;case 11:b=d;a=_GetConstructNameString(i);_ExpectedCountError(b,a,0,HEAP32[(i+40|0)>>2]);b=0;a=14;break;case 12:a=13;break;case 13:b=1;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_CheckDeffunctionCall.X=1;
function _SaveDeffunctionHeader(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=0!=(_GetConstructPPForm(b,d)|0)?3:15;break;case 3:_EnvPrintRouter(b,e,STRING_TABLE.__str16925|0);g=b;a=e;var i=_GetConstructModuleName(d);_EnvPrintRouter(g,a,i);_EnvPrintRouter(b,e,STRING_TABLE.__str17926|0);g=b;a=e;i=_GetConstructNameString(d);_EnvPrintRouter(g,a,i);_EnvPrintRouter(b,e,STRING_TABLE.__str18927|0);g=0;a=4;break;case 4:a=(g|0)<(HEAP32[(d+40|0)>>2]|0)?5:9;break;case 5:_EnvPrintRouter(b,
e,STRING_TABLE.__str19928|0);_PrintLongInteger(b,e,g);a=(g|0)!=(HEAP32[(d+40|0)>>2]-1|0)?6:7;break;case 6:_EnvPrintRouter(b,e,STRING_TABLE.__str20929|0);a=7;break;case 7:a=8;break;case 8:g=g+1|0;a=4;break;case 9:a=-1==(HEAP32[(d+44|0)>>2]|0)?10:13;break;case 10:a=0!=(HEAP32[(d+40|0)>>2]|0)?11:12;break;case 11:_EnvPrintRouter(b,e,STRING_TABLE.__str20929|0);a=12;break;case 12:_EnvPrintRouter(b,e,STRING_TABLE.__str21930|0);a=14;break;case 13:_EnvPrintRouter(b,e,STRING_TABLE.__str22931|0);a=14;break;
case 14:a=15;break;case 15:return;default:assert(0,"bad label: "+a)}}_SaveDeffunctionHeader.X=1;function _DeffunctionDeleteError(h,f){_CantDeleteItemErrorMessage(h,STRING_TABLE.__str1910|0,f)}
function _DestroyDeffunctionAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_ReturnPackedExpression(a,HEAP32[(b+36|0)>>2]);_DestroyConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}_DestroyDeffunctionAction.X=1;
function _ParseDeffunction(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l=c+4,m=c+8,n=c+12,o=c+16,p,q,r,s;d=h;e=f;r=q=p=HEAP32[o>>2]=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str941|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,
STRING_TABLE.__str1942|0);b=1;a=40;break;case 5:g=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+92|0)>>2]+76|0,STRING_TABLE.__str2943|0,368,0,STRING_TABLE.__str3944|0,1,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=40;break;case 7:a=0==(_ValidDeffunctionName(d,HEAP32[(g+16|0)>>2])|0)?8:9;break;case 8:b=1;a=40;break;case 9:j=_ParseProcParameters(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+92|0)>>2]+76|0,0,k,l,m,o,0);a=0!=(HEAP32[o>>2]|0)?10:11;break;case 10:b=1;a=40;break;case 11:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?12:16;break;case 12:s=_EnvFindDeffunction(d,HEAP32[(g+16|0)>>2]);a=0==(s|0)?13:14;break;case 13:s=_AddDeffunction(d,g,0,HEAP32[l>>2],HEAP32[m>>2],0,1);a=15;break;case 14:p=1;q=HEAP32[(s+40|0)>>2]&65535;r=HEAP32[(s+44|0)>>2]&65535;HEAP32[(s+40|0)>>2]=HEAP32[l>>2];HEAP32[(s+44|0)>>2]=HEAP32[m>>2];a=15;break;case 15:a=17;break;case 16:s=_AddDeffunction(d,g,0,HEAP32[l>>2],HEAP32[m>>2],0,1);a=17;break;case 17:a=0==(s|0)?18:19;break;case 18:_ReturnExpression(d,j);b=1;a=
40;break;case 19:_PPCRAndIndent(d);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;i=_ParseProcActions(d,STRING_TABLE.__str2943|0,e,HEAP32[(HEAP32[(d+16|0)>>2]+92|0)>>2]+76|0,j,HEAP32[k>>2],0,0,n,0);a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+92|0)>>2]+76|0)>>1]&65535|0)?20:27;break;case 20:a=0!=(i|0)?21:27;break;case 21:_SyntaxErrorMessage(d,STRING_TABLE.__str2943|0);_ReturnExpression(d,j);_ReturnPackedExpression(d,i);a=0!=p<<16>>16?22:23;break;case 22:HEAP32[(s+40|0)>>2]=q<<16>>16;HEAP32[(s+
44|0)>>2]=r<<16>>16;a=23;break;case 23:a=0==(HEAP32[(s+24|0)>>2]|0)?24:26;break;case 24:a=0!=p<<16>>16?26:25;break;case 25:_RemoveConstructFromModule(d,s);_RemoveDeffunction(d,s);a=26;break;case 26:b=1;a=40;break;case 27:a=0==(i|0)?28:34;break;case 28:_ReturnExpression(d,j);a=0!=p<<16>>16?29:30;break;case 29:HEAP32[(s+40|0)>>2]=q<<16>>16;HEAP32[(s+44|0)>>2]=r<<16>>16;a=30;break;case 30:a=0==(HEAP32[(s+24|0)>>2]|0)?31:33;break;case 31:a=0!=p<<16>>16?33:32;break;case 32:_RemoveConstructFromModule(d,
s);_RemoveDeffunction(d,s);a=33;break;case 33:b=1;a=40;break;case 34:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?35:39;break;case 35:_ReturnExpression(d,j);_ReturnPackedExpression(d,i);a=0!=p<<16>>16?36:37;break;case 36:HEAP32[(s+40|0)>>2]=q<<16>>16;HEAP32[(s+44|0)>>2]=r<<16>>16;a=38;break;case 37:_RemoveConstructFromModule(d,s);_RemoveDeffunction(d,s);a=38;break;case 38:b=0;a=40;break;case 39:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+92|
0)>>2]+76|0)+8|0)>>2]);_SavePPBuffer(d,STRING_TABLE.__str4945|0);_AddDeffunction(d,g,i,HEAP32[l>>2],HEAP32[m>>2],HEAP32[n>>2],0);_ReturnExpression(d,j);b=HEAP32[o>>2];a=40;break;case 40:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ParseDeffunction.X=1;
function _ValidDeffunctionName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;c=0!=(_FindConstruct(b,d)|0)?3:4;break;case 3:_PrintErrorID(b,STRING_TABLE.__str5946|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str7948|0);a=0;c=16;break;case 4:c=0!=(_FindFunction(b,d)|0)?5:6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str5946|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str8949|0);a=0;c=16;break;case 6:i=_LookupDefgenericInScope(b,d);c=0!=(i|0)?
7:11;break;case 7:g=_GetConstructModuleItem(i)|0;c=g=HEAP32[g>>2];var j=_EnvGetCurrentModule(b);c=(c|0)!=(j|0)?8:9;break;case 8:_PrintErrorID(b,STRING_TABLE.__str5946|0,5,0);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str9950|0);a=b;c=_GetConstructNameString(i);_EnvPrintRouter(a,STRING_TABLE.__str6947|0,c);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str10951|0);a=b;c=_EnvGetDefmoduleName(b,g);_EnvPrintRouter(a,STRING_TABLE.__str6947|0,c);_EnvPrintRouter(b,STRING_TABLE.__str6947|
0,STRING_TABLE.__str11952|0);a=0;c=16;break;case 9:_PrintErrorID(b,STRING_TABLE.__str5946|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str12953|0);c=10;break;case 10:a=0;c=16;break;case 11:e=_EnvFindDeffunction(b,d);c=0!=(e|0)?12:15;break;case 12:c=0!=(HEAP32[(e+28|0)>>2]|0)?13:14;break;case 13:_PrintErrorID(b,STRING_TABLE.__str13954|0,4,0);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str14955|0);a=b;c=_GetConstructNameString(e);_EnvPrintRouter(a,STRING_TABLE.__str6947|
0,c);_EnvPrintRouter(b,STRING_TABLE.__str6947|0,STRING_TABLE.__str15956|0);a=0;c=16;break;case 14:c=15;break;case 15:a=1;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_ValidDeffunctionName.X=1;
function _AddDeffunction(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;o=e;q=0;p=_EnvFindDeffunction(i,HEAP32[(j+16|0)>>2]);g=0==(p|0)?3:7;break;case 3:g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]|0)?4:5;break;case 4:var r=_genalloc(i,52);g=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+236|0)>>2]+20|0)>>2]+208|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];g=6;break;case 6:p=r;_InitializeConstructHeader(i,STRING_TABLE.__str2943|0,p,j);g=j+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;HEAP32[(p+36|0)>>2]=0;HEAP32[(p+40|0)>>2]=l;HEAP32[(p+44|0)>>2]=m;HEAP32[(p+48|0)>>2]=n;HEAP32[(p+24|0)>>2]=0;HEAP32[(p+28|0)>>2]=0;g=8;break;case 7:q=_EnvGetDeffunctionWatch(i,p);HEAP32[(p+40|0)>>2]=l;HEAP32[(p+
44|0)>>2]=m;HEAP32[(p+48|0)>>2]=n;g=HEAP32[(p+24|0)>>2];_ExpressionDeinstall(i,HEAP32[(p+36|0)>>2]);HEAP32[(p+24|0)>>2]=g;_ReturnPackedExpression(i,HEAP32[(p+36|0)>>2]);HEAP32[(p+36|0)>>2]=0;_SetConstructPPForm(i,p,0);_RemoveConstructFromModule(i,p);g=8;break;case 8:_AddConstructToModule(p);g=0!=(k|0)?9:10;break;case 9:g=HEAP32[(p+24|0)>>2];_ExpressionInstall(i,k);HEAP32[(p+24|0)>>2]=g;HEAP32[(p+36|0)>>2]=k;g=10;break;case 10:var s=i;g=0!=(q|0)?11:12;break;case 11:var t=1;g=13;break;case 12:t=HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+92|0)>>2]+64|0)>>2];g=13;break;case 13:_EnvSetDeffunctionWatch(s,t,p);g=0==(_EnvGetConserveMemory(i)|0)?14:16;break;case 14:g=0==(o|0)?15:16;break;case 15:g=i;var u=p,v=_CopyPPBuffer(i);_SetConstructPPForm(g,u,v);g=16;break;case 16:return p;default:assert(0,"bad label: "+g)}}_AddDeffunction.X=1;function _SetupDefinstancesBload(h){_AllocateEnvironmentData(h,25,16,408);_AddBinaryItem(h,STRING_TABLE.__str960|0,0,410,412,414,416,418,420,422)}
function _BloadDefinstancesModuleRef(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+12|0)>>2]+12*f|0}
function _DeallocateDefinstancesBinaryData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+4|0)>>2]<<5|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]|0)>>2],a);f=4;break;case 4:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?5:6;break;case 5:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+12|0)>>2],a);f=6;break;case 6:return;default:assert(0,"bad label: "+f)}}
_DeallocateDefinstancesBinaryData.X=1;function _BsaveDefinstancesFind(h){_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+8|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+4|0)>>2]=0;var f=_DoForAllConstructs(h,424,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2],0,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+8|0)>>2]=f}_BsaveDefinstancesFind.X=1;
function _BsaveDefinstancesExpressions(h,f){_DoForAllConstructs(h,426,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2],0,f)}function _BsaveStorageDefinstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+8|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+4|0,4,f);STACKTOP=c}
function _BsaveDefinstancesDriver(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4;b=h;d=f;HEAP32[e>>2]=(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+8|0)>>2]|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+4|0)>>2]<<4|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:5;break;case 4:a=
b;var i=e,j=_FindModuleItem(b,STRING_TABLE.__str960|0)+4|0;a=_GetModuleItem(a,i,HEAP32[j>>2]);_AssignBsaveDefmdlItemHdrVals(g|0,a|0);_GenWrite(g,12,d);e=_EnvGetNextDefmodule(b,e);a=3;break;case 5:_DoForAllConstructs(b,428,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+88|0)>>2]+4|0)>>2],0,d);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+8|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+4|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveDefinstancesDriver.X=1;
function _BloadStorageDefinstances(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);c=0==(HEAP32[b>>2]|0)?3:4;break;case 3:c=9;break;case 4:_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+8|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+4|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+8|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+100|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]|0)>>2]=0;c=9;break;case 6:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+12|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+4|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]|0)>>2]=0;c=9;break;case 8:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]+4|0)>>2]<<5|0;c=
_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+100|0)>>2]|0)>>2]=c;c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageDefinstances.X=1;
function _BloadDefinstances(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+8|0)>>2],12,430);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+4|0)>>2],16,432);STACKTOP=f}
function _ClearDefinstancesBload(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+8|0)>>2]|0;f=0==(b|0)?3:4;break;case 3:f=11;break;case 4:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+12|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+8|0)>>2]=0;f=5;break;case 5:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+4|0)>>2]|0)?6:8;break;case 6:_UnmarkConstructHeader(c,
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]|0)>>2]+(a<<5)|0);f=7;break;case 7:a=a+1|0;f=5;break;case 8:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+4|0)>>2]<<5|0;f=0==(b|0)?9:10;break;case 9:f=11;break;case 10:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+100|0)>>2]+4|0)>>2]=0;f=11;break;case 11:return;default:assert(0,"bad label: "+f)}}_ClearDefinstancesBload.X=1;
function _UpdateDefinstancesModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+12|0)>>2]+12*c|0,32,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]|0)>>2])}
function _UpdateDefinstances(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;a=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]|0)>>2]+(a<<5)|0;_UpdateConstructHeader(b,d|0,e|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]+12|0)>>2],32,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+100|0)>>2]|0)>>2]);a=-1==(HEAP32[(d+12|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[(e+28|0)>>2]=
g;HEAP32[(e+24|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}_UpdateDefinstances.X=1;
function _BsaveDefinstances(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;g=c;_AssignBsaveConstructHeaderVals(i|0,e|0);b=0!=(HEAP32[(e+28|0)>>2]|0)?3:4;break;case 3:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(e+28|0)>>2]);var j=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[j>>2]=HEAP32[j>>2]+b|0;b=5;break;
case 4:HEAP32[(i+12|0)>>2]=-1;b=5;break;case 5:_GenWrite(i,16,g);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveDefinstances.X=1;function _BsaveDefinstancesExpression(h,f,c){_BsaveExpression(h,HEAP32[(f+28|0)>>2],c)}
function _MarkDefinstancesItems(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+100|0)>>2]+4|0,a=HEAP32[c>>2];HEAP32[c>>2]=a+1|0;_MarkConstructHeaderNeededItems(f,a);c=_ExpressionSize(HEAP32[(f+28|0)>>2]);a=HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+32|0;HEAP32[a>>2]=HEAP32[a>>2]+c|0;_MarkNeededItems(h,HEAP32[(f+28|0)>>2])}function _SetupDefinstancesCompiler(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str965|0,0,434,0,436,2);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+8|0)>>2]=f}
function _ReadyDefinstancesForCode(h){_MarkConstructBsaveIDs(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2])}
function _DefinstancesToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v=e+12,w=e+16,x,y;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;s=0;HEAP32[t>>2]=0;HEAP32[u>>2]=1;HEAP32[v>>2]=0;HEAP32[w>>2]=1;y=x=0;_fprintf(m,STRING_TABLE.__str2967|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:12;break;case 4:_EnvSetCurrentModule(j,q);x=_OpenFileIfNeeded(j,x,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str3968|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(x|0)?5:6;break;case 5:_CloseDefinstancesFiles(j,x,y,o);i=0;g=13;break;case 6:_DefinstancesModuleToCode(j,x,q,n,o);x=_CloseFileIfNeeded(j,x,t,u,o,0,0);r=_EnvGetNextDefinstances(j,0);g=7;break;case 7:g=
0!=(r|0)?8:11;break;case 8:y=_OpenFileIfNeeded(j,y,k,l,n,p,HEAP32[w>>2],m,STRING_TABLE.__str4969|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(y|0)?9:10;break;case 9:_CloseDefinstancesFiles(j,x,y,o);i=0;g=13;break;case 10:_SingleDefinstancesToCode(j,y,r,n,o,s);HEAP32[v>>2]=HEAP32[v>>2]+1|0;y=_CloseFileIfNeeded(j,y,v,w,o,0,0);r=_EnvGetNextDefinstances(j,r);g=7;break;case 11:q=_EnvGetNextDefmodule(j,q);s=s+1|0;HEAP32[t>>2]=HEAP32[t>>2]+1|0;g=
3;break;case 12:_CloseDefinstancesFiles(j,x,y,o);i=1;g=13;break;case 13:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_DefinstancesToCode.X=1;
function _DefinstancesCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str1966|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}
function _CloseDefinstancesFiles(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l=b+4;e=h;g=f;i=c;j=a;HEAP32[k>>2]=j;HEAP32[l>>2]=0;d=0!=(i|0)?3:4;break;case 3:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,i,k,l,j,0,0);d=4;break;case 4:d=0!=(g|0)?5:6;break;case 5:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,g,k,l,j,0,0);d=6;break;case 6:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}
function _DefinstancesModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str5970|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]+4|
0)>>2]);_fprintf(f,STRING_TABLE.__str7972|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _SingleDefinstancesToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str5970|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(h,f,c|0,a,b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|
0)>>2]+88|0)>>2]+8|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(f,STRING_TABLE.__str6971|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ExpressionToCode(h,f,HEAP32[(c+28|0)>>2]);_fprintf(f,STRING_TABLE.__str7972|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=e}_SingleDefinstancesToCode.X=1;
function _NetworkAssert(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n;d=h;e=f;g=c;i=a;l=k=j=0;b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+40|0)>>2]|0)?3:5;break;case 3:b=0==(HEAPU32[g>>2]>>>4&1|0)?4:5;break;case 4:b=70;break;case 5:b=0==(i|0)?6:9;break;case 6:b=0!=(HEAPU32[g>>2]>>>3&1|0)?8:7;break;case 7:b=0!=(HEAPU32[g>>2]>>>2&1|0)?8:9;break;case 8:e=b=_AddSingleMatch(d,e,0,0==(HEAP32[(g+36|0)>>2]|0)?0:1,HEAPU32[g>>2]>>>1&1);HEAP32[e>>2]=HEAP32[e>>2]&-17|16;e=b;HEAP32[e>>
2]=HEAP32[e>>2]&-33|32;e=b;HEAP32[(e+4|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(g+8|0)>>2]=e;b=9;break;case 9:b=0!=(HEAP32[g>>2]&1|0)?10:11;break;case 10:_EmptyDrive(d,g,e);b=70;break;case 11:b=0==(i|0)?12:16;break;case 12:b=0!=(HEAPU32[g>>2]>>>2&1|0)?13:14;break;case 13:l=HEAP32[(HEAP32[(g+16|0)>>2]+8|0)>>2];b=15;break;case 14:l=HEAP32[(HEAP32[(g+16|0)>>2]|0)>>2];b=15;break;case 15:j=e;b=24;break;case 16:b=1==(i|0)?17:22;break;case 17:b=0!=(HEAPU32[g>>2]>>>3&1|0)?19:18;break;case 18:b=0!=(HEAPU32[g>>2]>>>
2&1|0)?19:20;break;case 19:l=HEAP32[(g+8|0)>>2];b=21;break;case 20:l=HEAP32[(HEAP32[(g+24|0)>>2]+8|0)>>2];b=21;break;case 21:k=e;b=23;break;case 22:_SystemError(d,STRING_TABLE.__str977|0,1);_EnvExitRouter(d,1);b=23;break;case 23:b=24;break;case 24:b=25;break;case 25:b=0!=(l|0)?26:64;break;case 26:b=1==(i|0)?27:36;break;case 27:j=l;b=0!=(HEAPU32[j>>2]>>>5&1|0)?28:31;break;case 28:b=0==(HEAPU32[g>>2]>>>3&1|0)?29:31;break;case 29:b=0==(HEAPU32[g>>2]>>>2&1|0)?30:31;break;case 30:l=HEAP32[(l+4|0)>>2];
b=25;break;case 31:b=0!=(HEAPU32[g>>2]>>>3&1|0)?33:32;break;case 32:b=0!=(HEAPU32[g>>2]>>>2&1|0)?33:35;break;case 33:b=0!=(HEAPU32[j>>2]>>>5&1|0)?34:35;break;case 34:l=HEAP32[(l+4|0)>>2];b=25;break;case 35:b=37;break;case 36:k=l;b=37;break;case 37:b=0==(HEAP32[(g+12|0)>>2]|0)?38:47;break;case 38:m=1;b=0!=(HEAPU32[g>>2]>>>2&1|0)?39:46;break;case 39:n=0;b=40;break;case 40:b=(n|0)<((HEAPU32[j>>2]>>>6&511)-1|0)?41:45;break;case 41:b=(HEAP32[((j+8|0)+(n<<2)|0)>>2]|0)!=(HEAP32[((k+8|0)+(n<<2)|0)>>2]|0)?
42:43;break;case 42:m=0;b=45;break;case 43:b=44;break;case 44:n=n+1|0;b=40;break;case 45:b=46;break;case 46:b=52;break;case 47:m=_EvaluateJoinExpression(d,HEAP32[(g+12|0)>>2],j,k,g);b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?48:51;break;case 48:b=0!=(HEAPU32[g>>2]>>>3&1|0)?49:50;break;case 49:m=1;b=50;break;case 50:_SetEvaluationError(d,0);b=51;break;case 51:b=52;break;case 52:b=0!=(m|0)?53:63;break;case 53:b=0==(HEAPU32[g>>2]>>>3&1|0)?54:56;break;case 54:b=0==(HEAPU32[g>>2]>>>
2&1|0)?55:56;break;case 55:_PPDrive(d,j,k,g);b=62;break;case 56:b=1==(i|0)?57:58;break;case 57:_PNRDrive(d,g,l,k);b=61;break;case 58:b=0==(i|0)?59:60;break;case 59:HEAP32[((e+8|0)+(((HEAPU32[e>>2]>>>6&511)-1|0)<<2)|0)>>2]=k;l=0;b=25;break;case 60:b=61;break;case 61:b=62;break;case 62:b=63;break;case 63:l=HEAP32[(l+4|0)>>2];b=25;break;case 64:b=0!=(HEAPU32[g>>2]>>>3&1|0)?66:65;break;case 65:b=0!=(HEAPU32[g>>2]>>>2&1|0)?66:69;break;case 66:b=0==(i|0)?67:69;break;case 67:b=0==(HEAP32[((e+8|0)+(((HEAPU32[e>>
2]>>>6&511)-1|0)<<2)|0)>>2]|0)?68:69;break;case 68:_PNLDrive(d,g,e);b=69;break;case 69:b=70;break;case 70:return;default:assert(0,"bad label: "+b)}}_NetworkAssert.X=1;
function _EmptyDrive(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=0!=(HEAP32[(d+12|0)>>2]|0)?3:6;break;case 3:a=_EvaluateJoinExpression(b,HEAP32[(d+12|0)>>2],0,e,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;a=0==(a|0)?4:5;break;case 4:a=13;break;case 5:a=6;break;case 6:a=1==(HEAPU32[d>>2]>>>3&1|0)?7:8;break;case 7:_SystemError(b,STRING_TABLE.__str977|0,2);_EnvExitRouter(b,1);a=8;break;case 8:g=_CopyPartialMatch(b,e,0==(HEAP32[(d+36|0)>>2]|0)?0:1,HEAPU32[d>>2]>>>
1&1);HEAP32[(g+4|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[(d+8|0)>>2]=g;a=0!=(HEAP32[(d+36|0)>>2]|0)?9:10;break;case 9:_AddActivation(b,HEAP32[(d+36|0)>>2],g);a=10;break;case 10:i=HEAP32[(d+20|0)>>2];a=11;break;case 11:a=0!=(i|0)?12:13;break;case 12:_NetworkAssert(b,g,i,0);i=HEAP32[(i+28|0)>>2];a=11;break;case 13:return;default:assert(0,"bad label: "+a)}}_EmptyDrive.X=1;
function _EvaluateJoinExpression(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o,p,q,r,s;i=h;j=f;k=c;l=a;m=b;p=1;e=0==(j|0)?3:4;break;case 3:g=1;e=70;break;case 4:q=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2];s=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2];HEAP32[(HEAP32[(HEAP32[(i+16|
0)>>2]+72|0)>>2]+52|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=m;e=0!=(HEAPU32[m>>2]>>>3&1|0)?5:6;break;case 5:var t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)-1|0)&511)<<6;e=6;break;case 6:e=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|0)>>2]|0)>>2]|0)?7:8;break;case 7:o=1;j=HEAP32[(j+8|0)>>2];e=12;break;case 8:e=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|
0)>>2]+4|0)>>2]|0)?9:10;break;case 9:o=0;j=HEAP32[(j+8|0)>>2];e=11;break;case 10:o=1;e=11;break;case 11:e=12;break;case 12:e=13;break;case 13:e=0!=(j|0)?14:67;break;case 14:e=0==(HEAP32[((HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(j|0)>>1]&65535)<<2)|0)>>2]|0)?15:16;break;case 15:e=18;break;case 16:e=0!=(HEAP32[(HEAP32[((HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(j|0)>>1]&65535)<<2)|0)>>2]+20|0)>>2]|0)?17:18;break;case 17:e=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|
0)>>2];HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|0)>>2]=j;p=FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(j|0)>>1]&65535)<<2)|0)>>2]+20|0)>>2]](i,HEAP32[(j+4|0)>>2],n);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|0)>>2]=e;e=55;break;case 18:e=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|0)>>2]+4|0)>>2]|0)?19:31;break;case 19:p=0;e=1==(_EvaluateJoinExpression(i,j,k,l,m)|0)?20:25;break;case 20:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>
2]+176|0)>>2]+4|0)>>2]|0)?21:24;break;case 21:e=0!=(HEAPU32[m>>2]>>>3&1|0)?22:23;break;case 22:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=23;break;case 23:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 24:p=1;e=30;break;case 25:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?26:29;break;case 26:e=0!=
(HEAPU32[m>>2]>>>3&1|0)?27:28;break;case 27:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=28;break;case 28:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 29:e=30;break;case 30:e=54;break;case 31:e=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|0)>>2]|0)>>2]|0)?32:44;break;case 32:p=1;e=0==(_EvaluateJoinExpression(i,
j,k,l,m)|0)?33:38;break;case 33:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?34:37;break;case 34:e=0!=(HEAPU32[m>>2]>>>3&1|0)?35:36;break;case 35:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=36;break;case 36:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 37:p=0;e=43;break;case 38:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?39:42;break;case 39:e=0!=(HEAPU32[m>>2]>>>3&1|0)?40:41;break;case 40:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=41;break;case 41:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 42:e=43;break;case 43:e=53;break;case 44:_EvaluateExpression(i,j,n);e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+
176|0)>>2]+4|0)>>2]|0)?45:48;break;case 45:_JoinNetErrorMessage(i,m);e=0!=(HEAPU32[m>>2]>>>3&1|0)?46:47;break;case 46:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=47;break;case 47:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 48:e=(HEAP32[(n+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?49:
51;break;case 49:e=2==(HEAPU16[(n+4|0)>>1]&65535|0)?50:51;break;case 50:p=0;e=52;break;case 51:p=1;e=52;break;case 52:e=53;break;case 53:e=54;break;case 54:e=55;break;case 55:e=1==(o|0)?56:60;break;case 56:e=0==(p|0)?57:60;break;case 57:e=0!=(HEAPU32[m>>2]>>>3&1|0)?58:59;break;case 58:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=59;break;case 59:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=0;e=70;break;case 60:e=0==(o|0)?61:65;break;case 61:e=1==(p|0)?62:65;break;case 62:e=0!=(HEAPU32[m>>2]>>>3&1|0)?63:64;break;case 63:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=64;break;case 64:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;g=1;e=70;break;case 65:e=66;break;case 66:j=HEAP32[(j+12|0)>>2];
e=13;break;case 67:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+52|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+56|0)>>2]=r;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+60|0)>>2]=s;e=0!=(HEAPU32[m>>2]>>>3&1|0)?68:69;break;case 68:t=e=k;HEAP32[t>>2]=HEAP32[t>>2]&-32705|(((HEAPU32[e>>2]>>>6&511)+1|0)&511)<<6;e=69;break;case 69:g=p;e=70;break;case 70:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_EvaluateJoinExpression.X=1;
function _PPDrive(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;b=f;e=c;g=a;e=_MergePartialMatches(d,b,e,0==(HEAP32[(g+36|0)>>2]|0)?0:1,HEAPU32[g>>2]>>>1&1);HEAP32[(e+4|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(g+8|0)>>2]=e;b=0!=(HEAP32[(g+36|0)>>2]|0)?3:4;break;case 3:_AddActivation(d,HEAP32[(g+36|0)>>2],e);b=4;break;case 4:i=HEAP32[(g+20|0)>>2];b=0!=(i|0)?5:12;break;case 5:b=(HEAP32[(i+16|0)>>2]|0)==(g|0)?6:7;break;case 6:_NetworkAssert(d,e,i,1);b=11;break;case 7:b=8;break;case 8:b=0!=(i|0)?
9:10;break;case 9:_NetworkAssert(d,e,i,0);i=HEAP32[(i+28|0)>>2];b=8;break;case 10:b=11;break;case 11:b=12;break;case 12:return;default:assert(0,"bad label: "+b)}}_PPDrive.X=1;
function _PNRDrive(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=1==(HEAPU32[g>>2]>>>5&1|0)?3:4;break;case 3:b=21;break;case 4:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-33|32;b=0!=(HEAPU32[g>>2]>>>2&1|0)?5:6;break;case 5:b=0!=(HEAP32[((g+8|0)+((HEAPU32[g>>2]>>>6&511)<<2)|0)>>2]|0)?7:8;break;case 6:b=8;break;case 7:_RemoveActivation(d,HEAP32[((g+8|0)+((HEAPU32[g>>2]>>>6&511)<<2)|0)>>2],1,1);b=8;break;case 8:b=0!=(HEAPU32[e>>2]>>>2&1|0)?9:10;break;case 9:_RetractCheckDriveRetractions(d,
HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2],(HEAPU32[e>>2]>>>9&127)-1|0);b=10;break;case 10:j=HEAP32[(e+20|0)>>2];b=0!=(j|0)?11:18;break;case 11:b=(HEAP32[(j+16|0)>>2]|0)==(e|0)?12:13;break;case 12:_NegEntryRetract(d,j,g,0);b=17;break;case 13:b=14;break;case 14:b=0!=(j|0)?15:16;break;case 15:_PosEntryRetract(d,j,HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2],g,(HEAPU32[e>>2]>>>9&127)-1|0,0);j=HEAP32[(j+28|0)>>2];b=14;break;case 16:b=17;break;case 17:b=18;break;case 18:b=0!=
(HEAPU32[g>>2]>>>3&1|0)?19:20;break;case 19:_RemoveLogicalSupport(d,g);b=20;break;case 20:HEAP32[(HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+72|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+72|0)>>2]=HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2];HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2]=i;b=21;break;case 21:return;default:assert(0,"bad label: "+b)}}_PNRDrive.X=1;
function _PNLDrive(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var i=_genalloc(b,12);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:a=i;HEAP32[(a+8|0)>>2]=0;HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;var j=e;HEAP32[j>>2]&=-33;HEAP32[((e+8|0)+(((HEAPU32[e>>2]>>>6&511)-1|0)<<2)|0)>>2]=a;a=0!=(HEAP32[(d+36|0)>>2]|0)?6:7;break;case 6:_AddActivation(b,HEAP32[(d+36|0)>>2],e);a=7;break;case 7:g=HEAP32[(d+20|0)>>2];a=0!=(g|0)?8:15;break;case 8:a=(HEAP32[(g+16|0)>>2]|0)==(d|0)?9:10;break;case 9:_NetworkAssert(b,e,g,1);a=14;break;case 10:a=11;break;case 11:a=0!=(g|
0)?12:13;break;case 12:_NetworkAssert(b,e,g,0);g=HEAP32[(g+28|0)>>2];a=11;break;case 13:a=14;break;case 14:a=15;break;case 15:return;default:assert(0,"bad label: "+a)}}_PNLDrive.X=1;
function _JoinNetErrorMessage(h,f){var c=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_PrintErrorID(h,STRING_TABLE.__str977|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str1978|0,STRING_TABLE.__str2980|0);var a=HEAPU32[f>>2]>>>9&127;_sprintf(c|0,STRING_TABLE.__str3981|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));_EnvPrintRouter(h,STRING_TABLE.__str1978|0,c|0);_TraceErrorToRule(h,
f,STRING_TABLE.__str4982|0);_EnvPrintRouter(h,STRING_TABLE.__str1978|0,STRING_TABLE.__str5983|0);STACKTOP=c}
function _ExtendedMathFunctionDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str984|0,100,438,STRING_TABLE.__str1985|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str3987|0,100,440,STRING_TABLE.__str4988|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str5989|0,100,442,STRING_TABLE.__str6990|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str7991|0,100,444,STRING_TABLE.__str8992|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str9993|
0,100,446,STRING_TABLE.__str10994|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str11995|0,100,448,STRING_TABLE.__str12996|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str13997|0,100,450,STRING_TABLE.__str14998|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str15999|0,100,452,STRING_TABLE.__str161000|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str171001|0,100,454,STRING_TABLE.__str181002|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,
STRING_TABLE.__str191003|0,100,456,STRING_TABLE.__str201004|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str211005|0,100,458,STRING_TABLE.__str221006|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str231007|0,100,460,STRING_TABLE.__str241008|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str251009|0,100,462,STRING_TABLE.__str261010|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str271011|0,100,464,STRING_TABLE.__str281012|0,
STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str291013|0,100,466,STRING_TABLE.__str301014|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str311015|0,100,468,STRING_TABLE.__str321016|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str331017|0,100,470,STRING_TABLE.__str341018|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str351019|0,100,472,STRING_TABLE.__str361020|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str371021|
0,100,474,STRING_TABLE.__str381022|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str391023|0,100,476,STRING_TABLE.__str401024|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str411025|0,100,478,STRING_TABLE.__str421026|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str431027|0,100,480,STRING_TABLE.__str441028|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str451029|0,100,482,STRING_TABLE.__str461030|0,STRING_TABLE.__str2986|0);
_EnvDefineFunction2(h,STRING_TABLE.__str471031|0,100,484,STRING_TABLE.__str481032|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str491033|0,110,486,STRING_TABLE.__str501034|0,STRING_TABLE.__str511035|0);_EnvDefineFunction2(h,STRING_TABLE.__str521036|0,100,488,STRING_TABLE.__str531037|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str541038|0,100,490,STRING_TABLE.__str551039|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str561040|0,100,492,STRING_TABLE.__str571041|
0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str581042|0,100,494,STRING_TABLE.__str591043|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str601044|0,100,496,STRING_TABLE.__str611045|0,STRING_TABLE.__str621046|0);_EnvDefineFunction2(h,STRING_TABLE.__str631047|0,100,498,STRING_TABLE.__str641048|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str651049|0,100,500,STRING_TABLE.__str661050|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str671051|
0,100,502,STRING_TABLE.__str681052|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str691053|0,100,504,STRING_TABLE.__str701054|0,STRING_TABLE.__str2986|0);_EnvDefineFunction2(h,STRING_TABLE.__str711055|0,100,506,STRING_TABLE.__str721056|0,STRING_TABLE.__str511035|0);_EnvDefineFunction2(h,STRING_TABLE.__str731057|0,108,508,STRING_TABLE.__str741058|0,STRING_TABLE.__str2986|0)}_ExtendedMathFunctionDefinitions.X=1;
function _CosFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str984|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_cos(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SinFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str3987|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_sin(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _TanFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str5989|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:e=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);e=_cos(e);c=1E-15>e?5:7;break;case 5:c=-1E-15<e?6:7;break;case 6:_SingularityErrorMessage(b,STRING_TABLE.__str5989|0);a=0;c=8;break;
case 7:a=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_sin(a)/e;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SecFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str7991|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);e=_cos(c);c=1E-15>e?5:7;break;case 5:c=-1E-15<e?6:7;break;case 6:_SingularityErrorMessage(b,STRING_TABLE.__str7991|0);a=0;c=8;break;
case 7:a=1/e;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CscFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str9993|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);e=_sin(c);c=1E-15>e?5:7;break;case 5:c=-1E-15<e?6:7;break;case 6:_SingularityErrorMessage(b,STRING_TABLE.__str9993|0);a=0;c=8;break;
case 7:a=1/e;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CotFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str11995|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:e=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);e=_sin(e);c=1E-15>e?5:7;break;case 5:c=-1E-15<e?6:7;break;case 6:_SingularityErrorMessage(b,STRING_TABLE.__str11995|0);a=0;c=8;break;
case 7:a=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_cos(a)/e;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcosFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str13997|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1<(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:5;break;case 5:c=-1>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str13997|0);a=0;c=8;break;case 7:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_acos(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AsinFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str15999|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1<(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:5;break;case 5:c=-1>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str15999|0);a=0;c=8;break;case 7:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_asin(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AtanFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str171001|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_atan(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AsecFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str191003|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:7;break;case 5:c=-1<(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str191003|0);a=0;c=8;break;case 7:c=1/(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);tempDoubleF64[0]=c;HEAP32[d>>2]=tempDoubleI32[0];HEAP32[d+4>>2]=tempDoubleI32[1];c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_acos(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcscFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str211005|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:7;break;case 5:c=-1<(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str211005|0);a=0;c=8;break;case 7:c=1/(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);tempDoubleF64[0]=c;HEAP32[d>>2]=tempDoubleI32[0];HEAP32[d+4>>2]=tempDoubleI32[1];c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_asin(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcotFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str231007|0,b)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);c=1==(_TestProximity(c,1E-25)|0)?5:6;break;case 5:a=1.5707963267948966;c=7;break;case 6:a=1/(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=
HEAP32[b+4>>2],tempDoubleF64[0]);tempDoubleF64[0]=a;HEAP32[b>>2]=tempDoubleI32[0];HEAP32[b+4>>2]=tempDoubleI32[1];a=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_atan(a);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CoshFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str251009|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_cosh(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SinhFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str271011|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_sinh(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _TanhFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str291013|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_tanh(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SechFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str311015|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=1/_cosh(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CschFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str331017|0,d)|0)?3:4;break;case 3:a=0;c=10;break;case 4:c=0==(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_SingularityErrorMessage(b,STRING_TABLE.__str331017|0);a=0;c=10;break;case 6:c=(tempDoubleI32[0]=HEAP32[d>>2],
tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);c=1==(_TestProximity(c,1E-25)|0)?7:8;break;case 7:_ArgumentOverflowErrorMessage(b,STRING_TABLE.__str331017|0);a=0;c=10;break;case 8:c=9;break;case 9:a=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=1/_sinh(a);c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _CothFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str351019|0,d)|0)?3:4;break;case 3:a=0;c=10;break;case 4:c=0==(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_SingularityErrorMessage(b,STRING_TABLE.__str351019|0);a=0;c=10;break;case 6:c=(tempDoubleI32[0]=HEAP32[d>>2],
tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);c=1==(_TestProximity(c,1E-25)|0)?7:8;break;case 7:_ArgumentOverflowErrorMessage(b,STRING_TABLE.__str351019|0);a=0;c=10;break;case 8:c=9;break;case 9:a=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=1/_tanh(a);c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcoshFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str371021|0,d)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=1>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_DomainErrorMessage(b,STRING_TABLE.__str371021|0);a=0;c=7;break;case 6:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=
HEAP32[d+4>>2],tempDoubleF64[0]);a=_genacosh(c);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AsinhFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str391023|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_genasinh(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AtanhFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str411025|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1<=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:5;break;case 5:c=-1>=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str411025|0);a=0;c=8;break;case 7:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_genatanh(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AsechFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str431027|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1<(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:5;break;case 5:c=0>=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str431027|0);a=0;c=8;break;case 7:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_genasech(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcschFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str451029|0,d)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0==(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_DomainErrorMessage(b,STRING_TABLE.__str451029|0);a=0;c=7;break;case 6:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=
HEAP32[d+4>>2],tempDoubleF64[0]);a=_genacsch(c);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AcothFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str471031|0,d)|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=1>=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:7;break;case 5:c=-1<=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?6:7;break;case 6:_DomainErrorMessage(b,
STRING_TABLE.__str471031|0);a=0;c=8;break;case 7:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_genacoth(c);c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _ModFunction(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i,j,k;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str491033|0,0,2)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str491033|0,1,180,e)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|
0)>>2]=a;a=28;break;case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str491033|0,2,180,g)|0)?7:8;break;case 7:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 8:a=1==(HEAPU16[(g+4|0)>>1]&65535|0)?9:10;break;case 9:a=0==(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?14:11;break;case 10:a=11;break;case 11:a=0==(HEAPU16[(g+4|0)>>1]&65535|0)?12:13;break;case 12:a=HEAP32[(g+8|0)>>2]+16|0;a=0==(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0])?14:15;break;
case 13:a=15;break;case 14:_DivideByZeroErrorMessage(b,STRING_TABLE.__str491033|0);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 15:a=0==(HEAPU16[(e+4|0)>>1]&65535|0)?17:16;break;case 16:a=0==(HEAPU16[(g+4|0)>>1]&65535|0)?17:27;break;case 17:a=1==(HEAPU16[(e+4|0)>>1]&65535|0)?18:19;break;case 18:var l=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;a=20;break;case 19:l=HEAP32[(e+8|0)>>2]+16|0;l=(tempDoubleI32[0]=HEAP32[l>>2],tempDoubleI32[1]=HEAP32[l+
4>>2],tempDoubleF64[0]);a=20;break;case 20:i=l;a=1==(HEAPU16[(g+4|0)>>1]&65535|0)?21:22;break;case 21:var m=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0;a=23;break;case 22:m=HEAP32[(g+8|0)>>2]+16|0;m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);a=23;break;case 23:j=m;HEAP16[(d+4|0)>>1]=0;var n=b,o=i;a=0>i/j?24:25;break;case 24:var p=_ceil(i/j);a=26;break;case 25:p=_floor(i/j);a=26;break;case 26:a=_EnvAddDouble(n,o-p*j);HEAP32[(d+8|0)>>2]=a;a=28;break;case 27:a=HEAP32[(HEAP32[(e+
8|0)>>2]+16|0)>>2];k=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,a-(((a|0)/(k|0)&-1)*k|0)|0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 28:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ModFunction.X=1;
function _ExpFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str521036|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);a=_exp(c);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _LogFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str541038|0,d)|0)?3:4;break;case 3:a=0;c=10;break;case 4:c=0>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_DomainErrorMessage(b,STRING_TABLE.__str541038|0);a=0;c=10;break;case 6:c=0==(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=
HEAP32[d+4>>2],tempDoubleF64[0])?7:8;break;case 7:_ArgumentOverflowErrorMessage(b,STRING_TABLE.__str541038|0);a=0;c=10;break;case 8:c=9;break;case 9:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_log(c);c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _Log10Function(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str561040|0,d)|0)?3:4;break;case 3:a=0;c=10;break;case 4:c=0>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_DomainErrorMessage(b,STRING_TABLE.__str561040|0);a=0;c=10;break;case 6:c=0==(tempDoubleI32[0]=HEAP32[d>>2],
tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?7:8;break;case 7:_ArgumentOverflowErrorMessage(b,STRING_TABLE.__str561040|0);a=0;c=10;break;case 8:c=9;break;case 9:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);a=_log10(c);c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SqrtFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_SingleNumberCheck(b,STRING_TABLE.__str581042|0,d)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0>(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0])?5:6;break;case 5:_DomainErrorMessage(b,STRING_TABLE.__str581042|0);a=0;c=7;break;case 6:c=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=
HEAP32[d+4>>2],tempDoubleF64[0]);a=_sqrt(c);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}function _PiFunction(h){var f;for(f=2;;)switch(f){case 2:var c;f=-1==(_EnvArgCountCheck(h,STRING_TABLE.__str601044|0,0,0)|0)?3:4;break;case 3:c=_acos(-1);f=5;break;case 4:c=_acos(-1);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _DegRadFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str631047|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=3.141592653589793*(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0])/180;c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _TestProximity(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=b>=-d?3:5;break;case 3:c=b<=d?4:5;break;case 4:a=1;c=6;break;case 5:a=0;c=6;break;case 6:return a;default:assert(0,"bad label: "+c)}}
function _RadDegFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str651049|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=180*(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0])/3.141592653589793;c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _DegGradFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str671051|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0])/0.9;c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _GradDegFunction(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=0==(_SingleNumberCheck(h,STRING_TABLE.__str691053|0,b)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=0.9*(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _PowFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str711055|0,0,2)|0)?3:4;break;case 3:a=0;c=17;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str711055|0,1,0,d)|0)?5:6;break;case 5:a=0;c=17;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str711055|0,2,0,e)|0)?7:8;break;case 7:a=0;c=17;break;case 8:c=
HEAP32[(d+8|0)>>2]+16|0;c=0==(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])?9:10;break;case 9:c=HEAP32[(e+8|0)>>2]+16|0;c=0>=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])?15:10;break;case 10:c=HEAP32[(d+8|0)>>2]+16|0;c=0>(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])?11:16;break;case 11:c=HEAP32[(e+8|0)>>2]+16|0;c=0>(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])?
12:13;break;case 12:var g=HEAP32[(e+8|0)>>2]+16|0,g=(tempDoubleI32[0]=HEAP32[g>>2],tempDoubleI32[1]=HEAP32[g+4>>2],tempDoubleF64[0]),g=_ceil(g);c=14;break;case 13:g=HEAP32[(e+8|0)>>2]+16|0;g=(tempDoubleI32[0]=HEAP32[g>>2],tempDoubleI32[1]=HEAP32[g+4>>2],tempDoubleF64[0]);g=_floor(g);c=14;break;case 14:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);c=g!=c?15:16;break;case 15:_DomainErrorMessage(b,STRING_TABLE.__str711055|0);_SetHaltExecution(b,
1);_SetEvaluationError(b,1);a=0;c=17;break;case 16:a=HEAP32[(d+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);a=_llvm_pow_f64(a,c);c=17;break;case 17:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_PowFunction.X=1;
function _RoundFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str731057|0,0,1)|0)?3:4;break;case 3:a=0;c=9;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str731057|0,1,180,d)|0)?5:6;break;case 5:a=0;c=9;break;case 6:c=1==(HEAPU16[(d+4|0)>>1]&65535|0)?7:8;break;case 7:a=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=9;break;case 8:c=
HEAP32[(d+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])-0.5;a=_ceil(c)&-1;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SingleNumberCheck(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=-1==(_EnvArgCountCheck(e,g,0,1)|0)?3:4;break;case 3:d=0;b=7;break;case 4:b=0==(_EnvArgTypeCheck(e,g,1,0,j)|0)?5:6;break;case 5:d=0;b=7;break;case 6:b=HEAP32[(j+8|0)>>2]+16|0;b=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0]);d=i;tempDoubleF64[0]=b;HEAP32[d>>
2]=tempDoubleI32[0];HEAP32[d+4>>2]=tempDoubleI32[1];d=1;b=7;break;case 7:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}function _SingularityErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str751059|0,3,0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str801064|0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,f);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str781062|0);_SetHaltExecution(h,1);_SetEvaluationError(h,1)}
function _DomainErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str751059|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str791063|0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,f);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str781062|0);_SetHaltExecution(h,1);_SetEvaluationError(h,1)}
function _ArgumentOverflowErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str751059|0,2,0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str771061|0);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,f);_EnvPrintRouter(h,STRING_TABLE.__str761060|0,STRING_TABLE.__str781062|0);_SetHaltExecution(h,1);_SetEvaluationError(h,1)}function _genacosh(h){var f=_sqrt(h*h-1);return _log(h+f)}function _genasinh(h){var f=_sqrt(h*h+1);return _log(h+f)}
function _genatanh(h){return 0.5*_log((h+1)/(1-h))}function _genasech(h){var f=1/h,h=_sqrt(1/(h*h)-1);return _log(f+h)}function _genacsch(h){var f=1/h,h=_sqrt(1/(h*h)+1);return _log(f+h)}function _genacoth(h){return 0.5*_log((h+1)/(h-1))}
function _InitializeEngine(h){_AllocateEnvironmentData(h,18,80,510);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+44|0)>>2]=1;_AddWatchItem(h,STRING_TABLE.__str1065|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+32|0,20,0,0);_AddWatchItem(h,STRING_TABLE.__str11066|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+36|0,0,0,0)}
function _DeallocateEngineData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+20|0)>>2]);a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateEngineData.X=1;
function _EnvRun(h,f){var c=STACKTOP;STACKTOP+=160;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k,l,m,n,o,p,q,r,s,t,u,v,w=c+24,x=c+40,y=c+100;d=h;e=f;p=o=n=m=l=k=g=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+76|0)>>2]|0)?3:4;break;case 3:b=0;a=80;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+76|0)>>2]=1;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:n=
m=_GetNumberOfFacts(d);p=o=_GetGlobalNumberOfInstances(d);l=k=_GetNumberOfActivations(d);_gentime();a=6;break;case 6:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:_SetHaltExecution(d,0);a=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+4|0)>>2]=0;u=_NextActivationToFire(d);a=9;break;case 9:if(0!=(u|0))a=10;else{var A=0;a=13}break;case 10:0!=(e|0)?a=11:(A=0,a=13);break;case 11:0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?a=12:(A=0,
a=13);break;case 12:A=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+4|0)>>2]|0);a=13;break;case 13:a=A?14:62;break;case 14:_DetachActivation(d,u);v=_EnvGetActivationName(d,u);t=HEAP32[(u+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]=HEAP32[(u|0)>>2];g=g+1|0;a=0<(e|0)?15:16;break;case 15:e=e-1|0;a=16;break;case 16:a=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]+32|0)>>2]>>>13&1|0)?17:18;break;case 17:a=g;_sprintf(x|0,STRING_TABLE.__str21067|0,(tempInt=STACKTOP,
STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));_EnvPrintRouter(d,STRING_TABLE.__str31068|0,x|0);_EnvPrintRouter(d,STRING_TABLE.__str31068|0,v);_EnvPrintRouter(d,STRING_TABLE.__str31068|0,STRING_TABLE.__str41069|0);_PrintPartialMatch(d,STRING_TABLE.__str31068|0,t);_EnvPrintRouter(d,STRING_TABLE.__str31068|0,STRING_TABLE.__str51070|0);a=18;break;case 18:HEAP32[((t+8|0)+((HEAPU32[t>>2]>>>6&511)<<2)|0)>>2]=0;r=t;HEAP32[r>>2]=HEAP32[r>>2]&-3|2;HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+72|0)>>2]+52|0)>>2]=t;r=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+56|0)>>2]=0;a=19;break;case 19:a=r>>>0<(HEAPU32[t>>2]>>>6&511)>>>0?20:24;break;case 20:s=HEAP32[(HEAP32[((t+8|0)+(r<<2)|0)>>2]|0)>>2];a=0!=(s|0)?21:22;break;case 21:FUNCTION_TABLE[HEAP32[(HEAP32[(s|0)>>2]+60|0)>>2]](d,s);a=22;break;case 22:a=23;break;case 23:r=r+1|0;a=19;break;case 24:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]+44|0)>>2];a=HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_SetEvaluationError(d,0);a=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]+32|0;HEAP32[a>>2]=HEAP32[a>>2]&-32769|32768;_StartProfile(d,w,(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]|0)+20|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(d,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]+40|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+72|0)>>2]|0)>>2]+28|0)>>2],i,0);_EndProfile(d,w);a=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]+32|0;HEAP32[a>>2]&=-32769;_SetEvaluationError(d,0);a=HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+8|0)>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?27:25;break;case 25:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+4|0)>>2]|0)?26:28;break;case 26:a=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+72|0)>>2]|0)>>2]+32|0)>>2]>>>13&1|0)?27:28;break;case 27:_PrintErrorID(d,STRING_TABLE.__str61071|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str71072|0,STRING_TABLE.__str81073|0);_EnvPrintRouter(d,STRING_TABLE.__str71072|0,v);_EnvPrintRouter(d,STRING_TABLE.__str71072|0,STRING_TABLE.__str91074|0);a=28;break;case 28:r=t;HEAP32[r>>2]&=-3;r=0;a=29;break;case 29:a=r>>>0<((HEAPU32[t>>2]>>>6&511)-1|0)>>>0?30:34;break;case 30:s=HEAP32[(HEAP32[((t+8|0)+(r<<2)|0)>>2]|0)>>2];a=0!=(s|0)?31:32;break;case 31:FUNCTION_TABLE[HEAP32[(HEAP32[(s|
0)>>2]+56|0)>>2]](d,s);a=32;break;case 32:a=33;break;case 33:r=r+1|0;a=29;break;case 34:r=(HEAPU32[t>>2]>>>6&511)-1|0;a=0==(HEAPU32[t>>2]>>>5&1|0)?35:38;break;case 35:s=HEAP32[(HEAP32[((t+8|0)+(r<<2)|0)>>2]|0)>>2];a=0!=(s|0)?36:37;break;case 36:FUNCTION_TABLE[HEAP32[(HEAP32[(s|0)>>2]+56|0)>>2]](d,s);a=37;break;case 37:a=38;break;case 38:_RemoveActivation(d,u,0,0);_FlushGarbagePartialMatches(d);_PeriodicCleanup(d,0,1);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+32|0)>>2]|0)?39:46;break;case 39:q=
_GetNumberOfFacts(d);a=q>>>0>m>>>0?40:41;break;case 40:m=q;a=41;break;case 41:n=n+q|0;q=_GetGlobalNumberOfInstances(d);a=q>>>0>o>>>0?42:43;break;case 42:o=q;a=43;break;case 43:p=p+q|0;q=_GetNumberOfActivations(d);a=q>>>0>k>>>0?44:45;break;case 44:k=q;a=45;break;case 45:l=l+q|0;a=46;break;case 46:a=2==(_EnvGetSalienceEvaluation(d)|0)?47:48;break;case 47:_EnvRefreshAgenda(d,0);a=48;break;case 48:j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+20|0)>>2];a=49;break;case 49:a=0!=(j|0)?50:55;break;case 50:a=
0!=HEAP16[(j+16|0)>>1]<<16>>16?51:52;break;case 51:FUNCTION_TABLE[HEAP32[(j+4|0)>>2]](d);a=53;break;case 52:FUNCTION_TABLE[HEAP32[(j+4|0)>>2]]();a=53;break;case 53:a=54;break;case 54:j=HEAP32[(j+12|0)>>2];a=49;break;case 55:a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+52|0)>>2]|0)>>2]|0)?56:57;break;case 56:_RemoveFocus(d,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]|0)+8|0)>>2]|0)>>2]);a=57;break;case 57:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+52|0)>>2]|0)>>2]=0;u=_NextActivationToFire(d);
a=0!=(u|0)?58:61;break;case 58:a=0!=(HEAPU32[(HEAP32[(u|0)>>2]+32|0)>>2]>>>11&1|0)?59:60;break;case 59:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+4|0)>>2]=1;_EnvPrintRouter(d,STRING_TABLE.__str101075|0,STRING_TABLE.__str111076|0);a=d;var z=_EnvGetActivationName(d,u);_EnvPrintRouter(a,STRING_TABLE.__str101075|0,z);_EnvPrintRouter(d,STRING_TABLE.__str101075|0,STRING_TABLE.__str91074|0);a=60;break;case 60:a=61;break;case 61:a=9;break;case 62:a=0==(g|0)?63:71;break;case 63:j=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+72|0)>>2]+20|0)>>2];a=64;break;case 64:a=0!=(j|0)?65:70;break;case 65:a=0!=HEAP16[(j+16|0)>>1]<<16>>16?66:67;break;case 66:FUNCTION_TABLE[HEAP32[(j+4|0)>>2]](d);a=68;break;case 67:FUNCTION_TABLE[HEAP32[(j+4|0)>>2]]();a=68;break;case 68:a=69;break;case 69:j=HEAP32[(j+12|0)>>2];a=64;break;case 70:a=71;break;case 71:a=(e|0)==(g|0)?72:73;break;case 72:_EnvPrintRouter(d,STRING_TABLE.__str101075|0,STRING_TABLE.__str121077|0);a=73;break;case 73:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>
2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+4|0)>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+32|0)>>2]|0)?74:75;break;case 74:_gentime();_PrintLongInteger(d,STRING_TABLE.__str101075|0,g);_EnvPrintRouter(d,STRING_TABLE.__str101075|0,STRING_TABLE.__str131078|0);a=(n>>>0)/(g+1|0)+0.5&-1;z=m;_sprintf(y|0,STRING_TABLE.__str141079|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=z,tempInt));_EnvPrintRouter(d,
STRING_TABLE.__str101075|0,y|0);a=(p>>>0)/(g+1|0)+0.5&-1;z=o;_sprintf(y|0,STRING_TABLE.__str151080|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=z,tempInt));_EnvPrintRouter(d,STRING_TABLE.__str101075|0,y|0);a=(l>>>0)/(g+1|0)+0.5&-1;z=k;_sprintf(y|0,STRING_TABLE.__str161081|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=z,tempInt));
_EnvPrintRouter(d,STRING_TABLE.__str101075|0,y|0);a=75;break;case 75:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?76:79;break;case 76:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2];z=_EnvGetCurrentModule(d);a=(a|0)!=(z|0)?77:78;break;case 77:_EnvSetCurrentModule(d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2]);a=78;break;case 78:a=79;break;case 79:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+76|0)>>2]=0;b=g;a=80;break;case 80:return STACKTOP=
c,b;default:assert(0,"bad label: "+a)}}_EnvRun.X=1;function _EnvGetNextFocus(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2];c=5;break;case 4:a=HEAP32[(d+8|0)>>2];c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _NextActivationToFire(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:f=_EnvFindDefmodule(c,STRING_TABLE.__str351100|0);_EnvFocus(c,f);f=4;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]+4|0)>>2]+12|0)>>2];f=5;break;case 5:if(0==(a|0))f=6;else{var b=0;f=7}break;case 6:b=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]|0);f=7;break;case 7:f=b?8:13;break;case 8:f=
0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?9:10;break;case 9:_EnvPopFocus(c);f=10;break;case 10:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?11:12;break;case 11:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]+4|0)>>2]+12|0)>>2];f=12;break;case 12:f=5;break;case 13:return a;default:assert(0,"bad label: "+f)}}_NextActivationToFire.X=1;
function _RemoveFocus(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;j=i=0;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:a=0;c=26;break;case 4:g=0;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2];c=5;break;case 5:if(0!=(e|0))c=6;else{var k=0;c=7}break;case 6:k=0!=(i|0)^1;c=7;break;case 7:c=k?8:15;break;case 8:c=(HEAP32[(e|0)>>2]|0)==(d|0)?9:13;break;case 9:i=1;c=HEAP32[(e+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=
e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];e=c;c=0==(g|0)?10:11;break;case 10:j=1;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]=e;c=12;break;case 11:HEAP32[(g+8|0)>>2]=e;c=12;break;case 12:c=14;break;case 13:g=e;e=HEAP32[(e+8|0)>>2];c=14;break;case 14:c=
5;break;case 15:c=0!=(i|0)?17:16;break;case 16:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2];c=26;break;case 17:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+36|0)>>2]|0)?18:22;break;case 18:_EnvPrintRouter(b,STRING_TABLE.__str31068|0,STRING_TABLE.__str331098|0);_EnvPrintRouter(b,STRING_TABLE.__str31068|0,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?19:21;break;case 19:c=0!=(j|0)?20:21;break;case 20:_EnvPrintRouter(b,
STRING_TABLE.__str31068|0,STRING_TABLE.__str341099|0);_EnvPrintRouter(b,STRING_TABLE.__str31068|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2]|0)>>2]+16|0)>>2]);c=21;break;case 21:_EnvPrintRouter(b,STRING_TABLE.__str31068|0,STRING_TABLE.__str51070|0);c=22;break;case 22:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?23:25;break;case 23:c=0!=(j|0)?24:25;break;case 24:_EnvSetCurrentModule(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>
2]+24|0)>>2]|0)>>2]);c=25;break;case 25:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+28|0)>>2]=1;a=d;c=26;break;case 26:return a;default:assert(0,"bad label: "+c)}}_RemoveFocus.X=1;
function _EnvPopFocus(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=_RemoveFocus(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2]);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _EnvFocus(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;_EnvSetCurrentModule(a,b);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:6;break;case 3:c=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2]|0)==(b|0)?4:5;break;case 4:c=14;break;case 5:c=6;break;case 6:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+36|0)>>2]|0)?7:10;break;case 7:_EnvPrintRouter(a,STRING_TABLE.__str31068|0,STRING_TABLE.__str171082|0);_EnvPrintRouter(a,STRING_TABLE.__str31068|
0,HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?8:9;break;case 8:_EnvPrintRouter(a,STRING_TABLE.__str31068|0,STRING_TABLE.__str181083|0);_EnvPrintRouter(a,STRING_TABLE.__str31068|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2]|0)>>2]+16|0)>>2]);c=9;break;case 9:_EnvPrintRouter(a,STRING_TABLE.__str31068|0,STRING_TABLE.__str51070|0);c=10;break;case 10:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+48|0)>>2]|0)?11:12;break;case 11:var d=_genalloc(a,12);c=13;break;case 12:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=13;break;case 13:c=d;HEAP32[(c|0)>>2]=b;var e=_GetDefruleModuleItem(a,
b);HEAP32[(c+4|0)>>2]=e;HEAP32[(c+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+28|0)>>2]=1;c=14;break;case 14:return;default:assert(0,"bad label: "+c)}}_EnvFocus.X=1;
function _ClearFocusStackCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str191084|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvClearFocusStack(c);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _EnvClearFocusStack(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?4:5;break;case 4:_EnvPopFocus(c);f=3;break;case 5:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+28|0)>>2]=1;return;default:assert(0,"bad label: "+f)}}
function _AddRunFunction(h,f,c){var a;a=_GetCurrentEnvironment();h=_AddFunctionToCallList(a,h,c,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+20|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+20|0)>>2]=h;return 1}function _EnvAddRunFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+20|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+20|0)>>2]=f;return 1}
function _EnvRemoveRunFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c;a=h;var e=_RemoveFunctionFromCallList(a,f,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+20|0)>>2],d);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+20|0)>>2]=e;a=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:b=1;a=5;break;case 4:b=0;a=5;break;case 5:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _RunCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;a=h;d=-1;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str201085|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=12;break;case 4:c=0==(b|0)?5:6;break;case 5:d=-1;c=11;break;case 6:c=1==(b|0)?7:10;break;case 7:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str201085|0,1,1,e)|0)?8:9;break;case 8:c=12;break;case 9:d=HEAP32[(HEAP32[(e+8|0)>>
2]+16|0)>>2];c=10;break;case 10:c=11;break;case 11:_EnvRun(a,d);c=12;break;case 12:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _HaltCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str211086|0,0,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+4|0)>>2]=1}
function _EnvSetBreak(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=f;c=3;break;case 3:c=0!=(a|0)?4:6;break;case 4:c=a+32|0;HEAP32[c>>2]=HEAP32[c>>2]&-2049|2048;c=5;break;case 5:a=HEAP32[(a+52|0)>>2];c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _EnvRemoveBreak(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=f;b=0;c=3;break;case 3:c=0!=(a|0)?4:8;break;case 4:c=1==(HEAPU32[(a+32|0)>>2]>>>11&1|0)?5:6;break;case 5:b=a+32|0;HEAP32[b>>2]&=-2049;b=1;c=6;break;case 6:c=7;break;case 7:a=HEAP32[(a+52|0)>>2];c=3;break;case 8:return b;default:assert(0,"bad label: "+c)}}function _EnvDefruleHasBreakpoint(h,f){return HEAPU32[(f+32|0)>>2]>>>11&1}
function _EnvGetFocus(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)>>2];f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}function _EnvGetFocusChanged(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+28|0)>>2]}function _EnvSetFocusChanged(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+28|0)>>2]=f}
function _EnvSetHaltRules(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+4|0)>>2]=f}function _EnvGetHaltRules(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+4|0)>>2]}
function _RemoveAllBreakpoints(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:b=f=_EnvGetNextDefmodule(c,b);f=0!=(f|0)?4:8;break;case 4:a=0;f=5;break;case 5:a=f=_EnvGetNextDefrule(c,a);f=0!=(f|0)?6:7;break;case 6:_EnvRemoveBreak(c,a);f=5;break;case 7:f=3;break;case 8:return;default:assert(0,"bad label: "+f)}}function _EnvShowBreaks(h,f,c){_ListItemsDriver(h,f,c,0,0,514,512,0,516)}
function _SetBreakCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str221087|0,0,1)|0)?3:4;break;case 3:c=9;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str221087|0,1,2,b)|0)?5:6;break;case 5:c=9;break;case 6:d=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];e=c=_EnvFindDefrule(a,d);c=0==(c|0)?7:8;break;case 7:_CantFindItemErrorMessage(a,
STRING_TABLE.__str231088|0,d);c=9;break;case 8:_EnvSetBreak(a,e);c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _RemoveBreakCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e,g;a=h;e=c=_EnvArgCountCheck(a,STRING_TABLE.__str241089|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=12;break;case 4:c=0==(e|0)?5:6;break;case 5:_RemoveAllBreakpoints(a);c=12;break;case 6:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str241089|0,1,2,b)|0)?7:8;break;case 7:c=12;break;case 8:d=HEAP32[(HEAP32[(b+8|0)>>2]+
16|0)>>2];g=c=_EnvFindDefrule(a,d);c=0==(c|0)?9:10;break;case 9:_CantFindItemErrorMessage(a,STRING_TABLE.__str231088|0,d);c=12;break;case 10:c=0==(_EnvRemoveBreak(a,g)|0)?11:12;break;case 11:_EnvPrintRouter(a,STRING_TABLE.__str71072|0,STRING_TABLE.__str251090|0);_EnvPrintRouter(a,STRING_TABLE.__str71072|0,d);_EnvPrintRouter(a,STRING_TABLE.__str71072|0,STRING_TABLE.__str261091|0);c=12;break;case 12:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_RemoveBreakCommand.X=1;
function _ShowBreaksCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;a=h;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str271092|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=10;break;case 4:c=1==(b|0)?5:8;break;case 5:e=_GetModuleName(a,STRING_TABLE.__str271092|0,1,d);c=0!=(HEAP32[d>>2]|0)?6:7;break;case 6:c=10;break;case 7:c=9;break;case 8:e=_EnvGetCurrentModule(a);c=9;break;case 9:_EnvShowBreaks(a,
STRING_TABLE.__str281093|0,e);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _ListFocusStackCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str191084|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvListFocusStack(c,STRING_TABLE.__str281093|0);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _EnvListFocusStack(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:6;break;case 4:c=a;var e=b,g=_EnvGetDefmoduleName(a,HEAP32[(d|0)>>2]);_EnvPrintRouter(c,e,g);_EnvPrintRouter(a,b,STRING_TABLE.__str51070|0);c=5;break;case 5:d=HEAP32[(d+8|0)>>2];c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _GetFocusStackFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str291094|0,0,0)|0)?3:4;break;case 3:c=5;break;case 4:_EnvGetFocusStack(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _EnvGetFocusStack(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=0;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:HEAP16[(b+4|0)>>1]=4;HEAP32[(b+12|0)>>2]=0;HEAP32[(b+16|0)>>2]=-1;c=_EnvCreateMultifield(a,0);HEAP32[(b+8|0)>>2]=c;c=12;break;case 4:d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:8;break;case 6:g=g+1|0;c=7;break;case 7:d=HEAP32[(d+8|0)>>2];c=5;break;case 8:HEAP16[(b+4|0)>>1]=4;HEAP32[(b+
12|0)>>2]=0;HEAP32[(b+16|0)>>2]=g-1|0;e=_EnvCreateMultifield(a,g);HEAP32[(b+8|0)>>2]=e;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+24|0)>>2];g=1;c=9;break;case 9:c=0!=(d|0)?10:12;break;case 10:HEAP16[((e+16|0)+((g-1|0)<<3)|0)>>1]=2;HEAP32[(((e+16|0)+((g-1|0)<<3)|0)+4|0)>>2]=HEAP32[(HEAP32[(d|0)>>2]|0)>>2];c=11;break;case 11:d=HEAP32[(d+8|0)>>2];g=g+1|0;c=9;break;case 12:return;default:assert(0,"bad label: "+c)}}_EnvGetFocusStack.X=1;
function _PopFocusFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;_EnvArgCountCheck(a,STRING_TABLE.__str301095|0,0,0);b=_EnvPopFocus(a);f=0==(b|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];f=5;break;case 4:c=HEAP32[(b|0)>>2];f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _GetFocusFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;_EnvArgCountCheck(a,STRING_TABLE.__str311096|0,0,0);b=_EnvGetFocus(a);f=0==(b|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];f=5;break;case 4:c=HEAP32[(b|0)>>2];f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _FocusCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g,i,j;b=h;i=c=_EnvArgCountCheck(b,STRING_TABLE.__str11066|0,1,1);c=-1==(c|0)?3:4;break;case 3:a=0;c=13;break;case 4:j=i;c=5;break;case 5:c=0<(j|0)?6:12;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str11066|0,j,2,d)|0)?7:8;break;case 7:a=0;c=13;break;case 8:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];g=_EnvFindDefmodule(b,
e);c=0==(g|0)?9:10;break;case 9:_CantFindItemErrorMessage(b,STRING_TABLE.__str321097|0,e);a=0;c=13;break;case 10:_EnvFocus(b,g);c=11;break;case 11:j=j-1|0;c=5;break;case 12:a=1;c=13;break;case 13:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_FocusCommand.X=1;
function _AllocateEnvironmentData(h,f,c,a){var b=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;g=h;i=f;j=c;k=a;d=0>=j>>>0?3:4;break;case 3:e=i;_printf(STRING_TABLE.__str1103|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=0;d=11;break;case 4:d=100<=i>>>0?5:6;break;case 5:e=i;_printf(STRING_TABLE.__str11104|0,(tempInt=STACKTOP,
STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=0;d=11;break;case 6:d=0!=(HEAP32[(HEAP32[(g+16|0)>>2]+(i<<2)|0)>>2]|0)?7:8;break;case 7:e=i;_printf(STRING_TABLE.__str21105|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=0;d=11;break;case 8:d=_malloc(j);HEAP32[(HEAP32[(g+16|0)>>2]+(i<<2)|0)>>2]=d;d=0==(HEAP32[(HEAP32[(g+16|0)>>2]+(i<<2)|0)>>2]|0)?9:10;break;case 9:e=i;_printf(STRING_TABLE.__str31106|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=0;d=11;break;case 10:_memset(HEAP32[(HEAP32[(g+16|0)>>2]+(i<<2)|0)>>2],0,j,1);HEAP32[(HEAP32[(g+20|0)>>2]+(i<<2)|0)>>2]=k;e=1;d=11;break;case 11:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_AllocateEnvironmentData.X=1;function _SetCurrentEnvironment(h){HEAP32[_CurrentEnvironment>>2]=h}function _GetCurrentEnvironment(){return HEAP32[_CurrentEnvironment>>2]}
function _FindEnvironment(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=HEAP32[(HEAP32[_EnvironmentHashTable>>2]+((a>>>0)%131<<2)|0)>>2];f=3;break;case 3:f=0!=(b|0)?4:8;break;case 4:f=(HEAP32[(b+4|0)>>2]|0)==(a|0)?5:6;break;case 5:c=b;f=9;break;case 6:f=7;break;case 7:b=HEAP32[(b+28|0)>>2];f=3;break;case 8:c=0;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}function _GetEnvironmentIndex(h){return HEAP32[(h+4|0)>>2]}function _GetEnvironmentContext(h){return HEAP32[(h+8|0)>>2]}
function _SetEnvironmentContext(h,f){var c;c=HEAP32[(h+8|0)>>2];HEAP32[(h+8|0)>>2]=f;return c}function _GetEnvironmentRouterContext(h){return HEAP32[(h+12|0)>>2]}function _SetEnvironmentRouterContext(h,f){var c;c=HEAP32[(h+12|0)>>2];HEAP32[(h+12|0)>>2]=f;return c}
function _RemoveHashedEnvironment(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;a=h;b=(HEAPU32[(a+4|0)>>2]>>>0)%131;d=HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(b<<2)|0)>>2];e=0;f=3;break;case 3:f=0!=(d|0)?4:10;break;case 4:f=(d|0)==(a|0)?5:8;break;case 5:f=0==(e|0)?6:7;break;case 6:HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(b<<2)|0)>>2]=HEAP32[(d+28|0)>>2];c=1;f=11;break;case 7:HEAP32[(e+28|0)>>2]=HEAP32[(d+28|0)>>2];c=1;f=11;break;case 8:e=d;f=9;break;case 9:d=HEAP32[(d+28|0)>>2];f=3;break;case 10:c=
0;f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}_RemoveHashedEnvironment.X=1;
function _DeallocateEnvironmentData(){var h;for(h=2;;)switch(h){case 2:var f,c,a,b;b=1;a=0;h=3;break;case 3:h=131>(a|0)?4:11;break;case 4:f=HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(a<<2)|0)>>2];h=5;break;case 5:h=0!=(f|0)?6:9;break;case 6:c=HEAP32[(f+28|0)>>2];h=0!=(_DestroyEnvironment(f)|0)?8:7;break;case 7:b=0;h=8;break;case 8:f=c;h=5;break;case 9:h=10;break;case 10:a=a+1|0;h=3;break;case 11:return _free(HEAP32[_EnvironmentHashTable>>2]),b;default:assert(0,"bad label: "+h)}}
function _DestroyEnvironment(h){var f=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;c=h;g=1;i=c;c=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|0)>>2]|0)?3:4;break;case 3:a=0;c=28;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]|0)>>2]|0)?5:6;break;case 5:a=0;c=28;break;case 6:e=HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2];_EnvReleaseMem(i,-1,0);d=0;c=7;break;case 7:c=100>(d|0)?8:12;
break;case 8:c=0!=(HEAP32[(HEAP32[(i+20|0)>>2]+(d<<2)|0)>>2]|0)?9:10;break;case 9:FUNCTION_TABLE[HEAP32[(HEAP32[(i+20|0)>>2]+(d<<2)|0)>>2]](i);c=10;break;case 10:c=11;break;case 11:d=d+1|0;c=7;break;case 12:_free(HEAP32[(i+20|0)>>2]);b=HEAP32[(i+24|0)>>2];c=13;break;case 13:c=0!=(b|0)?14:16;break;case 14:FUNCTION_TABLE[HEAP32[(b+4|0)>>2]](i);c=15;break;case 15:b=HEAP32[(b+12|0)>>2];c=13;break;case 16:_RemoveEnvironmentCleanupFunctions(i);_EnvReleaseMem(i,-1,0);_RemoveHashedEnvironment(i);c=0!=(HEAP32[(e|
0)>>2]|0)?18:17;break;case 17:c=0!=(HEAP32[(e+4|0)>>2]|0)?18:19;break;case 18:_printf(STRING_TABLE.__str41107|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0;c=19;break;case 19:_free(HEAP32[(e+20|0)>>2]);d=0;c=20;break;case 20:c=100>(d|0)?21:25;break;case 21:c=0!=(HEAP32[(HEAP32[(i+16|0)>>2]+(d<<2)|0)>>2]|0)?22:23;break;case 22:_free(HEAP32[(HEAP32[(i+16|0)>>2]+(d<<2)|0)>>2]);HEAP32[(HEAP32[(i+16|
0)>>2]+(d<<2)|0)>>2]=0;c=23;break;case 23:c=24;break;case 24:d=d+1|0;c=20;break;case 25:_free(HEAP32[(i+16|0)>>2]);c=(HEAP32[_CurrentEnvironment>>2]|0)==(i|0)?26:27;break;case 26:HEAP32[_CurrentEnvironment>>2]=0;c=27;break;case 27:_free(i);a=g;c=28;break;case 28:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DestroyEnvironment.X=1;function _CreateEnvironment(){return _CreateEnvironmentDriver(0,0,0,0)}
function _CreateEnvironmentDriver(h,f,c,a){var b=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=_malloc(32);d=0==(l|0)?3:4;break;case 3:_printf(STRING_TABLE.__str51108|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=0;d=9;break;case 4:m=_malloc(400);d=0==(m|0)?5:6;break;case 5:_free(l);
_printf(STRING_TABLE.__str61109|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=0;d=9;break;case 6:_memset(m,0,400,1);d=l;HEAP32[d>>2]&=-2;HEAP32[(l+16|0)>>2]=m;HEAP32[(l+28|0)>>2]=0;HEAP32[(l+24|0)>>2]=0;m=HEAP32[_NextEnvironmentIndex>>2];HEAP32[_NextEnvironmentIndex>>2]=m+1|0;HEAP32[(l+4|0)>>2]=m;HEAP32[(l+8|0)>>2]=0;HEAP32[(l+12|0)>>2]=0;m=_malloc(400);d=0==(m|0)?7:8;break;case 7:_free(HEAP32[(l+
16|0)>>2]);_free(l);_printf(STRING_TABLE.__str71110|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=0;d=9;break;case 8:_memset(m,0,400,1);HEAP32[(l+20|0)>>2]=m;_AddHashedEnvironment(l);HEAP32[_CurrentEnvironment>>2]=l;_EnvInitializeEnvironment(l,g,i,j,k);e=l;d=9;break;case 9:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_CreateEnvironmentDriver.X=1;
function _CreateRuntimeEnvironment(h,f,c,a){return _CreateEnvironmentDriver(h,f,c,a)}function _SetCurrentEnvironmentByIndex(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=_FindEnvironment(h);f=0==(a|0)?3:4;break;case 3:c=0;f=5;break;case 4:_SetCurrentEnvironment(a);c=1;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}function _GetEnvironmentByIndex(h){return _FindEnvironment(h)}
function _RemoveEnvironmentCleanupFunctions(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(HEAP32[(c+24|0)>>2]|0)?4:5;break;case 4:f=HEAP32[(HEAP32[(c+24|0)>>2]+12|0)>>2];_free(HEAP32[(c+24|0)>>2]);HEAP32[(c+24|0)>>2]=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _AddEnvironmentCleanupFunction(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m;b=h;e=f;g=c;i=a;l=0;m=b;j=_malloc(16);b=0==(j|0)?3:4;break;case 3:d=0;b=16;break;case 4:HEAP32[(j|0)>>2]=e;HEAP32[(j+4|0)>>2]=g;HEAP32[(j+8|0)>>2]=i;b=0==(HEAP32[(m+24|0)>>2]|0)?5:6;break;case 5:HEAP32[(j+12|0)>>2]=0;HEAP32[(m+24|0)>>2]=j;d=1;b=16;break;case 6:k=HEAP32[(m+24|0)>>2];b=7;break;case 7:b=0!=(k|0)?8:9;break;case 8:var n=(i|0)<(HEAP32[(k+8|0)>>2]|0)&1;b=10;break;case 9:n=0;b=10;break;case 10:b=
0!=(n|0)?11:12;break;case 11:l=k;k=HEAP32[(k+12|0)>>2];b=7;break;case 12:b=0==(l|0)?13:14;break;case 13:HEAP32[(j+12|0)>>2]=HEAP32[(m+24|0)>>2];HEAP32[(m+24|0)>>2]=j;b=15;break;case 14:HEAP32[(j+12|0)>>2]=k;HEAP32[(l+12|0)>>2]=j;b=15;break;case 15:d=1;b=16;break;case 16:return d;default:assert(0,"bad label: "+b)}}_AddEnvironmentCleanupFunction.X=1;
function _AddHashedEnvironment(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[_EnvironmentHashTable>>2]|0)?3:4;break;case 3:_InitializeEnvironmentHashTable();f=4;break;case 4:f=(HEAPU32[(c+4|0)>>2]>>>0)%131;h=HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(f<<2)|0)>>2];HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(f<<2)|0)>>2]=c;HEAP32[(c+28|0)>>2]=h;return;default:assert(0,"bad label: "+f)}}
function _InitializeEnvironmentHashTable(){var h=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var f;for(f=2;;)switch(f){case 2:var c;f=0!=(HEAP32[_EnvironmentHashTable>>2]|0)?3:4;break;case 3:f=10;break;case 4:f=_malloc(524);HEAP32[_EnvironmentHashTable>>2]=f;f=0==(HEAP32[_EnvironmentHashTable>>2]|0)?5:6;break;case 5:_printf(STRING_TABLE.__str81111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));f=10;break;case 6:c=0;f=7;break;case 7:f=131>(c|0)?8:10;break;case 8:HEAP32[(HEAP32[_EnvironmentHashTable>>2]+(c<<2)|0)>>2]=0;f=9;break;case 9:c=c+1|0;f=7;break;case 10:STACKTOP=h;return;default:assert(0,"bad label: "+f)}}function _InitializeEvaluationData(h){_AllocateEnvironmentData(h,44,616,0)}
function _EvaluateExpression(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l=a,m=a+16;e=h;g=f;i=c;b=0==(g|0)?3:4;break;case 3:HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2];b=79;break;case 4:b=HEAPU16[(g|0)>>1]&65535;b=3==(b|0)||2==(b|0)||0==(b|0)||1==(b|0)||8==(b|0)||
7==(b|0)||5==(b|0)?5:30==(b|0)?6:4==(b|0)?67:36==(b|0)||35==(b|0)?68:71;break;case 5:HEAP16[(i+4|0)>>1]=HEAP16[(g|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(g+4|0)>>2];b=78;break;case 6:k=HEAP32[(g+4|0)>>2];_StartProfile(e,l,k+36|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+60|0)>>2]+52|0)>>2]);j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]=g;b=HEAP8[k+8|0]<<24>>24;b=118==(b|0)?7:98==(b|0)?11:97==(b|0)?21:105==(b|0)?25:108==(b|0)?29:102==(b|0)?33:100==
(b|0)?37:115==(b|0)?41:119==(b|0)?45:120==(b|0)?49:111==(b|0)?53:99==(b|0)?57:106==(b|0)||107==(b|0)||109==(b|0)||110==(b|0)||117==(b|0)?61:65;break;case 7:b=0!=HEAP16[(k+28|0)>>1]<<16>>16?8:9;break;case 8:FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);b=10;break;case 9:FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();b=10;break;case 10:HEAP16[(i+4|0)>>1]=175;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];b=66;break;case 11:HEAP16[(i+4|0)>>1]=2;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?12:16;break;
case 12:b=0!=(FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e)|0)?13:14;break;case 13:HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2];b=15;break;case 14:HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];b=15;break;case 15:b=20;break;case 16:b=0!=(FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]()|0)?17:18;break;case 17:HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2];b=19;break;case 18:HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>
2]+4|0)>>2];b=19;break;case 19:b=20;break;case 20:b=66;break;case 21:HEAP16[(i+4|0)>>1]=5;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?22:23;break;case 22:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP32[(i+8|0)>>2]=b;b=24;break;case 23:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP32[(i+8|0)>>2]=b;b=24;break;case 24:b=66;break;case 25:HEAP16[(i+4|0)>>1]=1;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?26:27;break;case 26:b=e;var n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);b=_EnvAddLong(b,n);HEAP32[(i+8|0)>>2]=b;b=28;break;case 27:b=
e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();b=_EnvAddLong(b,n);HEAP32[(i+8|0)>>2]=b;b=28;break;case 28:b=66;break;case 29:HEAP16[(i+4|0)>>1]=1;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?30:31;break;case 30:b=e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);b=_EnvAddLong(b,n);HEAP32[(i+8|0)>>2]=b;b=32;break;case 31:b=e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();b=_EnvAddLong(b,n);HEAP32[(i+8|0)>>2]=b;b=32;break;case 32:b=66;break;case 33:HEAP16[(i+4|0)>>1]=0;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?34:35;break;case 34:b=e;n=FUNCTION_TABLE[HEAP32[(k+
12|0)>>2]](e);b=_EnvAddDouble(b,n);HEAP32[(i+8|0)>>2]=b;b=36;break;case 35:b=e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();b=_EnvAddDouble(b,n);HEAP32[(i+8|0)>>2]=b;b=36;break;case 36:b=66;break;case 37:HEAP16[(i+4|0)>>1]=0;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?38:39;break;case 38:b=e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);b=_EnvAddDouble(b,n);HEAP32[(i+8|0)>>2]=b;b=40;break;case 39:b=e;n=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();b=_EnvAddDouble(b,n);HEAP32[(i+8|0)>>2]=b;b=40;break;case 40:b=66;break;case 41:HEAP16[(i+
4|0)>>1]=3;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?42:43;break;case 42:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP32[(i+8|0)>>2]=b;b=44;break;case 43:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP32[(i+8|0)>>2]=b;b=44;break;case 44:b=66;break;case 45:HEAP16[(i+4|0)>>1]=2;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?46:47;break;case 46:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP32[(i+8|0)>>2]=b;b=48;break;case 47:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP32[(i+8|0)>>2]=b;b=48;break;case 48:b=66;break;case 49:HEAP16[(i+
4|0)>>1]=7;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?50:51;break;case 50:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP32[(i+8|0)>>2]=b;b=52;break;case 51:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP32[(i+8|0)>>2]=b;b=52;break;case 52:b=66;break;case 53:HEAP16[(i+4|0)>>1]=8;b=0!=HEAP16[(k+28|0)>>1]<<16>>16?54:55;break;case 54:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP32[(i+8|0)>>2]=b;b=56;break;case 55:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP32[(i+8|0)>>2]=b;b=56;break;case 56:b=66;break;case 57:b=0!=
HEAP16[(k+28|0)>>1]<<16>>16?58:59;break;case 58:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e);HEAP8[m|0]=b;b=60;break;case 59:b=FUNCTION_TABLE[HEAP32[(k+12|0)>>2]]();HEAP8[m|0]=b;b=60;break;case 60:HEAP8[m+1|0]=0;HEAP16[(i+4|0)>>1]=2;b=_EnvAddSymbol(e,m|0);HEAP32[(i+8|0)>>2]=b;b=66;break;case 61:b=0!=HEAP16[(k+28|0)>>1]<<16>>16?62:63;break;case 62:FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](e,i);b=64;break;case 63:FUNCTION_TABLE[HEAP32[(k+12|0)>>2]](i);b=64;break;case 64:b=66;break;case 65:_SystemError(e,STRING_TABLE.__str1118|
0,2);_EnvExitRouter(e,1);b=66;break;case 66:_EndProfile(e,l);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]=j;b=78;break;case 67:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+8|0)>>2];HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+12|0)>>2];HEAP32[(i+16|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=78;break;case 68:b=0==(_GetBoundVariable(e,i,HEAP32[(g+4|0)>>2])|0)?69:70;break;case 69:_PrintErrorID(e,STRING_TABLE.__str1118|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str11119|
0,STRING_TABLE.__str21120|0);_EnvPrintRouter(e,STRING_TABLE.__str11119|0,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str11119|0,STRING_TABLE.__str31121|0);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(e,1);b=70;break;case 70:b=78;break;case 71:b=0==(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]|0)?72:73;break;case 72:_SystemError(e,STRING_TABLE.__str1118|0,
3);_EnvExitRouter(e,1);b=73;break;case 73:b=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>13&1|0)?74:75;break;case 74:HEAP16[(i+4|0)>>1]=HEAP16[(g|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(g+4|0)>>2];b=78;break;case 75:b=0==(HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]+20|0)>>2]|0)?76:77;break;case 76:_SystemError(e,STRING_TABLE.__str1118|0,4);_EnvExitRouter(e,1);b=77;break;case 77:j=
HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]=g;_StartProfile(e,l,HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]+52|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+60|0)>>2]+52|0)>>2]);FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]+20|0)>>2]](e,HEAP32[(g+4|0)>>2],i);_EndProfile(e,l);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]=
j;b=78;break;case 78:_PropagateReturnValue(e,i);d=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2];b=79;break;case 79:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EvaluateExpression.X=1;function _SetEvaluationError(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]=c;c=1==(c|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+8|0)>>2]=1;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _GetEvaluationError(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+4|0)>>2]}function _SetHaltExecution(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+8|0)>>2]=f}function _GetHaltExecution(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+8|0)>>2]}
function _PropagateReturnValue(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;c=4!=(HEAPU16[(b+4|0)>>1]&65535|0)?3:4;break;case 3:_PropagateReturnAtom(a,HEAPU16[(b+4|0)>>1]&65535,HEAP32[(b+8|0)>>2]);c=11;break;case 4:e=HEAP32[(b+8|0)>>2];c=(HEAP16[(e+4|0)>>1]<<16>>16|0)>(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:HEAP16[(e+4|0)>>1]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]&65535;c=6;break;case 6:g=e+16|0;d=0;c=7;break;case 7:c=d>>>0<HEAPU32[(e+
8|0)>>2]>>>0?8:10;break;case 8:_PropagateReturnAtom(a,HEAPU16[(g+(d<<3)|0)>>1]&65535,HEAP32[((g+(d<<3)|0)+4|0)>>2]);c=9;break;case 9:d=d+1|0;c=7;break;case 10:c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_PropagateReturnValue.X=1;
function _InstallPrimitive(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(e<<2)|0)>>2]|0)?3:4;break;case 3:_SystemError(b,STRING_TABLE.__str1118|0,5);_EnvExitRouter(b,1);a=4;break;case 4:HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(e<<2)|0)>>2]=d;return;default:assert(0,"bad label: "+a)}}
function _ReturnValues(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+20|0)>>2];_ValueDeinstall(a,b);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];
b=c;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}_ReturnValues.X=1;function _ValueDeinstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=4==(HEAPU16[(b+4|0)>>1]&65535|0)?3:4;break;case 3:_MultifieldDeinstall(a,HEAP32[(b+8|0)>>2]);c=5;break;case 4:_AtomDeinstall(a,HEAPU16[(b+4|0)>>1]&65535,HEAP32[(b+8|0)>>2]);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _PrintDataObject(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=HEAPU16[(e+4|0)>>1]&65535;a=175==(a|0)||2==(a|0)||3==(a|0)||1==(a|0)||0==(a|0)||5==(a|0)||6==(a|0)||8==(a|0)||7==(a|0)?3:4==(a|0)?4:5;break;case 3:_PrintAtom(b,d,HEAPU16[(e+4|0)>>1]&65535,HEAP32[(e+8|0)>>2]);a=13;break;case 4:_PrintMultifield(b,d,HEAP32[(e+8|0)>>2],HEAP32[(e+12|0)>>2],HEAP32[(e+16|0)>>2],1);a=13;break;case 5:a=0!=(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e+4|0)>>1]&65535)<<
2)|0)>>2]|0)?6:12;break;case 6:a=0!=(HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e+4|0)>>1]&65535)<<2)|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e+4|0)>>1]&65535)<<2)|0)>>2]+12|0)>>2]](b,d,HEAP32[(e+8|0)>>2]);a=13;break;case 8:a=0!=(HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e+4|0)>>1]&65535)<<2)|0)>>2]+8|0)>>2]|0)?9:10;break;case 9:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e+4|0)>>1]&65535)<<2)|0)>>2]+8|0)>>2]](b,d,HEAP32[(e+8|0)>>2]);a=13;break;case 10:a=11;break;case 11:a=12;break;case 12:_EnvPrintRouter(b,d,STRING_TABLE.__str41122|0);_PrintLongInteger(b,d,HEAPU16[(e+4|0)>>1]&65535);_EnvPrintRouter(b,d,STRING_TABLE.__str51123|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);a=13;break;case 13:return;default:assert(0,"bad label: "+a)}}_PrintDataObject.X=1;
function _EnvSetMultifieldErrorValue(h,f){HEAP16[(f+4|0)>>1]=4;var c=_EnvCreateMultifield(h,0);HEAP32[(f+8|0)>>2]=c;HEAP32[(f+12|0)>>2]=1;HEAP32[(f+16|0)>>2]=0}function _ValueInstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=4==(HEAPU16[(b+4|0)>>1]&65535|0)?3:4;break;case 3:_MultifieldInstall(a,HEAP32[(b+8|0)>>2]);c=5;break;case 4:_AtomInstall(a,HEAPU16[(b+4|0)>>1]&65535,HEAP32[(b+8|0)>>2]);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _AtomInstall(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=d;a=2==(a|0)||3==(a|0)||33==(a|0)||8==(a|0)?3:0==(a|0)?4:1==(a|0)?5:4==(a|0)?6:175==(a|0)?7:8;break;case 3:a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=16;break;case 4:a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=16;break;case 5:a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=16;break;case 6:_MultifieldInstall(b,e);a=16;break;case 7:a=16;break;case 8:a=0==(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]|0)?9:10;
break;case 9:a=16;break;case 10:a=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?11:12;break;case 11:a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=15;break;case 12:a=0!=(HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+32|0)>>2]|0)?13:14;break;case 13:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+32|0)>>2]](b,e);a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:return;default:assert(0,
"bad label: "+a)}}_AtomInstall.X=1;
function _AtomDeinstall(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=d;a=2==(a|0)||3==(a|0)||33==(a|0)||8==(a|0)?3:0==(a|0)?4:1==(a|0)?5:4==(a|0)?6:175==(a|0)?7:8;break;case 3:_DecrementSymbolCount(b,e);a=16;break;case 4:_DecrementFloatCount(b,e);a=16;break;case 5:_DecrementIntegerCount(b,e);a=16;break;case 6:_MultifieldDeinstall(b,e);a=16;break;case 7:a=16;break;case 8:a=0==(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]|0)?9:10;break;case 9:a=16;break;case 10:a=
0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?11:12;break;case 11:_DecrementBitMapCount(b,e);a=15;break;case 12:a=0!=(HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+28|0)>>2]|0)?13:14;break;case 13:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+(d<<2)|0)>>2]+28|0)>>2]](b,e);a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:return;default:assert(0,"bad label: "+a)}}
_AtomDeinstall.X=1;
function _PropagateReturnAtom(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;b=h;a=f;d=c;a=1==(a|0)||0==(a|0)||2==(a|0)||3==(a|0)||8==(a|0)?3:7==(a|0)?6:6==(a|0)?9:12;break;case 3:a=(HEAP32[(d+8|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=5;break;case 5:a=12;break;case 6:a=(HEAP32[(d+32|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:HEAP32[(d+
32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=8;break;case 8:a=12;break;case 9:a=(HEAP32[(d+28|0)>>2]&32767|0)>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?10:11;break;case 10:a=d+28|0;HEAP32[a>>2]=HEAP32[a>>2]&-32768|HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]&32767;a=11;break;case 11:a=12;break;case 12:return;default:assert(0,"bad label: "+a)}}_PropagateReturnAtom.X=1;
function _TransferDataObjectValues(h,f){HEAP16[(h+4|0)>>1]=HEAP16[(f+4|0)>>1];HEAP32[(h+8|0)>>2]=HEAP32[(f+8|0)>>2];HEAP32[(h+12|0)>>2]=HEAP32[(f+12|0)>>2];HEAP32[(h+16|0)>>2]=HEAP32[(f+16|0)>>2];HEAP32[(h|0)>>2]=HEAP32[(f|0)>>2];HEAP32[(h+20|0)>>2]=HEAP32[(f+20|0)>>2]}
function _GetAtomicHashValue(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;b=e&65535;b=0==(b|0)?3:1==(b|0)?4:6==(b|0)||7==(b|0)||5==(b|0)?5:3==(b|0)||8==(b|0)||2==(b|0)?6:7;break;case 3:j=g+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);b=k;tempDoubleF64[0]=j;HEAP32[b>>2]=tempDoubleI32[0];HEAP32[b+4>>2]=tempDoubleI32[1];
j=HEAP32[k>>2];b=8;break;case 4:j=HEAP32[(g+16|0)>>2];b=8;break;case 5:j=g;b=8;break;case 6:j=HEAPU32[(g+12|0)>>2]>>>3&536870911;b=8;break;case 7:j=e&65535;b=8;break;case 8:b=0>(i|0)?9:10;break;case 9:d=j;b=11;break;case 10:d=j*(i+29|0)|0;b=11;break;case 11:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetAtomicHashValue.X=1;
function _EnvFunctionCall(h,f,c,a){var b=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b;g=h;i=f;j=c;k=a;d=0!=(_GetFunctionReference(g,i,l)|0)?3:4;break;case 3:e=_FunctionCall2(g,l,j,k);d=5;break;case 4:_PrintErrorID(g,STRING_TABLE.__str1118|0,2,0);_EnvPrintRouter(g,STRING_TABLE.__str11119|0,STRING_TABLE.__str61124|0);_EnvPrintRouter(g,STRING_TABLE.__str11119|0,i);_EnvPrintRouter(g,STRING_TABLE.__str11119|
0,STRING_TABLE.__str71125|0);e=1;d=5;break;case 5:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}
function _GetFunctionReference(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+8|0)>>2]=0;HEAP16[(g|0)>>1]=175;HEAP32[(g+4|0)>>2]=0;j=a=_LookupDeffunctionInScope(d,e);a=0!=(a|0)?3:4;break;case 3:HEAP16[(g|0)>>1]=32;HEAP32[(g+4|0)>>2]=j;b=1;a=9;break;case 4:i=a=_LookupDefgenericInScope(d,e);a=0!=(a|0)?5:6;break;case 5:HEAP16[(g|0)>>1]=31;HEAP32[(g+4|0)>>2]=i;b=1;a=9;break;case 6:k=a=_FindFunction(d,e);a=0!=(a|0)?7:8;break;case 7:HEAP16[(g|0)>>1]=
30;HEAP32[(g+4|0)>>2]=k;b=1;a=9;break;case 8:b=0;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}_GetFunctionReference.X=1;
function _FunctionCall2(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;HEAP32[m>>2]=0;d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?3:6;break;case 3:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+160|0)>>2]|0)>>2]|0)?6:4;break;case 4:d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]|0)?5:6;break;case 5:_PeriodicCleanup(g,1,0);d=
6;break;case 6:d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:_SetHaltExecution(g,0);d=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;HEAP16[(k+4|0)>>1]=2;HEAP32[(k+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2];l=_ParseConstantArguments(g,j,m);d=1==(HEAP32[m>>2]|0)?9:10;break;case 9:e=1;d=11;break;case 10:HEAP32[(i+8|0)>>2]=l;d=_EvaluateExpression(g,i,k);HEAP32[m>>2]=d;_ReturnExpression(g,l);HEAP32[(i+8|0)>>2]=0;e=HEAP32[m>>
2];d=11;break;case 11:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_FunctionCall2.X=1;
function _CopyDataObject(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=4!=(HEAPU16[(g+4|0)>>1]&65535|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];b=7;break;case 4:_DuplicateMultifield(d,e,g);b=0!=(i|0)?5:6;break;case 5:_AddToMultifieldList(d,HEAP32[(e+8|0)>>2]);b=6;break;case 6:b=7;break;case 7:return;default:assert(0,"bad label: "+b)}}
function _ConvertValueToExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;i=g=0;c=4!=(HEAPU16[(d+4|0)>>1]&65535|0)?3:4;break;case 3:a=_GenConstant(b,HEAP16[(d+4|0)>>1],HEAP32[(d+8|0)>>2]);c=14;break;case 4:e=HEAP32[(d+12|0)>>2]+1|0;c=5;break;case 5:c=(e|0)<=(HEAP32[(d+16|0)>>2]+1|0)?6:11;break;case 6:j=_GenConstant(b,HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((e-1|0)<<3)|0)>>1],HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((e-1|0)<<3)|0)+4|0)>>2]);c=0==(i|0)?7:8;break;case 7:g=j;c=9;break;
case 8:HEAP32[(i+12|0)>>2]=j;c=9;break;case 9:i=j;c=10;break;case 10:e=e+1|0;c=5;break;case 11:c=0==(g|0)?12:13;break;case 12:c=b;a=_FindFunction(b,STRING_TABLE.__str81126|0);a=_GenConstant(c,30,a);c=14;break;case 13:a=g;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_ConvertValueToExpression.X=1;
function _FunctionReferenceExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;g=c=_LookupDeffunctionInScope(b,d);c=0!=(c|0)?3:4;break;case 3:a=_GenConstant(b,32,g);c=9;break;case 4:e=c=_LookupDefgenericInScope(b,d);c=0!=(c|0)?5:6;break;case 5:a=_GenConstant(b,31,e);c=9;break;case 6:i=c=_FindFunction(b,d);c=0!=(c|0)?7:8;break;case 7:a=_GenConstant(b,30,i);c=9;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _DOsEqual(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=(HEAPU16[(b+4|0)>>1]&65535|0)!=(HEAPU16[(d+4|0)>>1]&65535|0)?3:4;break;case 3:a=0;c=12;break;case 4:c=4==(HEAPU16[(b+4|0)>>1]&65535|0)?5:8;break;case 5:c=0==(_MultifieldDOsEqual(b,d)|0)?6:7;break;case 6:a=0;c=12;break;case 7:c=11;break;case 8:c=(HEAP32[(b+8|0)>>2]|0)!=(HEAP32[(d+8|0)>>2]|0)?9:10;break;case 9:a=0;c=12;break;case 10:c=11;break;case 11:a=1;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
function _EvaluateAndStoreInDataObject(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;HEAP16[(k+4|0)>>1]=4;HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=-1;d=0==(j|0)?3:7;break;case 3:d=0!=(l|0)?4:5;break;case 4:d=_EnvCreateMultifield(g,0);HEAP32[(k+8|0)>>2]=d;d=6;break;case 5:d=_CreateMultifield2(g,0);HEAP32[(k+8|0)>>2]=d;d=6;break;case 6:e=1;d=12;break;case 7:d=0==(i|0)?8:10;break;case 8:d=0==(HEAP32[(j+12|0)>>2]|0)?9:10;break;case 9:_EvaluateExpression(g,j,k);d=11;
break;case 10:_StoreInMultifield(g,k,j,l);d=11;break;case 11:e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?0:1;d=12;break;case 12:return e;default:assert(0,"bad label: "+d)}}_EvaluateAndStoreInDataObject.X=1;
function _InitExpressionData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_AllocateEnvironmentData(c,45,52,518);_InitExpressionPointers(c);f=_gm2(c,2012);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2]=f;a=0;f=3;break;case 3:f=503>a>>>0?4:6;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2]+(a<<2)|0)>>2]=0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _DeallocateExpressionData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;f=0!=(_Bloaded(c)|0)?11:3;break;case 3:a=0;f=4;break;case 4:f=503>(a|0)?5:10;break;case 5:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2]+(a<<2)|0)>>2];f=6;break;case 6:f=0!=(b|0)?7:8;break;case 7:f=HEAP32[(b+12|0)>>2];_ReturnPackedExpression(c,HEAP32[(b+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];b=f;f=6;break;case 8:f=9;break;case 9:a=a+1|0;f=4;break;case 10:f=11;break;case 11:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2],2012);f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]|0)?12:14;break;case 12:f=0!=(_Bloaded(c)|0)?13:14;break;case 13:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+
180|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]<<4|0);f=14;break;case 14:return;default:assert(0,"bad label: "+f)}}_DeallocateExpressionData.X=1;
function _InitExpressionPointers(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=_FindFunction(c,STRING_TABLE.__str1153|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]|0)>>2]=f;f=_FindFunction(c,STRING_TABLE.__str11154|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+4|0)>>2]=f;f=_FindFunction(c,STRING_TABLE.__str21155|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+8|0)>>2]=f;f=_FindFunction(c,STRING_TABLE.__str31156|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+12|0)>>2]=f;f=_FindFunction(c,
STRING_TABLE.__str41157|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+16|0)>>2]=f;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]|0)>>2]|0)?7:3;break;case 3:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+4|0)>>2]|0)?7:4;break;case 4:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+8|0)>>2]|0)?7:5;break;case 5:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+12|0)>>2]|0)?7:6;break;case 6:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+16|0)>>2]|0)?7:8;break;case 7:_SystemError(c,
STRING_TABLE.__str51158|0,1);_EnvExitRouter(c,1);f=8;break;case 8:return;default:assert(0,"bad label: "+f)}}_InitExpressionPointers.X=1;function _ExpressionInstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:7;break;case 6:_AtomInstall(a,HEAPU16[(b|0)>>1]&65535,HEAP32[(b+4|0)>>2]);_ExpressionInstall(a,HEAP32[(b+8|0)>>2]);b=HEAP32[(b+12|0)>>2];c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}
function _ExpressionDeinstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:7;break;case 6:_AtomDeinstall(a,HEAPU16[(b|0)>>1]&65535,HEAP32[(b+4|0)>>2]);_ExpressionDeinstall(a,HEAP32[(b+8|0)>>2]);b=HEAP32[(b+12|0)>>2];c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}
function _PackExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=b;a=_ExpressionSize(d)<<4|0;c=_gm3(c,a);_ListToPacked(d,c,0);a=c;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _ListToPacked(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(d|0)?3:4;break;case 3:b=g;a=14;break;case 4:a=5;break;case 5:a=0!=(d|0)?6:13;break;case 6:i=g;g=g+1|0;HEAP16[(e+(i<<4)|0)>>1]=HEAP16[(d|0)>>1];HEAP32[((e+(i<<4)|0)+4|0)>>2]=HEAP32[(d+4|0)>>2];a=0==(HEAP32[(d+8|0)>>2]|0)?7:8;break;case 7:HEAP32[((e+(i<<4)|0)+8|0)>>2]=0;a=9;break;case 8:HEAP32[((e+(i<<4)|0)+8|0)>>2]=e+(g<<4)|0;g=_ListToPacked(HEAP32[(d+8|0)>>2],e,g);a=9;break;case 9:a=0==(HEAP32[(d+12|0)>>
2]|0)?10:11;break;case 10:HEAP32[((e+(i<<4)|0)+12|0)>>2]=0;a=12;break;case 11:HEAP32[((e+(i<<4)|0)+12|0)>>2]=e+(g<<4)|0;a=12;break;case 12:d=HEAP32[(d+12|0)>>2];a=5;break;case 13:b=g;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_ListToPacked.X=1;function _ReturnPackedExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(b|0)?3:4;break;case 3:c=a;var d=b,e=_ExpressionSize(b)<<4|0;_rm3(c,d,e);c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _ReturnExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:7;break;case 4:c=0!=(HEAP32[(b+8|0)>>2]|0)?5:6;break;case 5:_ReturnExpression(a,HEAP32[(b+8|0)>>2]);c=6;break;case 6:c=b;b=HEAP32[(b+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;case 7:return;default:assert(0,"bad label: "+c)}}_ReturnExpression.X=1;
function _RemoveHashedExpression(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4;b=h;d=_FindHashedExpression(b,f,g,e);a=0==(d|0)?3:4;break;case 3:a=10;break;case 4:a=d+4|0;var i=HEAP32[a>>2]-1|0;HEAP32[a>>2]=i;a=0!=(i|0)?5:6;break;case 5:a=10;break;case 6:a=0==(HEAP32[e>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+20|0)>>2]+(HEAP32[g>>2]<<2)|
0)>>2]=HEAP32[(d+12|0)>>2];a=9;break;case 8:HEAP32[(HEAP32[e>>2]+12|0)>>2]=HEAP32[(d+12|0)>>2];a=9;break;case 9:_ExpressionDeinstall(b,HEAP32[(d+8|0)>>2]);_ReturnPackedExpression(b,HEAP32[(d+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_RemoveHashedExpression.X=1;
function _FindHashedExpression(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;b=0==(g|0)?3:4;break;case 3:d=0;b=10;break;case 4:b=_HashExpression(g);HEAP32[i>>2]=b;HEAP32[j>>2]=0;k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+20|0)>>2]+(HEAP32[i>>2]<<2)|0)>>2];b=5;break;case 5:b=0!=(k|0)?6:9;break;case 6:b=0!=(_IdenticalExpression(HEAP32[(k+8|0)>>2],g)|0)?7:8;break;case 7:d=k;b=10;break;case 8:HEAP32[j>>2]=k;k=HEAP32[(k+12|0)>>2];b=5;break;case 9:d=0;b=10;break;
case 10:return d;default:assert(0,"bad label: "+b)}}_FindHashedExpression.X=1;
function _AddHashedExpression(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j=c+4;d=h;e=f;a=0==(e|0)?3:4;break;case 3:b=0;a=10;break;case 4:i=_FindHashedExpression(d,e,j,g);a=0!=(i|0)?5:6;break;case 5:a=i+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;b=HEAP32[(i+8|0)>>2];a=10;break;case 6:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?7:8;break;case 7:var k=
_genalloc(d,20);a=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=9;break;case 9:i=k;HEAP32[(i|0)>>2]=HEAP32[j>>2];HEAP32[(i+4|0)>>2]=1;a=_PackExpression(d,e);HEAP32[(i+8|0)>>2]=a;_ExpressionInstall(d,
HEAP32[(i+8|0)>>2]);HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+20|0)>>2]+(HEAP32[(i|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+20|0)>>2]+(HEAP32[(i|0)>>2]<<2)|0)>>2]=i;HEAP32[(i+16|0)>>2]=0;b=HEAP32[(i+8|0)>>2];a=10;break;case 10:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_AddHashedExpression.X=1;
function _HashedExpressionIndex(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j=c+4;d=h;e=f;a=0==(e|0)?3:4;break;case 3:b=-1;a=8;break;case 4:g=_FindHashedExpression(d,e,j,i);a=0!=(g|0)?5:6;break;case 5:var k=HEAP32[(g+16|0)>>2];a=7;break;case 6:k=-1;a=7;break;case 7:b=k;a=8;break;case 8:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}
function _HashExpression(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=269;f=0!=(HEAP32[(c+8|0)>>2]|0)?3:4;break;case 3:f=257*_HashExpression(HEAP32[(c+8|0)>>2])|0;a=a+f|0;f=4;break;case 4:f=5;break;case 5:f=0!=(c|0)?6:7;break;case 6:a=a+(263*(HEAPU16[(c|0)>>1]&65535)|0)|0;a=a+HEAP32[(c+4|0)>>2]|0;c=HEAP32[(c+12|0)>>2];f=5;break;case 7:return(a>>>0)%503;default:assert(0,"bad label: "+f)}}
function _AllocateExpressions(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;_GenReadBinary(c,HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0,4);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]=0;f=5;break;case 4:f=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]<<4|0;f=_genlongalloc(c,f);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]=f;f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
_AllocateExpressions.X=1;function _RefreshExpressions(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]|0)?3:4;break;case 3:f=5;break;case 4:_BloadandRefresh(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2],16,520);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _UpdateExpression(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;HEAP16[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)>>1]=HEAP16[(d|0)>>1];a=HEAPU16[(d|0)>>1]&65535;a=30==(a|0)?3:31==(a|0)?4:32==(a|0)?8:63==(a|0)?12:82==(a|0)?13:90==(a|0)?17:1==(a|0)?18:0==(a|0)?19:8==(a|0)||33==(a|0)||2==(a|0)||3==(a|0)?20:6==(a|0)?21:7==(a|0)?22:5==(a|0)?23:175==(a|0)?24:25;break;case 3:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+152|0)>>2]+8|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=30;break;case 4:a=-1==(HEAP32[(d+4|0)>>2]|0)?5:6;break;case 5:var i=0;a=7;break;case 6:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*HEAP32[(d+4|0)>>2]|0;a=7;break;case 7:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=i;a=30;break;case 8:a=-1==(HEAP32[(d+4|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+96|0)>>2]|0)>>2]+52*HEAP32[(d+4|0)>>2]|0;a=11;break;case 11:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=j;a=30;break;case 12:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]|0)>>2]+48*HEAP32[(d+4|0)>>2]|0;a=30;break;case 13:a=-1==(HEAP32[(d+4|0)>>2]|0)?14:15;break;case 14:var k=0;a=16;break;case 15:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*HEAP32[(d+4|0)>>
2]|0;a=16;break;case 16:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=k;a=30;break;case 17:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]+60*HEAP32[(d+4|0)>>2]|0;a=30;break;case 18:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+76|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=30;break;case 19:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+72|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=30;break;case 20:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=30;break;case 21:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+8|0;_EnvIncrementFactCount(b,HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]);a=30;break;case 22:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]|0;_EnvIncrementInstanceCount(b,HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]);a=30;break;case 23:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=0;a=30;break;case 24:a=30;break;case 25:a=0==(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(d|0)>>1]&65535)<<2)|0)>>2]|0)?26:27;break;case 26:a=30;break;case 27:a=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(d|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?28:29;break;case 28:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+80|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=29;break;case 29:a=30;break;case 30:g=HEAP32[(d+12|0)>>2];a=-1==(g|0)?31:32;break;case 31:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+12|0)>>2]=0;a=33;break;case 32:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(g<<4)|0;a=33;break;case 33:g=HEAP32[(d+8|0)>>2];a=-1==(g|0)?34:35;break;case 34:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+8|0)>>2]=0;a=36;break;case 35:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(e<<4)|0)+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(g<<4)|0;a=36;break;case 36:return;default:assert(0,"bad label: "+a)}}_UpdateExpression.X=1;
function _ClearBloadedExpressions(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;f=3;break;case 3:f=a>>>0<HEAPU32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]>>>0?4:18;break;case 4:f=HEAPU16[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)>>1]&65535;f=2==(f|0)||3==(f|0)||8==(f|0)||33==(f|0)?5:0==(f|0)?6:1==(f|0)?7:6==(f|0)?8:7==(f|0)?9:175==(f|0)?10:11;break;case 5:_DecrementSymbolCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)+4|
0)>>2]);f=16;break;case 6:_DecrementFloatCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)+4|0)>>2]);f=16;break;case 7:_DecrementIntegerCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)+4|0)>>2]);f=16;break;case 8:_EnvDecrementFactCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)+4|0)>>2]);f=16;break;case 9:_EnvDecrementInstanceCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>
2]+(a<<4)|0)+4|0)>>2]);f=16;break;case 10:f=16;break;case 11:f=0==(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)>>1]&65535)<<2)|0)>>2]|0)?12:13;break;case 12:f=16;break;case 13:f=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?14:15;break;case 14:_DecrementBitMapCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(a<<4)|0)+4|0)>>2]);f=15;break;case 15:f=16;break;case 16:f=17;break;case 17:a=a+1|0;f=3;break;case 18:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+24|0)>>2]<<4|0;f=0!=(b|0)?19:20;break;case 19:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2],b);f=20;break;case 20:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+28|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}_ClearBloadedExpressions.X=1;
function _FindHashedExpressions(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;f=3;break;case 3:f=503>a>>>0?4:10;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+20|0)>>2]+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:8;break;case 6:_MarkNeededItems(c,HEAP32[(b+8|0)>>2]);HEAP32[(b+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+32|0)>>2];f=_ExpressionSize(HEAP32[(b+8|0)>>2]);var d=HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+32|0;HEAP32[d>>2]=HEAP32[d>>2]+f|0;f=7;break;
case 7:b=HEAP32[(b+12|0)>>2];f=5;break;case 8:f=9;break;case 9:a=a+1|0;f=3;break;case 10:return;default:assert(0,"bad label: "+f)}}_FindHashedExpressions.X=1;
function _BsaveHashedExpressions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;c=3;break;case 3:c=503>d>>>0?4:10;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+20|0)>>2]+(d<<2)|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:8;break;case 6:_BsaveExpression(a,HEAP32[(e+8|0)>>2],b);c=7;break;case 7:e=HEAP32[(e+12|0)>>2];c=5;break;case 8:c=9;break;case 9:d=d+1|0;c=3;break;case 10:return;default:assert(0,"bad label: "+c)}}
function _BsaveExpression(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;g=c;b=3;break;case 3:b=0!=(e|0)?4:45;break;case 4:b=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;HEAP16[(i|0)>>1]=HEAP16[(e|0)>>1];b=0==(HEAP32[(e+8|0)>>2]|0)?5:6;break;case 5:HEAP32[(i+8|0)>>2]=-1;b=7;break;case 6:HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+180|0)>>2]+32|0)>>2];b=7;break;case 7:b=0==(HEAP32[(e+12|0)>>2]|0)?8:9;break;case 8:HEAP32[(i+12|0)>>2]=-1;b=10;break;case 9:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];var j=_ExpressionSize(HEAP32[(e+8|0)>>2]);b=b+j|0;HEAP32[(i+12|0)>>2]=b;b=10;break;case 10:b=HEAPU16[(e|0)>>1]&65535;b=0==(b|0)?11:1==(b|0)?12:30==(b|0)?13:31==(b|0)?14:32==(b|0)?18:63==(b|0)?22:82==(b|0)?26:90==(b|0)?30:8==(b|0)||2==(b|0)||33==(b|0)||3==(b|0)?34:6==(b|0)||7==(b|0)||5==(b|0)?35:175==(b|0)?36:37;break;
case 11:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(e+4|0)>>2]+12|0)>>2]>>>3&536870911;b=42;break;case 12:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(e+4|0)>>2]+12|0)>>2]>>>3&536870911;b=42;break;case 13:HEAP32[(i+4|0)>>2]=HEAP16[(HEAP32[(e+4|0)>>2]+30|0)>>1]<<16>>16;b=42;break;case 14:b=0!=(HEAP32[(e+4|0)>>2]|0)?15:16;break;case 15:HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(e+4|0)>>2]+12|0)>>2];b=17;break;case 16:HEAP32[(i+4|0)>>2]=-1;b=17;break;case 17:b=42;break;case 18:b=0!=(HEAP32[(e+4|0)>>2]|0)?19:20;break;case 19:HEAP32[(i+
4|0)>>2]=HEAP32[(HEAP32[(e+4|0)>>2]+12|0)>>2];b=21;break;case 20:HEAP32[(i+4|0)>>2]=-1;b=21;break;case 21:b=42;break;case 22:b=0!=(HEAP32[(e+4|0)>>2]|0)?23:24;break;case 23:HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(e+4|0)>>2]+12|0)>>2];b=25;break;case 24:HEAP32[(i+4|0)>>2]=-1;b=25;break;case 25:b=42;break;case 26:b=0!=(HEAP32[(e+4|0)>>2]|0)?27:28;break;case 27:HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(e+4|0)>>2]+12|0)>>2];b=29;break;case 28:HEAP32[(i+4|0)>>2]=-1;b=29;break;case 29:b=42;break;case 30:b=0!=(HEAP32[(e+
4|0)>>2]|0)?31:32;break;case 31:HEAP32[(i+4|0)>>2]=HEAP32[((HEAP32[(e+4|0)>>2]|0)+12|0)>>2];b=33;break;case 32:HEAP32[(i+4|0)>>2]=-1;b=33;break;case 33:b=42;break;case 34:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(e+4|0)>>2]+12|0)>>2]>>>3&536870911;b=42;break;case 35:HEAP32[(i+4|0)>>2]=-1;b=42;break;case 36:b=42;break;case 37:b=0==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e|0)>>1]&65535)<<2)|0)>>2]|0)?38:39;break;case 38:b=42;break;case 39:b=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(e|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>14&1|0)?40:41;break;case 40:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(e+4|0)>>2]+12|0)>>2]>>>3&536870911;b=41;break;case 41:b=42;break;case 42:_GenWrite(i,16,g);b=0!=(HEAP32[(e+8|0)>>2]|0)?43:44;break;case 43:_BsaveExpression(d,HEAP32[(e+8|0)>>2],g);b=44;break;case 44:e=HEAP32[(e+12|0)>>2];b=3;break;case 45:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveExpression.X=1;
function _BsaveConstructExpressions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+156|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0!=(HEAP32[(d+20|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(d+20|0)>>2]](a,b);c=6;break;case 6:c=7;break;case 7:d=HEAP32[(d+36|0)>>2];c=3;break;case 8:return;default:assert(0,"bad label: "+c)}}
function _CheckArgumentAgainstRestriction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;a=f;e=c;a=_ExpressionToConstraintRecord(d,a);g=_ArgumentTypeToConstraintRecord(d,e);e=_IntersectConstraints(d,a,g);_RemoveConstraint(d,a);_RemoveConstraint(d,g);a=0!=(_UnmatchableConstraint(e)|0)?3:4;break;case 3:_RemoveConstraint(d,e);b=1;a=5;break;case 4:_RemoveConstraint(d,e);b=0;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _ConstantType(h){var f;for(f=2;;)switch(f){case 2:var c;f=h;f=2==(f|0)||3==(f|0)||1==(f|0)||0==(f|0)||8==(f|0)||7==(f|0)?3:4;break;case 3:c=1;f=5;break;case 4:c=0;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _ConstantExpression(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=3;break;case 3:f=0!=(a|0)?4:12;break;case 4:f=2!=(HEAPU16[(a|0)>>1]&65535|0)?5:11;break;case 5:f=3!=(HEAPU16[(a|0)>>1]&65535|0)?6:11;break;case 6:f=8!=(HEAPU16[(a|0)>>1]&65535|0)?7:11;break;case 7:f=7!=(HEAPU16[(a|0)>>1]&65535|0)?8:11;break;case 8:f=1!=(HEAPU16[(a|0)>>1]&65535|0)?9:11;break;case 9:f=0!=(HEAPU16[(a|0)>>1]&65535|0)?10:11;break;case 10:c=0;f=13;break;case 11:a=HEAP32[(a+12|0)>>2];f=3;break;case 12:c=1;f=13;
break;case 13:return c;default:assert(0,"bad label: "+f)}}_ConstantExpression.X=1;function _CountArguments(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=0!=(c|0)?4:5;break;case 4:a=a+1|0;c=HEAP32[(c+12|0)>>2];f=3;break;case 5:return a;default:assert(0,"bad label: "+f)}}
function _IdenticalExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:if(0!=(b|0))c=4;else{var e=0;c=5}break;case 4:e=0!=(d|0);c=5;break;case 5:c=e?6:14;break;case 6:c=(HEAPU16[(b|0)>>1]&65535|0)!=(HEAPU16[(d|0)>>1]&65535|0)?7:8;break;case 7:a=0;c=17;break;case 8:c=(HEAP32[(b+4|0)>>2]|0)!=(HEAP32[(d+4|0)>>2]|0)?9:10;break;case 9:a=0;c=17;break;case 10:c=0==(_IdenticalExpression(HEAP32[(b+8|0)>>2],HEAP32[(d+8|0)>>2])|0)?11:12;break;case 11:a=0;c=17;break;case 12:c=
13;break;case 13:b=HEAP32[(b+12|0)>>2];d=HEAP32[(d+12|0)>>2];c=3;break;case 14:c=(b|0)!=(d|0)?15:16;break;case 15:a=0;c=17;break;case 16:a=1;c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}_IdenticalExpression.X=1;
function _CopyExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:e=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);g=_CopyExpression(b,HEAP32[(d+8|0)>>2]);HEAP32[(e+8|0)>>2]=g;g=e;d=HEAP32[(d+12|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:7;break;case 6:c=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);var i=_CopyExpression(b,HEAP32[(d+8|0)>>2]);HEAP32[(c+8|0)>>2]=i;g=HEAP32[(g+12|0)>>2]=c;d=HEAP32[(d+12|0)>>2];c=5;break;case 7:a=
e;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_CopyExpression.X=1;
function _GenConstant(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var g=_genalloc(b,16);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:return h=g,HEAP32[(h+12|0)>>2]=0,HEAP32[(h+8|0)>>2]=0,HEAP16[(h|0)>>1]=d,HEAP32[(h+4|0)>>2]=e,h;default:assert(0,"bad label: "+a)}}_GenConstant.X=1;
function _ExpressionContainsVariables(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:c=0!=(b|0)?4:16;break;case 4:c=0!=(HEAP32[(b+8|0)>>2]|0)?5:8;break;case 5:c=0!=(_ExpressionContainsVariables(HEAP32[(b+8|0)>>2],d)|0)?6:7;break;case 6:a=1;c=17;break;case 7:c=8;break;case 8:c=36==(HEAPU16[(b|0)>>1]&65535|0)?14:9;break;case 9:c=35==(HEAPU16[(b|0)>>1]&65535|0)?14:10;break;case 10:c=6==(HEAPU16[(b|0)>>1]&65535|0)?14:11;break;case 11:c=33==(HEAPU16[(b|0)>>1]&65535|0)?13:12;break;
case 12:c=34==(HEAPU16[(b|0)>>1]&65535|0)?13:15;break;case 13:c=1==(d|0)?14:15;break;case 14:a=1;c=17;break;case 15:b=HEAP32[(b+12|0)>>2];c=3;break;case 16:a=0;c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}_ExpressionContainsVariables.X=1;
function _ExpressionSize(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=0!=(c|0)?4:7;break;case 4:a=a+1|0;f=0!=(HEAP32[(c+8|0)>>2]|0)?5:6;break;case 5:f=_ExpressionSize(HEAP32[(c+8|0)>>2]);a=a+f|0;f=6;break;case 6:c=HEAP32[(c+12|0)>>2];f=3;break;case 7:return a;default:assert(0,"bad label: "+f)}}
function _PrintExpression(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(e|0)?3:4;break;case 3:a=17;break;case 4:a=5;break;case 5:a=0!=(e|0)?6:16;break;case 6:a=HEAPU16[(e|0)>>1]&65535;a=35==(a|0)||33==(a|0)?7:36==(a|0)||34==(a|0)?8:30==(a|0)?9:12;break;case 7:_EnvPrintRouter(b,d,STRING_TABLE.__str1189|0);_EnvPrintRouter(b,d,HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2]);a=13;break;case 8:_EnvPrintRouter(b,d,STRING_TABLE.__str11190|0);_EnvPrintRouter(b,d,HEAP32[(HEAP32[(e+4|0)>>2]+16|
0)>>2]);a=13;break;case 9:_EnvPrintRouter(b,d,STRING_TABLE.__str21191|0);_EnvPrintRouter(b,d,HEAP32[(HEAP32[(HEAP32[(e+4|0)>>2]|0)>>2]+16|0)>>2]);a=0!=(HEAP32[(e+8|0)>>2]|0)?10:11;break;case 10:_EnvPrintRouter(b,d,STRING_TABLE.__str31192|0);a=11;break;case 11:_PrintExpression(b,d,HEAP32[(e+8|0)>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str41193|0);a=13;break;case 12:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]=e;_PrintAtom(b,d,HEAPU16[(e|
0)>>1]&65535,HEAP32[(e+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]=a;a=13;break;case 13:e=HEAP32[(e+12|0)>>2];a=0!=(e|0)?14:15;break;case 14:_EnvPrintRouter(b,d,STRING_TABLE.__str31192|0);a=15;break;case 15:a=5;break;case 16:a=17;break;case 17:return;default:assert(0,"bad label: "+a)}}_PrintExpression.X=1;
function _AppendExpressions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(b|0)?3:4;break;case 3:a=d;c=10;break;case 4:c=0==(d|0)?5:6;break;case 5:a=b;c=10;break;case 6:e=b;c=7;break;case 7:c=0!=(HEAP32[(e+12|0)>>2]|0)?8:9;break;case 8:e=HEAP32[(e+12|0)>>2];c=7;break;case 9:HEAP32[(e+12|0)>>2]=d;a=b;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}
function _CombineExpressions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(e|0)?3:4;break;case 3:b=g;a=28;break;case 4:a=0==(g|0)?5:6;break;case 5:b=e;a=28;break;case 6:a=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]|0)?7:14;break;case 7:a=(HEAP32[(g+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]|0)?8:14;break;case 8:i=HEAP32[(e+8|0)>>2];a=0==(i|0)?9:10;break;case 9:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>
2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=g;a=28;break;case 10:a=11;break;case 11:a=0!=(HEAP32[(i+12|0)>>2]|0)?12:13;break;case 12:i=HEAP32[(i+12|0)>>2];a=11;break;case 13:HEAP32[(i+12|0)>>2]=g;b=e;a=28;break;case 14:a=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+180|0)>>2]|0)>>2]|0)?15:19;break;case 15:a=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]|0)?16:19;break;case 16:i=HEAP32[(g+8|0)>>2];a=0==(i|0)?17:18;break;case 17:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2];b=e;a=28;break;case 18:HEAP32[(g+8|0)>>2]=e;HEAP32[(e+12|0)>>2]=i;b=g;a=28;break;case 19:a=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]|0)?20:27;break;case 20:a=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]|0)?21:27;break;case 21:i=HEAP32[(e+8|0)>>2];a=0==(i|0)?22:23;break;case 22:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>
2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=g;a=28;break;case 23:a=24;break;case 24:a=0!=(HEAP32[(i+12|0)>>2]|0)?25:26;break;case 25:i=HEAP32[(i+12|0)>>2];a=24;break;case 26:HEAP32[(i+12|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=e;a=28;break;case 27:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]|0)>>2]);HEAP32[(i+8|0)>>2]=e;HEAP32[(e+12|0)>>2]=g;b=i;a=28;break;case 28:return b;default:assert(0,"bad label: "+a)}}_CombineExpressions.X=1;
function _Function0Parse(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e;a=c;d=h;e=f;_GetToken(d,e,a);a=170!=(HEAPU16[(a|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(d,STRING_TABLE.__str1212|0);b=0;a=5;break;case 4:b=_Function1Parse(d,e);a=5;break;case 5:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}
function _Function1Parse(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;e=f;_GetToken(d,e,g);a=2!=(HEAPU16[(g|0)>>1]&65535|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str11213|0,1,1);_EnvPrintRouter(d,STRING_TABLE.__str21214|0,STRING_TABLE.__str31215|0);b=0;a=5;break;case 4:b=a=_Function2Parse(d,e,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);a=5;break;case 5:return d=b,STACKTOP=
c,d;default:assert(0,"bad label: "+a)}}
function _Function2Parse(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;a=0!=(_FindModuleSeparator(g)|0)?3:4;break;case 3:_IllegalModuleSpecifierMessage(d);b=0;a=42;break;case 4:i=_FindFunction(d,g);k=_LookupDefgenericInScope(d,g);a=0==(i|0)?5:7;break;case 5:a=0==(k|0)?6:7;break;case 6:l=_LookupDeffunctionInScope(d,g);a=8;break;case 7:l=0;a=8;break;case 8:a=0!=(l|0)?9:10;break;case 9:j=_GenConstant(d,32,l);a=17;break;case 10:a=0!=(k|0)?11:12;break;case 11:j=_GenConstant(d,
31,k);a=16;break;case 12:a=0!=(i|0)?13:14;break;case 13:j=_GenConstant(d,30,i);a=15;break;case 14:_PrintErrorID(d,STRING_TABLE.__str11213|0,3,1);_EnvPrintRouter(d,STRING_TABLE.__str21214|0,STRING_TABLE.__str41216|0);_EnvPrintRouter(d,STRING_TABLE.__str21214|0,g);_EnvPrintRouter(d,STRING_TABLE.__str21214|0,STRING_TABLE.__str51217|0);b=0;a=42;break;case 15:a=16;break;case 16:a=17;break;case 17:_PushRtnBrkContexts(d);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+180|0)>>2]+44|0)>>2]=0;a=30==(HEAPU16[(j|0)>>1]&65535|0)?18:25;break;case 18:a=0!=(HEAP32[(i+16|0)>>2]|0)?19:24;break;case 19:j=FUNCTION_TABLE[HEAP32[(i+16|0)>>2]](d,j,e);_PopRtnBrkContexts(d);a=0==(j|0)?20:21;break;case 20:b=0;a=42;break;case 21:a=d;var m=HEAP32[(j+8|0)>>2],n=j,o=_FindFunction(d,STRING_TABLE.__str61218|0),p=_FindFunction(d,STRING_TABLE.__str71219|0);a=0!=(_ReplaceSequenceExpansionOps(a,m,n,o,p)|0)?22:23;break;case 22:_ReturnExpression(d,j);b=0;a=42;break;case 23:b=j;a=
42;break;case 24:a=25;break;case 25:j=_CollectArguments(d,j,e);_PopRtnBrkContexts(d);a=0==(j|0)?26:27;break;case 26:b=0;a=42;break;case 27:a=d;m=HEAP32[(j+8|0)>>2];n=j;o=_FindFunction(d,STRING_TABLE.__str61218|0);p=_FindFunction(d,STRING_TABLE.__str71219|0);a=0!=(_ReplaceSequenceExpansionOps(a,m,n,o,p)|0)?28:29;break;case 28:_ReturnExpression(d,j);b=0;a=42;break;case 29:a=HEAP32[(j+4|0)>>2];m=_FindFunction(d,STRING_TABLE.__str61218|0);a=(a|0)==(m|0)?30:31;break;case 30:b=j;a=42;break;case 31:a=30==
(HEAPU16[(j|0)>>1]&65535|0)?32:36;break;case 32:a=0!=(_EnvGetStaticConstraintChecking(d)|0)?33:36;break;case 33:a=0!=(_CheckExpressionAgainstRestrictions(d,j,HEAP32[(i+20|0)>>2],g)|0)?34:35;break;case 34:_ReturnExpression(d,j);b=0;a=42;break;case 35:a=41;break;case 36:a=32==(HEAPU16[(j|0)>>1]&65535|0)?37:40;break;case 37:a=d;m=HEAP32[(j+4|0)>>2];n=_CountArguments(HEAP32[(j+8|0)>>2]);a=0==(_CheckDeffunctionCall(a,m,n)|0)?38:39;break;case 38:_ReturnExpression(d,j);b=0;a=42;break;case 39:a=40;break;
case 40:a=41;break;case 41:b=j;a=42;break;case 42:return b;default:assert(0,"bad label: "+a)}}_Function2Parse.X=1;
function _PopRtnBrkContexts(h){var f;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+44|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]+4|0)>>2];f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_PopRtnBrkContexts.X=1;
function _PushRtnBrkContexts(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;HEAP32[(h|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+40|0)>>2];HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+44|0)>>2];HEAP32[(h+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+36|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+36|0)>>2]=h;return;default:assert(0,"bad label: "+f)}}_PushRtnBrkContexts.X=1;
function _ReplaceSequenceExpansionOps(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;d=3;break;case 3:d=0!=(i|0)?4:31;break;case 4:d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+48|0)>>2]|0)?5:7;break;case 5:d=36==(HEAPU16[(i|0)>>1]&65535|0)?6:7;break;case 6:HEAP16[(i|0)>>1]=35;d=7;break;case 7:d=36==(HEAPU16[(i|0)>>1]&65535|0)?10:8;break;case 8:d=34==(HEAPU16[(i|0)>>1]&65535|0)?10:9;break;case 9:d=(HEAP32[(i+4|0)>>2]|0)==(l|0)?10:21;break;case 10:d=30!=(HEAPU16[(j|
0)>>1]&65535|0)?11:12;break;case 11:d=14;break;case 12:d=0==(HEAP16[(HEAP32[(j+4|0)>>2]+26|0)>>1]<<16>>16|0)?13:14;break;case 13:_PrintErrorID(g,STRING_TABLE.__str11213|0,4,0);_EnvPrintRouter(g,STRING_TABLE.__str21214|0,STRING_TABLE.__str81220|0);_EnvPrintRouter(g,STRING_TABLE.__str21214|0,HEAP32[(HEAP32[(HEAP32[(j+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str21214|0,STRING_TABLE.__str51217|0);e=1;d=32;break;case 14:d=(HEAP32[(j+4|0)>>2]|0)!=(k|0)?15:16;break;case 15:m=_GenConstant(g,
HEAP16[(j|0)>>1],HEAP32[(j+4|0)>>2]);HEAP32[(m+8|0)>>2]=HEAP32[(j+8|0)>>2];HEAP32[(m+12|0)>>2]=0;HEAP16[(j|0)>>1]=30;HEAP32[(j+4|0)>>2]=k;HEAP32[(j+8|0)>>2]=m;d=16;break;case 16:d=(HEAP32[(i+4|0)>>2]|0)!=(l|0)?17:20;break;case 17:m=_GenConstant(g,35,HEAP32[(i+4|0)>>2]);d=34==(HEAPU16[(i|0)>>1]&65535|0)?18:19;break;case 18:HEAP16[(m|0)>>1]=33;d=19;break;case 19:HEAP32[(i+8|0)>>2]=m;HEAP16[(i|0)>>1]=30;HEAP32[(i+4|0)>>2]=l;d=20;break;case 20:d=21;break;case 21:d=0!=(HEAP32[(i+8|0)>>2]|0)?22:30;break;
case 22:d=31==(HEAPU16[(i|0)>>1]&65535|0)?25:23;break;case 23:d=32==(HEAPU16[(i|0)>>1]&65535|0)?25:24;break;case 24:d=30==(HEAPU16[(i|0)>>1]&65535|0)?25:26;break;case 25:m=i;d=27;break;case 26:m=j;d=27;break;case 27:d=0!=(_ReplaceSequenceExpansionOps(g,HEAP32[(i+8|0)>>2],m,k,l)|0)?28:29;break;case 28:e=1;d=32;break;case 29:d=30;break;case 30:i=HEAP32[(i+12|0)>>2];d=3;break;case 31:e=0;d=32;break;case 32:return e;default:assert(0,"bad label: "+d)}}_ReplaceSequenceExpansionOps.X=1;
function _CollectArguments(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l;e=h;g=f;i=c;k=0;b=3;break;case 3:_SavePPBuffer(e,STRING_TABLE.__str91221|0);HEAP32[j>>2]=0;l=_ArgumentParse(e,i,j);b=1==(HEAP32[j>>2]|0)?4:5;break;case 4:_ReturnExpression(e,g);d=0;b=11;break;case 5:b=0==(l|0)?6:7;break;case 6:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str101222|0);d=
g;b=11;break;case 7:b=0==(k|0)?8:9;break;case 8:HEAP32[(g+8|0)>>2]=l;b=10;break;case 9:HEAP32[(k+12|0)>>2]=l;b=10;break;case 10:k=l;b=3;break;case 11:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_CollectArguments.X=1;
function _CheckExpressionAgainstRestrictions(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m,n,o,p,q,r,s,t,u;g=h;i=f;j=c;k=a;m=0;n=1;HEAP8[l|0]=48;HEAP8[l+1|0]=0;d=0==(j|0)?3:4;break;case 3:e=0;d=45;break;case 4:q=_CountArguments(HEAP32[(i+8|0)>>2]);d=m;m=d+1|0;HEAP8[l|0]=HEAP8[j+d|0];d=0!=(_isdigit(HEAP8[l|0]<<24>>24)|0)?5:6;break;case 5:o=_atoi(l|0);d=10;break;case 6:d=
42==(HEAP8[l|0]<<24>>24|0)?7:8;break;case 7:o=-1;d=9;break;case 8:e=0;d=45;break;case 9:d=10;break;case 10:d=m;m=d+1|0;HEAP8[l|0]=HEAP8[j+d|0];d=0!=(_isdigit(HEAP8[l|0]<<24>>24)|0)?11:12;break;case 11:p=_atoi(l|0);d=16;break;case 12:d=42==(HEAP8[l|0]<<24>>24|0)?13:14;break;case 13:p=1E4;d=15;break;case 14:e=0;d=45;break;case 15:d=16;break;case 16:d=(o|0)==(p|0)?17:20;break;case 17:d=(q|0)!=(o|0)?18:19;break;case 18:_ExpectedCountError(g,k,0,o);e=1;d=45;break;case 19:d=26;break;case 20:d=(q|0)<(o|
0)?21:22;break;case 21:_ExpectedCountError(g,k,1,o);e=1;d=45;break;case 22:d=(q|0)>(p|0)?23:24;break;case 23:_ExpectedCountError(g,k,2,p);e=1;d=45;break;case 24:d=25;break;case 25:d=26;break;case 26:r=HEAP8[j+m|0];d=0==(r<<24>>24|0)?27:28;break;case 27:r=117;d=32;break;case 28:d=42==(r<<24>>24|0)?29:30;break;case 29:r=117;m=m+1|0;d=31;break;case 30:m=m+1|0;d=31;break;case 31:d=32;break;case 32:t=HEAP32[(i+8|0)>>2];d=33;break;case 33:d=0!=(t|0)?34:44;break;case 34:s=HEAP8[j+m|0];d=0==(s<<24>>24|0)?
35:36;break;case 35:s=r;d=37;break;case 36:m=m+1|0;d=37;break;case 37:d=42!=(s<<24>>24|0)?38:39;break;case 38:u=s<<24>>24;d=40;break;case 39:u=r<<24>>24;d=40;break;case 40:d=0!=(_CheckArgumentAgainstRestriction(g,t,u)|0)?41:42;break;case 41:e=g;d=k;var v=n,w=_GetArgumentTypeName(u);_ExpectedTypeError1(e,d,v,w);e=1;d=45;break;case 42:n=n+1|0;d=43;break;case 43:t=HEAP32[(t+12|0)>>2];d=33;break;case 44:e=0;d=45;break;case 45:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}
_CheckExpressionAgainstRestrictions.X=1;function _EnvSetSequenceOperatorRecognition(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+48|0)>>2]=f;return c}function _EnvGetSequenceOperatorRecognition(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+48|0)>>2]}
function _ArgumentParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;_GetToken(e,g,k);b=171==(HEAPU16[(k|0)>>1]&65535|0)?3:4;break;case 3:d=0;b=19;break;case 4:b=35==(HEAPU16[(k|0)>>1]&65535|0)?13:5;break;case 5:b=36==(HEAPU16[(k|0)>>1]&65535|0)?13:6;break;case 6:b=2==(HEAPU16[(k|0)>>1]&65535|0)?13:7;break;case 7:b=3==(HEAPU16[(k|0)>>1]&65535|0)?13:8;break;
case 8:b=33==(HEAPU16[(k|0)>>1]&65535|0)?13:9;break;case 9:b=34==(HEAPU16[(k|0)>>1]&65535|0)?13:10;break;case 10:b=8==(HEAPU16[(k|0)>>1]&65535|0)?13:11;break;case 11:b=0==(HEAPU16[(k|0)>>1]&65535|0)?13:12;break;case 12:b=1==(HEAPU16[(k|0)>>1]&65535|0)?13:14;break;case 13:d=_GenConstant(e,HEAP16[(k|0)>>1],HEAP32[(k+4|0)>>2]);b=19;break;case 14:b=170!=(HEAPU16[(k|0)>>1]&65535|0)?15:16;break;case 15:_PrintErrorID(e,STRING_TABLE.__str11213|0,2,1);_EnvPrintRouter(e,STRING_TABLE.__str21214|0,STRING_TABLE.__str111223|
0);HEAP32[i>>2]=1;d=0;b=19;break;case 16:j=_Function1Parse(e,g);b=0==(j|0)?17:18;break;case 17:HEAP32[i>>2]=1;b=18;break;case 18:d=j;b=19;break;case 19:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ArgumentParse.X=1;
function _ParseAtomOrExpression(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l;e=h;g=f;i=c;b=0==(i|0)?3:4;break;case 3:k=j;_GetToken(e,g,k);b=5;break;case 4:k=i;b=5;break;case 5:b=2==(HEAPU16[(k|0)>>1]&65535|0)?14:6;break;case 6:b=3==(HEAPU16[(k|0)>>1]&65535|0)?14:7;break;case 7:b=1==(HEAPU16[(k|0)>>1]&65535|0)?14:8;break;case 8:b=0==(HEAPU16[(k|0)>>1]&65535|0)?14:9;break;
case 9:b=8==(HEAPU16[(k|0)>>1]&65535|0)?14:10;break;case 10:b=33==(HEAPU16[(k|0)>>1]&65535|0)?14:11;break;case 11:b=34==(HEAPU16[(k|0)>>1]&65535|0)?14:12;break;case 12:b=35==(HEAPU16[(k|0)>>1]&65535|0)?14:13;break;case 13:b=36==(HEAPU16[(k|0)>>1]&65535|0)?14:15;break;case 14:l=_GenConstant(e,HEAP16[(k|0)>>1],HEAP32[(k+4|0)>>2]);b=21;break;case 15:b=170==(HEAPU16[(k|0)>>1]&65535|0)?16:19;break;case 16:l=_Function1Parse(e,g);b=0==(l|0)?17:18;break;case 17:d=0;b=22;break;case 18:b=20;break;case 19:_PrintErrorID(e,
STRING_TABLE.__str11213|0,2,1);_EnvPrintRouter(e,STRING_TABLE.__str21214|0,STRING_TABLE.__str111223|0);d=0;b=22;break;case 20:b=21;break;case 21:d=l;b=22;break;case 22:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseAtomOrExpression.X=1;
function _GroupActions(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=0;o=i;e=_FindFunction(i,STRING_TABLE.__str121224|0);o=_GenConstant(o,30,e);e=3;break;case 3:e=0!=(l|0)?4:5;break;case 4:_GetToken(i,j,k);e=6;break;case 5:l=1;e=6;break;case 6:e=2==(HEAPU16[(k|0)>>1]&65535|0)?7:12;break;case 7:e=0!=(m|0)?8:12;break;case 8:e=0!=(n|0)?12:9;break;case 9:e=0==(_strcmp(HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2],m)|0)?10:11;break;case 10:g=o;e=37;break;case 11:e=
12;break;case 12:e=0!=(n|0)?13:14;break;case 13:p=_Function2Parse(i,j,HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2]);n=0;e=31;break;case 14:e=2==(HEAPU16[(k|0)>>1]&65535|0)?23:15;break;case 15:e=3==(HEAPU16[(k|0)>>1]&65535|0)?23:16;break;case 16:e=1==(HEAPU16[(k|0)>>1]&65535|0)?23:17;break;case 17:e=0==(HEAPU16[(k|0)>>1]&65535|0)?23:18;break;case 18:e=33==(HEAPU16[(k|0)>>1]&65535|0)?23:19;break;case 19:e=34==(HEAPU16[(k|0)>>1]&65535|0)?23:20;break;case 20:e=8==(HEAPU16[(k|0)>>1]&65535|0)?23:21;break;case 21:e=
35==(HEAPU16[(k|0)>>1]&65535|0)?23:22;break;case 22:e=36==(HEAPU16[(k|0)>>1]&65535|0)?23:24;break;case 23:p=_GenConstant(i,HEAP16[(k|0)>>1],HEAP32[(k+4|0)>>2]);e=30;break;case 24:e=170==(HEAPU16[(k|0)>>1]&65535|0)?25:26;break;case 25:p=_Function1Parse(i,j);e=29;break;case 26:e=i;var r=o,s=_FindFunction(i,STRING_TABLE.__str61218|0),t=_FindFunction(i,STRING_TABLE.__str71219|0);e=0!=(_ReplaceSequenceExpansionOps(e,r,0,s,t)|0)?27:28;break;case 27:_ReturnExpression(i,o);g=0;e=37;break;case 28:g=o;e=37;
break;case 29:e=30;break;case 30:e=31;break;case 31:e=0==(p|0)?32:33;break;case 32:HEAP16[(k|0)>>1]=173;_ReturnExpression(i,o);g=0;e=37;break;case 33:e=0==(q|0)?34:35;break;case 34:HEAP32[(o+8|0)>>2]=p;e=36;break;case 35:HEAP32[(q+12|0)>>2]=p;e=36;break;case 36:q=p;_PPCRAndIndent(i);e=3;break;case 37:return g;default:assert(0,"bad label: "+e)}}_GroupActions.X=1;
function _ParseConstantArguments(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n=a;e=h;g=f;i=c;k=j=0;m=STRING_TABLE.__str131225|0;HEAP32[i>>2]=0;b=0==(g|0)?3:4;break;case 3:d=0;b=19;break;case 4:b=0==(_OpenStringSource(e,m,g,0)|0)?5:6;break;case 5:_PrintErrorID(e,STRING_TABLE.__str11213|0,6,0);_EnvPrintRouter(e,STRING_TABLE.__str21214|0,STRING_TABLE.__str141226|0);HEAP32[i>>
2]=1;d=0;b=19;break;case 6:_GetToken(e,m,n);b=7;break;case 7:b=172!=(HEAPU16[(n|0)>>1]&65535|0)?8:18;break;case 8:b=2!=(HEAPU16[(n|0)>>1]&65535|0)?9:14;break;case 9:b=3!=(HEAPU16[(n|0)>>1]&65535|0)?10:14;break;case 10:b=0!=(HEAPU16[(n|0)>>1]&65535|0)?11:14;break;case 11:b=1!=(HEAPU16[(n|0)>>1]&65535|0)?12:14;break;case 12:b=8!=(HEAPU16[(n|0)>>1]&65535|0)?13:14;break;case 13:_PrintErrorID(e,STRING_TABLE.__str11213|0,7,0);_EnvPrintRouter(e,STRING_TABLE.__str21214|0,STRING_TABLE.__str151227|0);_ReturnExpression(e,
j);HEAP32[i>>2]=1;_CloseStringSource(e,m);d=0;b=19;break;case 14:l=_GenConstant(e,HEAP16[(n|0)>>1],HEAP32[(n+4|0)>>2]);b=0==(j|0)?15:16;break;case 15:j=l;b=17;break;case 16:HEAP32[(k+12|0)>>2]=l;b=17;break;case 17:k=l;_GetToken(e,m,n);b=7;break;case 18:_CloseStringSource(e,m);d=j;b=19;break;case 19:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseConstantArguments.X=1;
function _RemoveUnneededProgn(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=d;c=12;break;case 4:c=30!=(HEAPU16[(d|0)>>1]&65535|0)?5:6;break;case 5:a=d;c=12;break;case 6:c=HEAP32[(d+4|0)>>2];c=522!=(HEAP32[(c+12|0)>>2]|0)?7:8;break;case 7:a=d;c=12;break;case 8:c=0!=(HEAP32[(d+8|0)>>2]|0)?9:11;break;case 9:c=0==(HEAP32[(HEAP32[(d+8|0)>>2]+12|0)>>2]|0)?10:11;break;case 10:c=d;d=HEAP32[(d+8|0)>>2];HEAP32[(c+8|0)>>2]=0;HEAP32[(c+12|0)>>2]=0;_ReturnExpression(b,c);
c=11;break;case 11:a=d;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_RemoveUnneededProgn.X=1;function _InitializeExternalFunctionData(h){_AllocateEnvironmentData(h,50,8,524)}function _GetFunctionList(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+200|0)>>2]|0)>>2]}
function _DeallocateExternalFunctionData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(d|0)?4:5;break;case 4:f=HEAP32[(d+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];d=f;f=3;break;case 5:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:f=15;break;case 7:b=0;f=8;break;case 8:f=517>(b|0)?9:14;break;case 9:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]+4|0)>>2]+(b<<2)|0)>>2];f=10;break;case 10:f=0!=(a|0)?11:12;break;case 11:f=HEAP32[(a+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=10;break;case 12:f=13;break;case 13:b=b+1|0;f=8;break;case 14:_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]+4|0)>>2],2068);f=15;break;case 15:return;default:assert(0,"bad label: "+f)}}_DeallocateExternalFunctionData.X=1;
function _DefineFunction(h,f,c,a){var b=_GetCurrentEnvironment();return _DefineFunction3(b,h,f,c,a,0,0)}
function _DefineFunction3(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;j=h;k=f;l=c;m=a;n=b;o=d;p=e;g=97!=(l|0)?3:20;break;case 3:g=98!=(l|0)?4:20;break;case 4:g=99!=(l|0)?5:20;break;case 5:g=100!=(l|0)?6:20;break;case 6:g=102!=(l|0)?7:20;break;case 7:g=105!=(l|0)?8:20;break;case 8:g=106!=(l|0)?9:20;break;case 9:g=107!=(l|0)?10:20;break;case 10:g=108!=(l|0)?11:20;break;case 11:g=109!=(l|0)?12:20;break;case 12:g=110!=(l|0)?13:20;break;case 13:g=111!=(l|0)?14:20;break;case 14:g=
115!=(l|0)?15:20;break;case 15:g=117!=(l|0)?16:20;break;case 16:g=118!=(l|0)?17:20;break;case 17:g=120!=(l|0)?18:20;break;case 18:g=119!=(l|0)?19:20;break;case 19:i=0;g=35;break;case 20:q=_FindFunction(j,k);g=0==(q|0)?21:25;break;case 21:g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]|0)?22:23;break;case 22:var r=_genalloc(j,40);g=24;break;case 23:HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>
2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2];g=24;break;case 24:q=r;g=_EnvAddSymbol(j,k);HEAP32[(q|0)>>2]=g;g=HEAP32[(q|0)>>2]+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=_GetFunctionList(j);HEAP32[(q+32|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+200|0)>>2]|0)>>2]=q;_AddHashFunction(j,q);g=25;break;case 25:HEAP8[q+8|0]=l&255;HEAP32[(q+
12|0)>>2]=m;HEAP32[(q+4|0)>>2]=n;g=0!=(o|0)?26:34;break;case 26:g=2>(_strlen(o)|0)?27:28;break;case 27:g=32;break;case 28:g=0!=(_isdigit(HEAP8[o|0]<<24>>24)|0)?30:29;break;case 29:g=42!=(HEAP8[o|0]<<24>>24|0)?32:30;break;case 30:g=0!=(_isdigit(HEAP8[o+1|0]<<24>>24)|0)?33:31;break;case 31:g=42!=(HEAP8[o+1|0]<<24>>24|0)?32:33;break;case 32:o=0;g=33;break;case 33:g=34;break;case 34:HEAP32[(q+20|0)>>2]=o;HEAP32[(q+16|0)>>2]=0;HEAP16[(q+24|0)>>1]=1;HEAP16[(q+26|0)>>1]=1;HEAP16[(q+28|0)>>1]=p&65535;HEAP32[(q+
36|0)>>2]=0;i=1;g=35;break;case 35:return i;default:assert(0,"bad label: "+g)}}_DefineFunction3.X=1;function _EnvDefineFunction(h,f,c,a,b){return _DefineFunction3(h,f,c,a,b,0,1)}function _DefineFunction2(h,f,c,a,b){var d=_GetCurrentEnvironment();return _DefineFunction3(d,h,f,c,a,b,0)}function _EnvDefineFunction2(h,f,c,a,b,d){return _DefineFunction3(h,f,c,a,b,d,1)}
function _FindFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:a=0;c=11;break;case 4:c=_HashSymbol(d,517);g=_FindSymbolHN(b,d);e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]+4|0)>>2]+(c<<2)|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:10;break;case 6:c=(HEAP32[(HEAP32[(e|0)>>2]|0)>>2]|0)==(g|0)?7:8;break;case 7:a=HEAP32[(e|0)>>2];c=11;break;case 8:c=9;break;case 9:e=HEAP32[(e+4|0)>>2];c=5;break;
case 10:a=0;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}_FindFunction.X=1;
function _AddHashFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_InitializeFunctionHashTable(a);c=4;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:d=_genalloc(a,8);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:c=d;HEAP32[(c|0)>>2]=b;d=_HashSymbol(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2],517);b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]+(d<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]+(d<<2)|0)>>2]=c;HEAP32[(c+4|0)>>2]=b;return;default:assert(0,"bad label: "+c)}}
_AddHashFunction.X=1;
function _GetArgumentTypeName(h){var f;for(f=2;;)switch(f){case 2:var c;f=(h&255)<<24>>24;f=97==(f|0)?3:101==(f|0)?4:100==(f|0)||102==(f|0)?5:103==(f|0)?6:104==(f|0)?7:106==(f|0)?8:107==(f|0)?9:105==(f|0)||108==(f|0)?10:109==(f|0)?11:110==(f|0)?12:111==(f|0)?13:112==(f|0)?14:113==(f|0)?15:115==(f|0)?16:119==(f|0)?17:120==(f|0)?18:121==(f|0)?19:122==(f|0)?20:117==(f|0)?21:22;break;case 3:c=STRING_TABLE.__str41242|0;f=23;break;case 4:c=STRING_TABLE.__str51243|0;f=23;break;case 5:c=STRING_TABLE.__str61244|
0;f=23;break;case 6:c=STRING_TABLE.__str71245|0;f=23;break;case 7:c=STRING_TABLE.__str81246|0;f=23;break;case 8:c=STRING_TABLE.__str91247|0;f=23;break;case 9:c=STRING_TABLE.__str101248|0;f=23;break;case 10:c=STRING_TABLE.__str111249|0;f=23;break;case 11:c=STRING_TABLE.__str121250|0;f=23;break;case 12:c=STRING_TABLE.__str131251|0;f=23;break;case 13:c=STRING_TABLE.__str141252|0;f=23;break;case 14:c=STRING_TABLE.__str151253|0;f=23;break;case 15:c=STRING_TABLE.__str161254|0;f=23;break;case 16:c=STRING_TABLE.__str171255|
0;f=23;break;case 17:c=STRING_TABLE.__str181256|0;f=23;break;case 18:c=STRING_TABLE.__str191257|0;f=23;break;case 19:c=STRING_TABLE.__str201258|0;f=23;break;case 20:c=STRING_TABLE.__str211259|0;f=23;break;case 21:c=STRING_TABLE.__str221260|0;f=23;break;case 22:c=STRING_TABLE.__str231261|0;f=23;break;case 23:return c;default:assert(0,"bad label: "+f)}}
function _UndefineFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;c=f;g=0;d=_FindSymbolHN(b,c);e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:c=(HEAP32[(e|0)>>2]|0)==(d|0)?5:9;break;case 5:_DecrementSymbolCount(b,HEAP32[(e|0)>>2]);_RemoveHashFunction(b,e);c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]|0)>>2]=HEAP32[(e+32|0)>>2];c=8;break;case 7:HEAP32[(g+32|0)>>2]=HEAP32[(e+32|0)>>2];c=8;break;case 8:_ClearUserDataList(b,
HEAP32[(e+36|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=12;break;case 9:g=e;c=10;break;case 10:e=HEAP32[(e+32|0)>>2];c=3;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+
c)}}_UndefineFunction.X=1;
function _RemoveHashFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;g=0;i=_HashSymbol(HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2],517);e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]+4|0)>>2]+(i<<2)|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:c=(HEAP32[(e|0)>>2]|0)==(d|0)?5:9;break;case 5:c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+200|0)>>2]+4|0)>>2]+(i<<2)|0)>>2]=HEAP32[(e+4|0)>>2];c=8;break;case 7:HEAP32[(g+4|0)>>2]=HEAP32[(e+4|0)>>2];
c=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=12;break;case 9:g=e;c=10;break;case 10:e=HEAP32[(e+4|0)>>2];c=3;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+
c)}}_RemoveHashFunction.X=1;function _AddFunctionParser(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;a=f;e=c;g=_FindFunction(d,a);a=0==(g|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str1238|0,STRING_TABLE.__str11239|0);b=0;a=5;break;case 4:HEAP32[(g+20|0)>>2]=0;HEAP32[(g+16|0)>>2]=e;HEAP16[(g+24|0)>>1]=0;b=1;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _RemoveFunctionParser(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=_FindFunction(b,f);c=0==(d|0)?3:4;break;case 3:_EnvPrintRouter(b,STRING_TABLE.__str1238|0,STRING_TABLE.__str21240|0);a=0;c=5;break;case 4:HEAP32[(d+16|0)>>2]=0;a=1;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _FuncSeqOvlFlags(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;b=f;g=c;i=a;j=_FindFunction(e,b);b=0==(j|0)?3:4;break;case 3:_EnvPrintRouter(e,STRING_TABLE.__str1238|0,STRING_TABLE.__str31241|0);d=0;b=5;break;case 4:HEAP16[(j+26|0)>>1]=(0!=(g|0)?1:0)&65535;HEAP16[(j+24|0)>>1]=(0!=(i|0)?1:0)&65535;d=1;b=5;break;case 5:return d;default:assert(0,"bad label: "+b)}}
function _GetNthRestriction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=117;i=2;c=0==(b|0)?3:4;break;case 3:a=e;c=13;break;case 4:c=0==(HEAP32[(b+20|0)>>2]|0)?5:6;break;case 5:a=e;c=13;break;case 6:g=_strlen(HEAP32[(b+20|0)>>2]);c=3>g>>>0?7:8;break;case 7:a=e;c=13;break;case 8:e=HEAP8[HEAP32[(b+20|0)>>2]+i|0]<<24>>24;c=42==(e|0)?9:10;break;case 9:e=117;c=10;break;case 10:c=g>>>0<(d+3|0)>>>0?11:12;break;case 11:a=e;c=13;break;case 12:a=HEAP8[HEAP32[(b+20|0)>>2]+(d+2|0)|0]<<24>>
24;c=13;break;case 13:return a;default:assert(0,"bad label: "+c)}}_GetNthRestriction.X=1;
function _InstallFunctionList(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]|0)?3:11;break;case 3:d=0;c=4;break;case 4:c=517>(d|0)?5:10;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]+(d<<2)|0)>>2];c=6;break;case 6:c=0!=(e|0)?7:8;break;case 7:c=HEAP32[(e+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];e=c;c=6;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]+4|0)>>2]+(d<<2)|0)>>2]=0;c=9;break;case 9:d=d+1|0;c=4;break;case 10:c=11;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+200|0)>>2]|0)>>2]=b;c=12;break;case 12:c=0!=(b|0)?13:14;break;case 13:_AddHashFunction(a,b);b=HEAP32[(b+32|0)>>2];c=12;break;case 14:return;
default:assert(0,"bad label: "+c)}}_InstallFunctionList.X=1;
function _GetMinimumArgs(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;d=HEAP32[(h+20|0)>>2];c=0==(d|0)?3:4;break;case 3:a=-1;c=10;break;case 4:HEAP8[b|0]=HEAP8[d|0];HEAP8[b+1|0]=0;c=0!=(_isdigit(HEAP8[b|0]<<24>>24)|0)?5:6;break;case 5:a=_atoi(b|0);c=10;break;case 6:c=42==(HEAP8[b|0]<<24>>24|0)?7:8;break;case 7:a=-1;c=10;break;case 8:c=9;break;case 9:a=-1;c=10;break;case 10:return h=
a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _GetMaximumArgs(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;d=HEAP32[(h+20|0)>>2];c=0==(d|0)?3:4;break;case 3:a=-1;c=12;break;case 4:c=0==(HEAP8[d|0]<<24>>24|0)?5:6;break;case 5:a=-1;c=12;break;case 6:HEAP8[b|0]=HEAP8[d+1|0];HEAP8[b+1|0]=0;c=0!=(_isdigit(HEAP8[b|0]<<24>>24)|0)?7:8;break;case 7:a=_atoi(b|0);c=12;break;case 8:c=42==(HEAP8[b|0]<<24>>24|0)?9:10;break;case 9:a=
-1;c=12;break;case 10:c=11;break;case 11:a=-1;c=12;break;case 12:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GetMaximumArgs.X=1;
function _InitializeFunctionHashTable(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=_gm2(c,2068);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]+4|0)>>2]=f;a=0;f=3;break;case 3:f=517>(a|0)?4:6;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+200|0)>>2]+4|0)>>2]+(a<<2)|0)>>2]=0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _FactBinarySetup(h){_AllocateEnvironmentData(h,62,8,526);_AddBinaryItem(h,STRING_TABLE.__str1272|0,0,528,0,530,532,534,536,538)}
function _DeallocateFactBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]|0)?4:6;break;case 4:_DestroyAlphaBetaMemory(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]|0)>>2]+48*b|0)>>2]);f=5;break;case 5:b=b+1|0;f=3;break;case 6:a=48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?7:8;break;case 7:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]|0)>>2],a);f=8;break;
case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateFactBloadData.X=1;
function _BsaveFind1273(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]=0;b=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(b|0)?4:10;break;case 4:_EnvSetCurrentModule(c,b);a=_EnvGetNextDeftemplate(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:_BsaveDriver(c,0,0,HEAP32[(a+36|0)>>2]);f=7;break;case 7:a=_EnvGetNextDeftemplate(c,a);f=5;break;case 8:f=9;break;case 9:b=
_EnvGetNextDefmodule(c,b);f=3;break;case 10:return;default:assert(0,"bad label: "+f)}}_BsaveFind1273.X=1;function _BsaveStorage1274(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=4;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+248|0)>>2]+4|0,4,f);STACKTOP=c}
function _BsaveFactPatterns(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d;a=c;var e,g;b=h;d=f;HEAP32[a>>2]=36*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]+4|0)>>2]|0;_GenWrite(a,4,d);g=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(g|0)?4:10;break;case 4:_EnvSetCurrentModule(b,g);e=_EnvGetNextDeftemplate(b,0);a=5;break;case 5:a=0!=(e|0)?6:8;break;case 6:_BsaveDriver(b,1,d,HEAP32[(e+
36|0)>>2]);a=7;break;case 7:e=_EnvGetNextDeftemplate(b,e);a=5;break;case 8:a=9;break;case 9:g=_EnvGetNextDefmodule(b,g);a=3;break;case 10:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]+4|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveFactPatterns.X=1;
function _BloadStorage1275(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+248|0)>>2]+4|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+248|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+248|0)>>2]|0)>>2]=0;c=5;break;case 4:HEAP32[b>>2]=48*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+248|0)>>2]+4|0)>>
2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+248|0)>>2]|0)>>2]=c;c=5;break;case 5:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorage1275.X=1;function _BloadBinaryItem1276(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+248|0)>>2]+4|0)>>2],36,540);STACKTOP=f}
function _ClearBload1277(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]|0)>>2],a);f=4;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+248|0)>>2]+4|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}
function _UpdateFactPatterns(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=a;_UpdatePatternNodeHeader(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0,e|0);HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+16|0)>>2]=0;HEAP16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+20|0)>>1]=HEAP16[(e+10|0)>>1];HEAP16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+24|0)>>1]=HEAP16[(e+12|0)>>1];HEAP16[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+22|0)>>1]=HEAP16[(e+8|0)>>1];a=-1==(HEAP32[(e+16|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(e+16|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+28|0)>>2]=g;a=-1==(HEAP32[(e+32|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*HEAP32[(e+32|0)>>2]|0;a=8;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+44|0)>>2]=i;a=-1==(HEAP32[(e+20|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*HEAP32[(e+20|0)>>2]|0;a=11;break;case 11:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+32|0)>>2]=j;a=-1==(HEAP32[(e+24|0)>>2]|0)?12:13;break;case 12:var k=0;a=14;break;case 13:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*HEAP32[(e+24|0)>>2]|0;a=14;break;case 14:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+36|0)>>2]=k;a=-1==(HEAP32[(e+28|0)>>2]|0)?15:16;break;case 15:var l=0;a=17;break;case 16:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*HEAP32[(e+28|0)>>2]|0;a=17;break;case 17:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*d|0)+40|0)>>2]=l;return;default:assert(0,"bad label: "+a)}}_UpdateFactPatterns.X=1;
function _BsaveDriver(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=3;break;case 3:b=0!=(i|0)?4:17;break;case 4:b=e;b=0==(b|0)?5:1==(b|0)?6:7;break;case 5:b=HEAP32[(HEAP32[(d+16|0)>>2]+248|0)>>2]+4|0;var j=HEAP32[b>>2];HEAP32[b>>2]=j+1|0;HEAP32[(i+16|0)>>2]=j;b=8;break;case 6:_BsavePatternNode(d,i,g);b=8;break;case 7:b=8;break;case 8:b=0==(HEAP32[(i+32|0)>>2]|0)?9:15;break;case 9:b=10;break;case 10:b=0==(HEAP32[(i+44|0)>>2]|0)?11:14;break;case 11:i=HEAP32[(i+36|0)>>2];b=
0==(i|0)?12:13;break;case 12:b=17;break;case 13:b=10;break;case 14:i=HEAP32[(i+44|0)>>2];b=16;break;case 15:i=HEAP32[(i+32|0)>>2];b=16;break;case 16:b=3;break;case 17:return;default:assert(0,"bad label: "+b)}}_BsaveDriver.X=1;
function _BsavePatternNode(h,f,c){var a=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g=a;b=h;d=f;e=c;_AssignBsavePatternHeaderValues(g|0,d|0);HEAP16[(g+10|0)>>1]=HEAP16[(d+20|0)>>1];HEAP16[(g+12|0)>>1]=HEAP16[(d+24|0)>>1];HEAP16[(g+8|0)>>1]=HEAP16[(d+22|0)>>1];b=_HashedExpressionIndex(b,HEAP32[(d+28|0)>>2]);HEAP32[(g+16|0)>>2]=b;b=0==(HEAP32[(d+32|0)>>2]|0)?3:4;break;case 3:var i=-1;b=5;break;
case 4:i=HEAP32[(HEAP32[(d+32|0)>>2]+16|0)>>2];b=5;break;case 5:HEAP32[(g+20|0)>>2]=i;b=0==(HEAP32[(d+36|0)>>2]|0)?6:7;break;case 6:var j=-1;b=8;break;case 7:j=HEAP32[(HEAP32[(d+36|0)>>2]+16|0)>>2];b=8;break;case 8:HEAP32[(g+24|0)>>2]=j;b=0==(HEAP32[(d+40|0)>>2]|0)?9:10;break;case 9:var k=-1;b=11;break;case 10:k=HEAP32[(HEAP32[(d+40|0)>>2]+16|0)>>2];b=11;break;case 11:HEAP32[(g+28|0)>>2]=k;b=0==(HEAP32[(d+44|0)>>2]|0)?12:13;break;case 12:var l=-1;b=14;break;case 13:l=HEAP32[(HEAP32[(d+44|0)>>2]+16|
0)>>2];b=14;break;case 14:HEAP32[(g+32|0)>>2]=l;_GenWrite(g,36,e);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsavePatternNode.X=1;
function _InitializeFactPatterns(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;_InitializeFactReteFunctions(c);f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,96);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>
2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;HEAP32[(h|0)>>2]=STRING_TABLE.__str1278|0;HEAP32[(h+88|0)>>2]=0;HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+100|0;HEAP32[(h+12|0)>>2]=542;HEAP32[(h+16|0)>>2]=544;HEAP32[(h+20|0)>>2]=0;HEAP32[(h+24|0)>>2]=546;HEAP32[(h+28|0)>>2]=548;HEAP32[(h+32|0)>>2]=0;HEAP32[(h+36|0)>>2]=550;HEAP32[(h+40|0)>>2]=552;HEAP32[(h+44|0)>>2]=554;HEAP32[(h+48|0)>>2]=556;HEAP32[(h+52|0)>>2]=558;HEAP32[(h+
56|0)>>2]=560;HEAP32[(h+60|0)>>2]=562;HEAP32[(h+64|0)>>2]=0;HEAP32[(h+68|0)>>2]=0;HEAP32[(h+72|0)>>2]=564;HEAP32[(h+76|0)>>2]=566;HEAP32[(h+80|0)>>2]=568;HEAP32[(h+84|0)>>2]=570;_AddPatternParser(c,h);return;default:assert(0,"bad label: "+f)}}_InitializeFactPatterns.X=1;
function _PlaceFactPattern(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c,k,l,m=c+4,n;b=h;d=f;k=e=0;n=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+64|0)>>2]+68|0)>>2]+4|0)>>2]+16|0)>>2];a=_RemoveUnneededSlots(b,HEAP32[(d+64|0)>>2]);HEAP32[(d+64|0)>>2]=a;a=0==(HEAP32[(HEAP32[(d+64|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:_ReturnExpression(b,HEAP32[(HEAP32[(d+64|0)>>2]+52|0)>>2]);HEAP32[(HEAP32[(d+
64|0)>>2]+52|0)>>2]=0;a=5;break;case 4:e=HEAP32[(d+64|0)>>2];HEAP32[(d+64|0)>>2]=HEAP32[(HEAP32[(d+64|0)>>2]+64|0)>>2];HEAP32[(e+64|0)>>2]=0;_ReturnLHSParseNodes(b,e);e=0;a=5;break;case 5:g=_FindImportedConstruct(b,STRING_TABLE.__str11279|0,0,n,m,1,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+172|0)>>2]=g;g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2];i=0;d=HEAP32[(d+64|0)>>2];a=6;break;case 6:a=0!=(d|0)?7:21;break;case 7:a=0!=(HEAPU32[(d+8|0)>>2]>>>2&1|0)?8:9;break;
case 8:e=d;d=HEAP32[(d+68|0)>>2];a=9;break;case 9:a=0==(HEAP32[(d+64|0)>>2]|0)?10:12;break;case 10:a=0!=(e|0)?11:12;break;case 11:l=1;a=13;break;case 12:l=0;a=13;break;case 13:k=_FindPatternNode(g,d,j,l);a=0==(k|0)?14:15;break;case 14:k=_CreateNewPatternNode(b,d,HEAP32[j>>2],i,l);a=15;break;case 15:a=0==(HEAP32[(d+64|0)>>2]|0)?16:18;break;case 16:a=0!=(e|0)?17:18;break;case 17:d=e;e=0;a=18;break;case 18:d=HEAP32[(d+64|0)>>2];a=0==(d|0)?19:20;break;case 19:a=(k|0)+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|
4;a=20;break;case 20:i=k;g=HEAP32[(k+32|0)>>2];a=6;break;case 21:return b=k,STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_PlaceFactPattern.X=1;
function _DetachFactPattern(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;_ClearPatternMatches(a,b);c=0==(HEAP32[((b|0)+8|0)>>2]|0)?3:4;break;case 3:c=(b|0)+12|0;HEAP32[c>>2]&=-5;c=4;break;case 4:c=0!=(HEAP32[(b+32|0)>>2]|0)?5:6;break;case 5:c=26;break;case 6:d=b;c=7;break;case 7:c=0!=(d|0)?8:26;break;case 8:c=0==(HEAP32[(d+40|0)>>2]|0)?9:16;break;case 9:c=0==(HEAP32[(d+44|0)>>2]|0)?10:16;break;case 10:b=d;d=HEAP32[(b+36|0)>>2];c=0==(d|0)?11:12;break;case 11:_FindAndSetDeftemplatePatternNetwork(a,
b,0);c=15;break;case 12:HEAP32[(d+32|0)>>2]=0;c=0!=(HEAPU32[((d|0)+12|0)>>2]>>>2&1|0)?13:14;break;case 13:d=0;c=14;break;case 14:c=15;break;case 15:_RemoveHashedExpression(a,HEAP32[(b+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=25;break;case 16:c=0!=(HEAP32[(d+40|0)>>2]|0)?17:20;break;case 17:b=d;HEAP32[(HEAP32[(d+40|0)>>2]+44|0)>>2]=HEAP32[(d+44|0)>>2];c=0!=(HEAP32[(d+44|0)>>2]|0)?18:19;break;case 18:HEAP32[(HEAP32[(d+44|0)>>2]+40|0)>>2]=HEAP32[(d+40|0)>>2];c=19;break;case 19:_RemoveHashedExpression(a,HEAP32[(b+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|
0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0;c=24;break;case 20:b=d;d=HEAP32[(d+36|0)>>2];c=0==(d|0)?21:22;break;case 21:_FindAndSetDeftemplatePatternNetwork(a,b,HEAP32[(b+44|0)>>2]);c=23;break;case 22:HEAP32[(d+32|0)>>2]=HEAP32[(b+44|0)>>2];c=23;break;case 23:HEAP32[(HEAP32[(b+44|0)>>2]+40|0)>>2]=0;_RemoveHashedExpression(a,HEAP32[(b+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0;c=24;break;case 24:c=25;break;case 25:c=7;break;case 26:return;default:assert(0,"bad label: "+c)}}_DetachFactPattern.X=1;
function _DestroyFactPatternNetwork(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:7;break;case 6:c=HEAP32[(b+44|0)>>2];_DestroyFactPatternNetwork(a,HEAP32[(b+32|0)>>2]);_DestroyAlphaBetaMemory(a,HEAP32[(b|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];
HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}_DestroyFactPatternNetwork.X=1;
function _ClearPatternMatches(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=_EnvGetNextFact(a,0);c=3;break;case 3:c=0!=(d|0)?4:15;break;case 4:e=0;g=HEAP32[(d+20|0)>>2];c=5;break;case 5:c=0!=(g|0)?6:13;break;case 6:c=(HEAP32[(g+8|0)>>2]|0)==(b|0)?7:11;break;case 7:c=0==(e|0)?8:9;break;case 8:HEAP32[(d+20|0)>>2]=HEAP32[(g|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];g=HEAP32[(d+20|0)>>2];c=10;break;case 9:HEAP32[(e|0)>>2]=HEAP32[(g|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];g=HEAP32[(e|0)>>2];c=10;break;case 10:c=12;break;case 11:e=g;g=HEAP32[(g|0)>>2];c=12;break;case 12:c=5;break;case 13:c=14;break;case 14:d=_EnvGetNextFact(a,d);c=3;break;case 15:return;default:assert(0,"bad label: "+c)}}_ClearPatternMatches.X=1;
function _FindAndSetDeftemplatePatternNetwork(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;_SaveCurrentModule(b);i=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(i|0)?4:12;break;case 4:_EnvSetCurrentModule(b,i);g=_EnvGetNextDeftemplate(b,0);a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=(HEAP32[(g+36|0)>>2]|0)==(d|0)?7:8;break;case 7:_RestoreCurrentModule(b);HEAP32[(g+36|0)>>2]=e;a=13;break;case 8:a=9;break;case 9:g=_EnvGetNextDeftemplate(b,g);a=5;break;case 10:a=11;break;
case 11:i=_EnvGetNextDefmodule(b,i);a=3;break;case 12:_RestoreCurrentModule(b);a=13;break;case 13:return;default:assert(0,"bad label: "+a)}}_FindAndSetDeftemplatePatternNetwork.X=1;
function _RemoveUnneededSlots(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;d=b=f;e=0;c=3;break;case 3:c=0!=(d|0)?4:56;break;case 4:c=37==(HEAPU16[(d|0)>>1]&65535|0)?6:5;break;case 5:c=35==(HEAPU16[(d|0)>>1]&65535|0)?6:14;break;case 6:c=0==(HEAP32[(d+52|0)>>2]|0)?7:14;break;case 7:c=0!=(e|0)?8:9;break;case 8:HEAP32[(e+64|0)>>2]=HEAP32[(d+64|0)>>2];c=10;break;case 9:b=HEAP32[(d+64|0)>>2];c=10;break;case 10:HEAP32[(d+64|0)>>2]=0;_ReturnLHSParseNodes(a,d);c=0!=(e|0)?11:12;break;case 11:d=HEAP32[(e+
64|0)>>2];c=13;break;case 12:d=b;c=13;break;case 13:c=55;break;case 14:c=38==(HEAPU16[(d|0)>>1]&65535|0)?16:15;break;case 15:c=36==(HEAPU16[(d|0)>>1]&65535|0)?16:27;break;case 16:c=0==(HEAPU32[(d+8|0)>>2]>>>2&1|0)?17:27;break;case 17:c=0==(HEAP32[(d+52|0)>>2]|0)?18:27;break;case 18:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?19:27;break;case 19:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?20:27;break;case 20:c=0!=(e|0)?21:22;break;case 21:HEAP32[(e+64|0)>>2]=HEAP32[(d+64|0)>>2];c=23;break;case 22:b=HEAP32[(d+64|0)>>
2];c=23;break;case 23:HEAP32[(d+64|0)>>2]=0;_ReturnLHSParseNodes(a,d);c=0!=(e|0)?24:25;break;case 24:d=HEAP32[(e+64|0)>>2];c=26;break;case 25:d=b;c=26;break;case 26:c=54;break;case 27:c=38==(HEAPU16[(d|0)>>1]&65535|0)?29:28;break;case 28:c=36==(HEAPU16[(d|0)>>1]&65535|0)?29:34;break;case 29:c=0==(HEAPU32[(d+8|0)>>2]>>>2&1|0)?30:34;break;case 30:c=0!=(HEAP32[(d+52|0)>>2]|0)?31:34;break;case 31:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?32:34;break;case 32:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?33:34;break;case 33:HEAP16[(d|
0)>>1]=37;e=d;d=HEAP32[(d+64|0)>>2];c=53;break;case 34:c=38==(HEAPU16[(d|0)>>1]&65535|0)?35:38;break;case 35:c=1==(HEAPU32[(d+8|0)>>2]>>>2&1|0)?36:38;break;case 36:c=0==(HEAP32[(d+68|0)>>2]|0)?37:38;break;case 37:HEAP16[(d|0)>>1]=37;e=_FactGenCheckZeroLength(a,HEAP16[(d+40|0)>>1]<<16>>16);HEAP32[(d+52|0)>>2]=e;e=d+8|0;HEAP32[e>>2]&=-5;e=d;d=HEAP32[(d+64|0)>>2];c=52;break;case 38:c=38==(HEAPU16[(d|0)>>1]&65535|0)?39:50;break;case 39:c=1==(HEAPU32[(d+8|0)>>2]>>>2&1|0)?40:50;break;case 40:c=_FactGenCheckLength(a,
HEAP32[(d+68|0)>>2]);c=_CombineExpressions(a,c,HEAP32[(HEAP32[(d+68|0)>>2]+52|0)>>2]);HEAP32[(HEAP32[(d+68|0)>>2]+52|0)>>2]=c;c=_RemoveUnneededSlots(a,HEAP32[(d+68|0)>>2]);HEAP32[(d+68|0)>>2]=c;c=0==(HEAP32[(d+68|0)>>2]|0)?41:48;break;case 41:c=0!=(e|0)?42:43;break;case 42:HEAP32[(e+64|0)>>2]=HEAP32[(d+64|0)>>2];c=44;break;case 43:b=HEAP32[(d+64|0)>>2];c=44;break;case 44:HEAP32[(d+64|0)>>2]=0;_ReturnLHSParseNodes(a,d);c=0!=(e|0)?45:46;break;case 45:d=HEAP32[(e+64|0)>>2];c=47;break;case 46:d=b;c=47;
break;case 47:c=49;break;case 48:e=d;d=HEAP32[(d+64|0)>>2];c=49;break;case 49:c=51;break;case 50:e=d;d=HEAP32[(d+64|0)>>2];c=51;break;case 51:c=52;break;case 52:c=53;break;case 53:c=54;break;case 54:c=55;break;case 55:c=3;break;case 56:return b;default:assert(0,"bad label: "+c)}}_RemoveUnneededSlots.X=1;
function _FindPatternNode(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;HEAP32[i>>2]=0;b=3;break;case 3:b=0!=(e|0)?4:25;break;case 4:b=37==(HEAPU16[(g|0)>>1]&65535|0)?6:5;break;case 5:b=35==(HEAPU16[(g|0)>>1]&65535|0)?6:13;break;case 6:b=0!=(HEAP32[((e|0)+12|0)>>2]&1|0)?7:12;break;case 7:b=(HEAPU32[((e|0)+12|0)>>2]>>>6&1|0)==(j|0)?8:12;break;case 8:b=(HEAPU16[(e+20|0)>>1]&65535|0)==(HEAP16[(g+34|0)>>1]<<16>>16|0)?9:12;break;case 9:b=(HEAPU16[(e+22|0)>>1]&65535|0)==((HEAP16[(g+
40|0)>>1]<<16>>16)-1|0)?10:12;break;case 10:b=0!=(_IdenticalExpression(HEAP32[(e+28|0)>>2],HEAP32[(g+52|0)>>2])|0)?11:12;break;case 11:d=e;b=26;break;case 12:b=24;break;case 13:b=38==(HEAPU16[(g|0)>>1]&65535|0)?15:14;break;case 14:b=36==(HEAPU16[(g|0)>>1]&65535|0)?15:23;break;case 15:b=0!=(HEAPU32[((e|0)+12|0)>>2]>>>1&1|0)?16:22;break;case 16:b=(HEAPU32[((e|0)+12|0)>>2]>>>6&1|0)==(j|0)?17:22;break;case 17:b=(HEAPU16[(e+24|0)>>1]&65535|0)==(HEAPU16[(g+16|0)>>1]&65535|0)?18:22;break;case 18:b=(HEAPU16[(e+
20|0)>>1]&65535|0)==(HEAP16[(g+34|0)>>1]<<16>>16|0)?19:22;break;case 19:b=(HEAPU16[(e+22|0)>>1]&65535|0)==((HEAP16[(g+40|0)>>1]<<16>>16)-1|0)?20:22;break;case 20:b=0!=(_IdenticalExpression(HEAP32[(e+28|0)>>2],HEAP32[(g+52|0)>>2])|0)?21:22;break;case 21:d=e;b=26;break;case 22:b=23;break;case 23:b=24;break;case 24:HEAP32[i>>2]=e;e=HEAP32[(e+44|0)>>2];b=3;break;case 25:d=0;b=26;break;case 26:return d;default:assert(0,"bad label: "+b)}}_FindPatternNode.X=1;
function _CreateNewPatternNode(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]|0)?3:4;break;case 3:var n=_genalloc(g,48);d=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>
2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=5;break;case 5:m=n;HEAP32[(m+32|0)>>2]=0;HEAP32[(m+44|0)>>2]=0;HEAP32[(m+40|0)>>2]=0;HEAP16[(m+24|0)>>1]=HEAP16[(i+16|0)>>1];_InitializePatternHeader(g,m|0);d=0<(HEAP16[(i+34|0)>>1]<<16>>16|0)?6:7;break;case 6:HEAP16[(m+20|0)>>1]=HEAP16[(i+34|0)>>1];d=8;break;case 7:HEAP16[(m+20|0)>>1]=0;d=8;break;case 8:d=0<=(HEAP16[(i+40|0)>>1]<<16>>16|0)?9:10;break;case 9:HEAP16[(m+22|0)>>1]=((HEAP16[(i+40|0)>>1]<<16>>16)-
1|0)&65535;d=11;break;case 10:HEAP16[(m+22|0)>>1]=HEAP16[(m+20|0)>>1];d=11;break;case 11:d=37==(HEAPU16[(i|0)>>1]&65535|0)?13:12;break;case 12:d=35==(HEAPU16[(i|0)>>1]&65535|0)?13:14;break;case 13:d=(m|0)+12|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=18;break;case 14:d=38==(HEAPU16[(i|0)>>1]&65535|0)?16:15;break;case 15:d=36==(HEAPU16[(i|0)>>1]&65535|0)?16:17;break;case 16:d=(m|0)+12|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=17;break;case 17:d=18;break;case 18:d=(m|0)+12|0;HEAP32[d>>2]=HEAP32[d>>2]&-65|(l&1)<<6;
d=_AddHashedExpression(g,HEAP32[(i+52|0)>>2]);HEAP32[(m+28|0)>>2]=d;HEAP32[(m+36|0)>>2]=k;d=0==(j|0)?19:23;break;case 19:d=0==(k|0)?20:21;break;case 20:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2]=m;d=22;break;case 21:HEAP32[(k+32|0)>>2]=m;d=22;break;case 22:e=m;d=30;break;case 23:d=0!=(k|0)?24:27;break;case 24:HEAP32[(m+44|0)>>2]=HEAP32[(k+32|0)>>2];d=0!=(HEAP32[(k+32|0)>>2]|0)?25:26;break;case 25:HEAP32[(HEAP32[(k+32|0)>>2]+40|0)>>2]=m;d=26;break;case 26:e=HEAP32[(k+
32|0)>>2]=m;d=30;break;case 27:HEAP32[(m+44|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2];d=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2]|0)?28:29;break;case 28:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2]+40|0)>>2]=m;d=29;break;case 29:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+172|0)>>2]+36|0)>>2]=m;d=30;break;case 30:return e;default:assert(0,"bad label: "+d)}}
_CreateNewPatternNode.X=1;function _FactPatternsCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str1280|0,0,572,0,574,1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+176|0)>>2]=f}
function _BeforePatternNetworkToCode(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g;c=h;b=a=0;d=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(d|0)?4:14;break;case 4:_EnvSetCurrentModule(c,d);e=_EnvGetNextDeftemplate(c,0);f=5;break;case 5:f=0!=(e|0)?6:12;break;case 6:g=b;b=g+1|0;HEAP32[((e|0)+12|0)>>2]=g;g=HEAP32[(e+36|0)>>2];f=7;break;case 7:f=0!=(g|0)?8:10;break;case 8:f=a;a=f+1|0;HEAP32[(g+16|0)>>2]=f;f=9;break;case 9:g=_GetNextPatternNode(g);f=7;break;case 10:f=11;break;case 11:e=_EnvGetNextDeftemplate(c,
e);f=5;break;case 12:f=13;break;case 13:d=_EnvGetNextDefmodule(c,d);f=3;break;case 14:return;default:assert(0,"bad label: "+f)}}_BeforePatternNetworkToCode.X=1;
function _PatternNetworkToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;HEAP32[t>>2]=0;HEAP32[u>>2]=1;v=0;_fprintf(m,STRING_TABLE.__str31283|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,
0);g=3;break;case 3:g=0!=(q|0)?4:16;break;case 4:_EnvSetCurrentModule(j,q);r=_EnvGetNextDeftemplate(j,0);g=5;break;case 5:g=0!=(r|0)?6:14;break;case 6:s=HEAP32[(r+36|0)>>2];g=7;break;case 7:g=0!=(s|0)?8:12;break;case 8:v=_OpenFileIfNeeded(j,v,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str41284|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+12|0)>>2]+176|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(v|0)?9:10;break;case 9:_CloseNetworkFiles(j,v,o);i=0;g=17;break;case 10:_PatternNodeToCode(j,v,s,n,o);HEAP32[t>>
2]=HEAP32[t>>2]+1|0;v=_CloseFileIfNeeded(j,v,t,u,o,0,0);g=11;break;case 11:s=_GetNextPatternNode(s);g=7;break;case 12:g=13;break;case 13:r=_EnvGetNextDeftemplate(j,r);g=5;break;case 14:g=15;break;case 15:q=_EnvGetNextDefmodule(j,q);g=3;break;case 16:_CloseNetworkFiles(j,v,o);i=1;g=17;break;case 17:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_PatternNetworkToCode.X=1;
function _FactPatternNodeReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(i|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str11281|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>
2]+176|0)>>2]+20|0)>>2]|0)>>2];var m=k,n=((HEAP32[(i+16|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[(i+16|0)>>2]|0)%(l|0);_fprintf(j,STRING_TABLE.__str21282|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _CloseNetworkFiles(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a,j=a+4;d=h;e=f;g=c;HEAP32[i>>2]=g;HEAP32[j>>2]=0;b=0!=(e|0)?3:4;break;case 3:_CloseFileIfNeeded(d,e,i,j,g,0,0);b=4;break;case 4:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}
function _PatternNodeToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;_fprintf(i,STRING_TABLE.__str51285|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PatternNodeHeaderToCode(g,i,j|0,k,l);e=HEAPU16[(j+20|0)>>1]&65535;var m=HEAPU16[(j+22|0)>>1]&65535,n=HEAPU16[(j+
24|0)>>1]&65535;_fprintf(i,STRING_TABLE.__str61286|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,tempInt));_PrintHashedExpressionReference(g,i,HEAP32[(j+28|0)>>2],k,l);e=0==(HEAP32[(j+32|0)>>2]|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str71287|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+176|0)>>2]+20|0)>>2]|0)>>2];var m=k,n=((HEAP32[(HEAP32[(j+32|0)>>2]+16|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[(HEAP32[(j+32|0)>>2]+16|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str81288|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:e=0==(HEAP32[(j+36|0)>>2]|0)?6:7;
break;case 6:_fprintf(i,STRING_TABLE.__str91289|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=8;break;case 7:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+176|0)>>2]+20|0)>>2]|0)>>2];m=k;n=((HEAP32[(HEAP32[(j+36|0)>>2]+16|0)>>2]|0)/(l|0)&-1)+1|0;o=(HEAP32[(HEAP32[(j+36|0)>>2]+16|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str101290|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=8;break;case 8:e=0==(HEAP32[(j+40|0)>>2]|0)?9:10;break;case 9:_fprintf(i,STRING_TABLE.__str91289|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=11;break;case 10:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+176|0)>>2]+20|0)>>2]|0)>>2];m=k;
n=((HEAP32[(HEAP32[(j+40|0)>>2]+16|0)>>2]|0)/(l|0)&-1)+1|0;o=(HEAP32[(HEAP32[(j+40|0)>>2]+16|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str101290|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=11;break;case 11:e=0==(HEAP32[(j+44|0)>>2]|0)?12:13;break;case 12:_fprintf(i,STRING_TABLE.__str111291|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=14;break;case 13:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+176|0)>>2]+20|0)>>2]|0)>>2];m=k;n=((HEAP32[(HEAP32[(j+44|0)>>2]+16|0)>>2]|0)/(l|0)&-1)+1|0;o=(HEAP32[(HEAP32[(j+44|0)>>2]+16|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str121292|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+
12>>2]=o,tempInt));e=14;break;case 14:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_PatternNodeToCode.X=1;
function _GetNextPatternNode(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(HEAP32[(a+32|0)>>2]|0)?3:4;break;case 3:c=HEAP32[(a+32|0)>>2];f=10;break;case 4:f=5;break;case 5:f=0==(HEAP32[(a+44|0)>>2]|0)?6:9;break;case 6:a=HEAP32[(a+36|0)>>2];f=0==(a|0)?7:8;break;case 7:c=0;f=10;break;case 8:f=5;break;case 9:c=HEAP32[(a+44|0)>>2];f=10;break;case 10:return c;default:assert(0,"bad label: "+f)}}
function _FactCommandDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str1295|0,118,576,STRING_TABLE.__str11296|0,STRING_TABLE.__str21297|0);_EnvDefineFunction(h,STRING_TABLE.__str31298|0,117,578,STRING_TABLE.__str41299|0);_EnvDefineFunction2(h,STRING_TABLE.__str51300|0,118,580,STRING_TABLE.__str61301|0,STRING_TABLE.__str71302|0);_EnvDefineFunction2(h,STRING_TABLE.__str81303|0,117,582,STRING_TABLE.__str91304|0,STRING_TABLE.__str101305|0);_EnvDefineFunction2(h,STRING_TABLE.__str111306|0,117,582,
STRING_TABLE.__str91304|0,STRING_TABLE.__str101305|0);_EnvDefineFunction2(h,STRING_TABLE.__str121307|0,98,584,STRING_TABLE.__str131308|0,STRING_TABLE.__str141309|0);_EnvDefineFunction2(h,STRING_TABLE.__str151310|0,98,586,STRING_TABLE.__str161311|0,STRING_TABLE.__str171312|0);_EnvDefineFunction2(h,STRING_TABLE.__str181313|0,98,588,STRING_TABLE.__str191314|0,STRING_TABLE.__str201315|0);_EnvDefineFunction2(h,STRING_TABLE.__str211316|0,98,590,STRING_TABLE.__str221317|0,STRING_TABLE.__str231318|0);_EnvDefineFunction2(h,
STRING_TABLE.__str241319|0,108,592,STRING_TABLE.__str251320|0,STRING_TABLE.__str261321|0);_AddFunctionParser(h,STRING_TABLE.__str31298|0,594);_FuncSeqOvlFlags(h,STRING_TABLE.__str31298|0,0,0)}
function _FactsCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f,k;a=h;g=e=d=-1;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str1295|0,2,4);c=-1==(c|0)?3:4;break;case 3:c=24;break;case 4:i=_EnvGetCurrentModule(a);c=0==(b|0)?5:6;break;case 5:_EnvFacts(a,STRING_TABLE.__str321327|0,i,d,e,g);c=24;break;case 6:_EnvRtnUnknown(a,1,j);c=2==(HEAPU16[(j+4|0)>>1]&65535|0)?7:13;break;case 7:i=
_EnvFindDefmodule(a,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);c=0==(i|0)?8:10;break;case 8:c=0!=(_strcmp(HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2],STRING_TABLE.__str301325|0)|0)?9:10;break;case 9:_SetEvaluationError(a,1);_CantFindItemErrorMessage(a,STRING_TABLE.__str331328|0,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);c=24;break;case 10:d=c=_GetFactsArgument(a,2,b);c=-2==(c|0)?11:12;break;case 11:c=24;break;case 12:k=1;c=19;break;case 13:c=1==(HEAPU16[(j+4|0)>>1]&65535|0)?14:17;break;case 14:d=HEAP32[(HEAP32[(j+
8|0)>>2]+16|0)>>2];c=0>(d|0)?15:16;break;case 15:_ExpectedTypeError1(a,STRING_TABLE.__str1295|0,1,STRING_TABLE.__str341329|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=24;break;case 16:k=0;c=18;break;case 17:_ExpectedTypeError1(a,STRING_TABLE.__str1295|0,1,STRING_TABLE.__str341329|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=24;break;case 18:c=19;break;case 19:e=c=_GetFactsArgument(a,k+2|0,b);c=-2==(c|0)?20:21;break;case 20:c=24;break;case 21:g=c=_GetFactsArgument(a,k+3|0,b);c=-2==
(c|0)?22:23;break;case 22:c=24;break;case 23:_EnvFacts(a,STRING_TABLE.__str321327|0,i,d,e,g);c=24;break;case 24:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_FactsCommand.X=1;
function _AssertCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k,l,m,n,o;b=h;d=f;m=0;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];e=HEAP32[(j+4|0)>>2];a=0==(HEAP32[(e+28|0)>>2]&1|0)?3:4;break;case 3:l=_CreateFactBySize(b,HEAPU16[(e+30|0)>>1]&65535);
k=HEAP32[(e+24|0)>>2];a=7;break;case 4:l=_CreateFactBySize(b,1);a=0==(HEAP32[(j+12|0)>>2]|0)?5:6;break;case 5:HEAP16[((l+48|0)+16|0)>>1]=4;a=_CreateMultifield2(b,0);HEAP32[(((l+48|0)+16|0)+4|0)>>2]=a;a=6;break;case 6:k=0;a=7;break;case 7:HEAP32[(l+16|0)>>2]=e;g=(l+48|0)+16|0;j=HEAP32[(j+12|0)>>2];n=0;a=8;break;case 8:a=0!=(j|0)?9:18;break;case 9:_EvaluateExpression(b,j,i);a=0!=(k|0)?10:12;break;case 10:a=0==(HEAP32[(k+4|0)>>2]&1|0)?11:14;break;case 11:a=4==(HEAPU16[(i+4|0)>>1]&65535|0)?13:14;break;
case 12:a=14;break;case 13:_MultiIntoSingleFieldSlotError(b,k,e);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];m=1;a=14;break;case 14:HEAP16[(g+(n<<3)|0)>>1]=HEAP16[(i+4|0)>>1];HEAP32[((g+(n<<3)|0)+4|0)>>2]=HEAP32[(i+8|0)>>2];a=0!=(k|0)?15:16;break;case 15:k=HEAP32[(k+16|0)>>2];a=16;break;case 16:a=17;break;case 17:j=HEAP32[(j+12|0)>>2];n=n+1|0;a=8;break;case 18:a=0!=(m|0)?19:20;break;case 19:_ReturnFact(b,l);a=23;break;case 20:o=_EnvAssert(b,l);a=
0!=(o|0)?21:22;break;case 21:HEAP16[(d+4|0)>>1]=6;HEAP32[(d+8|0)>>2]=o;a=22;break;case 22:a=23;break;case 23:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_AssertCommand.X=1;
function _RetractCommand(h){var f=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i,j=f+24;a=h;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];i=1;c=3;break;case 3:c=0!=(e|0)?4:22;break;case 4:_EvaluateExpression(a,e,g);c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?5:11;break;case 5:b=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];c=0>(b|0)?6:7;break;case 6:_ExpectedTypeError1(a,STRING_TABLE.__str51300|
0,i,STRING_TABLE.__str271322|0);c=22;break;case 7:d=_FindIndexedFact(a,b);c=0!=(d|0)?8:9;break;case 8:_EnvRetract(a,d);c=10;break;case 9:c=b;_sprintf(j|0,STRING_TABLE.__str281323|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));_CantFindItemErrorMessage(a,STRING_TABLE.__str291324|0,j|0);c=10;break;case 10:c=20;break;case 11:c=6==(HEAPU16[(g+4|0)>>1]&65535|0)?12:13;break;case 12:_EnvRetract(a,HEAP32[(g+8|0)>>2]);c=19;break;case 13:c=
2==(HEAPU16[(g+4|0)>>1]&65535|0)?14:15;break;case 14:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str301325|0)|0)?16:17;break;case 15:c=17;break;case 16:_RemoveAllFacts(a);c=22;break;case 17:_ExpectedTypeError1(a,STRING_TABLE.__str51300|0,i,STRING_TABLE.__str271322|0);_SetEvaluationError(a,1);c=18;break;case 18:c=19;break;case 19:c=20;break;case 20:c=21;break;case 21:e=HEAP32[(e+12|0)>>2];i=i+1|0;c=3;break;case 22:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
_RetractCommand.X=1;
function _AssertStringFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str81303|0,0,1)|0)?3:4;break;case 3:a=9;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str81303|0,1,3,e)|0)?5:6;break;case 5:a=9;break;case 6:g=_EnvAssertString(b,
HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=0!=(g|0)?7:8;break;case 7:HEAP16[(d+4|0)>>1]=6;HEAP32[(d+8|0)>>2]=g;a=8;break;case 8:a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_AssertStringFunction.X=1;function _GetFactDuplicationCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=_EnvGetFactDuplication(f);f=-1==(_EnvArgCountCheck(f,STRING_TABLE.__str121307|0,0,0)|0)?3:4;break;case 3:c=a;f=5;break;case 4:c=a;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SetFactDuplicationCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_EnvGetFactDuplication(b);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str151310|0,0,1)|0)?3:4;break;case 3:a=d;c=9;break;case 4:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:7;break;case 5:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?6:7;break;
case 6:_EnvSetFactDuplication(b,0);c=8;break;case 7:_EnvSetFactDuplication(b,1);c=8;break;case 8:a=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _SaveFactsCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f,k;b=h;g=1;k=0;e=c=_EnvArgCountCheck(b,STRING_TABLE.__str181313|0,1,1);c=-1==(c|0)?3:4;break;case 3:a=0;c=21;break;case 4:d=c=_GetFileName(b,STRING_TABLE.__str181313|0,1);c=0==(c|0)?5:6;break;case 5:a=0;c=21;break;case 6:c=1<(e|0)?7:16;break;case 7:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str181313|0,2,
2,j)|0)?8:9;break;case 8:a=0;c=21;break;case 9:i=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];c=0==(_strcmp(i,STRING_TABLE.__str361331|0)|0)?10:11;break;case 10:g=1;c=15;break;case 11:c=0==(_strcmp(i,STRING_TABLE.__str371332|0)|0)?12:13;break;case 12:g=2;c=14;break;case 13:_ExpectedTypeError1(b,STRING_TABLE.__str181313|0,2,STRING_TABLE.__str381333|0);a=0;c=21;break;case 14:c=15;break;case 15:c=16;break;case 16:c=2<(e|0)?17:18;break;case 17:k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|
0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2];c=18;break;case 18:c=0==(_EnvSaveFacts(b,d,g,k)|0)?19:20;break;case 19:a=0;c=21;break;case 20:a=1;c=21;break;case 21:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SaveFactsCommand.X=1;
function _LoadFactsCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str211316|0,0,1)|0)?3:4;break;case 3:c=0;f=9;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str211316|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=9;break;case 6:f=0==(_EnvLoadFacts(a,b)|0)?7:8;break;case 7:c=0;f=9;break;case 8:c=1;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _FactIndexFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str241319|0,0,1)|0)?3:4;break;case 3:a=-1;c=9;break;case 4:_EnvRtnUnknown(b,1,d);c=6!=(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:_ExpectedTypeError1(b,STRING_TABLE.__str241319|0,1,STRING_TABLE.__str311326|0);a=-1;c=9;break;case 6:c=0!=(HEAPU32[(HEAP32[(d+8|0)>>
2]+28|0)>>2]>>>15&1|0)?7:8;break;case 7:a=-1;c=9;break;case 8:a=_EnvFactIndex(b,HEAP32[(d+8|0)>>2]);c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _AssertParse(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=a+4;_ReturnExpression(h,f);_SavePPBuffer(h,STRING_TABLE.__str421337|0);_IncrementIndentDepth(h,8);f=_BuildRHSAssert(h,c,b,a,1,1,STRING_TABLE.__str431338|0);_DecrementIndentDepth(h,8);STACKTOP=a;return f}
function _EnvFacts(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;g=h;i=f;e=c;j=a;k=b;l=d;n=0;p=e;q=0;o=_EnvGetCurrentModule(g);e=0==(p|0)?3:4;break;case 3:q=1;e=5;break;case 4:_EnvSetCurrentModule(g,p);e=5;break;case 5:e=0!=(q|0)?6:7;break;case 6:m=_EnvGetNextFact(g,0);e=8;break;case 7:m=_GetNextFactInScope(g,0);e=8;break;case 8:e=9;break;case 9:e=0!=(m|0)?10:25;break;case 10:e=1==(_GetHaltExecution(g)|0)?11:12;break;case 11:_EnvSetCurrentModule(g,o);e=26;break;case 12:e=(HEAP32[(m+
24|0)>>2]|0)>(k|0)?13:15;break;case 13:e=-1!=(k|0)?14:15;break;case 14:_PrintTally(g,i,n,STRING_TABLE.__str291324|0,STRING_TABLE.__str1295|0);_EnvSetCurrentModule(g,o);e=26;break;case 15:e=0==(l|0)?16:17;break;case 16:_PrintTally(g,i,n,STRING_TABLE.__str291324|0,STRING_TABLE.__str1295|0);_EnvSetCurrentModule(g,o);e=26;break;case 17:e=(HEAP32[(m+24|0)>>2]|0)>=(j|0)?18:21;break;case 18:_PrintFactWithIdentifier(g,i,m);_EnvPrintRouter(g,i,STRING_TABLE.__str351330|0);n=n+1|0;e=0<(l|0)?19:20;break;case 19:l=
l-1|0;e=20;break;case 20:e=21;break;case 21:e=0!=(q|0)?22:23;break;case 22:m=_EnvGetNextFact(g,m);e=24;break;case 23:m=_GetNextFactInScope(g,m);e=24;break;case 24:e=9;break;case 25:_PrintTally(g,i,n,STRING_TABLE.__str291324|0,STRING_TABLE.__str1295|0);_EnvSetCurrentModule(g,o);e=26;break;case 26:return;default:assert(0,"bad label: "+e)}}_EnvFacts.X=1;
function _GetFactsArgument(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;b=(g|0)>(c|0)?3:4;break;case 3:d=-1;b=9;break;case 4:b=0==(_EnvArgTypeCheck(e,STRING_TABLE.__str1295|0,g,1,j)|0)?5:6;break;case 5:d=-2;b=9;break;case 6:i=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];b=0>(i|0)?7:8;break;case 7:_ExpectedTypeError1(e,STRING_TABLE.__str1295|0,g,STRING_TABLE.__str501345|0);
_SetHaltExecution(e,1);_SetEvaluationError(e,1);d=-2;b=9;break;case 8:d=i;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}
function _EnvSaveFacts(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r,s=b,t,u,v=b+4;g=h;i=f;j=c;k=a;p=d=_GenOpen(g,i,STRING_TABLE.__str391334|0);d=0==(d|0)?3:4;break;case 3:_OpenErrorMessage(g,STRING_TABLE.__str181313|0,i);e=0;d=28;break;case 4:_SetFastSave(g,p);l=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>
2]|0)>>2]=1;m=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2]=1;n=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2]=1;r=_GetSaveFactsDeftemplateNames(g,k,j,s,v);d=0!=(HEAP32[v>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2]=n;_GenClose(g,
p);_SetFastSave(g,0);e=0;d=28;break;case 6:q=_EnvGetCurrentModule(g);o=_GetNextFactInScope(g,0);d=7;break;case 7:d=0!=(o|0)?8:25;break;case 8:d=1==(j|0)?9:11;break;case 9:d=(HEAP32[(HEAP32[((HEAP32[(o+16|0)>>2]|0)+8|0)>>2]|0)>>2]|0)!=(q|0)?10:11;break;case 10:u=0;d=21;break;case 11:d=0==(k|0)?12:13;break;case 12:u=1;d=20;break;case 13:t=u=0;d=14;break;case 14:d=(t|0)<(HEAP32[s>>2]|0)?15:19;break;case 15:d=(HEAP32[((r+24*t|0)+8|0)>>2]|0)==(HEAP32[(o+16|0)>>2]|0)?16:17;break;case 16:u=1;d=19;break;
case 17:d=18;break;case 18:t=t+1|0;d=14;break;case 19:d=20;break;case 20:d=21;break;case 21:d=0!=(u|0)?22:23;break;case 22:_PrintFact(g,p,o,0,0);_EnvPrintRouter(g,p,STRING_TABLE.__str351330|0);d=23;break;case 23:d=24;break;case 24:o=_GetNextFactInScope(g,o);d=7;break;case 25:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2]=n;_GenClose(g,p);_SetFastSave(g,0);d=0!=(k|0)?26:27;break;
case 26:_rm3(g,r,24*HEAP32[s>>2]|0);d=27;break;case 27:e=1;d=28;break;case 28:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EnvSaveFacts.X=1;
function _EnvLoadFacts(h,f){var c=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k=c+12;d=h;e=f;g=a=_GenOpen(d,e,STRING_TABLE.__str401335|0);a=0==(a|0)?3:4;break;case 3:_OpenErrorMessage(d,STRING_TABLE.__str211316|0,e);b=0;a=13;break;case 4:_SetFastLoad(d,g);HEAP16[(i|0)>>1]=170;a=5;break;case 5:a=172!=(HEAPU16[(i|0)>>1]&65535|0)?6:10;break;case 6:j=_StandardLoadFact(d,g,i);a=0==(j|0)?
7:8;break;case 7:HEAP16[(i|0)>>1]=172;a=9;break;case 8:_EvaluateExpression(d,j,k);a=9;break;case 9:_ReturnExpression(d,j);a=5;break;case 10:_SetFastLoad(d,0);_GenClose(d,g);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?11:12;break;case 11:b=0;a=13;break;case 12:b=1;a=13;break;case 13:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_EnvLoadFacts.X=1;
function _GetSaveFactsDeftemplateNames(h,f,c,a,b){var d=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q=d,r;i=h;j=f;k=c;l=a;m=b;r=0;HEAP32[m>>2]=0;e=0==(j|0)?3:4;break;case 3:g=HEAP32[l>>2]=0;e=26;break;case 4:n=j;HEAP32[l>>2]=0;e=5;break;case 5:e=0!=(n|0)?6:8;break;case 6:e=7;break;case 7:n=HEAP32[(n+12|0)>>2];e=l;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=5;break;case 8:o=_gm3(i,24*HEAP32[l>>
2]|0);n=j;p=0;e=9;break;case 9:e=(p|0)<(HEAP32[l>>2]|0)?10:25;break;case 10:_EvaluateExpression(i,n,o+24*p|0);e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?11:12;break;case 11:HEAP32[m>>2]=1;_rm3(i,o,24*HEAP32[l>>2]|0);g=0;e=26;break;case 12:e=2!=(HEAPU16[((o+24*p|0)+4|0)>>1]&65535|0)?13:14;break;case 13:HEAP32[m>>2]=1;_ExpectedTypeError1(i,STRING_TABLE.__str181313|0,p+3|0,STRING_TABLE.__str461341|0);_rm3(i,o,24*HEAP32[l>>2]|0);g=0;e=26;break;case 14:e=1==(k|0)?15:18;break;case 15:r=
_EnvFindDeftemplate(i,HEAP32[(HEAP32[((o+24*p|0)+8|0)>>2]+16|0)>>2]);e=0==(r|0)?16:17;break;case 16:HEAP32[m>>2]=1;_ExpectedTypeError1(i,STRING_TABLE.__str181313|0,p+3|0,STRING_TABLE.__str471342|0);_rm3(i,o,24*HEAP32[l>>2]|0);g=0;e=26;break;case 17:e=23;break;case 18:e=2==(k|0)?19:22;break;case 19:r=_FindImportedConstruct(i,STRING_TABLE.__str481343|0,0,HEAP32[(HEAP32[((o+24*p|0)+8|0)>>2]+16|0)>>2],q,1,0);e=0==(r|0)?20:21;break;case 20:HEAP32[m>>2]=1;_ExpectedTypeError1(i,STRING_TABLE.__str181313|
0,p+3|0,STRING_TABLE.__str491344|0);_rm3(i,o,24*HEAP32[l>>2]|0);g=0;e=26;break;case 21:e=22;break;case 22:e=23;break;case 23:HEAP16[((o+24*p|0)+4|0)>>1]=63;HEAP32[((o+24*p|0)+8|0)>>2]=r;e=24;break;case 24:n=HEAP32[(n+12|0)>>2];p=p+1|0;e=9;break;case 25:g=o;e=26;break;case 26:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_GetSaveFactsDeftemplateNames.X=1;
function _StandardLoadFact(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;HEAP32[j>>2]=0;_GetToken(e,g,i);b=170!=(HEAPU16[(i|0)>>1]&65535|0)?3:4;break;case 3:d=0;b=9;break;case 4:k=e;b=_FindFunction(e,STRING_TABLE.__str31298|0);k=_GenConstant(k,30,b);b=_GetRHSPattern(e,g,i,j,1,0,1,171);HEAP32[(k+8|0)>>2]=b;b=1==(HEAP32[j>>2]|0)?5:6;break;case 5:_EnvPrintRouter(e,
STRING_TABLE.__str441339|0,STRING_TABLE.__str451340|0);_SetEvaluationError(e,1);_ReturnExpression(e,k);d=0;b=9;break;case 6:b=0!=(_ExpressionContainsVariables(k,1)|0)?7:8;break;case 7:_ReturnExpression(e,k);d=0;b=9;break;case 8:d=k;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_StandardLoadFact.X=1;
function _EnvLoadFactsFromString(h,f,c){var a=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l,m=a+12;e=h;g=f;i=c;j=STRING_TABLE.__str411336|0;b=-1==(i|0)?3:4;break;case 3:b=0!=(_OpenStringSource(e,j,g,0)|0)?6:5;break;case 4:b=0!=(_OpenTextSource(e,j,g,0,i)|0)?6:5;break;case 5:d=0;b=15;break;case 6:HEAP16[(k|0)>>1]=170;b=7;break;case 7:b=172!=(HEAPU16[(k|0)>>1]&65535|0)?8:12;break;case 8:l=
_StandardLoadFact(e,j,k);b=0==(l|0)?9:10;break;case 9:HEAP16[(k|0)>>1]=172;b=11;break;case 10:_EvaluateExpression(e,l,m);b=11;break;case 11:_ReturnExpression(e,l);b=7;break;case 12:_CloseStringSource(e,j);b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?13:14;break;case 13:d=0;b=15;break;case 14:d=1;b=15;break;case 15:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvLoadFactsFromString.X=1;
function _FactFunctionDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str1346|0,98,596,STRING_TABLE.__str11347|0,STRING_TABLE.__str21348|0);_EnvDefineFunction2(h,STRING_TABLE.__str31349|0,119,598,STRING_TABLE.__str41350|0,STRING_TABLE.__str21348|0);_EnvDefineFunction2(h,STRING_TABLE.__str51351|0,117,600,STRING_TABLE.__str61352|0,STRING_TABLE.__str71353|0);_EnvDefineFunction2(h,STRING_TABLE.__str81354|0,117,602,STRING_TABLE.__str91355|0,STRING_TABLE.__str21348|0);_EnvDefineFunction2(h,STRING_TABLE.__str101356|
0,109,604,STRING_TABLE.__str111357|0,STRING_TABLE.__str121358|0);_EnvDefineFunction2(h,STRING_TABLE.__str131359|0,118,606,STRING_TABLE.__str141360|0,STRING_TABLE.__str151361|0)}
function _FactExistpFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str1346|0,0,1)|0)?3:4;break;case 3:c=-1;f=5;break;case 4:f=_GetFactAddressOrIndexArgument(a,STRING_TABLE.__str1346|0,1,0);c=_EnvFactExistp(a,f);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _FactRelationFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str31349|0,0,1)|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];f=7;break;case 4:b=_GetFactAddressOrIndexArgument(a,STRING_TABLE.__str31349|0,1,0);f=0==(b|0)?5:6;break;case 5:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];f=7;break;case 6:c=_FactRelation(b);f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _FactSlotValueFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str51351|0,0,2)|0)?3:4;break;case 3:a=9;break;case 4:e=_GetFactAddressOrIndexArgument(b,STRING_TABLE.__str51351|0,1,1);a=0==(e|0)?5:6;break;case 5:a=9;break;
case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str51351|0,2,2,g)|0)?7:8;break;case 7:a=9;break;case 8:_FactSlotValue(b,e,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],d);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_FactSlotValueFunction.X=1;
function _FactSlotNamesFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str81354|0,0,1)|0)?3:4;break;case 3:c=7;break;case 4:d=_GetFactAddressOrIndexArgument(a,STRING_TABLE.__str81354|0,1,1);c=0==(d|0)?5:6;break;case 5:c=7;break;case 6:_EnvFactSlotNames(a,d,b);c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}
function _GetFactListFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;i=a=_EnvArgCountCheck(b,STRING_TABLE.__str101356|0,2,1);a=-1==(a|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=14;break;case 4:a=1==(i|0)?5:12;break;case 5:_EnvRtnUnknown(b,1,g);a=2!=(HEAPU16[(g+4|0)>>1]&65535|0)?6:7;break;case 6:_EnvSetMultifieldErrorValue(b,d);_ExpectedTypeError1(b,
STRING_TABLE.__str101356|0,1,STRING_TABLE.__str171363|0);a=14;break;case 7:e=a=_EnvFindDefmodule(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);a=0==(a|0)?8:11;break;case 8:a=0!=(_strcmp(STRING_TABLE.__str181364|0,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2])|0)?9:10;break;case 9:_EnvSetMultifieldErrorValue(b,d);_ExpectedTypeError1(b,STRING_TABLE.__str101356|0,1,STRING_TABLE.__str171363|0);a=14;break;case 10:e=0;a=11;break;case 11:a=13;break;case 12:e=_EnvGetCurrentModule(b);a=13;break;case 13:_EnvGetFactList(b,
d,e);a=14;break;case 14:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_GetFactListFunction.X=1;
function _PPFactFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i=f;a=h;g=e=0;d=c=_EnvArgRangeCheck(a,STRING_TABLE.__str131359|0,1,3);c=-1==(c|0)?3:4;break;case 3:c=23;break;case 4:b=_GetFactAddressOrIndexArgument(a,STRING_TABLE.__str131359|0,1,1);c=0==(b|0)?5:6;break;case 5:c=23;break;case 6:c=1==(d|0)?7:8;break;case 7:e=STRING_TABLE.__str191365|0;c=11;break;case 8:e=_GetLogicalName(a,
2,STRING_TABLE.__str191365|0);c=0==(e|0)?9:10;break;case 9:_IllegalLogicalNameMessage(a,STRING_TABLE.__str131359|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=23;break;case 10:c=11;break;case 11:c=3==(d|0)?12:17;break;case 12:_EnvRtnUnknown(a,3,i);c=(HEAP32[(i+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?13:15;break;case 13:c=2==(HEAPU16[(i+4|0)>>1]&65535|0)?14:15;break;case 14:g=0;c=16;break;case 15:g=1;c=16;break;case 16:c=17;break;case 17:c=0==(_strcmp(e,STRING_TABLE.__str201366|
0)|0)?18:19;break;case 18:c=23;break;case 19:c=0==(_QueryRouters(a,e)|0)?20:21;break;case 20:_UnrecognizedRouterMessage(a,e);c=23;break;case 21:c=22;break;case 22:_EnvPPFact(a,b,e,g);c=23;break;case 23:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PPFactFunction.X=1;function _FactRelation(h){return HEAP32[(HEAP32[(h+16|0)>>2]|0)>>2]}function _EnvFactDeftemplate(h,f){return HEAP32[(f+16|0)>>2]}
function _EnvFactExistp(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=0==(b|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0!=(HEAPU32[(b+28|0)>>2]>>>15&1|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _GetFactAddressOrIndexArgument(h,f,c,a){var b=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m,n,o=b+24;g=h;i=f;j=c;k=a;_EnvRtnUnknown(g,j,l);d=6==(HEAPU16[(l+4|0)>>1]&65535|0)?3:6;break;case 3:d=0!=(HEAPU32[(HEAP32[(l+8|0)>>2]+28|0)>>2]>>>15&1|0)?4:5;break;case 4:e=0;d=15;break;case 5:e=HEAP32[(l+8|0)>>2];d=15;break;case 6:d=1==(HEAPU16[(l+4|0)>>1]&65535|0)?7:13;break;case 7:m=
HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2];d=0>(m|0)?8:9;break;case 8:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str221368|0);e=0;d=15;break;case 9:n=_FindIndexedFact(g,m);d=0==(n|0)?10:12;break;case 10:d=0!=(k|0)?11:12;break;case 11:d=m;_sprintf(o|0,STRING_TABLE.__str231369|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));_CantFindItemErrorMessage(g,STRING_TABLE.__str241370|0,o|0);e=0;d=15;break;case 12:e=n;d=15;break;case 13:d=14;break;
case 14:_ExpectedTypeError1(g,i,j,STRING_TABLE.__str221368|0);e=0;d=15;break;case 15:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_GetFactAddressOrIndexArgument.X=1;
function _FactSlotValue(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;g=f;i=c;j=a;d=0!=(HEAP32[(HEAP32[(g+16|0)>>2]+28|0)>>2]&1|0)?3:6;break;case 3:d=0!=(_strcmp(i,STRING_TABLE.__str161362|0)|0)?4:5;break;case 4:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]|0)>>2]+16|0)>>2],0);d=12;break;case 5:d=9;break;case 6:d=HEAP32[(g+
16|0)>>2];var l=_EnvAddSymbol(e,i);d=0==(_FindSlot(d,l,k)|0)?7:8;break;case 7:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]|0)>>2]+16|0)>>2],0);d=12;break;case 8:d=9;break;case 9:d=0!=(HEAP32[(HEAP32[(g+16|0)>>2]+28|0)>>2]&1|0)?10:11;break;case 10:_EnvGetFactSlot(e,g,0,j);d=12;break;case 11:_EnvGetFactSlot(e,g,i,j);d=12;break;case 12:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_FactSlotValue.X=1;
function _EnvFactSlotNames(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;a=0!=(HEAP32[(HEAP32[(d+16|0)>>2]+28|0)>>2]&1|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=0;g=_EnvCreateMultifield(b,1);HEAP16[(g+16|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str161362|0);HEAP32[((g+16|0)+4|0)>>2]=a;HEAP32[(e+8|0)>>2]=g;a=12;break;case 4:j=0;i=HEAP32[(HEAP32[(d+16|0)>>2]+24|0)>>2];a=5;break;case 5:a=0!=(i|0)?6:8;break;case 6:a=7;break;case 7:j=j+1|
0;i=HEAP32[(i+16|0)>>2];a=5;break;case 8:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=j-1|0;g=_EnvCreateMultifield(b,j);HEAP32[(e+8|0)>>2]=g;j=1;i=HEAP32[(HEAP32[(d+16|0)>>2]+24|0)>>2];a=9;break;case 9:a=0!=(i|0)?10:12;break;case 10:HEAP16[((g+16|0)+((j-1|0)<<3)|0)>>1]=2;HEAP32[(((g+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=HEAP32[(i|0)>>2];a=11;break;case 11:j=j+1|0;i=HEAP32[(i+16|0)>>2];a=9;break;case 12:return;default:assert(0,"bad label: "+a)}}_EnvFactSlotNames.X=1;
function _EnvGetFactList(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;j=c;_SaveCurrentModule(b);a=0==(j|0)?3:8;break;case 3:e=_EnvGetNextFact(b,0);g=0;a=4;break;case 4:a=0!=(e|0)?5:7;break;case 5:a=6;break;case 6:e=_EnvGetNextFact(b,e);g=g+1|0;a=4;break;case 7:a=13;break;case 8:_EnvSetCurrentModule(b,j);_UpdateDeftemplateScope(b);e=_GetNextFactInScope(b,0);g=0;a=9;break;case 9:a=0!=(e|0)?10:12;break;case 10:a=11;break;case 11:e=_GetNextFactInScope(b,e);g=g+1|0;a=9;break;case 12:a=
13;break;case 13:HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=g-1|0;i=_EnvCreateMultifield(b,g);HEAP32[(d+8|0)>>2]=i;a=0==(j|0)?14:19;break;case 14:e=_EnvGetNextFact(b,0);g=1;a=15;break;case 15:a=0!=(e|0)?16:18;break;case 16:HEAP16[((i+16|0)+((g-1|0)<<3)|0)>>1]=6;HEAP32[(((i+16|0)+((g-1|0)<<3)|0)+4|0)>>2]=e;a=17;break;case 17:e=_EnvGetNextFact(b,e);g=g+1|0;a=15;break;case 18:a=24;break;case 19:e=_GetNextFactInScope(b,0);g=1;a=20;break;case 20:a=0!=(e|0)?21:23;break;case 21:HEAP16[((i+
16|0)+((g-1|0)<<3)|0)>>1]=6;HEAP32[(((i+16|0)+((g-1|0)<<3)|0)+4|0)>>2]=e;a=22;break;case 22:e=_GetNextFactInScope(b,e);g=g+1|0;a=20;break;case 23:a=24;break;case 24:_RestoreCurrentModule(b);_UpdateDeftemplateScope(b);return;default:assert(0,"bad label: "+a)}}_EnvGetFactList.X=1;
function _EnvPPFact(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;b=f;e=c;g=a;i=b;b=0==(i|0)?3:4;break;case 3:b=7;break;case 4:b=0!=(HEAPU32[(i+28|0)>>2]>>>15&1|0)?5:6;break;case 5:b=7;break;case 6:_PrintFact(d,e,i,1,g);_EnvPrintRouter(d,e,STRING_TABLE.__str211367|0);b=7;break;case 7:return;default:assert(0,"bad label: "+b)}}
function _InitializeFactReteFunctions(h){var f=STACKTOP;STACKTOP+=728;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+56,a=f+112,b=f+168,d=f+224,e=f+280,g=f+336,i=f+392,j=f+448,k=f+504,l=f+560,m=f+616,n=f+672;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var o=_InitializeFactReteFunctions_factJNGV1Info>>2,p=f>>2,q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=_InitializeFactReteFunctions_factJNGV2Info>>2;p=c>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factJNGV3Info>>2;p=a>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factPNGV1Info>>2;p=b>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=_InitializeFactReteFunctions_factPNGV2Info>>2;p=d>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factPNGV3Info>>2;p=e>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factJNCV1Info>>2;p=g>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=_InitializeFactReteFunctions_factJNCV2Info>>2;p=i>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factPNCV1Info>>2;p=j>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factStoreMFInfo>>2;p=k>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=_InitializeFactReteFunctions_factSlotLengthInfo>>2;p=l>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factPNConstant1Info>>2;p=m>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=_InitializeFactReteFunctions_factPNConstant2Info>>2;p=n>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];_AllocateEnvironmentData(h,
2,728,0);p=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=f>>2;p>>=2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];p=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+56|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=c>>2;p>>=2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];c=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+112|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=a>>2;p=c>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];a=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+168|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=b>>2;p=a>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];b=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+224|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=d>>2;p=b>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];d=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+280|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=e>>2;p=d>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];e=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+336|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=g>>2;p=e>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];g=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+392|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=i>>2;p=g>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];i=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+448|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=j>>2;p=i>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];j=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+504|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=k>>2;p=j>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];k=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+560|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=l>>2;p=k>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];l=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+616|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
o=m>>2;p=l>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];m=HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+672|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");o=n>>2;p=m>>2;for(q=o+14;o<q;o++,p++)HEAP32[p]=HEAP32[o];_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+100|0,6);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]|0,57);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+56|0,58);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+112|
0,59);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+168|0,54);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+224|0,55);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+280|0,56);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+336|0,51);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+392|0,52);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+448|0,50);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+504|0,62);_InstallPrimitive(h,HEAP32[(HEAP32[(h+
16|0)>>2]+8|0)>>2]+560|0,53);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+616|0,60);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+8|0)>>2]+672|0,61);STACKTOP=f}_InitializeFactReteFunctions.X=1;
function _FactGenPNConstant(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j=c+4;d=h;e=f;a=0==(HEAPU32[(e+8|0)>>2]>>>14&1|0)?3:7;break;case 3:_ClearBitString(i,4);a=0!=(HEAP32[(e+8|0)>>2]&1|0)?4:5;break;case 4:a=i;HEAP32[a>>2]&=-2;a=6;break;case 5:a=i;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=6;break;case 6:g=i;HEAP32[g>>2]=HEAP32[g>>2]&-511|(((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&255)<<
1;g=d;b=_AddBitMap(d,i,4);g=_GenConstant(g,60,b);b=_GenConstant(d,HEAP16[(e|0)>>1],HEAP32[(e+4|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=g;a=23;break;case 7:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?10:8;break;case 8:a=1==(HEAPU16[(e+10|0)>>1]&65535|0)?9:17;break;case 9:a=0==(HEAPU16[(e+12|0)>>1]&65535|0)?10:17;break;case 10:_ClearBitString(j,4);a=0!=(HEAP32[(e+8|0)>>2]&1|0)?11:12;break;case 11:a=j;HEAP32[a>>2]&=-2;a=13;break;case 12:a=j;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=13;break;case 13:a=j;HEAP32[a>>2]=HEAP32[a>>
2]&-261121|(((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&255)<<10;a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?14:15;break;case 14:a=j;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;a=j;HEAP32[a>>2]=HEAP32[a>>2]&-1021|(HEAPU16[(e+14|0)>>1]&255)<<2;a=16;break;case 15:a=j;HEAP32[a>>2]&=-3;a=j;HEAP32[a>>2]=HEAP32[a>>2]&-1021|(HEAPU16[(e+16|0)>>1]&255)<<2;a=16;break;case 16:g=d;b=_AddBitMap(d,j,4);g=_GenConstant(g,61,b);b=_GenConstant(d,HEAP16[(e|0)>>1],HEAP32[(e+4|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=g;a=23;break;case 17:a=0!=(HEAP32[(e+8|
0)>>2]&1|0)?18:19;break;case 18:g=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+12|0)>>2]);a=20;break;case 19:g=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+8|0)>>2]);a=20;break;case 20:a=HEAP16[(e|0)>>1];HEAP16[(e|0)>>1]=35;var k=_FactGenGetfield(d,e);HEAP32[(g+8|0)>>2]=k;HEAP16[(e|0)>>1]=a;a=_GenConstant(d,HEAP16[(e|0)>>1],HEAP32[(e+4|0)>>2]);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=a;a=21;break;case 21:a=22;break;case 22:b=g;a=23;break;case 23:return d=b,STACKTOP=
c,d;default:assert(0,"bad label: "+a)}}_FactGenPNConstant.X=1;
function _FactGenGetfield(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0<(HEAP16[(d+40|0)>>1]<<16>>16|0)?3:5;break;case 3:c=0==(HEAPU32[(d+8|0)>>2]>>>14&1|0)?4:5;break;case 4:c=b;a=_FactGetVarPN2(b,d);a=_GenConstant(c,55,a);c=17;break;case 5:c=37==(HEAPU16[(d|0)>>1]&65535|0)?7:6;break;case 6:c=35==(HEAPU16[(d|0)>>1]&65535|0)?7:11;break;case 7:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?10:8;break;case 8:c=1==(HEAPU16[(d+10|0)>>1]&65535|0)?9:11;break;case 9:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?
10:11;break;case 10:c=b;a=_FactGetVarPN3(b,d);a=_GenConstant(c,56,a);c=17;break;case 11:c=38==(HEAPU16[(d|0)>>1]&65535|0)?13:12;break;case 12:c=36==(HEAPU16[(d|0)>>1]&65535|0)?13:16;break;case 13:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?14:16;break;case 14:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?15:16;break;case 15:c=b;a=_FactGetVarPN3(b,d);a=_GenConstant(c,56,a);c=17;break;case 16:c=b;a=_FactGetVarPN1(b,d);a=_GenConstant(c,54,a);c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}
_FactGenGetfield.X=1;function _FactGetVarPN2(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ClearBitString(c,2);HEAP16[(c|0)>>1]=((HEAP16[(f+40|0)>>1]<<16>>16)-1|0)&65535;var a=_AddBitMap(h,c,2);STACKTOP=c;return a}
function _FactGetVarPN3(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;e=f;_ClearBitString(g,8);HEAP16[(g+6|0)>>1]=((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&65535;a=37==(HEAPU16[(e|0)>>1]&65535|0)?4:3;break;case 3:a=35==(HEAPU16[(e|0)>>1]&65535|0)?4:8;break;case 4:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?5:6;break;case 5:a=g;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=g;HEAP32[a>>2]&=-3;HEAP16[(g+
2|0)>>1]=HEAP16[(e+14|0)>>1];HEAP16[(g+4|0)>>1]=0;a=7;break;case 6:a=g;HEAP32[a>>2]&=-2;a=g;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;HEAP16[(g+2|0)>>1]=0;HEAP16[(g+4|0)>>1]=HEAP16[(e+16|0)>>1];a=7;break;case 7:b=_AddBitMap(d,g,8);a=9;break;case 8:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;HEAP16[(g+2|0)>>1]=HEAP16[(e+14|0)>>1];HEAP16[(g+4|0)>>1]=HEAP16[(e+16|0)>>1];b=_AddBitMap(d,g,8);a=9;break;case 9:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_FactGetVarPN3.X=1;
function _FactGetVarPN1(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;_ClearBitString(e,8);a=0>=(HEAP16[(d+40|0)>>1]<<16>>16|0)?3:4;break;case 3:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=e;HEAP32[a>>2]&=-3;HEAP16[(e+4|0)>>1]=0;HEAP16[(e+2|0)>>1]=0;a=8;break;case 4:a=0>=(HEAP16[(d+34|0)>>1]<<16>>16|0)?5:6;break;case 5:a=e;HEAP32[a>>2]&=-2;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;HEAP16[(e+
4|0)>>1]=((HEAP16[(d+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(e+2|0)>>1]=0;a=7;break;case 6:a=e;HEAP32[a>>2]&=-2;a=e;HEAP32[a>>2]&=-3;HEAP16[(e+4|0)>>1]=((HEAP16[(d+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(e+2|0)>>1]=((HEAP16[(d+34|0)>>1]<<16>>16)-1|0)&65535;a=7;break;case 7:a=8;break;case 8:return b=_AddBitMap(b,e,8),STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_FactGetVarPN1.X=1;
function _FactGenGetvar(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0<(HEAP16[(d+40|0)>>1]<<16>>16|0)?3:5;break;case 3:c=0==(HEAPU32[(d+8|0)>>2]>>>14&1|0)?4:5;break;case 4:c=b;a=_FactGetVarJN2(b,d);a=_GenConstant(c,58,a);c=17;break;case 5:c=37==(HEAPU16[(d|0)>>1]&65535|0)?7:6;break;case 6:c=35==(HEAPU16[(d|0)>>1]&65535|0)?7:11;break;case 7:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?10:8;break;case 8:c=1==(HEAPU16[(d+10|0)>>1]&65535|0)?9:11;break;case 9:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?10:
11;break;case 10:c=b;a=_FactGetVarJN3(b,d);a=_GenConstant(c,59,a);c=17;break;case 11:c=38==(HEAPU16[(d|0)>>1]&65535|0)?13:12;break;case 12:c=36==(HEAPU16[(d|0)>>1]&65535|0)?13:16;break;case 13:c=0==(HEAPU16[(d+10|0)>>1]&65535|0)?14:16;break;case 14:c=0==(HEAPU16[(d+12|0)>>1]&65535|0)?15:16;break;case 15:c=b;a=_FactGetVarJN3(b,d);a=_GenConstant(c,59,a);c=17;break;case 16:c=b;a=_FactGetVarJN1(b,d);a=_GenConstant(c,57,a);c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}
_FactGenGetvar.X=1;function _FactGetVarJN2(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ClearBitString(c,4);HEAP16[(c+2|0)>>1]=((HEAP16[(f+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(c|0)>>1]=((HEAP16[(f+32|0)>>1]<<16>>16)-1|0)&65535;var a=_AddBitMap(h,c,4);STACKTOP=c;return a}
function _FactGetVarJN3(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;e=f;_ClearBitString(g,12);HEAP16[(g+8|0)>>1]=((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(g+6|0)>>1]=((HEAP16[(e+32|0)>>1]<<16>>16)-1|0)&65535;a=37==(HEAPU16[(e|0)>>1]&65535|0)?4:3;break;case 3:a=35==(HEAPU16[(e|0)>>1]&65535|0)?4:8;break;case 4:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?5:6;break;case 5:a=
g;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=g;HEAP32[a>>2]&=-3;HEAP16[(g+2|0)>>1]=HEAP16[(e+14|0)>>1];HEAP16[(g+4|0)>>1]=0;a=7;break;case 6:a=g;HEAP32[a>>2]&=-2;a=g;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;HEAP16[(g+2|0)>>1]=0;HEAP16[(g+4|0)>>1]=HEAP16[(e+16|0)>>1];a=7;break;case 7:b=_AddBitMap(d,g,12);a=9;break;case 8:b=g;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=g;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;HEAP16[(g+2|0)>>1]=HEAP16[(e+14|0)>>1];HEAP16[(g+4|0)>>1]=HEAP16[(e+16|0)>>1];b=_AddBitMap(d,g,12);a=9;break;case 9:return d=b,STACKTOP=
c,d;default:assert(0,"bad label: "+a)}}_FactGetVarJN3.X=1;
function _FactGetVarJN1(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;_ClearBitString(e,8);a=0>=(HEAP16[(d+40|0)>>1]<<16>>16|0)?3:4;break;case 3:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=e;HEAP32[a>>2]&=-3;HEAP16[(e+4|0)>>1]=0;HEAP16[(e+6|0)>>1]=0;a=8;break;case 4:a=0>=(HEAP16[(d+34|0)>>1]<<16>>16|0)?5:6;break;case 5:a=e;HEAP32[a>>2]&=-2;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;HEAP16[(e+
4|0)>>1]=((HEAP16[(d+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(e+6|0)>>1]=0;a=7;break;case 6:a=e;HEAP32[a>>2]&=-2;a=e;HEAP32[a>>2]&=-3;HEAP16[(e+4|0)>>1]=((HEAP16[(d+40|0)>>1]<<16>>16)-1|0)&65535;HEAP16[(e+6|0)>>1]=((HEAP16[(d+34|0)>>1]<<16>>16)-1|0)&65535;a=7;break;case 7:a=8;break;case 8:return HEAP16[(e+2|0)>>1]=((HEAP16[(d+32|0)>>1]<<16>>16)-1|0)&65535,b=_AddBitMap(b,e,8),STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_FactGetVarJN1.X=1;
function _FactGenCheckLength(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;e=f;a=0==(HEAPU16[(e+16|0)>>1]&65535|0)?3:6;break;case 3:a=35!=(HEAPU16[(e|0)>>1]&65535|0)?4:6;break;case 4:a=37!=(HEAPU16[(e|0)>>1]&65535|0)?5:6;break;case 5:b=0;a=16;break;case 6:_ClearBitString(g,8);HEAP16[(g+4|0)>>1]=((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&65535;a=36!=(HEAPU16[(e|0)>>1]&65535|0)?7:10;
break;case 7:a=38!=(HEAPU16[(e|0)>>1]&65535|0)?8:10;break;case 8:a=0==(HEAPU16[(e+12|0)>>1]&65535|0)?9:10;break;case 9:a=g;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;a=11;break;case 10:a=g;HEAP32[a>>2]&=-2;a=11;break;case 11:a=35==(HEAPU16[(e|0)>>1]&65535|0)?13:12;break;case 12:a=37==(HEAPU16[(e|0)>>1]&65535|0)?13:14;break;case 13:HEAP16[(g+2|0)>>1]=((HEAPU16[(e+16|0)>>1]&65535)+1|0)&65535;a=15;break;case 14:HEAP16[(g+2|0)>>1]=HEAP16[(e+16|0)>>1];a=15;break;case 15:b=d;a=_AddBitMap(d,g,8);b=_GenConstant(b,53,
a);a=16;break;case 16:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_FactGenCheckLength.X=1;function _FactGenCheckZeroLength(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ClearBitString(c,8);HEAP16[(c+4|0)>>1]=(f-1|0)&65535;HEAP32[c>>2]=HEAP32[c>>2]&-2|1;HEAP16[(c+2|0)>>1]=0;var a=_AddBitMap(h,c,8),a=_GenConstant(h,53,a);STACKTOP=c;return a}
function _FactReplaceGetvar(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0<(HEAP16[(e+40|0)>>1]<<16>>16|0)?3:5;break;case 3:a=0==(HEAPU32[(e+8|0)>>2]>>>14&1|0)?4:5;break;case 4:HEAP16[(d|0)>>1]=58;a=_FactGetVarJN2(b,e);HEAP32[(d+4|0)>>2]=a;a=17;break;case 5:a=37==(HEAPU16[(e|0)>>1]&65535|0)?7:6;break;case 6:a=35==(HEAPU16[(e|0)>>1]&65535|0)?7:11;break;case 7:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?10:8;break;case 8:a=1==(HEAPU16[(e+10|0)>>1]&65535|0)?9:11;break;case 9:a=0==(HEAPU16[(e+
12|0)>>1]&65535|0)?10:11;break;case 10:HEAP16[(d|0)>>1]=59;a=_FactGetVarJN3(b,e);HEAP32[(d+4|0)>>2]=a;a=17;break;case 11:a=38==(HEAPU16[(e|0)>>1]&65535|0)?13:12;break;case 12:a=36==(HEAPU16[(e|0)>>1]&65535|0)?13:16;break;case 13:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?14:16;break;case 14:a=0==(HEAPU16[(e+12|0)>>1]&65535|0)?15:16;break;case 15:HEAP16[(d|0)>>1]=59;a=_FactGetVarJN3(b,e);HEAP32[(d+4|0)>>2]=a;a=17;break;case 16:HEAP16[(d|0)>>1]=57;a=_FactGetVarJN1(b,e);HEAP32[(d+4|0)>>2]=a;a=17;break;case 17:return;
default:assert(0,"bad label: "+a)}}_FactReplaceGetvar.X=1;
function _FactReplaceGetfield(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAPU32[(e+8|0)>>2]>>>14&1|0)?3:4;break;case 3:HEAP16[(d|0)>>1]=55;a=_FactGetVarPN2(b,e);HEAP32[(d+4|0)>>2]=a;a=16;break;case 4:a=37==(HEAPU16[(e|0)>>1]&65535|0)?6:5;break;case 5:a=35==(HEAPU16[(e|0)>>1]&65535|0)?6:10;break;case 6:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?9:7;break;case 7:a=1==(HEAPU16[(e+10|0)>>1]&65535|0)?8:10;break;case 8:a=0==(HEAPU16[(e+12|0)>>1]&65535|0)?9:10;break;case 9:HEAP16[(d|0)>>
1]=56;a=_FactGetVarPN3(b,e);HEAP32[(d+4|0)>>2]=a;a=16;break;case 10:a=38==(HEAPU16[(e|0)>>1]&65535|0)?12:11;break;case 11:a=36==(HEAPU16[(e|0)>>1]&65535|0)?12:15;break;case 12:a=0==(HEAPU16[(e+10|0)>>1]&65535|0)?13:15;break;case 13:a=0==(HEAPU16[(e+12|0)>>1]&65535|0)?14:15;break;case 14:HEAP16[(d|0)>>1]=56;a=_FactGetVarPN3(b,e);HEAP32[(d+4|0)>>2]=a;a=16;break;case 15:HEAP16[(d|0)>>1]=54;a=_FactGetVarPN1(b,e);HEAP32[(d+4|0)>>2]=a;a=16;break;case 16:return;default:assert(0,"bad label: "+a)}}
_FactReplaceGetfield.X=1;
function _FactPNVariableComparison(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;_ClearBitString(j,4);b=0==(HEAPU32[(e+8|0)>>2]>>>14&1|0)?3:10;break;case 3:b=0<(HEAP16[(e+40|0)>>1]<<16>>16|0)?4:10;break;case 4:b=0==(HEAPU32[(g+8|0)>>2]>>>14&1|0)?5:10;break;case 5:b=0<(HEAP16[(g+40|0)>>1]<<16>>16|0)?6:10;break;case 6:b=j;HEAP32[b>>2]&=-2;b=j;HEAP32[b>>2]&=-3;b=j;
HEAP32[b>>2]=HEAP32[b>>2]&-509|(((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&127)<<2;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-65025|(((HEAP16[(g+40|0)>>1]<<16>>16)-1|0)&127)<<9;b=0!=(HEAP32[(e+8|0)>>2]&1|0)?7:8;break;case 7:b=j;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;b=9;break;case 8:b=j;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=9;break;case 9:i=d;b=_AddBitMap(d,j,4);i=_GenConstant(i,50,b);b=14;break;case 10:b=0!=(HEAP32[(e+8|0)>>2]&1|0)?11:12;break;case 11:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+12|0)>>2]);
b=13;break;case 12:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+8|0)>>2]);b=13;break;case 13:b=_FactGenGetfield(d,e);HEAP32[(i+8|0)>>2]=b;b=_FactGenGetfield(d,g);HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2]=b;b=14;break;case 14:return h=i,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactPNVariableComparison.X=1;
function _FactJNVariableComparison(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+4;d=h;e=f;g=c;b=0==(HEAPU32[(e+8|0)>>2]>>>14&1|0)?3:13;break;case 3:b=0<(HEAP16[(e+40|0)>>1]<<16>>16|0)?4:13;break;case 4:b=0==(HEAPU32[(g+8|0)>>2]>>>14&1|0)?5:13;break;case 5:b=0<(HEAP16[(g+40|0)>>1]<<16>>16|0)?6:13;break;case 6:_ClearBitString(j,4);b=j;HEAP32[b>>2]&=-2;b=j;HEAP32[b>>2]&=
-3;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-509|(((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&127)<<2;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-130561|(HEAP16[(g+32|0)>>1]<<16>>16&255)<<9;b=0>(HEAP16[(g+34|0)>>1]<<16>>16|0)?7:8;break;case 7:b=j;HEAP32[b>>2]&=-16646145;b=9;break;case 8:b=j;HEAP32[b>>2]=HEAP32[b>>2]&-16646145|(((HEAP16[(g+40|0)>>1]<<16>>16)-1|0)&127)<<17;b=9;break;case 9:b=0!=(HEAP32[(e+8|0)>>2]&1|0)?10:11;break;case 10:b=j;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;b=12;break;case 11:b=j;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=12;
break;case 12:i=d;b=_AddBitMap(d,j,4);i=_GenConstant(i,51,b);b=37;break;case 13:b=0<(HEAP16[(e+40|0)>>1]<<16>>16|0)?14:32;break;case 14:b=35==(HEAPU16[(e|0)>>1]&65535|0)?15:32;break;case 15:b=0==(HEAPU16[(e+10|0)>>1]&65535|0)?18:16;break;case 16:b=1==(HEAPU16[(e+10|0)>>1]&65535|0)?17:32;break;case 17:b=0==(HEAPU16[(e+12|0)>>1]&65535|0)?18:32;break;case 18:b=0<(HEAP16[(g+40|0)>>1]<<16>>16|0)?19:32;break;case 19:b=35==(HEAPU16[(g|0)>>1]&65535|0)?20:32;break;case 20:b=0==(HEAPU16[(g+10|0)>>1]&65535|
0)?22:21;break;case 21:b=0==(HEAPU16[(g+12|0)>>1]&65535|0)?22:32;break;case 22:_ClearBitString(k,8);b=k;HEAP32[b>>2]&=-2;b=k;HEAP32[b>>2]&=-3;b=k;HEAP32[b>>2]=HEAP32[b>>2]&-509|(((HEAP16[(e+40|0)>>1]<<16>>16)-1|0)&127)<<2;b=k;HEAP32[b>>2]=HEAP32[b>>2]&-33423361|(HEAP16[(g+32|0)>>1]<<16>>16&255)<<17;b=k;HEAP32[b>>2]=HEAP32[b>>2]&33554431|(((HEAP16[(g+40|0)>>1]<<16>>16)-1|0)&127)<<25;b=0==(HEAPU16[(e+10|0)>>1]&65535|0)?23:24;break;case 23:b=k;HEAP32[b>>2]=HEAP32[b>>2]&-513|512;b=k;HEAP32[b>>2]=HEAP32[b>>
2]&-130049|(HEAPU16[(e+14|0)>>1]&127)<<10;b=25;break;case 24:b=k;HEAP32[b>>2]&=-513;b=k;HEAP32[b>>2]=HEAP32[b>>2]&-130049|(HEAPU16[(e+16|0)>>1]&127)<<10;b=25;break;case 25:b=0==(HEAPU16[(g+10|0)>>1]&65535|0)?26:27;break;case 26:b=k+4|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=k+4|0;HEAP32[b>>2]=HEAP32[b>>2]&-255|(HEAPU16[(g+14|0)>>1]&127)<<1;b=28;break;case 27:b=k+4|0;HEAP32[b>>2]&=-2;b=k+4|0;HEAP32[b>>2]=HEAP32[b>>2]&-255|(HEAPU16[(g+16|0)>>1]&127)<<1;b=28;break;case 28:b=0!=(HEAP32[(e+8|0)>>2]&1|0)?29:
30;break;case 29:b=k;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;b=31;break;case 30:b=k;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=31;break;case 31:i=d;b=_AddBitMap(d,k,8);i=_GenConstant(i,52,b);b=36;break;case 32:b=0!=(HEAP32[(e+8|0)>>2]&1|0)?33:34;break;case 33:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+12|0)>>2]);b=35;break;case 34:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+8|0)>>2]);b=35;break;case 35:b=_FactGenGetvar(d,e);HEAP32[(i+8|0)>>2]=b;b=_FactGenGetvar(d,g);HEAP32[(HEAP32[(i+
8|0)>>2]+12|0)>>2]=b;b=36;break;case 36:b=37;break;case 37:return h=i,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactJNVariableComparison.X=1;function _HashFact(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0;var a=_HashSymbol(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]|0)>>2]+16|0)>>2],7717);f=f+a|0;c=_HashMultifield(c+48|0,7717);f=f+c|0;c=(f|0)%7717;f=0>(c|0)?3:4;break;case 3:c=-c|0;f=4;break;case 4:return c;default:assert(0,"bad label: "+f)}}
function _AddHashedFact(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var g=_genalloc(b,8);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:h=g;HEAP32[(h|0)>>2]=d;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+180|0)>>2]+(e<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+180|0)>>2]+(e<<2)|0)>>2]=h;HEAP32[(h+4|0)>>2]=d;return;default:assert(0,"bad label: "+a)}}_AddHashedFact.X=1;function _FactPatternParserFind(){return 1}function _EnvGetFactDuplication(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+184|0)>>2]}
function _EnvSetFactDuplication(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+184|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+184|0)>>2]=f;return c}
function _RemoveHashedFact(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=_HashFact(d);g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+180|0)>>2]+(e<<2)|0)>>2];i=0;c=3;break;case 3:c=0!=(g|0)?4:10;break;case 4:c=(HEAP32[(g|0)>>2]|0)==(d|0)?5:8;break;case 5:c=0==(i|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+180|0)>>2]+(e<<2)|0)>>2]=HEAP32[(g+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=11;break;case 7:HEAP32[(i+4|0)>>2]=HEAP32[(g+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+
32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=11;break;case 8:i=g;c=9;break;case 9:g=HEAP32[(g+4|0)>>2];c=3;break;case 10:a=0;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}_RemoveHashedFact.X=1;
function _HandleFactDuplication(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=_HashFact(d);c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+184|0)>>2]|0)?3:4;break;case 3:a=g;c=7;break;case 4:e=_FactExists(b,d,g);c=0==(e|0)?5:6;break;case 5:a=g;c=7;break;case 6:_ReturnFact(b,d);_AddLogicalDependencies(b,e,1);a=-1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _FactExists(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;a=h;d=f;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+12|0)>>2]+180|0)>>2]+(c<<2)|0)>>2];a=3;break;case 3:a=0!=(e|0)?4:10;break;case 4:a=(HEAP32[(d+16|0)>>2]|0)==(HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]|0)?5:6;break;case 5:a=0!=(_MultifieldsEqual(d+48|0,HEAP32[(e|0)>>2]+48|0)|0)?7:8;break;case 6:a=8;break;case 7:b=HEAP32[(e|0)>>2];a=11;break;case 8:a=9;break;case 9:e=HEAP32[(e+4|0)>>2];a=3;break;case 10:b=0;a=11;break;case 11:return b;
default:assert(0,"bad label: "+a)}}_FactExists.X=1;
function _InitializeFactHashTable(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=_gm3(c,30868);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+180|0)>>2]=f;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+180|0)>>2]|0)?3:4;break;case 3:_EnvExitRouter(c,1);f=4;break;case 4:a=0;f=5;break;case 5:f=7717>(a|0)?6:8;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+180|0)>>2]+(a<<2)|0)>>2]=0;f=7;break;case 7:a=a+1|0;f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}
_InitializeFactHashTable.X=1;
function _SequenceRestrictionParse(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;i=_GetLHSParseNode(d);HEAP16[(i|0)>>1]=37;a=i+8|0;HEAP32[a>>2]&=-2;HEAP16[(i+34|0)>>1]=-1;HEAP16[(i+40|0)>>1]=1;a=_GetLHSParseNode(d);HEAP32[(i+68|0)>>2]=a;HEAP16[(HEAP32[(i+68|0)>>2]|0)>>1]=2;a=HEAP32[(i+68|0)>>2]+8|0;HEAP32[a>>2]&=-2;HEAP32[(HEAP32[(i+68|0)>>2]+4|0)>>2]=HEAP32[(g+4|0)>>2];_SavePPBuffer(d,STRING_TABLE.__str1408|0);_GetToken(d,e,g);a=162==(HEAPU16[(g|0)>>1]&65535|0)?4:3;break;case 3:a=
161==(HEAPU16[(g|0)>>1]&65535|0)?4:5;break;case 4:_ReturnLHSParseNodes(d,i);_SyntaxErrorMessage(d,STRING_TABLE.__str11409|0);b=0;a=12;break;case 5:j=_RestrictionParse(d,e,g,1,0,1,0,1);a=0==(j|0)?6:7;break;case 6:_ReturnLHSParseNodes(d,i);b=0;a=12;break;case 7:HEAP32[(i+64|0)>>2]=j;a=171!=(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str1408|0);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);_SyntaxErrorMessage(d,STRING_TABLE.__str21410|0);_ReturnLHSParseNodes(d,i);b=
0;a=12;break;case 9:a=0==(HEAP32[(j+68|0)>>2]|0)?10:11;break;case 10:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str31411|0);a=11;break;case 11:b=i;a=12;break;case 12:return b;default:assert(0,"bad label: "+a)}}_SequenceRestrictionParse.X=1;
function _CreateInitialFactPattern(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a;c=f;a=h;c=0==(_FindImportedConstruct(a,STRING_TABLE.__str41412|0,0,STRING_TABLE.__str51413|0,c,1,0)|0)?3:4;break;case 3:_PrintWarningID(a,STRING_TABLE.__str61414|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str71415|0,STRING_TABLE.__str81416|0);var b=c=a,d=_EnvGetCurrentModule(a),b=_EnvGetDefmoduleName(b,d);_EnvPrintRouter(c,
STRING_TABLE.__str71415|0,b);_EnvPrintRouter(a,STRING_TABLE.__str71415|0,STRING_TABLE.__str91417|0);_EnvPrintRouter(a,STRING_TABLE.__str71415|0,STRING_TABLE.__str101418|0);c=a;b=_EnvAddSymbol(a,STRING_TABLE.__str51413|0);_CreateImpliedDeftemplate(c,b,0);c=4;break;case 4:return h=_GetLHSParseNode(a),HEAP16[(h|0)>>1]=37,HEAP16[(h+34|0)>>1]=0,HEAP16[(h+40|0)>>1]=1,c=_GetLHSParseNode(a),HEAP32[(h+68|0)>>2]=c,HEAP16[(HEAP32[(h+68|0)>>2]|0)>>1]=2,a=_EnvAddSymbol(a,STRING_TABLE.__str51413|0),HEAP32[(HEAP32[(h+
68|0)>>2]+4|0)>>2]=a,a=h,STACKTOP=f,a;default:assert(0,"bad label: "+c)}}_CreateInitialFactPattern.X=1;
function _FactPatternParse(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;b=0!=(_FindModuleSeparator(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2])|0)?3:4;break;case 3:_IllegalModuleSpecifierMessage(e);d=0;b=17;break;case 4:j=_FindImportedConstruct(e,STRING_TABLE.__str41412|0,0,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],k,1,0);b=1<(HEAP32[k>>2]|0)?5:6;break;case 5:_AmbiguousReferenceErrorMessage(e,
STRING_TABLE.__str41412|0,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2]);d=0;b=17;break;case 6:b=0==(j|0)?7:13;break;case 7:b=e;var l=_EnvGetCurrentModule(e);b=0!=(_FindImportExportConflict(b,STRING_TABLE.__str41412|0,l,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2])|0)?8:9;break;case 8:_ImportExportConflictMessage(e,STRING_TABLE.__str111419|0,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],0,0);d=0;b=17;break;case 9:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?11:10;break;case 10:j=_CreateImpliedDeftemplate(e,
HEAP32[(i+4|0)>>2],1);b=12;break;case 11:j=0;b=12;break;case 12:b=13;break;case 13:b=0!=(j|0)?14:16;break;case 14:b=0==(HEAP32[(j+28|0)>>2]&1|0)?15:16;break;case 15:d=_DeftemplateLHSParse(e,g,j);b=17;break;case 16:d=_SequenceRestrictionParse(e,g,i);b=17;break;case 17:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactPatternParse.X=1;
function _SkipFactPatternNode(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;b=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+40|0)>>2]|0)?3:5;break;case 3:c=0==(HEAPU32[((b|0)+12|0)>>2]>>>3&1|0)?4:5;break;case 4:a=1;c=6;break;case 5:a=0;c=6;break;case 6:return a;default:assert(0,"bad label: "+c)}}
function _GetNextFactPatternNode(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;a=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;a=0==(d|0)?3:6;break;case 3:a=0!=(HEAP32[(e+32|0)>>2]|0)?4:5;break;case 4:b=HEAP32[(e+32|0)>>2];a=14;break;case 5:a=6;break;case 6:a=7;break;case 7:a=0==(HEAP32[(e+44|0)>>2]|0)?8:13;break;case 8:e=HEAP32[(e+36|0)>>2];a=0==(e|0)?9:10;break;case 9:b=0;a=14;break;case 10:a=0!=(HEAPU32[((e|0)+12|0)>>2]>>>1&1|0)?11:12;break;case 11:b=0;a=14;break;case 12:a=
7;break;case 13:b=HEAP32[(e+44|0)>>2];a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_GetNextFactPatternNode.X=1;
function _FactPatternMatch(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;g=h;i=f;j=c;k=a;l=b;m=d;e=0==(j|0)?3:4;break;case 3:e=36;break;case 4:o=HEAPU16[(j+22|0)>>1]&65535;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+188|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+192|0)>>2]=l;e=5;break;case 5:e=0!=(j|0)?6:36;break;case 6:n=HEAPU16[(j+20|0)>>1]&65535;e=(o|0)==(HEAPU16[(j+22|0)>>1]&65535|0)?7:8;break;case 7:n=n+k|0;e=8;break;case 8:e=0!=(_SkipFactPatternNode(g,j)|
0)?9:10;break;case 9:j=_GetNextFactPatternNode(g,1,j);e=35;break;case 10:e=0!=(HEAP32[((j|0)+12|0)>>2]&1|0)?11:28;break;case 11:p=0;e=0!=(HEAPU32[((j|0)+12|0)>>2]>>>6&1|0)?12:19;break;case 12:e=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+192|0)>>2]|0)?13:14;break;case 13:e=19;break;case 14:e=(HEAP16[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+192|0)>>2]+4|0)>>1]<<16>>16|0)==(HEAPU16[(j+22|0)>>1]&65535|0)?15:19;break;case 15:e=4==(HEAPU16[(((HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+188|
0)>>2]+48|0)+16|0)+((HEAPU16[(j+22|0)>>1]&65535)<<3)|0)>>1]&65535|0)?16:19;break;case 16:e=((HEAPU16[(j+24|0)>>1]&65535)+n|0)!=(HEAP32[(HEAP32[((((HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU16[(j+22|0)>>1]&65535)<<3)|0)+4|0)>>2]+8|0)>>2]|0)?17:18;break;case 17:p=1;e=18;break;case 18:e=19;break;case 19:e=0!=(p|0)?20:21;break;case 20:j=_GetNextFactPatternNode(g,1,j);e=27;break;case 21:e=0!=(_EvaluatePatternExpression(g,j,HEAP32[(j+28|0)>>2],n)|0)?22:25;break;case 22:e=
0!=(HEAPU32[((j|0)+12|0)>>2]>>>2&1|0)?23:24;break;case 23:_ProcessFactAlphaMatch(g,i,l,j);e=24;break;case 24:j=_GetNextFactPatternNode(g,0,j);e=26;break;case 25:j=_GetNextFactPatternNode(g,1,j);e=26;break;case 26:e=27;break;case 27:e=34;break;case 28:e=0!=(HEAPU32[((j|0)+12|0)>>2]>>>1&1|0)?29:33;break;case 29:e=(o|0)==(HEAPU16[(j+22|0)>>1]&65535|0)?30:31;break;case 30:_ProcessMultifieldNode(g,j,l,m,k);e=32;break;case 31:_ProcessMultifieldNode(g,j,l,m,0);e=32;break;case 32:j=_GetNextFactPatternNode(g,
1,j);e=33;break;case 33:e=34;break;case 34:e=35;break;case 35:e=5;break;case 36:return;default:assert(0,"bad label: "+e)}}_FactPatternMatch.X=1;
function _EvaluatePatternExpression(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b;g=h;i=f;j=c;k=a;d=0==(j|0)?3:4;break;case 3:e=1;d=37;break;case 4:d=HEAPU16[(j|0)>>1]&65535;d=60==(d|0)?5:61==(d|0)?6:53==(d|0)?7:8;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]=j;d=_FactPNConstant1(g,HEAP32[(j+
4|0)>>2],l);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]=e;e=d;d=37;break;case 6:e=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]=j;d=_FactPNConstant2(g,HEAP32[(j+4|0)>>2],l);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]=e;e=d;d=37;break;case 7:e=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]=j;d=_FactSlotLength(g,HEAP32[(j+4|0)>>2],l);HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+176|0)>>2]|0)>>2]=e;e=d;d=37;break;case 8:d=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+4|0)>>2]|0)?9:20;break;case 9:j=HEAP32[(j+8|0)>>2];d=10;break;case 10:d=0!=(j|0)?11:19;break;case 11:d=1==(_EvaluatePatternExpression(g,i,j,k)|0)?12:15;break;case 12:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?13:14;break;case 13:e=0;d=37;break;case 14:e=1;d=37;break;case 15:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?16:17;break;case 16:e=
0;d=37;break;case 17:d=18;break;case 18:j=HEAP32[(j+12|0)>>2];d=10;break;case 19:e=0;d=37;break;case 20:d=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]|0)>>2]|0)?21:30;break;case 21:j=HEAP32[(j+8|0)>>2];d=22;break;case 22:d=0!=(j|0)?23:29;break;case 23:d=0==(_EvaluatePatternExpression(g,i,j,k)|0)?24:25;break;case 24:e=0;d=37;break;case 25:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?26:27;break;case 26:e=0;d=37;break;case 27:d=28;break;case 28:j=HEAP32[(j+
12|0)>>2];d=22;break;case 29:e=1;d=37;break;case 30:d=31;break;case 31:d=0!=(_EvaluateExpression(g,j,l)|0)?32:33;break;case 32:_PatternNetErrorMessage(g,i);e=0;d=37;break;case 33:d=(HEAP32[(l+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?34:36;break;case 34:d=2==(HEAPU16[(l+4|0)>>1]&65535|0)?35:36;break;case 35:e=0;d=37;break;case 36:e=1;d=37;break;case 37:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EvaluatePatternExpression.X=1;
function _ProcessFactAlphaMatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;b=c;g=a;i=_CreateAlphaMatch(d,e,b,g|0);j=HEAP32[(e+20|0)>>2];b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(d,12);b=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=5;break;case 5:HEAP32[(e+20|0)>>2]=l;HEAP32[(HEAP32[(e+20|0)>>2]|0)>>2]=j;HEAP32[(HEAP32[(e+20|0)>>2]+8|0)>>2]=g;HEAP32[(HEAP32[(e+20|0)>>2]+4|0)>>2]=i;k=HEAP32[((g|0)+8|0)>>2];b=6;break;case 6:b=0!=(k|0)?7:9;break;case 7:_NetworkAssert(d,i,k,1);b=8;break;case 8:k=HEAP32[(k+32|0)>>2];b=6;break;case 9:return;default:assert(0,"bad label: "+b)}}
_ProcessFactAlphaMatch.X=1;function _MarkFactPatternForIncrementalReset(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=0==(HEAPU32[((a|0)+12|0)>>2]>>>3&1|0)?3:4;break;case 3:h=7;break;case 4:h=5;break;case 5:h=0!=(a|0)?6:7;break;case 6:h=(a|0)+12|0;HEAP32[h>>2]=HEAP32[h>>2]&-9|(b&1)<<3;a=HEAP32[(a+36|0)>>2];h=5;break;case 7:return;default:assert(0,"bad label: "+h)}}
function _ProcessMultifieldNode(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;d=c;i=a;j=b;n=HEAP32[((((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU16[(g+22|0)>>1]&65535)<<3)|0)+4|0)>>2];l=d;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?3:4;break;case 3:var o=_genalloc(e,20);d=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|
0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=5;break;case 5:k=o;HEAP32[(k|0)>>2]=(HEAPU16[(g+20|0)>>1]&65535)-1|0;HEAP16[(k+4|0)>>1]=HEAP16[(g+22|0)>>1];HEAP32[(k+8|0)>>2]=((HEAPU16[(g+20|0)>>1]&65535)-1|0)+j|0;HEAP32[(k+16|0)>>2]=0;d=0==(i|0)?6:7;break;case 6:d=k;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2]=
d;d=8;break;case 7:HEAP32[(i+16|0)>>2]=k;d=8;break;case 8:d=0!=(HEAPU32[((g|0)+12|0)>>2]>>>6&1|0)?9:20;break;case 9:HEAP32[(k+12|0)>>2]=HEAP32[(n+8|0)>>2]-((HEAPU16[(g+24|0)>>1]&65535)+1|0)|0;d=(HEAP32[(k+12|0)>>2]|0)<(HEAP32[(k+8|0)>>2]|0)?10:11;break;case 10:HEAP32[(k+12|0)>>2]=HEAP32[(k+8|0)>>2]-1|0;d=11;break;case 11:d=0==(HEAP32[(g+28|0)>>2]|0)?12:13;break;case 12:d=14;break;case 13:d=0!=(_EvaluatePatternExpression(e,g,HEAP32[(g+28|0)>>2],(HEAPU16[(g+20|0)>>1]&65535)+j|0)|0)?14:17;break;case 14:d=
0!=(HEAPU32[((g|0)+12|0)>>2]>>>2&1|0)?15:16;break;case 15:_ProcessFactAlphaMatch(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+188|0)>>2],HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2],g);d=16;break;case 16:_FactPatternMatch(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+188|0)>>2],HEAP32[(g+32|0)>>2],0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2],k);d=17;break;case 17:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|
0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0!=(i|0)?18:19;break;case 18:HEAP32[(i+16|0)>>2]=0;d=19;break;case 19:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2]=l;d=31;break;case 20:m=HEAP32[(n+8|0)>>2]-(HEAP32[(k+8|0)>>2]+(HEAPU16[(g+24|0)>>1]&65535)|0)|0;d=21;break;case 21:d=0<=(m|0)?22:28;break;case 22:HEAP32[(k+
12|0)>>2]=HEAP32[(k+8|0)>>2]+(m-1|0)|0;d=0==(HEAP32[(g+28|0)>>2]|0)?23:24;break;case 23:d=25;break;case 24:d=0!=(_EvaluatePatternExpression(e,g,HEAP32[(g+28|0)>>2],(HEAPU16[(g+20|0)>>1]&65535)+j|0)|0)?25:26;break;case 25:_FactPatternMatch(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+188|0)>>2],HEAP32[(g+32|0)>>2],(j+m|0)-1|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2],k);d=26;break;case 26:d=27;break;case 27:m=m-1|0;d=21;break;case 28:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+
16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0!=(i|0)?29:30;break;case 29:HEAP32[(i+16|0)>>2]=0;d=30;break;case 30:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2]=l;d=31;break;case 31:return;default:assert(0,"bad label: "+d)}}
_ProcessMultifieldNode.X=1;function _FactsIncrementalReset(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=_EnvGetNextFact(c,0);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:_FactPatternMatch(c,a,HEAP32[(HEAP32[(a+16|0)>>2]+36|0)>>2],0,0,0);f=5;break;case 5:a=_EnvGetNextFact(c,a);f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _PatternNetErrorMessage(h,f){var c=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;_PrintErrorID(b,STRING_TABLE.__str1426|0,1,1);_EnvPrintRouter(b,STRING_TABLE.__str11427|0,STRING_TABLE.__str21428|0);_EnvPrintRouter(b,STRING_TABLE.__str11427|0,STRING_TABLE.__str31429|0);_PrintFact(b,STRING_TABLE.__str11427|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2],0,0);
_EnvPrintRouter(b,STRING_TABLE.__str11427|0,STRING_TABLE.__str41430|0);a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2]+16|0)>>2]+28|0)>>2]&1|0)?3:4;break;case 3:a=HEAPU16[(d+20|0)>>1]&65535;_sprintf(e|0,STRING_TABLE.__str51431|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=9;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2]+16|0)>>2]+24|0)>>2];i=0;a=5;break;
case 5:a=(i|0)<(HEAPU16[(d+22|0)>>1]&65535|0)?6:8;break;case 6:g=HEAP32[(g+16|0)>>2];a=7;break;case 7:i=i+1|0;a=5;break;case 8:a=HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2];_sprintf(e|0,STRING_TABLE.__str61432|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));a=9;break;case 9:_EnvPrintRouter(b,STRING_TABLE.__str11427|0,e|0);_TraceErrorToJoin(b,d,0);_EnvPrintRouter(b,STRING_TABLE.__str11427|0,STRING_TABLE.__str41430|0);STACKTOP=c;return;
default:assert(0,"bad label: "+a)}}_PatternNetErrorMessage.X=1;
function _TraceErrorToJoin(h,f,c){var a=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;b=3;break;case 3:b=0!=(e|0)?4:15;break;case 4:b=0!=(HEAPU32[((e|0)+12|0)>>2]>>>2&1|0)?5:10;break;case 5:i=HEAP32[((e|0)+8|0)>>2];b=6;break;case 6:b=0!=(i|0)?7:9;break;case 7:b=j|0;var k=_GetPatternNumberFromJoin(i);_sprintf(b,STRING_TABLE.__str71433|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,tempInt));_EnvPrintRouter(d,STRING_TABLE.__str11427|0,j|0);_TraceErrorToRule(d,i,STRING_TABLE.__str81434|0);b=8;break;case 8:i=HEAP32[(i+32|0)>>2];b=6;break;case 9:b=11;break;case 10:_TraceErrorToJoin(d,HEAP32[(e+32|0)>>2],1);b=11;break;case 11:b=0!=(g|0)?12:13;break;case 12:e=HEAP32[(e+44|0)>>2];b=14;break;case 13:e=0;b=14;break;case 14:b=3;break;case 15:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_TraceErrorToJoin.X=1;
function _InitializeFacts(h){var f=STACKTOP;STACKTOP+=144;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+72;assert(!0,"memcpy given 72 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var a=_InitializeFacts_factInfo>>2,b=f>>2,d=a+18;a<d;a++,b++)HEAP32[b]=HEAP32[a];b=c>>2;for(d=b+18;b<d;b++)HEAP32[b]=0;HEAP32[(c+24|0)>>2]=-1;HEAP8[c+29|0]=-128;HEAP32[(c+48|0)>>2]=1;_AllocateEnvironmentData(h,3,200,608);b=HEAP32[(HEAP32[(h+16|0)>>2]+
12|0)>>2]+100|0;assert(!0,"memcpy given 72 bytes to copy. Problem with quantum=1 corrections perhaps?");a=f>>2;b>>=2;for(d=a+18;a<d;a++,b++)HEAP32[b]=HEAP32[a];HEAP32[(c|0)>>2]=HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+100|0;b=HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+8|0;assert(!0,"memcpy given 72 bytes to copy. Problem with quantum=1 corrections perhaps?");a=c>>2;b>>=2;for(d=a+18;a<d;a++,b++)HEAP32[b]=HEAP32[a];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+196|0)>>2]=-1;_InitializeFactHashTable(h);_EnvAddResetFunction(h,
STRING_TABLE.__str11440|0,610,60);_AddClearReadyFunction(h,STRING_TABLE.__str11440|0,612,0);_AddCleanupFunction(h,STRING_TABLE.__str11440|0,614,0);_InitializeFactPatterns(h);_AddWatchItem(h,STRING_TABLE.__str11440|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+4|0,80,616,618);_FactCommandDefinitions(h);_FactFunctionDefinitions(h);_SetupFactQuery(h);_FactBinarySetup(h);_FactPatternsCompilerSetup(h);STACKTOP=f}_InitializeFacts.X=1;
function _PrintFactIdentifier(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");c=HEAP32[(c+24|0)>>2];_sprintf(a|0,STRING_TABLE.__str31442|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));_EnvPrintRouter(h,f,a|0);STACKTOP=a}
function _EnvGetNextFact(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2];c=7;break;case 4:c=0!=(HEAPU32[(d+28|0)>>2]>>>15&1|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=HEAP32[(d+36|0)>>2];c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}function _EnvIncrementFactCount(h,f){var c=(f|0)+8|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}
function _EnvDecrementFactCount(h,f){var c=(f|0)+8|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0}
function _PrintFactIdentifierInLongForm(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_EnvPrintRouter(b,d,STRING_TABLE.__str41443|0);a=4;break;case 4:a=(e|0)!=(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+8|0)?5:6;break;case 5:_EnvPrintRouter(b,d,STRING_TABLE.__str51444|0);_PrintLongInteger(b,d,HEAP32[(e+24|0)>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str61445|0);a=7;break;case 6:_EnvPrintRouter(b,d,STRING_TABLE.__str71446|
0);a=7;break;case 7:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?8:9;break;case 8:_EnvPrintRouter(b,d,STRING_TABLE.__str41443|0);a=9;break;case 9:return;default:assert(0,"bad label: "+a)}}_PrintFactIdentifierInLongForm.X=1;
function _EnvRetract(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=HEAP32[(d+16|0)>>2];c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(b,STRING_TABLE.__str111450|0,1,1);_EnvPrintRouter(b,STRING_TABLE.__str121451|0,STRING_TABLE.__str131452|0);a=0;c=35;break;case 4:c=0==(d|0)?5:6;break;case 5:_RemoveAllFacts(b);a=1;c=35;break;case 6:c=0!=(HEAPU32[(d+28|0)>>2]>>>15&1|0)?7:8;break;case 7:a=0;c=35;break;case 8:c=0!=(HEAPU32[(HEAP32[(d+16|0)>>
2]+28|0)>>2]>>>1&1|0)?9:10;break;case 9:_EnvPrintRouter(b,STRING_TABLE.__str141453|0,STRING_TABLE.__str151454|0);_PrintFactWithIdentifier(b,STRING_TABLE.__str141453|0,d);_EnvPrintRouter(b,STRING_TABLE.__str141453|0,STRING_TABLE.__str161455|0);c=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]|0)>>2]=1;_RemoveEntityDependencies(b,d);_RemoveHashedFact(b,d);c=(d|0)==(HEAP32[(e+44|0)>>2]|0)?11:12;break;case 11:HEAP32[(e+44|0)>>2]=HEAP32[(d+40|0)>>2];c=12;break;case 12:c=0==(HEAP32[(d+40|
0)>>2]|0)?13:16;break;case 13:HEAP32[(e+40|0)>>2]=HEAP32[(HEAP32[(e+40|0)>>2]+44|0)>>2];c=0!=(HEAP32[(e+40|0)>>2]|0)?14:15;break;case 14:HEAP32[(HEAP32[(e+40|0)>>2]+40|0)>>2]=0;c=15;break;case 15:c=19;break;case 16:HEAP32[(HEAP32[(d+40|0)>>2]+44|0)>>2]=HEAP32[(d+44|0)>>2];c=0!=(HEAP32[(d+44|0)>>2]|0)?17:18;break;case 17:HEAP32[(HEAP32[(d+44|0)>>2]+40|0)>>2]=HEAP32[(d+40|0)>>2];c=18;break;case 18:c=19;break;case 19:c=(d|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+84|0)>>2]|0)?20:21;break;case 20:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+12|0)>>2]+84|0)>>2]=HEAP32[(d+32|0)>>2];c=21;break;case 21:c=0==(HEAP32[(d+32|0)>>2]|0)?22:25;break;case 22:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2]+36|0)>>2];c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2]|0)?23:24;break;case 23:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2]+32|0)>>2]=0;c=24;break;case 24:c=28;break;case 25:HEAP32[(HEAP32[(d+32|0)>>2]+36|0)>>2]=HEAP32[(d+36|0)>>
2];c=0!=(HEAP32[(d+36|0)>>2]|0)?26:27;break;case 26:HEAP32[(HEAP32[(d+36|0)>>2]+32|0)>>2]=HEAP32[(d+32|0)>>2];c=27;break;case 27:c=28;break;case 28:_FactDeinstall(b,d);c=HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+16|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+20|0;HEAP32[c>>2]=HEAP32[c>>2]+((HEAP32[((d+48|0)+8|0)>>2]<<3|0)+72|0)|0;HEAP32[(d+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+80|0)>>2]=d;c=d+28|0;
HEAP32[c>>2]=HEAP32[c>>2]&-32769|32768;_SetEvaluationError(b,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]=1;_NetworkRetract(b,HEAP32[(d+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]=0;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]|0)>>2]|0)?29:30;break;case 29:_FlushGarbagePartialMatches(b);c=30;break;case 30:_ForceLogicalRetractions(b);c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?31:34;break;case 31:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+160|0)>>2]|0)>>2]|0)?34:32;break;case 32:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]|0)?33:34;break;case 33:_PeriodicCleanup(b,1,0);c=34;break;case 34:a=1;c=35;break;case 35:return a;default:assert(0,"bad label: "+c)}}_EnvRetract.X=1;
function _DecrementFactBasisCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=f;_EnvDecrementFactCount(a,c);b=c+48|0;d=0;c=3;break;case 3:c=(d|0)<(HEAP32[(b+8|0)>>2]|0)?4:6;break;case 4:_AtomDeinstall(a,HEAPU16[((b+16|0)+(d<<3)|0)>>1]&65535,HEAP32[(((b+16|0)+(d<<3)|0)+4|0)>>2]);c=5;break;case 5:d=d+1|0;c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _IncrementFactBasisCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=f;_EnvIncrementFactCount(a,c);b=c+48|0;d=0;c=3;break;case 3:c=(d|0)<(HEAP32[(b+8|0)>>2]|0)?4:6;break;case 4:_AtomInstall(a,HEAPU16[((b+16|0)+(d<<3)|0)>>1]&65535,HEAP32[(((b+16|0)+(d<<3)|0)+4|0)>>2]);c=5;break;case 5:d=d+1|0;c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}function _MatchFactFunction(h,f){_FactPatternMatch(h,f,HEAP32[(HEAP32[(f+16|0)>>2]+36|0)>>2],0,0,0)}
function _DeallocateFactData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g;c=h;e=0;f=3;break;case 3:f=7717>(e|0)?4:9;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+180|0)>>2]+(e<<2)|0)>>2];f=5;break;case 5:f=0!=(a|0)?6:7;break;case 6:f=HEAP32[(a+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=5;break;case 7:f=8;break;case 8:e=e+1|0;f=3;break;case 9:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+180|0)>>2],30868);b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+88|0)>>2];f=10;break;case 10:f=0!=(b|0)?11:15;break;case 11:d=HEAP32[(b+36|0)>>2];g=HEAP32[(b+20|0)>>2];f=12;break;case 12:f=0!=(g|0)?13:14;break;case 13:f=HEAP32[(g|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|
0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];g=f;f=12;break;case 14:_ReturnFact(c,b);b=d;f=10;break;case 15:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+80|0)>>2];f=16;break;case 16:f=0!=(b|0)?17:18;break;case 17:d=HEAP32[(b+36|0)>>2];_ReturnFact(c,b);b=d;
f=16;break;case 18:return;default:assert(0,"bad label: "+f)}}_DeallocateFactData.X=1;function _ResetFacts(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+92|0)>>2]=0;_RemoveAllFacts(h)}function _ClearFactsReady(h){var f;for(f=2;;)switch(f){case 2:var c;f=h;HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+12|0)>>2]+92|0)>>2]=0;_RemoveAllFacts(f);f=0!=(_EnvGetNextFact(f,0)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=1;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _RemoveGarbageFacts(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;d=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+80|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:12;break;case 4:b=HEAP32[(a+36|0)>>2];f=0==(HEAP32[((a|0)+8|0)>>2]|0)?5:10;break;case 5:f=(HEAP32[(a+28|0)>>2]&32767|0)>(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?6:10;break;case 6:f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+16|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+20|0;HEAP32[f>>
2]=HEAP32[f>>2]-((HEAP32[((a+48|0)+8|0)>>2]<<3|0)+72|0)|0;_ReturnFact(c,a);f=0==(d|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+80|0)>>2]=b;f=9;break;case 8:HEAP32[(d+36|0)>>2]=b;f=9;break;case 9:f=11;break;case 10:d=a;f=11;break;case 11:a=b;f=3;break;case 12:return;default:assert(0,"bad label: "+f)}}_RemoveGarbageFacts.X=1;
function _PrintFactWithIdentifier(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=HEAP32[(c+24|0)>>2];_sprintf(a|0,STRING_TABLE.__str21441|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));_EnvPrintRouter(h,f,a|0);_PrintFact(h,f,c,0,0);STACKTOP=a}
function _PrintFact(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=b;d=0==(HEAP32[(HEAP32[(i+16|0)>>2]+28|0)>>2]&1|0)?3:4;break;case 3:_PrintTemplateFact(e,g,i,j,k);d=7;break;case 4:_EnvPrintRouter(e,g,STRING_TABLE.__str81447|0);_EnvPrintRouter(e,g,HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]|0)>>2]+16|0)>>2]);l=HEAP32[(((i+48|0)+16|0)+4|0)>>2];d=0!=(HEAP32[(l+8|0)>>2]|0)?5:6;break;case 5:_EnvPrintRouter(e,g,STRING_TABLE.__str91448|0);_PrintMultifield(e,g,l,0,HEAP32[(l+8|0)>>
2]-1|0,0);d=6;break;case 6:_EnvPrintRouter(e,g,STRING_TABLE.__str101449|0);d=7;break;case 7:return;default:assert(0,"bad label: "+d)}}_PrintFact.X=1;function _RemoveAllFacts(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+88|0)>>2]|0)?4:5;break;case 4:_EnvRetract(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+88|0)>>2]);f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _FactDeinstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=HEAP32[(HEAP32[(a+16|0)>>2]+12|0)>>2]+96|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=b+48|0;c=HEAP32[(b+16|0)>>2]+32|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;e=0;c=3;break;case 3:c=(e|0)<(HEAP32[(d+8|0)>>2]|0)?4:6;break;case 4:_AtomDeinstall(a,HEAPU16[((d+16|0)+(e<<3)|0)>>1]&65535,HEAP32[(((d+16|0)+(e<<3)|0)+4|0)>>2]);c=5;break;case 5:e=e+1|0;c=3;break;case 6:a=(b|0)+8|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;return;default:assert(0,"bad label: "+
c)}}_FactDeinstall.X=1;
function _EnvAssert(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;j=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:_ReturnFact(b,j);_PrintErrorID(b,STRING_TABLE.__str111450|0,2,1);_EnvPrintRouter(b,STRING_TABLE.__str121451|0,STRING_TABLE.__str171456|0);a=0;c=29;break;case 4:e=HEAP32[((j+48|0)+8|0)>>2];i=(j+48|0)+16|0;g=0;c=5;break;case 5:c=g>>>0<e>>>0?6:10;break;case 6:c=175==(HEAPU16[(i+(g<<3)|0)>>1]&65535|0)?7:8;break;case 7:HEAP16[(i+(g<<3)|0)>>
1]=2;c=_EnvAddSymbol(b,STRING_TABLE.__str181457|0);HEAP32[((i+(g<<3)|0)+4|0)>>2]=c;c=8;break;case 8:c=9;break;case 9:g=g+1|0;c=5;break;case 10:d=_HandleFactDuplication(b,j);c=0>(d|0)?11:12;break;case 11:a=0;c=29;break;case 12:c=0==(_AddLogicalDependencies(b,j,0)|0)?13:14;break;case 13:_ReturnFact(b,j);a=0;c=29;break;case 14:_AddHashedFact(b,j,d);HEAP32[(j+36|0)>>2]=0;HEAP32[(j+20|0)>>2]=0;HEAP32[(j+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+84|0)>>2];c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+12|0)>>2]+84|0)>>2]|0)?15:16;break;case 15:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2]=j;c=17;break;case 16:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+84|0)>>2]+36|0)>>2]=j;c=17;break;case 17:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+84|0)>>2]=j;HEAP32[(j+40|0)>>2]=HEAP32[(HEAP32[(j+16|0)>>2]+44|0)>>2];HEAP32[(j+44|0)>>2]=0;c=0==(HEAP32[(HEAP32[(j+16|0)>>2]+44|0)>>2]|0)?18:19;break;case 18:HEAP32[(HEAP32[(j+16|0)>>2]+40|0)>>2]=j;c=20;break;case 19:HEAP32[(HEAP32[(HEAP32[(j+
16|0)>>2]+44|0)>>2]+44|0)>>2]=j;c=20;break;case 20:HEAP32[(HEAP32[(j+16|0)>>2]+44|0)>>2]=j;c=HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+92|0;var k=HEAP32[c>>2];HEAP32[c>>2]=k+1|0;HEAP32[(j+24|0)>>2]=k;c=HEAP32[(HEAP32[(b+16|0)>>2]+64|0)>>2]+8|0;k=HEAP32[c>>2];HEAP32[c>>2]=k+1|0;HEAP32[((j|0)+12|0)>>2]=k;_FactInstall(b,j);c=0!=(HEAPU32[(HEAP32[(j+16|0)>>2]+28|0)>>2]>>>1&1|0)?21:22;break;case 21:_EnvPrintRouter(b,STRING_TABLE.__str141453|0,STRING_TABLE.__str191458|0);_PrintFactWithIdentifier(b,STRING_TABLE.__str141453|
0,j);_EnvPrintRouter(b,STRING_TABLE.__str141453|0,STRING_TABLE.__str161455|0);c=22;break;case 22:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]|0)>>2]=1;_CheckTemplateFact(b,j);_SetEvaluationError(b,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]=1;_FactPatternMatch(b,j,HEAP32[(HEAP32[(j+16|0)>>2]+36|0)>>2],0,0,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]=0;_ForceLogicalRetractions(b);c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]|0)>>2]|0)?23:24;break;case 23:_FlushGarbagePartialMatches(b);
c=24;break;case 24:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?25:28;break;case 25:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+160|0)>>2]|0)>>2]|0)?28:26;break;case 26:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]|0)?27:28;break;case 27:_PeriodicCleanup(b,1,0);c=28;break;case 28:a=j;c=29;break;case 29:return a;default:assert(0,"bad label: "+c)}}_EnvAssert.X=1;
function _ReturnFact(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=b+48|0;g=0;c=3;break;case 3:c=g>>>0<HEAPU32[(d+8|0)>>2]>>>0?4:8;break;case 4:c=4==(HEAPU16[((d+16|0)+(g<<3)|0)>>1]&65535|0)?5:6;break;case 5:_ReturnMultifield(a,HEAP32[(((d+16|0)+(g<<3)|0)+4|0)>>2]);c=6;break;case 6:c=7;break;case 7:g=g+1|0;c=3;break;case 8:c=0==(HEAP32[((b+48|0)+8|0)>>2]|0)?9:10;break;case 9:e=1;c=11;break;case 10:e=HEAP32[((b+48|0)+8|0)>>2];c=11;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+28|0)>>2]=((e-1|0)<<3|0)+72|0;c=500>HEAPU32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]>>>0?12:13;break;case 12:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+
28|0)>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=14;break;case 13:_rm3(a,b,((e-1|0)<<3|0)+72|0);c=14;break;case 14:return;default:assert(0,"bad label: "+c)}}_ReturnFact.X=1;
function _FactInstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=HEAP32[(HEAP32[(a+16|0)>>2]+12|0)>>2]+96|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=HEAP32[(b+16|0)>>2]+32|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;d=b+48|0;e=0;c=3;break;case 3:c=(e|0)<(HEAP32[(d+8|0)>>2]|0)?4:6;break;case 4:_AtomInstall(a,HEAPU16[((d+16|0)+(e<<3)|0)>>1]&65535,HEAP32[(((d+16|0)+(e<<3)|0)+4|0)>>2]);c=5;break;case 5:e=e+1|0;c=3;break;case 6:a=(b|0)+8|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;return;default:assert(0,"bad label: "+
c)}}_FactInstall.X=1;
function _EnvCreateFact(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=12;break;case 4:c=0==(HEAP32[(d+28|0)>>2]&1|0)?5:10;break;case 5:e=_CreateFactBySize(b,HEAPU16[(d+30|0)>>1]&65535);g=0;c=6;break;case 6:c=(g|0)<(HEAPU16[(d+30|0)>>1]&65535|0)?7:9;break;case 7:HEAP16[(((e+48|0)+16|0)+(g<<3)|0)>>1]=175;c=8;break;case 8:g=g+1|0;c=6;break;case 9:c=11;break;case 10:e=_CreateFactBySize(b,1);HEAP16[((e+48|0)+16|0)>>1]=4;c=_CreateMultifield2(b,0);HEAP32[(((e+
48|0)+16|0)+4|0)>>2]=c;c=11;break;case 11:HEAP32[(e+16|0)>>2]=d;a=e;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_EnvCreateFact.X=1;
function _CreateFactBySize(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0>=b>>>0?3:4;break;case 3:d=1;c=5;break;case 4:d=b;c=5;break;case 5:c=500>(((d-1|0)<<3|0)+72|0)>>>0?6:7;break;case 6:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+72|0)<<2)|0)>>2]|0)?8:9;break;case 7:c=8;break;case 8:var e=_gm3(a,((d-1|0)<<3|0)+72|0);c=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+72|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+72|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:return c=e,d=c+28|0,HEAP32[d>>2]=HEAP32[d>>2]&-32768|HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]&32767,d=c+28|0,HEAP32[d>>2]&=-32769,HEAP32[(c+24|0)>>2]=0,HEAP32[((c|0)+8|0)>>2]=0,HEAP32[(c|
0)>>2]=HEAP32[(HEAP32[(a+16|0)>>2]+12|0)>>2]+100|0,HEAP32[((c|0)+4|0)>>2]=0,HEAP32[(c+16|0)>>2]=0,HEAP32[(c+36|0)>>2]=0,HEAP32[(c+32|0)>>2]=0,HEAP32[(c+40|0)>>2]=0,HEAP32[(c+44|0)>>2]=0,HEAP32[(c+20|0)>>2]=0,HEAP32[((c+48|0)+8|0)>>2]=b,HEAP16[((c+48|0)+4|0)>>1]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]&65535,HEAP32[(c+48|0)>>2]=0,c;default:assert(0,"bad label: "+c)}}_CreateFactBySize.X=1;function _EnvFactIndex(h,f){return HEAP32[(f+24|0)>>2]}
function _EnvGetFactSlot(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;l=HEAP32[(i+16|0)>>2];d=0!=(HEAP32[(l+28|0)>>2]&1|0)?3:6;break;case 3:d=0!=(j|0)?4:5;break;case 4:e=0;d=13;break;case 5:HEAP16[(k+4|0)>>1]=HEAP16[((i+48|0)+16|0)>>1];HEAP32[(k+8|0)>>2]=HEAP32[(((i+48|0)+16|0)+4|0)>>2];HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=HEAP32[(HEAP32[(k+8|0)>>
2]+8|0)>>2]-1|0;e=1;d=13;break;case 6:d=l;var n=_EnvAddSymbol(g,j);d=0==(_FindSlot(d,n,m)|0)?7:8;break;case 7:e=0;d=13;break;case 8:HEAP16[(k+4|0)>>1]=HEAP16[(((i+48|0)+16|0)+(((HEAP16[m>>1]<<16>>16)-1|0)<<3)|0)>>1];HEAP32[(k+8|0)>>2]=HEAP32[((((i+48|0)+16|0)+(((HEAP16[m>>1]<<16>>16)-1|0)<<3)|0)+4|0)>>2];d=4==(HEAPU16[(k+4|0)>>1]&65535|0)?9:10;break;case 9:HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]-1|0;d=10;break;case 10:d=175==(HEAPU16[(k+4|0)>>1]&65535|0)?11:12;
break;case 11:e=0;d=13;break;case 12:e=1;d=13;break;case 13:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EnvGetFactSlot.X=1;
function _EnvPutFactSlot(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n=b;g=h;i=f;j=c;k=a;l=HEAP32[(i+16|0)>>2];d=0!=(HEAP32[(l+28|0)>>2]&1|0)?3:9;break;case 3:d=0!=(j|0)?5:4;break;case 4:d=4!=(HEAPU16[(k+4|0)>>1]&65535|0)?5:6;break;case 5:e=0;d=22;break;case 6:d=4==(HEAPU16[((i+48|0)+16|0)>>1]&65535|0)?7:8;break;case 7:_ReturnMultifield(g,HEAP32[(((i+48|0)+16|0)+4|0)>>
2]);d=8;break;case 8:HEAP16[((i+48|0)+16|0)>>1]=HEAP16[(k+4|0)>>1];e=_DOToMultifield(g,k);HEAP32[(((i+48|0)+16|0)+4|0)>>2]=e;e=1;d=22;break;case 9:m=l;d=_EnvAddSymbol(g,j);m=d=_FindSlot(m,d,n);d=0==(d|0)?10:11;break;case 10:e=0;d=22;break;case 11:d=0==(HEAP32[(m+4|0)>>2]&1|0)?12:13;break;case 12:d=4==(HEAPU16[(k+4|0)>>1]&65535|0)?15:13;break;case 13:d=1==(HEAP32[(m+4|0)>>2]&1|0)?14:16;break;case 14:d=4!=(HEAPU16[(k+4|0)>>1]&65535|0)?15:16;break;case 15:e=0;d=22;break;case 16:d=4==(HEAPU16[(((i+48|
0)+16|0)+(((HEAP16[n>>1]<<16>>16)-1|0)<<3)|0)>>1]&65535|0)?17:18;break;case 17:_ReturnMultifield(g,HEAP32[((((i+48|0)+16|0)+(((HEAP16[n>>1]<<16>>16)-1|0)<<3)|0)+4|0)>>2]);d=18;break;case 18:HEAP16[(((i+48|0)+16|0)+(((HEAP16[n>>1]<<16>>16)-1|0)<<3)|0)>>1]=HEAP16[(k+4|0)>>1];d=4==(HEAPU16[(k+4|0)>>1]&65535|0)?19:20;break;case 19:d=_DOToMultifield(g,k);HEAP32[((((i+48|0)+16|0)+(((HEAP16[n>>1]<<16>>16)-1|0)<<3)|0)+4|0)>>2]=d;d=21;break;case 20:HEAP32[((((i+48|0)+16|0)+(((HEAP16[n>>1]<<16>>16)-1|0)<<3)|
0)+4|0)>>2]=HEAP32[(k+8|0)>>2];d=21;break;case 21:e=1;d=22;break;case 22:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EnvPutFactSlot.X=1;
function _EnvAssignFactSlotDefaults(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c;d=h;e=f;g=HEAP32[(e+16|0)>>2];a=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:4;break;case 3:b=1;a=13;break;case 4:j=0;i=HEAP32[(g+24|0)>>2];a=5;break;case 5:a=(j|0)<(HEAPU16[(g+30|0)>>1]&65535|0)?6:12;break;case 6:a=175!=(HEAPU16[(((e+48|0)+16|0)+(j<<3)|0)>>1]&65535|0)?7:8;break;case 7:a=11;break;case 8:a=
0!=(_DeftemplateSlotDefault(d,g,i,k,0)|0)?9:10;break;case 9:HEAP16[(((e+48|0)+16|0)+(j<<3)|0)>>1]=HEAP16[(k+4|0)>>1];HEAP32[((((e+48|0)+16|0)+(j<<3)|0)+4|0)>>2]=HEAP32[(k+8|0)>>2];a=10;break;case 10:a=11;break;case 11:j=j+1|0;i=HEAP32[(i+16|0)>>2];a=5;break;case 12:b=1;a=13;break;case 13:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_EnvAssignFactSlotDefaults.X=1;
function _DeftemplateSlotDefault(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;g=h;d=f;i=c;j=a;k=b;d=0!=(HEAP32[(d+28|0)>>2]&1|0)?3:4;break;case 3:e=0;d=19;break;case 4:d=0!=(HEAPU32[(i+4|0)>>2]>>>1&1|0)?5:6;break;case 5:e=0;d=19;break;case 6:d=0!=(HEAPU32[(i+4|0)>>2]>>>2&1|0)?7:11;break;case 7:d=0!=(HEAP32[(i+4|0)>>2]&1|0)?8:9;break;case 8:_StoreInMultifield(g,j,HEAP32[(i+12|0)>>2],k);d=10;break;case 9:HEAP16[(j+4|0)>>1]=HEAP16[(HEAP32[(i+12|0)>>2]|0)>>1];HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(i+
12|0)>>2]+4|0)>>2];d=10;break;case 10:d=17;break;case 11:d=0!=(HEAPU32[(i+4|0)>>2]>>>3&1|0)?12:15;break;case 12:d=0!=(_EvaluateAndStoreInDataObject(g,HEAP32[(i+4|0)>>2]&1,HEAP32[(i+12|0)>>2],j,k)|0)?14:13;break;case 13:e=0;d=19;break;case 14:d=16;break;case 15:_DeriveDefaultFromConstraints(g,HEAP32[(i+8|0)>>2],j,HEAP32[(i+4|0)>>2]&1,k);d=16;break;case 16:d=17;break;case 17:d=18;break;case 18:e=1;d=19;break;case 19:return e;default:assert(0,"bad label: "+d)}}_DeftemplateSlotDefault.X=1;
function _CopyFactSlotValues(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;i=HEAP32[(g+16|0)>>2];a=(HEAP32[(e+16|0)>>2]|0)!=(i|0)?3:4;break;case 3:b=0;a=12;break;case 4:j=0;a=5;break;case 5:a=(j|0)<(HEAPU16[(i+30|0)>>1]&65535|0)?6:11;break;case 6:HEAP16[(((e+48|0)+16|0)+(j<<3)|0)>>1]=HEAP16[(((g+48|0)+16|0)+(j<<3)|0)>>1];a=4!=(HEAPU16[(((g+48|0)+16|0)+(j<<3)|0)>>1]&65535|0)?7:8;break;case 7:HEAP32[((((e+48|0)+16|0)+(j<<3)|0)+4|0)>>2]=HEAP32[((((g+48|0)+16|0)+(j<<3)|0)+4|0)>>
2];a=9;break;case 8:a=_CopyMultifield(d,HEAP32[((((g+48|0)+16|0)+(j<<3)|0)+4|0)>>2]);HEAP32[((((e+48|0)+16|0)+(j<<3)|0)+4|0)>>2]=a;a=9;break;case 9:a=10;break;case 10:j=j+1|0;a=5;break;case 11:b=1;a=12;break;case 12:return b;default:assert(0,"bad label: "+a)}}_CopyFactSlotValues.X=1;
function _GetNextFactInScope(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:6;break;case 3:d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+88|0)>>2];c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+196|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+36|0)>>2]|0)?4:5;break;case 4:_UpdateDeftemplateScope(b);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+196|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+36|0)>>2];c=5;break;case 5:c=10;break;case 6:c=0!=(HEAPU32[(d+
28|0)>>2]>>>15&1|0)?7:8;break;case 7:a=0;c=16;break;case 8:d=HEAP32[(d+36|0)>>2];c=9;break;case 9:c=10;break;case 10:c=11;break;case 11:c=0!=(d|0)?12:15;break;case 12:c=0!=(HEAPU32[(HEAP32[(d+16|0)>>2]+28|0)>>2]>>>2&1|0)?13:14;break;case 13:a=d;c=16;break;case 14:d=HEAP32[(d+36|0)>>2];c=11;break;case 15:a=0;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_GetNextFactInScope.X=1;
function _EnvGetFactPPForm(h,f,c,a){_OpenStringDestination(h,STRING_TABLE.__str201459|0,f,c);_PrintFactWithIdentifier(h,STRING_TABLE.__str201459|0,a);_CloseStringDestination(h,STRING_TABLE.__str201459|0)}function _EnvAssertString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=c=_StringToFact(b,f);c=0==(c|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvAssert(b,d);c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}function _PrintFactJNCompVars1(){}
function _PrintFactJNCompVars2(){}function _PrintFactPNCompVars1(){}function _PrintFactSlotLength(){}function _PrintFactJNGetVar1(){}function _PrintFactJNGetVar2(){}function _PrintFactJNGetVar3(){}function _PrintFactPNGetVar1(){}function _PrintFactPNGetVar2(){}function _PrintFactPNGetVar3(){}function _PrintFactPNConstant1(){}function _PrintFactPNConstant2(){}function _EnvGetFactListChanged(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]|0)>>2]}
function _EnvSetFactListChanged(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]|0)>>2]=f}function _GetNumberOfFacts(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+96|0)>>2]}
function _FindIndexedFact(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=_EnvGetNextFact(b,0);c=3;break;case 3:c=0!=(e|0)?4:8;break;case 4:c=(HEAP32[(e+24|0)>>2]|0)==(d|0)?5:6;break;case 5:a=e;c=9;break;case 6:c=7;break;case 7:e=_EnvGetNextFact(b,e);c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _FactParseQueryNoAction(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;j=_ParseQueryRestrictions(e,g,i,k);b=0==(j|0)?3:4;break;case 3:d=0;b=9;break;case 4:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=0==(_ParseQueryTestExpression(e,g,i)|0)?5:6;break;case 5:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=9;break;case 6:_DecrementIndentDepth(e,
3);_GetToken(e,i,k);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(e,STRING_TABLE.__str1516|0);_ReturnExpression(e,g);_ReturnExpression(e,j);d=0;b=9;break;case 8:_ReplaceFactVariables(e,j,HEAP32[(g+8|0)>>2],1,0);_ReturnExpression(e,j);d=g;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactParseQueryNoAction.X=1;
function _ParseQueryRestrictions(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r=b;g=h;i=f;j=c;k=a;q=n=m=l=0;HEAP32[r>>2]=0;_SavePPBuffer(g,STRING_TABLE.__str101526|0);_GetToken(g,j,k);d=170!=(HEAPU16[(k|0)>>1]&65535|0)?3:4;break;case 3:d=38;break;case 4:_GetToken(g,j,k);d=170!=(HEAPU16[(k|0)>>1]&65535|0)?5:6;break;case 5:d=38;break;case 6:d=7;break;case 7:d=170==
(HEAPU16[(k|0)>>1]&65535|0)?8:35;break;case 8:_GetToken(g,j,k);d=35!=(HEAPU16[(k|0)>>1]&65535|0)?9:10;break;case 9:d=38;break;case 10:p=l;d=11;break;case 11:d=0!=(p|0)?12:15;break;case 12:d=(HEAP32[(p+4|0)>>2]|0)==(HEAP32[(k+4|0)>>2]|0)?13:14;break;case 13:_PrintErrorID(g,STRING_TABLE.__str41520|0,1,0);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,STRING_TABLE.__str111527|0);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,HEAP32[(HEAP32[(HEAP32[(i+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str51521|
0,STRING_TABLE.__str81524|0);d=39;break;case 14:p=HEAP32[(p+12|0)>>2];d=11;break;case 15:p=_GenConstant(g,35,HEAP32[(k+4|0)>>2]);d=0==(l|0)?16:17;break;case 16:l=p;d=18;break;case 17:HEAP32[(m+12|0)>>2]=p;d=18;break;case 18:m=p;_SavePPBuffer(g,STRING_TABLE.__str101526|0);n=_ArgumentParse(g,j,r);d=0!=(HEAP32[r>>2]|0)?19:20;break;case 19:d=39;break;case 20:d=0==(n|0)?21:22;break;case 21:d=38;break;case 22:d=0==(_ReplaceTemplateNameWithReference(g,n)|0)?23:24;break;case 23:d=39;break;case 24:o=n;_SavePPBuffer(g,
STRING_TABLE.__str101526|0);d=25;break;case 25:p=d=_ArgumentParse(g,j,r);d=0!=(d|0)?26:29;break;case 26:d=0==(_ReplaceTemplateNameWithReference(g,p)|0)?27:28;break;case 27:d=39;break;case 28:o=HEAP32[(o+12|0)>>2]=p;_SavePPBuffer(g,STRING_TABLE.__str101526|0);d=25;break;case 29:d=0!=(HEAP32[r>>2]|0)?30:31;break;case 30:d=39;break;case 31:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str121528|0);p=_GenConstant(g,2,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+252|0)>>2]|0)>>2]);o=HEAP32[(o+12|0)>>
2]=p;d=0==(HEAP32[(i+8|0)>>2]|0)?32:33;break;case 32:HEAP32[(i+8|0)>>2]=n;d=34;break;case 33:HEAP32[(q+12|0)>>2]=n;d=34;break;case 34:q=o;n=0;_SavePPBuffer(g,STRING_TABLE.__str101526|0);_GetToken(g,j,k);d=7;break;case 35:d=171!=(HEAPU16[(k|0)>>1]&65535|0)?36:37;break;case 36:d=38;break;case 37:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str121528|0);e=l;d=40;break;case 38:_SyntaxErrorMessage(g,STRING_TABLE.__str1516|0);d=39;break;case 39:_ReturnExpression(g,n);_ReturnExpression(g,i);
_ReturnExpression(g,l);e=0;d=40;break;case 40:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseQueryRestrictions.X=1;
function _ParseQueryTestExpression(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i;b=a;var j;e=h;g=f;i=c;HEAP32[b>>2]=0;j=_GetParsedBindNames(e);_SetParsedBindNames(e,0);i=_ArgumentParse(e,i,b);b=1==(HEAP32[b>>2]|0)?3:4;break;case 3:_SetParsedBindNames(e,j);_ReturnExpression(e,g);d=0;b=9;break;case 4:b=0==(i|0)?5:6;break;case 5:_SetParsedBindNames(e,j);_SyntaxErrorMessage(e,STRING_TABLE.__str1516|
0);_ReturnExpression(e,g);d=0;b=9;break;case 6:HEAP32[(i+12|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(g+8|0)>>2]=i;b=0==(_ParsedBindNamesEmpty(e)|0)?7:8;break;case 7:_ClearParsedBindNames(e);_SetParsedBindNames(e,j);_PrintErrorID(e,STRING_TABLE.__str41520|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str51521|0,STRING_TABLE.__str91525|0);_EnvPrintRouter(e,STRING_TABLE.__str51521|0,HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str51521|0,STRING_TABLE.__str81524|0);_ReturnExpression(e,
g);d=0;b=9;break;case 8:_SetParsedBindNames(e,j);d=1;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseQueryTestExpression.X=1;
function _ReplaceFactVariables(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;k=b;m=_FindFunction(e,STRING_TABLE.__str11517|0);n=_FindFunction(e,STRING_TABLE.__str21518|0);d=3;break;case 3:d=0!=(i|0)?4:23;break;case 4:d=35==(HEAPU16[(i|0)>>1]&65535|0)?5:17;break;case 5:l=g;o=0;d=6;break;case 6:d=0!=(l|0)?7:8;break;case 7:var p=(HEAP32[(l+4|0)>>2]|0)!=(HEAP32[(i+4|0)>>2]|0)&1;d=9;break;case 8:p=0;d=9;break;case 9:d=0!=(p|0)?10:11;break;case 10:l=HEAP32[(l+12|0)>>
2];o=o+1|0;d=6;break;case 11:d=0!=(l|0)?12:13;break;case 12:HEAP16[(i|0)>>1]=30;HEAP32[(i+4|0)>>2]=m;l=e;d=_EnvAddLong(e,k);l=_GenConstant(l,1,d);d=e;var q=_EnvAddLong(e,o);d=_GenConstant(d,1,q);HEAP32[(l+12|0)>>2]=d;HEAP32[(i+8|0)>>2]=l;d=16;break;case 13:d=1==(j|0)?14:15;break;case 14:_ReplaceSlotReference(e,g,i,n,k);d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:d=0!=(HEAP32[(i+8|0)>>2]|0)?18:22;break;case 18:d=0!=(_IsQueryFunction(i)|0)?19:20;break;case 19:_ReplaceFactVariables(e,g,
HEAP32[(i+8|0)>>2],j,k+1|0);d=21;break;case 20:_ReplaceFactVariables(e,g,HEAP32[(i+8|0)>>2],j,k);d=21;break;case 21:d=22;break;case 22:i=HEAP32[(i+12|0)>>2];d=3;break;case 23:return;default:assert(0,"bad label: "+d)}}_ReplaceFactVariables.X=1;
function _IsQueryFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=30!=(HEAPU16[(a|0)>>1]&65535|0)?3:4;break;case 3:c=0;f=17;break;case 4:b=HEAP32[(HEAP32[(a+4|0)>>2]+12|0)>>2];f=620==(b|0)?5:6;break;case 5:c=1;f=17;break;case 6:f=622==(b|0)?7:8;break;case 7:c=1;f=17;break;case 8:f=624==(b|0)?9:10;break;case 9:c=1;f=17;break;case 10:f=626==(b|0)?11:12;break;case 11:c=1;f=17;break;case 12:f=628==(b|0)?13:14;break;case 13:c=1;f=17;break;case 14:f=630==(b|0)?15:16;break;case 15:c=1;f=17;break;
case 16:c=0;f=17;break;case 17:return c;default:assert(0,"bad label: "+f)}}_IsQueryFunction.X=1;
function _FactParseQueryAction(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;j=_ParseQueryRestrictions(e,g,i,k);b=0==(j|0)?3:4;break;case 3:d=0;b=11;break;case 4:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=0==(_ParseQueryTestExpression(e,g,i)|0)?5:6;break;case 5:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=11;break;case 6:_PPCRAndIndent(e);b=0==
(_ParseQueryActionExpression(e,g,i,j,k)|0)?7:8;break;case 7:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=11;break;case 8:_DecrementIndentDepth(e,3);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?9:10;break;case 9:_SyntaxErrorMessage(e,STRING_TABLE.__str1516|0);_ReturnExpression(e,g);_ReturnExpression(e,j);d=0;b=11;break;case 10:_ReplaceFactVariables(e,j,HEAP32[(g+8|0)>>2],1,0);_ReplaceFactVariables(e,j,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2],0,0);_ReturnExpression(e,j);d=g;b=11;break;case 11:return h=
d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactParseQueryAction.X=1;
function _ParseQueryActionExpression(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;d=b;m=_GetParsedBindNames(g);_SetParsedBindNames(g,0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+44|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2];j=_GroupActions(g,j,d,1,0,0);_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,HEAP32[(d+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+44|
0)>>2]=0;d=4;break;case 3:_SetParsedBindNames(g,m);_ReturnExpression(g,i);e=0;d=18;break;case 4:d=0==(j|0)?5:6;break;case 5:_SetParsedBindNames(g,m);_SyntaxErrorMessage(g,STRING_TABLE.__str1516|0);_ReturnExpression(g,i);e=0;d=18;break;case 6:HEAP32[(j+12|0)>>2]=HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2]=j;n=_GetParsedBindNames(g);o=0;d=7;break;case 7:d=0!=(n|0)?8:14;break;case 8:l=k;d=9;break;case 9:d=0!=(l|0)?10:13;break;case 10:d=(HEAP32[(l+4|0)>>2]|0)==(HEAP32[(n|
0)>>2]|0)?11:12;break;case 11:_ClearParsedBindNames(g);_SetParsedBindNames(g,m);_PrintErrorID(g,STRING_TABLE.__str41520|0,3,0);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,STRING_TABLE.__str61522|0);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,STRING_TABLE.__str71523|0);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,HEAP32[(HEAP32[(HEAP32[(i+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str51521|0,STRING_TABLE.__str81524|
0);_ReturnExpression(g,i);e=0;d=18;break;case 12:l=HEAP32[(l+12|0)>>2];d=9;break;case 13:o=n;n=HEAP32[(n+8|0)>>2];d=7;break;case 14:d=0==(o|0)?15:16;break;case 15:_SetParsedBindNames(g,m);d=17;break;case 16:HEAP32[(o+8|0)>>2]=m;d=17;break;case 17:e=1;d=18;break;case 18:return e;default:assert(0,"bad label: "+d)}}_ParseQueryActionExpression.X=1;
function _ReplaceSlotReference(h,f,c,a,b){var d=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r=d;g=h;i=f;j=c;k=a;l=b;p=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];m=_strlen(p);e=3>m>>>0?3:4;break;case 3:e=21;break;case 4:o=m-2|0;e=5;break;case 5:e=1<=o>>>0?6:21;break;case 6:e=58==(HEAP8[p+o|0]<<24>>24|0)?7:8;break;case 7:e=1<=o>>>0?9:19;break;case 8:e=19;break;case 9:q=i;n=0;e=10;break;
case 10:if(0!=(q|0))e=11;else{var s=0;e=14}break;case 11:e=o;var t=_strlen(HEAP32[(HEAP32[(q+4|0)>>2]+16|0)>>2]);if((e|0)!=(t|0)){var u=1;e=13}else e=12;break;case 12:u=0!=(_strncmp(HEAP32[(HEAP32[(q+4|0)>>2]+16|0)>>2],p,o)|0);e=13;break;case 13:s=u;e=14;break;case 14:e=s?15:16;break;case 15:q=HEAP32[(q+12|0)>>2];n=n+1|0;e=10;break;case 16:e=0!=(q|0)?17:18;break;case 17:_OpenStringSource(g,STRING_TABLE.__str31519|0,(p+o|0)+1|0,0);e=_GetPPBufferStatus(g);_SetPPBufferStatus(g,0);_GetToken(g,STRING_TABLE.__str31519|
0,r);_SetPPBufferStatus(g,e);_CloseStringSource(g,STRING_TABLE.__str31519|0);HEAP16[(j|0)>>1]=30;HEAP32[(j+4|0)>>2]=k;e=g;t=_EnvAddLong(g,l);e=_GenConstant(e,1,t);HEAP32[(j+8|0)>>2]=e;e=g;t=_EnvAddLong(g,n);e=_GenConstant(e,1,t);HEAP32[(HEAP32[(j+8|0)>>2]+12|0)>>2]=e;e=_GenConstant(g,HEAP16[(r|0)>>1],HEAP32[(r+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(j+8|0)>>2]+12|0)>>2]+12|0)>>2]=e;e=21;break;case 18:e=19;break;case 19:e=20;break;case 20:o=o-1|0;e=5;break;case 21:STACKTOP=d;return;default:assert(0,"bad label: "+
e)}}_ReplaceSlotReference.X=1;
function _ReplaceTemplateNameWithReference(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c;d=h;e=f;a=2==(HEAPU16[(e|0)>>1]&65535|0)?3:8;break;case 3:g=HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2];i=_FindImportedConstruct(d,STRING_TABLE.__str131529|0,0,g,j,1,0);a=0==(i|0)?4:5;break;case 4:_CantFindItemErrorMessage(d,STRING_TABLE.__str131529|0,g);b=0;a=9;break;case 5:a=1<(HEAP32[j>>2]|
0)?6:7;break;case 6:_AmbiguousReferenceErrorMessage(d,STRING_TABLE.__str131529|0,g);b=0;a=9;break;case 7:HEAP16[(e|0)>>1]=63;HEAP32[(e+4|0)>>2]=i;a=8;break;case 8:b=1;a=9;break;case 9:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ReplaceTemplateNameWithReference.X=1;
function _SetupFactQuery(h){_AllocateEnvironmentData(h,63,16,0);var f=_EnvAddSymbol(h,STRING_TABLE.__str1530|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]|0)>>2]=f;f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]|0)>>2]+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;_EnvDefineFunction2(h,STRING_TABLE.__str11531|0,117,632,STRING_TABLE.__str21532|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str31533|0,117,634,STRING_TABLE.__str41534|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str51535|0,98,620,STRING_TABLE.__str61536|
0,0);_AddFunctionParser(h,STRING_TABLE.__str51535|0,636);_EnvDefineFunction2(h,STRING_TABLE.__str71537|0,109,622,STRING_TABLE.__str81538|0,0);_AddFunctionParser(h,STRING_TABLE.__str71537|0,636);_EnvDefineFunction2(h,STRING_TABLE.__str91539|0,109,624,STRING_TABLE.__str101540|0,0);_AddFunctionParser(h,STRING_TABLE.__str91539|0,636);_EnvDefineFunction2(h,STRING_TABLE.__str111541|0,117,626,STRING_TABLE.__str121542|0,0);_AddFunctionParser(h,STRING_TABLE.__str111541|0,638);_EnvDefineFunction2(h,STRING_TABLE.__str131543|
0,117,628,STRING_TABLE.__str141544|0,0);_AddFunctionParser(h,STRING_TABLE.__str131543|0,638);_EnvDefineFunction2(h,STRING_TABLE.__str151545|0,117,630,STRING_TABLE.__str161546|0,0);_AddFunctionParser(h,STRING_TABLE.__str151545|0,638)}_SetupFactQuery.X=1;
function _GetQueryFact(h,f){var c;c=_FindQueryCore(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2]);HEAP16[(f+4|0)>>1]=6;HEAP32[(f+8|0)>>2]=HEAP32[(HEAP32[(c|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+4|0)>>2]+16|0)>>2]<<2)|0)>>2]}_GetQueryFact.X=1;
function _GetQueryFactSlot(h,f){var c=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+24;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=_FindQueryCore(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2]);e=HEAP32[(HEAP32[(a|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+4|0)>>2]+16|0)>>2]<<2)|0)>>2];_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],g);a=2!=(HEAPU16[(g+4|0)>>1]&65535|0)?3:4;break;case 3:_ExpectedTypeError1(b,STRING_TABLE.__str171547|0,1,STRING_TABLE.__str181548|0);_SetEvaluationError(b,1);a=13;break;case 4:a=0!=(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]&1|0)?5:8;break;case 5:a=0!=(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str191549|
0)|0)?6:7;break;case 6:_SlotExistError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str201550|0);a=13;break;case 7:HEAP16[i>>1]=1;a=11;break;case 8:a=0==(_FindSlot(HEAP32[(e+16|0)>>2],HEAP32[(g+8|0)>>2],i)|0)?9:10;break;case 9:_SlotExistError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str201550|0);a=13;break;case 10:a=11;break;case 11:HEAP16[(d+4|0)>>1]=HEAP16[(((e+48|0)+16|0)+(((HEAP16[i>>1]<<16>>16)-1|0)<<3)|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[((((e+48|0)+16|0)+(((HEAP16[i>>1]<<
16>>16)-1|0)<<3)|0)+4|0)>>2];a=4==(HEAPU16[(d+4|0)>>1]&65535|0)?12:13;break;case 12:HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(d+8|0)>>2]+8|0)>>2]-1|0;a=13;break;case 13:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_GetQueryFactSlot.X=1;
function _AnyFacts(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str51535|0,e);c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:_PushQueryCore(b);c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var g=
_genalloc(b,32);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=g;c=_gm2(b,HEAP32[e>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=_TestForFirstInChain(b,d,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2],HEAP32[e>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,d);a=c;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_AnyFacts.X=1;
function _QueryFindFact(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=-1;e=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str71537|0,g);a=0==(e|0)?3:4;break;case 3:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=15;break;
case 4:_PushQueryCore(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var j=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>
2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=j;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=1==(_TestForFirstInChain(b,e,0)|0)?8:13;break;case 8:i=_EnvCreateMultifield(b,HEAP32[g>>2]);HEAP32[(d+8|0)>>2]=i;HEAP32[(d+16|0)>>2]=HEAP32[g>>2]-1|0;i=1;a=9;break;case 9:a=i>>>
0<=HEAPU32[g>>2]>>>0?10:12;break;case 10:HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=6;HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]+((i-1|0)<<2)|0)>>2];a=11;break;case 11:i=i+1|0;a=9;break;case 12:a=14;break;case 13:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 14:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|
0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,e);a=15;break;case 15:STACKTOP=
c;return;default:assert(0,"bad label: "+a)}}_QueryFindFact.X=1;
function _QueryFindAllFacts(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j;b=h;d=f;HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=-1;e=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str91539|0,g);a=0==(e|0)?3:4;break;case 3:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=15;
break;case 4:_PushQueryCore(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var k=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+
16|0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=k;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+252|0)>>2]+4|0)>>2]+20|0)>>2]=HEAP32[g>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+24|0)>>2]=0;_TestEntireChain(b,e,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;a=_EnvCreateMultifield(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+24|0)>>2]*HEAP32[g>>2]|0);HEAP32[(d+8|0)>>2]=a;a=8;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)?9:14;break;case 9:i=0;j=HEAP32[(d+16|0)>>2]+2|0;a=10;
break;case 10:a=i>>>0<HEAPU32[g>>2]>>>0?11:13;break;case 11:HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1]=6;HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)>>2]+(i<<2)|0)>>2];a=12;break;case 12:i=i+1|0;j=j+1|0;a=10;break;case 13:HEAP32[(d+16|0)>>2]=j-2|0;_PopQuerySoln(b);a=8;break;case 14:_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,e);a=15;break;case 15:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
_QueryFindAllFacts.X=1;
function _QueryDoForFact(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str111541|0,g);a=0==(e|0)?3:4;break;case 3:a=10;break;
case 4:_PushQueryCore(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>
2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=i;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=1==(_TestForFirstInChain(b,
e,0)|0)?8:9;break;case 8:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2],d);a=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,e);a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_QueryDoForFact.X=1;
function _FindQueryCore(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];c=8;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+8|0)>>2];c=5;break;case 5:c=1<(d|0)?6:7;break;case 6:e=HEAP32[(e+4|0)>>2];d=d-1|0;c=5;break;case 7:a=HEAP32[(e|0)>>2];c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _QueryDoForAllFacts(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str131543|0,g);a=0==(e|0)?3:4;break;case 3:a=8;break;
case 4:_PushQueryCore(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>
2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=i;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]=d;_ValueInstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);_TestEntireChain(b,e,0);_ValueDeinstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);_PropagateReturnValue(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,e);a=8;break;
case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_QueryDoForAllFacts.X=1;
function _DelayedQueryDoForAllFacts(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryTemplates(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str151545|0,g);a=0==(e|0)?3:4;break;case 3:a=
24;break;case 4:_PushQueryCore(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var j=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>
2]+16|0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]=j;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+252|0)>>2]+4|0)>>2]+20|0)>>2]=HEAP32[g>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+24|0)>>2]=0;_TestEntireChain(b,e,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=8;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)?9:23;break;case 9:i=0;a=10;
break;case 10:a=i>>>0<HEAPU32[g>>2]>>>0?11:13;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]+(i<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)>>2]+(i<<2)|0)>>2];a=12;break;case 12:i=i+1|0;a=10;break;case 13:_PopQuerySoln(b);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2],d);
a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?14:15;break;case 14:_PropagateReturnValue(b,d);a=15;break;case 15:_PeriodicCleanup(b,0,1);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?18:16;break;case 16:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?18:17;break;case 17:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?18:22;break;case 18:a=19;break;case 19:a=0!=
(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)?20:21;break;case 20:_PopQuerySoln(b);a=19;break;case 21:a=23;break;case 22:a=8;break;case 23:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore(b);_DeleteQueryTemplates(b,e);a=24;break;case 24:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DelayedQueryDoForAllFacts.X=1;
function _PopQueryCore(h){var f;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+8|0)>>2]|0)>>2];f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+8|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_PopQueryCore.X=1;
function _DetermineQueryTemplates(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q=b;g=h;i=f;j=c;k=a;p=n=m=l=0;HEAP32[k>>2]=0;d=3;break;case 3:d=0!=(i|0)?4:23;break;case 4:d=0!=(_EvaluateExpression(g,i,q)|0)?5:6;break;case 5:_DeleteQueryTemplates(g,l);e=0;d=24;break;case 6:d=2==(HEAPU16[(q+4|0)>>1]&65535|0)?7:9;break;case 7:d=(HEAP32[(q+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+252|0)>>2]|0)>>2]|0)?8:9;break;case 8:p=1;d=k;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=22;break;case 9:o=d=_FormChain(g,j,q);d=0!=(d|0)?10:20;break;case 10:d=0==(l|0)?11:12;break;case 11:m=n=l=o;d=16;break;case 12:d=1==(p|0)?13:14;break;case 13:p=0;n=m=HEAP32[(m+8|0)>>2]=o;d=15;break;case 14:HEAP32[(n+4|0)>>2]=o;d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:d=0!=(HEAP32[(n+4|0)>>2]|0)?18:19;break;case 18:n=HEAP32[(n+4|0)>>2];d=17;break;case 19:d=21;break;case 20:_SyntaxErrorMessage(g,
STRING_TABLE.__str211551|0);_DeleteQueryTemplates(g,l);_SetEvaluationError(g,1);e=0;d=24;break;case 21:d=22;break;case 22:i=HEAP32[(i+12|0)>>2];d=3;break;case 23:e=l;d=24;break;case 24:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_DetermineQueryTemplates.X=1;
function _PushQueryCore(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,8);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;HEAP32[(h|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2];HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+8|0)>>2]=h;return;default:assert(0,"bad label: "+f)}}_PushQueryCore.X=1;
function _TestForFirstInChain(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+252|0)>>2]+12|0)>>2]=1;i=e;a=3;break;case 3:a=0!=(i|0)?4:11;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;a=0!=(_TestForFirstFactInTemplate(d,HEAP32[(i|0)>>2],e,g)|0)?5:6;break;case 5:b=1;a=12;break;case 6:a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?8:7;break;case 7:a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+252|0)>>2]+12|
0)>>2]|0)?8:9;break;case 8:b=0;a=12;break;case 9:a=10;break;case 10:i=HEAP32[(i+4|0)>>2];a=3;break;case 11:b=0;a=12;break;case 12:return b;default:assert(0,"bad label: "+a)}}_TestForFirstInChain.X=1;
function _DeleteQueryTemplates(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:8;break;case 4:c=5;break;case 5:c=0!=(HEAP32[(b+4|0)>>2]|0)?6:7;break;case 6:c=HEAP32[(b+4|0)>>2];HEAP32[(b+4|0)>>2]=HEAP32[(HEAP32[(b+4|0)>>2]+4|0)>>2];_DecrementDeftemplateBusyCount(a,HEAP32[(c|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>
2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 7:c=b;b=HEAP32[(b+8|0)>>2];_DecrementDeftemplateBusyCount(a,HEAP32[(c|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;case 8:return;default:assert(0,"bad label: "+c)}}_DeleteQueryTemplates.X=1;
function _TestEntireChain(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=1;g=d;a=3;break;case 3:a=0!=(g|0)?4:9;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]=0;_TestEntireTemplate(b,HEAP32[(g|0)>>2],d,e);a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?6:5;break;case 5:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+252|0)>>2]+12|0)>>2]|0)?6:7;break;case 6:a=9;break;case 7:a=8;break;case 8:g=
HEAP32[(g+4|0)>>2];a=3;break;case 9:return;default:assert(0,"bad label: "+a)}}_TestEntireChain.X=1;
function _PopQuerySoln(h){HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]+4|0)>>2];_rm(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+16|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+20|
0)>>2]<<2|0);_rm(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+252|0)>>2]+4|0)>>2]+16|0)>>2],8)}_PopQuerySoln.X=1;
function _TestEntireTemplate(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;g=f;i=c;j=a;g=HEAP32[(g+40|0)>>2];d=3;break;case 3:d=0!=(g|0)?4:31;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]+(j<<2)|0)>>2]=g;d=0!=(HEAP32[(i+8|0)>>2]|0)?5:9;break;case 5:d=(g|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_TestEntireChain(e,HEAP32[(i+8|
0)>>2],j+1|0);d=(g|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=1==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?7:6;break;case 6:d=1==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:d=31;break;case 8:d=24;break;case 9:d=(g|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_EvaluateExpression(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2],k);d=HEAP32[(HEAP32[(e+16|0)>>2]+
176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PeriodicCleanup(e,0,1);d=(g|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=1==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?10:11;break;case 10:d=31;break;case 11:d=2!=(HEAPU16[(k+4|0)>>1]&65535|0)?12:13;break;case 12:d=14;break;case 13:d=(HEAP32[(k+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?14:23;break;case 14:d=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2]|0)?15:21;break;case 15:d=(g|
0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_ValueDeinstall(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);_EvaluateExpression(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);_ValueInstall(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+4|0)>>2]+28|0)>>2]);d=HEAP32[(HEAP32[(e+16|0)>>2]+176|
0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PeriodicCleanup(e,0,1);d=(g|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?17:16;break;case 16:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+52|0)>>2]|0)>>2]|0)?17:18;break;case 17:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+252|0)>>2]+12|0)>>2]=1;d=31;break;case 18:d=1==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?19:20;break;case 19:d=31;break;case 20:d=22;break;case 21:_AddSolution(e);d=22;break;
case 22:d=23;break;case 23:d=24;break;case 24:g=HEAP32[(g+44|0)>>2];d=25;break;case 25:d=0!=(g|0)?26:27;break;case 26:var l=1==(HEAPU32[(g+28|0)>>2]>>>15&1|0)&1;d=28;break;case 27:l=0;d=28;break;case 28:d=0!=(l|0)?29:30;break;case 29:g=HEAP32[(g+44|0)>>2];d=25;break;case 30:d=3;break;case 31:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_TestEntireTemplate.X=1;
function _AddSolution(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_gm2(c,8);f=_gm2(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+20|0)>>2]<<2|0);HEAP32[(a|0)>>2]=f;b=0;f=3;break;case 3:f=b>>>0<HEAPU32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+20|0)>>2]>>>0?4:6;break;case 4:HEAP32[(HEAP32[(a|0)>>2]+(b<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]+(b<<2)|0)>>2];f=5;break;case 5:b=b+1|0;f=3;break;case 6:HEAP32[(a+
4|0)>>2]=0;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+12|0)>>2]=a;f=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+16|0)>>2]+4|0)>>2]=a;f=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+16|0)>>2]=a;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+252|0)>>2]+4|0)>>2]+24|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;return;default:assert(0,
"bad label: "+f)}}_AddSolution.X=1;
function _TestForFirstFactInTemplate(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b;g=h;i=f;j=c;k=a;i=HEAP32[(i+40|0)>>2];d=3;break;case 3:d=0!=(i|0)?4:25;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+252|0)>>2]+4|0)>>2]|0)>>2]+(k<<2)|0)>>2]=i;d=0!=(HEAP32[(j+8|0)>>2]|0)?5:11;break;case 5:d=(i|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=1==(_TestForFirstInChain(g,
HEAP32[(j+8|0)>>2],k+1|0)|0)?6:7;break;case 6:d=(i|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=25;break;case 7:d=(i|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=1==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?9:8;break;case 8:d=1==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+252|0)>>2]+12|0)>>2]|0)?9:10;break;case 9:d=25;break;case 10:d=18;break;case 11:d=(i|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_EvaluateExpression(g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+252|0)>>2]+4|0)>>2]+4|0)>>2],l);d=HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_PeriodicCleanup(g,0,1);d=(i|0)+8|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=1==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?12:13;break;case 12:d=25;break;case 13:d=2!=(HEAPU16[(l+4|0)>>1]&65535|0)?14:15;break;case 14:d=16;break;case 15:d=(HEAP32[(l+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?16:17;break;case 16:d=25;break;case 17:d=18;break;case 18:i=
HEAP32[(i+44|0)>>2];d=19;break;case 19:d=0!=(i|0)?20:21;break;case 20:var m=1==(HEAPU32[(i+28|0)>>2]>>>15&1|0)&1;d=22;break;case 21:m=0;d=22;break;case 22:d=0!=(m|0)?23:24;break;case 23:i=HEAP32[(i+44|0)>>2];d=19;break;case 24:d=3;break;case 25:d=0!=(i|0)?26:29;break;case 26:if(1==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)){var n=1;d=28}else d=27;break;case 27:n=1==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+252|0)>>2]+12|0)>>2]|0);d=28;break;case 28:e=n?0:1;d=30;break;case 29:e=0;d=30;
break;case 30:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_TestForFirstFactInTemplate.X=1;
function _AdjustFieldPosition(h,f,c,a,b){for(h=2;;)switch(h){case 2:var d,e,g,i,j,k;e=f;g=c;i=a;j=b;k=g;h=3;break;case 3:h=0!=(e|0)?4:13;break;case 4:h=(HEAP16[(e+4|0)>>1]<<16>>16|0)!=(i&65535|0)?5:6;break;case 5:h=12;break;case 6:h=(HEAP32[(e|0)>>2]|0)==(g&65535|0)?7:8;break;case 7:HEAP32[j>>2]=(HEAP32[(e+12|0)>>2]-HEAP32[(e+8|0)>>2]|0)+1|0;d=k;h=14;break;case 8:h=(HEAP32[(e|0)>>2]|0)>(g&65535|0)?9:10;break;case 9:d=k;h=14;break;case 10:h=11;break;case 11:k=((k&65535)+((HEAP32[(e+12|0)>>2]-HEAP32[(e+
8|0)>>2]|0)&65535)|0)&65535;h=12;break;case 12:e=HEAP32[(e+16|0)>>2];h=3;break;case 13:d=k;h=14;break;case 14:return d;default:assert(0,"bad label: "+h)}}_AdjustFieldPosition.X=1;function _FactPNGetVar2(h,f,c){h=((HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU16[(HEAP32[(f+16|0)>>2]|0)>>1]&65535)<<3)|0;HEAP16[(c+4|0)>>1]=HEAP16[(h|0)>>1];HEAP32[(c+8|0)>>2]=HEAP32[(h+4|0)>>2];return 1}
function _FactPNGetVar3(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;a=h;d=f;e=c;d=HEAP32[(d+16|0)>>2];g=HEAP32[((((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU16[(d+6|0)>>1]&65535)<<3)|0)+4|0)>>2];a=0!=(HEAP32[d>>2]&1|0)?3:5;break;case 3:a=0!=(HEAPU32[d>>2]>>>1&1|0)?4:5;break;case 4:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+8|0)>>2]=g;HEAP32[(e+12|0)>>2]=HEAPU16[(d+2|0)>>1]&65535;HEAP32[(e+16|0)>>2]=HEAP32[(g+8|0)>>2]-((HEAPU16[(d+4|0)>>1]&65535)+1|0)|0;b=1;a=9;break;
case 5:a=0!=(HEAP32[d>>2]&1|0)?6:7;break;case 6:i=(g+16|0)+((HEAPU16[(d+2|0)>>1]&65535)<<3)|0;a=8;break;case 7:i=(g+16|0)+((HEAP32[(g+8|0)>>2]-((HEAPU16[(d+4|0)>>1]&65535)+1|0)|0)<<3)|0;a=8;break;case 8:HEAP16[(e+4|0)>>1]=HEAP16[(i|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(i+4|0)>>2];b=1;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}_FactPNGetVar3.X=1;
function _FormChain(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q=a;e=h;g=f;i=c;b=63==(HEAPU16[(i+4|0)>>1]&65535|0)?3:7;break;case 3:_IncrementDeftemplateBusyCount(e,HEAP32[(i+8|0)>>2]);b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?4:5;break;case 4:var r=_genalloc(e,12);b=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|
0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=6;break;case 6:k=r;HEAP32[(k|0)>>2]=HEAP32[(i+8|0)>>2];HEAP32[(k+4|0)>>2]=0;HEAP32[(k+8|0)>>2]=0;d=k;b=32;break;case 7:b=2==(HEAPU16[(i+4|0)>>1]&65535|0)?8:14;break;case 8:j=_FindImportedConstruct(e,STRING_TABLE.__str221552|
0,0,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],q,1,0);b=0==(j|0)?9:10;break;case 9:_CantFindItemInFunctionErrorMessage(e,STRING_TABLE.__str221552|0,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],g);d=0;b=32;break;case 10:_IncrementDeftemplateBusyCount(e,j);b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?11:12;break;case 11:var s=_genalloc(e,12);b=13;break;case 12:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|
0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];s=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=13;break;case 13:k=s;HEAP32[(k|0)>>2]=j;HEAP32[(k+4|0)>>2]=0;HEAP32[(k+8|0)>>2]=0;d=k;b=32;break;case 14:b=4==(HEAPU16[(i+4|0)>>1]&65535|0)?15:31;break;case 15:k=l=0;o=HEAP32[(i+16|0)>>2]+1|0;n=HEAP32[(i+12|0)>>2]+1|0;b=16;break;case 16:b=(n|0)<=(o|0)?17:30;break;case 17:b=2==
(HEAPU16[((HEAP32[(i+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]&65535|0)?18:21;break;case 18:p=HEAP32[(HEAP32[(((HEAP32[(i+8|0)>>2]+16|0)+((n-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];j=_FindImportedConstruct(e,STRING_TABLE.__str221552|0,0,p,q,1,0);b=0==(j|0)?19:20;break;case 19:_CantFindItemInFunctionErrorMessage(e,STRING_TABLE.__str221552|0,p,g);_DeleteQueryTemplates(e,k);d=0;b=32;break;case 20:b=22;break;case 21:_DeleteQueryTemplates(e,k);d=0;b=32;break;case 22:_IncrementDeftemplateBusyCount(e,j);b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?23:24;break;case 23:var t=_genalloc(e,12);b=25;break;case 24:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=25;break;case 25:m=t;HEAP32[(m|0)>>2]=j;HEAP32[(m+4|0)>>
2]=0;HEAP32[(m+8|0)>>2]=0;b=0==(k|0)?26:27;break;case 26:k=m;b=28;break;case 27:HEAP32[(l+4|0)>>2]=m;b=28;break;case 28:l=m;b=29;break;case 29:n=n+1|0;b=16;break;case 30:d=k;b=32;break;case 31:d=0;b=32;break;case 32:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FormChain.X=1;
function _FactPNGetVar1(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m=a,n;e=h;g=f;i=c;n=HEAP32[(g+16|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+188|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+12|0)>>2]+192|0)>>2];b=0!=(HEAP32[n>>2]&1|0)?3:4;break;case 3:HEAP16[(i+4|0)>>1]=6;HEAP32[(i+8|0)>>2]=g;d=1;b=11;break;case 4:b=0!=(HEAPU32[n>>2]>>>1&1|0)?5:8;break;case 5:b=
HEAP16[(n+4|0)>>1];k=((g+48|0)+16|0)+((b&65535)<<3)|0;HEAP16[(i+4|0)>>1]=HEAP16[(k|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(k+4|0)>>2];b=4==(HEAPU16[(i+4|0)>>1]&65535|0)?6:7;break;case 6:HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=HEAP32[(HEAP32[(k+4|0)>>2]+8|0)>>2]-1|0;b=7;break;case 7:d=1;b=11;break;case 8:j=HEAP16[(n+2|0)>>1];b=HEAP16[(n+4|0)>>1];k=((g+48|0)+16|0)+((b&65535)<<3)|0;HEAP32[m>>2]=-1;j=_AdjustFieldPosition(e,l,j,b,m);b=-1!=(HEAP32[m>>2]|0)?9:10;break;case 9:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+8|
0)>>2]=HEAP32[(k+4|0)>>2];HEAP32[(i+12|0)>>2]=j&65535;HEAP32[(i+16|0)>>2]=((j&65535)+HEAP32[m>>2]|0)-1|0;d=1;b=11;break;case 10:d=HEAP32[(k+4|0)>>2];k=(d+16|0)+((j&65535)<<3)|0;HEAP16[(i+4|0)>>1]=HEAP16[(k|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(k+4|0)>>2];d=1;b=11;break;case 11:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactPNGetVar1.X=1;
function _FactPNConstant1(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=HEAP32[(f+16|0)>>2];d=((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU32[b>>2]>>>1&255)<<3)|0;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=(HEAPU16[(e|0)>>1]&65535|0)!=(HEAPU16[(d|0)>>1]&65535|0)?3:4;break;case 3:a=1-(HEAP32[b>>2]&1)|0;c=7;break;case 4:c=(HEAP32[(e+4|0)>>2]|0)!=(HEAP32[(d+4|0)>>2]|0)?5:6;break;case 5:a=1-(HEAP32[b>>2]&1)|0;c=7;break;case 6:a=
HEAP32[b>>2]&1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}_FactPNConstant1.X=1;
function _FactPNConstant2(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=HEAP32[(f+16|0)>>2];e=((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU32[d>>2]>>>10&255)<<3)|0;c=4==(HEAPU16[(e|0)>>1]&65535|0)?3:7;break;case 3:i=HEAP32[(e+4|0)>>2];c=0!=(HEAPU32[d>>2]>>>1&1|0)?4:5;break;case 4:e=(i+16|0)+((HEAPU32[d>>2]>>>2&255)<<3)|0;c=6;break;case 5:e=(i+16|0)+((HEAP32[(i+8|0)>>2]-((HEAPU32[d>>2]>>>2&255)+1|0)|0)<<3)|0;c=6;break;case 6:c=7;break;case 7:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=(HEAPU16[(g|0)>>1]&65535|0)!=(HEAPU16[(e|0)>>1]&65535|0)?8:9;break;case 8:a=1-(HEAP32[d>>2]&1)|0;c=12;break;case 9:c=(HEAP32[(g+4|0)>>2]|0)!=(HEAP32[(e+4|0)>>2]|0)?10:11;break;case 10:a=1-(HEAP32[d>>2]&1)|0;c=12;break;case 11:a=HEAP32[d>>2]&1;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_FactPNConstant2.X=1;
function _FactJNGetVar2(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;a=f;d=c;g=HEAP32[(a+16|0)>>2];a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:e=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]|0)>>2];a=8;break;case 4:a=((HEAPU32[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>9&127)-1|0)==(HEAPU16[(g|0)>>1]&65535|0)?5:6;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];a=7;break;case 6:e=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2]|0)>>2];a=7;break;case 7:a=8;break;case 8:return h=((e+48|0)+16|0)+((HEAPU16[(g+2|0)>>1]&65535)<<3)|0,HEAP16[(d+4|0)>>1]=HEAP16[(h|0)>>1],HEAP32[(d+8|0)>>2]=HEAP32[(h+4|0)>>2],1;default:assert(0,"bad label: "+a)}}_FactJNGetVar2.X=1;
function _FactJNGetVar1(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o=a;e=h;g=f;i=c;g=HEAP32[(g+16|0)>>2];b=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:l=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(g+2|0)>>1]&65535)<<2)|0)>>2]|0)>>2];n=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>
2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(g+2|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2];b=8;break;case 4:b=((HEAPU32[HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>9&127)-1|0)==(HEAPU16[(g+2|0)>>1]&65535|0)?5:6;break;case 5:l=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]+4|0)>>2];b=7;break;case 6:l=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+52|0)>>2]+
8|0)+((HEAPU16[(g+2|0)>>1]&65535)<<2)|0)>>2]|0)>>2];n=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(g+2|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2];b=7;break;case 7:b=8;break;case 8:b=0!=(HEAP32[g>>2]&1|0)?9:10;break;case 9:HEAP16[(i+4|0)>>1]=6;HEAP32[(i+8|0)>>2]=l;d=1;b=19;break;case 10:b=0!=(HEAPU32[g>>2]>>>1&1|0)?11:14;break;case 11:k=HEAP16[(g+4|0)>>1];m=((l+48|0)+16|0)+((k&65535)<<3)|0;HEAP16[(i+4|0)>>1]=HEAP16[(m|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(m+4|0)>>2];
b=4==(HEAPU16[(i+4|0)>>1]&65535|0)?12:13;break;case 12:HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=HEAP32[(HEAP32[(m+4|0)>>2]+8|0)>>2]-1|0;b=13;break;case 13:d=1;b=19;break;case 14:j=HEAP16[(g+6|0)>>1];k=HEAP16[(g+4|0)>>1];m=((l+48|0)+16|0)+((k&65535)<<3)|0;b=4!=(HEAPU16[(m|0)>>1]&65535|0)?15:16;break;case 15:HEAP16[(i+4|0)>>1]=HEAP16[(m|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(m+4|0)>>2];d=1;b=19;break;case 16:HEAP32[o>>2]=-1;j=_AdjustFieldPosition(e,n,j,k,o);b=-1!=(HEAP32[o>>2]|0)?17:18;break;case 17:HEAP16[(i+
4|0)>>1]=4;HEAP32[(i+8|0)>>2]=HEAP32[(m+4|0)>>2];HEAP32[(i+12|0)>>2]=j&65535;HEAP32[(i+16|0)>>2]=((j&65535)+HEAP32[o>>2]|0)-1|0;d=1;b=19;break;case 18:d=HEAP32[((((l+48|0)+16|0)+((k&65535)<<3)|0)+4|0)>>2];m=(d+16|0)+((j&65535)<<3)|0;HEAP16[(i+4|0)>>1]=HEAP16[(m|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(m+4|0)>>2];d=1;b=19;break;case 19:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FactJNGetVar1.X=1;
function _FactJNGetVar3(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;a=f;e=c;k=HEAP32[(a+16|0)>>2];a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:g=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(k+6|0)>>1]&65535)<<2)|0)>>2]|0)>>2];a=8;break;case 4:a=((HEAPU32[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>9&127)-1|0)==(HEAPU16[(k+6|0)>>1]&65535|0)?5:6;break;case 5:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];a=7;break;case 6:g=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+((HEAPU16[(k+6|0)>>1]&65535)<<2)|0)>>2]|0)>>2];a=7;break;case 7:a=8;break;case 8:i=HEAP32[((((g+48|0)+16|0)+((HEAPU16[(k+8|0)>>1]&65535)<<3)|0)+4|0)>>2];a=0!=(HEAP32[k>>2]&1|0)?9:11;break;case 9:a=0!=(HEAPU32[k>>2]>>>1&1|0)?10:11;break;case 10:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+8|0)>>2]=i;HEAP32[(e+12|0)>>2]=HEAPU16[(k+2|0)>>1]&65535;HEAP32[(e+16|0)>>2]=HEAP32[(i+
8|0)>>2]-((HEAPU16[(k+4|0)>>1]&65535)+1|0)|0;b=1;a=15;break;case 11:a=0!=(HEAP32[k>>2]&1|0)?12:13;break;case 12:j=(i+16|0)+((HEAPU16[(k+2|0)>>1]&65535)<<3)|0;a=14;break;case 13:j=(i+16|0)+((HEAP32[(i+8|0)>>2]-((HEAPU16[(k+4|0)>>1]&65535)+1|0)|0)<<3)|0;a=14;break;case 14:HEAP16[(e+4|0)>>1]=HEAP16[(j|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(j+4|0)>>2];b=1;a=15;break;case 15:return b;default:assert(0,"bad label: "+a)}}_FactJNGetVar3.X=1;
function _FactSlotLength(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;a=f;e=c;j=0;HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];g=HEAP32[(a+16|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+12|0)>>2]+192|0)>>2];a=3;break;case 3:a=0!=(k|0)?4:8;break;case 4:a=(HEAP16[(k+4|0)>>1]<<16>>16|0)!=(HEAPU16[(g+4|0)>>1]&65535|0)?5:6;break;case 5:a=7;break;case 6:j=j+((HEAP32[(k+12|0)>>2]-HEAP32[(k+8|0)>>2]|0)+1|0)|0;a=7;break;case 7:k=HEAP32[(k+
16|0)>>2];a=3;break;case 8:i=HEAP32[((((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU16[(g+4|0)>>1]&65535)<<3)|0)+4|0)>>2];a=HEAPU32[(i+8|0)>>2]>>>0<((HEAPU16[(g+2|0)>>1]&65535)+j|0)>>>0?9:10;break;case 9:b=0;a=14;break;case 10:a=0!=(HEAP32[g>>2]&1|0)?11:13;break;case 11:a=HEAPU32[(i+8|0)>>2]>>>0>((HEAPU16[(g+2|0)>>1]&65535)+j|0)>>>0?12:13;break;case 12:b=0;a=14;break;case 13:HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=1;a=14;break;case 14:return b;
default:assert(0,"bad label: "+a)}}_FactSlotLength.X=1;
function _FactJNCompVars1(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k;b=h;k=HEAP32[(f+16|0)>>2];c=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>9&127)-1|0;e=(HEAPU32[k>>2]>>>9&255)-1|0;i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];c=(c|0)!=(e|0)?3:4;break;case 3:j=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]|0)>>2];c=5;break;case 4:j=i;c=5;break;case 5:d=HEAPU32[k>>2]>>>
2&127;g=HEAPU32[k>>2]>>>17&127;c=(HEAPU16[(((i+48|0)+16|0)+(d<<3)|0)>>1]&65535|0)!=(HEAPU16[(((j+48|0)+16|0)+(g<<3)|0)>>1]&65535|0)?6:7;break;case 6:a=HEAPU32[k>>2]>>>1&1;c=10;break;case 7:c=(HEAP32[((((i+48|0)+16|0)+(d<<3)|0)+4|0)>>2]|0)!=(HEAP32[((((j+48|0)+16|0)+(g<<3)|0)+4|0)>>2]|0)?8:9;break;case 8:a=HEAPU32[k>>2]>>>1&1;c=10;break;case 9:a=HEAP32[k>>2]&1;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}_FactJNCompVars1.X=1;
function _FactJNCompVars2(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n;b=h;k=HEAP32[(f+16|0)>>2];c=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>9&127)-1|0;e=(HEAPU32[k>>2]>>>17&255)-1|0;d=HEAPU32[k>>2]>>>2&127;g=HEAPU32[k>>2]>>>25&127;i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];c=(c|0)!=(e|0)?3:4;break;case 3:j=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]|0)>>2];
c=5;break;case 4:j=i;c=5;break;case 5:c=4!=(HEAPU16[(((i+48|0)+16|0)+(d<<3)|0)>>1]&65535|0)?6:7;break;case 6:m=((i+48|0)+16|0)+(d<<3)|0;c=11;break;case 7:l=HEAP32[((((i+48|0)+16|0)+(d<<3)|0)+4|0)>>2];c=0!=(HEAPU32[k>>2]>>>9&1|0)?8:9;break;case 8:m=(l+16|0)+((HEAPU32[k>>2]>>>10&127)<<3)|0;c=10;break;case 9:m=(l+16|0)+((HEAP32[(l+8|0)>>2]-((HEAPU32[k>>2]>>>10&127)+1|0)|0)<<3)|0;c=10;break;case 10:c=11;break;case 11:c=4!=(HEAPU16[(((j+48|0)+16|0)+(g<<3)|0)>>1]&65535|0)?12:13;break;case 12:n=((j+48|0)+
16|0)+(g<<3)|0;c=17;break;case 13:l=HEAP32[((((j+48|0)+16|0)+(g<<3)|0)+4|0)>>2];c=0!=(HEAP32[(k+4|0)>>2]&1|0)?14:15;break;case 14:n=(l+16|0)+((HEAPU32[(k+4|0)>>2]>>>1&127)<<3)|0;c=16;break;case 15:n=(l+16|0)+((HEAP32[(l+8|0)>>2]-((HEAPU32[(k+4|0)>>2]>>>1&127)+1|0)|0)<<3)|0;c=16;break;case 16:c=17;break;case 17:c=(HEAPU16[(m|0)>>1]&65535|0)!=(HEAPU16[(n|0)>>1]&65535|0)?18:19;break;case 18:a=HEAPU32[k>>2]>>>1&1;c=22;break;case 19:c=(HEAP32[(m+4|0)>>2]|0)!=(HEAP32[(n+4|0)>>2]|0)?20:21;break;case 20:a=
HEAPU32[k>>2]>>>1&1;c=22;break;case 21:a=HEAP32[k>>2]&1;c=22;break;case 22:return a;default:assert(0,"bad label: "+c)}}_FactJNCompVars2.X=1;
function _FactPNCompVars1(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;a=f;d=c;j=HEAP32[(a+16|0)>>2];g=((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU32[j>>2]>>>2&127)<<3)|0;i=((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+188|0)>>2]+48|0)+16|0)+((HEAPU32[j>>2]>>>9&127)<<3)|0;a=(HEAPU16[(g|0)>>1]&65535|0)!=(HEAPU16[(i|0)>>1]&65535|0)?3:4;break;case 3:e=HEAPU32[j>>2]>>>1&1;a=8;break;case 4:a=(HEAP32[(g+4|0)>>2]|0)!=(HEAP32[(i+4|0)>>2]|0)?5:6;break;case 5:e=
HEAPU32[j>>2]>>>1&1;a=7;break;case 6:e=HEAP32[j>>2]&1;a=7;break;case 7:a=8;break;case 8:HEAP16[(d+4|0)>>1]=2;a=0!=(e|0)?9:10;break;case 9:HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]|0)>>2];a=11;break;case 10:HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=11;break;case 11:return e;default:assert(0,"bad label: "+a)}}_FactPNCompVars1.X=1;
function _FactStoreMultifield(h,f,c){_StoreInMultifield(h,c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],0);return 1}
function _BuildRHSAssert(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s;j=h;k=f;l=c;m=a;n=b;o=d;p=e;HEAP32[m>>2]=0;g=0==(o|0)?3:8;break;case 3:g=171==(HEAPU16[(l|0)>>1]&65535|0)?4:7;break;case 4:g=0!=(n|0)?5:6;break;case 5:HEAP32[m>>2]=1;_SyntaxErrorMessage(j,p);g=6;break;case 6:i=0;g=25;break;case 7:g=8;break;case 8:q=s=0;g=9;break;case 9:r=g=_GetRHSPattern(j,k,l,m,0,o,1,171);g=0!=(g|0)?10:14;break;case 10:_PPCRAndIndent(j);g=j;var t=_FindFunction(j,STRING_TABLE.__str1593|
0);g=_GenConstant(g,30,t);HEAP32[(g+8|0)>>2]=r;r=g;g=0==(q|0)?11:12;break;case 11:s=r;g=13;break;case 12:HEAP32[(q+12|0)>>2]=r;g=13;break;case 13:q=r;o=1;g=9;break;case 14:g=0!=(HEAP32[m>>2]|0)?15:16;break;case 15:_ReturnExpression(j,s);i=0;g=25;break;case 16:g=171==(HEAPU16[(l|0)>>1]&65535|0)?17:18;break;case 17:_PPBackup(j);_PPBackup(j);_SavePPBuffer(j,STRING_TABLE.__str11594|0);g=18;break;case 18:g=0==(s|0)?19:22;break;case 19:g=0!=(n|0)?20:21;break;case 20:HEAP32[m>>2]=1;_SyntaxErrorMessage(j,
p);g=21;break;case 21:i=0;g=25;break;case 22:g=0!=(HEAP32[(s+12|0)>>2]|0)?23:24;break;case 23:g=j;t=_FindFunction(j,STRING_TABLE.__str21595|0);g=_GenConstant(g,30,t);HEAP32[(g+8|0)>>2]=s;s=g;g=24;break;case 24:i=s;g=25;break;case 25:return i;default:assert(0,"bad label: "+g)}}_BuildRHSAssert.X=1;
function _GetRHSPattern(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w=i,x=i+4,y,A;l=h;m=f;n=c;o=a;p=b;j=d;q=e;r=g;v=s=0;HEAP32[o>>2]=0;j=0!=(j|0)?3:4;break;case 3:_GetToken(l,m,n);j=4;break;case 4:j=0!=(q|0)?5:10;break;case 5:j=(HEAPU16[(n|0)>>1]&65535|0)==(r|0)?6:7;break;case 6:k=0;j=47;break;case 7:j=170!=(HEAPU16[(n|0)>>1]&65535|0)?8:9;break;case 8:_SyntaxErrorMessage(l,
STRING_TABLE.__str31596|0);HEAP32[o>>2]=1;k=0;j=47;break;case 9:j=10;break;case 10:_GetToken(l,m,n);j=2!=(HEAPU16[(n|0)>>1]&65535|0)?11:12;break;case 11:_SyntaxErrorMessage(l,STRING_TABLE.__str41597|0);HEAP32[o>>2]=1;k=0;j=47;break;case 12:j=0==(_strcmp(HEAP32[(HEAP32[(n+4|0)>>2]+16|0)>>2],STRING_TABLE.__str51598|0)|0)?14:13;break;case 13:j=0==(_strcmp(HEAP32[(HEAP32[(n+4|0)>>2]+16|0)>>2],STRING_TABLE.__str61599|0)|0)?14:15;break;case 14:_SyntaxErrorMessage(l,STRING_TABLE.__str41597|0);HEAP32[o>>
2]=1;k=0;j=47;break;case 15:j=16;break;case 16:A=HEAP32[(n+4|0)>>2];j=0!=(_ReservedPatternSymbol(l,HEAP32[(A+16|0)>>2],0)|0)?17:18;break;case 17:_ReservedPatternSymbolErrorMsg(l,HEAP32[(A+16|0)>>2],STRING_TABLE.__str71600|0);HEAP32[o>>2]=1;k=0;j=47;break;case 18:j=0!=(_FindModuleSeparator(HEAP32[(A+16|0)>>2])|0)?19:20;break;case 19:_IllegalModuleSpecifierMessage(l);HEAP32[o>>2]=1;k=0;j=47;break;case 20:y=_FindImportedConstruct(l,STRING_TABLE.__str81601|0,0,HEAP32[(A+16|0)>>2],x,1,0);j=1<(HEAP32[x>>
2]|0)?21:22;break;case 21:_AmbiguousReferenceErrorMessage(l,STRING_TABLE.__str81601|0,HEAP32[(A+16|0)>>2]);HEAP32[o>>2]=1;k=0;j=47;break;case 22:j=0==(y|0)?23:31;break;case 23:j=0!=(_Bloaded(l)|0)?24:26;break;case 24:j=0!=(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?26:25;break;case 25:_NoSuchTemplateError(l,HEAP32[(A+16|0)>>2]);HEAP32[o>>2]=1;k=0;j=47;break;case 26:j=l;var z=_EnvGetCurrentModule(l);j=0!=(_FindImportExportConflict(j,STRING_TABLE.__str81601|0,z,HEAP32[(A+16|0)>>2])|
0)?27:28;break;case 27:_ImportExportConflictMessage(l,STRING_TABLE.__str91602|0,HEAP32[(A+16|0)>>2],0,0);HEAP32[o>>2]=1;k=0;j=47;break;case 28:j=0!=(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?30:29;break;case 29:y=_CreateImpliedDeftemplate(l,A,1);j=30;break;case 30:j=31;break;case 31:j=0!=(y|0)?32:36;break;case 32:j=0==(HEAP32[(y+28|0)>>2]&1|0)?33:36;break;case 33:u=_GenConstant(l,63,y);j=_ParseAssertTemplate(l,m,n,o,r,p,y);HEAP32[(u+12|0)>>2]=j;j=0!=(HEAP32[o>>2]|0)?34:35;break;
case 34:_ReturnExpression(l,u);u=0;j=35;break;case 35:k=u;j=47;break;case 36:u=_GenConstant(l,63,y);_SavePPBuffer(l,STRING_TABLE.__str101603|0);j=37;break;case 37:t=j=_GetAssertArgument(l,m,n,o,r,p,w);j=0!=(j|0)?38:42;break;case 38:j=0==(v|0)?39:40;break;case 39:v=t;j=41;break;case 40:HEAP32[(s+12|0)>>2]=t;j=41;break;case 41:s=t;_SavePPBuffer(l,STRING_TABLE.__str101603|0);j=37;break;case 42:j=0!=(HEAP32[o>>2]|0)?43:46;break;case 43:j=0!=(HEAP32[w>>2]|0)?44:45;break;case 44:_SyntaxErrorMessage(l,STRING_TABLE.__str31596|
0);j=45;break;case 45:_ReturnExpression(l,u);_ReturnExpression(l,v);k=0;j=47;break;case 46:_PPBackup(l);_PPBackup(l);_SavePPBuffer(l,HEAP32[(n+8|0)>>2]);k=l;j=_AddBitMap(l,__str111604|0,1);k=_GenConstant(k,62,j);HEAP32[(u+12|0)>>2]=k;HEAP32[(HEAP32[(u+12|0)>>2]+8|0)>>2]=v;k=u;j=47;break;case 47:return h=k,STACKTOP=i,h;default:assert(0,"bad label: "+j)}}_GetRHSPattern.X=1;
function _NoSuchTemplateError(h,f){_PrintErrorID(h,STRING_TABLE.__str141607|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str151608|0,STRING_TABLE.__str161609|0);_EnvPrintRouter(h,STRING_TABLE.__str151608|0,f);_EnvPrintRouter(h,STRING_TABLE.__str151608|0,STRING_TABLE.__str171610|0)}
function _GetAssertArgument(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p;j=h;k=f;l=c;m=a;g=b;n=d;o=e;HEAP32[o>>2]=1;_GetToken(j,k,l);g=(HEAPU16[(l|0)>>1]&65535|0)==(g|0)?3:4;break;case 3:i=0;g=30;break;case 4:g=2==(HEAPU16[(l|0)>>1]&65535|0)?5:6;break;case 5:g=0==(_strcmp(HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2],STRING_TABLE.__str51598|0)|0)?7:16;break;case 6:g=170==(HEAPU16[(l|0)>>1]&65535|0)?7:16;break;case 7:g=0!=(n|0)?8:9;break;case 8:HEAP32[m>>2]=1;i=0;g=30;break;case 9:g=
170==(HEAPU16[(l|0)>>1]&65535|0)?10:11;break;case 10:p=_Function1Parse(j,k);g=12;break;case 11:p=_Function0Parse(j,k);g=12;break;case 12:g=0==(p|0)?13:14;break;case 13:HEAP32[o>>2]=0;HEAP32[m>>2]=1;g=15;break;case 14:HEAP16[(l|0)>>1]=171;g=_EnvAddSymbol(j,STRING_TABLE.__str11594|0);HEAP32[(l+4|0)>>2]=g;HEAP32[(l+8|0)>>2]=STRING_TABLE.__str11594|0;g=15;break;case 15:i=p;g=30;break;case 16:g=2==(HEAPU16[(l|0)>>1]&65535|0)?21:17;break;case 17:g=3==(HEAPU16[(l|0)>>1]&65535|0)?21:18;break;case 18:g=8==
(HEAPU16[(l|0)>>1]&65535|0)?21:19;break;case 19:g=0==(HEAPU16[(l|0)>>1]&65535|0)?21:20;break;case 20:g=1==(HEAPU16[(l|0)>>1]&65535|0)?21:22;break;case 21:i=_GenConstant(j,HEAP16[(l|0)>>1],HEAP32[(l+4|0)>>2]);g=30;break;case 22:g=35==(HEAPU16[(l|0)>>1]&65535|0)?26:23;break;case 23:g=33==(HEAPU16[(l|0)>>1]&65535|0)?26:24;break;case 24:g=34==(HEAPU16[(l|0)>>1]&65535|0)?26:25;break;case 25:g=36==(HEAPU16[(l|0)>>1]&65535|0)?26:29;break;case 26:g=0!=(n|0)?27:28;break;case 27:HEAP32[m>>2]=1;i=0;g=30;break;
case 28:i=_GenConstant(j,HEAP16[(l|0)>>1],HEAP32[(l+4|0)>>2]);g=30;break;case 29:HEAP32[m>>2]=1;i=0;g=30;break;case 30:return i;default:assert(0,"bad label: "+g)}}_GetAssertArgument.X=1;
function _StringToFact(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k,l=c+12,m=c+16;d=h;a=f;i=0;HEAP32[l>>2]=0;_SetEvaluationError(d,0);_OpenStringSource(d,STRING_TABLE.__str121605|0,a,0);e=_GetRHSPattern(d,STRING_TABLE.__str121605|0,e,l,0,1,1,171);_CloseStringSource(d,STRING_TABLE.__str121605|0);a=0==(e|0)?3:5;break;case 3:a=0!=(HEAP32[l>>2]|0)?5:4;break;case 4:_SyntaxErrorMessage(d,
STRING_TABLE.__str31596|0);_ReturnExpression(d,e);b=0;a=18;break;case 5:a=0!=(HEAP32[l>>2]|0)?6:7;break;case 6:_ReturnExpression(d,e);b=0;a=18;break;case 7:a=0!=(_ExpressionContainsVariables(e,0)|0)?8:9;break;case 8:_LocalVariableErrorMessage(d,STRING_TABLE.__str131606|0);_SetEvaluationError(d,1);_ReturnExpression(d,e);b=0;a=18;break;case 9:k=HEAP32[(e+12|0)>>2];a=10;break;case 10:a=0!=(k|0)?11:13;break;case 11:i=i+1|0;a=12;break;case 12:k=HEAP32[(k+12|0)>>2];a=10;break;case 13:g=_CreateFactBySize(d,
i);HEAP32[(g+16|0)>>2]=HEAP32[(e+4|0)>>2];_ExpressionInstall(d,e);j=0;k=HEAP32[(e+12|0)>>2];a=14;break;case 14:a=0!=(k|0)?15:17;break;case 15:_EvaluateExpression(d,k,m);HEAP16[(((g+48|0)+16|0)+(j<<3)|0)>>1]=HEAP16[(m+4|0)>>1];HEAP32[((((g+48|0)+16|0)+(j<<3)|0)+4|0)>>2]=HEAP32[(m+8|0)>>2];j=j+1|0;a=16;break;case 16:k=HEAP32[(k+12|0)>>2];a=14;break;case 17:_ExpressionDeinstall(d,e);_ReturnExpression(d,e);b=g;a=18;break;case 18:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_StringToFact.X=1;
function _FileCommandDefinitions(h){_AllocateEnvironmentData(h,14,48,640);_EnvDefineFunction2(h,STRING_TABLE.__str1617|0,98,642,STRING_TABLE.__str11618|0,STRING_TABLE.__str21619|0);_EnvDefineFunction2(h,STRING_TABLE.__str31620|0,98,644,STRING_TABLE.__str41621|0,STRING_TABLE.__str21619|0);_EnvDefineFunction2(h,STRING_TABLE.__str51622|0,98,646,STRING_TABLE.__str61623|0,STRING_TABLE.__str21619|0);_EnvDefineFunction2(h,STRING_TABLE.__str71624|0,98,648,STRING_TABLE.__str81625|0,STRING_TABLE.__str91626|
0);_EnvDefineFunction2(h,STRING_TABLE.__str101627|0,98,650,STRING_TABLE.__str111628|0,STRING_TABLE.__str21619|0);_EnvDefineFunction2(h,STRING_TABLE.__str121629|0,98,652,STRING_TABLE.__str131630|0,STRING_TABLE.__str21619|0);_EnvDefineFunction2(h,STRING_TABLE.__str141631|0,98,654,STRING_TABLE.__str151632|0,STRING_TABLE.__str21619|0);_InitializeBsaveData(h);_EnvDefineFunction2(h,STRING_TABLE.__str161633|0,98,656,STRING_TABLE.__str171634|0,STRING_TABLE.__str21619|0);_InitializeBloadData(h);_EnvDefineFunction2(h,
STRING_TABLE.__str181635|0,98,658,STRING_TABLE.__str191636|0,STRING_TABLE.__str21619|0)}
function _DeallocateFileCommandData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+40|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:8;break;case 4:b=HEAP32[(a+12|0)>>2];f=0==(HEAP32[(a|0)>>2]|0)?5:6;break;case 5:_GenClose(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+40|0)>>2]+4|0)>>2]);f=7;break;case 6:f=c;var d=HEAP32[(a+8|0)>>2],e=_strlen(HEAP32[(a+8|0)>>2])+1|0;_rm(f,d,e);f=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>
2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=b;f=3;break;case 8:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+28|0)>>2]|0)?9:10;break;case 9:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+36|0)>>
2]);f=10;break;case 10:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+4|0)>>2]|0)?11:12;break;case 11:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+12|0)>>2]);f=12;break;case 12:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]|0)>>2]|0)?13:14;break;case 13:_GenClose(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]|0)>>2]);f=14;break;case 14:return;default:assert(0,"bad label: "+f)}}_DeallocateFileCommandData.X=1;
function _BatchCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str1617|0,0,1)|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str1617|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=7;break;case 6:c=_OpenBatch(a,b,0);f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _BatchStarCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str31620|0,0,1)|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str31620|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=7;break;case 6:c=_EnvBatchStar(a,b);f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _DribbleOnCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str51622|0,0,1)|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str51622|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=7;break;case 6:c=_EnvDribbleOn(a,b);f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _DribbleOffCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str71624|0,0,0)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=_EnvDribbleOff(a);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SaveCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str101627|0,0,1)|0)?3:4;break;case 3:c=0;f=9;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str101627|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=9;break;case 6:f=0==(_EnvSave(a,b)|0)?7:8;break;case 7:_OpenErrorMessage(a,STRING_TABLE.__str101627|0,b);c=0;f=9;break;case 8:c=1;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _LoadCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str121629|0,0,1)|0)?3:4;break;case 3:c=0;f=11;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str121629|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=11;break;case 6:_SetPrintWhileLoading(a,1);d=f=_EnvLoad(a,b);f=0==(f|0)?7:8;break;case 7:_SetPrintWhileLoading(a,0);_OpenErrorMessage(a,STRING_TABLE.__str121629|0,b);c=0;f=11;break;case 8:_SetPrintWhileLoading(a,0);f=-1==(d|0)?9:10;break;case 9:c=
0;f=11;break;case 10:c=1;f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}
function _LoadStarCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str141631|0,0,1)|0)?3:4;break;case 3:c=0;f=11;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str141631|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=11;break;case 6:d=f=_EnvLoad(a,b);f=0==(f|0)?7:8;break;case 7:_OpenErrorMessage(a,STRING_TABLE.__str141631|0,b);c=0;f=11;break;case 8:f=-1==(d|0)?9:10;break;case 9:c=0;f=11;break;case 10:c=1;f=11;break;case 11:return c;default:assert(0,"bad label: "+
f)}}function _EnvDribbleActive(h){var f;for(f=2;;)switch(f){case 2:var c;f=0!=(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+56|0)>>2]|0)>>2]|0)?3:4;break;case 3:c=1;f=5;break;case 4:c=0;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}function _SetDribbleStatusFunction(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+56|0)>>2]+16|0)>>2]=f}
function _EnvDribbleOn(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2]|0)?3:4;break;case 3:_EnvDribbleOff(b);c=4;break;case 4:c=_GenOpen(b,d,STRING_TABLE.__str201637|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2]|0)?5:6;break;case 5:_OpenErrorMessage(b,STRING_TABLE.__str51622|0,d);a=0;c=9;break;case 6:_EnvAddRouter(b,STRING_TABLE.__str211638|0,40,660,662,664,666,
668);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]=0;c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+16|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+16|0)>>2]](b,1);c=8;break;case 8:a=1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}_EnvDribbleOn.X=1;
function _EnvDribbleOff(h){var f=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=0;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+16|0)>>2]](a,0);c=4;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2]|0)?5:10;break;case 5:c=0<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+8|0)>>2]|0)?6:
7;break;case 6:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+4|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2],STRING_TABLE.__str221639|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));c=7;break;case 7:_EnvDeleteRouter(a,STRING_TABLE.__str211638|0);c=0==(_GenClose(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2])|0)?8:9;break;case 8:b=1;c=9;break;case 9:c=11;break;case 10:b=1;c=11;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+56|0)>>2]|0)>>2]=0;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+4|0)>>2]|0)?12:13;break;case 12:_rm(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+4|0)>>2]=0;c=13;break;case 13:return HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+8|0)>>2]=0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+12|0)>>2]=0,h=b,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_EnvDribbleOff.X=1;
function _FindDribble(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=0==(_strcmp(b,STRING_TABLE.__str231640|0)|0)?10:3;break;case 3:c=0==(_strcmp(b,STRING_TABLE.__str251642|0)|0)?10:4;break;case 4:c=0==(_strcmp(b,STRING_TABLE.__str261643|0)|0)?10:5;break;case 5:c=0==(_strcmp(b,STRING_TABLE.__str271644|0)|0)?10:6;break;case 6:c=0==(_strcmp(b,STRING_TABLE.__str281645|0)|0)?10:7;break;case 7:c=0==(_strcmp(b,STRING_TABLE.__str291646|0)|0)?10:8;break;case 8:c=0==(_strcmp(b,STRING_TABLE.__str301647|
0)|0)?10:9;break;case 9:c=0==(_strcmp(b,STRING_TABLE.__str311648|0)|0)?10:11;break;case 10:a=1;c=12;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
function _PrintDribble(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=0;a=3;break;case 3:a=0!=(HEAP8[e+g|0]<<24>>24|0)?4:6;break;case 4:_PutcDribbleBuffer(b,HEAP8[e+g|0]<<24>>24);a=5;break;case 5:g=g+1|0;a=3;break;case 6:return _EnvDeactivateRouter(b,STRING_TABLE.__str211638|0),_EnvPrintRouter(b,d,e),_EnvActivateRouter(b,STRING_TABLE.__str211638|0),1;default:assert(0,"bad label: "+a)}}
function _GetcDribble(h,f){var c;_EnvDeactivateRouter(h,STRING_TABLE.__str211638|0);c=_EnvGetcRouter(h,f);_EnvActivateRouter(h,STRING_TABLE.__str211638|0);_PutcDribbleBuffer(h,c);return c}
function _UngetcDribble(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=4;break;case 4:return HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2]+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]|0]=0,_EnvDeactivateRouter(b,STRING_TABLE.__str211638|0),h=_EnvUngetcRouter(b,d,e),_EnvActivateRouter(b,STRING_TABLE.__str211638|
0),h;default:assert(0,"bad label: "+a)}}_UngetcDribble.X=1;
function _ExitDribble(h){var f=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a;a=h;c=0<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+4|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2],STRING_TABLE.__str221639|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=c,tempInt));c=4;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2]|0)?5:6;break;case 5:_GenClose(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]|0)>>2]);c=6;break;case 6:return STACKTOP=f,1;default:assert(0,"bad label: "+c)}}_ExitDribble.X=1;
function _LLGetcBatch(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;i=-1;j=1;a=3;break;case 3:if(-1==(i|0))a=4;else{var k=0;a=5}break;case 4:k=1==(j|0);a=5;break;case 5:a=k?6:14;break;case 6:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+20|0)>>2]|0)?7:8;break;case 7:i=_getc(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+24|0)>>2]);a=9;break;case 8:i=_EnvGetcRouter(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+24|0)>>2]);a=9;break;case 9:a=-1==(i|0)?10:13;break;case 10:a=
0<(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+32|0)>>2]|0)?11:12;break;case 11:_EnvPrintRouter(d,STRING_TABLE.__str231640|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2]);a=12;break;case 12:j=_RemoveBatch(d);a=13;break;case 13:a=3;break;case 14:a=-1==(i|0)?15:20;break;case 15:a=0<(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+32|0)>>2]|0)?16:17;break;case 16:_EnvPrintRouter(d,STRING_TABLE.__str231640|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2]);a=17;break;case 17:_EnvDeleteRouter(d,
STRING_TABLE.__str1617|0);_RemoveBatch(d);a=1==(g|0)?18:19;break;case 18:b=-1;a=26;break;case 19:b=_EnvGetcRouter(d,e);a=26;break;case 20:a=_ExpandStringWithChar(d,(i&255)<<24>>24,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+32|0,HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+36|0)>>2]+120|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2]=a;a=10==((i&255)<<24>>24|0)?21:25;break;case 21:_EnvPrintRouter(d,
STRING_TABLE.__str231640|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+32|0)>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2]|0)?22:24;break;case 22:a=120<HEAPU32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+36|0)>>2]>>>0?23:24;break;case 23:_rm(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+36|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+36|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+56|0)>>2]+28|0)>>2]=0;a=24;break;case 24:a=25;break;case 25:b=i;a=26;break;case 26:return b;default:assert(0,"bad label: "+a)}}_LLGetcBatch.X=1;function _BatchActive(h){var f;for(f=2;;)switch(f){case 2:var c;f=0!=(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?3:4;break;case 3:c=1;f=5;break;case 4:c=0;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _RemoveBatch(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?3:4;break;case 3:c=0;f=13;break;case 4:f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)>>2]|0)?5:6;break;case 5:_GenClose(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]+4|0)>>2]);f=7;break;case 6:_CloseStringSource(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]+4|0)>>2]);f=a;var d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+56|0)>>2]+40|0)>>2]+8|0)>>2],e=_strlen(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]+8|0)>>2])+1|0;_rm(f,d,e);f=7;break;case 7:f=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?8:11;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+44|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+24|0)>>2]=0;f=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+28|0)>>2]|0)?9:10;break;case 9:_rm(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>
2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+36|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+28|0)>>2]=0;f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+32|0)>>2]=0;b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+36|0)>>2]=0;f=12;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+56|0)>>2]+40|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+56|0)>>2]+32|0)>>2]=0;b=1;f=12;break;case 12:c=b;f=13;break;case 13:return c;default:assert(0,"bad label: "+f)}}_RemoveBatch.X=1;
function _OpenBatch(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=_GenOpen(d,e,STRING_TABLE.__str241641|0);a=0==(i|0)?3:4;break;case 3:_OpenErrorMessage(d,STRING_TABLE.__str1617|0,e);b=0;a=7;break;case 4:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?5:6;break;case 5:_EnvAddRouter(d,STRING_TABLE.__str1617|0,20,670,0,672,674,676);a=6;break;case 6:_AddBatch(d,g,i,0,0);b=1;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _Batch(h,f){return _OpenBatch(h,f,0)}function _FindBatch(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=0==(_strcmp(f,STRING_TABLE.__str251642|0)|0)?3:4;break;case 3:a=1;c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}function _GetcBatch(h,f){return _LLGetcBatch(h,f,0)}
function _UngetcBatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+32|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+28|0)>>2]|0)?5:6;break;case 5:HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+28|0)>>2]+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+32|0)>>2]|0]=0;c=6;break;case 6:c=0==(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+56|0)>>2]+20|0)>>2]|0)?7:8;break;case 7:a=_ungetc(d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+24|0)>>2]);c=9;break;case 8:a=_EnvUngetcRouter(b,d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+24|0)>>2]);c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}_UngetcBatch.X=1;function _ExitBatch(h){_CloseAllBatchSources(h);return 1}
function _AddBatch(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=b;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var m=_genalloc(e,16);d=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=5;break;case 5:l=m;HEAP32[(l|0)>>2]=j;HEAP32[(l+4|0)>>2]=i;HEAP32[(l+8|0)>>2]=k;HEAP32[(l+12|0)>>2]=0;d=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+40|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+44|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+20|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+24|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+56|0)>>2]+32|0)>>2]=0;d=11;break;case 7:d=0==(g|0)?8:9;break;case 8:HEAP32[(l+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+40|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+40|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+20|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+24|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+32|0)>>2]=0;d=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+44|0)>>2]+12|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+56|0)>>2]+44|0)>>2]=l;d=10;break;case 10:d=11;break;case 11:return;default:assert(0,"bad label: "+d)}}_AddBatch.X=1;
function _OpenStringBatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;b=0==(_OpenStringSource(e,g,i,0)|0)?3:4;break;case 3:d=0;b=7;break;case 4:b=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+56|0)>>2]+40|0)>>2]|0)?5:6;break;case 5:_EnvAddRouter(e,STRING_TABLE.__str1617|0,20,670,0,672,674,676);b=6;break;case 6:_AddBatch(e,j,g,1,i);d=1;b=7;break;case 7:return d;default:assert(0,"bad label: "+b)}}
function _CloseAllBatchSources(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+28|0)>>2]|0)?3:6;break;case 3:f=0<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+32|0)>>2]|0)?4:5;break;case 4:_EnvPrintRouter(c,STRING_TABLE.__str231640|0,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+28|0)>>2]);f=5;break;case 5:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+36|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+56|0)>>2]+28|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+32|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+56|0)>>2]+36|0)>>2]=0;f=6;break;case 6:_EnvDeleteRouter(c,STRING_TABLE.__str1617|0);f=7;break;case 7:f=0!=(_RemoveBatch(c)|0)?8:9;break;case 8:f=7;break;case 9:return;default:assert(0,"bad label: "+f)}}_CloseAllBatchSources.X=1;
function _EnvBatchStar(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l=c+4;d=h;e=f;j=0;HEAP32[k>>2]=0;HEAP32[l>>2]=0;i=_GenOpen(d,e,STRING_TABLE.__str241641|0);a=0==(i|0)?3:4;break;case 3:_OpenErrorMessage(d,STRING_TABLE.__str1617|0,e);b=0;a=12;break;case 4:_SetHaltExecution(d,0);_SetEvaluationError(d,0);a=5;break;case 5:g=a=_getc(i);a=-1!=(a|0)?6:9;break;case 6:j=_ExpandStringWithChar(d,
g,j,k,l,HEAP32[l>>2]+80|0);a=0!=(_CompleteCommand(j)|0)?7:8;break;case 7:_FlushPPBuffer(d);_SetPPBufferStatus(d,0);_RouteCommand(d,j,0);_FlushPPBuffer(d);_SetHaltExecution(d,0);_SetEvaluationError(d,0);_FlushBindList(d);_genfree(d,j,HEAP32[l>>2]);j=0;HEAP32[l>>2]=0;HEAP32[k>>2]=0;a=8;break;case 8:a=5;break;case 9:a=0!=(j|0)?10:11;break;case 10:_genfree(d,j,HEAP32[l>>2]);a=11;break;case 11:_GenClose(d,i);b=1;a=12;break;case 12:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
_EnvBatchStar.X=1;
function _PutcDribbleBuffer(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d;b=h;d=f;a=-1==(d|0)?3:6;break;case 3:a=0<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]|0)?4:5;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2],STRING_TABLE.__str221639|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]=0;HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2]|0]=0;a=5;break;case 5:a=12;break;case 6:a=0>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0)>>2]|0)?7:10;break;case 7:a=0<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]|0)?8:9;break;case 8:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2],STRING_TABLE.__str221639|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0)>>2]=0;HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2]|0]=0;a=9;break;case 9:_fputc(d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]|0)>>2]);a=11;break;case 10:a=_ExpandStringWithChar(b,d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+8|0,HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>
2]+12|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+12|0)>>2]+120|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+56|0)>>2]+4|0)>>2]=a;a=11;break;case 11:a=12;break;case 12:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_PutcDribbleBuffer.X=1;function _InitializeFileRouter(h){_AllocateEnvironmentData(h,47,4,678);_EnvAddRouter(h,STRING_TABLE.__str1655|0,0,680,682,684,686,688)}
function _DeallocateFileRouterData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+188|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+8|0)>>2];_GenClose(c,HEAP32[(a+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|
0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateFileRouterData.X=1;function _FindFile(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=0!=(_FindFptr(h,f)|0)?3:4;break;case 3:a=1;c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _PrintFile(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");h=_FindFptr(h,f);_fprintf(h,STRING_TABLE.__str91664|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));_fflush(h);STACKTOP=a;return 1}
function _GetcFile(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=_FindFptr(h,f);a=_getc(c);c=(c|0)==(HEAP32[_stdin>>2]|0)?3:5;break;case 3:c=-1==(a|0)?4:5;break;case 4:_clearerr(HEAP32[_stdin>>2]);c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}function _UngetcFile(h,f,c){h=_FindFptr(h,c);return _ungetc(f,h)}function _ExitFile(h){_CloseAllFiles(h);return 1}
function _FindFptr(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(_strcmp(d,STRING_TABLE.__str11656|0)|0)?3:4;break;case 3:a=HEAP32[_stdout>>2];c=34;break;case 4:c=0==(_strcmp(d,STRING_TABLE.__str21657|0)|0)?5:6;break;case 5:a=HEAP32[_stdin>>2];c=34;break;case 6:c=0==(_strcmp(d,STRING_TABLE.__str31658|0)|0)?7:8;break;case 7:a=HEAP32[_stdout>>2];c=34;break;case 8:c=0==(_strcmp(d,STRING_TABLE.__str41659|0)|0)?9:10;break;case 9:a=HEAP32[_stdout>>2];c=34;break;case 10:c=0==(_strcmp(d,
STRING_TABLE.__str51660|0)|0)?11:12;break;case 11:a=HEAP32[_stdout>>2];c=34;break;case 12:c=0==(_strcmp(d,STRING_TABLE.__str61661|0)|0)?13:14;break;case 13:a=HEAP32[_stdout>>2];c=34;break;case 14:c=0==(_strcmp(d,STRING_TABLE.__str71662|0)|0)?15:16;break;case 15:a=HEAP32[_stdout>>2];c=34;break;case 16:c=0==(_strcmp(d,STRING_TABLE.__str81663|0)|0)?17:18;break;case 17:a=HEAP32[_stdout>>2];c=34;break;case 18:c=19;break;case 19:c=20;break;case 20:c=21;break;case 21:c=22;break;case 22:c=23;break;case 23:c=
24;break;case 24:c=25;break;case 25:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+188|0)>>2]|0)>>2];c=26;break;case 26:c=0!=(e|0)?27:28;break;case 27:var g=0!=(_strcmp(d,HEAP32[(e|0)>>2])|0)&1;c=29;break;case 28:g=0;c=29;break;case 29:c=0!=(g|0)?30:31;break;case 30:e=HEAP32[(e+8|0)>>2];c=26;break;case 31:c=0!=(e|0)?32:33;break;case 32:a=HEAP32[(e+4|0)>>2];c=34;break;case 33:a=0;c=34;break;case 34:return a;default:assert(0,"bad label: "+c)}}_FindFptr.X=1;
function _OpenAFile(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;b=c;i=a;g=b=_GenOpen(e,g,b);b=0==(b|0)?3:4;break;case 3:d=0;b=8;break;case 4:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?5:6;break;case 5:var j=_genalloc(e,12);b=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=7;break;case 7:d=j;b=e;var k=_strlen(i)+1|0;b=_gm2(b,k);HEAP32[(d|0)>>2]=b;_strcpy(HEAP32[(d|0)>>2],i);HEAP32[(d+4|0)>>2]=g;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+188|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+188|0)>>2]|0)>>2]=d;d=1;b=8;break;case 8:return d;default:assert(0,"bad label: "+b)}}_OpenAFile.X=1;
function _CloseFile(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+188|0)>>2]|0)>>2];g=0;c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:c=0==(_strcmp(HEAP32[(e|0)>>2],d)|0)?5:9;break;case 5:_GenClose(b,HEAP32[(e+4|0)>>2]);c=b;var i=HEAP32[(e|0)>>2],j=_strlen(HEAP32[(e|0)>>2])+1|0;_rm(c,i,j);c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+188|0)>>2]|0)>>2]=HEAP32[(e+8|0)>>2];c=8;break;case 7:HEAP32[(g+8|0)>>2]=HEAP32[(e+8|0)>>2];c=8;
break;case 8:_rm(b,e,12);a=1;c=12;break;case 9:g=e;c=10;break;case 10:e=HEAP32[(e+8|0)>>2];c=3;break;case 11:a=0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_CloseFile.X=1;
function _CloseAllFiles(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+188|0)>>2]|0)>>2]|0)?3:4;break;case 3:c=0;f=8;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+188|0)>>2]|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:7;break;case 6:_GenClose(a,HEAP32[(b+4|0)>>2]);f=b;var d=a,e=HEAP32[(b|0)>>2],g=_strlen(HEAP32[(b|0)>>2])+1|0;_rm(d,e,g);b=HEAP32[(b+8|0)>>2];_rm(a,f,12);f=5;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+188|0)>>2]|0)>>2]=0;c=1;f=8;break;
case 8:return c;default:assert(0,"bad label: "+f)}}_CloseAllFiles.X=1;function _gueco_AssertString(h){var f=_GetCurrentEnvironment();return _EnvAssertString(f,h)}function _gueco_Run(h){var f=_GetCurrentEnvironment();return _EnvRun(f,h)}function _gueco_Build(h){var f=_GetCurrentEnvironment();return _EnvBuild(f,h)}function _gueco_Eval(h){var f=_GetCurrentEnvironment();return _EnvEval(f,h,0)}
function _FieldConversion(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o=a,p=a+4;d=h;e=f;g=c;i=1;HEAP32[o>>2]=0;HEAP32[p>>2]=0;b=0==(e|0)?3:4;break;case 3:_SystemError(d,STRING_TABLE.__str1665|0,3);_EnvExitRouter(d,1);b=4;break;case 4:b=0!=(HEAP32[(e+68|0)>>2]|0)?5:8;break;case 5:b=0!=(HEAP32[(HEAP32[(e+68|0)>>2]+68|0)>>2]|0)?6:7;break;case 6:i=_AllVariablesInPattern(HEAP32[(e+
68|0)>>2],HEAP16[(e+32|0)>>1]<<16>>16);b=7;break;case 7:b=8;break;case 8:l=n=k=m=0;j=HEAP32[(e+68|0)>>2];b=9;break;case 9:b=0!=(j|0)?10:22;break;case 10:_ExtractAnds(d,j,i,o,p);b=0!=(HEAP32[o>>2]|0)?11:15;break;case 11:b=0==(m|0)?12:13;break;case 12:k=HEAP32[o>>2];b=14;break;case 13:HEAP32[(m+12|0)>>2]=HEAP32[o>>2];b=14;break;case 14:m=HEAP32[o>>2];b=15;break;case 15:b=0!=(HEAP32[p>>2]|0)?16:20;break;case 16:b=0==(n|0)?17:18;break;case 17:l=HEAP32[p>>2];b=19;break;case 18:HEAP32[(n+12|0)>>2]=HEAP32[p>>
2];b=19;break;case 19:n=HEAP32[p>>2];b=20;break;case 20:b=21;break;case 21:j=HEAP32[(j+68|0)>>2];b=9;break;case 22:b=0!=(k|0)?23:24;break;case 23:b=0!=(HEAP32[(k+12|0)>>2]|0)?25:26;break;case 24:b=26;break;case 25:b=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+4|0)>>2]);HEAP32[(b+8|0)>>2]=k;k=b;b=26;break;case 26:b=0!=(l|0)?27:28;break;case 27:b=0!=(HEAP32[(l+12|0)>>2]|0)?29:30;break;case 28:b=30;break;case 29:b=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+
4|0)>>2]);HEAP32[(b+8|0)>>2]=l;l=b;b=30;break;case 30:b=36==(HEAPU16[(e|0)>>1]&65535|0)?32:31;break;case 31:b=35==(HEAPU16[(e|0)>>1]&65535|0)?32:39;break;case 32:b=0!=(HEAP32[(e+24|0)>>2]|0)?33:39;break;case 33:b=(HEAP16[(HEAP32[(e+24|0)>>2]+32|0)>>1]<<16>>16|0)==(HEAP16[(e+32|0)>>1]<<16>>16|0)?34:35;break;case 34:b=_GenPNVariableComparison(d,e,HEAP32[(e+24|0)>>2]);k=_CombineExpressions(d,b,k);b=38;break;case 35:b=0<(HEAP16[(HEAP32[(e+24|0)>>2]+32|0)>>1]<<16>>16|0)?36:37;break;case 36:b=_GenJNVariableComparison(d,
e,HEAP32[(e+24|0)>>2]);l=_CombineExpressions(d,b,l);b=37;break;case 37:b=38;break;case 38:b=39;break;case 39:HEAP32[(e+52|0)>>2]=k;h=_CombineExpressions(d,HEAP32[(g+52|0)>>2],l);HEAP32[(g+52|0)>>2]=h;STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_FieldConversion.X=1;
function _AllVariablesInPattern(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=3;break;case 3:c=0!=(b|0)?4:21;break;case 4:e=b;c=5;break;case 5:c=0!=(e|0)?6:19;break;case 6:c=35==(HEAPU16[(e|0)>>1]&65535|0)?8:7;break;case 7:c=36==(HEAPU16[(e|0)>>1]&65535|0)?8:11;break;case 8:c=(HEAP16[(HEAP32[(e+24|0)>>2]+32|0)>>1]<<16>>16|0)!=(d|0)?9:10;break;case 9:a=0;c=22;break;case 10:c=17;break;case 11:c=163==(HEAPU16[(e|0)>>1]&65535|0)?13:12;break;case 12:c=164==(HEAPU16[(e|0)>>1]&65535|0)?13:
16;break;case 13:c=0==(_AllVariablesInExpression(HEAP32[(e+56|0)>>2],d)|0)?14:15;break;case 14:a=0;c=22;break;case 15:c=16;break;case 16:c=17;break;case 17:c=18;break;case 18:e=HEAP32[(e+64|0)>>2];c=5;break;case 19:c=20;break;case 20:b=HEAP32[(b+68|0)>>2];c=3;break;case 21:a=1;c=22;break;case 22:return a;default:assert(0,"bad label: "+c)}}_AllVariablesInPattern.X=1;
function _ExtractAnds(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+4;g=h;i=f;j=c;k=a;l=b;HEAP32[k>>2]=0;HEAP32[l>>2]=0;e=3;break;case 3:e=0!=(i|0)?4:6;break;case 4:_ExtractFieldTest(g,i,j,m,n);e=_CombineExpressions(g,HEAP32[k>>2],HEAP32[m>>2]);HEAP32[k>>2]=e;e=_CombineExpressions(g,HEAP32[l>>2],HEAP32[n>>2]);HEAP32[l>>2]=e;e=5;break;case 5:i=HEAP32[(i+64|0)>>2];
e=3;break;case 6:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}function _GenPNVariableComparison(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0!=(HEAP32[(HEAP32[(e+28|0)>>2]+60|0)>>2]|0)?3:4;break;case 3:b=FUNCTION_TABLE[HEAP32[(HEAP32[(e+28|0)>>2]+60|0)>>2]](d,e,g);a=5;break;case 4:b=0;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _GenJNVariableComparison(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(HEAP32[(HEAP32[(e+28|0)>>2]+44|0)>>2]|0)?4:3;break;case 3:a=0==(HEAP32[(HEAP32[(g+28|0)>>2]+44|0)>>2]|0)?4:5;break;case 4:b=0;a=11;break;case 5:a=(HEAP32[(HEAP32[(e+28|0)>>2]+44|0)>>2]|0)==(HEAP32[(HEAP32[(g+28|0)>>2]+44|0)>>2]|0)?6:7;break;case 6:b=FUNCTION_TABLE[HEAP32[(HEAP32[(e+28|0)>>2]+44|0)>>2]](d,e,g);a=11;break;case 7:a=0!=(HEAP32[(e+8|0)>>2]&1|0)?8:9;break;case 8:i=_GenConstant(d,30,
HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+12|0)>>2]);a=10;break;case 9:i=_GenConstant(d,30,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+8|0)>>2]);a=10;break;case 10:a=FUNCTION_TABLE[HEAP32[(HEAP32[(e+28|0)>>2]+40|0)>>2]](d,e);HEAP32[(i+8|0)>>2]=a;a=FUNCTION_TABLE[HEAP32[(HEAP32[(g+28|0)>>2]+40|0)>>2]](d,g);HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2]=a;b=i;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_GenJNVariableComparison.X=1;
function _GetvarReplace(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=14;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?5:6;break;case 5:var g=_genalloc(b,16);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:e=g;HEAP16[(e|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(d+4|0)>>2];c=_GetvarReplace(b,HEAP32[(d+64|0)>>2]);HEAP32[(e+12|0)>>2]=c;c=_GetvarReplace(b,HEAP32[(d+68|0)>>2]);HEAP32[(e+8|0)>>2]=c;c=35==(HEAPU16[(d|0)>>1]&65535|0)?9:8;break;case 8:c=36==(HEAPU16[(d|0)>>1]&65535|0)?9:10;break;case 9:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+24|0)>>2]+28|0)>>2]+36|0)>>2]](b,e,HEAP32[(d+
24|0)>>2]);c=13;break;case 10:c=33==(HEAPU16[(e|0)>>1]&65535|0)?11:12;break;case 11:_ReplaceGlobalVariable(b,e);c=12;break;case 12:c=13;break;case 13:a=e;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_GetvarReplace.X=1;
function _AllVariablesInExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:c=0!=(b|0)?4:13;break;case 4:c=35==(HEAPU16[(b|0)>>1]&65535|0)?6:5;break;case 5:c=36==(HEAPU16[(b|0)>>1]&65535|0)?6:9;break;case 6:c=(HEAP16[(HEAP32[(b+24|0)>>2]+32|0)>>1]<<16>>16|0)!=(d|0)?7:8;break;case 7:a=0;c=14;break;case 8:c=9;break;case 9:c=0==(_AllVariablesInExpression(HEAP32[(b+68|0)>>2],d)|0)?10:11;break;case 10:a=0;c=14;break;case 11:c=12;break;case 12:b=HEAP32[(b+64|0)>>2];c=3;break;
case 13:a=1;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_AllVariablesInExpression.X=1;
function _ExtractFieldTest(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;HEAP32[j>>2]=0;HEAP32[k>>2]=0;d=3==(HEAPU16[(g|0)>>1]&65535|0)?7:3;break;case 3:d=2==(HEAPU16[(g|0)>>1]&65535|0)?7:4;break;case 4:d=8==(HEAPU16[(g|0)>>1]&65535|0)?7:5;break;case 5:d=0==(HEAPU16[(g|0)>>1]&65535|0)?7:6;break;case 6:d=1==(HEAPU16[(g|0)>>1]&65535|0)?7:11;break;case 7:d=1==(i|0)?8:9;break;case 8:d=_GenPNConstant(e,g);HEAP32[j>>2]=d;d=10;break;case 9:d=_GenJNConstant(e,g);HEAP32[k>>
2]=d;d=10;break;case 10:d=35;break;case 11:d=163==(HEAPU16[(g|0)>>1]&65535|0)?12:17;break;case 12:d=1==(i|0)?13:15;break;case 13:d=1==(_AllVariablesInExpression(HEAP32[(g+56|0)>>2],HEAP16[(g+32|0)>>1]<<16>>16)|0)?14:15;break;case 14:d=_GenPNColon(e,g);HEAP32[j>>2]=d;d=16;break;case 15:d=_GenJNColon(e,g);HEAP32[k>>2]=d;d=16;break;case 16:d=34;break;case 17:d=164==(HEAPU16[(g|0)>>1]&65535|0)?18:23;break;case 18:d=1==(i|0)?19:21;break;case 19:d=1==(_AllVariablesInExpression(HEAP32[(g+56|0)>>2],HEAP16[(g+
32|0)>>1]<<16>>16)|0)?20:21;break;case 20:d=_GenPNEq(e,g);HEAP32[j>>2]=d;d=22;break;case 21:d=_GenJNEq(e,g);HEAP32[k>>2]=d;d=22;break;case 22:d=33;break;case 23:d=35==(HEAPU16[(g|0)>>1]&65535|0)?25:24;break;case 24:d=36==(HEAPU16[(g|0)>>1]&65535|0)?25:32;break;case 25:d=1==(i|0)?26:30;break;case 26:d=0!=(HEAP32[(g+24|0)>>2]|0)?27:28;break;case 27:d=(HEAP16[(HEAP32[(g+24|0)>>2]+32|0)>>1]<<16>>16|0)==(HEAP16[(g+32|0)>>1]<<16>>16|0)?29:30;break;case 28:d=30;break;case 29:d=_GenPNVariableComparison(e,
g,HEAP32[(g+24|0)>>2]);HEAP32[j>>2]=d;d=31;break;case 30:d=_GenJNVariableComparison(e,g,HEAP32[(g+24|0)>>2]);HEAP32[k>>2]=d;d=31;break;case 31:d=32;break;case 32:d=33;break;case 33:d=34;break;case 34:d=35;break;case 35:return;default:assert(0,"bad label: "+d)}}_ExtractFieldTest.X=1;
function _GenPNConstant(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0!=(HEAP32[(HEAP32[(d+28|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:a=FUNCTION_TABLE[HEAP32[(HEAP32[(d+28|0)>>2]+48|0)>>2]](b,d);c=8;break;case 4:c=0!=(HEAP32[(d+8|0)>>2]&1|0)?5:6;break;case 5:e=_GenConstant(b,30,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+12|0)>>2]);c=7;break;case 6:e=_GenConstant(b,30,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+8|0)>>2]);c=7;break;case 7:c=FUNCTION_TABLE[HEAP32[(HEAP32[(d+28|0)>>
2]+56|0)>>2]](b,d);HEAP32[(e+8|0)>>2]=c;c=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);HEAP32[(HEAP32[(e+8|0)>>2]+12|0)>>2]=c;a=e;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_GenPNConstant.X=1;
function _GenJNConstant(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0!=(HEAP32[(HEAP32[(d+28|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:a=FUNCTION_TABLE[HEAP32[(HEAP32[(d+28|0)>>2]+32|0)>>2]](b,d);c=8;break;case 4:c=0!=(HEAP32[(d+8|0)>>2]&1|0)?5:6;break;case 5:e=_GenConstant(b,30,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+12|0)>>2]);c=7;break;case 6:e=_GenConstant(b,30,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+8|0)>>2]);c=7;break;case 7:c=FUNCTION_TABLE[HEAP32[(HEAP32[(d+28|0)>>
2]+40|0)>>2]](b,d);HEAP32[(e+8|0)>>2]=c;c=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);HEAP32[(HEAP32[(e+8|0)>>2]+12|0)>>2]=c;a=e;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_GenJNConstant.X=1;
function _GenPNColon(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=f;d=_GetfieldReplace(a,HEAP32[(c+56|0)>>2]);c=0!=(HEAP32[(c+8|0)>>2]&1|0)?3:4;break;case 3:b=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+16|0)>>2]);HEAP32[(b+8|0)>>2]=d;c=5;break;case 4:b=d;c=5;break;case 5:return b;default:assert(0,"bad label: "+c)}}
function _GenJNColon(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=f;d=_GetvarReplace(a,HEAP32[(c+56|0)>>2]);c=0!=(HEAP32[(c+8|0)>>2]&1|0)?3:4;break;case 3:b=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+16|0)>>2]);HEAP32[(b+8|0)>>2]=d;c=5;break;case 4:b=d;c=5;break;case 5:return b;default:assert(0,"bad label: "+c)}}
function _GenPNEq(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=_GetfieldReplace(a,HEAP32[(b+56|0)>>2]);c=0!=(HEAP32[(b+8|0)>>2]&1|0)?3:4;break;case 3:d=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+12|0)>>2]);c=5;break;case 4:d=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+8|0)>>2]);c=5;break;case 5:return c=FUNCTION_TABLE[HEAP32[(HEAP32[(b+28|0)>>2]+56|0)>>2]](a,b),HEAP32[(d+8|0)>>2]=c,HEAP32[(HEAP32[(d+8|0)>>2]+12|0)>>2]=e,d;default:assert(0,
"bad label: "+c)}}_GenPNEq.X=1;
function _GenJNEq(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=_GetvarReplace(a,HEAP32[(b+56|0)>>2]);c=0!=(HEAP32[(b+8|0)>>2]&1|0)?3:4;break;case 3:d=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+12|0)>>2]);c=5;break;case 4:d=_GenConstant(a,30,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+8|0)>>2]);c=5;break;case 5:return c=FUNCTION_TABLE[HEAP32[(HEAP32[(b+28|0)>>2]+40|0)>>2]](a,b),HEAP32[(d+8|0)>>2]=c,HEAP32[(HEAP32[(d+8|0)>>2]+12|0)>>2]=e,d;default:assert(0,"bad label: "+
c)}}_GenJNEq.X=1;
function _GetfieldReplace(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=14;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?5:6;break;case 5:var g=_genalloc(b,16);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:e=g;HEAP16[(e|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(d+4|0)>>2];c=_GetfieldReplace(b,HEAP32[(d+64|0)>>2]);HEAP32[(e+12|0)>>2]=c;c=_GetfieldReplace(b,HEAP32[(d+68|0)>>2]);HEAP32[(e+8|0)>>2]=c;c=35==(HEAPU16[(d|0)>>1]&65535|0)?9:8;break;case 8:c=36==(HEAPU16[(d|0)>>1]&65535|0)?9:10;break;case 9:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+24|0)>>2]+28|0)>>2]+52|0)>>2]](b,e,HEAP32[(d+
24|0)>>2]);c=13;break;case 10:c=33==(HEAPU16[(e|0)>>1]&65535|0)?11:12;break;case 11:_ReplaceGlobalVariable(b,e);c=12;break;case 12:c=13;break;case 13:a=e;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_GetfieldReplace.X=1;function _SetupGenericsBload(h){_AllocateEnvironmentData(h,28,40,690);_AddBinaryItem(h,STRING_TABLE.__str1670|0,0,692,694,696,698,700,702,704)}
function _DeallocateDefgenericBinaryData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]|0)>>2],a);f=4;break;case 4:a=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+12|0)>>2]|0;f=0!=(a|0)?5:6;break;case 5:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+28|0)>>2],a);f=6;break;case 6:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>
2]+16|0)>>2]|0;f=0!=(a|0)?7:8;break;case 7:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+32|0)>>2],a);f=8;break;case 8:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+20|0)>>2]<<2|0;f=0!=(a|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+36|0)>>2],a);f=10;break;case 10:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?11:12;break;case 11:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+24|0)>>2],a);f=12;break;
case 12:return;default:assert(0,"bad label: "+f)}}_DeallocateDefgenericBinaryData.X=1;
function _BsaveGenericsFind(h){_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+4|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+8|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+12|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+16|0)>>2]);_SaveBloadCount(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+
112|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+20|0)>>2]=0;var f=_DoForAllConstructs(h,706,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2],0,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+4|0)>>2]=f}_BsaveGenericsFind.X=1;
function _BsaveGenericsExpressions(h,f){_DoForAllConstructs(h,708,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2],0,f);_DoForAllConstructs(h,710,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2],0,f)}
function _BsaveStorageGenerics(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=20;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+4|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+8|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+12|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+16|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+20|0,4,f);STACKTOP=c}
_BsaveStorageGenerics.X=1;
function _BsaveGenerics(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e;e=c;var g=c+4;b=h;d=f;HEAP32[e>>2]=((((12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+4|0)>>2]|0)+(20*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+8|0)>>2]|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+12|0)>>2]<<5|0)|0)+(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+16|0)>>2]|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+112|0)>>2]+20|0)>>2]<<2|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+8|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:5;break;case 4:a=b;var i=e,j=_FindModuleItem(b,STRING_TABLE.__str11671|0)+4|0;a=_GetModuleItem(a,i,HEAP32[j>>2]);_AssignBsaveDefmdlItemHdrVals(g|0,a|0);_GenWrite(g,12,d);e=_EnvGetNextDefmodule(b,e);a=3;break;case 5:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+12|0)>>2]=0;_DoForAllConstructs(b,712,HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+108|0)>>2]+4|0)>>2],0,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+16|0)>>2]=0;_DoForAllConstructs(b,714,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+4|0)>>2],0,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+20|0)>>2]=0;_DoForAllConstructs(b,716,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+4|0)>>2],0,d);_DoForAllConstructs(b,718,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+4|0)>>2],0,d);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+4|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+
16|0)>>2]+112|0)>>2]+8|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+12|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+16|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+20|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveGenerics.X=1;function _BloadDefgenericModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+24|0)>>2]+12*f|0}
function _BloadStorageGenerics(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d=f+4;a=h;_GenReadBinary(a,b,4);c=0==(HEAP32[b>>2]|0)?3:4;break;case 3:c=18;break;case 4:_GenReadBinary(a,d|0,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+4|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+8|0)>>2]=HEAP32[(d+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+
112|0)>>2]+12|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+16|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+20|0)>>2]=HEAP32[(d+16|0)>>2];c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+24|0)>>2]=c;c=7;break;case 6:c=18;break;case 7:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+112|0)>>2]+8|0)>>2]|0)?8:9;break;case 8:HEAP32[b>>2]=44*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]|0)>>2]=c;c=10;break;case 9:c=18;break;case 10:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+12|0)>>2]|0)?11:12;break;case 11:HEAP32[b>>2]=44*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+12|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+28|0)>>2]=c;
c=13;break;case 12:c=18;break;case 13:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+16|0)>>2]|0)?14:15;break;case 14:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+16|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+32|0)>>2]=c;c=16;break;case 15:c=18;break;case 16:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+20|0)>>2]|0)?17:18;break;case 17:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+20|0)>>2]<<2|0;c=_genlongalloc(a,
HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+36|0)>>2]=c;c=18;break;case 18:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageGenerics.X=1;
function _BloadGenerics(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a;c=f;a=h;_GenReadBinary(a,c,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:c=7;break;case 4:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+4|0)>>2],12,720);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+8|0)>>2]|0)?5:6;break;case 5:c=7;break;case 6:_BloadandRefresh(a,
HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+8|0)>>2],20,722);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+12|0)>>2],32,724);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+16|0)>>2],12,726);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+20|0)>>2],4,728);c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadGenerics.X=1;
function _ClearBloadGenerics(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+4|0)>>2]|0;f=0==(b|0)?3:4;break;case 3:f=17;break;case 4:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+24|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+24|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+4|0)>>2]=0;f=5;break;case 5:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+8|0)>>2]|0)?6:8;break;case 6:_UnmarkConstructHeader(c,
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]|0)>>2]+44*a|0);f=7;break;case 7:a=a+1|0;f=5;break;case 8:b=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+8|0)>>2]|0;f=0==(b|0)?9:10;break;case 9:f=17;break;case 10:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+8|0)>>2]=0;b=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+12|0)>>2]|0;f=0==(b|0)?11:12;break;case 11:f=17;
break;case 12:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+28|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+28|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+12|0)>>2]=0;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+16|0)>>2]|0;f=0==(b|0)?13:14;break;case 13:f=17;break;case 14:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+32|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+32|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+
16|0)>>2]=0;b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+20|0)>>2]<<2|0;f=0==(b|0)?15:16;break;case 15:f=17;break;case 16:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+36|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+36|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+112|0)>>2]+20|0)>>2]=0;f=17;break;case 17:return;default:assert(0,"bad label: "+f)}}_ClearBloadGenerics.X=1;
function _UpdateGenericModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]+24|0)>>2]+12*c|0,44,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+112|0)>>2]|0)>>2])}
function _UpdateGeneric(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=a;_UpdateConstructHeader(b,e|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+24|0)>>2],44,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]);HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0)+24|0)>>2]=0;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0)+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|
0)>>2]+64|0)>>2];a=-1==(HEAP32[(e+12|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*HEAP32[(e+12|0)>>2]|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0)+32|0)>>2]=g;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0)+36|0)>>2]=HEAP32[(e+16|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]|0)>>2]+44*d|0)+40|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}
_UpdateGeneric.X=1;
function _UpdateMethod(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)>>2]=HEAP32[(d|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+4|0)>>2]=0;a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+68|0)>>2]&1)<<1;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|
0)+8|0)>>2]=HEAP32[(d+4|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+12|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+16|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+20|0)>>2]=HEAP32[(d+16|0)>>2];a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(d+20|0)>>2]&1;a=-1==(HEAP32[(d+24|0)>>2]|0)?3:4;break;
case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+32|0)>>2]+12*HEAP32[(d+24|0)>>2]|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+28|0)>>2]=g;a=-1==(HEAP32[(d+28|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+28|0)>>2]<<4)|0;a=8;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+32|0)>>2]=i;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+36|0)>>2]=0;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+28|0)>>2]+44*e|0)+40|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}_UpdateMethod.X=1;
function _UpdateRestriction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=a;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+32|0)>>2]+12*d|0)+8|0)>>2]=HEAP32[(e+8|0)>>2];a=-1==(HEAP32[(e|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+36|0)>>2]+(HEAP32[(e|0)>>2]<<2)|0;a=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+32|0)>>2]+12*d|0)>>2]=g;a=-1==(HEAP32[(e+4|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;
break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(e+4|0)>>2]<<4)|0;a=8;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+32|0)>>2]+12*d|0)+4|0)>>2]=i;return;default:assert(0,"bad label: "+a)}}_UpdateRestriction.X=1;
function _UpdateType(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=-1==(HEAP32[d>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*HEAP32[d>>2]|0;a=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+112|0)>>2]+36|0)>>2]+(e<<2)|0)>>2]=g;return;default:assert(0,"bad label: "+a)}}
function _BsaveDefgenericHeader(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;g=c;_AssignBsaveConstructHeaderVals(i|0,e|0);HEAP32[(i+16|0)>>2]=HEAP32[(e+36|0)>>2];b=0!=(HEAP32[(e+32|0)>>2]|0)?3:4;break;case 3:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+12|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(e+
36|0)>>2]|0;b=5;break;case 4:HEAP32[(i+12|0)>>2]=-1;b=5;break;case 5:_GenWrite(i,20,g);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveDefgenericHeader.X=1;
function _BsaveMethods(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;d=h;e=f;g=c;k=0;b=3;break;case 3:b=k>>>0<HEAPU32[(e+36|0)>>2]>>>0?4:12;break;case 4:i=HEAP32[(e+32|0)>>2]+44*k|0;HEAP32[(j|0)>>2]=HEAP32[(i|0)>>2];HEAP32[(j+4|0)>>2]=HEAP32[(i+8|0)>>2];HEAP32[(j+8|0)>>2]=HEAP32[(i+12|0)>>2];HEAP32[(j+12|0)>>2]=HEAP32[(i+16|0)>>2];HEAP32[(j+16|0)>>2]=HEAP32[(i+20|0)>>2];
HEAP32[(j+20|0)>>2]=HEAP32[(i+24|0)>>2]&1;b=0!=(HEAP32[(i+28|0)>>2]|0)?5:6;break;case 5:HEAP32[(j+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+16|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+16|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(i+8|0)>>2]|0;b=7;break;case 6:HEAP32[(j+24|0)>>2]=-1;b=7;break;case 7:b=0!=(HEAP32[(i+32|0)>>2]|0)?8:9;break;case 8:HEAP32[(j+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(i+32|0)>>2]);var l=HEAP32[(HEAP32[(d+
16|0)>>2]+180|0)>>2]+32|0;HEAP32[l>>2]=HEAP32[l>>2]+b|0;b=10;break;case 9:HEAP32[(j+28|0)>>2]=-1;b=10;break;case 10:_GenWrite(j,32,g);b=11;break;case 11:k=k+1|0;b=3;break;case 12:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveMethods.X=1;
function _BsaveMethodRestrictions(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a,j,k,l;d=h;e=f;g=c;k=0;b=3;break;case 3:b=k>>>0<HEAPU32[(e+36|0)>>2]>>>0?4:16;break;case 4:l=0;b=5;break;case 5:b=l>>>0<HEAPU32[((HEAP32[(e+32|0)>>2]+44*k|0)+8|0)>>2]>>>0?6:14;break;case 6:j=HEAP32[((HEAP32[(e+32|0)>>2]+44*k|0)+28|0)>>2]+12*l|0;HEAP32[(i+8|0)>>2]=HEAP32[(j+8|0)>>2];b=0!=(HEAP32[(j|
0)>>2]|0)?7:8;break;case 7:HEAP32[(i|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+20|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+112|0)>>2]+20|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(j+8|0)>>2]|0;b=9;break;case 8:HEAP32[(i|0)>>2]=-1;b=9;break;case 9:b=0!=(HEAP32[(j+4|0)>>2]|0)?10:11;break;case 10:HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(j+4|0)>>2]);var m=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[m>>2]=HEAP32[m>>2]+b|0;b=12;break;
case 11:HEAP32[(i+4|0)>>2]=-1;b=12;break;case 12:_GenWrite(i,12,g);b=13;break;case 13:l=l+1|0;b=5;break;case 14:b=15;break;case 15:k=k+1|0;b=3;break;case 16:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveMethodRestrictions.X=1;
function _BsaveRestrictionTypes(h,f,c){h=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=h,g,i,j,k;b=f;d=c;i=0;a=3;break;case 3:a=i>>>0<HEAPU32[(b+36|0)>>2]>>>0?4:17;break;case 4:j=0;a=5;break;case 5:a=j>>>0<HEAPU32[((HEAP32[(b+32|0)>>2]+44*i|0)+8|0)>>2]>>>0?6:15;break;case 6:g=HEAP32[((HEAP32[(b+32|0)>>2]+44*i|0)+28|0)>>2]+12*j|0;k=0;a=7;break;case 7:a=k>>>0<HEAPU32[(g+8|0)>>2]>>>0?8:13;break;
case 8:a=0==(HEAP32[(HEAP32[(g|0)>>2]+(k<<2)|0)>>2]|0)?9:10;break;case 9:var l=-1;a=11;break;case 10:l=HEAP32[(HEAP32[(HEAP32[(g|0)>>2]+(k<<2)|0)>>2]+12|0)>>2];a=11;break;case 11:HEAP32[e>>2]=l;_GenWrite(e,4,d);a=12;break;case 12:k=k+1|0;a=7;break;case 13:a=14;break;case 14:j=j+1|0;a=5;break;case 15:a=16;break;case 16:i=i+1|0;a=3;break;case 17:STACKTOP=h;return;default:assert(0,"bad label: "+a)}}_BsaveRestrictionTypes.X=1;
function _BsaveMethodExpressions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;a=f;d=c;e=a;g=0;a=3;break;case 3:a=g>>>0<HEAPU32[(e+36|0)>>2]>>>0?4:6;break;case 4:_BsaveExpression(b,HEAP32[((HEAP32[(e+32|0)>>2]+44*g|0)+32|0)>>2],d);a=5;break;case 5:g=g+1|0;a=3;break;case 6:return;default:assert(0,"bad label: "+a)}}
function _BsaveRestrictionExpressions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;a=f;d=c;e=a;g=0;a=3;break;case 3:a=g>>>0<HEAPU32[(e+36|0)>>2]>>>0?4:10;break;case 4:j=HEAP32[(e+32|0)>>2]+44*g|0;i=0;a=5;break;case 5:a=i>>>0<HEAPU32[(j+8|0)>>2]>>>0?6:8;break;case 6:_BsaveExpression(b,HEAP32[((HEAP32[(j+28|0)>>2]+12*i|0)+4|0)>>2],d);a=7;break;case 7:i=i+1|0;a=5;break;case 8:a=9;break;case 9:g=g+1|0;a=3;break;case 10:return;default:assert(0,"bad label: "+a)}}
_BsaveRestrictionExpressions.X=1;
function _MarkDefgenericItems(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=b|0;c=HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+8|0;var i=HEAP32[c>>2];HEAP32[c>>2]=i+1|0;_MarkConstructHeaderNeededItems(d,i);d=HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+HEAP32[(b+36|0)>>2]|0;d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(b+36|0)>>2]>>>0?4:10;break;case 4:g=HEAP32[(b+32|0)>>2]+44*d|0;e=_ExpressionSize(HEAP32[(g+32|0)>>2]);c=HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+32|0;HEAP32[c>>
2]=HEAP32[c>>2]+e|0;_MarkNeededItems(a,HEAP32[(g+32|0)>>2]);e=HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+16|0;HEAP32[e>>2]=HEAP32[e>>2]+HEAP32[(g+8|0)>>2]|0;e=0;c=5;break;case 5:c=e>>>0<HEAPU32[(g+8|0)>>2]>>>0?6:8;break;case 6:c=HEAP32[(g+28|0)>>2]+12*e|0;var i=_ExpressionSize(HEAP32[(c+4|0)>>2]),j=HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+32|0;HEAP32[j>>2]=HEAP32[j>>2]+i|0;_MarkNeededItems(a,HEAP32[(c+4|0)>>2]);i=HEAP32[(HEAP32[(a+16|0)>>2]+112|0)>>2]+20|0;HEAP32[i>>2]=HEAP32[i>>2]+HEAP32[(c+8|0)>>2]|0;
c=7;break;case 7:e=e+1|0;c=5;break;case 8:c=9;break;case 9:d=d+1|0;c=3;break;case 10:return;default:assert(0,"bad label: "+c)}}_MarkDefgenericItems.X=1;function _SetupGenericsCompiler(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str1672|0,0,730,0,732,5);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+88|0)>>2]=f}function _ReadyDefgenericsForCode(h){_MarkConstructBsaveIDs(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2])}
function _DefgenericsToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=144;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t,u,v,w,x,y=e+4,A=e+24,z=e+44,B=e+64,C=e+84;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;u=x=0;g=3;break;case 3:g=5>u>>>0?4:6;break;case 4:HEAP32[(y+(u<<2)|0)>>2]=0;HEAP32[(A+(u<<2)|0)>>2]=1;HEAP32[(z+(u<<2)|0)>>2]=0;HEAP32[(B+(u<<2)|0)>>2]=0;HEAP32[(C+12*u|0)>>2]=0;g=5;break;case 5:u=u+
1|0;g=3;break;case 6:_fprintf(m,STRING_TABLE.__str41676|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=7;break;case 7:g=0!=(q|0)?8:46;break;case 8:_EnvSetCurrentModule(j,q);g=_OpenFileIfNeeded(j,HEAP32[(z|0)>>2],k,l,n,p,HEAP32[(A|0)>>2],m,STRING_TABLE.__str51677|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(B|0)>>2],
C|0);HEAP32[(z|0)>>2]=g;g=0==(HEAP32[(z|0)>>2]|0)?9:10;break;case 9:g=47;break;case 10:_DefgenericModuleToCode(j,HEAP32[(z|0)>>2],q,n,o);r=_CloseFileIfNeeded(j,HEAP32[(z|0)>>2],y|0,A|0,o,B|0,C|0);HEAP32[(z|0)>>2]=r;r=_EnvGetNextDefgeneric(j,0);g=11;break;case 11:g=0!=(r|0)?12:45;break;case 12:g=_OpenFileIfNeeded(j,HEAP32[(z+4|0)>>2],k,l,n,p,HEAP32[(A+4|0)>>2],m,STRING_TABLE.__str61678|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+4|0)>>2],HEAP32[(B+4|0)>>2],
C+12|0);HEAP32[(z+4|0)>>2]=g;g=0==(HEAP32[(z+4|0)>>2]|0)?13:14;break;case 13:g=47;break;case 14:_SingleDefgenericToCode(j,HEAP32[(z+4|0)>>2],n,o,r,x,HEAP32[(A+8|0)>>2],HEAP32[(y+8|0)>>2]);g=y+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=_CloseFileIfNeeded(j,HEAP32[(z+4|0)>>2],y+4|0,A+4|0,o,B+4|0,C+12|0);HEAP32[(z+4|0)>>2]=g;g=0<HEAPU32[(r+36|0)>>2]>>>0?15:44;break;case 15:g=_OpenFileIfNeeded(j,HEAP32[(z+8|0)>>2],k,l,n,p,HEAP32[(A+8|0)>>2],m,STRING_TABLE.__str71679|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+
16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+8|0)>>2],HEAP32[(B+8|0)>>2],C+24|0);HEAP32[(z+8|0)>>2]=g;g=0==(HEAP32[(z+8|0)>>2]|0)?16:17;break;case 16:g=47;break;case 17:u=0;g=18;break;case 18:g=u>>>0<HEAPU32[(r+36|0)>>2]>>>0?19:43;break;case 19:s=HEAP32[(r+32|0)>>2]+44*u|0;g=0<u>>>0?20:21;break;case 20:_fprintf(HEAP32[(z+8|0)>>2],STRING_TABLE.__str81680|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=21;
break;case 21:_MethodToCode(j,HEAP32[(z+8|0)>>2],n,s,HEAP32[(A+12|0)>>2],HEAP32[(y+12|0)>>2]);g=0<(HEAP32[(s+8|0)>>2]|0)?22:41;break;case 22:g=_OpenFileIfNeeded(j,HEAP32[(z+12|0)>>2],k,l,n,p,HEAP32[(A+12|0)>>2],m,STRING_TABLE.__str91681|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+12|0)>>2],HEAP32[(B+12|0)>>2],C+36|0);HEAP32[(z+12|0)>>2]=g;g=0==(HEAP32[(z+12|0)>>2]|0)?23:24;break;case 23:g=47;break;case 24:v=0;g=25;break;case 25:g=v>>>0<HEAPU32[(s+8|0)>>2]>>>
0?26:40;break;case 26:t=HEAP32[(s+28|0)>>2]+12*v|0;g=0<v>>>0?27:28;break;case 27:_fprintf(HEAP32[(z+12|0)>>2],STRING_TABLE.__str81680|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=28;break;case 28:_RestrictionToCode(j,HEAP32[(z+12|0)>>2],n,t,HEAP32[(A+16|0)>>2],HEAP32[(y+16|0)>>2]);g=0<HEAPU32[(t+8|0)>>2]>>>0?29:38;break;case 29:g=_OpenFileIfNeeded(j,HEAP32[(z+16|0)>>2],k,l,n,p,HEAP32[(A+16|0)>>2],
m,STRING_TABLE.__str101682|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+16|0)>>2],HEAP32[(B+16|0)>>2],C+48|0);HEAP32[(z+16|0)>>2]=g;g=0==(HEAP32[(z+16|0)>>2]|0)?30:31;break;case 30:g=47;break;case 31:w=0;g=32;break;case 32:g=w>>>0<HEAPU32[(t+8|0)>>2]>>>0?33:37;break;case 33:g=0<w>>>0?34:35;break;case 34:_fprintf(HEAP32[(z+16|0)>>2],STRING_TABLE.__str81680|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));g=35;break;case 35:_TypeToCode(j,HEAP32[(z+16|0)>>2],n,HEAP32[(HEAP32[(t|0)>>2]+(w<<2)|0)>>2],o);g=36;break;case 36:w=w+1|0;g=32;break;case 37:g=y+16|0;HEAP32[g>>2]=HEAP32[g>>2]+HEAP32[(t+8|0)>>2]|0;g=_CloseFileIfNeeded(j,HEAP32[(z+16|0)>>2],y+16|0,A+16|0,o,B+16|0,C+48|0);HEAP32[(z+16|0)>>2]=g;g=38;break;case 38:g=39;break;case 39:v=v+1|0;g=25;break;case 40:g=y+12|0;HEAP32[g>>2]=HEAP32[g>>2]+HEAP32[(s+8|0)>>2]|0;g=_CloseFileIfNeeded(j,HEAP32[(z+12|0)>>2],y+12|0,A+12|
0,o,B+12|0,C+36|0);HEAP32[(z+12|0)>>2]=g;g=41;break;case 41:g=42;break;case 42:u=u+1|0;g=18;break;case 43:g=y+8|0;HEAP32[g>>2]=HEAP32[g>>2]+HEAP32[(r+36|0)>>2]|0;g=_CloseFileIfNeeded(j,HEAP32[(z+8|0)>>2],y+8|0,A+8|0,o,B+8|0,C+24|0);HEAP32[(z+8|0)>>2]=g;g=44;break;case 44:r=_EnvGetNextDefgeneric(j,r);g=11;break;case 45:q=_EnvGetNextDefmodule(j,q);x=x+1|0;g=y|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=7;break;case 46:_CloseDefgenericFiles(j,z|0,B|0,C|0,o);i=1;g=48;break;case 47:_CloseDefgenericFiles(j,z|0,B|
0,C|0,o);i=0;g=48;break;case 48:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_DefgenericsToCode.X=1;
function _PrintGenericFunctionReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str11673|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
108|0)>>2]+88|0)>>2]+20|0)>>2]+4|0)>>2];var m=k,n=((HEAP32[((j|0)+12|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[((j|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str21674|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _DefgenericCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str31675|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,
tempInt));STACKTOP=d}function _PrintGenericCall(){}function _DecrementGenericBusyCount(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=h;a=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:c=a+24|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}function _IncrementGenericBusyCount(h,f){var c=f+24|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}
function _DefgenericModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str121684|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+
4|0)>>2]);_fprintf(f,STRING_TABLE.__str201692|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _SingleDefgenericToCode(h,f,c,a,b,d,e,g){var i=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q;k=h;l=f;m=c;j=a;n=b;o=d;p=e;q=g;_fprintf(l,STRING_TABLE.__str121684|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(k,l,n|0,m,j,o,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|
0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(l,STRING_TABLE.__str181690|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=0==(HEAP32[(n+32|0)>>2]|0)?3:4;break;case 3:_fprintf(l,STRING_TABLE.__str11673|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));j=5;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+8|0)>>2];o=m;var r=p,s=q;_fprintf(l,STRING_TABLE.__str21674|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,HEAP32[tempInt+4>>2]=o,HEAP32[tempInt+8>>2]=r,HEAP32[tempInt+12>>2]=s,tempInt));j=5;break;case 5:h=HEAP32[(n+36|0)>>2];_fprintf(l,STRING_TABLE.__str191691|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,tempInt));STACKTOP=i;return;default:assert(0,"bad label: "+j)}}_SingleDefgenericToCode.X=1;
function _MethodToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n;i=h;j=f;k=c;l=a;m=b;n=d;g=HEAP32[(l|0)>>2];var o=HEAP32[(l+8|0)>>2],p=HEAP32[(l+12|0)>>2],q=HEAP32[(l+16|0)>>2],r=HEAP32[(l+20|0)>>2],s=HEAP32[(l+24|0)>>2]&1;_fprintf(j,STRING_TABLE.__str161688|0,(tempInt=STACKTOP,STACKTOP+=24,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+
4>>2]=o,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,HEAP32[tempInt+16>>2]=r,HEAP32[tempInt+20>>2]=s,tempInt));g=0==(HEAP32[(l+28|0)>>2]|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str131685|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+12|0)>>2];o=k;p=m;q=n;_fprintf(j,STRING_TABLE.__str141686|
0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=o,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,tempInt));g=5;break;case 5:_ExpressionToCode(i,j,HEAP32[(l+32|0)>>2]);_fprintf(j,STRING_TABLE.__str171689|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=e;return;default:assert(0,"bad label: "+g)}}
_MethodToCode.X=1;
function _RestrictionToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n;i=h;j=f;k=c;l=a;m=b;n=d;_fprintf(j,STRING_TABLE.__str121684|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0==(HEAP32[(l|0)>>2]|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str131685|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+88|0)>>2]+20|0)>>2]+16|0)>>2];var o=k,p=m,q=n;_fprintf(j,STRING_TABLE.__str141686|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=o,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,tempInt));g=5;break;case 5:_ExpressionToCode(i,
j,HEAP32[(l+4|0)>>2]);h=HEAP32[(l+8|0)>>2];_fprintf(j,STRING_TABLE.__str151687|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,tempInt));STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_RestrictionToCode.X=1;
function _TypeToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str111683|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintClassReference(h,f,a,c,b);STACKTOP=d}
function _CloseDefgenericFiles(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+4,o;g=h;i=f;j=c;k=a;l=b;HEAP32[m>>2]=l;o=HEAP32[n>>2]=0;e=3;break;case 3:e=5>(o|0)?4:6;break;case 4:HEAP32[m>>2]=l;e=_CloseFileIfNeeded(g,HEAP32[(i+(o<<2)|0)>>2],m,n,l,j+(o<<2)|0,k+12*o|0);HEAP32[(i+(o<<2)|0)>>2]=e;e=5;break;case 5:o=o+1|0;e=3;break;case 6:STACKTOP=d;return;default:assert(0,
"bad label: "+e)}}
function _SetupGenericFunctions(h){var f=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var c=_SetupGenericFunctions_genericEntityRecord>>2,a=f>>2,b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_AllocateEnvironmentData(h,27,104,734);a=HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+8|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");c=
f>>2;a>>=2;for(b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+8|0,31);c=_RegisterModuleItem(h,STRING_TABLE.__str11697|0,736,738,740,742,744);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2]=c;c=_AddConstruct(h,STRING_TABLE.__str11697|0,STRING_TABLE.__str21698|0,746,744,94,96,98,748,102,750,752,754);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2]=c;_AddClearReadyFunction(h,STRING_TABLE.__str11697|0,756,0);_SetupGenericsBload(h);_SetupGenericsCompiler(h);
_AddPortConstructItem(h,STRING_TABLE.__str11697|0,2);_AddConstruct(h,STRING_TABLE.__str31699|0,STRING_TABLE.__str41700|0,758,0,0,0,0,0,0,0,0,0);_AddSaveFunction(h,STRING_TABLE.__str11697|0,760,1E3);_AddSaveFunction(h,STRING_TABLE.__str31699|0,762,-1E3);_EnvDefineFunction2(h,STRING_TABLE.__str51701|0,118,764,STRING_TABLE.__str61702|0,STRING_TABLE.__str71703|0);_EnvDefineFunction2(h,STRING_TABLE.__str81704|0,118,766,STRING_TABLE.__str91705|0,STRING_TABLE.__str101706|0);_EnvDefineFunction2(h,STRING_TABLE.__str111707|
0,117,768,STRING_TABLE.__str121708|0,STRING_TABLE.__str131709|0);_FuncSeqOvlFlags(h,STRING_TABLE.__str111707|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str141710|0,117,770,STRING_TABLE.__str151711|0,STRING_TABLE.__str161712|0);_FuncSeqOvlFlags(h,STRING_TABLE.__str141710|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str171713|0,117,772,STRING_TABLE.__str181714|0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str171713|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str191715|0,98,774,STRING_TABLE.__str201716|0,STRING_TABLE.__str131709|
0);_FuncSeqOvlFlags(h,STRING_TABLE.__str191715|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str211717|0,117,776,STRING_TABLE.__str221718|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str231719|0,118,778,STRING_TABLE.__str241720|0,STRING_TABLE.__str71703|0);_EnvDefineFunction2(h,STRING_TABLE.__str251721|0,118,780,STRING_TABLE.__str261722|0,STRING_TABLE.__str271723|0);_EnvDefineFunction2(h,STRING_TABLE.__str281724|0,118,782,STRING_TABLE.__str291725|0,STRING_TABLE.__str301726|0);_EnvDefineFunction2(h,STRING_TABLE.__str311727|
0,118,784,STRING_TABLE.__str321728|0,STRING_TABLE.__str331729|0);_EnvDefineFunction2(h,STRING_TABLE.__str341730|0,118,786,STRING_TABLE.__str351731|0,STRING_TABLE.__str361732|0);_EnvDefineFunction2(h,STRING_TABLE.__str371733|0,109,788,STRING_TABLE.__str381734|0,STRING_TABLE.__str271723|0);_EnvDefineFunction2(h,STRING_TABLE.__str391735|0,109,790,STRING_TABLE.__str401736|0,STRING_TABLE.__str331729|0);_EnvDefineFunction2(h,STRING_TABLE.__str411737|0,109,792,STRING_TABLE.__str421738|0,STRING_TABLE.__str431739|
0);_EnvDefineFunction2(h,STRING_TABLE.__str441740|0,119,794,STRING_TABLE.__str451741|0,STRING_TABLE.__str71703|0);_EnvDefineFunction2(h,STRING_TABLE.__str461742|0,117,796,STRING_TABLE.__str471743|0,STRING_TABLE.__str481744|0);_AddWatchItem(h,STRING_TABLE.__str491745|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+64|0,34,798,800);_AddWatchItem(h,STRING_TABLE.__str501746|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+68|0,33,802,804);STACKTOP=f}_SetupGenericFunctions.X=1;
function _EvaluateGenericCall(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;d=h;a=f;e=c;_GenericDispatch(d,a,0,0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],e);a=2==(HEAPU16[(e+4|0)>>1]&65535|0)?3:5;break;case 3:a=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?4:5;break;case 4:b=0;a=6;break;case 5:b=1;a=6;break;case 6:return b;default:assert(0,"bad label: "+a)}}
function _DeallocateDefgenericData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,806,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+108|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+108|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDefgenericData.X=1;function _EnvFindDefgeneric(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}
function _EnvGetNextDefgeneric(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2])}function _EnvIsDefgenericDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=5;break;case 4:a=0==(HEAP32[(b+24|0)>>2]|0)?1:0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _EnvUndefgeneric(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=1;e=d;c=0==(e|0)?3:8;break;case 3:c=0==(_ClearDefmethods(b)|0)?4:5;break;case 4:g=0;c=5;break;case 5:c=0==(_ClearDefgenerics(b)|0)?6:7;break;case 6:g=0;c=7;break;case 7:a=g;c=11;break;case 8:c=0==(_EnvIsDefgenericDeletable(b,d)|0)?9:10;break;case 9:a=0;c=11;break;case 10:_RemoveConstructFromModule(b,d);_RemoveDefgeneric(b,e);a=1;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}
function _SaveDefgenerics(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}function _SaveDefmethods(h,f,c){_DoForAllConstructsInModule(h,f,808,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+4|0)>>2],0,c)}function _UndefgenericCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str51701|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}function _GetDefmethodPointer(h,f){return HEAP32[(h+32|0)>>2]+44*(f-1|0)|0}
function _UndefmethodCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e;a=h;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str81704|0,1,2,b)|0)?3:4;break;case 3:c=19;break;case 4:d=_LookupDefgenericByMdlOrScope(a,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);c=0==(d|0)?5:6;break;case 5:c=0!=(_strcmp(HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2],STRING_TABLE.__str511747|0)|0)?7:8;break;case 6:c=8;break;
case 7:_PrintErrorID(a,STRING_TABLE.__str521748|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,STRING_TABLE.__str541750|0);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,STRING_TABLE.__str551751|0);c=19;break;case 8:_EnvRtnUnknown(a,2,b);c=2==(HEAPU16[(b+4|0)>>1]&65535|0)?9:12;break;case 9:c=0!=(_strcmp(HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2],STRING_TABLE.__str511747|0)|0)?10:11;break;case 10:_PrintErrorID(a,STRING_TABLE.__str521748|
0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,STRING_TABLE.__str561752|0);c=19;break;case 11:e=0;c=18;break;case 12:c=1==(HEAPU16[(b+4|0)>>1]&65535|0)?13:16;break;case 13:e=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];c=0==(e|0)?14:15;break;case 14:_PrintErrorID(a,STRING_TABLE.__str521748|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,STRING_TABLE.__str561752|0);c=19;break;case 15:c=17;break;case 16:_PrintErrorID(a,STRING_TABLE.__str521748|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,STRING_TABLE.__str561752|
0);c=19;break;case 17:c=18;break;case 18:_EnvUndefmethod(a,d,e);c=19;break;case 19:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_UndefmethodCommand.X=1;function _PPDefgenericCommand(h){_PPConstructCommand(h,STRING_TABLE.__str231719|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}function _ListDefgenericsCommand(h){_ListConstructCommand(h,STRING_TABLE.__str251721|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}
function _PPDefmethodCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e,g;a=h;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str281724|0,1,2,b)|0)?3:4;break;case 3:c=12;break;case 4:d=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str281724|0,2,1,b)|0)?5:6;break;case 5:c=12;break;case 6:e=_CheckGenericExists(a,STRING_TABLE.__str281724|0,d);c=0==(e|0)?7:
8;break;case 7:c=12;break;case 8:g=_CheckMethodExists(a,STRING_TABLE.__str281724|0,e,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);c=-1==(g|0)?9:10;break;case 9:c=12;break;case 10:c=0!=(HEAP32[((HEAP32[(e+32|0)>>2]+44*g|0)+36|0)>>2]|0)?11:12;break;case 11:_PrintInChunks(a,STRING_TABLE.__str621758|0,HEAP32[((HEAP32[(e+32|0)>>2]+44*g|0)+36|0)>>2]);c=12;break;case 12:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PPDefmethodCommand.X=1;
function _ListDefmethodsCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;a=h;c=0==(_EnvRtnArgCount(a)|0)?3:4;break;case 3:_EnvListDefmethods(a,STRING_TABLE.__str621758|0,0);c=9;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str311727|0,1,2,b)|0)?5:6;break;case 5:c=9;break;case 6:d=_CheckGenericExists(a,STRING_TABLE.__str311727|0,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);c=
0!=(d|0)?7:8;break;case 7:_EnvListDefmethods(a,STRING_TABLE.__str621758|0,d);c=8;break;case 8:c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _GetDefgenericListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str371733|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}
function _GetDefmethodListCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;a=0==(_EnvRtnArgCount(b)|0)?3:4;break;case 3:_EnvGetDefmethodList(b,0,d);a=10;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str391735|0,1,2,e)|0)?5:6;break;case 5:_EnvSetMultifieldErrorValue(b,d);a=10;break;case 6:g=_CheckGenericExists(b,STRING_TABLE.__str391735|0,HEAP32[(HEAP32[(e+
8|0)>>2]+16|0)>>2]);a=0!=(g|0)?7:8;break;case 7:_EnvGetDefmethodList(b,g,d);a=9;break;case 8:_EnvSetMultifieldErrorValue(b,d);a=9;break;case 9:a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _GetMethodRestrictionsCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str411737|0,1,2,e)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=11;break;case 4:g=_CheckGenericExists(b,STRING_TABLE.__str411737|0,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=0==(g|0)?5:6;break;case 5:_EnvSetMultifieldErrorValue(b,d);a=11;
break;case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str411737|0,2,1,e)|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(b,d);a=11;break;case 8:a=-1==(_CheckMethodExists(b,STRING_TABLE.__str411737|0,g,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2])|0)?9:10;break;case 9:_EnvSetMultifieldErrorValue(b,d);a=11;break;case 10:_EnvGetMethodRestrictions(b,g,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],d);a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_GetMethodRestrictionsCommand.X=1;
function _GetDefgenericModuleCommand(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str441740|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2])}function _DefgenericWatchAccess(h,f,c,a){return _ConstructSetWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],c,a,810,812)}function _DefgenericWatchPrint(h,f,c,a){return _ConstructPrintWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],f,a,810,812)}
function _DefmethodWatchAccess(h,f,c,a){return _DefmethodWatchSupport(h,0!=(c|0)?STRING_TABLE.__str731769|0:STRING_TABLE.__str741770|0,0,c,0,814,a)}function _DefmethodWatchPrint(h,f,c,a){return _DefmethodWatchSupport(h,STRING_TABLE.__str651761|0,f,0,816,0,a)}function _LookupDefgenericByMdlOrScope(h,f){return _LookupConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],f,1)}
function _LookupDefgenericInScope(h,f){return _LookupConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],f,0)}
function _EnvGetNextDefmethod(h,f,c){for(h=2;;)switch(h){case 2:var a,b,d,e;b=f;d=c;h=0==(d|0)?3:6;break;case 3:h=0!=(HEAP32[(b+32|0)>>2]|0)?4:5;break;case 4:a=HEAP32[(HEAP32[(b+32|0)>>2]|0)>>2];h=9;break;case 5:a=0;h=9;break;case 6:e=_FindMethodByIndex(b,d);h=(e+1|0)==(HEAP32[(b+36|0)>>2]|0)?7:8;break;case 7:a=0;h=9;break;case 8:a=HEAP32[(HEAP32[(b+32|0)>>2]+44*(e+1|0)|0)>>2];h=9;break;case 9:return a;default:assert(0,"bad label: "+h)}}_EnvGetNextDefmethod.X=1;
function _EnvIsDefmethodDeletable(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;a=h;d=f;e=c;a=0!=(_ConstructsDeletable(a)|0)?4:3;break;case 3:b=0;a=7;break;case 4:a=_FindMethodByIndex(d,e);a=0!=(HEAP32[((HEAP32[(d+32|0)>>2]+44*a|0)+24|0)>>2]&1|0)?5:6;break;case 5:b=0;a=7;break;case 6:b=0==(_MethodsExecuting(d)|0)?1:0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _EnvUndefmethod(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=1==(_Bloaded(d)|0)?3:7;break;case 3:_PrintErrorID(d,STRING_TABLE.__str571753|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str531749|0,STRING_TABLE.__str581754|0);a=0!=(e|0)?4:5;break;case 4:a=d;var j=_GetConstructNameString(e);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,j);_EnvPrintRouter(d,STRING_TABLE.__str531749|0,STRING_TABLE.__str591755|0);_PrintLongInteger(d,STRING_TABLE.__str531749|0,g);a=6;break;case 5:_EnvPrintRouter(d,
STRING_TABLE.__str531749|0,STRING_TABLE.__str511747|0);a=6;break;case 6:_EnvPrintRouter(d,STRING_TABLE.__str531749|0,STRING_TABLE.__str601756|0);b=0;a=19;break;case 7:a=0==(e|0)?8:11;break;case 8:a=0!=(g|0)?9:10;break;case 9:_PrintErrorID(d,STRING_TABLE.__str521748|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str531749|0,STRING_TABLE.__str611757|0);b=0;a=19;break;case 10:b=_ClearDefmethods(d);a=19;break;case 11:a=0!=(_MethodsExecuting(e)|0)?12:13;break;case 12:_MethodAlterError(d,e);b=0;a=19;break;case 13:a=
0==(g|0)?14:15;break;case 14:_RemoveAllExplicitMethods(d,e);a=18;break;case 15:i=_CheckMethodExists(d,STRING_TABLE.__str81704|0,e,g);a=-1==(i|0)?16:17;break;case 16:b=0;a=19;break;case 17:_RemoveDefgenericMethod(d,e,i);a=18;break;case 18:b=1;a=19;break;case 19:return b;default:assert(0,"bad label: "+a)}}_EnvUndefmethod.X=1;function _EnvGetDefgenericWatch(h,f){return HEAP32[(f+28|0)>>2]}function _EnvSetDefgenericWatch(h,f,c){HEAP32[(c+28|0)>>2]=f}
function _RemoveDefgenericMethod(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;a=0!=(HEAP32[((HEAP32[(d+32|0)>>2]+44*e|0)+24|0)>>2]&1|0)?3:4;break;case 3:_SetEvaluationError(b,1);_PrintErrorID(b,STRING_TABLE.__str521748|0,4,0);_EnvPrintRouter(b,STRING_TABLE.__str531749|0,STRING_TABLE.__str751771|0);a=b;var k=_GetConstructNameString(d);_EnvPrintRouter(a,STRING_TABLE.__str531749|0,k);_EnvPrintRouter(b,STRING_TABLE.__str531749|0,STRING_TABLE.__str601756|0);a=13;break;case 4:_DeleteMethodInfo(b,
d,HEAP32[(d+32|0)>>2]+44*e|0);a=1==(HEAP32[(d+36|0)>>2]|0)?5:6;break;case 5:_rm(b,HEAP32[(d+32|0)>>2],44);HEAP32[(d+36|0)>>2]=0;HEAP32[(d+32|0)>>2]=0;a=13;break;case 6:g=d+36|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=_gm2(b,44*HEAP32[(d+36|0)>>2]|0);i=j=0;a=7;break;case 7:a=i>>>0<HEAPU32[(d+36|0)>>2]>>>0?8:12;break;case 8:a=(i|0)==(e|0)?9:10;break;case 9:j=j+1|0;a=10;break;case 10:a=g+44*i|0;k=HEAP32[(d+32|0)>>2]+44*j|0;assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");
_memcpy(a,k,44,1);a=11;break;case 11:i=i+1|0;j=j+1|0;a=7;break;case 12:_rm(b,HEAP32[(d+32|0)>>2],44*(HEAP32[(d+36|0)>>2]+1|0)|0);HEAP32[(d+32|0)>>2]=g;a=13;break;case 13:return;default:assert(0,"bad label: "+a)}}_RemoveDefgenericMethod.X=1;function _EnvGetDefmethodDescription(h,f,c,a,b){b=_FindMethodByIndex(a,b);_PrintMethod(h,f,c,HEAP32[(a+32|0)>>2]+44*b|0)}function _EnvGetDefmethodWatch(h,f,c){h=_FindMethodByIndex(f,c);return HEAPU32[((HEAP32[(f+32|0)>>2]+44*h|0)+24|0)>>2]>>>1&1}
function _EnvSetDefmethodWatch(h,f,c,a){h=_FindMethodByIndex(c,a);c=(HEAP32[(c+32|0)>>2]+44*h|0)+24|0;HEAP32[c>>2]=HEAP32[c>>2]&-3|(f&1)<<1}
function _EnvListDefmethods(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=0!=(e|0)?3:4;break;case 3:i=_ListMethodsForGeneric(b,d,e);a=11;break;case 4:i=0;g=_EnvGetNextDefgeneric(b,0);a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=_ListMethodsForGeneric(b,d,g);i=i+a|0;a=0!=(_EnvGetNextDefgeneric(b,g)|0)?7:8;break;case 7:_EnvPrintRouter(b,d,STRING_TABLE.__str631759|0);a=8;break;case 8:a=9;break;case 9:g=_EnvGetNextDefgeneric(b,g);a=5;break;case 10:a=11;break;case 11:_PrintTally(b,
d,i,STRING_TABLE.__str641760|0,STRING_TABLE.__str501746|0);return;default:assert(0,"bad label: "+a)}}_EnvListDefmethods.X=1;function _EnvGetDefmethodPPForm(h,f,c){h=_FindMethodByIndex(f,c);return HEAP32[((HEAP32[(f+32|0)>>2]+44*h|0)+36|0)>>2]}function _EnvListDefgenerics(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],f,c)}
function _ListMethodsForGeneric(h,f,c){var a=STACKTOP;STACKTOP+=256;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;i=0;b=3;break;case 3:b=i>>>0<HEAPU32[(g+36|0)>>2]>>>0?4:6;break;case 4:b=d;var k=e,l=_GetConstructNameString(g);_EnvPrintRouter(b,k,l);_EnvPrintRouter(d,e,STRING_TABLE.__str591755|0);_PrintMethod(d,j|0,255,HEAP32[(g+32|0)>>2]+44*i|0);_EnvPrintRouter(d,e,j|0);_EnvPrintRouter(d,e,STRING_TABLE.__str631759|
0);b=5;break;case 5:i=i+1|0;b=3;break;case 6:return h=HEAP32[(g+36|0)>>2],STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ListMethodsForGeneric.X=1;function _EnvGetDefgenericList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2],c)}
function _EnvGetDefmethodList(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n;b=h;d=f;e=c;a=0!=(d|0)?3:4;break;case 3:g=d;j=_EnvGetNextDefgeneric(b,d);_SetNextConstruct(d,0);a=8;break;case 4:g=_EnvGetNextDefgeneric(b,0);a=0!=(g|0)?5:6;break;case 5:var o=_EnvGetNextDefgeneric(b,g);a=7;break;case 6:o=0;a=7;break;case 7:j=o;a=8;break;case 8:m=0;i=g;a=9;break;case 9:a=0!=(g|0)?10:12;break;case 10:m=m+HEAP32[(g+36|0)>>2]|0;a=11;break;case 11:g=_EnvGetNextDefgeneric(b,g);a=9;break;case 12:m=
m<<1|0;HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=m-1|0;n=_EnvCreateMultifield(b,m);HEAP32[(e+8|0)>>2]=n;g=i;k=1;a=13;break;case 13:a=0!=(g|0)?14:20;break;case 14:l=0;a=15;break;case 15:a=l>>>0<HEAPU32[(g+36|0)>>2]>>>0?16:18;break;case 16:HEAP16[((n+16|0)+((k-1|0)<<3)|0)>>1]=2;a=_GetConstructNamePointer(g);var p=k;k=p+1|0;HEAP32[(((n+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=a;HEAP16[((n+16|0)+((k-1|0)<<3)|0)>>1]=1;a=_EnvAddLong(b,HEAP32[(HEAP32[(g+32|0)>>2]+44*l|0)>>2]);p=k;k=p+1|0;HEAP32[(((n+
16|0)+((p-1|0)<<3)|0)+4|0)>>2]=a;a=17;break;case 17:l=l+1|0;a=15;break;case 18:a=19;break;case 19:g=_EnvGetNextDefgeneric(b,g);a=13;break;case 20:a=0!=(i|0)?21:22;break;case 21:_SetNextConstruct(i,j);a=22;break;case 22:return;default:assert(0,"bad label: "+a)}}_EnvGetDefmethodList.X=1;
function _EnvGetMethodRestrictions(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o;d=h;e=f;g=c;i=a;k=HEAP32[(e+32|0)>>2];e=_FindMethodByIndex(e,g);k=k+44*e|0;e=3;g=0;b=3;break;case 3:b=g>>>0<HEAPU32[(k+8|0)>>2]>>>0?4:6;break;case 4:e=e+(HEAP32[((HEAP32[(k+28|0)>>2]+12*g|0)+8|0)>>2]+3|0)|0;b=5;break;case 5:g=g+1|0;b=3;break;case 6:o=_EnvCreateMultifield(d,e);HEAP16[(i+4|0)>>1]=4;HEAP32[(i+8|0)>>2]=o;HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=e-1|0;HEAP16[(o+16|0)>>1]=1;m=_EnvAddLong(d,
HEAP32[(k+12|0)>>2]);HEAP32[((o+16|0)+4|0)>>2]=m;HEAP16[((o+16|0)+8|0)>>1]=1;m=_EnvAddLong(d,HEAP32[(k+16|0)>>2]);HEAP32[(((o+16|0)+8|0)+4|0)>>2]=m;HEAP16[((o+16|0)+16|0)>>1]=1;m=_EnvAddLong(d,HEAP32[(k+8|0)>>2]);HEAP32[(((o+16|0)+16|0)+4|0)>>2]=m;m=(HEAP32[(k+8|0)>>2]+3|0)+1|0;n=4;g=0;b=7;break;case 7:b=g>>>0<HEAPU32[(k+8|0)>>2]>>>0?8:17;break;case 8:l=HEAP32[(k+28|0)>>2]+12*g|0;HEAP16[((o+16|0)+((n-1|0)<<3)|0)>>1]=1;b=_EnvAddLong(d,m);var p=n;n=p+1|0;HEAP32[(((o+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=b;
HEAP16[((o+16|0)+((m-1|0)<<3)|0)>>1]=2;b=0!=(HEAP32[(l+4|0)>>2]|0)?9:10;break;case 9:var q=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=11;break;case 10:q=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:j=m;m=j+1|0;HEAP32[(((o+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=q;HEAP16[((o+16|0)+((m-1|0)<<3)|0)>>1]=1;j=_EnvAddLong(d,HEAP32[(l+8|0)>>2]);b=m;m=b+1|0;HEAP32[(((o+16|0)+((b-1|0)<<3)|0)+4|0)>>2]=j;j=0;b=12;break;case 12:b=j>>>0<HEAPU32[(l+8|0)>>2]>>>0?13:15;break;case 13:HEAP16[((o+
16|0)+((m-1|0)<<3)|0)>>1]=2;b=d;p=_GetConstructNameString(HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2]);b=_EnvAddSymbol(b,p);p=m;m=p+1|0;HEAP32[(((o+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=b;b=14;break;case 14:j=j+1|0;b=12;break;case 15:b=16;break;case 16:g=g+1|0;b=7;break;case 17:return;default:assert(0,"bad label: "+b)}}_EnvGetMethodRestrictions.X=1;
function _DefmethodWatchSupport(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u=g,v=g+24,w;k=h;l=f;m=c;n=a;o=b;p=d;q=e;s=0;t=2;i=0==(q|0)?3:18;break;case 3:_SaveCurrentModule(k);w=_EnvGetNextDefmodule(k,0);i=4;break;case 4:i=0!=(w|0)?5:17;break;case 5:_EnvSetCurrentModule(k,w);i=0==(p|0)?6:7;break;case 6:i=k;var x=m,y=_EnvGetDefmoduleName(k,w);_EnvPrintRouter(i,
x,y);_EnvPrintRouter(k,m,STRING_TABLE.__str691765|0);i=7;break;case 7:r=_EnvGetNextDefgeneric(k,0);i=8;break;case 8:i=0!=(r|0)?9:16;break;case 9:s=_EnvGetNextDefmethod(k,r,0);i=10;break;case 10:i=0!=(s|0)?11:15;break;case 11:i=0!=(p|0)?12:13;break;case 12:FUNCTION_TABLE[p](k,n,r,s);i=14;break;case 13:_EnvPrintRouter(k,m,STRING_TABLE.__str701766|0);FUNCTION_TABLE[o](k,m,r,s);i=14;break;case 14:s=_EnvGetNextDefmethod(k,r,s);i=10;break;case 15:r=_EnvGetNextDefgeneric(k,r);i=8;break;case 16:w=_EnvGetNextDefmodule(k,
w);i=4;break;case 17:_RestoreCurrentModule(k);j=1;i=52;break;case 18:i=19;break;case 19:i=0!=(q|0)?20:51;break;case 20:i=0!=(_EvaluateExpression(k,q,u)|0)?21:22;break;case 21:j=0;i=52;break;case 22:i=2!=(HEAPU16[(u+4|0)>>1]&65535|0)?23:24;break;case 23:i=25;break;case 24:r=i=_LookupDefgenericByMdlOrScope(k,HEAP32[(HEAP32[(u+8|0)>>2]+16|0)>>2]);i=0==(i|0)?25:26;break;case 25:_ExpectedTypeError1(k,l,t,STRING_TABLE.__str711767|0);j=0;i=52;break;case 26:i=0==(HEAP32[(q+12|0)>>2]|0)?27:28;break;case 27:s=
0;i=38;break;case 28:q=HEAP32[(q+12|0)>>2];t=t+1|0;i=0!=(_EvaluateExpression(k,q,v)|0)?29:30;break;case 29:j=0;i=52;break;case 30:i=1!=(HEAPU16[(v+4|0)>>1]&65535|0)?31:32;break;case 31:i=36;break;case 32:i=0>=(HEAP32[(HEAP32[(v+8|0)>>2]+16|0)>>2]|0)?33:34;break;case 33:i=36;break;case 34:i=-1!=(_FindMethodByIndex(r,s)|0)?35:36;break;case 35:s=HEAP32[(HEAP32[(v+8|0)>>2]+16|0)>>2];i=37;break;case 36:_ExpectedTypeError1(k,l,t,STRING_TABLE.__str721768|0);j=0;i=52;break;case 37:i=38;break;case 38:i=0==
(s|0)?39:46;break;case 39:s=_EnvGetNextDefmethod(k,r,0);i=40;break;case 40:i=0!=(s|0)?41:45;break;case 41:i=0!=(p|0)?42:43;break;case 42:FUNCTION_TABLE[p](k,n,r,s);i=44;break;case 43:FUNCTION_TABLE[o](k,m,r,s);i=44;break;case 44:s=_EnvGetNextDefmethod(k,r,s);i=40;break;case 45:i=50;break;case 46:i=0!=(p|0)?47:48;break;case 47:FUNCTION_TABLE[p](k,n,r,s);i=49;break;case 48:FUNCTION_TABLE[o](k,m,r,s);i=49;break;case 49:i=50;break;case 50:q=HEAP32[(q+12|0)>>2];t=t+1|0;i=19;break;case 51:j=1;i=52;break;
case 52:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_DefmethodWatchSupport.X=1;
function _PrintMethodWatchFlag(h,f,c,a){var b=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d=_GetConstructNameString(c);_EnvPrintRouter(h,f,d);_EnvPrintRouter(h,f,STRING_TABLE.__str661762|0);_EnvGetDefmethodDescription(h,b|0,59,c,a);_EnvPrintRouter(h,f,b|0);c=0!=(_EnvGetDefmethodWatch(h,c,a)|0)?STRING_TABLE.__str671763|0:STRING_TABLE.__str681764|0;_EnvPrintRouter(h,f,c);STACKTOP=b}
function _SaveDefmethodsForDefgeneric(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=a=c;g=0;a=3;break;case 3:a=g>>>0<HEAPU32[(d+36|0)>>2]>>>0?4:8;break;case 4:a=0!=(HEAP32[((HEAP32[(d+32|0)>>2]+44*g|0)+36|0)>>2]|0)?5:6;break;case 5:_PrintInChunks(b,e,HEAP32[((HEAP32[(d+32|0)>>2]+44*g|0)+36|0)>>2]);_EnvPrintRouter(b,e,STRING_TABLE.__str631759|0);a=6;break;case 6:a=7;break;case 7:g=g+1|0;a=3;break;case 8:return;default:assert(0,"bad label: "+a)}}_SaveDefmethodsForDefgeneric.X=1;
function _DestroyDefgenericAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=11;break;case 4:d=0;c=5;break;case 5:c=d>>>0<HEAPU32[(b+36|0)>>2]>>>0?6:8;break;case 6:_DestroyMethodInfo(a,b,HEAP32[(b+32|0)>>2]+44*d|0);c=7;break;case 7:d=d+1|0;c=5;break;case 8:c=0!=(HEAP32[(b+36|0)>>2]|0)?9:10;break;case 9:_rm(a,HEAP32[(b+32|0)>>2],44*HEAP32[(b+36|0)>>2]|0);c=10;break;case 10:_DestroyConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>
2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_DestroyDefgenericAction.X=1;
function _GenericDispatch(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r=e,s=e+16;i=h;j=f;k=c;l=a;m=b;n=d;HEAP16[(n+4|0)>>1]=2;HEAP32[(n+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:g=29;break;case 4:q=
_ExecutingConstruct(i);_SetExecutingConstruct(i,1);o=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2];HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]=j;g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=j+24|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=i;var t=m,u=_CountArguments(m),v=_GetConstructNameString(j);_PushProcParameters(g,t,u,v,STRING_TABLE.__str1776|0,818);g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>
2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:g=j+24|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]=o;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]=p;g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;_PeriodicCleanup(i,0,1);_SetExecutingConstruct(i,q);g=29;break;case 6:g=0!=(l|0)?7:11;break;case 7:g=0!=(_IsMethodApplicable(i,l)|0)?8:9;break;case 8:g=l+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|
0)>>2]+76|0)>>2]=l;g=10;break;case 9:_PrintErrorID(i,STRING_TABLE.__str11777|0,4,0);_SetEvaluationError(i,1);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]=0;_EnvPrintRouter(i,STRING_TABLE.__str21778|0,STRING_TABLE.__str31779|0);g=i;t=_GetConstructNameString(j);_EnvPrintRouter(g,STRING_TABLE.__str21778|0,t);_EnvPrintRouter(i,STRING_TABLE.__str21778|0,STRING_TABLE.__str41780|0);_PrintLongInteger(i,STRING_TABLE.__str21778|0,HEAP32[(l|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str21778|0,STRING_TABLE.__str51781|
0);g=10;break;case 10:g=12;break;case 11:g=_FindApplicableMethod(i,j,k);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]=g;g=12;break;case 12:g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)?13:25;break;case 13:g=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]+28|0)>>2]|0)?14:15;break;case 14:_WatchGeneric(i,STRING_TABLE.__str61782|0);g=15;break;case 15:g=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]>>>1&1|0)?16:17;break;
case 16:_WatchMethod(i,STRING_TABLE.__str61782|0);g=17;break;case 17:g=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]&1|0)?18:19;break;case 18:HEAP16[(s|0)>>1]=30;HEAP32[(s+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+32|0)>>2]+4|0)>>2];HEAP32[(s+12|0)>>2]=0;g=_GetProcParamExpressions(i);HEAP32[(s+8|0)>>2]=g;_EvaluateExpression(i,s,n);g=20;break;case 19:_StartProfile(i,r,HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+40|
0,HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(i,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+32|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+20|0)>>2],n,818);_EndProfile(i,r);g=20;break;case 20:g=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]+4|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]>>>1&1|0)?21:22;break;case 21:_WatchMethod(i,STRING_TABLE.__str71783|0);g=22;break;case 22:g=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]+28|0)>>2]|0)?23:24;break;case 23:_WatchGeneric(i,STRING_TABLE.__str71783|0);g=24;break;case 24:g=28;break;case 25:g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?27:26;break;case 26:_PrintErrorID(i,STRING_TABLE.__str11777|0,1,0);_EnvPrintRouter(i,STRING_TABLE.__str21778|0,STRING_TABLE.__str81784|
0);g=i;t=_GetConstructNameString(j);_EnvPrintRouter(g,STRING_TABLE.__str21778|0,t);_EnvPrintRouter(i,STRING_TABLE.__str21778|0,STRING_TABLE.__str91785|0);_SetEvaluationError(i,1);g=27;break;case 27:g=28;break;case 28:g=j+24|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+52|0)>>2]|0)>>2]=0;_PopProcParameters(i);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+72|0)>>2]=o;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+108|0)>>2]+76|0)>>2]=p;g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>
2]=HEAP32[g>>2]-1|0;_PropagateReturnValue(i,n);_PeriodicCleanup(i,0,1);_SetExecutingConstruct(i,q);g=29;break;case 29:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_GenericDispatch.X=1;
function _UnboundMethodErr(h){_EnvPrintRouter(h,STRING_TABLE.__str21778|0,STRING_TABLE.__str101786|0);var f=_GetConstructNameString(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+72|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str21778|0,f);_EnvPrintRouter(h,STRING_TABLE.__str21778|0,STRING_TABLE.__str41780|0);_PrintLongInteger(h,STRING_TABLE.__str21778|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str21778|0,STRING_TABLE.__str91785|0)}
function _IsMethodApplicable(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j,k,l,m;d=h;e=f;a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)<(HEAP32[(e+12|0)>>2]|0)?5:3;break;case 3:a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)>(HEAP32[(e+12|0)>>2]|0)?4:6;break;case 4:a=-1!=(HEAP32[(e+16|0)>>2]|0)?5:6;break;case 5:b=0;a=48;break;case 6:k=i=0;a=7;
break;case 7:a=i>>>0<HEAPU32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+8|0)>>2]>>>0?8:47;break;case 8:l=HEAP32[(e+28|0)>>2]+12*k|0;a=0!=(HEAP32[(l+8|0)>>2]|0)?9:37;break;case 9:m=_DetermineRestrictionClass(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*i|0);a=0==(m|0)?10:11;break;case 10:b=0;a=48;break;case 11:j=0;a=12;break;case 12:a=j>>>0<HEAPU32[(l+8|0)>>2]>>>0?13:34;break;case 13:a=(m|0)==(HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2]|0)?14:15;break;case 14:a=34;break;case 15:a=0!=(_HasSuperclass(m,
HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2])|0)?16:17;break;case 16:a=34;break;case 17:a=(HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2]|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]|0)?18:21;break;case 18:a=7==(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*i|0)+4|0)>>1]&65535|0)?19:20;break;case 19:a=34;break;case 20:a=32;break;case 21:a=(HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2]|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]|0)?22:25;break;case 22:a=
8==(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*i|0)+4|0)>>1]&65535|0)?23:24;break;case 23:a=34;break;case 24:a=31;break;case 25:a=(HEAP32[(HEAP32[(l|0)>>2]+(j<<2)|0)>>2]|0)==(HEAP32[(HEAP32[((HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]+36|0)+4|0)>>2]|0)>>2]|0)?26:30;break;case 26:a=8==(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*i|0)+4|0)>>1]&65535|0)?28:27;break;case 27:a=7==(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>
2]+4|0)>>2]+24*i|0)+4|0)>>1]&65535|0)?28:29;break;case 28:a=34;break;case 29:a=30;break;case 30:a=31;break;case 31:a=32;break;case 32:a=33;break;case 33:j=j+1|0;a=12;break;case 34:a=(j|0)==(HEAP32[(l+8|0)>>2]|0)?35:36;break;case 35:b=0;a=48;break;case 36:a=37;break;case 37:a=0!=(HEAP32[(l+4|0)>>2]|0)?38:43;break;case 38:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*i|0;_EvaluateExpression(d,HEAP32[(l+4|0)>>2],g);a=2!=(HEAPU16[(g+
4|0)>>1]&65535|0)?39:40;break;case 39:a=42;break;case 40:a=(HEAP32[(g+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?41:42;break;case 41:b=0;a=48;break;case 42:a=43;break;case 43:a=(k|0)!=(HEAP32[(e+8|0)>>2]-1|0)?44:45;break;case 44:k=k+1|0;a=45;break;case 45:a=46;break;case 46:i=i+1|0;a=7;break;case 47:b=1;a=48;break;case 48:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_IsMethodApplicable.X=1;
function _FindApplicableMethod(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0!=(g|0)?3:4;break;case 3:g=g+44|0;a=5;break;case 4:g=HEAP32[(e+32|0)>>2];a=5;break;case 5:a=6;break;case 6:a=g>>>0<(HEAP32[(e+32|0)>>2]+44*HEAP32[(e+36|0)>>2]|0)>>>0?7:11;break;case 7:a=g+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0!=(_IsMethodApplicable(d,g)|0)?8:9;break;case 8:b=g;a=12;break;case 9:a=g+4|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=10;break;case 10:g=g+44|0;a=6;break;case 11:b=0;a=12;break;case 12:return b;
default:assert(0,"bad label: "+a)}}_FindApplicableMethod.X=1;
function _WatchGeneric(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str221798|0);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,c);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str171793|0);c=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2];var b=_EnvGetCurrentModule(a);c=(c|0)!=(b|0)?3:4;break;case 3:c=a;b=_EnvGetDefmoduleName(a,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|
0)>>2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2]);_EnvPrintRouter(c,STRING_TABLE.__str151791|0,b);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str181794|0);c=4;break;case 4:_EnvPrintRouter(a,STRING_TABLE.__str151791|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str171793|0);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str211797|0);_PrintLongInteger(a,STRING_TABLE.__str151791|
0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]);_PrintProcParamArray(a,STRING_TABLE.__str151791|0);return;default:assert(0,"bad label: "+c)}}_WatchGeneric.X=1;
function _WatchMethod(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;c=f;_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str161792|0);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,c);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str171793|0);c=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2];var b=_EnvGetCurrentModule(a);c=(c|0)!=(b|0)?3:4;break;case 3:c=a;b=_EnvGetDefmoduleName(a,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2]);_EnvPrintRouter(c,STRING_TABLE.__str151791|0,b);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str181794|0);c=4;break;case 4:_EnvPrintRouter(a,STRING_TABLE.__str151791|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str191795|0);c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]&1|0)?5:6;break;case 5:_EnvPrintRouter(a,
STRING_TABLE.__str151791|0,STRING_TABLE.__str201796|0);c=6;break;case 6:_PrintLongInteger(a,STRING_TABLE.__str151791|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str171793|0);_EnvPrintRouter(a,STRING_TABLE.__str151791|0,STRING_TABLE.__str211797|0);_PrintLongInteger(a,STRING_TABLE.__str151791|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]);_PrintProcParamArray(a,STRING_TABLE.__str151791|0);return;
default:assert(0,"bad label: "+c)}}_WatchMethod.X=1;
function _DetermineRestrictionClass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=8==(HEAPU16[(d+4|0)>>1]&65535|0)?3:7;break;case 3:e=_FindInstanceBySymbol(b,HEAP32[(d+8|0)>>2]);c=0!=(e|0)?4:5;break;case 4:var i=HEAP32[(e+44|0)>>2];c=6;break;case 5:i=0;c=6;break;case 6:g=i;c=14;break;case 7:c=7==(HEAPU16[(d+4|0)>>1]&65535|0)?8:12;break;case 8:e=HEAP32[(d+8|0)>>2];c=0==(HEAPU32[(e+24|0)>>2]>>>1&1|0)?9:10;break;case 9:var j=HEAP32[(e+44|0)>>2];c=11;break;case 10:j=0;c=11;break;case 11:g=
j;c=13;break;case 12:a=HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+64|0)+((HEAPU16[(d+4|0)>>1]&65535)<<2)|0)>>2];c=17;break;case 13:c=14;break;case 14:c=0==(g|0)?15:16;break;case 15:_SetEvaluationError(b,1);_PrintErrorID(b,STRING_TABLE.__str11777|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str21778|0,STRING_TABLE.__str131789|0);_PrintDataObject(b,STRING_TABLE.__str21778|0,d);_EnvPrintRouter(b,STRING_TABLE.__str21778|0,STRING_TABLE.__str141790|0);c=b;var k=_GetConstructNameString(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+108|0)>>2]+72|0)>>2]);_EnvPrintRouter(c,STRING_TABLE.__str21778|0,k);_EnvPrintRouter(b,STRING_TABLE.__str21778|0,STRING_TABLE.__str91785|0);c=16;break;case 16:a=g;c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}_DetermineRestrictionClass.X=1;
function _NextMethodP(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=_FindApplicableMethod(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2]);f=0!=(b|0)?5:6;break;case 5:f=b+4|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;c=1;f=7;break;case 6:c=0;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}_NextMethodP.X=1;
function _GetGenericCurrentArgument(h,f){HEAP16[(f+4|0)>>1]=HEAP16[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+80|0)>>2]+4|0)>>1];HEAP32[(f+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+80|0)>>2]+8|0)>>2];HEAP32[(f+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+80|0)>>2]+12|0)>>2];HEAP32[(f+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+80|0)>>2]+16|0)>>2]}_GetGenericCurrentArgument.X=1;
function _ClearDefgenericsReady(h){return 0!=(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)?0:1}
function _CallNextMethod(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+16;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:a=16;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2];a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+108|0)>>2]+76|0)>>2]|0)?5:6;break;case 5:a=_FindApplicableMethod(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+72|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]=a;a=6;break;case 6:a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]=e;_PrintErrorID(b,STRING_TABLE.__str11777|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str21778|0,STRING_TABLE.__str111787|
0);_SetEvaluationError(b,1);a=16;break;case 8:a=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]>>>1&1|0)?9:10;break;case 9:_WatchMethod(b,STRING_TABLE.__str61782|0);a=10;break;case 10:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]&1|0)?11:12;break;case 11:HEAP16[(i|0)>>1]=30;HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+32|0)>>2]+4|0)>>2];HEAP32[(i+12|0)>>2]=0;a=_GetProcParamExpressions(b);
HEAP32[(i+8|0)>>2]=a;_EvaluateExpression(b,i,d);a=13;break;case 12:_StartProfile(b,g,(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)+20|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+72|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+32|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+20|0)>>2],d,818);_EndProfile(b,g);a=13;
break;case 13:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=0!=(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]+24|0)>>2]>>>1&1|0)?14:15;break;case 14:_WatchMethod(b,STRING_TABLE.__str71783|0);a=15;break;case 15:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+76|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=16;break;case 16:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CallNextMethod.X=1;
function _CallSpecificMethod(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str121788|0,1,2,e)|0)?3:4;break;case 3:a=11;break;case 4:g=_CheckGenericExists(b,STRING_TABLE.__str121788|0,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=0==(g|0)?
5:6;break;case 5:a=11;break;case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str121788|0,2,1,e)|0)?7:8;break;case 7:a=11;break;case 8:i=_CheckMethodExists(b,STRING_TABLE.__str121788|0,g,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=-1==(i|0)?9:10;break;case 9:a=11;break;case 10:a=(HEAP32[(g+32|0)>>2]+44*i|0)+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_GenericDispatch(b,g,0,HEAP32[(g+32|0)>>2]+44*i|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],d);a=(HEAP32[(g+
32|0)>>2]+44*i|0)+4|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CallSpecificMethod.X=1;
function _OverrideNextMethod(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:c=7;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2]|0)?5:6;break;case 5:_PrintErrorID(a,STRING_TABLE.__str11777|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str21778|0,STRING_TABLE.__str111787|0);_SetEvaluationError(a,
1);c=7;break;case 6:_GenericDispatch(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+76|0)>>2],0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],b);c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}_OverrideNextMethod.X=1;
function _AllocateDefgenericModule(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateDefgenericModule.X=1;
function _FreeDefgenericModule(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+108|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_FreeDefgenericModule.X=1;
function _ClearDefmethods(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;d=1;f=1==(_Bloaded(a)|0)?3:4;break;case 3:c=0;f=10;break;case 4:b=_EnvGetNextDefgeneric(a,0);f=5;break;case 5:f=0!=(b|0)?6:9;break;case 6:f=0==(_RemoveAllExplicitMethods(a,b)|0)?7:8;break;case 7:d=0;f=8;break;case 8:b=_EnvGetNextDefgeneric(a,b);f=5;break;case 9:c=d;f=10;break;case 10:return c;default:assert(0,"bad label: "+f)}}
function _MethodsExecuting(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=0;f=3;break;case 3:f=b>>>0<HEAPU32[(a+36|0)>>2]>>>0?4:8;break;case 4:f=0<HEAPU32[((HEAP32[(a+32|0)>>2]+44*b|0)+4|0)>>2]>>>0?5:6;break;case 5:c=1;f=9;break;case 6:f=7;break;case 7:b=b+1|0;f=3;break;case 8:c=0;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _FindMethodByIndex(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=0;c=3;break;case 3:c=e>>>0<HEAPU32[(b+36|0)>>2]>>>0?4:8;break;case 4:c=(HEAP32[(HEAP32[(b+32|0)>>2]+44*e|0)>>2]|0)==(d|0)?5:6;break;case 5:a=e;c=9;break;case 6:c=7;break;case 7:e=e+1|0;c=3;break;case 8:a=-1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _RemoveAllExplicitMethods(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;i=0;c=0==(_MethodsExecuting(d)|0)?3:21;break;case 3:e=0;c=4;break;case 4:c=e>>>0<HEAPU32[(d+36|0)>>2]>>>0?5:10;break;case 5:c=0!=(HEAP32[((HEAP32[(d+32|0)>>2]+44*e|0)+24|0)>>2]&1|0)?6:7;break;case 6:i=i+1|0;c=8;break;case 7:_DeleteMethodInfo(b,d,HEAP32[(d+32|0)>>2]+44*e|0);c=8;break;case 8:c=9;break;case 9:e=e+1|0;c=4;break;case 10:c=0!=(i|0)?11:17;break;case 11:j=_gm2(b,44*i|0);g=e=0;c=12;break;case 12:c=
e>>>0<HEAPU32[(d+36|0)>>2]>>>0?13:16;break;case 13:c=0!=(HEAP32[((HEAP32[(d+32|0)>>2]+44*e|0)+24|0)>>2]&1|0)?14:15;break;case 14:c=g;g=c+1|0;c=j+44*c|0;var k=HEAP32[(d+32|0)>>2]+44*e|0;assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(c,k,44,1);c=15;break;case 15:e=e+1|0;c=12;break;case 16:_rm(b,HEAP32[(d+32|0)>>2],44*HEAP32[(d+36|0)>>2]|0);HEAP32[(d+36|0)>>2]=i;HEAP32[(d+32|0)>>2]=j;c=20;break;case 17:c=0!=(HEAP32[(d+36|0)>>2]|0)?18:19;break;case 18:_rm(b,
HEAP32[(d+32|0)>>2],44*HEAP32[(d+36|0)>>2]|0);c=19;break;case 19:HEAP32[(d+36|0)>>2]=0;HEAP32[(d+32|0)>>2]=0;c=20;break;case 20:a=1;c=22;break;case 21:a=0;c=22;break;case 22:return a;default:assert(0,"bad label: "+c)}}_RemoveAllExplicitMethods.X=1;
function _DeleteMethodInfo(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+84|0)>>2]=HEAP32[(d+24|0)>>2];_ExpressionDeinstall(b,HEAP32[(e+32|0)>>2]);_ReturnPackedExpression(b,HEAP32[(e+32|0)>>2]);_ClearUserDataList(b,HEAP32[(e+40|0)>>2]);a=0!=(HEAP32[(e+36|0)>>2]|0)?3:4;break;case 3:a=b;var k=HEAP32[(e+36|0)>>2],l=_strlen(HEAP32[(e+36|0)>>2])+1|0;_rm(a,k,l);a=4;break;case 4:g=0;a=5;break;case 5:a=g>>>0<HEAPU32[(e+8|0)>>2]>>>0?6:14;
break;case 6:j=HEAP32[(e+28|0)>>2]+12*g|0;i=0;a=7;break;case 7:a=i>>>0<HEAPU32[(j+8|0)>>2]>>>0?8:10;break;case 8:_DecrementDefclassBusyCount(b,HEAP32[(HEAP32[(j|0)>>2]+(i<<2)|0)>>2]);a=9;break;case 9:i=i+1|0;a=7;break;case 10:a=0!=(HEAP32[(j|0)>>2]|0)?11:12;break;case 11:_rm(b,HEAP32[(j|0)>>2],HEAP32[(j+8|0)>>2]<<2|0);a=12;break;case 12:_ExpressionDeinstall(b,HEAP32[(j+4|0)>>2]);_ReturnPackedExpression(b,HEAP32[(j+4|0)>>2]);a=13;break;case 13:g=g+1|0;a=5;break;case 14:a=0!=(HEAP32[(e+28|0)>>2]|0)?
15:16;break;case 15:_rm(b,HEAP32[(e+28|0)>>2],12*HEAP32[(e+8|0)>>2]|0);a=16;break;case 16:HEAP32[(d+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+84|0)>>2];return;default:assert(0,"bad label: "+a)}}_DeleteMethodInfo.X=1;
function _RemoveDefgeneric(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(b+36|0)>>2]>>>0?4:6;break;case 4:_DeleteMethodInfo(a,b,HEAP32[(b+32|0)>>2]+44*d|0);c=5;break;case 5:d=d+1|0;c=3;break;case 6:c=0!=(HEAP32[(b+36|0)>>2]|0)?7:8;break;case 7:_rm(a,HEAP32[(b+32|0)>>2],44*HEAP32[(b+36|0)>>2]|0);c=8;break;case 8:c=a;d=_GetConstructNamePointer(b);_DecrementSymbolCount(c,d);_SetConstructPPForm(a,b,0);_ClearUserDataList(a,HEAP32[((b|0)+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+c)}}_RemoveDefgeneric.X=1;
function _ClearDefgenerics(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;a=h;e=1;f=1==(_Bloaded(a)|0)?3:4;break;case 3:c=0;f=11;break;case 4:b=_EnvGetNextDefgeneric(a,0);f=5;break;case 5:f=0!=(b|0)?6:10;break;case 6:d=b;b=_EnvGetNextDefgeneric(a,b);f=0==(_RemoveAllExplicitMethods(a,d)|0)?7:8;break;case 7:f=a;e=_GetConstructNameString(d);_CantDeleteItemErrorMessage(f,STRING_TABLE.__str1811|0,e);e=0;f=9;break;case 8:_RemoveConstructFromModule(a,d);_RemoveDefgeneric(a,d);f=9;break;case 9:f=5;break;
case 10:c=e;f=11;break;case 11:return c;default:assert(0,"bad label: "+f)}}_ClearDefgenerics.X=1;function _MethodAlterError(h,f){_PrintErrorID(h,STRING_TABLE.__str11812|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str21813|0,STRING_TABLE.__str31814|0);var c=_GetConstructNameString(f);_EnvPrintRouter(h,STRING_TABLE.__str21813|0,c);_EnvPrintRouter(h,STRING_TABLE.__str21813|0,STRING_TABLE.__str41815|0)}
function _DestroyMethodInfo(h,f,c){for(f=2;;)switch(f){case 2:var a,b,d,e;a=h;b=c;_ReturnPackedExpression(a,HEAP32[(b+32|0)>>2]);_ClearUserDataList(a,HEAP32[(b+40|0)>>2]);f=0!=(HEAP32[(b+36|0)>>2]|0)?3:4;break;case 3:var f=a,g=HEAP32[(b+36|0)>>2],i=_strlen(HEAP32[(b+36|0)>>2])+1|0;_rm(f,g,i);f=4;break;case 4:d=0;f=5;break;case 5:f=(d|0)<(HEAP32[(b+8|0)>>2]|0)?6:10;break;case 6:e=HEAP32[(b+28|0)>>2]+12*d|0;f=0!=(HEAP32[(e|0)>>2]|0)?7:8;break;case 7:_rm(a,HEAP32[(e|0)>>2],HEAP32[(e+8|0)>>2]<<2|0);f=
8;break;case 8:_ReturnPackedExpression(a,HEAP32[(e+4|0)>>2]);f=9;break;case 9:d=d+1|0;f=5;break;case 10:f=0!=(HEAP32[(b+28|0)>>2]|0)?11:12;break;case 11:_rm(a,HEAP32[(b+28|0)>>2],12*HEAP32[(b+8|0)>>2]|0);f=12;break;case 12:return;default:assert(0,"bad label: "+f)}}_DestroyMethodInfo.X=1;
function _PreviewGeneric(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f;a=h;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str51816|0,1,2,g)|0)?3:4;break;case 3:c=9;break;case 4:b=_LookupDefgenericByMdlOrScope(a,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);c=0==(b|0)?5:6;break;case 5:_PrintErrorID(a,STRING_TABLE.__str11812|0,3,0);_EnvPrintRouter(a,
STRING_TABLE.__str21813|0,STRING_TABLE.__str61817|0);_EnvPrintRouter(a,STRING_TABLE.__str21813|0,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str21813|0,STRING_TABLE.__str71818|0);c=9;break;case 6:e=_ExecutingConstruct(a);_SetExecutingConstruct(a,1);d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]=b;c=HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=a;var i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],j=_CountArguments(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]),k=_GetConstructNameString(b);_PushProcParameters(c,i,j,k,STRING_TABLE.__str1811|0,818);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?7:8;break;case 7:_PopProcParameters(a);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]=d;c=HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;_SetExecutingConstruct(a,
e);c=9;break;case 8:c=b+24|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;_DisplayGenericCore(a,b);c=b+24|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;_PopProcParameters(a);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+72|0)>>2]=d;c=HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;_SetExecutingConstruct(a,e);c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PreviewGeneric.X=1;
function _DisplayGenericCore(h,f){var c=STACKTOP;STACKTOP+=256;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;e=i=0;a=3;break;case 3:a=e>>>0<HEAPU32[(d+36|0)>>2]>>>0?4:8;break;case 4:a=(HEAP32[(d+32|0)>>2]+44*e|0)+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0!=(_IsMethodApplicable(b,HEAP32[(d+32|0)>>2]+44*e|0)|0)?5:6;break;case 5:i=1;a=b;var j=_GetConstructNameString(d);_EnvPrintRouter(a,STRING_TABLE.__str211832|
0,j);_EnvPrintRouter(b,STRING_TABLE.__str211832|0,STRING_TABLE.__str191830|0);_PrintMethod(b,g|0,255,HEAP32[(d+32|0)>>2]+44*e|0);_EnvPrintRouter(b,STRING_TABLE.__str211832|0,g|0);_EnvPrintRouter(b,STRING_TABLE.__str211832|0,STRING_TABLE.__str221833|0);a=6;break;case 6:a=(HEAP32[(d+32|0)>>2]+44*e|0)+4|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=7;break;case 7:e=e+1|0;a=3;break;case 8:a=0==(i|0)?9:10;break;case 9:_EnvPrintRouter(b,STRING_TABLE.__str211832|0,STRING_TABLE.__str231834|0);a=b;j=_GetConstructNameString(d);
_EnvPrintRouter(a,STRING_TABLE.__str211832|0,j);_EnvPrintRouter(b,STRING_TABLE.__str211832|0,STRING_TABLE.__str171828|0);a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DisplayGenericCore.X=1;
function _PrintMethod(h,f,c,a){h=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l=h;d=f;e=c;g=a;HEAP8[d|0]=0;b=0!=(HEAP32[(g+24|0)>>2]&1|0)?3:4;break;case 3:_strncpy(d,STRING_TABLE.__str81819|0,e);b=4;break;case 4:i=HEAP32[(g|0)>>2];_sprintf(l|0,STRING_TABLE.__str91820|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,tempInt));
_strncat(d,l|0,e-3|0);i=0;b=5;break;case 5:b=i>>>0<HEAPU32[(g+8|0)>>2]>>>0?6:27;break;case 6:k=HEAP32[(g+28|0)>>2]+12*i|0;b=(i|0)==(HEAP32[(g+8|0)>>2]-1|0)?7:12;break;case 7:b=-1==(HEAP32[(g+16|0)>>2]|0)?8:12;break;case 8:b=0==(HEAP32[(k+8|0)>>2]|0)?9:11;break;case 9:b=0==(HEAP32[(k+4|0)>>2]|0)?10:11;break;case 10:b=d;var m=e,n=_strlen(d);_strncat(b,STRING_TABLE.__str101821|0,m-n|0);b=27;break;case 11:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str111822|0,m-n|0);b=13;break;case 12:b=d;m=e;n=_strlen(d);
_strncat(b,STRING_TABLE.__str121823|0,m-n|0);b=13;break;case 13:j=0;b=14;break;case 14:b=j>>>0<HEAPU32[(k+8|0)>>2]>>>0?15:19;break;case 15:b=d;var m=_GetConstructNameString(HEAP32[(HEAP32[(k|0)>>2]+(j<<2)|0)>>2]),n=e,o=_strlen(d);_strncat(b,m,n-o|0);b=(j|0)<(HEAP32[(k+8|0)>>2]-1|0)?16:17;break;case 16:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str131824|0,m-n|0);b=17;break;case 17:b=18;break;case 18:j=j+1|0;b=14;break;case 19:b=0!=(HEAP32[(k+4|0)>>2]|0)?20:23;break;case 20:b=0!=(HEAP32[(k+8|0)>>
2]|0)?21:22;break;case 21:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str131824|0,m-n|0);b=22;break;case 22:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str141825|0,m-n|0);b=23;break;case 23:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str151826|0,m-n|0);b=(i|0)!=(HEAP32[(g+8|0)>>2]-1|0)?24:25;break;case 24:b=d;m=e;n=_strlen(d);_strncat(b,STRING_TABLE.__str131824|0,m-n|0);b=25;break;case 25:b=26;break;case 26:i=i+1|0;b=5;break;case 27:STACKTOP=h;return;default:assert(0,"bad label: "+b)}}
_PrintMethod.X=1;
function _CheckGenericExists(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=_LookupDefgenericByMdlOrScope(b,e);a=0==(g|0)?3:4;break;case 3:_PrintErrorID(b,STRING_TABLE.__str11812|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,STRING_TABLE.__str61817|0);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,e);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,STRING_TABLE.__str161827|0);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,d);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,STRING_TABLE.__str171828|
0);_SetEvaluationError(b,1);a=4;break;case 4:return g;default:assert(0,"bad label: "+a)}}
function _CheckMethodExists(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=_FindMethodByIndex(g,i);b=-1==(j|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str11812|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str21813|0,STRING_TABLE.__str181829|0);b=d;var k=_GetConstructNameString(g);_EnvPrintRouter(b,STRING_TABLE.__str21813|0,k);_EnvPrintRouter(d,STRING_TABLE.__str21813|0,STRING_TABLE.__str191830|0);_PrintLongInteger(d,STRING_TABLE.__str21813|0,i);_EnvPrintRouter(d,STRING_TABLE.__str21813|
0,STRING_TABLE.__str161827|0);_EnvPrintRouter(d,STRING_TABLE.__str21813|0,e);_EnvPrintRouter(d,STRING_TABLE.__str21813|0,STRING_TABLE.__str171828|0);_SetEvaluationError(d,1);b=4;break;case 4:return j;default:assert(0,"bad label: "+b)}}
function _PrintGenericName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=HEAP32[(HEAP32[((e|0)+8|0)>>2]|0)>>2];var g=_EnvGetCurrentModule(b);a=(a|0)!=(g|0)?3:4;break;case 3:a=b;var g=d,i=_EnvGetDefmoduleName(b,HEAP32[(HEAP32[((e|0)+8|0)>>2]|0)>>2]);_EnvPrintRouter(a,g,i);_EnvPrintRouter(b,d,STRING_TABLE.__str201831|0);a=4;break;case 4:_EnvPrintRouter(b,d,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);return;default:assert(0,"bad label: "+a)}}
function _ParseDefgeneric(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SavePPBuffer(d,STRING_TABLE.__str1867|0);_SetIndentDepth(d,3);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str11868|0);b=1;a=17;break;
case 5:g=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0,STRING_TABLE.__str11868|0,744,0,STRING_TABLE.__str21869|0,1,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=17;break;case 7:a=0==(_ValidGenericName(d,HEAP32[(g+16|0)>>2])|0)?8:9;break;case 8:b=1;a=17;break;case 9:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?10:11;break;case 10:_PrintErrorID(d,STRING_TABLE.__str31870|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str51872|0);
b=1;a=17;break;case 11:_SavePPBuffer(d,STRING_TABLE.__str61873|0);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?12:13;break;case 12:b=0;a=17;break;case 13:a=_AddGeneric(d,g,i);var j=d,k=a;a=0!=(_EnvGetConserveMemory(d)|0)?14:15;break;case 14:var l=0;a=16;break;case 15:l=_CopyPPBuffer(d);a=16;break;case 16:_SetConstructPPForm(j,k,l);b=0;a=17;break;case 17:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefgeneric.X=1;
function _ValidGenericName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;c=0!=(_FindConstruct(b,d)|0)?3:4;break;case 3:_PrintErrorID(b,STRING_TABLE.__str31870|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str371904|0);a=0;c=18;break;case 4:i=_LookupDeffunctionInScope(b,d);c=0!=(i|0)?5:9;break;case 5:g=_GetConstructModuleItem(i)|0;c=g=HEAP32[g>>2];var k=_EnvGetCurrentModule(b);c=(c|0)!=(k|0)?6:7;break;case 6:_PrintErrorID(b,STRING_TABLE.__str31870|0,4,0);_EnvPrintRouter(b,
STRING_TABLE.__str41871|0,STRING_TABLE.__str381905|0);a=b;c=_GetConstructNameString(i);_EnvPrintRouter(a,STRING_TABLE.__str41871|0,c);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str391906|0);a=b;c=_EnvGetDefmoduleName(b,g);_EnvPrintRouter(a,STRING_TABLE.__str41871|0,c);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str401907|0);a=0;c=18;break;case 7:_PrintErrorID(b,STRING_TABLE.__str31870|0,5,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str411908|0);c=8;
break;case 8:a=0;c=18;break;case 9:e=_EnvFindDefgeneric(b,d);c=0!=(e|0)?10:13;break;case 10:c=0!=(_MethodsExecuting(e)|0)?11:12;break;case 11:_MethodAlterError(b,e);a=0;c=18;break;case 12:c=13;break;case 13:j=_FindFunction(b,d);c=0!=(j|0)?14:15;break;case 14:c=0==(HEAP16[(j+24|0)>>1]<<16>>16|0)?16:17;break;case 15:c=17;break;case 16:_PrintErrorID(b,STRING_TABLE.__str31870|0,16,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str421909|0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,d);
_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str431910|0);a=0;c=18;break;case 17:a=1;c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}_ValidGenericName.X=1;
function _AddGeneric(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=_EnvFindDefgeneric(d,HEAP32[(e+16|0)>>2]);a=0!=(i|0)?3:6;break;case 3:HEAP32[g>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?4:5;break;case 4:b=i;a=8;break;case 5:_RemoveConstructFromModule(d,i);a=7;break;case 6:HEAP32[g>>2]=1;i=_NewGeneric(d,e);a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_AddImplicitMethods(d,i);a=7;break;case 7:_AddConstructToModule(i);b=i;a=8;break;case 8:return b;default:assert(0,
"bad label: "+a)}}_AddGeneric.X=1;
function _ParseDefmethod(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c,k,l=c+4,m,n=c+8,o,p=c+12,q,r,s=c+16,t,u,v=c+20;d=h;e=f;m=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str71874|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,
STRING_TABLE.__str81875|0);b=1;a=58;break;case 5:g=_ParseMethodNameAndIndex(d,e,v);a=0==(g|0)?6:7;break;case 6:b=1;a=58;break;case 7:a=0==(_ValidGenericName(d,HEAP32[(g+16|0)>>2])|0)?8:9;break;case 8:b=1;a=58;break;case 9:u=_AddGeneric(d,g,l);a=0!=(HEAP32[l>>2]|0)?10:12;break;case 10:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?12:11;break;case 11:_CreateDefaultGenericPPForm(d,u);a=12;break;case 12:_IncrementIndentDepth(d,1);i=_ParseMethodParameters(d,e,p,s);_DecrementIndentDepth(d,
1);a=-1==(i|0)?13:14;break;case 13:a=55;break;case 14:_PPCRAndIndent(d);r=HEAP32[p>>2];a=15;break;case 15:a=0!=(r|0)?16:20;break;case 16:_ReplaceCurrentArgRefs(d,HEAP32[(HEAP32[(r+8|0)>>2]+4|0)>>2]);a=0!=(_ReplaceProcVars(d,STRING_TABLE.__str91876|0,HEAP32[(HEAP32[(r+8|0)>>2]+4|0)>>2],HEAP32[p>>2],HEAP32[s>>2],0,0)|0)?17:18;break;case 17:_DeleteTempRestricts(d,HEAP32[p>>2]);a=55;break;case 18:a=19;break;case 19:r=HEAP32[(r+12|0)>>2];a=15;break;case 20:t=_FindMethodByRestrictions(u,HEAP32[p>>2],i,
HEAP32[s>>2],j);o=0;a=0!=(t|0)?21:28;break;case 21:a=0!=(HEAP32[(t+24|0)>>2]&1|0)?22:23;break;case 22:_PrintErrorID(d,STRING_TABLE.__str31870|0,17,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str101877|0);_PrintLongInteger(d,STRING_TABLE.__str41871|0,HEAP32[(t|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str111878|0);o=1;a=27;break;case 23:a=0!=(HEAP32[v>>2]|0)?24:26;break;case 24:a=(HEAP32[v>>2]|0)!=(HEAP32[(t|0)>>2]|0)?25:26;break;case 25:_PrintErrorID(d,STRING_TABLE.__str31870|
0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str121879|0);_PrintLongInteger(d,STRING_TABLE.__str41871|0,HEAP32[v>>2]);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str131880|0);_PrintLongInteger(d,STRING_TABLE.__str41871|0,HEAP32[(t|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str111878|0);o=1;a=26;break;case 26:a=27;break;case 27:a=37;break;case 28:a=0!=(HEAP32[v>>2]|0)?29:35;break;case 29:k=_FindMethodByIndex(u,HEAP32[v>>2]);a=-1==(k|0)?30:
31;break;case 30:m=1;a=34;break;case 31:a=0!=(HEAP32[((HEAP32[(u+32|0)>>2]+44*k|0)+24|0)>>2]&1|0)?32:33;break;case 32:_PrintErrorID(d,STRING_TABLE.__str31870|0,17,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str101877|0);_PrintLongInteger(d,STRING_TABLE.__str41871|0,HEAP32[v>>2]);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str111878|0);o=1;a=33;break;case 33:a=34;break;case 34:a=36;break;case 35:m=1;a=36;break;case 36:a=37;break;case 37:a=0!=(o|0)?38:39;break;case 38:_DeleteTempRestricts(d,
HEAP32[p>>2]);a=55;break;case 39:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;q=_ParseProcActions(d,STRING_TABLE.__str91876|0,e,HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0,HEAP32[p>>2],HEAP32[s>>2],0,0,n,0);a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?40:42;break;case 40:a=0!=(q|0)?41:42;break;case 41:_DeleteTempRestricts(d,HEAP32[p>>2]);_ReturnPackedExpression(d,q);a=55;break;case 42:a=0==(q|0)?43:44;break;case 43:_DeleteTempRestricts(d,HEAP32[p>>2]);a=
55;break;case 44:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?45:48;break;case 45:_DeleteTempRestricts(d,HEAP32[p>>2]);_ReturnPackedExpression(d,q);a=0!=(HEAP32[l>>2]|0)?46:47;break;case 46:_RemoveConstructFromModule(d,u);_RemoveDefgeneric(d,u);a=47;break;case 47:b=0;a=58;break;case 48:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)+8|0)>>2]);_SavePPBuffer(d,STRING_TABLE.__str61873|0);var w=d,x=u,y=t,A=HEAP32[j>>2],z=HEAP32[v>>2],
B=HEAP32[p>>2],C=i,D=HEAP32[n>>2],E=HEAP32[s>>2],F=q;a=0!=(_EnvGetConserveMemory(d)|0)?49:50;break;case 49:var G=0;a=51;break;case 50:G=_CopyPPBuffer(d);a=51;break;case 51:t=_AddMethod(w,x,y,A,z,B,C,D,E,F,G,0);_DeleteTempRestricts(d,HEAP32[p>>2]);a=0!=(_GetPrintWhileLoading(d)|0)?52:54;break;case 52:a=0!=(_GetCompilationsWatch(d)|0)?53:54;break;case 53:_EnvPrintRouter(d,STRING_TABLE.__str141881|0,STRING_TABLE.__str151882|0);_PrintLongInteger(d,STRING_TABLE.__str141881|0,HEAP32[(t|0)>>2]);_EnvPrintRouter(d,
STRING_TABLE.__str141881|0,0!=(m|0)?STRING_TABLE.__str161883|0:STRING_TABLE.__str171884|0);a=54;break;case 54:b=0;a=58;break;case 55:a=0!=(HEAP32[l>>2]|0)?56:57;break;case 56:_RemoveConstructFromModule(d,u);_RemoveDefgeneric(d,u);a=57;break;case 57:b=1;a=58;break;case 58:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ParseDefmethod.X=1;
function _ParseMethodNameAndIndex(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;HEAP32[g>>2]=0;i=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0,STRING_TABLE.__str11868|0,744,0,STRING_TABLE.__str341901|0,1,0,1);a=0==(i|0)?3:4;break;case 3:b=0;a=11;break;case 4:a=1==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?5:8;break;case 5:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str241891|0);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+108|0)>>2]+92|0)+8|0)>>2]);j=HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)+4|0)>>2]+16|0)>>2];a=1>(j|0)?6:7;break;case 6:_PrintErrorID(d,STRING_TABLE.__str31870|0,6,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str351902|0);b=0;a=11;break;case 7:HEAP32[g>>2]=j;_PPCRAndIndent(d);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0);a=8;break;case 8:a=3==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?9:10;break;case 9:_PPBackup(d);
_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str241891|0);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0)+8|0)>>2]);_PPCRAndIndent(d);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+92|0);a=10;break;case 10:b=i;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_ParseMethodNameAndIndex.X=1;
function _CreateDefaultGenericPPForm(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a,b,d;a=_EnvGetCurrentModule(h);a=_EnvGetDefmoduleName(h,a);b=_GetConstructNameString(f);d=_strlen(a);var e=_strlen(b);d=_gm2(h,(d+e|0)+17|0);_sprintf(d,STRING_TABLE.__str361903|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=b,tempInt));_SetConstructPPForm(h,f,d);STACKTOP=
c}
function _ParseMethodParameters(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b,n,o,p;g=h;i=f;j=c;k=a;p=l=0;HEAP32[k>>2]=0;HEAP32[j>>2]=0;d=170!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?3:4;break;case 3:_PrintErrorID(g,STRING_TABLE.__str31870|0,7,0);_EnvPrintRouter(g,STRING_TABLE.__str41871|0,STRING_TABLE.__str201887|0);e=-1;d=35;break;case 4:_GetToken(g,i,
HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0);d=5;break;case 5:d=171!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?6:32;break;case 6:d=0!=(HEAP32[k>>2]|0)?7:8;break;case 7:_DeleteTempRestricts(g,l);_PrintErrorID(g,STRING_TABLE.__str211888|0,8,0);_EnvPrintRouter(g,STRING_TABLE.__str41871|0,STRING_TABLE.__str221889|0);e=-1;d=35;break;case 8:d=35==(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?10:9;break;case 9:d=36==(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|
0)>>2]+92|0)>>1]&65535|0)?10:18;break;case 10:n=HEAP32[((HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)+4|0)>>2];d=0!=(_DuplicateParameters(g,l,m,n)|0)?11:12;break;case 11:_DeleteTempRestricts(g,l);e=-1;d=35;break;case 12:d=36==(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?13:14;break;case 13:HEAP32[k>>2]=n;d=14;break;case 14:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?15:16;break;case 15:var q=_genalloc(g,12);d=17;break;case 16:HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];q=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=17;break;case 17:o=q;_PackRestrictionTypes(g,o,0);HEAP32[(o+4|0)>>2]=0;l=_AddParameter(g,l,HEAP32[m>>2],n,o);p=p+1|0;d=31;break;case 18:d=170==(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>
2]+92|0)>>1]&65535|0)?19:29;break;case 19:_GetToken(g,i,HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0);d=35!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?20:22;break;case 20:d=36!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?21:22;break;case 21:_DeleteTempRestricts(g,l);_PrintErrorID(g,STRING_TABLE.__str31870|0,8,0);_EnvPrintRouter(g,STRING_TABLE.__str41871|0,STRING_TABLE.__str231890|0);e=-1;d=35;break;case 22:n=HEAP32[((HEAP32[(HEAP32[(g+16|0)>>2]+108|
0)>>2]+92|0)+4|0)>>2];d=0!=(_DuplicateParameters(g,l,m,n)|0)?23:24;break;case 23:_DeleteTempRestricts(g,l);e=-1;d=35;break;case 24:d=36==(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?25:26;break;case 25:HEAP32[k>>2]=n;d=26;break;case 26:_SavePPBuffer(g,STRING_TABLE.__str241891|0);o=_ParseRestriction(g,i);d=0==(o|0)?27:28;break;case 27:_DeleteTempRestricts(g,l);e=-1;d=35;break;case 28:l=_AddParameter(g,l,HEAP32[m>>2],n,o);p=p+1|0;d=30;break;case 29:_DeleteTempRestricts(g,l);_PrintErrorID(g,
STRING_TABLE.__str31870|0,9,0);_EnvPrintRouter(g,STRING_TABLE.__str41871|0,STRING_TABLE.__str251892|0);e=-1;d=35;break;case 30:d=31;break;case 31:_PPCRAndIndent(g);_GetToken(g,i,HEAP32[(HEAP32[(g+16|0)>>2]+108|0)>>2]+92|0);d=5;break;case 32:d=0!=(p|0)?33:34;break;case 33:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str261893|0);d=34;break;case 34:HEAP32[j>>2]=l;e=p;d=35;break;case 35:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseMethodParameters.X=1;
function _ReplaceCurrentArgRefs(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:11;break;case 4:c=35!=(HEAPU16[(b|0)>>1]&65535|0)?5:6;break;case 5:c=8;break;case 6:c=0==(_strcmp(HEAP32[(HEAP32[(b+4|0)>>2]+16|0)>>2],STRING_TABLE.__str181885|0)|0)?7:8;break;case 7:HEAP16[(b|0)>>1]=30;c=_FindFunction(a,STRING_TABLE.__str191886|0);HEAP32[(b+4|0)>>2]=c;c=8;break;case 8:c=0!=(HEAP32[(b+8|0)>>2]|0)?9:10;break;case 9:_ReplaceCurrentArgRefs(a,HEAP32[(b+8|0)>>2]);c=10;break;
case 10:b=HEAP32[(b+12|0)>>2];c=3;break;case 11:return;default:assert(0,"bad label: "+c)}}_ReplaceCurrentArgRefs.X=1;
function _DeleteTempRestricts(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:7;break;case 4:c=b;b=HEAP32[(b+12|0)>>2];d=HEAP32[(c+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>
2]+16|0)>>2];_ReturnExpression(a,HEAP32[(d+4|0)>>2]);c=0!=(HEAP32[(d+8|0)>>2]|0)?5:6;break;case 5:_rm(a,HEAP32[(d|0)>>2],HEAP32[(d+8|0)>>2]<<2|0);c=6;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];
c=3;break;case 7:return;default:assert(0,"bad label: "+c)}}_DeleteTempRestricts.X=1;
function _FindMethodByRestrictions(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;d=a;k=b;d=0!=(d|0)?3:4;break;case 3:n=j-1|0;o=-1;d=5;break;case 4:o=n=j;d=5;break;case 5:l=0;d=6;break;case 6:d=l>>>0<HEAPU32[(g+36|0)>>2]>>>0?7:14;break;case 7:m=_RestrictionsCompare(i,j,n,o,HEAP32[(g+32|0)>>2]+44*l|0);d=0==(m|0)?8:9;break;case 8:HEAP32[k>>2]=-1;e=HEAP32[(g+32|0)>>2]+44*l|0;d=15;break;case 9:d=-1==(m|0)?10:11;break;case 10:HEAP32[k>>2]=l;e=0;d=15;break;case 11:d=12;break;
case 12:d=13;break;case 13:l=l+1|0;d=6;break;case 14:HEAP32[k>>2]=l;e=0;d=15;break;case 15:return e;default:assert(0,"bad label: "+d)}}_FindMethodByRestrictions.X=1;
function _AddMethod(h,f,c,a,b,d,e,g,i,j,k,l){var m;for(m=2;;)switch(m){case 2:var n,o,p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E;o=h;p=f;q=c;r=a;s=b;t=d;u=e;v=g;w=i;x=j;y=k;A=l;HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+108|0)>>2]+84|0)>>2]=HEAP32[(p+24|0)>>2];m=0==(q|0)?3:21;break;case 3:m=0!=(s|0)?4:5;break;case 4:var F=_FindMethodByIndex(p,s);m=6;break;case 5:F=-1;m=6;break;case 6:E=F;m=-1==(E|0)?7:8;break;case 7:q=_AddGenericMethod(o,p,r,s);m=20;break;case 8:_DeleteMethodInfo(o,p,HEAP32[(p+32|0)>>2]+44*E|0);m=
(E|0)<(r|0)?9:14;break;case 9:r=r-1|0;C=E+1|0;m=10;break;case 10:m=(C|0)<=(r|0)?11:13;break;case 11:m=HEAP32[(p+32|0)>>2]+44*(C-1|0)|0;var G=HEAP32[(p+32|0)>>2]+44*C|0;assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(m,G,44,1);m=12;break;case 12:C=C+1|0;m=10;break;case 13:m=19;break;case 14:C=E-1|0;m=15;break;case 15:m=(C|0)>=(r|0)?16:18;break;case 16:m=HEAP32[(p+32|0)>>2]+44*(C+1|0)|0;G=HEAP32[(p+32|0)>>2]+44*C|0;assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");
_memcpy(m,G,44,1);m=17;break;case 17:C=C-1|0;m=15;break;case 18:m=19;break;case 19:q=HEAP32[(p+32|0)>>2]+44*r|0;HEAP32[(q|0)>>2]=s;m=20;break;case 20:m=24;break;case 21:_ExpressionDeinstall(o,HEAP32[(q+32|0)>>2]);_ReturnPackedExpression(o,HEAP32[(q+32|0)>>2]);m=0!=(HEAP32[(q+36|0)>>2]|0)?22:23;break;case 22:m=o;var G=HEAP32[(q+36|0)>>2],H=_strlen(HEAP32[(q+36|0)>>2])+1|0;_rm(m,G,H);m=23;break;case 23:m=24;break;case 24:m=q+24|0;HEAP32[m>>2]&=-2;HEAP32[(q+32|0)>>2]=x;_ExpressionInstall(o,HEAP32[(q+
32|0)>>2]);HEAP32[(q+36|0)>>2]=y;m=-1==(r|0)?25:26;break;case 25:HEAP32[(p+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(o+16|0)>>2]+108|0)>>2]+84|0)>>2];n=q;m=47;break;case 26:HEAP32[(q+20|0)>>2]=v;HEAP32[(q+8|0)>>2]=u;m=0!=(w|0)?27:28;break;case 27:HEAP32[(q+12|0)>>2]=u-1|0;HEAP32[(q+16|0)>>2]=-1;m=29;break;case 28:m=u;HEAP32[(q+16|0)>>2]=m;HEAP32[(q+12|0)>>2]=m;m=29;break;case 29:m=0!=(u|0)?30:31;break;case 30:m=_gm2(o,12*u|0);HEAP32[(q+28|0)>>2]=m;m=32;break;case 31:HEAP32[(q+28|0)>>2]=0;m=32;break;case 32:C=
0;m=33;break;case 33:m=(C|0)<(u|0)?34:46;break;case 34:z=HEAP32[(q+28|0)>>2]+12*C|0;B=HEAP32[(t+8|0)>>2];m=_PackExpression(o,HEAP32[(B+4|0)>>2]);HEAP32[(z+4|0)>>2]=m;HEAP32[(z+8|0)>>2]=HEAP32[(B+8|0)>>2];m=0!=(A|0)?35:39;break;case 35:m=0!=(HEAP32[(B|0)>>2]|0)?36:37;break;case 36:m=_gm2(o,HEAP32[(z+8|0)>>2]<<2|0);HEAP32[(z|0)>>2]=m;m=HEAP32[(z|0)>>2];G=HEAP32[(B|0)>>2];H=HEAP32[(z+8|0)>>2]<<2|0;assert(0===H%1,"memcpy given "+H+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(m,
G,H,1);m=38;break;case 37:HEAP32[(z|0)>>2]=0;m=38;break;case 38:m=40;break;case 39:HEAP32[(z|0)>>2]=HEAP32[(B|0)>>2];HEAP32[(B+8|0)>>2]=0;HEAP32[(B|0)>>2]=0;m=40;break;case 40:_ExpressionInstall(o,HEAP32[(z+4|0)>>2]);D=0;m=41;break;case 41:m=D>>>0<HEAPU32[(z+8|0)>>2]>>>0?42:44;break;case 42:_IncrementDefclassBusyCount(o,HEAP32[(HEAP32[(z|0)>>2]+(D<<2)|0)>>2]);m=43;break;case 43:D=D+1|0;m=41;break;case 44:t=HEAP32[(t+12|0)>>2];m=45;break;case 45:C=C+1|0;m=33;break;case 46:HEAP32[(p+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(o+
16|0)>>2]+108|0)>>2]+84|0)>>2];n=q;m=47;break;case 47:return n;default:assert(0,"bad label: "+m)}}_AddMethod.X=1;
function _AddGenericMethod(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;j=_gm2(d,44*(HEAP32[(e+36|0)>>2]+1|0)|0);k=l=0;b=3;break;case 3:b=k>>>0<HEAPU32[(e+36|0)>>2]>>>0?4:8;break;case 4:b=(k|0)==(g|0)?5:6;break;case 5:l=l+1|0;b=6;break;case 6:b=j+44*l|0;var m=HEAP32[(e+32|0)>>2]+44*k|0;assert(!0,"memcpy given 44 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(b,m,44,1);b=7;break;case 7:k=k+1|0;l=l+1|0;b=3;break;case 8:b=0==(i|0)?9:10;break;case 9:b=
e+40|0;m=HEAP32[b>>2];HEAP32[b>>2]=m+1|0;HEAP32[(j+44*g|0)>>2]=m;b=13;break;case 10:HEAP32[(j+44*g|0)>>2]=i;b=i>>>0>=HEAPU32[(e+40|0)>>2]>>>0?11:12;break;case 11:HEAP32[(e+40|0)>>2]=i+1|0;b=12;break;case 12:b=13;break;case 13:HEAP32[((j+44*g|0)+4|0)>>2]=0;b=(j+44*g|0)+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+108|0)>>2]+68|0)>>2]&1)<<1;HEAP32[((j+44*g|0)+12|0)>>2]=0;HEAP32[((j+44*g|0)+16|0)>>2]=0;HEAP32[((j+44*g|0)+8|0)>>2]=0;HEAP32[((j+44*g|0)+20|0)>>2]=0;b=(j+44*g|0)+
24|0;HEAP32[b>>2]&=-2;HEAP32[((j+44*g|0)+28|0)>>2]=0;HEAP32[((j+44*g|0)+32|0)>>2]=0;HEAP32[((j+44*g|0)+36|0)>>2]=0;HEAP32[((j+44*g|0)+40|0)>>2]=0;b=0!=(HEAP32[(e+36|0)>>2]|0)?14:15;break;case 14:_rm(d,HEAP32[(e+32|0)>>2],44*HEAP32[(e+36|0)>>2]|0);b=15;break;case 15:return h=e+36|0,HEAP32[h>>2]=HEAP32[h>>2]+1|0,HEAP32[(e+32|0)>>2]=j,j+44*g|0;default:assert(0,"bad label: "+b)}}_AddGenericMethod.X=1;
function _PackRestrictionTypes(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;HEAP32[(d+8|0)>>2]=0;g=e;a=3;break;case 3:a=0!=(g|0)?4:6;break;case 4:a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=5;break;case 5:g=HEAP32[(g+12|0)>>2];a=3;break;case 6:a=0!=(HEAP32[(d+8|0)>>2]|0)?7:8;break;case 7:a=_gm2(b,HEAP32[(d+8|0)>>2]<<2|0);HEAP32[(d|0)>>2]=a;a=9;break;case 8:HEAP32[(d|0)>>2]=0;a=9;break;case 9:i=0;g=e;a=10;break;case 10:a=i>>>0<HEAPU32[(d+8|0)>>2]>>>0?11:13;break;case 11:HEAP32[(HEAP32[(d|
0)>>2]+(i<<2)|0)>>2]=HEAP32[(g+4|0)>>2];a=12;break;case 12:i=i+1|0;g=HEAP32[(g+12|0)>>2];a=10;break;case 13:_ReturnExpression(b,e);return;default:assert(0,"bad label: "+a)}}_PackRestrictionTypes.X=1;
function _RestrictionsCompare(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q;g=h;i=f;j=c;k=a;l=b;m=p=0;d=3;break;case 3:if((m|0)<(i|0))d=4;else{var r=0;d=5}break;case 4:r=(m|0)<(HEAP32[(l+8|0)>>2]|0);d=5;break;case 5:d=r?6:26;break;case 6:d=(m|0)==(i-1|0)?7:10;break;case 7:d=-1==(k|0)?8:10;break;case 8:d=-1!=(HEAP32[(l+16|0)>>2]|0)?9:10;break;case 9:e=1;d=33;break;case 10:d=(m|0)==(HEAP32[(l+8|0)>>2]-1|0)?11:14;break;case 11:d=-1!=(k|0)?12:14;break;case 12:d=-1==(HEAP32[(l+
16|0)>>2]|0)?13:14;break;case 13:e=-1;d=33;break;case 14:n=HEAP32[(g+8|0)>>2];o=HEAP32[(l+28|0)>>2]+12*m|0;q=_TypeListCompare(n,o);d=0!=(q|0)?15:16;break;case 15:e=q;d=33;break;case 16:d=0==(HEAP32[(n+4|0)>>2]|0)?17:19;break;case 17:d=0!=(HEAP32[(o+4|0)>>2]|0)?18:19;break;case 18:e=1;d=33;break;case 19:d=0!=(HEAP32[(n+4|0)>>2]|0)?20:22;break;case 20:d=0==(HEAP32[(o+4|0)>>2]|0)?21:22;break;case 21:e=-1;d=33;break;case 22:d=0==(_IdenticalExpression(HEAP32[(n+4|0)>>2],HEAP32[(o+4|0)>>2])|0)?23:24;break;
case 23:p=1;d=24;break;case 24:g=HEAP32[(g+12|0)>>2];d=25;break;case 25:m=m+1|0;d=3;break;case 26:d=(i|0)==(HEAP32[(l+8|0)>>2]|0)?27:28;break;case 27:e=0!=(p|0)?1:0;d=33;break;case 28:d=(j|0)>(HEAP32[(l+12|0)>>2]|0)?29:30;break;case 29:e=-1;d=33;break;case 30:d=(HEAP32[(l+12|0)>>2]|0)<(j|0)?31:32;break;case 31:e=1;d=33;break;case 32:e=-1==(k|0)?1:-1;d=33;break;case 33:return e;default:assert(0,"bad label: "+d)}}_RestrictionsCompare.X=1;
function _TypeListCompare(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=0;c=0==(HEAP32[(b+8|0)>>2]|0)?3:5;break;case 3:c=0==(HEAP32[(d+8|0)>>2]|0)?4:5;break;case 4:a=0;c=28;break;case 5:c=0==(HEAP32[(b+8|0)>>2]|0)?6:7;break;case 6:a=1;c=28;break;case 7:c=0==(HEAP32[(d+8|0)>>2]|0)?8:9;break;case 8:a=-1;c=28;break;case 9:e=0;c=10;break;case 10:if(e>>>0<HEAPU32[(b+8|0)>>2]>>>0)c=11;else{var i=0;c=12}break;case 11:i=e>>>0<HEAPU32[(d+8|0)>>2]>>>0;c=12;break;case 12:c=i?13:21;break;case 13:c=
(HEAP32[(HEAP32[(b|0)>>2]+(e<<2)|0)>>2]|0)!=(HEAP32[(HEAP32[(d|0)>>2]+(e<<2)|0)>>2]|0)?14:19;break;case 14:g=1;c=0!=(_HasSuperclass(HEAP32[(HEAP32[(b|0)>>2]+(e<<2)|0)>>2],HEAP32[(HEAP32[(d|0)>>2]+(e<<2)|0)>>2])|0)?15:16;break;case 15:a=-1;c=28;break;case 16:c=0!=(_HasSuperclass(HEAP32[(HEAP32[(d|0)>>2]+(e<<2)|0)>>2],HEAP32[(HEAP32[(b|0)>>2]+(e<<2)|0)>>2])|0)?17:18;break;case 17:a=1;c=28;break;case 18:c=19;break;case 19:c=20;break;case 20:e=e+1|0;c=10;break;case 21:c=HEAPU32[(b+8|0)>>2]>>>0<HEAPU32[(d+
8|0)>>2]>>>0?22:23;break;case 22:a=-1;c=28;break;case 23:c=HEAPU32[(b+8|0)>>2]>>>0>HEAPU32[(d+8|0)>>2]>>>0?24:25;break;case 24:a=1;c=28;break;case 25:c=0!=(g|0)?26:27;break;case 26:a=1;c=28;break;case 27:a=0;c=28;break;case 28:return a;default:assert(0,"bad label: "+c)}}_TypeListCompare.X=1;
function _NewGeneric(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]|0)?3:4;break;case 3:var d=_genalloc(a,44);c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:return c=d,_InitializeConstructHeader(a,STRING_TABLE.__str11868|0,c,b),HEAP32[(c+24|0)>>2]=0,HEAP32[(c+40|0)>>2]=1,HEAP32[(c+32|0)>>2]=0,HEAP32[(c+36|0)>>2]=0,HEAP32[(c+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+108|0)>>2]+64|0)>>2],c;default:assert(0,"bad label: "+c)}}_NewGeneric.X=1;
function _DuplicateParameters(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;HEAP32[i>>2]=0;b=3;break;case 3:b=0!=(g|0)?4:7;break;case 4:b=(HEAP32[(g+4|0)>>2]|0)==(j|0)?5:6;break;case 5:_PrintErrorID(e,STRING_TABLE.__str211888|0,7,0);_EnvPrintRouter(e,STRING_TABLE.__str41871|0,STRING_TABLE.__str331900|0);d=1;b=8;break;case 6:HEAP32[i>>2]=g;g=HEAP32[(g+12|0)>>2];b=3;break;case 7:d=0;b=8;break;case 8:return d;default:assert(0,"bad label: "+b)}}
function _AddParameter(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j;d=h;e=f;g=c;i=a;j=b;i=_GenConstant(d,2,i);d=0==(e|0)?3:4;break;case 3:e=i;d=5;break;case 4:HEAP32[(g+12|0)>>2]=i;d=5;break;case 5:return HEAP32[(i+8|0)>>2]=j,e;default:assert(0,"bad label: "+d)}}
function _ParseRestriction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l;b=h;d=f;l=e=0;_GetToken(b,d,HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0);c=3;break;case 3:c=171!=(HEAPU16[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?4:37;break;case 4:c=0!=(l|0)?5:6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str31870|0,10,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str271894|0);_ReturnExpression(b,l);_ReturnExpression(b,e);a=0;c=44;break;case 6:c=2==(HEAPU16[(HEAP32[(HEAP32[(b+
16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?7:25;break;case 7:g=_ValidType(b,HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0)+4|0)>>2]);c=0==(g|0)?8:9;break;case 8:_ReturnExpression(b,e);_ReturnExpression(b,l);a=0;c=44;break;case 9:c=0==(e|0)?10:11;break;case 10:e=g;c=24;break;case 11:j=i=e;c=12;break;case 12:c=0!=(j|0)?13:23;break;case 13:k=g;c=14;break;case 14:c=0!=(k|0)?15:21;break;case 15:c=(HEAP32[(j+4|0)>>2]|0)==(HEAP32[(k+4|0)>>2]|0)?16:17;break;case 16:_PrintErrorID(b,STRING_TABLE.__str31870|
0,11,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str281895|0);_ReturnExpression(b,l);_ReturnExpression(b,e);_ReturnExpression(b,g);a=0;c=44;break;case 17:c=0!=(_RedundantClasses(b,HEAP32[(j+4|0)>>2],HEAP32[(k+4|0)>>2])|0)?18:19;break;case 18:_ReturnExpression(b,l);_ReturnExpression(b,e);_ReturnExpression(b,g);a=0;c=44;break;case 19:c=20;break;case 20:k=HEAP32[(k+12|0)>>2];c=14;break;case 21:i=j;c=22;break;case 22:j=HEAP32[(j+12|0)>>2];c=12;break;case 23:HEAP32[(i+12|0)>>2]=g;c=24;
break;case 24:c=36;break;case 25:c=170==(HEAPU16[(HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?26:31;break;case 26:l=_Function1Parse(b,d);c=0==(l|0)?27:28;break;case 27:_ReturnExpression(b,e);a=0;c=44;break;case 28:c=0!=(_GetParsedBindNames(b)|0)?29:30;break;case 29:_PrintErrorID(b,STRING_TABLE.__str31870|0,12,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str291896|0);_ReturnExpression(b,l);_ReturnExpression(b,e);a=0;c=44;break;case 30:c=35;break;case 31:c=33==(HEAPU16[(HEAP32[(HEAP32[(b+
16|0)>>2]+108|0)>>2]+92|0)>>1]&65535|0)?32:33;break;case 32:l=_GenConstant(b,33,HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0)+4|0)>>2]);c=34;break;case 33:_PrintErrorID(b,STRING_TABLE.__str31870|0,13,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str301897|0);_ReturnExpression(b,l);_ReturnExpression(b,e);a=0;c=44;break;case 34:c=35;break;case 35:c=36;break;case 36:_SavePPBuffer(b,STRING_TABLE.__str241891|0);_GetToken(b,d,HEAP32[(HEAP32[(b+16|0)>>2]+108|0)>>2]+92|0);c=3;break;
case 37:_PPBackup(b);_PPBackup(b);_SavePPBuffer(b,STRING_TABLE.__str261893|0);c=0==(e|0)?38:40;break;case 38:c=0==(l|0)?39:40;break;case 39:_PrintErrorID(b,STRING_TABLE.__str31870|0,13,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str301897|0);a=0;c=44;break;case 40:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?41:42;break;case 41:var m=_genalloc(b,12);c=43;break;case 42:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=43;break;case 43:a=m;HEAP32[(a+4|0)>>2]=l;_PackRestrictionTypes(b,a,e);c=44;break;case 44:return a;default:assert(0,"bad label: "+c)}}_ParseRestriction.X=1;
function _ValidType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0!=(_FindModuleSeparator(HEAP32[(d+16|0)>>2])|0)?3:4;break;case 3:_IllegalModuleSpecifierMessage(b);c=7;break;case 4:e=_LookupDefclassInScope(b,HEAP32[(d+16|0)>>2]);c=0==(e|0)?5:6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str31870|0,14,0);_EnvPrintRouter(b,STRING_TABLE.__str41871|0,STRING_TABLE.__str321899|0);a=0;c=8;break;case 6:a=_GenConstant(b,5,e);c=8;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+
c)}}
function _RedundantClasses(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0!=(_HasSuperclass(e,g)|0)?3:4;break;case 3:i=_GetConstructNameString(e);a=8;break;case 4:a=0!=(_HasSuperclass(g,e)|0)?5:6;break;case 5:i=_GetConstructNameString(g);a=7;break;case 6:b=0;a=9;break;case 7:a=8;break;case 8:_PrintErrorID(d,STRING_TABLE.__str31870|0,15,0);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,i);_EnvPrintRouter(d,STRING_TABLE.__str41871|0,STRING_TABLE.__str311898|0);b=1;a=9;break;case 9:return b;default:assert(0,
"bad label: "+a)}}function _DefglobalBinarySetup(h){_AllocateEnvironmentData(h,60,16,820);_AddAfterBloadFunction(h,STRING_TABLE.__str1915|0,822,50);_AddBinaryItem(h,STRING_TABLE.__str1915|0,0,824,0,826,828,830,832,834)}
function _DeallocateDefglobalBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]|0)?4:8;break;case 4:f=4==(HEAPU16[(((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2]+60*b|0)+32|0)+4|0)>>1]&65535|0)?5:6;break;case 5:_ReturnMultifield(c,HEAP32[(((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2]+60*b|0)+32|0)+8|0)>>2]);f=6;break;case 6:f=7;break;case 7:b=b+1|0;f=3;break;case 8:a=60*HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+240|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2],a);f=10;break;case 10:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0)>>2]|0;f=0!=(a|0)?11:12;break;case 11:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+8|0)>>2],a);f=12;break;case 12:return;default:assert(0,"bad label: "+f)}}_DeallocateDefglobalBloadData.X=1;
function _BsaveFind1916(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0)>>2]=0;b=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(b|0)?4:10;break;case 4:_EnvSetCurrentModule(c,b);a=HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0;HEAP32[a>>2]=
HEAP32[a>>2]+1|0;a=_EnvGetNextDefglobal(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=a|0;var d=HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0,e=HEAP32[d>>2];HEAP32[d>>2]=e+1|0;_MarkConstructHeaderNeededItems(f,e);f=7;break;case 7:a=_EnvGetNextDefglobal(c,a);f=5;break;case 8:f=9;break;case 9:b=_EnvGetNextDefmodule(c,b);f=3;break;case 10:return;default:assert(0,"bad label: "+f)}}_BsaveFind1916.X=1;
function _BsaveStorage1917(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+4|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+12|0,4,f);STACKTOP=c}function _BloadDefglobalModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+8|0)>>2]+12*f|0}
function _BsaveBinaryItem1918(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4,j=c+20;b=h;d=f;HEAP32[e>>2]=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+4|0)>>2]<<4|0)+(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+12|0)>>2]|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:6;break;
case 4:_EnvSetCurrentModule(b,e);a=b;var k=_FindModuleItem(b,STRING_TABLE.__str1915|0)+4|0;a=_GetModuleItem(a,0,HEAP32[k>>2]);_AssignBsaveDefmdlItemHdrVals(j|0,a|0);_GenWrite(j,12,d);a=5;break;case 5:e=_EnvGetNextDefmodule(b,e);a=3;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=7;break;case 7:a=0!=(e|0)?8:14;break;case 8:_EnvSetCurrentModule(b,e);g=_EnvGetNextDefglobal(b,0);a=9;break;case 9:a=0!=(g|0)?10:12;break;case 10:_AssignBsaveConstructHeaderVals(i|
0,g|0);a=_HashedExpressionIndex(b,HEAP32[(g+56|0)>>2]);HEAP32[(i+12|0)>>2]=a;_GenWrite(i,16,d);a=11;break;case 11:g=_EnvGetNextDefglobal(b,g);a=9;break;case 12:a=13;break;case 13:e=_EnvGetNextDefmodule(b,e);a=7;break;case 14:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+12|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+4|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveBinaryItem1918.X=1;
function _BloadStorageDefglobals(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+4|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+12|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+240|0)>>2]+8|0)>>2]=0;c=4;break;case 4:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+12|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+8|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]|0)>>2]=0;c=7;break;case 6:HEAP32[b>>2]=60*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+240|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+240|0)>>2]|0)>>2]=c;c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageDefglobals.X=1;function _BloadBinaryItem1919(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+12|0)>>2],12,836);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+4|0)>>2],16,838);STACKTOP=f}
function _ClearBload1920(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;f=3;break;case 3:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]|0)?4:8;break;case 4:_UnmarkConstructHeader(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2]+60*a|0);_ValueDeinstall(c,(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2]+60*a|0)+32|0);f=4==(HEAPU16[(((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2]+60*a|0)+32|0)+4|0)>>1]&65535|0)?5:6;break;case 5:_ReturnMultifield(c,HEAP32[(((HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+240|0)>>2]|0)>>2]+60*a|0)+32|0)+8|0)>>2]);f=6;break;case 6:f=7;break;case 7:a=a+1|0;f=3;break;case 8:b=60*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]|0;f=0!=(b|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]|0)>>2],b);f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+4|0)>>2]=0;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0)>>2]|0;f=0!=(b|0)?11:12;break;case 11:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|
0)>>2]+8|0)>>2],b);f=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+240|0)>>2]+12|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}_ClearBload1920.X=1;function _UpdateDefglobalModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]+8|0)>>2]+12*c|0,60,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+240|0)>>2]|0)>>2])}
function _UpdateDefglobal(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;_UpdateConstructHeader(b,d|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]+60*e|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]+8|0)>>2],60,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]);a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]+60*e|0)+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[_WatchGlobals>>2]&1;a=-1==(HEAP32[(d+12|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]+60*e|0)+56|0)>>2]=g;HEAP16[(((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+240|0)>>2]|0)>>2]+60*e|0)+32|0)+4|0)>>1]=175;return;default:assert(0,"bad label: "+a)}}_UpdateDefglobal.X=1;
function _DefglobalBasicCommands(h){_AddSaveFunction(h,STRING_TABLE.__str1923|0,840,40);_EnvAddResetFunction(h,STRING_TABLE.__str1923|0,822,50);_EnvDefineFunction2(h,STRING_TABLE.__str11924|0,109,842,STRING_TABLE.__str21925|0,STRING_TABLE.__str31926|0);_EnvDefineFunction2(h,STRING_TABLE.__str41927|0,118,844,STRING_TABLE.__str51928|0,STRING_TABLE.__str61929|0);_EnvDefineFunction2(h,STRING_TABLE.__str71930|0,119,846,STRING_TABLE.__str81931|0,STRING_TABLE.__str61929|0);_EnvDefineFunction2(h,STRING_TABLE.__str91932|
0,118,848,STRING_TABLE.__str101933|0,STRING_TABLE.__str31926|0);_EnvDefineFunction2(h,STRING_TABLE.__str111934|0,118,850,STRING_TABLE.__str121935|0,STRING_TABLE.__str61929|0);_AddWatchItem(h,STRING_TABLE.__str131936|0,0,_WatchGlobals,0,852,854);_DefglobalBinarySetup(h);_DefglobalCompilerSetup(h)}function _SaveDefglobals(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}
function _ResetDefglobals(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(_EnvGetResetGlobals(c)|0)?4:3;break;case 3:f=5;break;case 4:_DoForAllConstructs(c,856,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+4|0)>>2]+4|0)>>2],1,0);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}function _GetDefglobalListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str11924|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}
function _UndefglobalCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str41927|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _DefglobalModuleFunction(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str71930|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _ListDefglobalsCommand(h){_ListConstructCommand(h,STRING_TABLE.__str91932|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}
function _PPDefglobalCommand(h){_PPConstructCommand(h,STRING_TABLE.__str111934|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _DefglobalWatchAccess(h,f,c,a){return _ConstructSetWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2],c,a,858,860)}function _DefglobalWatchPrint(h,f,c,a){return _ConstructPrintWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2],f,a,858,860)}
function _ResetDefglobalAction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=0!=(_EvaluateExpression(b,HEAP32[(d+56|0)>>2],e)|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=4;break;case 4:_QSetDefglobalValue(b,d,e,0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _EnvUndefglobal(h,f){return _Undefconstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _EnvGetDefglobalWatch(h,f){return HEAP32[(f+24|0)>>2]&1}function _EnvSetDefglobalWatch(h,f,c){h=c+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-2|f&1}function _EnvGetResetGlobals(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+12|0)>>2]}
function _EnvSetResetGlobals(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+12|0)>>2]=f;return c}function _EnvGetDefglobalList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2],c)}function _PPDefglobal(h,f,c){return _PPConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _EnvListDefglobals(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2],f,c)}
function _DefglobalCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str1939|0,0,862,864,866,2);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+136|0)>>2]=f}function _BeforeDefglobalsToCode(h){_MarkConstructBsaveIDs(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+4|0)>>2])}
function _InitDefglobalsCode(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str121951|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=c}
function _ConstructToCode1954(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v=e+12,w=e+16,x,y;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;s=0;HEAP32[t>>2]=0;HEAP32[u>>2]=1;HEAP32[v>>2]=0;HEAP32[w>>2]=1;y=x=0;_fprintf(m,STRING_TABLE.__str41943|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:14;break;case 4:_EnvSetCurrentModule(j,q);x=_OpenFileIfNeeded(j,x,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str51944|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+4|0)>>2]+136|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(x|0)?5:6;break;case 5:_CloseDefglobalFiles(j,x,y,o);i=0;g=15;break;case 6:_DefglobalModuleToCode(j,x,q,n,o,s);x=_CloseFileIfNeeded(j,x,t,u,o,0,0);r=_EnvGetNextDefglobal(j,0);g=7;break;case 7:g=0!=(r|
0)?8:12;break;case 8:y=_OpenFileIfNeeded(j,y,k,l,n,p,HEAP32[w>>2],m,STRING_TABLE.__str61945|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+4|0)>>2]+136|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(y|0)?9:10;break;case 9:_CloseDefglobalFiles(j,x,y,o);i=0;g=15;break;case 10:_DefglobalToCode(j,y,r,n,o,s);HEAP32[v>>2]=HEAP32[v>>2]+1|0;y=_CloseFileIfNeeded(j,y,v,w,o,0,0);g=11;break;case 11:r=_EnvGetNextDefglobal(j,r);g=7;break;case 12:s=s+1|0;HEAP32[t>>2]=HEAP32[t>>2]+1|0;g=13;break;case 13:q=_EnvGetNextDefmodule(j,
q);g=3;break;case 14:_CloseDefglobalFiles(j,x,y,o);i=1;g=15;break;case 15:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstructToCode1954.X=1;
function _DefglobalCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+136|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str11940|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}
function _DefglobalCConstructReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str21941|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
4|0)>>2]+136|0)>>2]+20|0)>>2]+4|0)>>2];var m=k,n=((HEAP32[((j|0)+12|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[((j|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str31942|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_DefglobalCConstructReference.X=1;
function _CloseDefglobalFiles(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l=b+4;e=h;g=f;i=c;j=a;HEAP32[k>>2]=j;HEAP32[l>>2]=0;d=0!=(i|0)?3:4;break;case 3:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,i,k,l,j,0,0);d=4;break;case 4:d=0!=(g|0)?5:6;break;case 5:HEAP32[k>>2]=j;_CloseFileIfNeeded(e,g,k,l,j,0,0);d=6;break;case 6:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}
function _DefglobalModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str71946|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+136|0)>>2]+20|0)>>2]+4|0)>>
2]);_fprintf(f,STRING_TABLE.__str111950|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _DefglobalToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str71946|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(h,f,c|0,a,b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+136|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+
4|0)>>2]+136|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(f,STRING_TABLE.__str81947|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));d=HEAP32[(c+28|0)>>2];_fprintf(f,STRING_TABLE.__str91948|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));_fprintf(f,STRING_TABLE.__str101949|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(f,STRING_TABLE.__str81947|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(h,f,HEAP32[(c+56|0)>>2],a,b);_fprintf(f,STRING_TABLE.__str111950|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=
e}_DefglobalToCode.X=1;function _DefglobalCommandDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str1957|0,98,868,STRING_TABLE.__str11958|0,STRING_TABLE.__str21959|0);_EnvDefineFunction2(h,STRING_TABLE.__str31960|0,98,870,STRING_TABLE.__str41961|0,STRING_TABLE.__str51962|0);_EnvDefineFunction2(h,STRING_TABLE.__str61963|0,118,872,STRING_TABLE.__str71964|0,STRING_TABLE.__str81965|0)}
function _SetResetGlobalsCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_EnvGetResetGlobals(b);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str1957|0,0,1)|0)?3:4;break;case 3:a=d;c=9;break;case 4:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:7;break;case 5:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?6:7;break;case 6:_EnvSetResetGlobals(b,
0);c=8;break;case 7:_EnvSetResetGlobals(b,1);c=8;break;case 8:a=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}function _GetResetGlobalsCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=_EnvGetResetGlobals(f);f=-1==(_EnvArgCountCheck(f,STRING_TABLE.__str31960|0,0,0)|0)?3:4;break;case 3:c=a;f=5;break;case 4:c=a;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _ShowDefglobalsCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;a=h;d=c=_EnvArgCountCheck(a,STRING_TABLE.__str61963|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=10;break;case 4:c=1==(d|0)?5:8;break;case 5:b=_GetModuleName(a,STRING_TABLE.__str61963|0,1,e);c=0!=(HEAP32[e>>2]|0)?6:7;break;case 6:c=10;break;case 7:c=9;break;case 8:b=_EnvGetCurrentModule(a);c=9;break;case 9:_EnvShowDefglobals(a,
STRING_TABLE.__str91966|0,b);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _EnvShowDefglobals(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;i=0;a=0==(e|0)?3:4;break;case 3:e=_EnvGetNextDefmodule(b,0);i=1;a=4;break;case 4:a=5;break;case 5:a=0!=(e|0)?6:20;break;case 6:a=0!=(i|0)?7:8;break;case 7:a=b;var j=d,k=_EnvGetDefmoduleName(b,e);_EnvPrintRouter(a,j,k);_EnvPrintRouter(b,d,STRING_TABLE.__str101967|0);a=8;break;case 8:g=_GetModuleItem(b,e,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+4|0)>>2]);g=HEAP32[(g+4|0)>>2];a=9;break;case 9:a=0!=(g|0)?
10:16;break;case 10:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?11:12;break;case 11:a=20;break;case 12:a=0!=(i|0)?13:14;break;case 13:_EnvPrintRouter(b,d,STRING_TABLE.__str111968|0);a=14;break;case 14:_PrintDefglobalValueForm(b,d,g);_EnvPrintRouter(b,d,STRING_TABLE.__str121969|0);a=15;break;case 15:g=HEAP32[(g+16|0)>>2];a=9;break;case 16:a=0!=(i|0)?18:17;break;case 17:a=20;break;case 18:a=19;break;case 19:e=_EnvGetNextDefmodule(b,e);a=5;break;case 20:return;default:assert(0,"bad label: "+
a)}}_EnvShowDefglobals.X=1;function _PrintDefglobalValueForm(h,f,c){_EnvPrintRouter(h,f,STRING_TABLE.__str131970|0);_EnvPrintRouter(h,f,HEAP32[(HEAP32[(c|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,f,STRING_TABLE.__str141971|0);_PrintDataObject(h,f,c+32|0)}
function _DecrementDefglobalBusyCount(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=h;a=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:c=a+28|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}function _IncrementDefglobalBusyCount(h,f){var c=f+28|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}function _EnvGetGlobalsChanged(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+8|0)>>2]}
function _EnvSetGlobalsChanged(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+8|0)>>2]=f}
function _InitializeDefglobals(h){var f=STACKTOP;STACKTOP+=112;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+56;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var a=_InitializeDefglobals_globalInfo>>2,b=f>>2,d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=_InitializeDefglobals_defglobalPtrRecord>>2;b=c>>2;for(d=a+14;a<d;a++,
b++)HEAP32[b]=HEAP32[a];_AllocateEnvironmentData(h,1,140,874);b=HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+16|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=f>>2;b>>=2;for(d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];b=HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+72|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=c>>2;b>>=2;for(d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+12|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+4|0)>>2]+128|0)>>2]=-1;_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+16|0,33);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+72|0,90);_InitializeDefglobalModules(h);_DefglobalBasicCommands(h);_DefglobalCommandDefinitions(h);c=_AddConstruct(h,STRING_TABLE.__str21976|0,STRING_TABLE.__str31977|0,876,878,94,96,98,880,102,882,884,886);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2]=c;STACKTOP=f}_InitializeDefglobals.X=1;
function _GetDefglobalValue2(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;j=_FindImportedConstruct(e,STRING_TABLE.__str21976|0,0,HEAP32[(g+16|0)>>2],k,1,0);b=0==(j|0)?3:4;break;case 3:_PrintErrorID(e,STRING_TABLE.__str121986|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str131987|0,STRING_TABLE.__str141988|0);_EnvPrintRouter(e,STRING_TABLE.__str131987|0,HEAP32[(g+
16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str131987|0,STRING_TABLE.__str151989|0);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(e,1);d=0;b=7;break;case 4:b=1<(HEAP32[k>>2]|0)?5:6;break;case 5:_AmbiguousReferenceErrorMessage(e,STRING_TABLE.__str21976|0,HEAP32[(g+16|0)>>2]);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(e,1);d=0;b=7;break;case 6:_QGetDefglobalValue(e,
j,i);d=1;b=7;break;case 7:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_GetDefglobalValue2.X=1;
function _QGetDefglobalValue(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;HEAP16[(e+4|0)>>1]=HEAP16[((d+32|0)+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[((d+32|0)+8|0)>>2];HEAP32[(e+12|0)>>2]=HEAP32[((d+32|0)+12|0)>>2];HEAP32[(e+16|0)>>2]=HEAP32[((d+32|0)+16|0)>>2];a=4==(HEAPU16[(e+4|0)>>1]&65535|0)?3:4;break;case 3:a=_EnvCreateMultifield(b,HEAP32[(e+16|0)>>2]+1|0);HEAP32[(e+8|0)>>2]=a;a=HEAP32[(e+8|0)>>2]+16|0;var g=(HEAP32[((d+32|0)+8|0)>>2]+16|0)+(HEAP32[((d+32|0)+12|0)>>2]<<3)|0,i=(HEAP32[(e+
16|0)>>2]+1|0)<<3|0;assert(0===i%1,"memcpy given "+i+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,g,i,1);a=4;break;case 4:return 1;default:assert(0,"bad label: "+a)}}_QGetDefglobalValue.X=1;
function _DeallocateDefglobalData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,888,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+4|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+4|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDefglobalData.X=1;
function _InitializeDefglobalModules(h){var f=_RegisterModuleItem(h,STRING_TABLE.__str21976|0,890,892,894,896,878);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+4|0)>>2]=f;_AddPortConstructItem(h,STRING_TABLE.__str21976|0,2)}function _EnvFindDefglobal(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2])}function _EnvGetNextDefglobal(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+4|0)>>2])}
function _EnvIsDefglobalDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=7;break;case 4:c=0!=(HEAP32[(b+28|0)>>2]|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _ReturnDefglobal(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:_ValueDeinstall(a,b+32|0);c=4==(HEAPU16[((b+32|0)+4|0)>>1]&65535|0)?5:6;break;case 5:_ReturnMultifield(a,HEAP32[((b+32|0)+8|0)>>2]);c=6;break;case 6:_RemoveHashedExpression(a,HEAP32[(b+56|0)>>2]);_DeinstallConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+4|0)>>2]+8|0)>>2]=1;c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}_ReturnDefglobal.X=1;function _GetDefglobalModuleItem(h,f){return _GetConstructModuleItemByIndex(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]+4|0)>>2])}
function _QSetDefglobalValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0!=(a|0)?3:6;break;case 3:_EvaluateExpression(d,HEAP32[(e+56|0)>>2],g);b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?4:5;break;case 4:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=5;break;case 5:b=6;break;case 6:b=0!=(HEAP32[(e+24|0)>>2]&1|0)?7:8;break;case 7:_EnvPrintRouter(d,STRING_TABLE.__str41978|0,STRING_TABLE.__str51979|0);_EnvPrintRouter(d,
STRING_TABLE.__str41978|0,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str41978|0,STRING_TABLE.__str61980|0);_PrintDataObject(d,STRING_TABLE.__str41978|0,g);_EnvPrintRouter(d,STRING_TABLE.__str41978|0,STRING_TABLE.__str71981|0);_PrintDataObject(d,STRING_TABLE.__str41978|0,e+32|0);_EnvPrintRouter(d,STRING_TABLE.__str41978|0,STRING_TABLE.__str81982|0);b=8;break;case 8:_ValueDeinstall(d,e+32|0);b=4==(HEAPU16[((e+32|0)+4|0)>>1]&65535|0)?9:10;break;case 9:_ReturnMultifield(d,HEAP32[((e+
32|0)+8|0)>>2]);b=10;break;case 10:HEAP16[((e+32|0)+4|0)>>1]=HEAP16[(g+4|0)>>1];b=4!=(HEAPU16[(g+4|0)>>1]&65535|0)?11:12;break;case 11:HEAP32[((e+32|0)+8|0)>>2]=HEAP32[(g+8|0)>>2];b=13;break;case 12:_DuplicateMultifield(d,e+32|0,g);b=13;break;case 13:_ValueInstall(d,e+32|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+4|0)>>2]+8|0)>>2]=1;b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?14:17;break;case 14:b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+160|0)>>2]|0)>>2]|0)?17:15;break;case 15:b=
0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]|0)?16:17;break;case 16:_PeriodicCleanup(d,1,0);b=17;break;case 17:return;default:assert(0,"bad label: "+b)}}_QSetDefglobalValue.X=1;
function _QFindDefglobal(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=_EnvGetNextDefglobal(b,0);c=3;break;case 3:c=0!=(e|0)?4:8;break;case 4:c=(d|0)==(HEAP32[(e|0)>>2]|0)?5:6;break;case 5:a=e;c=9;break;case 6:c=7;break;case 7:e=_EnvGetNextDefglobal(b,e);c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvGetDefglobalValueForm(h,f,c,a){_OpenStringDestination(h,STRING_TABLE.__str91983|0,f,c);_EnvPrintRouter(h,STRING_TABLE.__str91983|0,STRING_TABLE.__str101984|0);_EnvPrintRouter(h,STRING_TABLE.__str91983|0,HEAP32[(HEAP32[(a|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str91983|0,STRING_TABLE.__str111985|0);_PrintDataObject(h,STRING_TABLE.__str91983|0,a+32|0);_CloseStringDestination(h,STRING_TABLE.__str91983|0)}
function _EnvGetDefglobalValue(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;e=a=_EnvFindDefglobal(d,e);a=0==(a|0)?3:4;break;case 3:b=0;a=5;break;case 4:_QGetDefglobalValue(d,e,g);b=1;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _EnvSetDefglobalValue(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;a=f;e=c;g=d;a=_EnvAddSymbol(d,a);g=a=_QFindDefglobal(g,a);a=0==(a|0)?3:4;break;case 3:b=0;a=5;break;case 4:_QSetDefglobalValue(d,g,e,0);b=1;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _UpdateDefglobalScope(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;a=h;e=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(e|0)?4:13;break;case 4:b=_GetModuleItem(a,e,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+4|0)>>2]+4|0)>>2]);b=HEAP32[(b+4|0)>>2];c=5;break;case 5:c=0!=(b|0)?6:11;break;case 6:c=0!=(_FindImportedConstruct(a,STRING_TABLE.__str21976|0,e,HEAP32[(HEAP32[(b|0)>>2]+
16|0)>>2],d,1,0)|0)?7:8;break;case 7:c=b+24|0;HEAP32[c>>2]=HEAP32[c>>2]&-3|2;c=9;break;case 8:c=b+24|0;HEAP32[c>>2]&=-3;c=9;break;case 9:c=10;break;case 10:b=_EnvGetNextDefglobal(a,b);c=5;break;case 11:c=12;break;case 12:e=_EnvGetNextDefmodule(a,e);c=3;break;case 13:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_UpdateDefglobalScope.X=1;
function _GetNextDefglobalInScope(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:6;break;case 3:c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+128|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+36|0)>>2]|0)?4:5;break;case 4:_UpdateDefglobalScope(b);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+36|0)>>2];c=5;break;case 5:c=_EnvGetNextDefmodule(b,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2]=c;c=_GetModuleItem(b,
HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+4|0)>>2]);d=HEAP32[(c+4|0)>>2];c=7;break;case 6:d=_EnvGetNextDefglobal(b,d);c=7;break;case 7:c=8;break;case 8:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2]|0)?9:16;break;case 9:c=10;break;case 10:c=0!=(d|0)?11:15;break;case 11:c=0!=(HEAPU32[(d+24|0)>>2]>>>1&1|0)?12:13;break;case 12:a=d;c=17;break;case 13:c=14;break;case 14:d=_EnvGetNextDefglobal(b,d);c=10;break;case 15:c=_EnvGetNextDefmodule(b,
HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2]=c;c=_GetModuleItem(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+132|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+4|0)>>2]+4|0)>>2]);d=HEAP32[(c+4|0)>>2];c=8;break;case 16:a=0;c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}_GetNextDefglobalInScope.X=1;
function _AllocateModule1994(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule1994.X=1;
function _ReturnModule1995(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+4|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule1995.X=1;
function _DestroyDefglobalAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_DestroyDefglobal(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _DestroyDefglobal(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=4==(HEAPU16[((b+32|0)+4|0)>>1]&65535|0)?5:6;break;case 5:_ReturnMultifield(a,HEAP32[((b+32|0)+8|0)>>2]);c=6;break;case 6:_DeinstallConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:return;default:assert(0,"bad label: "+c)}}_DestroyDefglobal.X=1;
function _ParseDefglobal(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+4,j,k;d=h;e=f;HEAP32[g>>2]=0;j=1;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str1996|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str11997|
0);b=1;a=16;break;case 5:_GetToken(d,e,i);a=2==(HEAPU16[(i|0)>>1]&65535|0)?6:11;break;case 6:j=0;a=0!=(_FindModuleSeparator(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2])|0)?7:8;break;case 7:_SyntaxErrorMessage(d,STRING_TABLE.__str11997|0);b=1;a=16;break;case 8:k=_EnvFindDefmodule(d,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2]);a=0==(k|0)?9:10;break;case 9:_CantFindItemErrorMessage(d,STRING_TABLE.__str21998|0,HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2]);b=1;a=16;break;case 10:_SavePPBuffer(d,STRING_TABLE.__str31999|0);_EnvSetCurrentModule(d,
k);a=12;break;case 11:_PPBackup(d);var l=a=d,m=_EnvGetCurrentModule(d),l=_EnvGetDefmoduleName(l,m);_SavePPBuffer(a,l);_SavePPBuffer(d,STRING_TABLE.__str31999|0);_SavePPBuffer(d,HEAP32[(i+8|0)>>2]);a=12;break;case 12:a=13;break;case 13:a=0!=(_GetVariableDefinition(d,e,g,j,i)|0)?14:15;break;case 14:j=0;_FlushPPBuffer(d);_SavePPBuffer(d,STRING_TABLE.__str1996|0);l=a=d;m=_EnvGetCurrentModule(d);l=_EnvGetDefmoduleName(l,m);_SavePPBuffer(a,l);_SavePPBuffer(d,STRING_TABLE.__str31999|0);a=13;break;case 15:b=
HEAP32[g>>2];a=16;break;case 16:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefglobal.X=1;
function _GetVariableDefinition(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o=d;i=h;j=f;k=c;e=a;l=b;e=0!=(e|0)?4:3;break;case 3:_GetToken(i,j,l);e=4;break;case 4:e=171==(HEAPU16[(l|0)>>1]&65535|0)?5:6;break;case 5:g=0;e=34;break;case 6:e=35==(HEAPU16[(l|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(i,STRING_TABLE.__str11997|0);HEAP32[k>>2]=1;g=0;e=34;break;
case 8:e=33!=(HEAPU16[(l|0)>>1]&65535|0)?9:10;break;case 9:_SyntaxErrorMessage(i,STRING_TABLE.__str11997|0);HEAP32[k>>2]=1;g=0;e=34;break;case 10:e=11;break;case 11:m=HEAP32[(l+4|0)>>2];_SavePPBuffer(i,STRING_TABLE.__str31999|0);e=1==(_EnvGetWatchItem(i,STRING_TABLE.__str82004|0)|0)?12:17;break;case 12:e=0!=(_GetPrintWhileLoading(i)|0)?13:17;break;case 13:e=0!=(_QFindDefglobal(i,m)|0)?14:15;break;case 14:_PrintWarningID(i,STRING_TABLE.__str92005|0,1,1);_EnvPrintRouter(i,STRING_TABLE.__str102006|0,
STRING_TABLE.__str112007|0);e=16;break;case 15:_EnvPrintRouter(i,STRING_TABLE.__str102006|0,STRING_TABLE.__str122008|0);e=16;break;case 16:_EnvPrintRouter(i,STRING_TABLE.__str102006|0,HEAP32[(m+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str102006|0,STRING_TABLE.__str132009|0);e=20;break;case 17:e=0!=(_GetPrintWhileLoading(i)|0)?18:19;break;case 18:_EnvPrintRouter(i,STRING_TABLE.__str102006|0,STRING_TABLE.__str142010|0);e=19;break;case 19:e=20;break;case 20:e=i;var p=_EnvGetCurrentModule(i);e=0!=
(_FindImportExportConflict(e,STRING_TABLE.__str11997|0,p,HEAP32[(m+16|0)>>2])|0)?21:22;break;case 21:_ImportExportConflictMessage(i,STRING_TABLE.__str11997|0,HEAP32[(m+16|0)>>2],0,0);HEAP32[k>>2]=1;g=0;e=34;break;case 22:_GetToken(i,j,l);e=0!=(_strcmp(HEAP32[(l+8|0)>>2],STRING_TABLE.__str152011|0)|0)?23:24;break;case 23:_SyntaxErrorMessage(i,STRING_TABLE.__str11997|0);HEAP32[k>>2]=1;g=0;e=34;break;case 24:_SavePPBuffer(i,STRING_TABLE.__str31999|0);n=_ParseAtomOrExpression(i,j,0);e=0==(n|0)?25:26;
break;case 25:HEAP32[k>>2]=1;g=0;e=34;break;case 26:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?30:27;break;case 27:_SetEvaluationError(i,0);e=0!=(_EvaluateExpression(i,n,o)|0)?28:29;break;case 28:_ReturnExpression(i,n);HEAP32[k>>2]=1;g=0;e=34;break;case 29:e=31;break;case 30:_ReturnExpression(i,n);e=31;break;case 31:_SavePPBuffer(i,STRING_TABLE.__str162012|0);e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?33:32;break;case 32:_AddDefglobal(i,m,o,n);e=33;break;
case 33:g=1;e=34;break;case 34:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_GetVariableDefinition.X=1;
function _ReplaceGlobalVariable(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;g=_FindImportedConstruct(d,STRING_TABLE.__str11997|0,0,HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2],i,1,0);a=0==(g|0)?3:4;break;case 3:_GlobalReferenceErrorMessage(d,HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2]);b=0;a=7;break;case 4:a=1<(HEAP32[i>>2]|0)?5:6;break;case 5:_AmbiguousReferenceErrorMessage(d,STRING_TABLE.__str11997|
0,HEAP32[(HEAP32[(e+4|0)>>2]+16|0)>>2]);b=0;a=7;break;case 6:HEAP16[(e|0)>>1]=90;HEAP32[(e+4|0)>>2]=g;b=1;a=7;break;case 7:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ReplaceGlobalVariable.X=1;function _GlobalReferenceErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str42000|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str52001|0,STRING_TABLE.__str62002|0);_EnvPrintRouter(h,STRING_TABLE.__str52001|0,f);_EnvPrintRouter(h,STRING_TABLE.__str52001|0,STRING_TABLE.__str72003|0)}
function _AddDefglobal(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;l=k=0;j=_QFindDefglobal(d,e);b=0==(j|0)?3:7;break;case 3:k=1;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2]|0)?4:5;break;case 4:var m=_genalloc(d,60);b=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+240|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+240|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=6;break;case 6:j=m;b=8;break;case 7:_DeinstallConstructHeader(d,j|0);l=HEAP32[(j+24|0)>>2]&1;b=8;break;case 8:b=0==(k|0)?9:12;break;case 9:_ValueDeinstall(d,j+32|0);b=4==(HEAPU16[((j+32|0)+4|0)>>1]&65535|0)?10:11;break;case 10:_ReturnMultifield(d,HEAP32[((j+32|0)+8|0)>>2]);b=11;break;case 11:_RemoveHashedExpression(d,HEAP32[(j+56|0)>>2]);b=12;break;case 12:HEAP16[((j+
32|0)+4|0)>>1]=HEAP16[(g+4|0)>>1];b=4!=(HEAPU16[(g+4|0)>>1]&65535|0)?13:14;break;case 13:HEAP32[((j+32|0)+8|0)>>2]=HEAP32[(g+8|0)>>2];b=15;break;case 14:_DuplicateMultifield(d,j+32|0,g);b=15;break;case 15:_ValueInstall(d,j+32|0);b=_AddHashedExpression(d,i);HEAP32[(j+56|0)>>2]=b;_ReturnExpression(d,i);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+4|0)>>2]+8|0)>>2]=1;b=0!=(l|0)?16:17;break;case 16:var n=1;b=18;break;case 17:n=HEAP32[_WatchGlobals>>2];b=18;break;case 18:b=j+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|n&
1;HEAP32[(j|0)>>2]=e;HEAP32[((j|0)+20|0)>>2]=0;b=e+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;_SavePPBuffer(d,STRING_TABLE.__str132009|0);b=1==(_EnvGetConserveMemory(d)|0)?19:20;break;case 19:HEAP32[((j|0)+4|0)>>2]=0;b=21;break;case 20:b=_CopyPPBuffer(d);HEAP32[((j|0)+4|0)>>2]=b;b=21;break;case 21:b=j+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;b=0==(k|0)?22:23;break;case 22:b=24;break;case 23:HEAP32[(j+28|0)>>2]=0;b=d;var o=_FindModuleItem(d,STRING_TABLE.__str11997|0)+4|0;b=_GetModuleItem(b,0,HEAP32[o>>2]);HEAP32[((j|
0)+8|0)>>2]=b;_AddConstructToModule(j|0);b=24;break;case 24:return;default:assert(0,"bad label: "+b)}}_AddDefglobal.X=1;
function _AddImplicitMethods(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;e=_FindFunction(b,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);a=0==(e|0)?3:4;break;case 3:a=5;break;case 4:HEAP16[(g|0)>>1]=30;HEAP32[(g+4|0)>>2]=e;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+8|0)>>2]=0;_FormMethodsFromRestrictions(b,d,HEAP32[(e+20|0)>>2],g);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+
a)}}
function _FormMethodsFromRestrictions(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p=b,q,r,s,t=b+4,u,v,w;e=h;g=f;i=c;j=a;d=0==(i|0)?3:10;break;case 3:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?4:5;break;case 4:var x=_genalloc(e,16);d=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|
0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];x=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=6;break;case 6:l=x;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?7:8;break;case 7:var y=_genalloc(e,12);d=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>
2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];y=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=9;break;case 9:o=y;_PackRestrictionTypes(e,o,0);HEAP32[(o+4|0)>>2]=0;HEAP32[(l+8|0)>>2]=o;HEAP32[(l+12|0)>>2]=0;d=e;var A=g,z=l,B=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2],C=_PackExpression(e,j);d=_AddMethod(d,A,0,0,0,z,1,0,B,C,0,0);d=d+24|0;HEAP32[d>>
2]=HEAP32[d>>2]&-2|1;_DeleteTempRestricts(e,l);d=64;break;case 10:HEAP8[p+1|0]=0;d=42==(HEAP8[i|0]<<24>>24|0)?11:12;break;case 11:r=0;d=13;break;case 12:HEAP8[p|0]=HEAP8[i|0];r=_atoi(p|0);d=13;break;case 13:d=42==(HEAP8[i+1|0]<<24>>24|0)?14:15;break;case 14:s=-1;d=16;break;case 15:HEAP8[p|0]=HEAP8[i+1|0];s=_atoi(p|0);d=16;break;case 16:d=0!=(HEAP8[i+2|0]<<24>>24|0)?17:18;break;case 17:q=HEAP8[i+2|0];w=3;d=19;break;case 18:q=117;w=2;d=19;break;case 19:v=k=m=0;d=20;break;case 20:d=(v|0)<(r|0)?21:32;
break;case 21:d=0!=(HEAP8[i+w|0]<<24>>24|0)?22:23;break;case 22:var D=w;w=D+1|0;D=HEAP8[i+D|0]<<24>>24;d=24;break;case 23:D=q<<24>>24;d=24;break;case 24:HEAP8[p|0]=D&255;o=_ParseRestrictionType(e,HEAP8[p|0]<<24>>24);d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?25:26;break;case 25:var E=_genalloc(e,16);d=27;break;case 26:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];E=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=27;break;case 27:l=E;HEAP32[(l+8|0)>>2]=o;HEAP32[(l+12|0)>>2]=0;d=0==(k|0)?28:29;break;case 28:k=l;d=30;break;case 29:HEAP32[(m+12|0)>>2]=l;d=30;break;case 30:m=l;d=31;break;case 31:v=v+1|0;d=20;break;case 32:n=m;u=1;v=0;d=33;break;case 33:d=0!=(HEAP8[i+w|0]<<24>>24|0)?34:47;break;case 34:d=0==(HEAP8[i+(w+1|0)|0]<<24>>24|0)?35:
37;break;case 35:d=((r+v|0)+1|0)==(s|0)?36:37;break;case 36:q=HEAP8[i+w|0];d=47;break;case 37:o=_ParseRestrictionType(e,HEAP8[i+w|0]<<24>>24);d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?38:39;break;case 38:var F=_genalloc(e,16);d=40;break;case 39:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];F=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=40;break;case 40:l=F;HEAP32[(l+8|0)>>2]=o;HEAP32[(l+12|0)>>2]=0;d=0==(k|0)?41:42;break;case 41:k=l;d=43;break;case 42:HEAP32[(m+12|0)>>2]=l;d=43;break;case 43:m=l;v=v+1|0;w=w+1|0;d=0!=(HEAP8[i+w|0]<<24>>24|0)?45:44;break;case 44:d=(r+v|0)==(s|0)?45:46;break;case 45:_FindMethodByRestrictions(g,k,r+v|0,0,t);d=e;var A=g,z=HEAP32[t>>2],B=k,C=r+v|0,G=_PackExpression(e,j);d=_AddMethod(d,A,0,z,0,B,C,0,0,G,
0,1);d=d+24|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=46;break;case 46:d=33;break;case 47:d=(r+v|0)!=(s|0)?48:59;break;case 48:d=0==(v|0)?49:50;break;case 49:u=0;d=50;break;case 50:o=_ParseRestrictionType(e,q<<24>>24);d=-1!=(s|0)?51:52;break;case 51:d=e;A=_FindFunction(e,STRING_TABLE.__str2017|0);d=_GenConstant(d,30,A);HEAP32[(o+4|0)>>2]=d;d=e;A=_FindFunction(e,STRING_TABLE.__str12018|0);d=_GenConstant(d,30,A);HEAP32[(HEAP32[(o+4|0)>>2]+8|0)>>2]=d;d=_GenProcWildcardReference(e,(r+v|0)+1|0);HEAP32[(HEAP32[(HEAP32[(o+
4|0)>>2]+8|0)>>2]+8|0)>>2]=d;d=e;A=_EnvAddLong(e,(s-r|0)-v|0);d=_GenConstant(d,1,A);HEAP32[(HEAP32[(HEAP32[(o+4|0)>>2]+8|0)>>2]+12|0)>>2]=d;d=52;break;case 52:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?53:54;break;case 53:var H=_genalloc(e,16);d=55;break;case 54:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+
64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];H=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=55;break;case 55:l=H;HEAP32[(l+8|0)>>2]=o;HEAP32[(l+12|0)>>2]=0;d=0==(k|0)?56:57;break;case 56:k=l;d=58;break;case 57:HEAP32[(m+12|0)>>2]=l;d=58;break;case 58:_FindMethodByRestrictions(g,k,(r+v|0)+1|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2],t);d=e;var A=g,z=HEAP32[t>>2],B=k,C=(r+v|0)+1|0,G=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2],
J=_PackExpression(e,j);d=_AddMethod(d,A,0,z,0,B,C,0,G,J,0,0);d=d+24|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=59;break;case 59:d=0!=(u|0)?60:63;break;case 60:d=0!=(n|0)?61:62;break;case 61:m=HEAP32[(n+12|0)>>2];HEAP32[(n+12|0)>>2]=0;_DeleteTempRestricts(e,m);d=62;break;case 62:_FindMethodByRestrictions(g,k,r,0,t);d=e;A=g;z=HEAP32[t>>2];B=k;C=r;G=_PackExpression(e,j);d=_AddMethod(d,A,0,z,0,B,C,0,0,G,0,1);d=d+24|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=63;break;case 63:_DeleteTempRestricts(e,k);d=64;break;case 64:STACKTOP=
b;return;default:assert(0,"bad label: "+d)}}_FormMethodsFromRestrictions.X=1;function _EnvGetIncrementalReset(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+72|0)>>2]+44|0)>>2]}
function _ParseRestrictionType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=0;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var i=_genalloc(a,12);c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>
2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 5:d=i;HEAP32[(d+4|0)>>2]=0;e=_ArgumentTypeToConstraintRecord(a,b);c=0==(HEAP32[e>>2]&1|0)?6:48;break;case 6:c=0!=(HEAPU32[e>>2]>>>1&1|0)?7:9;break;case 7:c=0!=(HEAPU32[e>>2]>>>2&1|0)?8:9;break;case 8:g=_GenTypeExpression(a,g,12,-1,STRING_TABLE.__str22019|0);c=15;break;case 9:c=0!=(HEAPU32[e>>2]>>>1&1|0)?10:11;break;case 10:g=_GenTypeExpression(a,g,2,2,0);c=14;break;case 11:c=0!=(HEAPU32[e>>2]>>>2&1|0)?12:13;break;
case 12:g=_GenTypeExpression(a,g,3,3,0);c=13;break;case 13:c=14;break;case 14:c=15;break;case 15:c=0!=(HEAPU32[e>>2]>>>3&1|0)?16:18;break;case 16:c=0!=(HEAPU32[e>>2]>>>4&1|0)?17:18;break;case 17:g=_GenTypeExpression(a,g,11,-1,STRING_TABLE.__str32020|0);c=24;break;case 18:c=0!=(HEAPU32[e>>2]>>>4&1|0)?19:20;break;case 19:g=_GenTypeExpression(a,g,1,1,0);c=23;break;case 20:c=0!=(HEAPU32[e>>2]>>>3&1|0)?21:22;break;case 21:g=_GenTypeExpression(a,g,0,0,0);c=22;break;case 22:c=23;break;case 23:c=24;break;
case 24:c=0!=(HEAPU32[e>>2]>>>5&1|0)?25:27;break;case 25:c=0!=(HEAPU32[e>>2]>>>6&1|0)?26:27;break;case 26:g=_GenTypeExpression(a,g,14,-1,STRING_TABLE.__str42021|0);c=33;break;case 27:c=0!=(HEAPU32[e>>2]>>>5&1|0)?28:29;break;case 28:g=_GenTypeExpression(a,g,8,8,0);c=32;break;case 29:c=0!=(HEAPU32[e>>2]>>>6&1|0)?30:31;break;case 30:g=_GenTypeExpression(a,g,7,7,0);c=31;break;case 31:c=32;break;case 32:c=33;break;case 33:c=0!=(HEAPU32[e>>2]>>>7&1|0)?34:37;break;case 34:c=0!=(HEAPU32[e>>2]>>>6&1|0)?35:
37;break;case 35:c=0!=(HEAPU32[e>>2]>>>8&1|0)?36:37;break;case 36:g=_GenTypeExpression(a,g,13,-1,STRING_TABLE.__str52022|0);c=45;break;case 37:c=0!=(HEAPU32[e>>2]>>>7&1|0)?38:39;break;case 38:g=_GenTypeExpression(a,g,5,5,0);c=39;break;case 39:c=0!=(HEAPU32[e>>2]>>>6&1|0)?40:42;break;case 40:c=0==(HEAPU32[e>>2]>>>5&1|0)?41:42;break;case 41:g=_GenTypeExpression(a,g,7,7,0);c=42;break;case 42:c=0!=(HEAPU32[e>>2]>>>8&1|0)?43:44;break;case 43:g=_GenTypeExpression(a,g,6,6,0);c=44;break;case 44:c=45;break;
case 45:c=0!=(HEAPU32[e>>2]>>>17&1|0)?46:47;break;case 46:g=_GenTypeExpression(a,g,4,4,0);c=47;break;case 47:c=48;break;case 48:return _RemoveConstraint(a,e),_PackRestrictionTypes(a,d,g),d;default:assert(0,"bad label: "+c)}}_ParseRestrictionType.X=1;
function _GenTypeExpression(h,f,c,a,b){for(c=2;;)switch(c){case 2:var d,e,g,i,j;d=h;e=f;g=a;i=b;c=-1!=(g|0)?3:4;break;case 3:j=_GenConstant(d,0,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+(g<<2)|0)>>2]);c=5;break;case 4:j=d;c=_LookupDefclassByMdlOrScope(d,i);j=_GenConstant(j,0,c);c=5;break;case 5:return HEAP32[(j+12|0)>>2]=e,j;default:assert(0,"bad label: "+c)}}
function _IncrementalReset(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0!=(_EnvGetIncrementalReset(a)|0)?4:3;break;case 3:c=15;break;case 4:_MarkNetworkForIncrementalReset(a,b,1);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+40|0)>>2]=1;d=b;c=5;break;case 5:c=0!=(d|0)?6:8;break;case 6:_CheckForPrimableJoins(a,d);c=7;break;case 7:d=HEAP32[(d+52|0)>>2];c=5;break;case 8:e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+76|0)>>2]|0)>>2];c=9;break;case 9:c=0!=(e|0)?10:14;break;case 10:c=0!=(HEAP32[(e+
76|0)>>2]|0)?11:12;break;case 11:FUNCTION_TABLE[HEAP32[(e+76|0)>>2]](a);c=12;break;case 12:c=13;break;case 13:e=HEAP32[(e+92|0)>>2];c=9;break;case 14:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+40|0)>>2]=0;_MarkNetworkForIncrementalReset(a,b,0);c=15;break;case 15:return;default:assert(0,"bad label: "+c)}}_IncrementalReset.X=1;
function _MarkNetworkForIncrementalReset(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=3;break;case 3:a=0!=(d|0)?4:19;break;case 4:g=HEAP32[(d+48|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:17;break;case 6:a=g;HEAP32[a>>2]&=-33;a=0!=(HEAPU32[g>>2]>>>4&1|0)?7:12;break;case 7:a=0==(HEAPU32[g>>2]>>>2&1|0)?8:12;break;case 8:a=g;HEAP32[a>>2]=HEAP32[a>>2]&-17|(e&1)<<4;a=0!=(HEAPU32[g>>2]>>>2&1|0)?9:10;break;case 9:var i=0;a=11;break;case 10:i=HEAP32[(g+16|0)>>2];a=11;break;case 11:a=i;_MarkPatternForIncrementalReset(b,
HEAPU32[g>>2]>>>6&7,a,e);a=12;break;case 12:a=13;break;case 13:a=0!=(HEAPU32[g>>2]>>>2&1|0)?14:15;break;case 14:var j=HEAP32[(g+16|0)>>2];a=16;break;case 15:j=HEAP32[(g+24|0)>>2];a=16;break;case 16:g=j;a=5;break;case 17:a=18;break;case 18:d=HEAP32[(d+52|0)>>2];a=3;break;case 19:return;default:assert(0,"bad label: "+a)}}_MarkNetworkForIncrementalReset.X=1;
function _CheckForPrimableJoins(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=HEAP32[(b+48|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:29;break;case 4:c=0!=(HEAPU32[d>>2]>>>4&1|0)?5:17;break;case 5:c=0!=(HEAPU32[d>>2]>>>5&1|0)?17:6;break;case 6:c=1==(HEAP32[d>>2]&1|0)?7:13;break;case 7:c=0!=(HEAPU32[d>>2]>>>2&1|0)?8:9;break;case 8:var g=0;c=10;break;case 9:g=HEAP32[(d+16|0)>>2];c=10;break;case 10:c=0==(HEAPU32[(g+12|0)>>2]>>>3&1|0)?11:12;break;case 11:_PrimeJoin(a,d);c=d;HEAP32[c>>2]=HEAP32[c>>
2]&-33|32;c=12;break;case 12:c=16;break;case 13:c=0==(HEAPU32[HEAP32[(d+24|0)>>2]>>2]>>>4&1|0)?14:15;break;case 14:_PrimeJoin(a,d);c=d;HEAP32[c>>2]=HEAP32[c>>2]&-33|32;c=15;break;case 15:c=16;break;case 16:c=24;break;case 17:c=(HEAP32[(d+36|0)>>2]|0)==(b|0)?18:23;break;case 18:e=HEAP32[(d+8|0)>>2];c=19;break;case 19:c=0!=(e|0)?20:22;break;case 20:_AddActivation(a,b,e);c=21;break;case 21:e=HEAP32[(e+4|0)>>2];c=19;break;case 22:c=23;break;case 23:c=24;break;case 24:c=25;break;case 25:c=0!=(HEAPU32[d>>
2]>>>2&1|0)?26:27;break;case 26:var i=HEAP32[(d+16|0)>>2];c=28;break;case 27:i=HEAP32[(d+24|0)>>2];c=28;break;case 28:d=i;c=3;break;case 29:return;default:assert(0,"bad label: "+c)}}_CheckForPrimableJoins.X=1;
function _EnvSetIncrementalReset(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+44|0)>>2];c=0!=(_EnvGetNextDefrule(b,0)|0)?3:4;break;case 3:a=-1;c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+44|0)>>2]=d;a=e;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _SetIncrementalResetCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_EnvGetIncrementalReset(b);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str2025|0,0,1)|0)?3:4;break;case 3:a=d;c=11;break;case 4:c=0!=(_EnvGetNextDefrule(b,0)|0)?5:6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str12026|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str22027|0,STRING_TABLE.__str32028|
0);_SetEvaluationError(b,1);a=d;c=11;break;case 6:_EnvRtnUnknown(b,1,e);c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?7:9;break;case 7:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?8:9;break;case 8:_EnvSetIncrementalReset(b,0);c=10;break;case 9:_EnvSetIncrementalReset(b,1);c=10;break;case 10:a=d;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetIncrementalResetCommand.X=1;
function _GetIncrementalResetCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=_EnvGetIncrementalReset(f);f=-1==(_EnvArgCountCheck(f,STRING_TABLE.__str42029|0,0,0)|0)?3:4;break;case 3:c=a;f=5;break;case 4:c=a;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _PrimeJoin(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=1==(HEAP32[b>>2]&1|0)?3:8;break;case 3:d=HEAP32[(HEAP32[(b+16|0)>>2]|0)>>2];c=4;break;case 4:c=0!=(d|0)?5:7;break;case 5:_NetworkAssert(a,d,b,1);c=6;break;case 6:d=HEAP32[(d+4|0)>>2];c=4;break;case 7:c=16;break;case 8:c=0!=(HEAP32[(b+8|0)>>2]|0)?9:10;break;case 9:c=16;break;case 10:d=HEAP32[(HEAP32[(b+24|0)>>2]+8|0)>>2];c=11;break;case 11:c=0!=(d|0)?12:16;break;case 12:c=0!=(HEAPU32[d>>2]>>>5&1|0)?14:13;break;case 13:_NetworkAssert(a,
d,b,0);c=14;break;case 14:c=15;break;case 15:d=HEAP32[(d+4|0)>>2];c=11;break;case 16:return;default:assert(0,"bad label: "+c)}}_PrimeJoin.X=1;function _MarkPatternForIncrementalReset(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;b=f;e=c;g=a;i=_GetPatternParser(d,b);b=0!=(i|0)?3:6;break;case 3:b=0!=(HEAP32[(i+72|0)>>2]|0)?4:5;break;case 4:FUNCTION_TABLE[HEAP32[(i+72|0)>>2]](d,e,g);b=5;break;case 5:b=6;break;case 6:return;default:assert(0,"bad label: "+b)}}
function _ParseSuperclasses(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;j=i=0;a=170!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(d,STRING_TABLE.__str2030|0);b=0;a=42;break;case 4:_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?5:6;break;case 5:a=7;break;case 6:a=(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]|0)!=
(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+116|0)>>2]|0)?7:8;break;case 7:_SyntaxErrorMessage(d,STRING_TABLE.__str2030|0);b=0;a=42;break;case 8:_SavePPBuffer(d,STRING_TABLE.__str12031|0);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=9;break;case 9:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?10:35;break;case 10:a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?11:12;break;case 11:_SyntaxErrorMessage(d,STRING_TABLE.__str22032|
0);a=41;break;case 12:a=0!=(_FindModuleSeparator(HEAP32[(g+16|0)>>2])|0)?13:14;break;case 13:_IllegalModuleSpecifierMessage(d);a=41;break;case 14:a=(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]|0)==(g|0)?15:16;break;case 15:_PrintErrorID(d,STRING_TABLE.__str32033|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str52035|0);a=41;break;case 16:k=i;a=17;break;case 17:a=0!=(k|0)?18:22;break;case 18:a=(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]|0)==
(HEAP32[(HEAP32[(k|0)>>2]|0)>>2]|0)?19:20;break;case 19:_PrintErrorID(d,STRING_TABLE.__str32033|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str62036|0);a=41;break;case 20:a=21;break;case 21:k=HEAP32[(k+4|0)>>2];a=17;break;case 22:l=_LookupDefclassInScope(d,HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2]);a=0==(l|0)?23:24;break;case 23:_PrintErrorID(d,STRING_TABLE.__str32033|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str72037|
0);a=41;break;case 24:a=(l|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]|0)?27:25;break;case 25:a=(l|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]|0)?27:26;break;case 26:a=(l|0)==(HEAP32[(HEAP32[((HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]+36|0)+4|0)>>2]|0)>>2]|0)?27:28;break;case 27:_PrintErrorID(d,STRING_TABLE.__str32033|0,6,0);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str82038|0);a=d;var m=_GetConstructNameString(l);
_EnvPrintRouter(a,STRING_TABLE.__str42034|0,m);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str92039|0);a=41;break;case 28:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?29:30;break;case 29:var n=_genalloc(d,8);a=31;break;case 30:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=31;break;case 31:k=n;HEAP32[(k|0)>>2]=l;a=0==(i|0)?32:33;break;case 32:i=k;a=34;break;case 33:HEAP32[(j+4|0)>>2]=k;a=34;break;case 34:HEAP32[(k+4|0)>>2]=0;j=k;_SavePPBuffer(d,STRING_TABLE.__str12031|0);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=9;break;case 35:a=0==(i|0)?36:37;break;case 36:_PrintErrorID(d,STRING_TABLE.__str32033|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str102040|
0);b=0;a=42;break;case 37:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str112041|0);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?38:39;break;case 38:var o=_genalloc(d,8);a=40;break;case 39:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=40;break;case 40:b=o;_PackClassLinks(d,b,i);a=42;break;case 41:_DeleteClassLinks(d,i);b=0;a=42;break;case 42:return b;default:assert(0,"bad label: "+a)}}_ParseSuperclasses.X=1;
function _PackClassLinks(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;g=0;i=e;a=3;break;case 3:a=0!=(i|0)?4:6;break;case 4:g=g+1|0;a=5;break;case 5:i=HEAP32[(i+4|0)>>2];a=3;break;case 6:a=0<g>>>0?7:8;break;case 7:a=_gm2(b,g<<2|0);HEAP32[(d+4|0)>>2]=a;a=9;break;case 8:HEAP32[(d+4|0)>>2]=0;a=9;break;case 9:g=0;i=e;a=10;break;case 10:a=0!=(i|0)?11:13;break;case 11:HEAP32[(HEAP32[(d+4|0)>>2]+(g<<2)|0)>>2]=HEAP32[(i|0)>>2];a=12;break;case 12:i=HEAP32[(i+4|0)>>2];g=g+1|0;a=10;break;
case 13:_DeleteClassLinks(b,e);HEAP16[(d|0)>>1]=g&65535;return;default:assert(0,"bad label: "+a)}}_PackClassLinks.X=1;
function _FindPrecedenceList(h,f,$supers){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o,p,q;d=h;e=f;g=$supers;i=0;i=_InitializePartialOrderTable(d,i,g);a=0!=(e|0)?3:7;break;case 3:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?4:5;break;case 4:var r=_genalloc(d,16);a=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|
0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=6;break;case 6:k=r;HEAP32[(k|0)>>2]=e;HEAP32[(k+4|0)>>2]=0;HEAP32[(k+8|0)>>2]=0;HEAP32[(k+12|0)>>2]=i;i=k;k=HEAP32[(i+12|0)>>2];_RecordPartialOrders(d,i,e,g,0);a=8;break;case 7:k=i;a=8;break;case 8:a=9;break;case 9:a=0!=(k|0)?10:16;break;case 10:_RecordPartialOrders(d,i,HEAP32[(k|0)>>2],HEAP32[(k|0)>>2]+36|0,0);q=0;a=11;break;case 11:a=
q>>>0<(HEAPU16[(HEAP32[(k|0)>>2]+36|0)>>1]&65535)>>>0?12:14;break;case 12:_RecordPartialOrders(d,i,HEAP32[(HEAP32[((HEAP32[(k|0)>>2]+36|0)+4|0)>>2]+(q<<2)|0)>>2],HEAP32[(k|0)>>2]+36|0,q+1|0);a=13;break;case 13:q=q+1|0;a=11;break;case 14:a=15;break;case 15:k=HEAP32[(k+12|0)>>2];a=9;break;case 16:q=0;a=17;break;case 17:a=q>>>0<(HEAPU16[(g|0)>>1]&65535)>>>0?18:20;break;case 18:_RecordPartialOrders(d,i,HEAP32[(HEAP32[(g+4|0)>>2]+(q<<2)|0)>>2],g,q+1|0);a=19;break;case 19:q=q+1|0;a=17;break;case 20:l=j=
0;k=i;n=o=0;a=21;break;case 21:a=(k|0)!=(j|0)?22:40;break;case 22:a=0==(k|0)?23:24;break;case 23:l=0;k=i;j=HEAP32[(j+12|0)>>2];a=24;break;case 24:a=0==(HEAP32[(k+4|0)>>2]|0)?25:38;break;case 25:a=26;break;case 26:a=0!=(HEAP32[(k+8|0)>>2]|0)?27:28;break;case 27:a=HEAP32[(k+8|0)>>2];HEAP32[(k+8|0)>>2]=HEAP32[(a+4|0)>>2];var s=HEAP32[(a|0)>>2]+4|0;HEAP32[s>>2]=HEAP32[s>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=26;break;case 28:m=k;a=0==(l|0)?29:30;break;case 29:i=HEAP32[(k+12|0)>>2];a=31;break;case 30:HEAP32[(l+12|0)>>2]=HEAP32[(k+12|0)>>2];a=31;break;case 31:k=HEAP32[(k+12|0)>>2];j=l;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?32:33;break;case 32:var t=
_genalloc(d,8);a=34;break;case 33:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=34;break;case 34:p=t;HEAP32[(p|0)>>2]=HEAP32[(m|0)>>2];HEAP32[(p+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>
2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=0==(n|0)?35:36;break;case 35:n=p;a=37;break;case 36:HEAP32[(o+4|0)>>2]=p;a=37;break;case 37:o=p;a=39;break;case 38:l=k;k=HEAP32[(k+12|0)>>2];a=39;break;case 39:a=21;break;case 40:a=0!=(i|0)?41:48;break;case 41:_PrintErrorID(d,
STRING_TABLE.__str32033|0,5,0);_PrintClassLinks(d,STRING_TABLE.__str42034|0,STRING_TABLE.__str122042|0,n);_PrintPartialOrderLoop(d,i);a=42;break;case 42:a=0!=(i|0)?43:47;break;case 43:a=44;break;case 44:a=0!=(HEAP32[(i+8|0)>>2]|0)?45:46;break;case 45:a=HEAP32[(i+8|0)>>2];HEAP32[(i+8|0)>>2]=HEAP32[(a+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>
2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=44;break;case 46:m=i;i=HEAP32[(i+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+236|0)>>2]+16|0)>>2];a=42;break;case 47:_DeleteClassLinks(d,n);b=0;a=57;break;case 48:a=0==(e|0)?49:53;break;case 49:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?50:51;break;case 50:var u=_genalloc(d,8);a=52;break;case 51:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];u=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=52;break;case 52:p=u;HEAP32[(p+4|0)>>2]=n;n=p;a=53;break;case 53:HEAP32[(n|0)>>2]=0;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?54:55;break;case 54:var v=_genalloc(d,8);a=56;break;case 55:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];v=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=56;break;case 56:b=v;_PackClassLinks(d,b,n);a=57;break;case 57:return b;default:assert(0,"bad label: "+a)}}_FindPrecedenceList.X=1;
function _FindPartialOrder(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(a|0)?4:7;break;case 4:c=(HEAP32[(a|0)>>2]|0)==(b|0)?5:6;break;case 5:c=7;break;case 6:a=HEAP32[(a+12|0)>>2];c=3;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _InitializePartialOrderTable(h,f,$supers){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=$supers;j=0;a=3;break;case 3:a=j>>>0<(HEAPU16[(e|0)>>1]&65535)>>>0?4:20;break;case 4:i=0;g=d;a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=(HEAP32[(g|0)>>2]|0)==(HEAP32[(HEAP32[(e+4|0)>>2]+(j<<2)|0)>>2]|0)?7:8;break;case 7:a=10;break;case 8:i=g;a=9;break;case 9:g=HEAP32[(g+12|0)>>2];a=5;break;case 10:a=0==(g|0)?11:18;break;case 11:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>
2]+20|0)>>2]+64|0)>>2]|0)?12:13;break;case 12:var k=_genalloc(b,16);a=14;break;case 13:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=14;break;case 14:g=k;HEAP32[(g|0)>>2]=HEAP32[(HEAP32[(e+4|0)>>2]+(j<<2)|0)>>
2];HEAP32[(g+12|0)>>2]=0;HEAP32[(g+8|0)>>2]=0;HEAP32[(g+4|0)>>2]=0;a=0==(i|0)?15:16;break;case 15:d=g;a=17;break;case 16:HEAP32[(i+12|0)>>2]=g;a=17;break;case 17:d=_InitializePartialOrderTable(b,d,HEAP32[(HEAP32[(e+4|0)>>2]+(j<<2)|0)>>2]+36|0);a=18;break;case 18:a=19;break;case 19:j=j+1|0;a=3;break;case 20:return d;default:assert(0,"bad label: "+a)}}_InitializePartialOrderTable.X=1;
function _RecordPartialOrders(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;i=_FindPartialOrder(g,i);d=3;break;case 3:d=k>>>0<(HEAPU16[(j|0)>>1]&65535)>>>0?4:8;break;case 4:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:var l=_genalloc(e,8);d=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=7;break;case 7:d=l;var m=_FindPartialOrder(g,HEAP32[(HEAP32[(j+4|0)>>2]+(k<<2)|0)>>2]);HEAP32[(d|0)>>2]=m;HEAP32[(d+4|0)>>2]=HEAP32[(i+8|0)>>2];HEAP32[(i+8|0)>>2]=d;d=HEAP32[(d|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;k=k+1|0;d=3;break;case 8:return;default:assert(0,"bad label: "+d)}}_RecordPartialOrders.X=1;
function _PrintClassLinks(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0!=(g|0)?3:4;break;case 3:_EnvPrintRouter(d,e,g);b=4;break;case 4:b=5;break;case 5:b=0!=(i|0)?6:7;break;case 6:_EnvPrintRouter(d,e,STRING_TABLE.__str12031|0);_PrintClassName(d,e,HEAP32[(i|0)>>2],0);i=HEAP32[(i+4|0)>>2];b=5;break;case 7:_EnvPrintRouter(d,e,STRING_TABLE.__str132043|0);return;default:assert(0,"bad label: "+b)}}
function _PrintPartialOrderLoop(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;d=b=f;c=3;break;case 3:c=0!=(d|0)?4:6;break;case 4:HEAP32[(d+4|0)>>2]=0;c=5;break;case 5:d=HEAP32[(d+12|0)>>2];c=3;break;case 6:d=b;c=7;break;case 7:c=0!=(d|0)?8:21;break;case 8:c=0==(HEAP32[(d+4|0)>>2]|0)?9:10;break;case 9:g=HEAP32[(d+8|0)>>2];HEAP32[(d+8|0)>>2]=0;c=11;break;case 10:g=HEAP32[(HEAP32[(d+8|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(d+8|0)>>2]+4|0)>>2]=0;c=11;break;case 11:c=12;break;case 12:c=0!=(g|0)?13:
19;break;case 13:e=_FindPartialOrder(b,HEAP32[(HEAP32[(g|0)>>2]|0)>>2]);c=0==(HEAP32[(e+4|0)>>2]|0)?14:18;break;case 14:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?15:16;break;case 15:var i=_genalloc(a,8);c=17;break;case 16:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=17;break;case 17:c=i;HEAP32[(c|0)>>2]=d;HEAP32[(c+4|0)>>2]=HEAP32[(e+8|0)>>2];HEAP32[(e+8|0)>>2]=c;HEAP32[(e+4|0)>>2]=1;c=18;break;case 18:c=g;g=HEAP32[(g+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=12;break;case 19:c=20;break;case 20:d=HEAP32[(d+12|0)>>2];c=7;break;case 21:d=b;c=22;break;case 22:c=0!=(d|0)?23:25;break;case 23:HEAP32[(d+4|0)>>2]=0;c=24;break;case 24:d=HEAP32[(d+12|0)>>2];c=22;break;case 25:d=b;c=26;break;case 26:c=0==(HEAP32[(d+4|0)>>2]|0)?27:28;break;case 27:HEAP32[(d+4|0)>>2]=1;d=HEAP32[(HEAP32[(d+8|0)>>2]|0)>>2];c=26;break;case 28:_EnvPrintRouter(a,STRING_TABLE.__str42034|0,
STRING_TABLE.__str142044|0);c=29;break;case 29:c=1==(HEAP32[(d+4|0)>>2]|0)?30:31;break;case 30:_EnvPrintRouter(a,STRING_TABLE.__str42034|0,STRING_TABLE.__str12031|0);_PrintClassName(a,STRING_TABLE.__str42034|0,HEAP32[(d|0)>>2],0);HEAP32[(d+4|0)>>2]=0;d=HEAP32[(HEAP32[(d+8|0)>>2]|0)>>2];c=29;break;case 31:_EnvPrintRouter(a,STRING_TABLE.__str42034|0,STRING_TABLE.__str12031|0);_PrintClassName(a,STRING_TABLE.__str42034|0,HEAP32[(d|0)>>2],1);return;default:assert(0,"bad label: "+c)}}
_PrintPartialOrderLoop.X=1;
function _SetupInstances(h){var f=STACKTOP;STACKTOP+=152;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+72;assert(!0,"memcpy given 72 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var a=_SetupInstances_instanceInfo>>2,b=f>>2,d=a+18;a<d;a++,b++)HEAP32[b]=HEAP32[a];b=c>>2;for(d=b+20;b<d;b++)HEAP32[b]=0;HEAP8[c+24|0]=2;_AllocateEnvironmentData(h,29,192,898);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]+88|0)>>2]=1;b=HEAP32[(HEAP32[(h+
16|0)>>2]+116|0)>>2]+100|0;assert(!0,"memcpy given 72 bytes to copy. Problem with quantum=1 corrections perhaps?");a=f>>2;b>>=2;for(d=a+18;a<d;a++,b++)HEAP32[b]=HEAP32[a];HEAP32[(c|0)>>2]=HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]+100|0;b=HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]|0;assert(!0,"memcpy given 80 bytes to copy. Problem with quantum=1 corrections perhaps?");a=c>>2;b>>=2;for(d=a+20;a<d;a++,b++)HEAP32[b]=HEAP32[a];_InitializeInstanceTable(h);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>
2]+100|0,7);_EnvDefineFunction2(h,STRING_TABLE.__str12050|0,117,900,STRING_TABLE.__str22051|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str32052|0,117,902,STRING_TABLE.__str42053|0,0);_AddFunctionParser(h,STRING_TABLE.__str32052|0,904);_EnvDefineFunction2(h,STRING_TABLE.__str52054|0,117,906,STRING_TABLE.__str62055|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str72056|0,117,908,STRING_TABLE.__str82057|0,0);_AddFunctionParser(h,STRING_TABLE.__str72056|0,904);_AddFunctionParser(h,STRING_TABLE.__str12050|
0,904);_AddFunctionParser(h,STRING_TABLE.__str52054|0,904);_EnvDefineFunction2(h,STRING_TABLE.__str92058|0,117,910,STRING_TABLE.__str102059|0,STRING_TABLE.__str112060|0);_EnvDefineFunction2(h,STRING_TABLE.__str122061|0,98,912,STRING_TABLE.__str132062|0,STRING_TABLE.__str112060|0);_EnvDefineFunction2(h,STRING_TABLE.__str142063|0,98,914,STRING_TABLE.__str152064|0,STRING_TABLE.__str112060|0);_EnvDefineFunction2(h,STRING_TABLE.__str162065|0,98,916,STRING_TABLE.__str172066|0,STRING_TABLE.__str182067|0);
_EnvDefineFunction2(h,STRING_TABLE.__str192068|0,118,918,STRING_TABLE.__str202069|0,STRING_TABLE.__str212070|0);_EnvDefineFunction2(h,STRING_TABLE.__str222071|0,118,920,STRING_TABLE.__str232072|0,STRING_TABLE.__str112060|0);_EnvDefineFunction2(h,STRING_TABLE.__str242073|0,117,922,STRING_TABLE.__str252074|0,STRING_TABLE.__str262075|0);_EnvDefineFunction2(h,STRING_TABLE.__str272076|0,119,924,STRING_TABLE.__str282077|0,STRING_TABLE.__str292078|0);_EnvDefineFunction2(h,STRING_TABLE.__str302079|0,117,
926,STRING_TABLE.__str312080|0,STRING_TABLE.__str322081|0);_EnvDefineFunction2(h,STRING_TABLE.__str332082|0,98,928,STRING_TABLE.__str342083|0,STRING_TABLE.__str352084|0);_EnvDefineFunction2(h,STRING_TABLE.__str362085|0,98,930,STRING_TABLE.__str372086|0,STRING_TABLE.__str352084|0);_EnvDefineFunction2(h,STRING_TABLE.__str382087|0,117,932,STRING_TABLE.__str392088|0,STRING_TABLE.__str402089|0);_EnvDefineFunction2(h,STRING_TABLE.__str412090|0,98,934,STRING_TABLE.__str422091|0,STRING_TABLE.__str352084|
0);_EnvDefineFunction2(h,STRING_TABLE.__str432092|0,98,936,STRING_TABLE.__str442093|0,STRING_TABLE.__str402089|0);_EnvDefineFunction2(h,STRING_TABLE.__str452094|0,117,796,STRING_TABLE.__str462095|0,STRING_TABLE.__str352084|0);_SetupInstanceModDupCommands(h);_SetupInstanceMultifieldCommands(h);_SetupInstanceFileCommands(h);_AddCleanupFunction(h,STRING_TABLE.__str192068|0,938,0);_EnvAddResetFunction(h,STRING_TABLE.__str192068|0,940,60);STACKTOP=f}_SetupInstances.X=1;
function _CreateInstanceHandler(){return 1}function _EnvGetNextInstance(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+172|0)>>2];c=7;break;case 4:c=1==(HEAPU32[(d+24|0)>>2]>>>1&1|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=HEAP32[(d+68|0)>>2];c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _EnvUnmakeInstance(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;c=f;d=1;e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+84|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+84|0)>>2]=1;b=c;c=0!=(b|0)?3:9;break;case 3:c=0!=(HEAPU32[(b+24|0)>>2]>>>1&1|0)?4:5;break;case 4:d=0;c=8;break;case 5:_DirectMessage(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+116|0)>>2],b,0,0);c=0==(HEAPU32[(b+24|0)>>2]>>>1&1|0)?6:7;break;case 6:d=0;c=7;break;case 7:c=8;break;case 8:c=21;break;case 9:b=
HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+172|0)>>2];c=10;break;case 10:c=0!=(b|0)?11:20;break;case 11:_DirectMessage(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+116|0)>>2],b,0,0);c=0==(HEAPU32[(b+24|0)>>2]>>>1&1|0)?12:13;break;case 12:d=0;c=13;break;case 13:b=HEAP32[(b+68|0)>>2];c=14;break;case 14:c=0!=(b|0)?15:16;break;case 15:var g=HEAPU32[(b+24|0)>>2]>>>1&1;c=17;break;case 16:g=0;c=17;break;case 17:c=0!=(g|0)?18:19;break;case 18:b=HEAP32[(b+68|0)>>2];c=14;break;case 19:c=10;break;case 20:c=
21;break;case 21:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+84|0)>>2]=e;_CleanupInstances(a);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?22:25;break;case 22:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+160|0)>>2]|0)>>2]|0)?25:23;break;case 23:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]|0)?24:25;break;case 24:_PeriodicCleanup(a,1,0);c=25;break;case 25:return d;default:assert(0,"bad label: "+c)}}_EnvUnmakeInstance.X=1;
function _DeallocateInstanceData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i;c=h;_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+80|0)>>2],32764);a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+172|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:22;break;case 4:b=HEAP32[(a+68|0)>>2];i=HEAP32[(a+16|0)>>2];f=5;break;case 5:f=0!=(i|0)?6:7;break;case 6:f=HEAP32[(i|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];i=f;f=5;break;case 7:_ReturnEntityDependencies(c,a);d=0;f=8;break;case 8:f=d>>>0<HEAPU32[(HEAP32[(a+44|0)>>2]+80|0)>>2]>>>0?9:17;break;case 9:e=HEAP32[(HEAP32[(a+72|0)>>2]+(d<<2)|0)>>2];f=(e|0)==(HEAP32[(e|0)>>2]+32|0)?10:11;break;case 10:f=HEAP32[(e|0)>>2]+24|0;var j=HEAP32[f>>2]-1|0;HEAP32[f>>
2]=j;f=0==(j|0)?12:15;break;case 11:f=12;break;case 12:f=0!=(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>1&1|0)?13:14;break;case 13:_ReturnMultifield(c,HEAP32[(e+8|0)>>2]);f=14;break;case 14:f=15;break;case 15:f=16;break;case 16:d=d+1|0;f=8;break;case 17:f=0!=(HEAP32[(HEAP32[(a+44|0)>>2]+80|0)>>2]|0)?18:21;break;case 18:_rm(c,HEAP32[(a+72|0)>>2],HEAP32[(HEAP32[(a+44|0)>>2]+80|0)>>2]<<2|0);f=0!=(HEAP32[(HEAP32[(a+44|0)>>2]+76|0)>>2]|0)?19:20;break;case 19:_rm(c,HEAP32[(a+76|0)>>2],12*HEAP32[(HEAP32[(a+44|0)>>2]+
76|0)>>2]|0);f=20;break;case 20:f=21;break;case 21:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=b;f=3;break;case 22:g=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+96|0)>>2];f=23;break;case 23:f=0!=(g|0)?
24:25;break;case 24:f=HEAP32[(g+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(g|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|
0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];g=f;f=23;break;case 25:return;default:assert(0,"bad label: "+f)}}_DeallocateInstanceData.X=1;
function _DeleteInstanceCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(_CheckCurrentMessage(a,STRING_TABLE.__str122061|0,1)|0)?3:4;break;case 3:f=a;c=_GetNthMessageArgument(a,0)+8|0;c=_QuashInstance(f,HEAP32[c>>2]);f=5;break;case 4:c=0;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _UnmakeInstanceCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g,i,j;b=h;j=i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:22;break;case 4:_EvaluateExpression(b,d,e);c=8==(HEAPU16[(e+4|0)>>1]&65535|0)?6:5;break;case 5:c=2==(HEAPU16[(e+4|0)>>1]&65535|0)?6:11;break;case 6:g=_FindInstanceBySymbol(b,HEAP32[(e+
8|0)>>2]);c=0==(g|0)?7:8;break;case 7:c=0!=(_strcmp(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],STRING_TABLE.__str472096|0)|0)?9:10;break;case 8:c=10;break;case 9:_NoInstanceError(b,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],STRING_TABLE.__str162065|0);a=0;c=23;break;case 10:c=17;break;case 11:c=7==(HEAPU16[(e+4|0)>>1]&65535|0)?12:15;break;case 12:g=HEAP32[(e+8|0)>>2];c=0!=(HEAPU32[(g+24|0)>>2]>>>1&1|0)?13:14;break;case 13:_StaleInstanceAddress(b,STRING_TABLE.__str162065|0,0);_SetEvaluationError(b,1);a=0;c=23;
break;case 14:c=16;break;case 15:_ExpectedTypeError1(b,STRING_TABLE.__str642113|0,i,STRING_TABLE.__str652114|0);_SetEvaluationError(b,1);a=0;c=23;break;case 16:c=17;break;case 17:c=0==(_EnvUnmakeInstance(b,g)|0)?18:19;break;case 18:j=0;c=19;break;case 19:c=0==(g|0)?20:21;break;case 20:a=j;c=23;break;case 21:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=3;break;case 22:a=j;c=23;break;case 23:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_UnmakeInstanceCommand.X=1;
function _InstancesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i=f;a=h;g=d=0;e=_EnvGetCurrentModule(a);b=_EnvRtnArgCount(a);c=0<(b|0)?3:25;break;case 3:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str192068|0,1,2,i)|0)?4:5;break;case 4:c=26;break;case 5:e=_EnvFindDefmodule(a,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2]);c=0!=(e|0)?6:7;break;case 6:c=9;break;case 7:c=0!=(_strcmp(HEAP32[(HEAP32[(i+
8|0)>>2]+16|0)>>2],STRING_TABLE.__str472096|0)|0)?8:9;break;case 8:_SetEvaluationError(a,1);_ExpectedTypeError1(a,STRING_TABLE.__str192068|0,1,STRING_TABLE.__str482097|0);c=26;break;case 9:c=1<(b|0)?10:24;break;case 10:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str192068|0,2,2,i)|0)?11:12;break;case 11:c=26;break;case 12:g=HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2];c=0==(_LookupDefclassAnywhere(a,e,g)|0)?13:17;break;case 13:c=0==(_strcmp(g,STRING_TABLE.__str472096|0)|0)?14:15;break;case 14:g=0;c=16;break;
case 15:_ClassExistError(a,STRING_TABLE.__str192068|0,g);c=26;break;case 16:c=17;break;case 17:c=2<(b|0)?18:23;break;case 18:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str192068|0,3,2,i)|0)?19:20;break;case 19:c=26;break;case 20:c=0!=(_strcmp(HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],STRING_TABLE.__str492098|0)|0)?21:22;break;case 21:_SetEvaluationError(a,1);_ExpectedTypeError1(a,STRING_TABLE.__str192068|0,3,STRING_TABLE.__str502099|0);c=26;break;case 22:d=1;c=23;break;case 23:c=24;break;case 24:c=25;break;
case 25:_EnvInstances(a,STRING_TABLE.__str512100|0,e,g,d);c=26;break;case 26:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_InstancesCommand.X=1;
function _PPInstanceCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0==(_CheckCurrentMessage(c,STRING_TABLE.__str222071|0,1)|0)?3:4;break;case 3:f=7;break;case 4:f=_GetNthMessageArgument(c,0)+8|0;a=HEAP32[f>>2];f=1==(HEAPU32[(a+24|0)>>2]>>>1&1|0)?5:6;break;case 5:f=7;break;case 6:_PrintInstance(c,STRING_TABLE.__str512100|0,a,STRING_TABLE.__str522101|0);_EnvPrintRouter(c,STRING_TABLE.__str512100|0,STRING_TABLE.__str522101|0);f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}
function _SymbolToInstanceName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str242073|0,1,2,b)|0)?3:4;break;case 3:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=5;break;case 4:HEAP16[(b+4|0)>>1]=8;c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _InstanceNameToSymbol(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str272076|0,1,8,d)|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];c=5;break;case 4:a=HEAP32[(d+8|0)>>2];c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _InstanceAddressCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=1<(_EnvRtnArgCount(b)|0)?3:18;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str302079|0,1,2,g)|0)?4:5;break;case 4:a=30;break;case 5:i=_EnvFindDefmodule(b,HEAP32[(HEAP32[(g+8|0)>>2]+
16|0)>>2]);a=0==(i|0)?6:7;break;case 6:a=0!=(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str472096|0)|0)?8:9;break;case 7:a=9;break;case 8:_ExpectedTypeError1(b,STRING_TABLE.__str302079|0,1,STRING_TABLE.__str662115|0);_SetEvaluationError(b,1);a=30;break;case 9:a=0==(i|0)?10:11;break;case 10:j=1;i=_EnvGetCurrentModule(b);a=12;break;case 11:j=0;a=12;break;case 12:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str302079|0,2,8,g)|0)?13:14;break;case 13:a=30;break;case 14:a=b;e=HEAP32[(g+8|0)>>
2];var k=i,l=_EnvGetCurrentModule(b);e=_FindInstanceInModule(a,e,k,l,j);a=0!=(e|0)?15:16;break;case 15:HEAP16[(d+4|0)>>1]=7;HEAP32[(d+8|0)>>2]=e;a=17;break;case 16:_NoInstanceError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str302079|0);a=17;break;case 17:a=30;break;case 18:a=0!=(_EnvArgTypeCheck(b,STRING_TABLE.__str302079|0,1,182,g)|0)?19:29;break;case 19:a=7==(HEAPU16[(g+4|0)>>1]&65535|0)?20:24;break;case 20:e=HEAP32[(g+8|0)>>2];a=0==(HEAPU32[(e+24|0)>>2]>>>1&1|0)?21:22;break;case 21:HEAP16[(d+
4|0)>>1]=7;HEAP32[(d+8|0)>>2]=HEAP32[(g+8|0)>>2];a=23;break;case 22:_StaleInstanceAddress(b,STRING_TABLE.__str302079|0,0);_SetEvaluationError(b,1);a=23;break;case 23:a=28;break;case 24:e=_FindInstanceBySymbol(b,HEAP32[(g+8|0)>>2]);a=0!=(e|0)?25:26;break;case 25:HEAP16[(d+4|0)>>1]=7;HEAP32[(d+8|0)>>2]=e;a=27;break;case 26:_NoInstanceError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str302079|0);a=27;break;case 27:a=28;break;case 28:a=29;break;case 29:a=30;break;case 30:STACKTOP=c;return;
default:assert(0,"bad label: "+a)}}_InstanceAddressCommand.X=1;function _InstanceAddressPCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_EvaluateExpression(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],f);h=7==(HEAPU16[(f+4|0)>>1]&65535|0)?1:0;STACKTOP=f;return h}
function _InstanceNamePCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_EvaluateExpression(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],f);h=8==(HEAPU16[(f+4|0)>>1]&65535|0)?1:0;STACKTOP=f;return h}
function _InstanceNameCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str382087|0,1,182,g)|0)?3:4;break;case 3:a=12;break;case 4:a=7==(HEAPU16[(g+4|0)>>1]&65535|0)?5:8;break;case 5:e=HEAP32[(g+8|0)>>2];a=1==(HEAPU32[(e+24|0)>>2]>>>
1&1|0)?6:7;break;case 6:_StaleInstanceAddress(b,STRING_TABLE.__str382087|0,0);_SetEvaluationError(b,1);a=12;break;case 7:a=11;break;case 8:e=_FindInstanceBySymbol(b,HEAP32[(g+8|0)>>2]);a=0==(e|0)?9:10;break;case 9:_NoInstanceError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str382087|0);a=12;break;case 10:a=11;break;case 11:HEAP16[(d+4|0)>>1]=8;HEAP32[(d+8|0)>>2]=HEAP32[(e+28|0)>>2];a=12;break;case 12:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_InstanceNameCommand.X=1;
function _InstancePCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=h;_EvaluateExpression(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],b);c=8==(HEAPU16[(b+4|0)>>1]&65535|0)?4:3;break;case 3:c=7==(HEAPU16[(b+4|0)>>1]&65535|0)?4:5;break;case 4:a=1;c=6;break;case 5:a=0;c=6;break;case 6:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _InstanceExistPCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],d);c=7==(HEAPU16[(d+4|0)>>1]&65535|0)?3:4;break;case 3:a=0==(HEAPU32[(HEAP32[(d+8|0)>>2]+24|0)>>2]>>>1&1|0)?1:0;c=8;break;case 4:c=8==(HEAPU16[(d+4|0)>>1]&65535|0)?6:5;break;case 5:c=2==(HEAPU16[(d+4|0)>>1]&
65535|0)?6:7;break;case 6:a=0!=(_FindInstanceBySymbol(b,HEAP32[(d+8|0)>>2])|0)?1:0;c=8;break;case 7:_ExpectedTypeError1(b,STRING_TABLE.__str432092|0,1,STRING_TABLE.__str672116|0);_SetEvaluationError(b,1);a=0;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_InstanceExistPCommand.X=1;
function _ClassCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;b=h;d=f;g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2];HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],i);a=
7==(HEAPU16[(i+4|0)>>1]&65535|0)?3:6;break;case 3:e=HEAP32[(i+8|0)>>2];a=1==(HEAPU32[(e+24|0)>>2]>>>1&1|0)?4:5;break;case 4:_StaleInstanceAddress(b,g,0);_SetEvaluationError(b,1);a=15;break;case 5:a=_GetConstructNamePointer(HEAP32[(e+44|0)>>2]);HEAP32[(d+8|0)>>2]=a;a=15;break;case 6:a=8==(HEAPU16[(i+4|0)>>1]&65535|0)?7:10;break;case 7:e=_FindInstanceBySymbol(b,HEAP32[(i+8|0)>>2]);a=0==(e|0)?8:9;break;case 8:_NoInstanceError(b,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],g);a=15;break;case 9:a=_GetConstructNamePointer(HEAP32[(e+
44|0)>>2]);HEAP32[(d+8|0)>>2]=a;a=14;break;case 10:a=HEAPU16[(i+4|0)>>1]&65535;a=1==(a|0)||0==(a|0)||2==(a|0)||3==(a|0)||4==(a|0)||5==(a|0)||6==(a|0)?11:12;break;case 11:a=_GetConstructNamePointer(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+64|0)+((HEAPU16[(i+4|0)>>1]&65535)<<2)|0)>>2]);HEAP32[(d+8|0)>>2]=a;a=15;break;case 12:_PrintErrorID(b,STRING_TABLE.__str602109|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str612110|0,STRING_TABLE.__str622111|0);_EnvPrintRouter(b,STRING_TABLE.__str612110|0,g);_EnvPrintRouter(b,
STRING_TABLE.__str612110|0,STRING_TABLE.__str632112|0);_SetEvaluationError(b,1);a=13;break;case 13:a=14;break;case 14:a=15;break;case 15:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ClassCommand.X=1;function _EnvValidInstanceAddress(h,f){return 0==(HEAPU32[(f+24|0)>>2]>>>1&1|0)?1:0}
function _EnvDeleteInstance(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=1;c=0!=(d|0)?3:4;break;case 3:a=_QuashInstance(b,d);c=14;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+172|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:9;break;case 6:c=e;e=HEAP32[(e+68|0)>>2];c=0==(_QuashInstance(b,c)|0)?7:8;break;case 7:g=0;c=8;break;case 8:c=5;break;case 9:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?10:13;break;case 10:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+
160|0)>>2]|0)>>2]|0)?13:11;break;case 11:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]|0)?12:13;break;case 12:_PeriodicCleanup(b,1,0);c=13;break;case 13:a=g;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_EnvDeleteInstance.X=1;
function _EnvInstances(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;k=b;n=0;l=d=_GetTraversalID(e);d=-1==(d|0)?3:4;break;case 3:d=14;break;case 4:_SaveCurrentModule(e);d=0==(i|0)?5:11;break;case 5:m=_EnvGetNextDefmodule(e,0);d=6;break;case 6:d=0!=(m|0)?7:10;break;case 7:d=1==(_GetHaltExecution(e)|0)?8:9;break;case 8:_RestoreCurrentModule(e);_ReleaseTraversalID(e);d=14;break;case 9:d=e;var o=g,p=_EnvGetDefmoduleName(e,m);_EnvPrintRouter(d,o,p);_EnvPrintRouter(e,g,
STRING_TABLE.__str532102|0);_EnvSetCurrentModule(e,m);d=_ListInstancesInModule(e,l,g,j,k,1);n=n+d|0;m=_EnvGetNextDefmodule(e,m);d=6;break;case 10:d=12;break;case 11:_EnvSetCurrentModule(e,i);n=_ListInstancesInModule(e,l,g,j,k,0);d=12;break;case 12:_RestoreCurrentModule(e);_ReleaseTraversalID(e);d=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?13:14;break;case 13:_PrintTally(e,g,n,STRING_TABLE.__str542103|0,STRING_TABLE.__str192068|0);d=14;break;case 14:return;default:assert(0,"bad label: "+
d)}}_EnvInstances.X=1;
function _PrintInstance(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;_PrintInstanceNameAndClass(d,e,g,0);j=0;b=3;break;case 3:b=j>>>0<HEAPU32[(HEAP32[(g+44|0)>>2]+80|0)>>2]>>>0?4:11;break;case 4:_EnvPrintRouter(d,e,i);k=HEAP32[(HEAP32[(g+72|0)>>2]+(j<<2)|0)>>2];_EnvPrintRouter(d,e,STRING_TABLE.__str682117|0);_EnvPrintRouter(d,e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);b=4!=(HEAPU32[(k+4|0)>>2]>>>2&63|0)?5:6;break;case 5:_EnvPrintRouter(d,e,
STRING_TABLE.__str592108|0);_PrintAtom(d,e,HEAPU32[(k+4|0)>>2]>>>2&63,HEAP32[(k+8|0)>>2]);b=9;break;case 6:b=0!=(HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:_EnvPrintRouter(d,e,STRING_TABLE.__str592108|0);_PrintMultifield(d,e,HEAP32[(k+8|0)>>2],0,HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]-1|0,0);b=8;break;case 8:b=9;break;case 9:_EnvPrintRouter(d,e,STRING_TABLE.__str692118|0);b=10;break;case 10:j=j+1|0;b=3;break;case 11:return;default:assert(0,"bad label: "+b)}}_PrintInstance.X=1;
function _ListInstancesInModule(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=0;e=0==(l|0)?3:16;break;case 3:e=0!=(n|0)?4:9;break;case 4:o=_EnvGetNextDefclass(i,0);e=5;break;case 5:e=0!=(o|0)?6:8;break;case 6:e=_TabulateInstances(i,j,k,o,0,n);q=q+e|0;e=7;break;case 7:o=_EnvGetNextDefclass(i,o);e=5;break;case 8:e=15;break;case 9:p=_GetNextInstanceInScope(i,0);e=10;break;case 10:e=0!=(p|0)?11:14;break;case 11:e=1==(_GetHaltExecution(i)|0)?12:13;break;
case 12:g=q;e=23;break;case 13:q=q+1|0;_PrintInstanceNameAndClass(i,k,p,1);p=_GetNextInstanceInScope(i,p);e=10;break;case 14:e=15;break;case 15:e=22;break;case 16:o=i;e=_EnvGetCurrentModule(i);o=_LookupDefclassAnywhere(o,e,l);e=0!=(o|0)?17:18;break;case 17:e=_TabulateInstances(i,j,k,o,m,n);q=q+e|0;e=21;break;case 18:e=0!=(n|0)?20:19;break;case 19:_ClassExistError(i,STRING_TABLE.__str192068|0,l);e=20;break;case 20:e=21;break;case 21:e=22;break;case 22:g=q;e=23;break;case 23:return g;default:assert(0,
"bad label: "+e)}}_ListInstancesInModule.X=1;
function _EnvMakeInstance(h,f){var c=STACKTOP;STACKTOP+=36;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j=c+12;d=h;a=f;e=STRING_TABLE.__str552104|0;HEAP16[(j+4|0)>>1]=2;HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_OpenStringSource(d,e,a,0)|0)?3:4;break;case 3:b=0;a=20;break;case 4:_GetToken(d,e,g);a=170==(HEAPU16[(g|0)>>1]&65535|0)?5:11;break;case 5:i=d;a=_FindFunction(d,
STRING_TABLE.__str52054|0);i=_GenConstant(i,30,a);a=0!=(_ParseSimpleInstance(d,i,e)|0)?6:10;break;case 6:_GetToken(d,e,g);a=172==(HEAPU16[(g|0)>>1]&65535|0)?7:8;break;case 7:_ExpressionInstall(d,i);_EvaluateExpression(d,i,j);_ExpressionDeinstall(d,i);a=9;break;case 8:_SyntaxErrorMessage(d,STRING_TABLE.__str562105|0);a=9;break;case 9:_ReturnExpression(d,i);a=10;break;case 10:a=12;break;case 11:_SyntaxErrorMessage(d,STRING_TABLE.__str562105|0);a=12;break;case 12:_CloseStringSource(d,e);a=0==(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?13:16;break;case 13:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+160|0)>>2]|0)>>2]|0)?16:14;break;case 14:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]|0)?15:16;break;case 15:_PeriodicCleanup(d,1,0);a=16;break;case 16:a=2==(HEAPU16[(j+4|0)>>1]&65535|0)?17:19;break;case 17:a=(HEAP32[(j+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?18:19;break;case 18:b=0;a=20;break;case 19:b=_FindInstanceBySymbol(d,HEAP32[(j+8|0)>>2]);a=20;break;
case 20:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_EnvMakeInstance.X=1;function _EnvCreateRawInstance(h,f,c){c=_EnvAddSymbol(h,c);return _BuildInstance(h,c,f,0)}
function _EnvFindInstance(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;i=_FindSymbolHN(e,i);b=0==(i|0)?3:4;break;case 3:d=0;b=7;break;case 4:b=0==(g|0)?5:6;break;case 5:g=_EnvGetCurrentModule(e);b=6;break;case 6:d=e;b=i;var k=g,l=_EnvGetCurrentModule(e);d=_FindInstanceInModule(d,b,k,l,j);b=7;break;case 7:return d;default:assert(0,"bad label: "+b)}}
function _EnvDirectGetSlot(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=1==(HEAPU32[(e+24|0)>>2]>>>1&1|0)?3:4;break;case 3:_SetEvaluationError(d,1);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=9;break;case 4:j=_FindISlotByName(d,e,g);b=0==(j|0)?5:6;break;case 5:_SetEvaluationError(d,1);HEAP16[(i+4|0)>>1]=2;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=9;break;case 6:HEAP16[(i+4|0)>>1]=
HEAPU32[(j+4|0)>>2]>>>2&63;HEAP32[(i+8|0)>>2]=HEAP32[(j+8|0)>>2];b=4==(HEAPU32[(j+4|0)>>2]>>>2&63|0)?7:8;break;case 7:HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=HEAP32[(HEAP32[(j+8|0)>>2]+8|0)>>2]-1|0;b=8;break;case 8:_PropagateReturnValue(d,i);b=9;break;case 9:return;default:assert(0,"bad label: "+b)}}_EnvDirectGetSlot.X=1;
function _FindISlotByName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=_FindSymbolHN(d,c);a=0==(g|0)?3:4;break;case 3:b=0;a=5;break;case 4:b=_FindInstanceSlot(d,e,g);a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}function _EnvGetInstanceName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=1==(HEAPU32[(b+24|0)>>2]>>>1&1|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=HEAP32[(HEAP32[(b+28|0)>>2]+16|0)>>2];c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _EnvGetInstanceClass(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=1==(HEAPU32[(b+24|0)>>2]>>>1&1|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=HEAP32[(b+44|0)>>2];c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}function _GetGlobalNumberOfInstances(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]+176|0)>>2]}
function _EnvGetNextInstanceInClass(h,f,c){for(h=2;;)switch(h){case 2:var a,b,d;b=f;d=c;h=0==(d|0)?3:4;break;case 3:a=HEAP32[(b+88|0)>>2];h=7;break;case 4:h=1==(HEAPU32[(d+24|0)>>2]>>>1&1|0)?5:6;break;case 5:a=0;h=7;break;case 6:a=HEAP32[(d+52|0)>>2];h=7;break;case 7:return a;default:assert(0,"bad label: "+h)}}
function _EnvDirectPutSlot(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;d=1==(HEAPU32[(i+24|0)>>2]>>>1&1|0)?4:3;break;case 3:d=0==(k|0)?4:5;break;case 4:_SetEvaluationError(g,1);e=0;d=14;break;case 5:l=_FindISlotByName(g,i,j);d=0==(l|0)?6:7;break;case 6:_SetEvaluationError(g,1);e=0;d=14;break;case 7:d=0!=(_PutSlotValue(g,i,l,k,m,STRING_TABLE.__str572106|
0)|0)?8:13;break;case 8:d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?9:12;break;case 9:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+160|0)>>2]|0)>>2]|0)?12:10;break;case 10:d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]|0)?11:12;break;case 11:_PeriodicCleanup(g,1,0);d=12;break;case 12:e=1;d=14;break;case 13:e=0;d=14;break;case 14:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EnvDirectPutSlot.X=1;
function _GetNextInstanceInScope(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+172|0)>>2];c=8;break;case 4:c=0!=(HEAPU32[(d+24|0)>>2]>>>1&1|0)?5:6;break;case 5:a=0;c=14;break;case 6:d=HEAP32[(d+68|0)>>2];c=7;break;case 7:c=8;break;case 8:c=9;break;case 9:c=0!=(d|0)?10:13;break;case 10:c=0!=(_DefclassInScope(b,HEAP32[(d+44|0)>>2],0)|0)?11:12;break;case 11:a=d;c=14;break;case 12:d=HEAP32[(d+68|0)>>2];c=9;break;case 13:a=
0;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_GetNextInstanceInScope.X=1;
function _EnvGetNextInstanceInClassAndSubclasses(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;k=HEAP32[e>>2];b=0==(g|0)?3:4;break;case 3:_ClassSubclassAddresses(d,k,i,1);j=HEAP32[(k+88|0)>>2];b=8;break;case 4:b=1==(HEAPU32[(g+24|0)>>2]>>>1&1|0)?5:6;break;case 5:j=0;b=7;break;case 6:j=HEAP32[(g+52|0)>>2];b=7;break;case 7:b=8;break;case 8:b=9;break;case 9:if(0==(j|0))b=10;else{var l=0;b=11}break;case 10:l=(HEAP32[(i+12|0)>>2]+1|0)<=(HEAP32[(i+16|0)>>2]+1|0);b=11;break;case 11:b=
l?12:13;break;case 12:k=HEAP32[(((HEAP32[(i+8|0)>>2]+16|0)+(((HEAP32[(i+12|0)>>2]+1|0)-1|0)<<3)|0)+4|0)>>2];HEAP32[e>>2]=k;HEAP32[(i+12|0)>>2]=((HEAP32[(i+12|0)>>2]+1|0)+1|0)-1|0;j=HEAP32[(k+88|0)>>2];b=9;break;case 13:return j;default:assert(0,"bad label: "+b)}}_EnvGetNextInstanceInClassAndSubclasses.X=1;
function _EnvGetInstancePPForm(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=STRING_TABLE.__str582107|0;b=1==(HEAPU32[(i+24|0)>>2]>>>1&1|0)?3:4;break;case 3:b=7;break;case 4:b=0==(_OpenStringDestination(d,j,e,g+1|0)|0)?5:6;break;case 5:b=7;break;case 6:_PrintInstance(d,j,i,STRING_TABLE.__str592108|0);_CloseStringDestination(d,j);b=7;break;case 7:return;default:assert(0,"bad label: "+b)}}
function _TabulateInstances(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=0;e=0!=(HEAP8[(l+116|0)+((j|0)/8&-1)|0]<<24>>24&(1<<(j|0)%8&255)<<24>>24|0)?3:4;break;case 3:g=0;e=21;break;case 4:o=(l+116|0)+((j|0)/8&-1)|0;HEAP8[o]=(HEAP8[o]<<24>>24|(1<<(j|0)%8&255)<<24>>24)&255;o=HEAP32[(l+88|0)>>2];e=5;break;case 5:e=0!=(o|0)?6:12;break;case 6:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:g=q;e=21;break;case 8:e=0!=(n|
0)?9:10;break;case 9:_EnvPrintRouter(i,k,STRING_TABLE.__str702119|0);e=10;break;case 10:_PrintInstanceNameAndClass(i,k,o,1);q=q+1|0;e=11;break;case 11:o=HEAP32[(o+52|0)>>2];e=5;break;case 12:e=0!=(m|0)?13:20;break;case 13:p=0;e=14;break;case 14:e=p>>>0<(HEAPU16[(l+44|0)>>1]&65535)>>>0?15:19;break;case 15:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?16:17;break;case 16:g=q;e=21;break;case 17:e=_TabulateInstances(i,j,k,HEAP32[(HEAP32[((l+44|0)+4|0)>>2]+(p<<2)|0)>>2],m,n);q=q+e|0;
e=18;break;case 18:p=p+1|0;e=14;break;case 19:e=20;break;case 20:g=q;e=21;break;case 21:return g;default:assert(0,"bad label: "+e)}}_TabulateInstances.X=1;
function _SetupInstanceFileCommands(h){_AllocateEnvironmentData(h,30,28,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]|0)>>2]=STRING_TABLE.__str2128|0;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]+4|0)>>2]=STRING_TABLE.__str12129|0;_EnvDefineFunction2(h,STRING_TABLE.__str22130|0,108,942,STRING_TABLE.__str32131|0,STRING_TABLE.__str42132|0);_EnvDefineFunction2(h,STRING_TABLE.__str52133|0,108,944,STRING_TABLE.__str62134|0,STRING_TABLE.__str72135|0);_EnvDefineFunction2(h,STRING_TABLE.__str82136|0,
108,946,STRING_TABLE.__str92137|0,STRING_TABLE.__str72135|0);_EnvDefineFunction2(h,STRING_TABLE.__str102138|0,108,948,STRING_TABLE.__str112139|0,STRING_TABLE.__str42132|0);_EnvDefineFunction2(h,STRING_TABLE.__str122140|0,108,950,STRING_TABLE.__str132141|0,STRING_TABLE.__str72135|0)}function _SaveInstancesCommand(h){return _InstancesSaveCommandParser(h,STRING_TABLE.__str22130|0,952)}
function _LoadInstancesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str52133|0,1,181,e)|0)?3:4;break;case 3:a=0;c=7;break;case 4:d=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];g=_EnvLoadInstances(b,d);c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:_ProcessFileErrorMessage(b,STRING_TABLE.__str52133|
0,d);c=6;break;case 6:a=g;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _RestoreInstancesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str82136|0,1,181,e)|0)?3:4;break;case 3:a=0;c=7;break;case 4:d=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];g=_EnvRestoreInstances(b,d);c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:_ProcessFileErrorMessage(b,STRING_TABLE.__str82136|
0,d);c=6;break;case 6:a=g;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}function _BinarySaveInstancesCommand(h){return _InstancesSaveCommandParser(h,STRING_TABLE.__str102138|0,954)}
function _BinaryLoadInstancesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str122140|0,1,181,e)|0)?3:4;break;case 3:a=0;c=7;break;case 4:d=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];g=_EnvBinaryLoadInstances(b,d);c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:_ProcessFileErrorMessage(b,STRING_TABLE.__str122140|
0,d);c=6;break;case 6:a=g;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _InstancesSaveCommandParser(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l,m,n;e=h;g=f;i=c;l=1;n=m=0;b=0==(_EnvArgTypeCheck(e,g,1,181,k)|0)?3:4;break;case 3:d=0;b=23;break;case 4:j=HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2];b=_EnvRtnArgCount(e);b=1<(b|0)?5:22;break;case 5:b=0==(_EnvArgTypeCheck(e,g,2,2,k)|0)?6:7;break;case 6:_ExpectedTypeError1(e,g,2,STRING_TABLE.__str372165|
0);_SetEvaluationError(e,1);d=0;b=23;break;case 7:b=0==(_strcmp(HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2],STRING_TABLE.__str382166|0)|0)?8:9;break;case 8:l=1;b=13;break;case 9:b=0==(_strcmp(HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2],STRING_TABLE.__str392167|0)|0)?10:11;break;case 10:l=2;b=12;break;case 11:_ExpectedTypeError1(e,g,2,STRING_TABLE.__str372165|0);_SetEvaluationError(e,1);d=0;b=23;break;case 12:b=13;break;case 13:m=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>
2]+12|0)>>2]+12|0)>>2];b=0!=(m|0)?14:15;break;case 14:b=0!=(HEAP32[(m+12|0)>>2]|0)?16:21;break;case 15:b=21;break;case 16:b=2!=(HEAPU16[(m|0)>>1]&65535|0)?17:18;break;case 17:b=20;break;case 18:b=0==(_strcmp(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],STRING_TABLE.__str402168|0)|0)?19:20;break;case 19:n=1;m=HEAP32[(m+12|0)>>2];b=20;break;case 20:b=21;break;case 21:b=22;break;case 22:d=FUNCTION_TABLE[i](e,j,l,m,n);b=23;break;case 23:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}
_InstancesSaveCommandParser.X=1;
function _EnvSaveInstances(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p;g=h;i=f;j=c;k=a;l=b;m=0;o=_ProcessSaveClassList(g,STRING_TABLE.__str22130|0,k,j,l);d=0==(o|0)?3:5;break;case 3:d=0!=(k|0)?4:5;break;case 4:e=0;d=8;break;case 5:_SaveOrMarkInstances(g,m,j,o,l,1,0);m=d=_GenOpen(g,i,STRING_TABLE.__str152143|0);d=0==(d|0)?6:7;break;case 6:_OpenErrorMessage(g,STRING_TABLE.__str22130|0,i);_ReturnSaveClassList(g,o);_SetEvaluationError(g,1);e=0;d=8;break;case 7:e=HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+212|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]|0)>>2]=1;d=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+4|0)>>2]=1;n=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2]=1;_SetFastSave(g,m);p=_SaveOrMarkInstances(g,m,j,o,l,1,956);_GenClose(g,m);_SetFastSave(g,0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|
0)>>2]+4|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+212|0)>>2]+8|0)>>2]=n;_ReturnSaveClassList(g,o);e=p;d=8;break;case 8:return e;default:assert(0,"bad label: "+d)}}_EnvSaveInstances.X=1;function _EnvLoadInstances(h,f){return _LoadOrRestoreInstances(h,f,1,1)}
function _ProcessFileErrorMessage(h,f,c){_PrintErrorID(h,STRING_TABLE.__str172145|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,STRING_TABLE.__str232151|0);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,f);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,STRING_TABLE.__str242152|0);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,c);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,STRING_TABLE.__str252153|0)}
function _LoadOrRestoreInstances(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m,n,o,p,q,r;g=h;i=f;j=c;k=a;r=n=m=0;d=0!=(k|0)?3:6;break;case 3:m=d=_GenOpen(g,i,STRING_TABLE.__str262154|0);d=0==(d|0)?4:5;break;case 4:_SetEvaluationError(g,1);e=-1;d=25;break;case 5:n=_GetFastLoad(g);o=m;_SetFastLoad(g,m);d=7;break;case 6:o=i;d=7;break;case 7:p=g;q=_FindFunction(g,STRING_TABLE.__str272155|
0);p=_GenConstant(p,30,q);_GetToken(g,o,HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+140|0);q=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2]=j;d=8;break;case 8:if(172!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0))d=9;else{var s=0;d=10}break;case 9:s=1!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+8|0)>>2]|0);d=10;break;case 10:d=s?11:22;break;case 11:d=170!=(HEAPU16[(HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+140|0)>>
1]&65535|0)?12:15;break;case 12:_SyntaxErrorMessage(g,STRING_TABLE.__str282156|0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=p;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0!=(k|0)?13:14;break;case 13:_GenClose(g,m);_SetFastLoad(g,n);d=14;break;case 14:_SetEvaluationError(g,
1);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2]=q;e=r;d=25;break;case 15:d=0==(_ParseSimpleInstance(g,p,o)|0)?16:19;break;case 16:d=0!=(k|0)?17:18;break;case 17:_GenClose(g,m);_SetFastLoad(g,n);d=18;break;case 18:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2]=q;_SetEvaluationError(g,1);e=r;d=25;break;case 19:_ExpressionInstall(g,p);_EvaluateExpression(g,p,l);_ExpressionDeinstall(g,p);d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?21:20;break;case 20:r=r+1|0;
d=21;break;case 21:_ReturnExpression(g,HEAP32[(p+8|0)>>2]);HEAP32[(p+8|0)>>2]=0;_GetToken(g,o,HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+140|0);d=8;break;case 22:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=p;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=0!=(k|
0)?23:24;break;case 23:_GenClose(g,m);_SetFastLoad(g,n);d=24;break;case 24:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2]=q;e=r;d=25;break;case 25:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_LoadOrRestoreInstances.X=1;
function _EnvLoadInstancesFromString(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=STRING_TABLE.__str142142|0;a=-1==(g|0)?3:4;break;case 3:a=0!=(_OpenStringSource(d,i,e,0)|0)?6:5;break;case 4:a=0!=(_OpenTextSource(d,i,e,0,g)|0)?6:5;break;case 5:b=-1;a=7;break;case 6:a=_LoadOrRestoreInstances(d,i,1,0);_CloseStringSource(d,i);b=a;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}function _EnvRestoreInstances(h,f){return _LoadOrRestoreInstances(h,f,0,1)}
function _EnvRestoreInstancesFromString(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=STRING_TABLE.__str142142|0;a=-1==(g|0)?3:4;break;case 3:a=0!=(_OpenStringSource(d,i,e,0)|0)?6:5;break;case 4:a=0!=(_OpenTextSource(d,i,e,0,g)|0)?6:5;break;case 5:b=-1;a=7;break;case 6:a=_LoadOrRestoreInstances(d,i,0,0);_CloseStringSource(d,i);b=a;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _EnvBinaryLoadInstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;a=0==(_GenOpenReadBinary(d,STRING_TABLE.__str122140|0,e)|0)?3:4;break;case 3:_SetEvaluationError(d,1);b=-1;a=13;break;case 4:a=0==(_VerifyBinaryHeader(d,e)|0)?5:6;break;case 5:_GenCloseBinary(d);_SetEvaluationError(d,1);b=-1;a=13;break;case 6:_EnvIncrementGCLocks(d);_ReadNeededAtomicValues(d);
HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]+12|0)>>2]=0;_GenReadBinary(d,HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]+8|0,4);_GenReadBinary(d,i,4);g=0;a=7;break;case 7:a=(g|0)<(HEAP32[i>>2]|0)?8:12;break;case 8:a=0==(_LoadSingleBinaryInstance(d)|0)?9:10;break;case 9:_FreeReadBuffer(d);_FreeAtomicValueStorage(d);_GenCloseBinary(d);_SetEvaluationError(d,1);_EnvDecrementGCLocks(d);b=g;a=13;break;case 10:a=11;break;case 11:g=g+1|0;a=7;break;case 12:_FreeReadBuffer(d);_FreeAtomicValueStorage(d);_GenCloseBinary(d);
_EnvDecrementGCLocks(d);b=HEAP32[i>>2];a=13;break;case 13:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_EnvBinaryLoadInstances.X=1;
function _VerifyBinaryHeader(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;e=f;a=d;var i=g|0,j=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]|0)>>2])+1|0;_GenReadBinary(a,i,j);a=0!=(_strcmp(g|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]|0)>>2])|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str172145|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str182146|0,e);_EnvPrintRouter(d,
STRING_TABLE.__str182146|0,STRING_TABLE.__str212149|0);b=0;a=7;break;case 4:a=d;i=g|0;j=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]+4|0)>>2])+1|0;_GenReadBinary(a,i,j);a=0!=(_strcmp(g|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+120|0)>>2]+4|0)>>2])|0)?5:6;break;case 5:_PrintErrorID(d,STRING_TABLE.__str172145|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str182146|0,e);_EnvPrintRouter(d,STRING_TABLE.__str182146|0,STRING_TABLE.__str222150|0);b=0;a=7;break;case 6:b=1;a=7;break;case 7:return STACKTOP=
c,b;default:assert(0,"bad label: "+a)}}_VerifyBinaryHeader.X=1;
function _LoadSingleBinaryInstance(h){var f=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i,j,k,l;c=f+4;var m=f+8,n,o,p,q=f+12,r=f+36;b=h;l=0;_BufferedRead(b,c,4);d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[c>>2]<<2)|0)>>2];_BufferedRead(b,c,4);e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[c>>2]<<2)|0)>>2];_BufferedRead(b,g,4);
i=_LookupDefclassInScope(b,HEAP32[(e+16|0)>>2]);c=0==(i|0)?3:4;break;case 3:_ClassExistError(b,STRING_TABLE.__str122140|0,HEAP32[(e+16|0)>>2]);a=0;c=24;break;case 4:c=(HEAP32[(i+80|0)>>2]|0)!=(HEAP32[g>>2]|0)?5:6;break;case 5:_BinaryLoadInstanceError(b,d,i);a=0;c=24;break;case 6:j=_BuildInstance(b,d,i,0);c=0==(j|0)?7:8;break;case 7:_BinaryLoadInstanceError(b,d,i);a=0;c=24;break;case 8:c=0==(HEAP32[g>>2]|0)?9:10;break;case 9:a=1;c=24;break;case 10:k=_gm2(b,HEAP32[g>>2]<<3|0);_BufferedRead(b,k,HEAP32[g>>
2]<<3|0);_BufferedRead(b,m,4);c=0!=(HEAP32[m>>2]|0)?11:12;break;case 11:l=_gm3(b,HEAP32[m>>2]<<3|0);_BufferedRead(b,l,HEAP32[m>>2]<<3|0);c=12;break;case 12:o=n=0;c=13;break;case 13:c=n>>>0<HEAPU32[g>>2]>>>0?14:20;break;case 14:p=HEAP32[(HEAP32[(j+72|0)>>2]+(n<<2)|0)>>2];c=(HEAP32[(HEAP32[(HEAP32[(p|0)>>2]+8|0)>>2]+12|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(k+(n<<3)|0)>>2]<<2)|0)>>2]|0)?15:16;break;case 15:c=23;break;case 16:_CreateSlotValue(b,q,l+(o<<
3)|0,HEAP32[((k+(n<<3)|0)+4|0)>>2]);c=0==(_PutSlotValue(b,j,p,q,r,STRING_TABLE.__str122140|0)|0)?17:18;break;case 17:c=23;break;case 18:o=o+HEAP32[((k+(n<<3)|0)+4|0)>>2]|0;c=19;break;case 19:n=n+1|0;c=13;break;case 20:_rm(b,k,HEAP32[g>>2]<<3|0);c=0!=(HEAP32[m>>2]|0)?21:22;break;case 21:_rm3(b,l,HEAP32[m>>2]<<3|0);c=22;break;case 22:a=1;c=24;break;case 23:_BinaryLoadInstanceError(b,d,i);_QuashInstance(b,j);_rm(b,k,HEAP32[g>>2]<<3|0);_rm3(b,l,HEAP32[m>>2]<<3|0);a=0;c=24;break;case 24:return h=a,STACKTOP=
f,h;default:assert(0,"bad label: "+c)}}_LoadSingleBinaryInstance.X=1;
function _FreeReadBuffer(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+120|0)>>2]+20|0)>>2]|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+120|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+120|0)>>2]+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+120|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+120|0)>>2]+20|0)>>2]=0;f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}_FreeReadBuffer.X=1;
function _ProcessSaveClassList(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q=d,r,s,t;i=h;j=f;k=c;l=a;m=b;n=0;t=0!=(m|0)?4:3;s=_EnvGetCurrentModule(i);e=3;break;case 3:e=0!=(k|0)?4:35;break;case 4:e=0!=(_EvaluateExpression(i,k,q)|0)?5:6;break;case 5:e=36;break;case 6:e=2!=(HEAPU16[(q+4|0)>>1]&65535|0)?7:8;break;case 7:e=36;break;case 8:e=1==(l|0)?9:10;break;case 9:r=
_LookupDefclassAnywhere(i,s,HEAP32[(HEAP32[(q+8|0)>>2]+16|0)>>2]);e=11;break;case 10:r=_LookupDefclassInScope(i,HEAP32[(HEAP32[(q+8|0)>>2]+16|0)>>2]);e=11;break;case 11:e=0==(r|0)?12:13;break;case 12:e=36;break;case 13:e=0!=(HEAPU32[(r+24|0)>>2]>>>2&1|0)?14:16;break;case 14:e=0==(m|0)?15:16;break;case 15:e=36;break;case 16:e=17;break;case 17:o=p=e=n;e=18;break;case 18:e=0!=(p|0)?19:28;break;case 19:e=(HEAP32[(p+8|0)>>2]|0)==(r|0)?20:21;break;case 20:e=36;break;case 21:e=0!=(m|0)?22:26;break;case 22:e=
0!=(_HasSuperclass(HEAP32[(p+8|0)>>2],r)|0)?24:23;break;case 23:e=0!=(_HasSuperclass(r,HEAP32[(p+8|0)>>2])|0)?24:25;break;case 24:e=36;break;case 25:e=26;break;case 26:e=27;break;case 27:o=p;p=HEAP32[(p+20|0)>>2];e=18;break;case 28:e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?29:30;break;case 29:var u=_genalloc(i,24);e=31;break;case 30:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|
0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];u=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];e=31;break;case 31:p=u;HEAP16[(p+4|0)>>1]=82;HEAP32[(p+8|0)>>2]=r;HEAP32[(p+20|0)>>2]=0;e=0==(o|0)?32:33;break;case 32:n=p;e=34;break;case 33:HEAP32[(o+20|0)>>2]=p;e=34;break;case 34:t=t+1|0;k=HEAP32[(k+12|0)>>2];e=3;break;case 35:g=n;e=37;break;case 36:_ExpectedTypeError1(i,j,t,0!=(m|0)?
STRING_TABLE.__str352163|0:STRING_TABLE.__str362164|0);_ReturnSaveClassList(i,n);_SetEvaluationError(i,1);g=0;e=37;break;case 37:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_ProcessSaveClassList.X=1;
function _ReturnSaveClassList(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=b;b=HEAP32[(b+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;
case 5:return;default:assert(0,"bad label: "+c)}}_ReturnSaveClassList.X=1;
function _SaveOrMarkInstances(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t;i=h;j=f;k=c;l=a;m=b;n=d;o=e;t=0;p=_EnvGetCurrentModule(i);g=0!=(l|0)?3:14;break;case 3:q=_GetTraversalID(i);g=-1!=(q|0)?4:13;break;case 4:r=l;g=5;break;case 5:if(0==(r|0)){var u=1;g=9}else g=6;break;case 6:if(0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0))g=7;else{var v=0;g=8}break;case 7:v=0!=(n|0);g=8;break;case 8:u=v;g=9;break;case 9:g=u^1?10:12;break;case 10:g=_SaveOrMarkInstancesOfClass(i,
j,p,k,HEAP32[(r+8|0)>>2],m,q,o);t=t+g|0;g=11;break;case 11:r=HEAP32[(r+20|0)>>2];g=5;break;case 12:_ReleaseTraversalID(i);g=13;break;case 13:g=27;break;case 14:s=_GetNextInstanceInScope(i,0);g=15;break;case 15:if(0!=(s|0))g=16;else{var w=0;g=17}break;case 16:w=1!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0);g=17;break;case 17:g=w?18:26;break;case 18:g=2==(k|0)?19:20;break;case 19:g=21;break;case 20:g=(HEAP32[(HEAP32[((HEAP32[(s+44|0)>>2]|0)+8|0)>>2]|0)>>2]|0)==(p|0)?21:24;break;case 21:g=
0!=(o|0)?22:23;break;case 22:FUNCTION_TABLE[o](i,j,s);g=23;break;case 23:t=t+1|0;g=24;break;case 24:g=25;break;case 25:s=_GetNextInstanceInScope(i,s);g=15;break;case 26:g=27;break;case 27:return t;default:assert(0,"bad label: "+g)}}_SaveOrMarkInstances.X=1;
function _SaveSingleInstanceText(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;a=f;d=c;i=a;_EnvPrintRouter(b,i,STRING_TABLE.__str292157|0);_EnvPrintRouter(b,i,HEAP32[(HEAP32[(d+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,i,STRING_TABLE.__str302158|0);_EnvPrintRouter(b,i,HEAP32[(HEAP32[(HEAP32[(d+44|0)>>2]|0)>>2]+16|0)>>2]);e=0;a=3;break;case 3:a=e>>>0<HEAPU32[(HEAP32[(d+44|0)>>2]+80|0)>>2]>>>0?4:11;break;case 4:g=HEAP32[(HEAP32[(d+72|0)>>2]+(e<<2)|0)>>2];_EnvPrintRouter(b,i,STRING_TABLE.__str312159|
0);_EnvPrintRouter(b,i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(g|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);a=4!=(HEAPU32[(g+4|0)>>2]>>>2&63|0)?5:6;break;case 5:_EnvPrintRouter(b,i,STRING_TABLE.__str322160|0);_PrintAtom(b,i,HEAPU32[(g+4|0)>>2]>>>2&63,HEAP32[(g+8|0)>>2]);a=9;break;case 6:a=0!=(HEAP32[(HEAP32[(g+8|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:_EnvPrintRouter(b,i,STRING_TABLE.__str322160|0);_PrintMultifield(b,i,HEAP32[(g+8|0)>>2],0,HEAP32[(HEAP32[(g+8|0)>>2]+8|0)>>2]-1|0,0);a=8;break;case 8:a=9;break;case 9:_EnvPrintRouter(b,
i,STRING_TABLE.__str332161|0);a=10;break;case 10:e=e+1|0;a=3;break;case 11:_EnvPrintRouter(b,i,STRING_TABLE.__str342162|0);return;default:assert(0,"bad label: "+a)}}_SaveSingleInstanceText.X=1;
function _EnvBinarySaveInstances(h,f,c,a,b){var d=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p=d;i=h;j=f;k=c;l=a;m=b;n=_ProcessSaveClassList(i,STRING_TABLE.__str102138|0,l,k,m);e=0==(n|0)?3:5;break;case 3:e=0!=(l|0)?4:5;break;case 4:g=0;e=8;break;case 5:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+120|0)>>2]+8|0)>>2]=0;_InitAtomicValueNeededFlags(i);o=_SaveOrMarkInstances(i,0,k,n,m,0,958);
HEAP32[p>>2]=o;o=e=_GenOpen(i,j,STRING_TABLE.__str162144|0);e=0==(e|0)?6:7;break;case 6:_OpenErrorMessage(i,STRING_TABLE.__str102138|0,j);_ReturnSaveClassList(i,n);_SetEvaluationError(i,1);g=0;e=8;break;case 7:_WriteBinaryHeader2171(i,o);_WriteNeededAtomicValues(i,o);_fwrite(HEAP32[(HEAP32[(i+16|0)>>2]+120|0)>>2]+8|0,4,1,o);_fwrite(p,4,1,o);_SetAtomicValueIndices(i,0);_SaveOrMarkInstances(i,o,k,n,m,0,960);_RestoreAtomicValueBuckets(i);_GenClose(i,o);_ReturnSaveClassList(i,n);g=HEAP32[p>>2];e=8;break;
case 8:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_EnvBinarySaveInstances.X=1;
function _MarkSingleInstance(h,f,c){for(f=2;;)switch(f){case 2:var a,b,d,e,g;a=h;b=c;e=HEAP32[(HEAP32[(a+16|0)>>2]+120|0)>>2]+8|0;HEAP32[e>>2]=HEAP32[e>>2]+8|0;e=HEAP32[(b+28|0)>>2]+12|0;HEAP32[e>>2]=HEAP32[e>>2]&-5|4;e=HEAP32[(HEAP32[(b+44|0)>>2]|0)>>2]+12|0;HEAP32[e>>2]=HEAP32[e>>2]&-5|4;e=HEAP32[(HEAP32[(a+16|0)>>2]+120|0)>>2]+8|0;HEAP32[e>>2]=HEAP32[e>>2]+((((HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]<<3|0)+8|0)+4|0)+4|0)|0;e=0;f=3;break;case 3:f=e>>>0<HEAPU32[(HEAP32[(b+44|0)>>2]+80|0)>>2]>>>0?4:
13;break;case 4:d=HEAP32[(HEAP32[(b+72|0)>>2]+(e<<2)|0)>>2];f=HEAP32[(HEAP32[(HEAP32[(d|0)>>2]+8|0)>>2]+12|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=0!=(HEAPU32[HEAP32[(d|0)>>2]>>2]>>>1&1|0)?5:10;break;case 5:g=1;f=6;break;case 6:f=g>>>0<=HEAPU32[(HEAP32[(d+8|0)>>2]+8|0)>>2]>>>0?7:9;break;case 7:_MarkNeededAtom(a,HEAPU16[((HEAP32[(d+8|0)>>2]+16|0)+((g-1|0)<<3)|0)>>1]&65535,HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((g-1|0)<<3)|0)+4|0)>>2]);f=8;break;case 8:g=g+1|0;f=6;break;case 9:f=11;break;case 10:_MarkNeededAtom(a,
HEAPU32[(d+4|0)>>2]>>>2&63,HEAP32[(d+8|0)>>2]);f=11;break;case 11:f=12;break;case 12:e=e+1|0;f=3;break;case 13:return;default:assert(0,"bad label: "+f)}}_MarkSingleInstance.X=1;
function _WriteBinaryHeader2171(h,f){var c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]|0)>>2],a=_strlen(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]|0)>>2])+1|0;_fwrite(c,a,1,f);c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]+4|0)>>2];a=_strlen(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+120|0)>>2]+4|0)>>2])+1|0;_fwrite(c,a,1,f)}
function _SaveSingleInstanceBinary(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;b=a;var i,j,k,l=a+4,m=a+12,n;d=h;e=f;g=c;HEAP32[m>>2]=0;HEAP32[b>>2]=HEAPU32[(HEAP32[(g+28|0)>>2]+12|0)>>2]>>>3&536870911;_fwrite(b,4,1,e);HEAP32[b>>2]=HEAPU32[(HEAP32[(HEAP32[(g+44|0)>>2]|0)>>2]+12|0)>>2]>>>3&536870911;_fwrite(b,4,1,e);_fwrite(HEAP32[(g+44|0)>>2]+80|0,4,1,e);i=0;b=3;break;case 3:b=
i>>>0<HEAPU32[(HEAP32[(g+44|0)>>2]+80|0)>>2]>>>0?4:9;break;case 4:k=HEAP32[(HEAP32[(g+72|0)>>2]+(i<<2)|0)>>2];HEAP32[(l|0)>>2]=HEAPU32[(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2]>>>3&536870911;b=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1|0)?5:6;break;case 5:var o=HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2];b=7;break;case 6:o=1;b=7;break;case 7:HEAP32[(l+4|0)>>2]=o;_fwrite(l,8,1,e);HEAP32[m>>2]=HEAP32[m>>2]+HEAP32[(l+4|0)>>2]|0;b=8;break;case 8:i=i+1|0;b=3;break;case 9:b=0!=(HEAP32[m>>2]|0)?
10:11;break;case 10:_fwrite(m,4,1,e);b=11;break;case 11:i=0;b=12;break;case 12:b=i>>>0<HEAPU32[(HEAP32[(g+44|0)>>2]+80|0)>>2]>>>0?13:25;break;case 13:k=HEAP32[(HEAP32[(g+72|0)>>2]+(i<<2)|0)>>2];b=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1|0)?14:15;break;case 14:var p=HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2];b=16;break;case 15:p=1;b=16;break;case 16:n=p;b=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1|0)?17:22;break;case 17:j=1;b=18;break;case 18:b=j>>>0<=n>>>0?19:21;break;case 19:_SaveAtomBinary(d,HEAP16[((HEAP32[(k+
8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1],HEAP32[(((HEAP32[(k+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2],e);b=20;break;case 20:j=j+1|0;b=18;break;case 21:b=23;break;case 22:_SaveAtomBinary(d,HEAPU32[(k+4|0)>>2]>>>2&63,HEAP32[(k+8|0)>>2],e);b=23;break;case 23:b=24;break;case 24:i=i+1|0;b=12;break;case 25:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_SaveSingleInstanceBinary.X=1;
function _BufferedRead(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2]|0)?3:19;break;case 3:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]-HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0)>>2]|0;a=e>>>0<=i>>>0?4:11;break;case 4:g=0;a=5;break;case 5:a=g>>>0<e>>>0?6:8;break;case 6:HEAP8[d+g|0]=HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2]+(g+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+
24|0)>>2]|0)|0];a=7;break;case 7:g=g+1|0;a=5;break;case 8:a=HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0;HEAP32[a>>2]=HEAP32[a>>2]+e|0;a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]|0)?9:10;break;case 9:_FreeReadBuffer(b);a=10;break;case 10:a=18;break;case 11:a=HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0)>>2]>>>0<HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]>>>0?12:17;break;case 12:g=0;a=13;break;case 13:a=
g>>>0<i>>>0?14:16;break;case 14:HEAP8[d+g|0]=HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2]+(g+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0)>>2]|0)|0];a=15;break;case 15:g=g+1|0;a=13;break;case 16:e=e-i|0;d=d+i|0;a=17;break;case 17:_FreeReadBuffer(b);_BufferedRead(b,d,e);a=18;break;case 18:a=32;break;case 19:a=10240<e>>>0?20:23;break;case 20:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]=e;a=e>>>0>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+8|0)>>2]-HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+120|0)>>2]+12|0)>>2]|0)>>>0?21:22;break;case 21:_SystemError(b,STRING_TABLE.__str172145|0,2);_EnvExitRouter(b,1);a=22;break;case 22:a=27;break;case 23:a=10240>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+8|0)>>2]-HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+12|0)>>2]|0)>>>0?24:25;break;case 24:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+8|0)>>2]-HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+12|0)>>2]|0;a=26;break;case 25:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+120|0)>>2]+20|0)>>2]=10240;a=26;break;case 26:a=27;break;case 27:g=_genlongalloc(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2]=g;_GenReadBinary(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]);g=0;a=28;break;case 28:a=g>>>0<e>>>0?29:31;break;case 29:HEAP8[d+g|0]=HEAP8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+16|0)>>2]+g|0];a=30;break;case 30:g=
g+1|0;a=28;break;case 31:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+24|0)>>2]=e;a=HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+20|0)>>2]|0;a=32;break;case 32:return;default:assert(0,"bad label: "+a)}}_BufferedRead.X=1;
function _BinaryLoadInstanceError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str172145|0,4,0);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,STRING_TABLE.__str192147|0);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,HEAP32[(f+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str182146|0,STRING_TABLE.__str202148|0);_PrintClassName(h,STRING_TABLE.__str182146|0,c,1)}
function _CreateSlotValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=0==(i|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=4;b=_EnvCreateMultifield(d,0);HEAP32[(e+8|0)>>2]=b;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=-1;b=12;break;case 4:b=1==(i|0)?5:6;break;case 5:HEAP16[(e+4|0)>>1]=HEAP16[(g|0)>>1];b=_GetBinaryAtomValue(d,g|0);HEAP32[(e+8|0)>>2]=b;b=11;break;case 6:HEAP16[(e+4|0)>>1]=4;j=_EnvCreateMultifield(d,i);HEAP32[(e+8|0)>>2]=j;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=
i-1|0;j=1;b=7;break;case 7:b=j>>>0<=i>>>0?8:10;break;case 8:HEAP16[((HEAP32[(e+8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1]=HEAP16[(g+((j-1|0)<<3)|0)>>1];b=_GetBinaryAtomValue(d,g+((j-1|0)<<3)|0);HEAP32[(((HEAP32[(e+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=b;b=9;break;case 9:j=j+1|0;b=7;break;case 10:b=11;break;case 11:b=12;break;case 12:return;default:assert(0,"bad label: "+b)}}_CreateSlotValue.X=1;
function _GetBinaryAtomValue(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=HEAPU16[(d|0)>>1]&65535;c=2==(c|0)||3==(c|0)||8==(c|0)?3:0==(c|0)?4:1==(c|0)?5:6==(c|0)?6:5==(c|0)?7:8;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];c=10;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+72|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];c=10;break;case 5:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+76|0)>>2]+
(HEAP32[(d+4|0)>>2]<<2)|0)>>2];c=10;break;case 6:a=HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+8|0;c=10;break;case 7:a=0;c=10;break;case 8:_SystemError(b,STRING_TABLE.__str172145|0,1);_EnvExitRouter(b,1);c=9;break;case 9:a=0;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}_GetBinaryAtomValue.X=1;function _EnvIncrementInstanceCount(h,f){var c=f+40|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}function _EnvDecrementInstanceCount(h,f){var c=f+40|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0}
function _HashInstance(h){return((11329*(HEAPU32[(h+12|0)>>2]>>>3&536870911)|0)>>>0)%8191}
function _SaveAtomBinary(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j=b;e=h;d=f;g=c;i=a;HEAP16[(j|0)>>1]=d;d&=65535;d=2==(d|0)||3==(d|0)||8==(d|0)?3:0==(d|0)?4:1==(d|0)?5:7==(d|0)?6:7;break;case 3:HEAP32[(j+4|0)>>2]=HEAPU32[(g+12|0)>>2]>>>3&536870911;d=8;break;case 4:HEAP32[(j+4|0)>>2]=HEAPU32[(g+12|0)>>2]>>>3&536870911;d=8;break;case 5:HEAP32[(j+4|0)>>2]=HEAPU32[(g+12|0)>>
2]>>>3&536870911;d=8;break;case 6:HEAP16[(j|0)>>1]=8;d=_GetFullInstanceName(e,g)+12|0;HEAP32[(j+4|0)>>2]=HEAPU32[d>>2]>>>3&536870911;d=8;break;case 7:HEAP32[(j+4|0)>>2]=-1;d=8;break;case 8:_fwrite(j,8,1,i);STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_SaveAtomBinary.X=1;
function _MarkNeededAtom(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;b=h;a=f;d=c;var e=HEAP32[(HEAP32[(b+16|0)>>2]+120|0)>>2]+8|0;HEAP32[e>>2]=HEAP32[e>>2]+8|0;a=2==(a|0)||3==(a|0)||8==(a|0)?3:0==(a|0)?4:1==(a|0)?5:7==(a|0)?6:7;break;case 3:a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;a=7;break;case 4:a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;a=7;break;case 5:a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;a=7;break;case 6:a=_GetFullInstanceName(b,d)+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;a=7;break;case 7:return;
default:assert(0,"bad label: "+a)}}_MarkNeededAtom.X=1;
function _SaveOrMarkInstancesOfClass(h,f,c,a,b,d,e,g){var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;u=0;i=0!=(HEAP8[(o+116|0)+((q|0)/8&-1)|0]<<24>>24&(1<<(q|0)%8&255)<<24>>24|0)?3:4;break;case 3:j=u;i=22;break;case 4:i=(o+116|0)+((q|0)/8&-1)|0;HEAP8[i]=(HEAP8[i]<<24>>24|(1<<(q|0)%8&255)<<24>>24)&255;i=1==(n|0)?5:6;break;case 5:i=(HEAP32[(HEAP32[((o|0)+8|0)>>2]|0)>>2]|0)==(m|0)?8:6;break;case 6:i=2==(n|0)?7:15;break;case 7:i=0!=(_DefclassInScope(k,o,m)|
0)?8:15;break;case 8:s=_EnvGetNextInstanceInClass(k,o,0);i=9;break;case 9:i=0!=(s|0)?10:14;break;case 10:i=0!=(r|0)?11:12;break;case 11:FUNCTION_TABLE[r](k,l,s);i=12;break;case 12:u=u+1|0;i=13;break;case 13:s=_EnvGetNextInstanceInClass(k,o,s);i=9;break;case 14:i=15;break;case 15:i=0!=(p|0)?16:21;break;case 16:t=0;i=17;break;case 17:i=t>>>0<(HEAPU16[(o+44|0)>>1]&65535)>>>0?18:20;break;case 18:i=HEAP32[(HEAP32[((o+44|0)+4|0)>>2]+(t<<2)|0)>>2];i=_SaveOrMarkInstancesOfClass(k,l,m,n,i,1,q,r);u=u+i|0;i=
19;break;case 19:t=t+1|0;i=17;break;case 20:i=21;break;case 21:j=u;i=22;break;case 22:return j;default:assert(0,"bad label: "+i)}}_SaveOrMarkInstancesOfClass.X=1;
function _InitializeInstanceTable(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=_gm2(c,32764);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+80|0)>>2]=f;a=0;f=3;break;case 3:f=8191>(a|0)?4:6;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+80|0)>>2]+(a<<2)|0)>>2]=0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _CleanupInstances(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+84|0)>>2]|0)?3:4;break;case 3:f=15;break;case 4:a=0;b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+96|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:15;break;case 6:f=0==(HEAP32[(HEAP32[(b|0)>>2]+40|0)>>2]|0)?7:13;break;case 7:f=(HEAP32[(HEAP32[(b|0)>>2]+32|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?8:13;break;case 8:f=0==(HEAP32[((HEAP32[(b|0)>>2]|
0)+8|0)>>2]|0)?9:13;break;case 9:f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+16|0;HEAP32[f>>2]=HEAP32[f>>2]-2|0;f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+20|0;HEAP32[f>>2]=HEAP32[f>>2]-88|0;_DecrementSymbolCount(c,HEAP32[(HEAP32[(b|0)>>2]+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(b|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=0==(a|0)?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+96|0)>>2]=HEAP32[(b+4|0)>>2];f=12;break;case 11:HEAP32[(a+4|0)>>2]=HEAP32[(b+4|0)>>2];f=12;break;case 12:f=b;b=HEAP32[(b+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+
32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=14;break;case 13:a=b;b=HEAP32[(b+4|0)>>2];f=14;break;case 14:f=5;break;case 15:return;default:assert(0,"bad label: "+f)}}_CleanupInstances.X=1;
function _DestroyAllInstances(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveCurrentModule(c);b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+84|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+84|0)>>2]=1;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+172|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:11;break;case 4:_EnvSetCurrentModule(c,HEAP32[(HEAP32[((HEAP32[(a+44|0)>>2]|0)+8|0)>>2]|0)>>2]);_DirectMessage(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+128|0)>>2]+116|0)>>2],a,0,0);a=HEAP32[(a+68|
0)>>2];f=5;break;case 5:f=0!=(a|0)?6:7;break;case 6:var d=HEAPU32[(a+24|0)>>2]>>>1&1;f=8;break;case 7:d=0;f=8;break;case 8:f=0!=(d|0)?9:10;break;case 9:a=HEAP32[(a+68|0)>>2];f=5;break;case 10:f=3;break;case 11:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+84|0)>>2]=b;_RestoreCurrentModule(c);return;default:assert(0,"bad label: "+f)}}_DestroyAllInstances.X=1;
function _RemoveInstanceData(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;_DecrementDefclassBusyCount(a,HEAP32[(b+44|0)>>2]);d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(HEAP32[(b+44|0)>>2]+80|0)>>2]>>>0?4:13;break;case 4:e=HEAP32[(HEAP32[(b+72|0)>>2]+(d<<2)|0)>>2];c=(e|0)==(HEAP32[(e|0)>>2]+32|0)?5:6;break;case 5:c=HEAP32[(e|0)>>2]+24|0;var g=HEAP32[c>>2]-1|0;HEAP32[c>>2]=g;c=0==(g|0)?7:11;break;case 6:c=7;break;case 7:c=0!=(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>1&1|0)?8:9;break;case 8:_MultifieldDeinstall(a,
HEAP32[(e+8|0)>>2]);_AddToMultifieldList(a,HEAP32[(e+8|0)>>2]);c=10;break;case 9:_AtomDeinstall(a,HEAPU32[(e+4|0)>>2]>>>2&63,HEAP32[(e+8|0)>>2]);c=10;break;case 10:HEAP32[(e+8|0)>>2]=0;c=11;break;case 11:c=12;break;case 12:d=d+1|0;c=3;break;case 13:c=0!=(HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]|0)?14:17;break;case 14:_rm(a,HEAP32[(b+72|0)>>2],HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]<<2|0);c=0!=(HEAP32[(HEAP32[(b+44|0)>>2]+76|0)>>2]|0)?15:16;break;case 15:_rm(a,HEAP32[(b+76|0)>>2],12*HEAP32[(HEAP32[(b+44|
0)>>2]+76|0)>>2]|0);c=16;break;case 16:c=17;break;case 17:HEAP32[(b+76|0)>>2]=0;HEAP32[(b+72|0)>>2]=0;return;default:assert(0,"bad label: "+c)}}_RemoveInstanceData.X=1;
function _FindInstanceBySymbol(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k;b=h;d=f;j=_EnvGetCurrentModule(b);e=_FindModuleSeparator(HEAP32[(d+16|0)>>2]);c=0==(e|0)?3:4;break;case 3:k=j;i=d;g=0;c=10;break;case 4:c=1==(e|0)?5:6;break;case 5:k=j;i=_ExtractConstructName(b,e,HEAP32[(d+16|0)>>2]);g=1;c=9;break;case 6:c=_ExtractModuleName(b,e,HEAP32[(d+16|0)>>2]);k=_EnvFindDefmodule(b,HEAP32[(c+16|0)>>2]);i=_ExtractConstructName(b,e,HEAP32[(d+16|0)>>2]);c=0==(k|0)?7:8;break;case 7:a=0;c=11;
break;case 8:g=0;c=9;break;case 9:c=10;break;case 10:a=_FindInstanceInModule(b,i,k,j,g);c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}_FindInstanceBySymbol.X=1;
function _FindInstanceInModule(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;d=_HashInstance(i);m=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+80|0)>>2]+(d<<2)|0)>>2];d=3;break;case 3:d=0!=(m|0)?4:7;break;case 4:d=(HEAP32[(m+28|0)>>2]|0)==(i|0)?5:6;break;case 5:d=7;break;case 6:m=HEAP32[(m+60|0)>>2];d=3;break;case 7:d=0==(m|0)?8:9;break;case 8:e=0;d=22;break;case 9:n=m;d=10;break;case 10:d=0!=(n|0)?11:12;break;case 11:var o=(HEAP32[(n+28|0)>>2]|0)==
(HEAP32[(m+28|0)>>2]|0)&1;d=13;break;case 12:o=0;d=13;break;case 13:d=0!=(o|0)?14:19;break;case 14:d=(HEAP32[(HEAP32[((HEAP32[(n+44|0)>>2]|0)+8|0)>>2]|0)>>2]|0)==(j|0)?15:17;break;case 15:d=0!=(_DefclassInScope(g,HEAP32[(n+44|0)>>2],k)|0)?16:17;break;case 16:e=n;d=22;break;case 17:d=18;break;case 18:n=HEAP32[(n+60|0)>>2];d=10;break;case 19:d=0==(l|0)?20:21;break;case 20:e=0;d=22;break;case 21:_MarkModulesAsUnvisited(g);e=_FindImportedInstance(g,j,k,m);d=22;break;case 22:return e;default:assert(0,
"bad label: "+d)}}_FindInstanceInModule.X=1;
function _FindImportedInstance(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0!=(HEAP32[(g+20|0)>>2]|0)?3:4;break;case 3:d=0;b=29;break;case 4:HEAP32[(g+20|0)>>2]=1;k=HEAP32[(g+12|0)>>2];b=5;break;case 5:b=0!=(k|0)?6:19;break;case 6:g=_EnvFindDefmodule(e,HEAP32[(HEAP32[(k|0)>>2]+16|0)>>2]);l=j;b=7;break;case 7:b=0!=(l|0)?8:9;break;case 8:var m=(HEAP32[(l+28|0)>>2]|0)==(HEAP32[(j+28|0)>>2]|0)&1;b=10;break;case 9:m=0;b=10;break;case 10:b=0!=(m|0)?11:16;break;case 11:b=
(HEAP32[(HEAP32[((HEAP32[(l+44|0)>>2]|0)+8|0)>>2]|0)>>2]|0)==(g|0)?12:14;break;case 12:b=0!=(_DefclassInScope(e,HEAP32[(l+44|0)>>2],i)|0)?13:14;break;case 13:d=l;b=29;break;case 14:b=15;break;case 15:l=HEAP32[(l+60|0)>>2];b=7;break;case 16:l=_FindImportedInstance(e,g,i,j);b=0!=(l|0)?17:18;break;case 17:d=l;b=29;break;case 18:k=HEAP32[(k+12|0)>>2];b=5;break;case 19:l=j;b=20;break;case 20:b=0!=(l|0)?21:22;break;case 21:var n=(HEAP32[(l+28|0)>>2]|0)==(HEAP32[(j+28|0)>>2]|0)&1;b=23;break;case 22:n=0;
b=23;break;case 23:b=0!=(n|0)?24:28;break;case 24:b=0!=(HEAPU32[(HEAP32[(l+44|0)>>2]+24|0)>>2]>>>1&1|0)?25:26;break;case 25:d=l;b=29;break;case 26:b=27;break;case 27:l=HEAP32[(l+60|0)>>2];b=20;break;case 28:d=0;b=29;break;case 29:return d;default:assert(0,"bad label: "+b)}}_FindImportedInstance.X=1;
function _FindInstanceSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;a=h;b=f;d=_FindInstanceTemplateSlot(a,HEAP32[(b+44|0)>>2],c);a=-1!=(d|0)?3:4;break;case 3:var e=HEAP32[(HEAP32[(b+72|0)>>2]+(d<<2)|0)>>2];a=5;break;case 4:e=0;a=5;break;case 5:return e;default:assert(0,"bad label: "+a)}}
function _FindInstanceTemplateSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;a=h;d=f;e=_FindSlotNameID(a,c)<<16>>16;a=-1==(e|0)?3:4;break;case 3:b=-1;a=7;break;case 4:a=(e|0)>(HEAP32[(d+84|0)>>2]|0)?5:6;break;case 5:b=-1;a=7;break;case 6:b=HEAP32[(HEAP32[(d+68|0)>>2]+(e<<2)|0)>>2]-1|0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _PutSlotValue(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m;i=h;j=f;k=c;l=a;m=b;e=0==(_ValidSlotValue(i,l,HEAP32[(k|0)>>2],j,d)|0)?3:4;break;case 3:HEAP16[(m+4|0)>>1]=2;HEAP32[(m+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2];g=0;e=5;break;case 4:g=_DirectPutSlotValue(i,j,k,l,m);e=5;break;case 5:return g;default:assert(0,"bad label: "+e)}}_PutSlotValue.X=1;
function _ValidSlotValue(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;d=(HEAP32[(i+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]|0)>>2]|0)?3:4;break;case 3:e=1;d=19;break;case 4:d=0==(HEAPU32[j>>2]>>>1&1|0)?5:8;break;case 5:d=4==(HEAPU16[(i+4|0)>>1]&65535|0)?6:8;break;case 6:d=1!=((HEAP32[(i+16|0)>>2]-HEAP32[(i+12|0)>>2]|0)+1|0)?7:8;break;case 7:_PrintErrorID(g,STRING_TABLE.__str2172|0,7,0);_PrintDataObject(g,STRING_TABLE.__str12173|0,i);_EnvPrintRouter(g,
STRING_TABLE.__str12173|0,STRING_TABLE.__str132185|0);_PrintSlot(g,STRING_TABLE.__str12173|0,j,k,l);_EnvPrintRouter(g,STRING_TABLE.__str12173|0,STRING_TABLE.__str122184|0);_SetEvaluationError(g,1);e=0;d=19;break;case 8:d=175==(HEAPU16[(i+4|0)>>1]&65535|0)?9:10;break;case 9:_PrintErrorID(g,STRING_TABLE.__str2172|0,8,0);_EnvPrintRouter(g,STRING_TABLE.__str12173|0,STRING_TABLE.__str142186|0);_PrintSlot(g,STRING_TABLE.__str12173|0,j,k,l);_EnvPrintRouter(g,STRING_TABLE.__str12173|0,STRING_TABLE.__str122184|
0);_SetEvaluationError(g,1);e=0;d=19;break;case 10:d=0!=(_EnvGetDynamicConstraintChecking(g)|0)?11:18;break;case 11:m=_ConstraintCheckDataObject(g,i,HEAP32[(j+20|0)>>2]);d=0!=(m|0)?12:17;break;case 12:_PrintErrorID(g,STRING_TABLE.__str152187|0,1,0);d=4==(HEAPU16[(i+4|0)>>1]&65535|0)?13:15;break;case 13:d=0==(HEAPU32[j>>2]>>>1&1|0)?14:15;break;case 14:_PrintAtom(g,STRING_TABLE.__str12173|0,HEAPU16[((HEAP32[(i+8|0)>>2]+16|0)+(((HEAP32[(i+12|0)>>2]+1|0)-1|0)<<3)|0)>>1]&65535,HEAP32[(((HEAP32[(i+8|0)>>
2]+16|0)+(((HEAP32[(i+16|0)>>2]+1|0)-1|0)<<3)|0)+4|0)>>2]);d=16;break;case 15:_PrintDataObject(g,STRING_TABLE.__str12173|0,i);d=16;break;case 16:_EnvPrintRouter(g,STRING_TABLE.__str12173|0,STRING_TABLE.__str162188|0);_PrintSlot(g,STRING_TABLE.__str12173|0,j,k,l);_ConstraintViolationErrorMessage(g,0,0,0,0,0,0,m,HEAP32[(j+20|0)>>2],0);_SetEvaluationError(g,1);e=0;d=19;break;case 17:d=18;break;case 18:e=1;d=19;break;case 19:return e;default:assert(0,"bad label: "+d)}}_ValidSlotValue.X=1;
function _DirectPutSlotValue(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r=d;i=h;j=f;k=c;l=a;m=b;HEAP16[(m+4|0)>>1]=2;HEAP32[(m+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2];e=0==(l|0)?3:4;break;case 3:_SystemError(i,STRING_TABLE.__str2172|0,1);_EnvExitRouter(i,1);e=12;break;case 4:e=(HEAP32[(l+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>
2]+148|0)>>2]|0)>>2]|0)?5:11;break;case 5:e=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>6&1|0)?6:9;break;case 6:l=r;e=0!=(_EvaluateAndStoreInDataObject(i,HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1,HEAP32[(HEAP32[(k|0)>>2]+16|0)>>2],l,1)|0)?8:7;break;case 7:g=0;e=55;break;case 8:e=10;break;case 9:l=HEAP32[(HEAP32[(k|0)>>2]+16|0)>>2];e=10;break;case 10:e=11;break;case 11:e=12;break;case 12:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?13:17;break;case 13:e=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>9&1|0)?
14:17;break;case 14:e=0!=(HEAPU32[(HEAP32[(j+44|0)>>2]+24|0)>>2]>>>3&1|0)?16:15;break;case 15:e=0!=(HEAP32[HEAP32[(k|0)>>2]>>2]&1|0)?16:17;break;case 16:_PrintErrorID(i,STRING_TABLE.__str2172|0,5,0);_EnvPrintRouter(i,STRING_TABLE.__str12173|0,STRING_TABLE.__str22174|0);_EnvPrintRouter(i,STRING_TABLE.__str12173|0,STRING_TABLE.__str32175|0);_SetEvaluationError(i,1);g=0;e=55;break;case 17:e=0!=(HEAP32[(j+20|0)>>2]|0)?18:24;break;case 18:q=HEAP32[(j+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(j+44|0)>>2]+68|
0)>>2]+(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+8|0)>>2]<<2)|0)>>2]-1|0)<<2)|0;q=HEAP32[(j+20|0)>>2]+12*((q-HEAP32[(j+72|0)>>2]|0)/4&-1)|0;e=0==(HEAP32[(q+8|0)>>2]|0)?19:23;break;case 19:e=q+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-253|(HEAPU32[(k+4|0)>>2]>>>2&63)<<2;HEAP32[(q+8|0)>>2]=HEAP32[(k+8|0)>>2];e=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1|0)?20:21;break;case 20:_MultifieldInstall(i,HEAP32[(q+8|0)>>2]);e=22;break;case 21:_AtomInstall(i,HEAPU32[(q+4|0)>>2]>>>2&63,HEAP32[(q+8|0)>>2]);e=22;break;case 22:e=
23;break;case 23:e=24;break;case 24:e=0==(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>1&1|0)?25:29;break;case 25:_AtomDeinstall(i,HEAPU32[(k+4|0)>>2]>>>2&63,HEAP32[(k+8|0)>>2]);e=4==(HEAPU16[(l+4|0)>>1]&65535|0)?26:27;break;case 26:e=k+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-253|(HEAPU16[((HEAP32[(l+8|0)>>2]+16|0)+(((HEAP32[(l+12|0)>>2]+1|0)-1|0)<<3)|0)>>1]&63)<<2;HEAP32[(k+8|0)>>2]=HEAP32[(((HEAP32[(l+8|0)>>2]+16|0)+(((HEAP32[(l+12|0)>>2]+1|0)-1|0)<<3)|0)+4|0)>>2];e=28;break;case 27:e=k+4|0;HEAP32[e>>2]=HEAP32[e>>2]&
-253|(HEAPU16[(l+4|0)>>1]&63)<<2;HEAP32[(k+8|0)>>2]=HEAP32[(l+8|0)>>2];e=28;break;case 28:_AtomInstall(i,HEAPU32[(k+4|0)>>2]>>>2&63,HEAP32[(k+8|0)>>2]);HEAP16[(m+4|0)>>1]=HEAPU32[(k+4|0)>>2]>>>2&63;HEAP32[(m+8|0)>>2]=HEAP32[(k+8|0)>>2];e=37;break;case 29:_MultifieldDeinstall(i,HEAP32[(k+8|0)>>2]);_AddToMultifieldList(i,HEAP32[(k+8|0)>>2]);e=k+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-253|16;e=4==(HEAPU16[(l+4|0)>>1]&65535|0)?30:35;break;case 30:n=_CreateMultifield2(i,(HEAP32[(l+16|0)>>2]-HEAP32[(l+12|0)>>2]|
0)+1|0);HEAP32[(k+8|0)>>2]=n;n=1;o=HEAP32[(l+12|0)>>2]+1|0;e=31;break;case 31:e=(n|0)<=((HEAP32[(l+16|0)>>2]-HEAP32[(l+12|0)>>2]|0)+1|0)?32:34;break;case 32:HEAP16[((HEAP32[(k+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=HEAP16[((HEAP32[(l+8|0)>>2]+16|0)+((o-1|0)<<3)|0)>>1];HEAP32[(((HEAP32[(k+8|0)>>2]+16|0)+((n-1|0)<<3)|0)+4|0)>>2]=HEAP32[(((HEAP32[(l+8|0)>>2]+16|0)+((o-1|0)<<3)|0)+4|0)>>2];e=33;break;case 33:n=n+1|0;o=o+1|0;e=31;break;case 34:e=36;break;case 35:e=_CreateMultifield2(i,1);HEAP32[(k+8|0)>>2]=
e;HEAP16[(HEAP32[(k+8|0)>>2]+16|0)>>1]=HEAP16[(l+4|0)>>1];HEAP32[((HEAP32[(k+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(l+8|0)>>2];e=36;break;case 36:_MultifieldInstall(i,HEAP32[(k+8|0)>>2]);HEAP16[(m+4|0)>>1]=4;HEAP32[(m+8|0)>>2]=HEAP32[(k+8|0)>>2];HEAP32[(m+12|0)>>2]=0;HEAP32[(m+16|0)>>2]=HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]-1|0;e=37;break;case 37:e=k+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-3|(HEAPU32[(j+24|0)>>2]>>>3&1)<<1;e=0!=(HEAPU32[(HEAP32[(j+44|0)>>2]+24|0)>>2]>>>5&1|0)?38:45;break;case 38:e=0!=(HEAP32[HEAP32[(k|
0)>>2]>>2]&1|0)?39:40;break;case 39:_EnvPrintRouter(i,STRING_TABLE.__str42176|0,STRING_TABLE.__str52177|0);e=41;break;case 40:_EnvPrintRouter(i,STRING_TABLE.__str42176|0,STRING_TABLE.__str62178|0);e=41;break;case 41:_EnvPrintRouter(i,STRING_TABLE.__str42176|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str42176|0,STRING_TABLE.__str72179|0);_EnvPrintRouter(i,STRING_TABLE.__str42176|0,HEAP32[(HEAP32[(j+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(i,
STRING_TABLE.__str42176|0,STRING_TABLE.__str82180|0);e=4!=(HEAPU32[(k+4|0)>>2]>>>2&63|0)?42:43;break;case 42:_PrintAtom(i,STRING_TABLE.__str42176|0,HEAPU32[(k+4|0)>>2]>>>2&63,HEAP32[(k+8|0)>>2]);e=44;break;case 43:_PrintMultifield(i,STRING_TABLE.__str42176|0,HEAP32[(k+8|0)>>2],0,HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]-1|0,1);e=44;break;case 44:_EnvPrintRouter(i,STRING_TABLE.__str42176|0,STRING_TABLE.__str92181|0);e=45;break;case 45:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+116|0)>>2]+92|0)>>2]=1;e=0!=(HEAPU32[(HEAP32[(j+
44|0)>>2]+24|0)>>2]>>>3&1|0)?46:54;break;case 46:e=0!=(HEAPU32[HEAP32[(k|0)>>2]>>2]>>>9&1|0)?47:54;break;case 47:e=0!=(HEAP32[HEAP32[(k|0)>>2]>>2]&1|0)?48:52;break;case 48:p=_GetTraversalID(i);e=-1!=(p|0)?49:50;break;case 49:_NetworkModifyForSharedSlot(i,p,HEAP32[(HEAP32[(k|0)>>2]+4|0)>>2],HEAP32[(k|0)>>2]);_ReleaseTraversalID(i);e=51;break;case 50:_PrintErrorID(i,STRING_TABLE.__str2172|0,6,0);_EnvPrintRouter(i,STRING_TABLE.__str12173|0,STRING_TABLE.__str102182|0);_EnvPrintRouter(i,STRING_TABLE.__str12173|
0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str12173|0,STRING_TABLE.__str112183|0);e=i;var s=_GetConstructNameString(HEAP32[(HEAP32[(k|0)>>2]+4|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str12173|0,s);_EnvPrintRouter(i,STRING_TABLE.__str12173|0,STRING_TABLE.__str122184|0);e=51;break;case 51:e=53;break;case 52:_ObjectNetworkAction(i,3,j,HEAP32[(HEAP32[(HEAP32[(k|0)>>2]+8|0)>>2]+8|0)>>2]);e=53;break;case 53:e=54;break;case 54:g=1;e=55;break;
case 55:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_DirectPutSlotValue.X=1;function _EnvGetInstancesChanged(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]+92|0)>>2]}function _EnvSetInstancesChanged(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+116|0)>>2]+92|0)>>2]=f}
function _NetworkModifyForSharedSlot(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;b=0!=(HEAP8[(g+116|0)+((e|0)/8&-1)|0]<<24>>24&(1<<(e|0)%8&255)<<24>>24|0)?3:4;break;case 3:b=18;break;case 4:b=(g+116|0)+((e|0)/8&-1)|0;HEAP8[b]=(HEAP8[b]<<24>>24|(1<<(e|0)%8&255)<<24>>24)&255;b=HEAPU32[(HEAP32[(i+8|0)>>2]+8|0)>>2]>>>0>HEAPU32[(g+84|0)>>2]>>>0?5:6;break;case 5:b=14;break;case 6:b=0==(HEAP32[(HEAP32[(g+68|0)>>2]+(HEAP32[(HEAP32[(i+8|0)>>2]+8|0)>>2]<<2)|0)>>2]|0)?7:8;break;
case 7:b=14;break;case 8:b=(HEAP32[(HEAP32[(g+64|0)>>2]+((HEAP32[(HEAP32[(g+68|0)>>2]+(HEAP32[(HEAP32[(i+8|0)>>2]+8|0)>>2]<<2)|0)>>2]-1|0)<<2)|0)>>2]|0)==(i|0)?9:14;break;case 9:j=HEAP32[(g+88|0)>>2];b=10;break;case 10:b=0!=(j|0)?11:13;break;case 11:_ObjectNetworkAction(d,3,j,HEAP32[(HEAP32[(i+8|0)>>2]+8|0)>>2]);b=12;break;case 12:j=HEAP32[(j+52|0)>>2];b=10;break;case 13:b=14;break;case 14:k=0;b=15;break;case 15:b=k>>>0<(HEAPU16[(g+44|0)>>1]&65535)>>>0?16:18;break;case 16:_NetworkModifyForSharedSlot(d,
e,HEAP32[(HEAP32[((g+44|0)+4|0)>>2]+(k<<2)|0)>>2],i);b=17;break;case 17:k=k+1|0;b=15;break;case 18:return;default:assert(0,"bad label: "+b)}}_NetworkModifyForSharedSlot.X=1;
function _PrintSlot(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;_EnvPrintRouter(e,g,STRING_TABLE.__str222194|0);_EnvPrintRouter(e,g,HEAP32[(HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2]+16|0)>>2]);d=0!=(j|0)?3:4;break;case 3:_EnvPrintRouter(e,g,STRING_TABLE.__str232195|0);_EnvPrintRouter(e,g,HEAP32[(HEAP32[(j+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,g,STRING_TABLE.__str242196|0);d=7;break;case 4:d=0!=(HEAP32[(i+4|0)>>2]|0)?5:6;break;case 5:_EnvPrintRouter(e,g,STRING_TABLE.__str252197|
0);d=e;var l=g,m=_GetConstructNameString(HEAP32[(i+4|0)>>2]);_EnvPrintRouter(d,l,m);d=6;break;case 6:d=7;break;case 7:_EnvPrintRouter(e,g,STRING_TABLE.__str262198|0);d=0!=(k|0)?8:9;break;case 8:_EnvPrintRouter(e,g,k);d=10;break;case 9:_PrintHandler(e,g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2],0);d=10;break;case 10:return;default:assert(0,"bad label: "+d)}}_PrintSlot.X=1;
function _CheckInstance(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;_EvaluateExpression(d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],i);a=7==(HEAPU16[(i+4|0)>>1]&65535|0)?3:6;break;case 3:g=HEAP32[(i+8|0)>>2];a=1==(HEAPU32[(g+24|0)>>2]>>>1&1|0)?4:5;break;case 4:_StaleInstanceAddress(d,e,0);_SetEvaluationError(d,1);b=0;a=14;break;case 5:a=
13;break;case 6:a=8==(HEAPU16[(i+4|0)>>1]&65535|0)?8:7;break;case 7:a=2==(HEAPU16[(i+4|0)>>1]&65535|0)?8:11;break;case 8:g=_FindInstanceBySymbol(d,HEAP32[(i+8|0)>>2]);a=0==(g|0)?9:10;break;case 9:_NoInstanceError(d,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],e);b=0;a=14;break;case 10:a=12;break;case 11:_PrintErrorID(d,STRING_TABLE.__str2172|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str12173|0,STRING_TABLE.__str172189|0);_EnvPrintRouter(d,STRING_TABLE.__str12173|0,e);_EnvPrintRouter(d,STRING_TABLE.__str12173|
0,STRING_TABLE.__str122184|0);_SetEvaluationError(d,1);b=0;a=14;break;case 12:a=13;break;case 13:b=g;a=14;break;case 14:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_CheckInstance.X=1;
function _StaleInstanceAddress(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;b=h;a=f;d=c;_PrintErrorID(b,STRING_TABLE.__str2172|0,4,0);_EnvPrintRouter(b,STRING_TABLE.__str12173|0,STRING_TABLE.__str202192|0);_EnvPrintRouter(b,STRING_TABLE.__str12173|0,a);a=0<(d|0)?3:4;break;case 3:_EnvPrintRouter(b,STRING_TABLE.__str12173|0,STRING_TABLE.__str212193|0);_PrintLongInteger(b,STRING_TABLE.__str12173|0,d);a=4;break;case 4:_EnvPrintRouter(b,STRING_TABLE.__str12173|0,STRING_TABLE.__str122184|0);return;default:assert(0,
"bad label: "+a)}}function _NoInstanceError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str2172|0,2,0);_EnvPrintRouter(h,STRING_TABLE.__str12173|0,STRING_TABLE.__str182190|0);_EnvPrintRouter(h,STRING_TABLE.__str12173|0,f);_EnvPrintRouter(h,STRING_TABLE.__str12173|0,STRING_TABLE.__str192191|0);_EnvPrintRouter(h,STRING_TABLE.__str12173|0,c);_EnvPrintRouter(h,STRING_TABLE.__str12173|0,STRING_TABLE.__str122184|0);_SetEvaluationError(h,1)}
function _PrintInstanceNameAndClass(h,f,c,a){_EnvPrintRouter(h,f,STRING_TABLE.__str272199|0);var b=_EnvGetInstanceName(h,c);_EnvPrintRouter(h,f,b);_EnvPrintRouter(h,f,STRING_TABLE.__str282200|0);_PrintClassName(h,f,HEAP32[(c+44|0)>>2],a)}
function _PrintInstanceName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAPU32[(e+24|0)>>2]>>>1&1|0)?3:4;break;case 3:_EnvPrintRouter(b,d,STRING_TABLE.__str292201|0);_EnvPrintRouter(b,d,HEAP32[(HEAP32[(e+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str302202|0);a=5;break;case 4:_EnvPrintRouter(b,d,STRING_TABLE.__str272199|0);a=b;var g=d,i=_GetFullInstanceName(b,e)+16|0;_EnvPrintRouter(a,g,HEAP32[i>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str242196|0);a=5;break;case 5:return;
default:assert(0,"bad label: "+a)}}_PrintInstanceName.X=1;
function _PrintInstanceLongForm(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+212|0)>>2]+8|0)>>2]|0)?3:7;break;case 3:a=(e|0)==(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]|0)?4:5;break;case 4:_EnvPrintRouter(b,d,STRING_TABLE.__str312203|0);a=6;break;case 5:_EnvPrintRouter(b,d,STRING_TABLE.__str272199|0);a=b;var g=d,i=_GetFullInstanceName(b,e)+16|0;_EnvPrintRouter(a,g,HEAP32[i>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str242196|0);a=6;break;case 6:a=
18;break;case 7:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?8:9;break;case 8:_EnvPrintRouter(b,d,STRING_TABLE.__str322204|0);a=9;break;case 9:a=(e|0)==(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]|0)?10:11;break;case 10:_EnvPrintRouter(b,d,STRING_TABLE.__str332205|0);a=15;break;case 11:a=0!=(HEAPU32[(e+24|0)>>2]>>>1&1|0)?12:13;break;case 12:_EnvPrintRouter(b,d,STRING_TABLE.__str342206|0);_EnvPrintRouter(b,d,HEAP32[(HEAP32[(e+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str352207|
0);a=14;break;case 13:_EnvPrintRouter(b,d,STRING_TABLE.__str362208|0);a=b;g=d;i=_GetFullInstanceName(b,e)+16|0;_EnvPrintRouter(a,g,HEAP32[i>>2]);_EnvPrintRouter(b,d,STRING_TABLE.__str352207|0);a=14;break;case 14:a=15;break;case 15:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?16:17;break;case 16:_EnvPrintRouter(b,d,STRING_TABLE.__str322204|0);a=17;break;case 17:a=18;break;case 18:return;default:assert(0,"bad label: "+a)}}_PrintInstanceLongForm.X=1;
function _DecrementObjectBasisCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=(b|0)+8|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0==(HEAP32[((b|0)+8|0)>>2]|0)?3:17;break;case 3:c=0!=(HEAPU32[(b+24|0)>>2]>>>1&1|0)?4:5;break;case 4:_RemoveInstanceData(a,b);c=5;break;case 5:c=0!=(HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]|0)?6:16;break;case 6:d=0;c=7;break;case 7:c=d>>>0<HEAPU32[(HEAP32[(b+44|0)>>2]+80|0)>>2]>>>0?8:15;break;case 8:c=0!=(HEAP32[((HEAP32[(b+20|0)>>2]+12*d|0)+8|0)>>2]|0)?9:13;break;case 9:c=
0!=(HEAPU32[HEAP32[(HEAP32[(b+20|0)>>2]+12*d|0)>>2]>>2]>>>1&1|0)?10:11;break;case 10:_MultifieldDeinstall(a,HEAP32[((HEAP32[(b+20|0)>>2]+12*d|0)+8|0)>>2]);c=12;break;case 11:_AtomDeinstall(a,HEAPU32[((HEAP32[(b+20|0)>>2]+12*d|0)+4|0)>>2]>>>2&63,HEAP32[((HEAP32[(b+20|0)>>2]+12*d|0)+8|0)>>2]);c=12;break;case 12:c=13;break;case 13:c=14;break;case 14:d=d+1|0;c=7;break;case 15:_rm(a,HEAP32[(b+20|0)>>2],12*HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]|0);HEAP32[(b+20|0)>>2]=0;c=16;break;case 16:c=17;break;case 17:return;
default:assert(0,"bad label: "+c)}}_DecrementObjectBasisCount.X=1;function _NetworkSynchronized(h,f){return HEAPU32[(f+24|0)>>2]>>>4&1}
function _IncrementObjectBasisCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(HEAP32[((b|0)+8|0)>>2]|0)?3:10;break;case 3:c=0!=(HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]|0)?4:9;break;case 4:c=_gm2(a,12*HEAP32[(HEAP32[(b+44|0)>>2]+80|0)>>2]|0);HEAP32[(b+20|0)>>2]=c;d=0;c=5;break;case 5:c=d>>>0<HEAPU32[(HEAP32[(b+44|0)>>2]+80|0)>>2]>>>0?6:8;break;case 6:HEAP32[(HEAP32[(b+20|0)>>2]+12*d|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+72|0)>>2]+(d<<2)|0)>>2]|0)>>2];HEAP32[((HEAP32[(b+20|0)>>2]+12*d|
0)+8|0)>>2]=0;c=7;break;case 7:d=d+1|0;c=5;break;case 8:c=9;break;case 9:c=10;break;case 10:a=(b|0)+8|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;return;default:assert(0,"bad label: "+c)}}_IncrementObjectBasisCount.X=1;function _MatchObjectFunction(h,f){_ObjectNetworkAction(h,1,f,-1)}
function _InitializeInstanceCommand(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];d=_CheckInstance(a,STRING_TABLE.__str2251|0);c=0==(d|0)?3:4;break;case 3:c=6;break;case 4:c=1==(_CoreInitializeInstance(a,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2])|0)?5:6;break;case 5:HEAP16[(b+4|0)>>1]=8;HEAP32[(b+8|0)>>2]=HEAP32[(d+28|0)>>2];c=6;break;case 6:return;
default:assert(0,"bad label: "+c)}}_InitializeInstanceCommand.X=1;
function _CoreInitializeInstance(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=0==(HEAP32[(g+24|0)>>2]&1|0)?3:4;break;case 3:_PrintErrorID(e,STRING_TABLE.__str12252|0,7,0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str272278|0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(g+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str22253|
0,STRING_TABLE.__str282279|0);_SetEvaluationError(e,1);d=0;b=12;break;case 4:b=g+40|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=g+24|0;HEAP32[b>>2]&=-2;b=g+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-9|8;b=g+24|0;HEAP32[b>>2]&=-5;b=0==(_InsertSlotOverrides(e,g,i)|0)?5:6;break;case 5:d=g+24|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=g+40|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=0;b=12;break;case 6:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+116|0)>>2]+88|0)>>2]|0)?7:8;break;case 7:_DirectMessage(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|
0)>>2]+112|0)>>2],g,j,0);b=9;break;case 8:_EvaluateClassDefaults(e,g);b=9;break;case 9:b=g+40|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;b=g+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?10:11;break;case 10:_PrintErrorID(e,STRING_TABLE.__str12252|0,8,0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str292280|0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(g+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str102261|
0);d=0;b=12;break;case 11:d=g+24|0;HEAP32[d>>2]&=-9;d=0==(HEAPU32[(g+24|0)>>2]>>>2&1|0)?0:1;b=12;break;case 12:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_CoreInitializeInstance.X=1;
function _MakeInstanceCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],i);a=2!=(HEAPU16[(i+4|0)>>1]&65535|0)?3:5;break;case 3:a=8!=(HEAPU16[(i+4|0)>>1]&65535|0)?4:5;break;case 4:_PrintErrorID(b,
STRING_TABLE.__str12252|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str32254|0);_SetEvaluationError(b,1);a=17;break;case 5:e=HEAP32[(i+8|0)>>2];a=82==(HEAPU16[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)>>1]&65535|0)?6:7;break;case 6:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+4|0)>>2];a=12;break;case 7:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],i);a=2!=(HEAPU16[(i+4|0)>>1]&65535|0)?8:9;break;case 8:_PrintErrorID(b,STRING_TABLE.__str12252|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str42255|0);_SetEvaluationError(b,1);a=17;break;case 9:j=_LookupDefclassInScope(b,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2]);a=0==(j|0)?10:11;break;case 10:_ClassExistError(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(i+8|0)>>2]+
16|0)>>2]);_SetEvaluationError(b,1);a=17;break;case 11:a=12;break;case 12:g=_BuildInstance(b,e,j,1);a=0==(g|0)?13:14;break;case 13:a=17;break;case 14:a=1==(_CoreInitializeInstance(b,g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2])|0)?15:16;break;case 15:HEAP16[(d+4|0)>>1]=8;a=_GetFullInstanceName(b,g);HEAP32[(d+8|0)>>2]=a;a=17;break;case 16:_QuashInstance(b,g);a=17;break;case 17:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
_MakeInstanceCommand.X=1;
function _BuildInstance(h,f,c,a){var b=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b,n=b+4,o,p,q=b+8;g=h;i=f;j=c;k=a;d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:5;break;case 3:d=0!=(HEAPU32[(j+24|0)>>2]>>>3&1|0)?4:5;break;case 4:_PrintErrorID(g,STRING_TABLE.__str12252|0,10,0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str72258|0);_EnvPrintRouter(g,
STRING_TABLE.__str22253|0,STRING_TABLE.__str82259|0);_SetEvaluationError(g,1);e=0;d=43;break;case 5:d=0!=(HEAPU32[(j+24|0)>>2]>>>2&1|0)?6:7;break;case 6:_PrintErrorID(g,STRING_TABLE.__str12252|0,3,0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str92260|0);e=g;d=_GetConstructNameString(j);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,d);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str102261|0);_SetEvaluationError(g,1);e=0;d=43;break;case 7:o=_FindModuleSeparator(HEAP32[(i+
16|0)>>2]);d=0!=(o|0)?8:12;break;case 8:p=_ExtractModuleName(g,o,HEAP32[(i+16|0)>>2]);d=0==(p|0)?10:9;break;case 9:d=(p|0)!=(HEAP32[(HEAP32[(HEAP32[((j|0)+8|0)>>2]|0)>>2]|0)>>2]|0)?10:11;break;case 10:_PrintErrorID(g,STRING_TABLE.__str12252|0,11,1);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str112262|0);_SetEvaluationError(g,1);e=0;d=43;break;case 11:i=_ExtractConstructName(g,o,HEAP32[(i+16|0)>>2]);d=12;break;case 12:l=_InstanceLocationInfo(g,j,i,m,n);d=0!=(l|0)?13:23;break;case 13:d=
0==(HEAP32[(l+24|0)>>2]&1|0)?14:15;break;case 14:_PrintErrorID(g,STRING_TABLE.__str12252|0,4,0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str122263|0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,HEAP32[(i+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str132264|0);_SetEvaluationError(g,1);e=0;d=43;break;case 15:d=l+40|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=i+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=0==(HEAPU32[(l+24|0)>>2]>>>1&1|0)?16:20;break;case 16:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+116|0)>>2]+88|0)>>2]|0)?17:18;break;case 17:_DirectMessage(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+128|0)>>2]+116|0)>>2],l,0,0);d=19;break;case 18:_QuashInstance(g,l);d=19;break;case 19:d=20;break;case 20:d=l+40|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_DecrementSymbolCount(g,i);d=0==(HEAPU32[(l+24|0)>>2]>>>1&1|0)?21:22;break;case 21:_PrintErrorID(g,STRING_TABLE.__str12252|0,5,0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str142265|0);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,HEAP32[(i+
16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str22253|0,STRING_TABLE.__str102261|0);_SetEvaluationError(g,1);e=0;d=43;break;case 22:d=23;break;case 23:d=_NewInstance(g);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]=d;d=0==(_AddLogicalDependencies(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2],0)|0)?24:25;break;case 24:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]=0;d=43;break;case 25:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+28|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]=j;_BuildDefaultSlots(g,k);HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+116|0)>>2]+180|0)>>2]+36|0)>>2]=HEAP32[n>>2];d=0==(HEAP32[m>>2]|0)?26:29;break;case 26:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+60|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[n>>2]<<2)|0)>>2];d=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[n>>2]<<2)|0)>>2]|0)?27:28;break;case 27:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[n>>2]<<2)|0)>>2]+56|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+116|0)>>2]+180|0)>>2];d=28;break;case 28:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[n>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=32;break;case 29:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+60|0)>>2]=HEAP32[(HEAP32[m>>2]+60|0)>>2];d=0!=(HEAP32[(HEAP32[m>>2]+60|0)>>2]|0)?30:31;break;case 30:HEAP32[(HEAP32[(HEAP32[m>>2]+60|0)>>2]+56|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=31;break;
case 31:HEAP32[(HEAP32[m>>2]+60|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+56|0)>>2]=HEAP32[m>>2];d=32;break;case 32:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+88|0)>>2]|0)?33:34;break;case 33:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+88|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=35;break;case 34:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+92|0)>>2]+52|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=35;break;case 35:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+92|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+92|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
116|0)>>2]+172|0)>>2]|0)?36:37;break;case 36:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+172|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=38;break;case 37:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+184|0)>>2]+68|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];d=38;break;case 38:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+184|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
116|0)>>2]+184|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+92|0)>>2]=1;_InstallInstance(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2],1);l=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+180|0)>>2]=0;d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+116|0)>>2]+88|0)>>2]|0)?39:40;break;case 39:_DirectMessage(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+128|0)>>2]+120|0)>>2],l,
q,0);d=40;break;case 40:d=0!=(HEAPU32[(HEAP32[(l+44|0)>>2]+24|0)>>2]>>>3&1|0)?41:42;break;case 41:_ObjectNetworkAction(g,1,l,-1);d=42;break;case 42:e=l;d=43;break;case 43:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_BuildInstance.X=1;
function _GetFullInstanceName(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;a=(e|0)==(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]|0)?3:4;break;case 3:b=_EnvAddSymbol(d,STRING_TABLE.__str52256|0);a=9;break;case 4:a=0!=(HEAPU32[(e+24|0)>>2]>>>1&1|0)?5:6;break;case 5:b=HEAP32[(e+28|0)>>2];a=9;break;case 6:a=HEAP32[(HEAP32[((HEAP32[(e+44|0)>>2]|0)+8|0)>>2]|0)>>2];g=_EnvGetCurrentModule(d);a=
(a|0)==(g|0)?7:8;break;case 7:b=HEAP32[(e+28|0)>>2];a=9;break;case 8:g=_EnvGetDefmoduleName(d,HEAP32[(HEAP32[((HEAP32[(e+44|0)>>2]|0)+8|0)>>2]|0)>>2]);b=_strlen(g);a=_strlen(HEAP32[(HEAP32[(e+28|0)>>2]+16|0)>>2]);a=(b+a|0)+3|0;b=_gm2(d,a);var i=HEAP32[(HEAP32[(e+28|0)>>2]+16|0)>>2];_sprintf(b,STRING_TABLE.__str62257|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=i,tempInt));g=_EnvAddSymbol(d,b);_rm(d,b,a);b=g;a=9;
break;case 9:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_GetFullInstanceName.X=1;
function _QuashInstance(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:5;break;case 3:c=0!=(HEAPU32[(HEAP32[(d+44|0)>>2]+24|0)>>2]>>>3&1|0)?4:5;break;case 4:_PrintErrorID(b,STRING_TABLE.__str12252|0,12,0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str162267|0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str82259|0);_SetEvaluationError(b,1);a=0;c=43;break;case 5:c=1==(HEAPU32[(d+24|0)>>2]>>>1&
1|0)?6:7;break;case 6:a=0;c=43;break;case 7:c=0==(HEAP32[(d+24|0)>>2]&1|0)?8:9;break;case 8:_PrintErrorID(b,STRING_TABLE.__str12252|0,6,0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str172268|0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(d+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str182269|0);_SetEvaluationError(b,1);a=0;c=43;break;case 9:c=0!=(HEAPU32[(HEAP32[(d+44|0)>>2]+24|0)>>2]>>>4&1|0)?10:11;break;case 10:_PrintInstanceWatch(b,
STRING_TABLE.__str192270|0,d);c=11;break;case 11:_RemoveEntityDependencies(b,d);c=0!=(HEAPU32[(HEAP32[(d+44|0)>>2]+24|0)>>2]>>>3&1|0)?12:13;break;case 12:_ObjectNetworkAction(b,2,d,-1);c=13;break;case 13:c=0!=(HEAP32[(d+56|0)>>2]|0)?14:15;break;case 14:HEAP32[(HEAP32[(d+56|0)>>2]+60|0)>>2]=HEAP32[(d+60|0)>>2];c=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[(d+36|0)>>2]<<2)|0)>>2]=HEAP32[(d+60|0)>>2];c=16;break;case 16:c=0!=(HEAP32[(d+60|0)>>2]|0)?17:18;
break;case 17:HEAP32[(HEAP32[(d+60|0)>>2]+56|0)>>2]=HEAP32[(d+56|0)>>2];c=18;break;case 18:c=0!=(HEAP32[(d+48|0)>>2]|0)?19:20;break;case 19:HEAP32[(HEAP32[(d+48|0)>>2]+52|0)>>2]=HEAP32[(d+52|0)>>2];c=21;break;case 20:HEAP32[(HEAP32[(d+44|0)>>2]+88|0)>>2]=HEAP32[(d+52|0)>>2];c=21;break;case 21:c=0!=(HEAP32[(d+52|0)>>2]|0)?22:23;break;case 22:HEAP32[(HEAP32[(d+52|0)>>2]+48|0)>>2]=HEAP32[(d+48|0)>>2];c=24;break;case 23:HEAP32[(HEAP32[(d+44|0)>>2]+92|0)>>2]=HEAP32[(d+48|0)>>2];c=24;break;case 24:c=0!=
(HEAP32[(d+64|0)>>2]|0)?25:26;break;case 25:HEAP32[(HEAP32[(d+64|0)>>2]+68|0)>>2]=HEAP32[(d+68|0)>>2];c=27;break;case 26:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+172|0)>>2]=HEAP32[(d+68|0)>>2];c=27;break;case 27:c=0!=(HEAP32[(d+68|0)>>2]|0)?28:29;break;case 28:HEAP32[(HEAP32[(d+68|0)>>2]+64|0)>>2]=HEAP32[(d+64|0)>>2];c=30;break;case 29:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+184|0)>>2]=HEAP32[(d+64|0)>>2];c=30;break;case 30:c=HEAP32[(d+24|0)>>2]&1;_InstallInstance(b,d,0);c=1==(c|0)?31:
33;break;case 31:c=0==(HEAP32[((d|0)+8|0)>>2]|0)?32:33;break;case 32:_RemoveInstanceData(b,d);c=33;break;case 33:c=0==(HEAP32[(d+40|0)>>2]|0)?34:38;break;case 34:c=(HEAP32[(d+32|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?35:38;break;case 35:c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+84|0)>>2]|0)?36:38;break;case 36:c=0==(HEAP32[((d|0)+8|0)>>2]|0)?37:38;break;case 37:_DecrementSymbolCount(b,HEAP32[(d+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=42;break;case 38:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?39:40;break;case 39:var e=_genalloc(b,8);c=41;break;case 40:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=41;break;case 41:c=e;var g=d+24|0;HEAP32[g>>2]=HEAP32[g>>2]&-3|2;HEAP32[(c|0)>>2]=d;HEAP32[(c+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+96|0)>>
2]=c;c=HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+16|0;HEAP32[c>>2]=HEAP32[c>>2]+2|0;c=HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+20|0;HEAP32[c>>2]=HEAP32[c>>2]+88|0;c=42;break;case 42:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+92|0)>>2]=1;c=43;break;case 43:return a;default:assert(0,"bad label: "+c)}}_QuashInstance.X=1;
function _InstanceLocationInfo(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;d=h;g=f;i=c;j=a;k=b;var l=_HashInstance(i);HEAP32[k>>2]=l;k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+80|0)>>2]+(HEAP32[k>>2]<<2)|0)>>2];HEAP32[j>>2]=0;d=3;break;case 3:d=0!=(k|0)?4:5;break;case 4:var m=(HEAP32[(k+28|0)>>2]|0)!=(i|0)&1;d=6;break;case 5:m=0;d=6;break;case 6:d=0!=(m|0)?7:8;break;case 7:HEAP32[j>>2]=k;k=HEAP32[(k+60|0)>>2];d=3;break;case 8:d=9;break;case 9:d=0!=(k|0)?10:11;break;case 10:var n=
(HEAP32[(k+28|0)>>2]|0)==(i|0)&1;d=12;break;case 11:n=0;d=12;break;case 12:d=0!=(n|0)?13:16;break;case 13:d=(HEAP32[(HEAP32[((HEAP32[(k+44|0)>>2]|0)+8|0)>>2]|0)>>2]|0)==(HEAP32[(HEAP32[((g|0)+8|0)>>2]|0)>>2]|0)?14:15;break;case 14:e=k;d=17;break;case 15:HEAP32[j>>2]=k;k=HEAP32[(k+60|0)>>2];d=9;break;case 16:e=0;d=17;break;case 17:return e;default:assert(0,"bad label: "+d)}}_InstanceLocationInfo.X=1;
function _NewInstance(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,80);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+320|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return h=a,HEAP32[(h|0)>>2]=HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+100|0,HEAP32[((h|0)+4|0)>>2]=0,HEAP32[((h|0)+8|0)>>2]=0,HEAP32[((h|0)+12|0)>>2]=0,HEAP32[(h+16|0)>>2]=0,HEAP32[(h+20|0)>>2]=0,f=h+24|0,HEAP32[f>>2]&=-17,HEAP32[(h+40|0)>>2]=0,f=h+24|0,HEAP32[f>>2]&=-2,f=h+24|0,HEAP32[f>>2]&=-3,f=h+24|0,HEAP32[f>>2]&=-5,f=h+24|0,HEAP32[f>>2]&=-9,HEAP32[(h+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2],HEAP32[(h+28|0)>>2]=0,HEAP32[(h+
36|0)>>2]=0,HEAP32[(h+44|0)>>2]=0,HEAP32[(h+76|0)>>2]=0,HEAP32[(h+72|0)>>2]=0,HEAP32[(h+48|0)>>2]=0,HEAP32[(h+52|0)>>2]=0,HEAP32[(h+56|0)>>2]=0,HEAP32[(h+60|0)>>2]=0,HEAP32[(h+64|0)>>2]=0,HEAP32[(h+68|0)>>2]=0,h;default:assert(0,"bad label: "+f)}}_NewInstance.X=1;
function _BuildDefaultSlots(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l;a=h;b=f;j=0;g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+80|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+76|0)>>2];c=0<g>>>0?3:19;break;case 3:k=c=_gm2(a,g<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+180|0)>>2]+72|0)>>2]=c;c=0!=(i|0)?4:5;break;case 4:j=c=_gm2(a,12*i|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|
0)>>2]+116|0)>>2]+180|0)>>2]+76|0)>>2]=c;c=5;break;case 5:l=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+180|0)>>2]+44|0)>>2]+64|0)>>2];e=d=0;c=6;break;case 6:c=d>>>0<g>>>0?7:18;break;case 7:c=0!=(HEAP32[HEAP32[(l+(d<<2)|0)>>2]>>2]&1|0)?8:9;break;case 8:c=HEAP32[(l+(d<<2)|0)>>2]+24|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;HEAP32[(k+(d<<2)|0)>>2]=HEAP32[(l+(d<<2)|0)>>2]+32|0;c=10;break;case 9:HEAP32[(j+12*e|0)>>2]=HEAP32[(l+(d<<2)|0)>>2];HEAP32[((j+12*e|0)+8|0)>>2]=0;c=e;e=c+1|0;HEAP32[(k+
(d<<2)|0)>>2]=j+12*c|0;c=10;break;case 10:c=0==(HEAP32[(HEAP32[(k+(d<<2)|0)>>2]+8|0)>>2]|0)?11:15;break;case 11:c=HEAP32[(k+(d<<2)|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]&-2|b&1;c=0!=(HEAPU32[HEAP32[(HEAP32[(k+(d<<2)|0)>>2]|0)>>2]>>2]>>>1&1|0)?12:13;break;case 12:c=HEAP32[(k+(d<<2)|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]&-253|16;c=_CreateMultifield2(a,0);HEAP32[(HEAP32[(k+(d<<2)|0)>>2]+8|0)>>2]=c;_MultifieldInstall(a,HEAP32[(HEAP32[(k+(d<<2)|0)>>2]+8|0)>>2]);c=14;break;case 13:c=HEAP32[(k+(d<<2)|0)>>2]+
4|0;HEAP32[c>>2]=HEAP32[c>>2]&-253|8;c=_EnvAddSymbol(a,STRING_TABLE.__str342285|0);HEAP32[(HEAP32[(k+(d<<2)|0)>>2]+8|0)>>2]=c;_AtomInstall(a,HEAPU32[(HEAP32[(k+(d<<2)|0)>>2]+4|0)>>2]>>>2&63,HEAP32[(HEAP32[(k+(d<<2)|0)>>2]+8|0)>>2]);c=14;break;case 14:c=16;break;case 15:c=HEAP32[(k+(d<<2)|0)>>2]+4|0;HEAP32[c>>2]&=-2;c=16;break;case 16:c=HEAP32[(k+(d<<2)|0)>>2]+4|0;HEAP32[c>>2]&=-3;c=17;break;case 17:d=d+1|0;c=6;break;case 18:c=19;break;case 19:return;default:assert(0,"bad label: "+c)}}
_BuildDefaultSlots.X=1;
function _InstallInstance(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d;b=h;d=f;a=1==(c|0)?3:8;break;case 3:a=0!=(HEAP32[(d+24|0)>>2]&1|0)?4:5;break;case 4:a=11;break;case 5:a=0!=(HEAPU32[(HEAP32[(d+44|0)>>2]+24|0)>>2]>>>4&1|0)?6:7;break;case 6:_PrintInstanceWatch(b,STRING_TABLE.__str352286|0,d);a=7;break;case 7:a=d+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;HEAP32[(d+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=HEAP32[(d+28|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_IncrementDefclassBusyCount(b,
HEAP32[(d+44|0)>>2]);a=HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+176|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=11;break;case 8:a=0!=(HEAP32[(d+24|0)>>2]&1|0)?10:9;break;case 9:a=11;break;case 10:a=d+24|0;HEAP32[a>>2]&=-2;a=HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+176|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=11;break;case 11:return;default:assert(0,"bad label: "+a)}}_InstallInstance.X=1;
function _InitSlotsCommand(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;c=0==(_CheckCurrentMessage(a,STRING_TABLE.__str152266|0,1)|0)?3:4;break;case 3:c=6;break;case 4:c=a;var d=_GetNthMessageArgument(a,0)+8|0;_EvaluateClassDefaults(c,HEAP32[d>>2]);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?6:5;break;case 5:HEAP16[(b+
4|0)>>1]=7;c=_GetNthMessageArgument(a,0)+8|0;HEAP32[(b+8|0)>>2]=HEAP32[c>>2];c=6;break;case 6:return;default:assert(0,"bad label: "+c)}}_InitSlotsCommand.X=1;
function _EvaluateClassDefaults(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+24,j;b=h;d=f;a=0==(HEAPU32[(d+24|0)>>2]>>>3&1|0)?3:4;break;case 3:_PrintErrorID(b,STRING_TABLE.__str12252|0,15,0);_SetEvaluationError(b,1);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str222273|0);a=27;break;case 4:j=0;a=5;break;case 5:a=j>>>0<HEAPU32[(HEAP32[(d+44|0)>>2]+80|0)>>2]>>>
0?6:26;break;case 6:e=HEAP32[(HEAP32[(d+72|0)>>2]+(j<<2)|0)>>2];a=0!=(HEAPU32[(e+4|0)>>2]>>>1&1|0)?24:7;break;case 7:a=0!=(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>6&1|0)?8:11;break;case 8:a=0!=(_EvaluateAndStoreInDataObject(b,HEAPU32[HEAP32[(e|0)>>2]>>2]>>>1&1,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2],g,1)|0)?9:10;break;case 9:_PutSlotValue(b,d,e,g,i,STRING_TABLE.__str232274|0);a=10;break;case 10:a=19;break;case 11:a=0==(HEAP32[HEAP32[(e|0)>>2]>>2]&1|0)?13:12;break;case 12:a=1==(HEAP32[(HEAP32[(e|0)>>2]+24|0)>>2]|
0)?13:15;break;case 13:a=0==(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>8&1|0)?14:15;break;case 14:_DirectPutSlotValue(b,d,e,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2],i);a=18;break;case 15:a=0!=(HEAP32[(e+4|0)>>2]&1|0)?16:17;break;case 16:_PrintErrorID(b,STRING_TABLE.__str12252|0,14,0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str242275|0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str252276|
0);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(d+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str102261|0);_SetEvaluationError(b,1);a=17;break;case 17:a=18;break;case 18:a=19;break;case 19:a=e+4|0;HEAP32[a>>2]&=-2;a=1==(HEAPU32[(d+24|0)>>2]>>>1&1|0)?20:21;break;case 20:_EnvPrintRouter(b,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(d+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str22253|0,STRING_TABLE.__str262277|0);_SetEvaluationError(b,1);
a=21;break;case 21:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?22:23;break;case 22:a=27;break;case 23:a=24;break;case 24:a=e+4|0;HEAP32[a>>2]&=-3;a=25;break;case 25:j=j+1|0;a=5;break;case 26:a=d+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;a=27;break;case 27:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_EvaluateClassDefaults.X=1;
function _PrintInstanceWatch(h,f,c){_EnvPrintRouter(h,STRING_TABLE.__str202271|0,f);_EnvPrintRouter(h,STRING_TABLE.__str202271|0,STRING_TABLE.__str212272|0);_PrintInstanceNameAndClass(h,STRING_TABLE.__str202271|0,c,1)}function _InactiveInitializeInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_InitializeInstanceCommand(h,f);_SetDelayObjectPatternMatching(h,c)}
function _InactiveMakeInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_MakeInstanceCommand(h,f);_SetDelayObjectPatternMatching(h,c)}
function _InsertSlotOverrides(h,f,c){var a=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l=a+24;e=h;g=f;i=c;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;b=3;break;case 3:b=0!=(i|0)?4:21;break;case 4:b=1==(_EvaluateExpression(e,i,k)|0)?5:6;break;case 5:b=7;break;case 6:b=2!=(HEAPU16[(k+4|0)>>1]&65535|0)?7:8;break;case 7:_PrintErrorID(e,STRING_TABLE.__str12252|0,9,0);_EnvPrintRouter(e,
STRING_TABLE.__str22253|0,STRING_TABLE.__str302281|0);_SetEvaluationError(e,1);d=0;b=22;break;case 8:j=_FindInstanceSlot(e,g,HEAP32[(k+8|0)>>2]);b=0==(j|0)?9:10;break;case 9:_PrintErrorID(e,STRING_TABLE.__str12252|0,13,0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str312282|0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str322283|0);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,HEAP32[(HEAP32[(g+
28|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str22253|0,STRING_TABLE.__str102261|0);_SetEvaluationError(e,1);d=0;b=22;break;case 10:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+116|0)>>2]+88|0)>>2]|0)?11:12;break;case 11:_DirectMessage(e,HEAP32[(HEAP32[(j|0)>>2]+12|0)>>2],g,0,HEAP32[(HEAP32[(i+12|0)>>2]+8|0)>>2]);b=18;break;case 12:b=0!=(HEAP32[(HEAP32[(i+12|0)>>2]+8|0)>>2]|0)?13:16;break;case 13:b=0!=(_EvaluateAndStoreInDataObject(e,HEAPU32[HEAP32[(j|0)>>2]>>2]>>>1&1,HEAP32[(HEAP32[(i+12|0)>>
2]+8|0)>>2],k,1)|0)?14:15;break;case 14:_PutSlotValue(e,g,j,k,l,STRING_TABLE.__str332284|0);b=15;break;case 15:b=17;break;case 16:HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=-1;HEAP16[(k+4|0)>>1]=4;HEAP32[(k+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]|0)>>2];_PutSlotValue(e,g,j,k,l,STRING_TABLE.__str332284|0);b=17;break;case 17:b=18;break;case 18:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?19:20;break;case 19:d=0;b=22;break;case 20:b=j+4|0;HEAP32[b>>2]=HEAP32[b>>2]&
-3|2;i=HEAP32[(HEAP32[(i+12|0)>>2]+12|0)>>2];b=3;break;case 21:d=1;b=22;break;case 22:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_InsertSlotOverrides.X=1;
function _SetupInstanceModDupCommands(h){_EnvDefineFunction2(h,STRING_TABLE.__str2303|0,117,962,STRING_TABLE.__str12304|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str22305|0,117,964,STRING_TABLE.__str32306|0,0);_AddFunctionParser(h,STRING_TABLE.__str22305|0,904);_EnvDefineFunction2(h,STRING_TABLE.__str42307|0,117,966,STRING_TABLE.__str52308|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str62309|0,117,968,STRING_TABLE.__str72310|0,0);_AddFunctionParser(h,STRING_TABLE.__str62309|0,904);_EnvDefineFunction2(h,
STRING_TABLE.__str82311|0,117,970,STRING_TABLE.__str92312|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str102313|0,117,972,STRING_TABLE.__str112314|0,0);_AddFunctionParser(h,STRING_TABLE.__str102313|0,904);_EnvDefineFunction2(h,STRING_TABLE.__str122315|0,117,974,STRING_TABLE.__str132316|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str142317|0,117,976,STRING_TABLE.__str152318|0,0);_AddFunctionParser(h,STRING_TABLE.__str142317|0,904);_EnvDefineFunction2(h,STRING_TABLE.__str162319|0,117,978,STRING_TABLE.__str172320|
0,0);_EnvDefineFunction2(h,STRING_TABLE.__str182321|0,117,980,STRING_TABLE.__str192322|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str202323|0,117,982,STRING_TABLE.__str212324|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str222325|0,117,984,STRING_TABLE.__str232326|0,0);_AddFunctionParser(h,STRING_TABLE.__str2303|0,904);_AddFunctionParser(h,STRING_TABLE.__str42307|0,904);_AddFunctionParser(h,STRING_TABLE.__str82311|0,904);_AddFunctionParser(h,STRING_TABLE.__str122315|0,904)}
function _InactiveModifyInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_ModifyInstance(h,f);_SetDelayObjectPatternMatching(h,c)}
function _ModifyInstance(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j=c+16;a=c+20;b=h;d=f;i=_EvaluateSlotOverrides(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],j,a);a=0!=(HEAP32[a>>2]|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=7;break;case 4:e=_CheckInstance(b,
HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2]);a=0==(e|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,i,HEAP32[j>>2]);a=7;break;case 6:HEAP16[(g|0)>>1]=5;HEAP32[(g+4|0)>>2]=i;HEAP32[(g+8|0)>>2]=0;HEAP32[(g+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=1;var k=
b,l=_FindSymbolHN(b,STRING_TABLE.__str242327|0);_DirectMessage(k,l,e,d,g);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=a;_DeleteSlotOverrideEvaluations(b,i,HEAP32[j>>2]);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ModifyInstance.X=1;function _InactiveMsgModifyInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_MsgModifyInstance(h,f);_SetDelayObjectPatternMatching(h,c)}
function _MsgModifyInstance(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j=c+16;a=c+20;b=h;d=f;i=_EvaluateSlotOverrides(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],j,a);a=0!=(HEAP32[a>>2]|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=7;break;case 4:e=_CheckInstance(b,
HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2]);a=0==(e|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,i,HEAP32[j>>2]);a=7;break;case 6:HEAP16[(g|0)>>1]=5;HEAP32[(g+4|0)>>2]=i;HEAP32[(g+8|0)>>2]=0;HEAP32[(g+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=1;var k=
b,l=_FindSymbolHN(b,STRING_TABLE.__str252328|0);_DirectMessage(k,l,e,d,g);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=a;_DeleteSlotOverrideEvaluations(b,i,HEAP32[j>>2]);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MsgModifyInstance.X=1;function _InactiveDuplicateInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_DuplicateInstance(h,f);_SetDelayObjectPatternMatching(h,c)}
function _DuplicateInstance(h,f){var c=STACKTOP;STACKTOP+=64;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+24,j,k=c+56;a=c+60;b=h;d=f;j=_EvaluateSlotOverrides(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],k,a);a=0!=(HEAP32[a>>2]|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];
a=9;break;case 4:e=_CheckInstance(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2]);a=0==(e|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 6:a=0==(_EnvArgTypeCheck(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],2,8,g)|0)?7:8;break;case 7:HEAP16[(d+4|0)>>
1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 8:HEAP16[(i|0)>>1]=8;HEAP32[((i|0)+4|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[((i|0)+8|0)>>2]=0;HEAP32[((i|0)+12|0)>>2]=i+16|0;HEAP16[(i+16|0)>>1]=5;HEAP32[((i+16|0)+4|0)>>2]=j;HEAP32[((i+16|0)+8|0)>>2]=0;HEAP32[((i+16|0)+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=1;var l=b,m=_FindSymbolHN(b,
STRING_TABLE.__str262329|0);_DirectMessage(l,m,e,d,i|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=a;_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DuplicateInstance.X=1;function _InactiveMsgDuplicateInstance(h,f){var c;c=_SetDelayObjectPatternMatching(h,1);_MsgDuplicateInstance(h,f);_SetDelayObjectPatternMatching(h,c)}
function _MsgDuplicateInstance(h,f){var c=STACKTOP;STACKTOP+=64;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+24,j,k=c+56;a=c+60;b=h;d=f;j=_EvaluateSlotOverrides(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],k,a);a=0!=(HEAP32[a>>2]|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>
2];a=9;break;case 4:e=_CheckInstance(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2]);a=0==(e|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 6:a=0==(_EnvArgTypeCheck(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],2,8,g)|0)?7:8;break;case 7:HEAP16[(d+4|
0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 8:HEAP16[(i|0)>>1]=8;HEAP32[((i|0)+4|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[((i|0)+8|0)>>2]=0;HEAP32[((i|0)+12|0)>>2]=i+16|0;HEAP16[(i+16|0)>>1]=5;HEAP32[((i+16|0)+4|0)>>2]=j;HEAP32[((i+16|0)+8|0)>>2]=0;HEAP32[((i+16|0)+12|0)>>2]=0;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=1;var l=b,
m=_FindSymbolHN(b,STRING_TABLE.__str272330|0);_DirectMessage(l,m,e,d,i|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+116|0)>>2]+188|0)>>2]=a;_DeleteSlotOverrideEvaluations(b,j,HEAP32[k>>2]);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MsgDuplicateInstance.X=1;function _DirectModifyMsgHandler(h,f){_ModifyMsgHandlerSupport(h,f,0)}function _MsgModifyMsgHandler(h,f){_ModifyMsgHandlerSupport(h,f,1)}function _DirectDuplicateMsgHandler(h,f){_DuplicateMsgHandlerSupport(h,f,0)}
function _MsgDuplicateMsgHandler(h,f){_DuplicateMsgHandlerSupport(h,f,1)}
function _EvaluateSlotOverrides(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;HEAP32[j>>2]=0;b=(_CountArguments(g)|0)/2&-1;HEAP32[i>>2]=b;b=0==(HEAP32[i>>2]|0)?3:4;break;case 3:d=0;b=21;break;case 4:k=_gm2(e,24*HEAP32[i>>2]|0);l=0;b=5;break;case 5:b=0!=(g|0)?6:19;break;case 6:b=0!=(_EvaluateExpression(e,g,k+24*l|0)|0)?7:8;break;case 7:b=20;break;case 8:b=2!=(HEAPU16[((k+24*l|0)+4|0)>>1]&65535|0)?9:10;break;case 9:_ExpectedTypeError1(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2]|0)>>2]+16|0)>>2],l+1|0,STRING_TABLE.__str332336|0);_SetEvaluationError(e,1);b=20;break;case 10:m=HEAP32[((k+24*l|0)+8|0)>>2];b=0!=(HEAP32[(HEAP32[(g+12|0)>>2]+8|0)>>2]|0)?11:14;break;case 11:b=0==(_EvaluateAndStoreInDataObject(e,0,HEAP32[(HEAP32[(g+12|0)>>2]+8|0)>>2],k+24*l|0,1)|0)?12:13;break;case 12:b=20;break;case 13:b=15;break;case 14:HEAP32[((k+24*l|0)+12|0)>>2]=0;HEAP32[((k+24*l|0)+16|0)>>2]=-1;HEAP16[((k+24*l|0)+4|0)>>1]=4;HEAP32[((k+24*l|0)+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+148|0)>>2]|0)>>2];b=15;break;case 15:HEAP32[(k+24*l|0)>>2]=m;g=HEAP32[(HEAP32[(g+12|0)>>2]+12|0)>>2];b=0!=(g|0)?16:17;break;case 16:var n=k+24*(l+1|0)|0;b=18;break;case 17:n=0;b=18;break;case 18:HEAP32[((k+24*l|0)+20|0)>>2]=n;l=l+1|0;b=5;break;case 19:d=k;b=21;break;case 20:_rm(e,k,24*HEAP32[i>>2]|0);HEAP32[j>>2]=1;d=0;b=21;break;case 21:return d;default:assert(0,"bad label: "+b)}}_EvaluateSlotOverrides.X=1;
function _DeleteSlotOverrideEvaluations(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(d|0)?3:4;break;case 3:_rm(b,d,24*e|0);a=4;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _DuplicateMsgHandlerSupport(h,f,c){var a=STACKTOP;STACKTOP+=64;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m=a,n,o,p=a+16,q=a+40,r;d=h;e=f;g=c;HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+188|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str282331|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str292332|
0,STRING_TABLE.__str302333|0);_SetEvaluationError(d,1);b=61;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+188|0)>>2]=0;i=_GetNthMessageArgument(d,0)+8|0;i=HEAP32[i>>2];k=_GetNthMessageArgument(d,1)+8|0;k=HEAP32[k>>2];l=_GetNthMessageArgument(d,2)+8|0;l=HEAP32[l>>2];b=0!=(HEAPU32[(i+24|0)>>2]>>>1&1|0)?5:6;break;case 5:_StaleInstanceAddress(d,STRING_TABLE.__str82311|0,0);_SetEvaluationError(d,1);b=61;break;case 6:b=(k|0)==(HEAP32[(i+28|0)>>2]|0)?7:8;break;case 7:_PrintErrorID(d,STRING_TABLE.__str282331|
0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str292332|0,STRING_TABLE.__str312334|0);_SetEvaluationError(d,1);b=61;break;case 8:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+88|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+88|0)>>2]=g;j=_BuildInstance(d,k,HEAP32[(i+44|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+88|0)>>2]=b;b=0==(j|0)?9:10;break;case 9:b=61;break;case 10:b=j+40|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=11;break;case 11:b=0!=(l|0)?12:31;break;case 12:o=_FindInstanceSlot(d,
j,HEAP32[(l|0)>>2]);b=0==(o|0)?13:14;break;case 13:_SlotExistError(d,HEAP32[(HEAP32[(l|0)>>2]+16|0)>>2],STRING_TABLE.__str82311|0);b=60;break;case 14:b=0!=(g|0)?15:23;break;case 15:HEAP16[(m|0)>>1]=HEAP16[(l+4|0)>>1];b=4!=(HEAPU16[(m|0)>>1]&65535|0)?16:17;break;case 16:HEAP32[(m+4|0)>>2]=HEAP32[(l+8|0)>>2];b=18;break;case 17:HEAP32[(m+4|0)>>2]=l;b=18;break;case 18:HEAP32[(m+8|0)>>2]=0;HEAP32[(m+12|0)>>2]=0;_DirectMessage(d,HEAP32[(HEAP32[(o|0)>>2]+12|0)>>2],j,p,m);b=0!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?21:19;break;case 19:b=2==(HEAPU16[(p+4|0)>>1]&65535|0)?20:22;break;case 20:b=(HEAP32[(p+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?21:22;break;case 21:b=60;break;case 22:b=30;break;case 23:b=0!=(HEAPU32[HEAP32[(o|0)>>2]>>2]>>>1&1|0)?24:26;break;case 24:b=4!=(HEAPU16[(l+4|0)>>1]&65535|0)?25:26;break;case 25:HEAP16[(p+4|0)>>1]=4;r=_EnvCreateMultifield(d,1);HEAP32[(p+8|0)>>2]=r;HEAP32[(p+12|0)>>2]=0;HEAP32[(p+16|0)>>2]=0;HEAP16[(HEAP32[(p+
8|0)>>2]+16|0)>>1]=HEAP16[(l+4|0)>>1];HEAP32[((HEAP32[(p+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(l+8|0)>>2];r=p;b=27;break;case 26:r=l;b=27;break;case 27:b=0==(_PutSlotValue(d,j,o,r,q,STRING_TABLE.__str82311|0)|0)?28:29;break;case 28:b=60;break;case 29:b=30;break;case 30:b=o+4|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|2;l=HEAP32[(l+20|0)>>2];b=11;break;case 31:n=0;b=32;break;case 32:b=n>>>0<HEAPU32[(HEAP32[(j+44|0)>>2]+76|0)>>2]>>>0?33:50;break;case 33:b=0==(HEAPU32[((HEAP32[(j+76|0)>>2]+12*n|0)+4|0)>>2]>>>1&1|0)?34:
48;break;case 34:b=0!=(g|0)?35:42;break;case 35:HEAP16[(p+4|0)>>1]=HEAPU32[((HEAP32[(i+76|0)>>2]+12*n|0)+4|0)>>2]>>>2&63;HEAP32[(p+8|0)>>2]=HEAP32[((HEAP32[(i+76|0)>>2]+12*n|0)+8|0)>>2];b=4==(HEAPU16[(p+4|0)>>1]&65535|0)?36:37;break;case 36:HEAP32[(p+12|0)>>2]=0;HEAP32[(p+16|0)>>2]=HEAP32[(HEAP32[(p+8|0)>>2]+8|0)>>2]-1|0;b=37;break;case 37:b=_ConvertValueToExpression(d,p);_DirectMessage(d,HEAP32[(HEAP32[(HEAP32[(j+76|0)>>2]+12*n|0)>>2]+12|0)>>2],j,p,b);_ReturnExpression(d,b);b=0!=(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?40:38;break;case 38:b=2==(HEAPU16[(p+4|0)>>1]&65535|0)?39:41;break;case 39:b=(HEAP32[(p+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?40:41;break;case 40:b=60;break;case 41:b=47;break;case 42:HEAP16[(p+4|0)>>1]=HEAPU32[((HEAP32[(i+76|0)>>2]+12*n|0)+4|0)>>2]>>>2&63;HEAP32[(p+8|0)>>2]=HEAP32[((HEAP32[(i+76|0)>>2]+12*n|0)+8|0)>>2];b=4==(HEAPU32[((HEAP32[(i+76|0)>>2]+12*n|0)+4|0)>>2]>>>2&63|0)?43:44;break;case 43:HEAP32[(p+12|0)>>2]=0;HEAP32[(p+
16|0)>>2]=HEAP32[(HEAP32[((HEAP32[(i+76|0)>>2]+12*n|0)+8|0)>>2]+8|0)>>2]-1|0;b=44;break;case 44:b=0==(_PutSlotValue(d,j,HEAP32[(j+76|0)>>2]+12*n|0,p,q,STRING_TABLE.__str82311|0)|0)?45:46;break;case 45:b=60;break;case 46:b=47;break;case 47:b=48;break;case 48:b=49;break;case 49:n=n+1|0;b=32;break;case 50:b=0!=(g|0)?51:56;break;case 51:n=0;b=52;break;case 52:b=n>>>0<HEAPU32[(HEAP32[(j+44|0)>>2]+80|0)>>2]>>>0?53:55;break;case 53:b=HEAP32[(HEAP32[(j+72|0)>>2]+(n<<2)|0)>>2]+4|0;HEAP32[b>>2]=HEAP32[b>>2]&
-3|2;b=54;break;case 54:n=n+1|0;b=52;break;case 55:b=j+24|0;HEAP32[b>>2]=HEAP32[b>>2]&-9|8;_DirectMessage(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+112|0)>>2],j,e,0);b=56;break;case 56:b=j+40|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;b=0!=(HEAPU32[(j+24|0)>>2]>>>1&1|0)?57:58;break;case 57:HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(d,1);b=59;break;case 58:HEAP16[(e+4|0)>>1]=8;b=_GetFullInstanceName(d,j);HEAP32[(e+8|0)>>2]=b;b=59;
break;case 59:b=61;break;case 60:b=j+40|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;_QuashInstance(d,j);_SetEvaluationError(d,1);b=61;break;case 61:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_DuplicateMsgHandlerSupport.X=1;
function _ModifyMsgHandlerSupport(h,f,c){var a=STACKTOP;STACKTOP+=64;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l=a+24,m=a+48,n,o;d=h;e=f;g=c;HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+188|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str282331|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str292332|
0,STRING_TABLE.__str322335|0);_SetEvaluationError(d,1);b=28;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]+188|0)>>2]=0;n=_GetNthMessageArgument(d,0)+8|0;n=HEAP32[n>>2];b=0!=(HEAPU32[(n+24|0)>>2]>>>1&1|0)?5:6;break;case 5:_StaleInstanceAddress(d,STRING_TABLE.__str2303|0,0);_SetEvaluationError(d,1);b=28;break;case 6:i=_GetNthMessageArgument(d,1)+8|0;i=HEAP32[i>>2];b=7;break;case 7:b=0!=(i|0)?8:27;break;case 8:o=_FindInstanceSlot(d,n,HEAP32[(i|0)>>2]);b=0==(o|0)?9:10;break;case 9:_SlotExistError(d,
HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2],STRING_TABLE.__str2303|0);_SetEvaluationError(d,1);b=28;break;case 10:b=0!=(g|0)?11:19;break;case 11:HEAP16[(m|0)>>1]=HEAP16[(i+4|0)>>1];b=4!=(HEAPU16[(m|0)>>1]&65535|0)?12:13;break;case 12:HEAP32[(m+4|0)>>2]=HEAP32[(i+8|0)>>2];b=14;break;case 13:HEAP32[(m+4|0)>>2]=i;b=14;break;case 14:HEAP32[(m+8|0)>>2]=0;HEAP32[(m+12|0)>>2]=0;_DirectMessage(d,HEAP32[(HEAP32[(o|0)>>2]+12|0)>>2],n,k,m);b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?17:15;break;
case 15:b=2==(HEAPU16[(k+4|0)>>1]&65535|0)?16:18;break;case 16:b=(HEAP32[(k+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?17:18;break;case 17:b=28;break;case 18:b=26;break;case 19:b=0!=(HEAPU32[HEAP32[(o|0)>>2]>>2]>>>1&1|0)?20:22;break;case 20:b=4!=(HEAPU16[(i+4|0)>>1]&65535|0)?21:22;break;case 21:HEAP16[(k+4|0)>>1]=4;j=_EnvCreateMultifield(d,1);HEAP32[(k+8|0)>>2]=j;HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=0;HEAP16[(HEAP32[(k+8|0)>>2]+16|0)>>1]=HEAP16[(i+4|0)>>1];HEAP32[((HEAP32[(k+
8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(i+8|0)>>2];j=k;b=23;break;case 22:j=i;b=23;break;case 23:b=0==(_PutSlotValue(d,n,o,j,l,STRING_TABLE.__str2303|0)|0)?24:25;break;case 24:b=28;break;case 25:b=26;break;case 26:i=HEAP32[(i+20|0)>>2];b=7;break;case 27:HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=28;break;case 28:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_ModifyMsgHandlerSupport.X=1;
function _SetupInstanceMultifieldCommands(h){_EnvDefineFunction2(h,STRING_TABLE.__str2339|0,98,986,STRING_TABLE.__str12340|0,STRING_TABLE.__str22341|0);_EnvDefineFunction2(h,STRING_TABLE.__str32342|0,98,988,STRING_TABLE.__str42343|0,STRING_TABLE.__str52344|0);_EnvDefineFunction2(h,STRING_TABLE.__str62345|0,98,990,STRING_TABLE.__str72346|0,STRING_TABLE.__str82347|0);_EnvDefineFunction2(h,STRING_TABLE.__str92348|0,117,992,STRING_TABLE.__str102349|0,STRING_TABLE.__str112350|0);_EnvDefineFunction2(h,
STRING_TABLE.__str122351|0,117,994,STRING_TABLE.__str132352|0,STRING_TABLE.__str142353|0);_EnvDefineFunction2(h,STRING_TABLE.__str152354|0,117,996,STRING_TABLE.__str162355|0,STRING_TABLE.__str172356|0);_EnvDefineFunction2(h,STRING_TABLE.__str182357|0,98,986,STRING_TABLE.__str12340|0,STRING_TABLE.__str22341|0);_EnvDefineFunction2(h,STRING_TABLE.__str192358|0,98,988,STRING_TABLE.__str42343|0,STRING_TABLE.__str52344|0);_EnvDefineFunction2(h,STRING_TABLE.__str202359|0,98,990,STRING_TABLE.__str72346|0,
STRING_TABLE.__str82347|0);_EnvDefineFunction2(h,STRING_TABLE.__str212360|0,117,992,STRING_TABLE.__str102349|0,STRING_TABLE.__str112350|0);_EnvDefineFunction2(h,STRING_TABLE.__str222361|0,117,994,STRING_TABLE.__str132352|0,STRING_TABLE.__str142353|0);_EnvDefineFunction2(h,STRING_TABLE.__str232362|0,117,996,STRING_TABLE.__str162355|0,STRING_TABLE.__str172356|0)}
function _DirectMVReplaceCommand(h){var f=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i=f+4,j=f+8,k=f+32,l=f+56;b=h;c=0==(_CheckCurrentMessage(b,STRING_TABLE.__str242363|0,1)|0)?3:4;break;case 3:a=0;c=11;break;case 4:c=_GetNthMessageArgument(b,0)+8|0;e=HEAP32[c>>2];d=_CheckMultifieldSlotModify(b,1,STRING_TABLE.__str242363|0,e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>
2]+8|0)>>2],g,i,j);c=0==(d|0)?5:6;break;case 5:a=0;c=11;break;case 6:_AssignSlotToDataObject(l,d);c=0==(_ReplaceMultiValueField(b,k,l,HEAP32[g>>2],HEAP32[i>>2],j,STRING_TABLE.__str242363|0)|0)?7:8;break;case 7:a=0;c=11;break;case 8:c=0!=(_PutSlotValue(b,e,d,k,j,STRING_TABLE.__str252364|0)|0)?9:10;break;case 9:a=1;c=11;break;case 10:a=0;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DirectMVReplaceCommand.X=1;
function _DirectMVInsertCommand(h){var f=STACKTOP;STACKTOP+=76;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i=f+4,j=f+28,k=f+52;b=h;c=0==(_CheckCurrentMessage(b,STRING_TABLE.__str262365|0,1)|0)?3:4;break;case 3:a=0;c=11;break;case 4:c=_GetNthMessageArgument(b,0)+8|0;e=HEAP32[c>>2];d=_CheckMultifieldSlotModify(b,0,STRING_TABLE.__str262365|0,e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|
0)>>2],g,0,i);c=0==(d|0)?5:6;break;case 5:a=0;c=11;break;case 6:_AssignSlotToDataObject(k,d);c=0==(_InsertMultiValueField(b,j,k,HEAP32[g>>2],i,STRING_TABLE.__str262365|0)|0)?7:8;break;case 7:a=0;c=11;break;case 8:c=0!=(_PutSlotValue(b,e,d,j,i,STRING_TABLE.__str272366|0)|0)?9:10;break;case 9:a=1;c=11;break;case 10:a=0;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DirectMVInsertCommand.X=1;
function _DirectMVDeleteCommand(h){var f=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i=f+4,j=f+8,k=f+32;b=h;c=0==(_CheckCurrentMessage(b,STRING_TABLE.__str282367|0,1)|0)?3:4;break;case 3:a=0;c=11;break;case 4:c=_GetNthMessageArgument(b,0)+8|0;e=HEAP32[c>>2];d=_CheckMultifieldSlotModify(b,2,STRING_TABLE.__str282367|0,e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>
2],g,i,0);c=0==(d|0)?5:6;break;case 5:a=0;c=11;break;case 6:_AssignSlotToDataObject(k,d);c=0==(_DeleteMultiValueField(b,j,k,HEAP32[g>>2],HEAP32[i>>2],STRING_TABLE.__str282367|0)|0)?7:8;break;case 7:a=0;c=11;break;case 8:c=0!=(_PutSlotValue(b,e,d,j,k,STRING_TABLE.__str292368|0)|0)?9:10;break;case 9:a=1;c=11;break;case 10:a=0;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DirectMVDeleteCommand.X=1;
function _MVSlotReplaceCommand(h,f){var c=STACKTOP;STACKTOP+=96;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48,j,k,l=c+72,m=c+76,n=c+80;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];j=_CheckMultifieldSlotInstance(b,STRING_TABLE.__str212360|0);a=0==(j|0)?3:4;break;case 3:a=9;break;case 4:k=_CheckMultifieldSlotModify(b,1,STRING_TABLE.__str212360|
0,j,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],l,m,e);a=0==(k|0)?5:6;break;case 5:a=9;break;case 6:_AssignSlotToDataObject(i,k);a=0==(_ReplaceMultiValueField(b,g,i,HEAP32[l>>2],HEAP32[m>>2],e,STRING_TABLE.__str212360|0)|0)?7:8;break;case 7:a=9;break;case 8:HEAP16[(n|0)>>1]=4;HEAP32[(n+4|0)>>2]=g;HEAP32[(n+12|0)>>2]=0;HEAP32[(n+8|0)>>2]=0;_DirectMessage(b,HEAP32[(HEAP32[(k|0)>>2]+12|0)>>2],j,d,n);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+
a)}}_MVSlotReplaceCommand.X=1;
function _MVSlotInsertCommand(h,f){var c=STACKTOP;STACKTOP+=92;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48,j,k,l=c+72,m=c+76;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];j=_CheckMultifieldSlotInstance(b,STRING_TABLE.__str222361|0);a=0==(j|0)?3:4;break;case 3:a=9;break;case 4:k=_CheckMultifieldSlotModify(b,0,STRING_TABLE.__str222361|0,j,
HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],l,0,e);a=0==(k|0)?5:6;break;case 5:a=9;break;case 6:_AssignSlotToDataObject(i,k);a=0==(_InsertMultiValueField(b,g,i,HEAP32[l>>2],e,STRING_TABLE.__str222361|0)|0)?7:8;break;case 7:a=9;break;case 8:HEAP16[(m|0)>>1]=4;HEAP32[(m+4|0)>>2]=g;HEAP32[(m+12|0)>>2]=0;HEAP32[(m+8|0)>>2]=0;_DirectMessage(b,HEAP32[(HEAP32[(k|0)>>2]+12|0)>>2],j,d,m);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
_MVSlotInsertCommand.X=1;
function _MVSlotDeleteCommand(h,f){var c=STACKTOP;STACKTOP+=72;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i,j,k=c+48,l=c+52,m=c+56;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];i=_CheckMultifieldSlotInstance(b,STRING_TABLE.__str232362|0);a=0==(i|0)?3:4;break;case 3:a=9;break;case 4:j=_CheckMultifieldSlotModify(b,2,STRING_TABLE.__str232362|0,i,
HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],k,l,0);a=0==(j|0)?5:6;break;case 5:a=9;break;case 6:_AssignSlotToDataObject(g,j);a=0==(_DeleteMultiValueField(b,e,g,HEAP32[k>>2],HEAP32[l>>2],STRING_TABLE.__str232362|0)|0)?7:8;break;case 7:a=9;break;case 8:HEAP16[(m|0)>>1]=4;HEAP32[(m+4|0)>>2]=e;HEAP32[(m+12|0)>>2]=0;HEAP32[(m+8|0)>>2]=0;_DirectMessage(b,HEAP32[(HEAP32[(j|0)>>2]+12|0)>>2],i,d,m);a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+
a)}}_MVSlotDeleteCommand.X=1;
function _CheckMultifieldSlotInstance(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;a=0==(_EnvArgTypeCheck(d,e,1,182,i)|0)?3:4;break;case 3:_SetEvaluationError(d,1);b=0;a=12;break;case 4:a=7==(HEAPU16[(i+4|0)>>1]&65535|0)?5:8;break;case 5:g=HEAP32[(i+8|0)>>2];a=1==(HEAPU32[(g+24|0)>>2]>>>1&1|0)?6:7;break;case 6:_StaleInstanceAddress(d,e,0);_SetEvaluationError(d,1);b=
0;a=12;break;case 7:a=11;break;case 8:g=_FindInstanceBySymbol(d,HEAP32[(i+8|0)>>2]);a=0==(g|0)?9:10;break;case 9:_NoInstanceError(d,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],e);a=10;break;case 10:a=11;break;case 11:b=g;a=12;break;case 12:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_CheckMultifieldSlotInstance.X=1;
function _AssignSlotToDataObject(h,f){HEAP16[(h+4|0)>>1]=HEAPU32[(f+4|0)>>2]>>>2&63;HEAP32[(h+8|0)>>2]=HEAP32[(f+8|0)>>2];HEAP32[(h+12|0)>>2]=0;HEAP32[(h+16|0)>>2]=HEAP32[(HEAP32[(f+8|0)>>2]+8|0)>>2]-1|0}
function _CheckMultifieldSlotModify(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t=i,u,v;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;v=(p|0)==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)?1:2;HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;_EvaluateExpression(l,p,t);j=2!=(HEAPU16[(t+4|0)>>1]&65535|0)?3:4;break;case 3:_ExpectedTypeError1(l,
n,v,STRING_TABLE.__str302369|0);_SetEvaluationError(l,1);k=0;j=21;break;case 4:u=_FindInstanceSlot(l,o,HEAP32[(t+8|0)>>2]);j=0==(u|0)?5:6;break;case 5:_SlotExistError(l,HEAP32[(HEAP32[(t+8|0)>>2]+16|0)>>2],n);k=0;j=21;break;case 6:j=0==(HEAPU32[HEAP32[(u|0)>>2]>>2]>>>1&1|0)?7:8;break;case 7:_PrintErrorID(l,STRING_TABLE.__str312370|0,1,0);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,STRING_TABLE.__str332372|0);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,n);_EnvPrintRouter(l,STRING_TABLE.__str322371|
0,STRING_TABLE.__str342373|0);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(u|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,STRING_TABLE.__str352374|0);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,HEAP32[(HEAP32[(o+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(l,STRING_TABLE.__str322371|0,STRING_TABLE.__str362375|0);_SetEvaluationError(l,1);k=0;j=21;break;case 8:_EvaluateExpression(l,HEAP32[(p+12|0)>>2],t);j=1!=(HEAPU16[(t+4|0)>>1]&65535|0)?
9:10;break;case 9:_ExpectedTypeError1(l,n,v+1|0,STRING_TABLE.__str372376|0);_SetEvaluationError(l,1);k=0;j=21;break;case 10:p=HEAP32[(HEAP32[(p+12|0)>>2]+12|0)>>2];HEAP32[q>>2]=HEAP32[(HEAP32[(t+8|0)>>2]+16|0)>>2];j=1==(m|0)?12:11;break;case 11:j=2==(m|0)?12:15;break;case 12:_EvaluateExpression(l,p,t);j=1!=(HEAPU16[(t+4|0)>>1]&65535|0)?13:14;break;case 13:_ExpectedTypeError1(l,n,v+2|0,STRING_TABLE.__str372376|0);_SetEvaluationError(l,1);k=0;j=21;break;case 14:HEAP32[r>>2]=HEAP32[(HEAP32[(t+8|0)>>
2]+16|0)>>2];p=HEAP32[(p+12|0)>>2];j=15;break;case 15:j=0==(m|0)?17:16;break;case 16:j=1==(m|0)?17:20;break;case 17:j=0==(_EvaluateAndStoreInDataObject(l,1,p,s,1)|0)?18:19;break;case 18:k=0;j=21;break;case 19:j=20;break;case 20:k=u;j=21;break;case 21:return h=k,STACKTOP=i,h;default:assert(0,"bad label: "+j)}}_CheckMultifieldSlotModify.X=1;
function _ParseInitializeInstance(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l;e=h;g=f;i=c;b=HEAP32[(g+4|0)>>2];var m=_FindFunction(e,STRING_TABLE.__str2379|0);b=(b|0)==(m|0)?4:3;break;case 3:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str12380|0);b=(b|0)==(m|0)?4:5;break;case 4:k=0;b=16;break;case 5:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str22381|
0);b=(b|0)==(m|0)?7:6;break;case 6:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str32382|0);b=(b|0)==(m|0)?7:8;break;case 7:k=1;b=15;break;case 8:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str42383|0);b=(b|0)==(m|0)?12:9;break;case 9:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str52384|0);b=(b|0)==(m|0)?12:10;break;case 10:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str62385|0);b=(b|0)==(m|0)?12:11;break;case 11:b=HEAP32[(g+4|0)>>2];m=_FindFunction(e,STRING_TABLE.__str72386|
0);b=(b|0)==(m|0)?12:13;break;case 12:k=2;b=14;break;case 13:k=3;b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:_IncrementIndentDepth(e,3);HEAP32[j>>2]=0;b=173==(HEAPU16[(g|0)>>1]&65535|0)?17:18;break;case 17:HEAP16[(g|0)>>1]=30;b=19;break;case 18:_SavePPBuffer(e,STRING_TABLE.__str82387|0);b=19;break;case 19:b=_ArgumentParse(e,i,j);HEAP32[(g+8|0)>>2]=b;b=0!=(HEAP32[j>>2]|0)?20:21;break;case 20:b=70;break;case 21:b=0==(HEAP32[(g+8|0)>>2]|0)?22:23;break;case 22:_SyntaxErrorMessage(e,STRING_TABLE.__str92388|
0);b=70;break;case 23:b=24;break;case 24:_SavePPBuffer(e,STRING_TABLE.__str82387|0);b=0==(k|0)?25:52;break;case 25:b=2!=(HEAPU16[(HEAP32[(g+8|0)>>2]|0)>>1]&65535|0)?26:27;break;case 26:b=38;break;case 27:b=0==(_strcmp(HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+4|0)>>2]+16|0)>>2],STRING_TABLE.__str102389|0)|0)?28:38;break;case 28:b=_ArgumentParse(e,i,j);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=1==(HEAP32[j>>2]|0)?29:30;break;case 29:b=70;break;case 30:b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?31:32;break;
case 31:_SyntaxErrorMessage(e,STRING_TABLE.__str112390|0);b=70;break;case 32:b=2!=(HEAPU16[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)>>1]&65535|0)?33:34;break;case 33:b=35;break;case 34:b=0!=(_strcmp(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+4|0)>>2]+16|0)>>2],STRING_TABLE.__str102389|0)|0)?35:36;break;case 35:HEAP16[(HEAP32[(g+8|0)>>2]|0)>>1]=30;l=_FindFunction(e,STRING_TABLE.__str122391|0);HEAP32[(HEAP32[(g+8|0)>>2]+4|0)>>2]=l;l=0;b=37;break;case 36:l=1;b=37;break;case 37:b=43;break;case 38:_GetToken(e,
i,HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0);b=2!=(HEAPU16[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?39:40;break;case 39:b=41;break;case 40:b=0!=(_strcmp(STRING_TABLE.__str102389|0,HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2])|0)?41:42;break;case 41:_SyntaxErrorMessage(e,STRING_TABLE.__str2379|0);b=70;break;case 42:_SavePPBuffer(e,STRING_TABLE.__str82387|0);l=1;b=43;break;case 43:b=0!=(l|0)?44:49;break;case 44:b=_ArgumentParse(e,i,j);HEAP32[(HEAP32[(g+
8|0)>>2]+12|0)>>2]=b;b=0!=(HEAP32[j>>2]|0)?45:46;break;case 45:b=70;break;case 46:b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?47:48;break;case 47:_SyntaxErrorMessage(e,STRING_TABLE.__str112390|0);b=70;break;case 48:b=49;break;case 49:b=0==(_ReplaceClassNameWithReference(e,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2])|0)?50:51;break;case 50:b=70;break;case 51:_PPCRAndIndent(e);_GetToken(e,i,HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0);b=_ParseSlotOverrides(e,i,j);HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>
2]+12|0)>>2]=b;b=65;break;case 52:_PPCRAndIndent(e);_GetToken(e,i,HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0);b=3==(k|0)?53:63;break;case 53:b=2!=(HEAPU16[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?54:55;break;case 54:b=61;break;case 55:b=0==(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str132392|0)|0)?56:61;break;case 56:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>
2]);_SavePPBuffer(e,STRING_TABLE.__str82387|0);b=_ArgumentParse(e,i,j);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0!=(HEAP32[j>>2]|0)?57:58;break;case 57:b=70;break;case 58:b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?59:60;break;case 59:_SyntaxErrorMessage(e,STRING_TABLE.__str142393|0);b=70;break;case 60:_PPCRAndIndent(e);_GetToken(e,i,HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0);b=62;break;case 61:b=e;m=_FindFunction(e,STRING_TABLE.__str122391|0);b=_GenConstant(b,30,m);HEAP32[(HEAP32[(g+8|0)>>2]+
12|0)>>2]=b;b=62;break;case 62:b=_ParseSlotOverrides(e,i,j);HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]=b;b=64;break;case 63:b=_ParseSlotOverrides(e,i,j);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=64;break;case 64:b=65;break;case 65:b=0!=(HEAP32[j>>2]|0)?66:67;break;case 66:b=70;break;case 67:b=171!=(HEAPU16[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?68:69;break;case 68:_SyntaxErrorMessage(e,STRING_TABLE.__str152394|0);b=70;break;case 69:_DecrementIndentDepth(e,3);d=g;b=71;
break;case 70:_SetEvaluationError(e,1);_ReturnExpression(e,g);_DecrementIndentDepth(e,3);d=0;b=71;break;case 71:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseInitializeInstance.X=1;
function _ReplaceClassNameWithReference(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=2==(HEAPU16[(d|0)>>1]&65535|0)?3:8;break;case 3:e=HEAP32[(HEAP32[(d+4|0)>>2]+16|0)>>2];g=_LookupDefclassInScope(b,e);c=0==(g|0)?4:5;break;case 4:_CantFindItemErrorMessage(b,STRING_TABLE.__str172396|0,e);a=0;c=9;break;case 5:c=0!=(_EnvClassAbstractP(b,g)|0)?6:7;break;case 6:_PrintErrorID(b,STRING_TABLE.__str182397|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str192398|0,STRING_TABLE.__str202399|0);_EnvPrintRouter(b,
STRING_TABLE.__str192398|0,e);_EnvPrintRouter(b,STRING_TABLE.__str192398|0,STRING_TABLE.__str212400|0);a=0;c=9;break;case 7:HEAP16[(d|0)>>1]=82;HEAP32[(d+4|0)>>2]=g;c=8;break;case 8:a=1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}_ReplaceClassNameWithReference.X=1;
function _ParseSlotOverrides(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;j=i=0;a=3;break;case 3:a=170==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?4:15;break;case 4:HEAP32[g>>2]=0;k=_ArgumentParse(d,e,g);a=1==(HEAP32[g>>2]|0)?5:6;break;case 5:_ReturnExpression(d,i);b=0;a=16;break;case 6:a=0==(k|0)?7:8;break;case 7:_SyntaxErrorMessage(d,STRING_TABLE.__str152394|0);HEAP32[g>>2]=1;_ReturnExpression(d,i);_SetEvaluationError(d,1);b=0;a=16;break;case 8:a=
9;break;case 9:a=_GenConstant(d,2,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2]);HEAP32[(k+12|0)>>2]=a;a=0==(_CollectArguments(d,HEAP32[(k+12|0)>>2],e)|0)?10:11;break;case 10:HEAP32[g>>2]=1;_ReturnExpression(d,i);b=0;a=16;break;case 11:a=0==(i|0)?12:13;break;case 12:i=k;a=14;break;case 13:HEAP32[(j+12|0)>>2]=k;a=14;break;case 14:j=HEAP32[(k+12|0)>>2];_PPCRAndIndent(d);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=3;break;case 15:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);b=i;a=16;break;case 16:return b;default:assert(0,"bad label: "+a)}}_ParseSlotOverrides.X=1;
function _ParseSimpleInstance(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m;d=h;e=f;g=c;j=0;_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=8!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?3:5;break;case 3:a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?4:5;break;case 4:a=46;break;case 5:a=2==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?6:8;break;case 6:a=0==(_strcmp(STRING_TABLE.__str102389|0,HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2])|0)?7:8;break;case 7:a=d;var n=_FindFunction(d,STRING_TABLE.__str122391|0);a=_GenConstant(a,30,n);HEAP32[(e+8|0)>>2]=a;a=13;break;case 8:a=_GenConstant(d,8,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]);HEAP32[(e+8|0)>>2]=a;_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?9:10;break;case 9:a=11;break;case 10:a=0!=(_strcmp(STRING_TABLE.__str102389|0,HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2])|0)?11:12;break;case 11:a=46;break;case 12:a=13;break;case 13:_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?14:15;break;case 14:a=46;break;case 15:i=_GenConstant(d,2,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]);HEAP32[(HEAP32[(e+8|0)>>2]+12|0)>>2]=i;i=HEAP32[(HEAP32[(e+8|0)>>2]+12|0)>>2];a=0==(_ReplaceClassNameWithReference(d,i)|0)?16:17;break;case 16:a=
46;break;case 17:_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=18;break;case 18:a=170==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?19:43;break;case 19:_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?20:21;break;case 20:a=47;break;case 21:k=_GenConstant(d,2,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]);HEAP32[(i+12|0)>>2]=k;k=_GenConstant(d,2,HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+196|0)>>2]|0)>>2]);HEAP32[(HEAP32[(i+12|0)>>2]+12|0)>>2]=k;i=HEAP32[(HEAP32[(i+12|0)>>2]+12|0)>>2];_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);k=0;a=22;break;case 22:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?23:42;break;case 23:m=HEAP16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1];a=170==(m&65535|0)?24:31;break;case 24:_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>
1]&65535|0)?25:26;break;case 25:a=27;break;case 26:a=0!=(_strcmp(HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2],STRING_TABLE.__str162395|0)|0)?27:28;break;case 27:a=47;break;case 28:_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?29:30;break;case 29:a=47;break;case 30:l=d;a=_FindFunction(d,STRING_TABLE.__str162395|0);l=_GenConstant(l,30,a);a=38;break;case 31:a=2!=(m&65535|0)?32:
37;break;case 32:a=3!=(m&65535|0)?33:37;break;case 33:a=0!=(m&65535|0)?34:37;break;case 34:a=1!=(m&65535|0)?35:37;break;case 35:a=8!=(m&65535|0)?36:37;break;case 36:a=47;break;case 37:l=_GenConstant(d,m,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]);a=38;break;case 38:a=0==(j|0)?39:40;break;case 39:j=l;a=41;break;case 40:HEAP32[(k+12|0)>>2]=l;a=41;break;case 41:k=l;_GetToken(d,g,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=22;break;case 42:HEAP32[(i+8|0)>>2]=j;_GetToken(d,g,HEAP32[(HEAP32[(d+
16|0)>>2]+84|0)>>2]+140|0);j=0;a=18;break;case 43:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?44:45;break;case 44:a=47;break;case 45:b=e;a=48;break;case 46:_SyntaxErrorMessage(d,STRING_TABLE.__str2379|0);_SetEvaluationError(d,1);_ReturnExpression(d,e);b=0;a=48;break;case 47:_SyntaxErrorMessage(d,STRING_TABLE.__str152394|0);_SetEvaluationError(d,1);_ReturnExpression(d,e);_ReturnExpression(d,j);b=0;a=48;break;case 48:return b;default:assert(0,"bad label: "+a)}}
_ParseSimpleInstance.X=1;
function _SetupQuery(h){_AllocateEnvironmentData(h,31,16,0);var f=_EnvAddSymbol(h,STRING_TABLE.__str2405|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]|0)>>2]=f;f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]|0)>>2]+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;_EnvDefineFunction2(h,STRING_TABLE.__str12406|0,111,998,STRING_TABLE.__str22407|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str32408|0,117,1E3,STRING_TABLE.__str42410|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str52411|0,98,1002,STRING_TABLE.__str62412|
0,0);_AddFunctionParser(h,STRING_TABLE.__str52411|0,1004);_EnvDefineFunction2(h,STRING_TABLE.__str72413|0,109,1006,STRING_TABLE.__str82414|0,0);_AddFunctionParser(h,STRING_TABLE.__str72413|0,1004);_EnvDefineFunction2(h,STRING_TABLE.__str92415|0,109,1008,STRING_TABLE.__str102416|0,0);_AddFunctionParser(h,STRING_TABLE.__str92415|0,1004);_EnvDefineFunction2(h,STRING_TABLE.__str112417|0,117,1010,STRING_TABLE.__str122418|0,0);_AddFunctionParser(h,STRING_TABLE.__str112417|0,1012);_EnvDefineFunction2(h,
STRING_TABLE.__str132419|0,117,1014,STRING_TABLE.__str142420|0,0);_AddFunctionParser(h,STRING_TABLE.__str132419|0,1012);_EnvDefineFunction2(h,STRING_TABLE.__str152421|0,117,1016,STRING_TABLE.__str162422|0,0);_AddFunctionParser(h,STRING_TABLE.__str152421|0,1012)}_SetupQuery.X=1;
function _GetQueryInstance(h){var f=_FindQueryCore2429(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2]);return _GetFullInstanceName(h,HEAP32[(HEAP32[(f|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+4|0)>>2]+16|0)>>2]<<2)|0)>>2])}
function _GetQueryInstanceSlot(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=_FindQueryCore2429(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2]);e=HEAP32[(HEAP32[(a|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+4|0)>>2]+16|0)>>2]<<2)|0)>>2];_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],i);a=2!=(HEAPU16[(i+4|0)>>1]&65535|0)?3:4;break;case 3:_ExpectedTypeError1(b,STRING_TABLE.__str172423|0,1,STRING_TABLE.__str182424|0);_SetEvaluationError(b,1);a=8;break;case 4:g=_FindInstanceSlot(b,e,HEAP32[(i+8|0)>>2]);a=0==(g|0)?5:6;break;case 5:_SlotExistError(b,HEAP32[(HEAP32[(i+8|0)>>2]+16|
0)>>2],STRING_TABLE.__str192425|0);a=8;break;case 6:HEAP16[(d+4|0)>>1]=HEAPU32[(g+4|0)>>2]>>>2&63;HEAP32[(d+8|0)>>2]=HEAP32[(g+8|0)>>2];a=4==(HEAPU32[(g+4|0)>>2]>>>2&63|0)?7:8;break;case 7:HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(g+8|0)>>2]+8|0)>>2]-1|0;a=8;break;case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_GetQueryInstanceSlot.X=1;
function _AnyInstances(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str52411|0,e);c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:_PushQueryCore2430(b);c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;
case 5:var g=_genalloc(b,32);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=g;c=_gm2(b,HEAP32[e>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=_TestForFirstInChain2431(b,d,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2],HEAP32[e>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,d);a=c;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_AnyInstances.X=1;
function _QueryFindInstance(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=-1;e=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str72413|0,g);a=0==(e|0)?3:4;break;case 3:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=15;break;
case 4:_PushQueryCore2430(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var j=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=j;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];a=1==(_TestForFirstInChain2431(b,e,0)|0)?8:13;break;case 8:i=_EnvCreateMultifield(b,HEAP32[g>>2]);HEAP32[(d+8|0)>>2]=i;HEAP32[(d+16|0)>>2]=HEAP32[g>>2]-1|0;i=1;a=9;break;case 9:a=
i>>>0<=HEAPU32[g>>2]>>>0?10:12;break;case 10:HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=8;a=_GetFullInstanceName(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]+((i-1|0)<<2)|0)>>2]);HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=a;a=11;break;case 11:i=i+1|0;a=9;break;case 12:a=14;break;case 13:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 14:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,e);a=15;
break;case 15:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_QueryFindInstance.X=1;
function _QueryFindAllInstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j;b=h;d=f;HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=-1;e=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],STRING_TABLE.__str92415|0,g);a=0==(e|0)?3:4;break;case 3:a=_EnvCreateMultifield(b,0);HEAP32[(d+8|0)>>2]=a;a=
15;break;case 4:_PushQueryCore2430(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var k=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|
0)>>2]+16|0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=k;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]+20|0)>>2]=HEAP32[g>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+24|0)>>2]=0;_TestEntireChain2433(b,e,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;a=_EnvCreateMultifield(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+24|0)>>2]*HEAP32[g>>2]|0);HEAP32[(d+8|0)>>2]=a;a=8;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)?9:14;break;case 9:i=0;j=HEAP32[(d+16|0)>>2]+2|0;a=
10;break;case 10:a=i>>>0<HEAPU32[g>>2]>>>0?11:13;break;case 11:HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1]=8;a=_GetFullInstanceName(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)>>2]+(i<<2)|0)>>2]);HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=a;a=12;break;case 12:i=i+1|0;j=j+1|0;a=10;break;case 13:HEAP32[(d+16|0)>>2]=j-2|0;_PopQuerySoln2434(b);a=8;break;case 14:_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>
2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,e);a=15;break;case 15:STACKTOP=c;return;
default:assert(0,"bad label: "+a)}}_QueryFindAllInstances.X=1;
function _QueryDoForInstance(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str112417|0,g);a=0==(e|0)?3:4;break;case 3:a=10;break;
case 4:_PushQueryCore2430(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=i;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=1==(_TestForFirstInChain2431(b,
e,0)|0)?8:9;break;case 8:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2],d);a=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,e);a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_QueryDoForInstance.X=1;
function _FindQueryCore2429(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];c=8;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+8|0)>>2];c=5;break;case 5:c=1<(d|0)?6:7;break;case 6:e=HEAP32[(e+4|0)>>2];d=d-1|0;c=5;break;case 7:a=HEAP32[(e|0)>>2];c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _QueryDoForAllInstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str132419|0,g);a=0==(e|0)?3:4;break;case 3:a=8;
break;case 4:_PushQueryCore2430(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>
2]+16|0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=i;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]=d;_ValueInstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);_TestEntireChain2433(b,e,0);_ValueDeinstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);_PropagateReturnValue(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,e);a=8;break;
case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_QueryDoForAllInstances.X=1;
function _DelayedQueryDoForAllInstances(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=_DetermineQueryClasses(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],STRING_TABLE.__str152421|0,g);a=0==(e|0)?3:4;break;case 3:a=
24;break;case 4:_PushQueryCore2430(b);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?5:6;break;case 5:var j=_genalloc(b,32);a=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|
0)>>2]+16|0)>>2];a=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]=j;a=_gm2(b,HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+124|0)>>2]+4|0)>>2]+20|0)>>2]=HEAP32[g>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+24|0)>>2]=0;_TestEntireChain2433(b,e,0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=8;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)?9:23;break;case 9:i=0;a=
10;break;case 10:a=i>>>0<HEAPU32[g>>2]>>>0?11:13;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]+(i<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)>>2]+(i<<2)|0)>>2];a=12;break;case 12:i=i+1|0;a=10;break;case 13:_PopQuerySoln2434(b);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>
2],d);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?14:15;break;case 14:_PropagateReturnValue(b,d);a=15;break;case 15:_PeriodicCleanup(b,0,1);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?18:16;break;case 16:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?18:17;break;case 17:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?18:22;break;case 18:a=19;break;case 19:a=
0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)?20:21;break;case 20:_PopQuerySoln2434(b);a=19;break;case 21:a=23;break;case 22:a=8;break;case 23:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;_rm(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2],HEAP32[g>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];_PopQueryCore2432(b);_DeleteQueryClasses(b,e);a=24;break;case 24:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DelayedQueryDoForAllInstances.X=1;
function _PopQueryCore2432(h){var f;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+8|0)>>2]|0)>>2];f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+8|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_PopQueryCore2432.X=1;
function _DetermineQueryClasses(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q=b;g=h;i=f;j=c;k=a;p=n=m=l=0;HEAP32[k>>2]=0;d=3;break;case 3:d=0!=(i|0)?4:23;break;case 4:d=0!=(_EvaluateExpression(g,i,q)|0)?5:6;break;case 5:_DeleteQueryClasses(g,l);e=0;d=24;break;case 6:d=2==(HEAPU16[(q+4|0)>>1]&65535|0)?7:9;break;case 7:d=(HEAP32[(q+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+124|0)>>2]|0)>>2]|0)?8:9;break;case 8:p=1;d=k;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=22;break;case 9:o=d=_FormChain2436(g,j,q);d=0!=(d|0)?10:20;break;case 10:d=0==(l|0)?11:12;break;case 11:m=n=l=o;d=16;break;case 12:d=1==(p|0)?13:14;break;case 13:p=0;n=m=HEAP32[(m+12|0)>>2]=o;d=15;break;case 14:HEAP32[(n+8|0)>>2]=o;d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:d=0!=(HEAP32[(n+8|0)>>2]|0)?18:19;break;case 18:n=HEAP32[(n+8|0)>>2];d=17;break;case 19:d=21;break;case 20:_SyntaxErrorMessage(g,
STRING_TABLE.__str202426|0);_DeleteQueryClasses(g,l);_SetEvaluationError(g,1);e=0;d=24;break;case 21:d=22;break;case 22:i=HEAP32[(i+12|0)>>2];d=3;break;case 23:e=l;d=24;break;case 24:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_DetermineQueryClasses.X=1;
function _PushQueryCore2430(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,8);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;HEAP32[(h|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2];HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+8|0)>>2]=h;return;default:assert(0,"bad label: "+f)}}_PushQueryCore2430.X=1;
function _TestForFirstInChain2431(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+124|0)>>2]+12|0)>>2]=1;i=e;a=3;break;case 3:a=0!=(i|0)?4:13;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;j=a=_GetTraversalID(d);a=-1==(a|0)?5:6;break;case 5:b=0;a=14;break;case 6:a=0!=(_TestForFirstInstanceInClass(d,HEAP32[(i+4|0)>>2],j,HEAP32[(i|0)>>2],e,g)|0)?7:8;break;case 7:_ReleaseTraversalID(d);b=1;a=14;break;case 8:_ReleaseTraversalID(d);
a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?10:9;break;case 9:a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?10:11;break;case 10:b=0;a=14;break;case 11:a=12;break;case 12:i=HEAP32[(i+8|0)>>2];a=3;break;case 13:b=0;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_TestForFirstInChain2431.X=1;
function _DeleteQueryClasses(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:8;break;case 4:c=5;break;case 5:c=0!=(HEAP32[(b+8|0)>>2]|0)?6:7;break;case 6:c=HEAP32[(b+8|0)>>2];HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(b+8|0)>>2]+8|0)>>2];_DecrementDefclassBusyCount(a,HEAP32[(c|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|
0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=5;break;case 7:c=b;b=HEAP32[(b+12|0)>>2];_DecrementDefclassBusyCount(a,HEAP32[(c|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+
20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;case 8:return;default:assert(0,"bad label: "+c)}}_DeleteQueryClasses.X=1;
function _TestEntireChain2433(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=1;g=d;a=3;break;case 3:a=0!=(g|0)?4:11;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]=0;i=a=_GetTraversalID(b);a=-1==(a|0)?5:6;break;case 5:a=11;break;case 6:_TestEntireClass(b,HEAP32[(g+4|0)>>2],i,HEAP32[(g|0)>>2],d,e);_ReleaseTraversalID(b);a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?8:7;break;case 7:a=
1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?8:9;break;case 8:a=11;break;case 9:a=10;break;case 10:g=HEAP32[(g+8|0)>>2];a=3;break;case 11:return;default:assert(0,"bad label: "+a)}}_TestEntireChain2433.X=1;
function _PopQuerySoln2434(h){HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]+4|0)>>2];_rm(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+16|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+
20|0)>>2]<<2|0);_rm(h,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+124|0)>>2]+4|0)>>2]+16|0)>>2],8)}_PopQuerySoln2434.X=1;
function _TestEntireClass(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q=e;i=h;j=f;k=c;l=a;m=b;n=d;g=0!=(HEAP8[(l+116|0)+((k|0)/8&-1)|0]<<24>>24&(1<<(k|0)%8&255)<<24>>24|0)?3:4;break;case 3:g=44;break;case 4:g=(l+116|0)+((k|0)/8&-1)|0;HEAP8[g]=(HEAP8[g]<<24>>24|(1<<(k|0)%8&255)<<24>>24)&255;g=0==(_DefclassInScope(i,l,j)|0)?5:6;break;case 5:g=44;break;case 6:p=HEAP32[(l+
88|0)>>2];g=7;break;case 7:g=0!=(p|0)?8:35;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]+(n<<2)|0)>>2]=p;g=0!=(HEAP32[(m+12|0)>>2]|0)?9:13;break;case 9:g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;_TestEntireChain2433(i,HEAP32[(m+12|0)>>2],n+1|0);g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?11:10;break;case 10:g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?11:12;break;case 11:g=35;
break;case 12:g=28;break;case 13:g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;_EvaluateExpression(i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2],q);g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;_PeriodicCleanup(i,0,1);g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?14:15;break;case 14:g=35;break;case 15:g=2!=(HEAPU16[(q+
4|0)>>1]&65535|0)?16:17;break;case 16:g=18;break;case 17:g=(HEAP32[(q+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?18:27;break;case 18:g=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2]|0)?19:25;break;case 19:g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;_ValueDeinstall(i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);_EvaluateExpression(i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+124|0)>>2]+4|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);_ValueInstall(i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+4|0)>>2]+28|0)>>2]);g=HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;_PeriodicCleanup(i,0,1);g=p+40|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?21:20;break;case 20:g=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+52|0)>>2]|0)>>2]|0)?21:22;break;
case 21:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+12|0)>>2]=1;g=35;break;case 22:g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?23:24;break;case 23:g=35;break;case 24:g=26;break;case 25:_AddSolution2435(i);g=26;break;case 26:g=27;break;case 27:g=28;break;case 28:p=HEAP32[(p+52|0)>>2];g=29;break;case 29:g=0!=(p|0)?30:31;break;case 30:var r=1==(HEAPU32[(p+24|0)>>2]>>>1&1|0)&1;g=32;break;case 31:r=0;g=32;break;case 32:g=0!=(r|0)?33:34;break;case 33:p=HEAP32[(p+52|0)>>2];g=29;break;
case 34:g=7;break;case 35:g=0!=(p|0)?36:37;break;case 36:g=44;break;case 37:o=0;g=38;break;case 38:g=o>>>0<(HEAPU16[(l+44|0)>>1]&65535)>>>0?39:44;break;case 39:_TestEntireClass(i,j,k,HEAP32[(HEAP32[((l+44|0)+4|0)>>2]+(o<<2)|0)>>2],m,n);g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?41:40;break;case 40:g=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?41:42;break;case 41:g=44;break;case 42:g=43;break;case 43:o=o+1|0;g=38;break;case 44:STACKTOP=e;return;default:assert(0,
"bad label: "+g)}}_TestEntireClass.X=1;
function _AddSolution2435(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_gm2(c,8);f=_gm2(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+20|0)>>2]<<2|0);HEAP32[(a|0)>>2]=f;b=0;f=3;break;case 3:f=b>>>0<HEAPU32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+20|0)>>2]>>>0?4:6;break;case 4:HEAP32[(HEAP32[(a|0)>>2]+(b<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]+(b<<2)|0)>>2];f=5;break;case 5:b=b+1|0;f=3;break;case 6:HEAP32[(a+
4|0)>>2]=0;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+12|0)>>2]=a;f=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+16|0)>>2]+4|0)>>2]=a;f=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+16|0)>>2]=a;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+124|0)>>2]+4|0)>>2]+24|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;return;default:assert(0,
"bad label: "+f)}}_AddSolution2435.X=1;
function _TestForFirstInstanceInClass(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r=e;j=h;k=f;l=c;m=a;n=b;o=d;g=0!=(HEAP8[(m+116|0)+((l|0)/8&-1)|0]<<24>>24&(1<<(l|0)%8&255)<<24>>24|0)?3:4;break;case 3:i=0;g=43;break;case 4:g=(m+116|0)+((l|0)/8&-1)|0;HEAP8[g]=(HEAP8[g]<<24>>24|(1<<(l|0)%8&255)<<24>>24)&255;g=0==(_DefclassInScope(j,m,k)|0)?5:6;break;case 5:i=0;
g=43;break;case 6:q=HEAP32[(m+88|0)>>2];g=7;break;case 7:g=0!=(q|0)?8:29;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+124|0)>>2]+4|0)>>2]|0)>>2]+(o<<2)|0)>>2]=q;g=0!=(HEAP32[(n+12|0)>>2]|0)?9:15;break;case 9:g=q+40|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=1==(_TestForFirstInChain2431(j,HEAP32[(n+12|0)>>2],o+1|0)|0)?10:11;break;case 10:g=q+40|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=29;break;case 11:g=q+40|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+8|
0)>>2]|0)?13:12;break;case 12:g=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?13:14;break;case 13:g=29;break;case 14:g=22;break;case 15:g=q+40|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;_EvaluateExpression(j,HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+124|0)>>2]+4|0)>>2]+4|0)>>2],r);g=HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+12|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;_PeriodicCleanup(j,0,1);g=q+40|0;HEAP32[g>>2]=HEAP32[g>>2]-
1|0;g=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?16:17;break;case 16:g=29;break;case 17:g=2!=(HEAPU16[(r+4|0)>>1]&65535|0)?18:19;break;case 18:g=20;break;case 19:g=(HEAP32[(r+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?20:21;break;case 20:g=29;break;case 21:g=22;break;case 22:q=HEAP32[(q+52|0)>>2];g=23;break;case 23:g=0!=(q|0)?24:25;break;case 24:var s=1==(HEAPU32[(q+24|0)>>2]>>>1&1|0)&1;g=26;break;case 25:s=0;g=26;break;case 26:g=0!=(s|0)?27:28;break;
case 27:q=HEAP32[(q+52|0)>>2];g=23;break;case 28:g=7;break;case 29:g=0!=(q|0)?30:33;break;case 30:if(1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)){var t=1;g=32}else g=31;break;case 31:t=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+124|0)>>2]+12|0)>>2]|0);g=32;break;case 32:i=t?0:1;g=43;break;case 33:p=0;g=34;break;case 34:g=p>>>0<(HEAPU16[(m+44|0)>>1]&65535)>>>0?35:42;break;case 35:g=0!=(_TestForFirstInstanceInClass(j,k,l,HEAP32[(HEAP32[((m+44|0)+4|0)>>2]+(p<<2)|0)>>2],n,o)|0)?36:37;
break;case 36:i=1;g=43;break;case 37:g=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?39:38;break;case 38:g=1==(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+124|0)>>2]+12|0)>>2]|0)?39:40;break;case 39:i=0;g=43;break;case 40:g=41;break;case 41:p=p+1|0;g=34;break;case 42:i=0;g=43;break;case 43:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_TestForFirstInstanceInClass.X=1;
function _FormChain2436(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o,p;d=h;e=f;g=c;p=_EnvGetCurrentModule(d);a=82==(HEAPU16[(g+4|0)>>1]&65535|0)?3:10;break;case 3:_IncrementDefclassBusyCount(d,HEAP32[(g+8|0)>>2]);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?4:5;break;case 4:var q=_genalloc(d,16);a=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>
2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];q=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=6;break;case 6:j=q;HEAP32[(j|0)>>2]=HEAP32[(g+8|0)>>2];a=0!=(_DefclassInScope(d,HEAP32[(j|0)>>2],p)|0)?7:8;break;case 7:HEAP32[(j+4|0)>>2]=p;a=9;break;case 8:HEAP32[(j+4|0)>>2]=HEAP32[(HEAP32[((HEAP32[(j|0)>>2]|0)+8|0)>>2]|0)>>2];a=9;break;case 9:HEAP32[(j+8|0)>>2]=0;HEAP32[(j+12|0)>>2]=0;
b=j;a=41;break;case 10:a=2==(HEAPU16[(g+4|0)>>1]&65535|0)?11:20;break;case 11:i=_LookupDefclassByMdlOrScope(d,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);a=0==(i|0)?12:13;break;case 12:_ClassExistError(d,e,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);b=0;a=41;break;case 13:_IncrementDefclassBusyCount(d,i);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?14:15;break;case 14:var r=_genalloc(d,16);a=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=16;break;case 16:j=r;HEAP32[(j|0)>>2]=i;a=0!=(_DefclassInScope(d,HEAP32[(j|0)>>2],p)|0)?17:18;break;case 17:HEAP32[(j+4|0)>>2]=p;a=19;break;case 18:HEAP32[(j+4|0)>>2]=HEAP32[(HEAP32[((HEAP32[(j|0)>>2]|0)+8|0)>>2]|0)>>2];a=19;break;case 19:HEAP32[(j+8|0)>>
2]=0;HEAP32[(j+12|0)>>2]=0;b=j;a=41;break;case 20:a=4==(HEAPU16[(g+4|0)>>1]&65535|0)?21:40;break;case 21:j=k=0;n=HEAP32[(g+16|0)>>2]+1|0;m=HEAP32[(g+12|0)>>2]+1|0;a=22;break;case 22:a=(m|0)<=(n|0)?23:39;break;case 23:a=2==(HEAPU16[((HEAP32[(g+8|0)>>2]+16|0)+((m-1|0)<<3)|0)>>1]&65535|0)?24:27;break;case 24:o=HEAP32[(HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((m-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];i=_LookupDefclassByMdlOrScope(d,o);a=0==(i|0)?25:26;break;case 25:_ClassExistError(d,e,o);_DeleteQueryClasses(d,j);
b=0;a=41;break;case 26:a=28;break;case 27:_DeleteQueryClasses(d,j);b=0;a=41;break;case 28:_IncrementDefclassBusyCount(d,i);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?29:30;break;case 29:var s=_genalloc(d,16);a=31;break;case 30:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];s=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=31;break;case 31:l=s;HEAP32[(l|0)>>2]=i;a=0!=(_DefclassInScope(d,HEAP32[(l|0)>>2],p)|0)?32:33;break;case 32:HEAP32[(l+4|0)>>2]=p;a=34;break;case 33:HEAP32[(l+4|0)>>2]=HEAP32[(HEAP32[((HEAP32[(l|0)>>2]|0)+8|0)>>2]|0)>>2];a=34;break;case 34:HEAP32[(l+8|0)>>2]=0;HEAP32[(l+12|0)>>2]=0;a=0==(j|0)?35:36;break;case 35:j=l;a=37;break;case 36:HEAP32[(k+8|0)>>2]=l;a=37;break;case 37:k=l;a=38;break;case 38:m=m+
1|0;a=22;break;case 39:b=j;a=41;break;case 40:b=0;a=41;break;case 41:return b;default:assert(0,"bad label: "+a)}}_FormChain2436.X=1;
function _ParseQueryNoAction(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;j=_ParseQueryRestrictions2453(e,g,i,k);b=0==(j|0)?3:4;break;case 3:d=0;b=9;break;case 4:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=0==(_ParseQueryTestExpression2454(e,g,i)|0)?5:6;break;case 5:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=9;break;case 6:_DecrementIndentDepth(e,
3);_GetToken(e,i,k);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(e,STRING_TABLE.__str2437|0);_ReturnExpression(e,g);_ReturnExpression(e,j);d=0;b=9;break;case 8:_ReplaceInstanceVariables(e,j,HEAP32[(g+8|0)>>2],1,0);_ReturnExpression(e,j);d=g;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseQueryNoAction.X=1;
function _ParseQueryRestrictions2453(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r=b;g=h;i=f;j=c;k=a;q=n=m=l=0;HEAP32[r>>2]=0;_SavePPBuffer(g,STRING_TABLE.__str102447|0);_GetToken(g,j,k);d=170!=(HEAPU16[(k|0)>>1]&65535|0)?3:4;break;case 3:d=38;break;case 4:_GetToken(g,j,k);d=170!=(HEAPU16[(k|0)>>1]&65535|0)?5:6;break;case 5:d=38;break;case 6:d=7;break;case 7:d=
170==(HEAPU16[(k|0)>>1]&65535|0)?8:35;break;case 8:_GetToken(g,j,k);d=35!=(HEAPU16[(k|0)>>1]&65535|0)?9:10;break;case 9:d=38;break;case 10:p=l;d=11;break;case 11:d=0!=(p|0)?12:15;break;case 12:d=(HEAP32[(p+4|0)>>2]|0)==(HEAP32[(k+4|0)>>2]|0)?13:14;break;case 13:_PrintErrorID(g,STRING_TABLE.__str42441|0,1,0);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,STRING_TABLE.__str112448|0);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,HEAP32[(HEAP32[(HEAP32[(i+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str52442|
0,STRING_TABLE.__str82445|0);d=39;break;case 14:p=HEAP32[(p+12|0)>>2];d=11;break;case 15:p=_GenConstant(g,35,HEAP32[(k+4|0)>>2]);d=0==(l|0)?16:17;break;case 16:l=p;d=18;break;case 17:HEAP32[(m+12|0)>>2]=p;d=18;break;case 18:m=p;_SavePPBuffer(g,STRING_TABLE.__str102447|0);n=_ArgumentParse(g,j,r);d=0!=(HEAP32[r>>2]|0)?19:20;break;case 19:d=39;break;case 20:d=0==(n|0)?21:22;break;case 21:d=38;break;case 22:d=0==(_ReplaceClassNameWithReference2460(g,n)|0)?23:24;break;case 23:d=39;break;case 24:o=n;_SavePPBuffer(g,
STRING_TABLE.__str102447|0);d=25;break;case 25:p=d=_ArgumentParse(g,j,r);d=0!=(d|0)?26:29;break;case 26:d=0==(_ReplaceClassNameWithReference2460(g,p)|0)?27:28;break;case 27:d=39;break;case 28:o=HEAP32[(o+12|0)>>2]=p;_SavePPBuffer(g,STRING_TABLE.__str102447|0);d=25;break;case 29:d=0!=(HEAP32[r>>2]|0)?30:31;break;case 30:d=39;break;case 31:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str122449|0);p=_GenConstant(g,2,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+124|0)>>2]|0)>>2]);o=HEAP32[(o+12|0)>>
2]=p;d=0==(HEAP32[(i+8|0)>>2]|0)?32:33;break;case 32:HEAP32[(i+8|0)>>2]=n;d=34;break;case 33:HEAP32[(q+12|0)>>2]=n;d=34;break;case 34:q=o;n=0;_SavePPBuffer(g,STRING_TABLE.__str102447|0);_GetToken(g,j,k);d=7;break;case 35:d=171!=(HEAPU16[(k|0)>>1]&65535|0)?36:37;break;case 36:d=38;break;case 37:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str122449|0);e=l;d=40;break;case 38:_SyntaxErrorMessage(g,STRING_TABLE.__str2437|0);d=39;break;case 39:_ReturnExpression(g,n);_ReturnExpression(g,i);
_ReturnExpression(g,l);e=0;d=40;break;case 40:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseQueryRestrictions2453.X=1;
function _ParseQueryTestExpression2454(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i;b=a;var j;e=h;g=f;i=c;HEAP32[b>>2]=0;j=_GetParsedBindNames(e);_SetParsedBindNames(e,0);i=_ArgumentParse(e,i,b);b=1==(HEAP32[b>>2]|0)?3:4;break;case 3:_SetParsedBindNames(e,j);_ReturnExpression(e,g);d=0;b=9;break;case 4:b=0==(i|0)?5:6;break;case 5:_SetParsedBindNames(e,j);_SyntaxErrorMessage(e,
STRING_TABLE.__str2437|0);_ReturnExpression(e,g);d=0;b=9;break;case 6:HEAP32[(i+12|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(g+8|0)>>2]=i;b=0==(_ParsedBindNamesEmpty(e)|0)?7:8;break;case 7:_ClearParsedBindNames(e);_SetParsedBindNames(e,j);_PrintErrorID(e,STRING_TABLE.__str42441|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str52442|0,STRING_TABLE.__str92446|0);_EnvPrintRouter(e,STRING_TABLE.__str52442|0,HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str52442|0,STRING_TABLE.__str82445|
0);_ReturnExpression(e,g);d=0;b=9;break;case 8:_SetParsedBindNames(e,j);d=1;b=9;break;case 9:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseQueryTestExpression2454.X=1;
function _ReplaceInstanceVariables(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;k=b;m=_FindFunction(e,STRING_TABLE.__str12438|0);n=_FindFunction(e,STRING_TABLE.__str22439|0);d=3;break;case 3:d=0!=(i|0)?4:23;break;case 4:d=35==(HEAPU16[(i|0)>>1]&65535|0)?5:17;break;case 5:l=g;o=0;d=6;break;case 6:d=0!=(l|0)?7:8;break;case 7:var p=(HEAP32[(l+4|0)>>2]|0)!=(HEAP32[(i+4|0)>>2]|0)&1;d=9;break;case 8:p=0;d=9;break;case 9:d=0!=(p|0)?10:11;break;case 10:l=HEAP32[(l+12|
0)>>2];o=o+1|0;d=6;break;case 11:d=0!=(l|0)?12:13;break;case 12:HEAP16[(i|0)>>1]=30;HEAP32[(i+4|0)>>2]=m;l=e;d=_EnvAddLong(e,k);l=_GenConstant(l,1,d);d=e;var q=_EnvAddLong(e,o);d=_GenConstant(d,1,q);HEAP32[(l+12|0)>>2]=d;HEAP32[(i+8|0)>>2]=l;d=16;break;case 13:d=1==(j|0)?14:15;break;case 14:_ReplaceSlotReference2458(e,g,i,n,k);d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:d=0!=(HEAP32[(i+8|0)>>2]|0)?18:22;break;case 18:d=0!=(_IsQueryFunction2459(i)|0)?19:20;break;case 19:_ReplaceInstanceVariables(e,
g,HEAP32[(i+8|0)>>2],j,k+1|0);d=21;break;case 20:_ReplaceInstanceVariables(e,g,HEAP32[(i+8|0)>>2],j,k);d=21;break;case 21:d=22;break;case 22:i=HEAP32[(i+12|0)>>2];d=3;break;case 23:return;default:assert(0,"bad label: "+d)}}_ReplaceInstanceVariables.X=1;
function _ParseQueryAction(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;j=_ParseQueryRestrictions2453(e,g,i,k);b=0==(j|0)?3:4;break;case 3:d=0;b=11;break;case 4:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=0==(_ParseQueryTestExpression2454(e,g,i)|0)?5:6;break;case 5:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=11;break;case 6:_PPCRAndIndent(e);
b=0==(_ParseQueryActionExpression2457(e,g,i,j,k)|0)?7:8;break;case 7:_DecrementIndentDepth(e,3);_ReturnExpression(e,j);d=0;b=11;break;case 8:_DecrementIndentDepth(e,3);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?9:10;break;case 9:_SyntaxErrorMessage(e,STRING_TABLE.__str2437|0);_ReturnExpression(e,g);_ReturnExpression(e,j);d=0;b=11;break;case 10:_ReplaceInstanceVariables(e,j,HEAP32[(g+8|0)>>2],1,0);_ReplaceInstanceVariables(e,j,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2],0,0);_ReturnExpression(e,j);d=g;b=11;break;
case 11:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ParseQueryAction.X=1;
function _IsQueryFunction2459(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=30!=(HEAPU16[(a|0)>>1]&65535|0)?3:4;break;case 3:c=0;f=17;break;case 4:b=HEAP32[(HEAP32[(a+4|0)>>2]+12|0)>>2];f=1002==(b|0)?5:6;break;case 5:c=1;f=17;break;case 6:f=1006==(b|0)?7:8;break;case 7:c=1;f=17;break;case 8:f=1008==(b|0)?9:10;break;case 9:c=1;f=17;break;case 10:f=1010==(b|0)?11:12;break;case 11:c=1;f=17;break;case 12:f=1014==(b|0)?13:14;break;case 13:c=1;f=17;break;case 14:f=1016==(b|0)?15:16;break;case 15:c=
1;f=17;break;case 16:c=0;f=17;break;case 17:return c;default:assert(0,"bad label: "+f)}}_IsQueryFunction2459.X=1;
function _ParseQueryActionExpression2457(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;d=b;m=_GetParsedBindNames(g);_SetParsedBindNames(g,0);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+44|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2];j=_GroupActions(g,j,d,1,0,0);_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,HEAP32[(d+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+180|0)>>2]+
44|0)>>2]=0;d=4;break;case 3:_SetParsedBindNames(g,m);_ReturnExpression(g,i);e=0;d=18;break;case 4:d=0==(j|0)?5:6;break;case 5:_SetParsedBindNames(g,m);_SyntaxErrorMessage(g,STRING_TABLE.__str2437|0);_ReturnExpression(g,i);e=0;d=18;break;case 6:HEAP32[(j+12|0)>>2]=HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2]=j;n=_GetParsedBindNames(g);o=0;d=7;break;case 7:d=0!=(n|0)?8:14;break;case 8:l=k;d=9;break;case 9:d=0!=(l|0)?10:13;break;case 10:d=(HEAP32[(l+4|0)>>2]|0)==(HEAP32[(n|
0)>>2]|0)?11:12;break;case 11:_ClearParsedBindNames(g);_SetParsedBindNames(g,m);_PrintErrorID(g,STRING_TABLE.__str42441|0,3,0);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,STRING_TABLE.__str62443|0);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,STRING_TABLE.__str72444|0);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,HEAP32[(HEAP32[(HEAP32[(i+4|0)>>2]|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str52442|0,STRING_TABLE.__str82445|
0);_ReturnExpression(g,i);e=0;d=18;break;case 12:l=HEAP32[(l+12|0)>>2];d=9;break;case 13:o=n;n=HEAP32[(n+8|0)>>2];d=7;break;case 14:d=0==(o|0)?15:16;break;case 15:_SetParsedBindNames(g,m);d=17;break;case 16:HEAP32[(o+8|0)>>2]=m;d=17;break;case 17:e=1;d=18;break;case 18:return e;default:assert(0,"bad label: "+d)}}_ParseQueryActionExpression2457.X=1;
function _ReplaceSlotReference2458(h,f,c,a,b){var d=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r=d;g=h;i=f;j=c;k=a;l=b;p=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];m=_strlen(p);e=3>m>>>0?3:4;break;case 3:e=21;break;case 4:o=m-2|0;e=5;break;case 5:e=1<=o>>>0?6:21;break;case 6:e=58==(HEAP8[p+o|0]<<24>>24|0)?7:8;break;case 7:e=1<=o>>>0?9:19;break;case 8:e=19;break;case 9:q=i;n=0;e=10;
break;case 10:if(0!=(q|0))e=11;else{var s=0;e=14}break;case 11:e=o;var t=_strlen(HEAP32[(HEAP32[(q+4|0)>>2]+16|0)>>2]);if((e|0)!=(t|0)){var u=1;e=13}else e=12;break;case 12:u=0!=(_strncmp(HEAP32[(HEAP32[(q+4|0)>>2]+16|0)>>2],p,o)|0);e=13;break;case 13:s=u;e=14;break;case 14:e=s?15:16;break;case 15:q=HEAP32[(q+12|0)>>2];n=n+1|0;e=10;break;case 16:e=0!=(q|0)?17:18;break;case 17:_OpenStringSource(g,STRING_TABLE.__str32440|0,(p+o|0)+1|0,0);e=_GetPPBufferStatus(g);_SetPPBufferStatus(g,0);_GetToken(g,STRING_TABLE.__str32440|
0,r);_SetPPBufferStatus(g,e);_CloseStringSource(g,STRING_TABLE.__str32440|0);HEAP16[(j|0)>>1]=30;HEAP32[(j+4|0)>>2]=k;e=g;t=_EnvAddLong(g,l);e=_GenConstant(e,1,t);HEAP32[(j+8|0)>>2]=e;e=g;t=_EnvAddLong(g,n);e=_GenConstant(e,1,t);HEAP32[(HEAP32[(j+8|0)>>2]+12|0)>>2]=e;e=_GenConstant(g,HEAP16[(r|0)>>1],HEAP32[(r+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(j+8|0)>>2]+12|0)>>2]+12|0)>>2]=e;e=21;break;case 18:e=19;break;case 19:e=20;break;case 20:o=o-1|0;e=5;break;case 21:STACKTOP=d;return;default:assert(0,"bad label: "+
e)}}_ReplaceSlotReference2458.X=1;function _ReplaceClassNameWithReference2460(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=2==(HEAPU16[(d|0)>>1]&65535|0)?3:6;break;case 3:e=HEAP32[(HEAP32[(d+4|0)>>2]+16|0)>>2];g=_LookupDefclassByMdlOrScope(b,e);c=0==(g|0)?4:5;break;case 4:_CantFindItemErrorMessage(b,STRING_TABLE.__str132450|0,e);a=0;c=7;break;case 5:HEAP16[(d|0)>>1]=82;HEAP32[(d+4|0)>>2]=g;c=6;break;case 6:a=1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _IOFunctionDefinitions(h){_AllocateEnvironmentData(h,64,4,0);var f=_setlocale(0,0),f=_EnvAddSymbol(h,f);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+256|0)>>2]|0)>>2]=f;f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+256|0)>>2]|0)>>2]+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;_EnvDefineFunction2(h,STRING_TABLE.__str2461|0,118,1018,STRING_TABLE.__str12462|0,STRING_TABLE.__str22463|0);_EnvDefineFunction2(h,STRING_TABLE.__str32464|0,117,1020,STRING_TABLE.__str42465|0,STRING_TABLE.__str52466|0);_EnvDefineFunction2(h,STRING_TABLE.__str62467|
0,98,1022,STRING_TABLE.__str72468|0,STRING_TABLE.__str82469|0);_EnvDefineFunction2(h,STRING_TABLE.__str92470|0,98,1024,STRING_TABLE.__str102471|0,STRING_TABLE.__str52466|0);_EnvDefineFunction2(h,STRING_TABLE.__str112472|0,105,1026,STRING_TABLE.__str122473|0,STRING_TABLE.__str52466|0);_EnvDefineFunction2(h,STRING_TABLE.__str132474|0,98,1028,STRING_TABLE.__str142475|0,STRING_TABLE.__str152476|0);_EnvDefineFunction2(h,STRING_TABLE.__str162477|0,98,1030,STRING_TABLE.__str172478|0,STRING_TABLE.__str182479|
0);_EnvDefineFunction2(h,STRING_TABLE.__str192480|0,115,1032,STRING_TABLE.__str202481|0,STRING_TABLE.__str212482|0);_EnvDefineFunction2(h,STRING_TABLE.__str222483|0,107,1034,STRING_TABLE.__str232484|0,STRING_TABLE.__str52466|0);_EnvDefineFunction2(h,STRING_TABLE.__str242485|0,117,1036,STRING_TABLE.__str252486|0,STRING_TABLE.__str52466|0);_EnvDefineFunction2(h,STRING_TABLE.__str262487|0,117,1038,STRING_TABLE.__str272488|0,STRING_TABLE.__str52466|0)}_IOFunctionDefinitions.X=1;
function _PrintoutFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f;a=h;e=c=_EnvArgCountCheck(a,STRING_TABLE.__str2461|0,1,1);c=-1==(c|0)?3:4;break;case 3:c=36;break;case 4:b=_GetLogicalName(a,1,STRING_TABLE.__str282489|0);c=0==(b|0)?5:6;break;case 5:_IllegalLogicalNameMessage(a,STRING_TABLE.__str2461|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=36;break;case 6:c=
0==(_strcmp(b,STRING_TABLE.__str292490|0)|0)?7:8;break;case 7:c=36;break;case 8:c=0==(_QueryRouters(a,b)|0)?9:10;break;case 9:_UnrecognizedRouterMessage(a,b);c=36;break;case 10:c=11;break;case 11:d=2;c=12;break;case 12:c=(d|0)<=(e|0)?13:36;break;case 13:_EnvRtnUnknown(a,d,g);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?14:15;break;case 14:c=36;break;case 15:c=HEAPU16[(g+4|0)>>1]&65535;c=2==(c|0)?16:3==(c|0)?32:33;break;case 16:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],
STRING_TABLE.__str302491|0)|0)?17:18;break;case 17:_EnvPrintRouter(a,b,STRING_TABLE.__str312492|0);c=31;break;case 18:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str322493|0)|0)?19:20;break;case 19:_EnvPrintRouter(a,b,STRING_TABLE.__str332494|0);c=30;break;case 20:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str342495|0)|0)?21:22;break;case 21:_EnvPrintRouter(a,b,STRING_TABLE.__str352496|0);c=29;break;case 22:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>
2],STRING_TABLE.__str362497|0)|0)?23:24;break;case 23:_EnvPrintRouter(a,b,STRING_TABLE.__str372498|0);c=28;break;case 24:c=0==(_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str382499|0)|0)?25:26;break;case 25:_EnvPrintRouter(a,b,STRING_TABLE.__str312492|0);c=27;break;case 26:_EnvPrintRouter(a,b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);c=27;break;case 27:c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=31;break;case 31:c=34;break;case 32:_EnvPrintRouter(a,b,HEAP32[(HEAP32[(g+8|
0)>>2]+16|0)>>2]);c=34;break;case 33:_PrintDataObject(a,b,g);c=34;break;case 34:c=35;break;case 35:d=d+1|0;c=12;break;case 36:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PrintoutFunction.X=1;
function _ReadFunction(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;i=0;g=a=_EnvArgCountCheck(b,STRING_TABLE.__str32464|0,2,1);a=-1==(a|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 4:a=0==(g|0)?5:6;break;case 5:i=STRING_TABLE.__str402501|0;a=11;break;case 6:a=1==(g|0)?7:10;break;case 7:i=
_GetLogicalName(b,1,STRING_TABLE.__str402501|0);a=0==(i|0)?8:9;break;case 8:_IllegalLogicalNameMessage(b,STRING_TABLE.__str32464|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 9:a=10;break;case 10:a=11;break;case 11:a=0==(_QueryRouters(b,i)|0)?12:13;break;case 12:_UnrecognizedRouterMessage(b,i);_SetHaltExecution(b,1);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|
0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 13:a=0==(_strcmp(i,STRING_TABLE.__str402501|0)|0)?14:15;break;case 14:_ReadTokenFromStdin(b,e);a=16;break;case 15:_GetToken(b,i,e);a=16;break;case 16:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0)>>2]=-1;HEAP16[(d+4|0)>>1]=HEAP16[(e|0)>>1];a=0==(HEAPU16[(e|0)>>1]&65535|0)?21:17;break;case 17:a=3==(HEAPU16[(e|0)>>1]&65535|0)?21:18;break;case 18:a=8==(HEAPU16[(e|0)>>1]&65535|0)?21:19;break;case 19:a=2==(HEAPU16[(e|0)>>1]&65535|0)?21:20;break;case 20:a=1==(HEAPU16[(e|
0)>>1]&65535|0)?21:22;break;case 21:HEAP32[(d+8|0)>>2]=HEAP32[(e+4|0)>>2];a=29;break;case 22:a=172==(HEAPU16[(e|0)>>1]&65535|0)?23:24;break;case 23:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str412502|0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 24:a=173==(HEAPU16[(e|0)>>1]&65535|0)?25:26;break;case 25:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=27;break;case 26:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,HEAP32[(e+8|0)>>2]);HEAP32[(d+8|0)>>2]=a;a=27;
break;case 27:a=28;break;case 28:a=29;break;case 29:a=30;break;case 30:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReadFunction.X=1;
function _OpenFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f;b=h;i=0;d=c=_EnvArgRangeCheck(b,STRING_TABLE.__str62467|0,2,3);c=-1==(c|0)?3:4;break;case 3:a=0;c=24;break;case 4:e=c=_GetFileName(b,STRING_TABLE.__str62467|0,1);c=0==(c|0)?5:6;break;case 5:a=0;c=24;break;case 6:g=_GetLogicalName(b,2,0);c=0==(g|0)?7:8;break;case 7:_SetHaltExecution(b,1);_SetEvaluationError(b,
1);_IllegalLogicalNameMessage(b,STRING_TABLE.__str62467|0);a=0;c=24;break;case 8:c=0!=(_FindFile(b,g)|0)?9:10;break;case 9:_SetHaltExecution(b,1);_SetEvaluationError(b,1);_PrintErrorID(b,STRING_TABLE.__str422503|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str432504|0,STRING_TABLE.__str442505|0);_EnvPrintRouter(b,STRING_TABLE.__str432504|0,g);_EnvPrintRouter(b,STRING_TABLE.__str432504|0,STRING_TABLE.__str452506|0);a=0;c=24;break;case 10:c=2==(d|0)?11:12;break;case 11:i=STRING_TABLE.__str462507|0;c=17;
break;case 12:c=3==(d|0)?13:16;break;case 13:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str62467|0,3,3,j)|0)?14:15;break;case 14:a=0;c=24;break;case 15:i=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];c=16;break;case 16:c=17;break;case 17:c=0!=(_strcmp(i,STRING_TABLE.__str462507|0)|0)?18:23;break;case 18:c=0!=(_strcmp(i,STRING_TABLE.__str472508|0)|0)?19:23;break;case 19:c=0!=(_strcmp(i,STRING_TABLE.__str482509|0)|0)?20:23;break;case 20:c=0!=(_strcmp(i,STRING_TABLE.__str492510|0)|0)?21:23;break;case 21:c=0!=(_strcmp(i,
STRING_TABLE.__str502511|0)|0)?22:23;break;case 22:_SetHaltExecution(b,1);_SetEvaluationError(b,1);_ExpectedTypeError1(b,STRING_TABLE.__str62467|0,3,STRING_TABLE.__str512512|0);a=0;c=24;break;case 23:a=_OpenAFile(b,e,i,g);c=24;break;case 24:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_OpenFunction.X=1;
function _CloseFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;b=f=_EnvArgCountCheck(a,STRING_TABLE.__str92470|0,2,1);f=-1==(f|0)?3:4;break;case 3:c=0;f=9;break;case 4:f=0==(b|0)?5:6;break;case 5:c=_CloseAllFiles(a);f=9;break;case 6:d=_GetLogicalName(a,1,0);f=0==(d|0)?7:8;break;case 7:_IllegalLogicalNameMessage(a,STRING_TABLE.__str92470|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=0;f=9;break;case 8:c=_CloseFile(a,d);f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _GetCharFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;b=f=_EnvArgCountCheck(a,STRING_TABLE.__str112472|0,2,1);f=-1==(f|0)?3:4;break;case 3:c=-1;f=12;break;case 4:f=0==(b|0)?5:6;break;case 5:d=STRING_TABLE.__str402501|0;f=9;break;case 6:d=_GetLogicalName(a,1,STRING_TABLE.__str402501|0);f=0==(d|0)?7:8;break;case 7:_IllegalLogicalNameMessage(a,STRING_TABLE.__str112472|0);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=-1;f=12;break;case 8:f=9;break;case 9:f=0==(_QueryRouters(a,
d)|0)?10:11;break;case 10:_UnrecognizedRouterMessage(a,d);_SetHaltExecution(a,1);_SetEvaluationError(a,1);c=-1;f=12;break;case 11:c=_EnvGetcRouter(a,d);f=12;break;case 12:return c;default:assert(0,"bad label: "+f)}}_GetCharFunction.X=1;
function _RemoveFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str132474|0,0,1)|0)?3:4;break;case 3:c=0;f=7;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str132474|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=7;break;case 6:c=_genremove(b);f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _RenameFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str162477|0,0,2)|0)?3:4;break;case 3:c=0;f=9;break;case 4:b=f=_GetFileName(a,STRING_TABLE.__str162477|0,1);f=0==(f|0)?5:6;break;case 5:c=0;f=9;break;case 6:d=f=_GetFileName(a,STRING_TABLE.__str162477|0,2);f=0==(f|0)?7:8;break;case 7:c=0;f=9;break;case 8:c=_genrename(b,d);f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _FormatFunction(h){var f=STACKTOP;STACKTOP+=608;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l=f,m=f+4,n=f+516,o,p=f+596,q=f+600,r,s=f+604,t;b=h;k=3;o=HEAP32[l>>2]=0;HEAP32[p>>2]=0;HEAP32[q>>2]=0;r=_EnvAddSymbol(b,__str522513|0);d=c=_EnvArgCountCheck(b,STRING_TABLE.__str192480|0,1,2);c=-1==(c|0)?3:4;break;case 3:a=r;c=48;break;case 4:i=c=_GetLogicalName(b,1,STRING_TABLE.__str282489|0);c=0==(c|
0)?5:6;break;case 5:_IllegalLogicalNameMessage(b,STRING_TABLE.__str192480|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);a=r;c=48;break;case 6:c=0==(_strcmp(i,STRING_TABLE.__str292490|0)|0)?7:8;break;case 7:c=11;break;case 8:c=0==(_QueryRouters(b,i)|0)?9:10;break;case 9:_UnrecognizedRouterMessage(b,i);a=r;c=48;break;case 10:c=11;break;case 11:g=c=_ControlStringCheck(b,d);c=0==(c|0)?12:13;break;case 12:a=r;c=48;break;case 13:c=14;break;case 14:c=0!=(HEAP8[g+HEAP32[l>>2]|0]<<24>>24|0)?15:42;break;
case 15:c=37!=(HEAP8[g+HEAP32[l>>2]|0]<<24>>24|0)?16:23;break;case 16:e=HEAP32[l>>2];c=17;break;case 17:if(37!=(HEAP8[g+HEAP32[l>>2]|0]<<24>>24|0))c=18;else{var u=0;c=20}break;case 18:0!=(HEAP8[g+HEAP32[l>>2]|0]<<24>>24|0)?c=19:(u=0,c=20);break;case 19:u=80>(HEAP32[l>>2]-e|0)>>>0;c=20;break;case 20:c=u?21:22;break;case 21:HEAP32[l>>2]=HEAP32[l>>2]+1|0;c=17;break;case 22:o=_AppendNToString(b,g+e|0,o,HEAP32[l>>2]-e|0,q,p);c=41;break;case 23:e=HEAP32[l>>2];HEAP32[l>>2]=HEAP32[l>>2]+1|0;j=_FindFormatFlag(g,
l,m|0,s);c=32!=(j<<24>>24|0)?24:37;break;case 24:_strncpy(n|0,g+e|0,HEAP32[l>>2]-e|0);HEAP8[n+(HEAP32[l>>2]-e|0)|0]=0;c=0!=(HEAP32[s>>2]|0)?30:25;break;case 25:c=100==(j<<24>>24|0)?29:26;break;case 26:c=111==(j<<24>>24|0)?29:27;break;case 27:c=117==(j<<24>>24|0)?29:28;break;case 28:c=120==(j<<24>>24|0)?29:30;break;case 29:HEAP32[s>>2]=1;HEAP8[n+((HEAP32[l>>2]-e|0)-1|0)|0]=108;HEAP8[n+(HEAP32[l>>2]-e|0)|0]=j;HEAP8[n+((HEAP32[l>>2]-e|0)+1|0)|0]=0;c=30;break;case 30:t=c=_PrintFormatFlag(b,n|0,k,j<<24>>
24,HEAP32[s>>2]);c=0==(c|0)?31:34;break;case 31:c=0!=(o|0)?32:33;break;case 32:_rm(b,o,HEAP32[p>>2]);c=33;break;case 33:a=r;c=48;break;case 34:o=_AppendToString(b,t,o,q,p);c=0==(o|0)?35:36;break;case 35:a=r;c=48;break;case 36:k=k+1|0;c=40;break;case 37:o=_AppendToString(b,m|0,o,q,p);c=0==(o|0)?38:39;break;case 38:a=r;c=48;break;case 39:c=40;break;case 40:c=41;break;case 41:c=14;break;case 42:c=0!=(o|0)?43:46;break;case 43:r=_EnvAddSymbol(b,o);c=0!=(_strcmp(i,STRING_TABLE.__str292490|0)|0)?44:45;break;
case 44:_EnvPrintRouter(b,i,o);c=45;break;case 45:_rm(b,o,HEAP32[p>>2]);c=47;break;case 46:r=_EnvAddSymbol(b,__str522513|0);c=47;break;case 47:a=r;c=48;break;case 48:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_FormatFunction.X=1;
function _ReadlineFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j;b=h;d=f;HEAP32[g>>2]=0;HEAP16[(d+4|0)>>1]=3;i=a=_EnvArgCountCheck(b,STRING_TABLE.__str222483|0,2,1);a=-1==(a|0)?3:4;break;case 3:a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=18;break;case 4:a=0==(i|0)?5:6;break;case 5:j=STRING_TABLE.__str402501|0;a=9;break;case 6:j=_GetLogicalName(b,
1,STRING_TABLE.__str402501|0);a=0==(j|0)?7:8;break;case 7:_IllegalLogicalNameMessage(b,STRING_TABLE.__str222483|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=18;break;case 8:a=9;break;case 9:a=0==(_QueryRouters(b,j)|0)?10:11;break;case 10:_UnrecognizedRouterMessage(b,j);_SetHaltExecution(b,1);_SetEvaluationError(b,1);a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=18;break;case 11:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+184|0)>>2]|0)>>2]=0;e=_FillBuffer(b,j,HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0,g);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0)>>2]=-1;a=0!=(_GetHaltExecution(b)|0)?12:15;break;case 12:a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=0!=(e|0)?13:14;break;case 13:_rm(b,e,HEAP32[g>>2]|0);a=14;break;case 14:a=18;break;case 15:a=0==(e|0)?16:17;break;case 16:a=_EnvAddSymbol(b,STRING_TABLE.__str412502|0);HEAP32[(d+8|0)>>2]=a;HEAP16[(d+4|0)>>1]=2;a=18;break;case 17:a=_EnvAddSymbol(b,
e);HEAP32[(d+8|0)>>2]=a;_rm(b,e,HEAP32[g>>2]|0);a=18;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReadlineFunction.X=1;
function _SetLocaleFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=a=_EnvArgCountCheck(b,STRING_TABLE.__str242485|0,2,1);a=-1==(a|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=9;break;case 4:a=0==(g|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=3;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+256|0)>>2]|0)>>2];a=9;break;case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str242485|0,1,3,e)|0)?7:8;break;case 7:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=9;break;case 8:HEAP16[(d+4|0)>>1]=3;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+256|0)>>2]|0)>>2];_DecrementSymbolCount(b,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+256|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+256|0)>>2]|0)>>2]=HEAP32[(e+8|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+256|0)>>2]|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SetLocaleFunction.X=1;
function _ReadNumberFunction(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;i=0;g=a=_EnvArgCountCheck(b,STRING_TABLE.__str32464|0,2,1);a=-1==(a|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 4:a=0==(g|0)?5:6;break;case 5:i=STRING_TABLE.__str402501|0;a=11;break;case 6:a=1==(g|0)?7:10;break;case 7:i=
_GetLogicalName(b,1,STRING_TABLE.__str402501|0);a=0==(i|0)?8:9;break;case 8:_IllegalLogicalNameMessage(b,STRING_TABLE.__str32464|0);_SetHaltExecution(b,1);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 9:a=10;break;case 10:a=11;break;case 11:a=0==(_QueryRouters(b,i)|0)?12:13;break;case 12:_UnrecognizedRouterMessage(b,i);_SetHaltExecution(b,1);_SetEvaluationError(b,1);HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|
0);HEAP32[(d+8|0)>>2]=a;a=30;break;case 13:a=0==(_strcmp(i,STRING_TABLE.__str402501|0)|0)?14:15;break;case 14:_ReadNumber(b,i,e,1);a=16;break;case 15:_ReadNumber(b,i,e,0);a=16;break;case 16:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0)>>2]=-1;HEAP16[(d+4|0)>>1]=HEAP16[(e|0)>>1];a=0==(HEAPU16[(e|0)>>1]&65535|0)?21:17;break;case 17:a=3==(HEAPU16[(e|0)>>1]&65535|0)?21:18;break;case 18:a=8==(HEAPU16[(e|0)>>1]&65535|0)?21:19;break;case 19:a=2==(HEAPU16[(e|0)>>1]&65535|0)?21:20;break;case 20:a=1==(HEAPU16[(e|
0)>>1]&65535|0)?21:22;break;case 21:HEAP32[(d+8|0)>>2]=HEAP32[(e+4|0)>>2];a=29;break;case 22:a=172==(HEAPU16[(e|0)>>1]&65535|0)?23:24;break;case 23:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str412502|0);HEAP32[(d+8|0)>>2]=a;a=28;break;case 24:a=173==(HEAPU16[(e|0)>>1]&65535|0)?25:26;break;case 25:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+8|0)>>2]=a;a=27;break;case 26:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,HEAP32[(e+8|0)>>2]);HEAP32[(d+8|0)>>2]=a;a=27;
break;case 27:a=28;break;case 28:a=29;break;case 29:a=30;break;case 30:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReadNumberFunction.X=1;
function _ReadTokenFromStdin(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i;b=h;d=f;HEAP16[(d|0)>>1]=172;a=3;break;case 3:a=172==(HEAPU16[(d|0)>>1]&65535|0)?4:19;break;case 4:e=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0)>>2]=0;HEAP32[g>>2]=0;i=_EnvGetcRouter(b,STRING_TABLE.__str402501|0);a=5;break;case 5:if(10!=(i|0))a=6;else{var j=0;a=9}break;case 6:13!=(i|0)?a=7:(j=
0,a=9);break;case 7:-1!=(i|0)?a=8:(j=0,a=9);break;case 8:j=0!=(_GetHaltExecution(b)|0)^1;a=9;break;case 9:a=j?10:11;break;case 10:e=_ExpandStringWithChar(b,i,e,HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]|0,g,HEAP32[g>>2]+80|0);i=_EnvGetcRouter(b,STRING_TABLE.__str402501|0);a=5;break;case 11:_OpenStringSource(b,STRING_TABLE.__str32464|0,e,0);_GetToken(b,STRING_TABLE.__str32464|0,d);_CloseStringSource(b,STRING_TABLE.__str32464|0);a=0<HEAPU32[g>>2]>>>0?12:13;break;case 12:_rm(b,e,HEAP32[g>>2]);a=13;break;
case 13:a=0!=(_GetHaltExecution(b)|0)?14:15;break;case 14:HEAP16[(d|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str392500|0);HEAP32[(d+4|0)>>2]=a;a=15;break;case 15:a=172==(HEAPU16[(d|0)>>1]&65535|0)?16:18;break;case 16:a=-1==(i|0)?17:18;break;case 17:HEAP16[(d|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str412502|0);HEAP32[(d+4|0)>>2]=a;a=18;break;case 18:a=3;break;case 19:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReadTokenFromStdin.X=1;
function _ControlStringCheck(h,f){var c=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j=c+24,k=c+36,l=c+40,m;d=h;e=f;a=0==(_EnvArgTypeCheck(d,STRING_TABLE.__str192480|0,2,3,g)|0)?3:4;break;case 3:b=0;a=15;break;case 4:m=0;i=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];HEAP32[l>>2]=0;a=5;break;case 5:a=0!=(HEAP8[i+HEAP32[l>>2]|0]<<24>>24|0)?6:12;break;case 6:a=37==(HEAP8[i+HEAP32[l>>2]|0]<<24>>
24|0)?7:10;break;case 7:HEAP32[l>>2]=HEAP32[l>>2]+1|0;a=32!=(_FindFormatFlag(i,l,j|0,k)<<24>>24|0)?8:9;break;case 8:m=m+1|0;a=9;break;case 9:a=11;break;case 10:HEAP32[l>>2]=HEAP32[l>>2]+1|0;a=11;break;case 11:a=5;break;case 12:a=(m|0)!=(e-2|0)?13:14;break;case 13:_ExpectedCountError(d,STRING_TABLE.__str192480|0,0,m+2|0);_SetEvaluationError(d,1);b=0;a=15;break;case 14:b=i;a=15;break;case 15:return a=b,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ControlStringCheck.X=1;
function _FindFormatFlag(h,f,c,a){var b=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;o=0;m=32;HEAP32[k>>2]=0;d=110==(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?3:4;break;case 3:_sprintf(j,STRING_TABLE.__str312492|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=i;HEAP32[e>>2]=HEAP32[e>>
2]+1|0;e=m;d=35;break;case 4:d=114==(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?5:6;break;case 5:_sprintf(j,STRING_TABLE.__str562517|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=i;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=m;d=35;break;case 6:d=116==(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?7:8;break;case 7:_sprintf(j,STRING_TABLE.__str332494|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=i;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=m;d=35;break;case 8:d=118==(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?9:10;break;case 9:_sprintf(j,STRING_TABLE.__str352496|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=i;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=m;d=35;break;case 10:d=37==(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?11:12;break;case 11:_sprintf(j,STRING_TABLE.__str572518|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=i;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=m;d=35;break;case 12:d=13;break;case 13:d=14;break;case 14:d=15;break;case 15:d=16;break;case 16:n=HEAP32[i>>2];HEAP8[j+o|0]=0;d=17;break;case 17:if(37!=(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0))d=18;else{var p=0;d=20}break;case 18:0!=(HEAP8[g+HEAP32[i>>2]|0]<<24>>24|0)?d=19:(p=0,d=20);break;case 19:p=80>(HEAP32[i>>2]-n|0)>>>
0;d=20;break;case 20:d=p?21:34;break;case 21:d=l=HEAP8[g+HEAP32[i>>2]|0];var q=o;o=q+1|0;HEAP8[j+q|0]=d;HEAP8[j+o|0]=0;d=100==(l<<24>>24|0)?30:22;break;case 22:d=111==(l<<24>>24|0)?30:23;break;case 23:d=120==(l<<24>>24|0)?30:24;break;case 24:d=117==(l<<24>>24|0)?30:25;break;case 25:d=99==(l<<24>>24|0)?30:26;break;case 26:d=115==(l<<24>>24|0)?30:27;break;case 27:d=101==(l<<24>>24|0)?30:28;break;case 28:d=102==(l<<24>>24|0)?30:29;break;case 29:d=103==(l<<24>>24|0)?30:33;break;case 30:m=l;d=108==(HEAP8[g+
(HEAP32[i>>2]-1|0)|0]<<24>>24|0)?31:32;break;case 31:HEAP32[k>>2]=1;d=32;break;case 32:e=i;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=m;d=35;break;case 33:d=i;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=17;break;case 34:e=m;d=35;break;case 35:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_FindFormatFlag.X=1;
function _PrintFormatFlag(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n,o,p;i=h;j=f;k=c;e=a;l=b;e=115==(e|0)?3:99==(e|0)?6:100==(e|0)||120==(e|0)||111==(e|0)||117==(e|0)?14:102==(e|0)||103==(e|0)||101==(e|0)?26:32;break;case 3:e=0==(_EnvArgTypeCheck(i,STRING_TABLE.__str192480|0,k,181,m)|0)?4:5;break;case 4:g=0;e=34;break;case 5:n=_strlen(j);o=_strlen(HEAP32[(HEAP32[(m+
8|0)>>2]+16|0)>>2]);o=(n+o|0)+200|0;n=_gm2(i,o|0);e=HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2];_sprintf(n,j,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=33;break;case 6:_EnvRtnUnknown(i,k,m);e=3==(HEAPU16[(m+4|0)>>1]&65535|0)?8:7;break;case 7:e=2==(HEAPU16[(m+4|0)>>1]&65535|0)?8:9;break;case 8:o=_strlen(j)+200|0;n=_gm2(i,o|0);e=HEAP8[HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2]|0]<<24>>24;_sprintf(n,j,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=13;break;case 9:e=1==(HEAPU16[(m+4|0)>>1]&65535|0)?10:11;break;case 10:o=_strlen(j)+200|0;n=_gm2(i,o|0);e=(HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2]&255)<<24>>24;_sprintf(n,j,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=12;break;case 11:_ExpectedTypeError1(i,STRING_TABLE.__str192480|0,k,STRING_TABLE.__str532514|0);g=0;e=34;break;case 12:e=13;break;case 13:e=
33;break;case 14:e=0==(_EnvArgTypeCheck(i,STRING_TABLE.__str192480|0,k,180,m)|0)?15:16;break;case 15:g=0;e=34;break;case 16:o=_strlen(j)+200|0;n=_gm2(i,o|0);p=i;e=_setlocale(4,0);p=_EnvAddSymbol(p,e);_setlocale(4,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+256|0)>>2]|0)>>2]+16|0)>>2]);e=0==(HEAPU16[(m+4|0)>>1]&65535|0)?17:21;break;case 17:e=0!=(l|0)?18:19;break;case 18:e=n;var q=j,r=HEAP32[(m+8|0)>>2]+16|0,r=(tempDoubleI32[0]=HEAP32[r>>2],tempDoubleI32[1]=HEAP32[r+4>>2],tempDoubleF64[0])&-1;_sprintf(e,
q,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=r,tempInt));e=20;break;case 19:e=n;q=j;r=HEAP32[(m+8|0)>>2]+16|0;r=(tempDoubleI32[0]=HEAP32[r>>2],tempDoubleI32[1]=HEAP32[r+4>>2],tempDoubleF64[0])&-1;_sprintf(e,q,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=r,tempInt));e=20;break;case 20:e=25;break;case 21:e=0!=(l|0)?22:23;break;case 22:e=HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2];_sprintf(n,
j,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=24;break;case 23:e=HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2];_sprintf(n,j,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));e=24;break;case 24:e=25;break;case 25:_setlocale(4,HEAP32[(p+16|0)>>2]);e=33;break;case 26:e=0==(_EnvArgTypeCheck(i,STRING_TABLE.__str192480|0,k,180,m)|0)?27:28;break;case 27:g=0;e=34;break;case 28:o=
_strlen(j)+200|0;n=_gm2(i,o|0);p=i;e=_setlocale(4,0);p=_EnvAddSymbol(p,e);_setlocale(4,HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+256|0)>>2]|0)>>2]+16|0)>>2]);e=0==(HEAPU16[(m+4|0)>>1]&65535|0)?29:30;break;case 29:e=n;q=j;r=HEAP32[(m+8|0)>>2]+16|0;r=(tempDoubleI32[0]=HEAP32[r>>2],tempDoubleI32[1]=HEAP32[r+4>>2],tempDoubleF64[0]);_sprintf(e,q,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),tempDoubleF64[0]=r,HEAP32[tempInt>>2]=tempDoubleI32[0],HEAP32[tempInt+
4>>2]=tempDoubleI32[1],tempInt));e=31;break;case 30:e=HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2]|0;_sprintf(n,j,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),tempDoubleF64[0]=e,HEAP32[tempInt>>2]=tempDoubleI32[0],HEAP32[tempInt+4>>2]=tempDoubleI32[1],tempInt));e=31;break;case 31:_setlocale(4,HEAP32[(p+16|0)>>2]);e=33;break;case 32:_EnvPrintRouter(i,STRING_TABLE.__str432504|0,STRING_TABLE.__str542515|0);_EnvPrintRouter(i,STRING_TABLE.__str432504|0,STRING_TABLE.__str552516|
0);g=0;e=34;break;case 33:g=_EnvAddSymbol(i,n)+16|0;g=HEAP32[g>>2];_rm(i,n,o|0);e=34;break;case 34:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_PrintFormatFlag.X=1;
function _FillBuffer(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;l=0;k=_EnvGetcRouter(e,g);b=-1==(k|0)?3:4;break;case 3:d=0;b=12;break;case 4:b=5;break;case 5:if(10!=(k|0))b=6;else{var m=0;b=9}break;case 6:13!=(k|0)?b=7:(m=0,b=9);break;case 7:-1!=(k|0)?b=8:(m=0,b=9);break;case 8:m=0!=(_GetHaltExecution(e)|0)^1;b=9;break;case 9:b=m?10:11;break;case 10:l=_ExpandStringWithChar(e,k,l,i,j,HEAP32[j>>2]+80|0);k=_EnvGetcRouter(e,g);b=5;break;case 11:d=l=_ExpandStringWithChar(e,
0,l,i,j,HEAP32[j>>2]+80|0);b=12;break;case 12:return d;default:assert(0,"bad label: "+b)}}_FillBuffer.X=1;
function _FindLogicalBind(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;c=h;b=f;d=HEAP32[(c+8|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:14;break;case 4:g=1;e=0;c=5;break;case 5:c=e>>>0<(HEAPU32[d>>2]>>>6&511)>>>0?6:10;break;case 6:c=(HEAP32[((d+8|0)+(e<<2)|0)>>2]|0)!=(HEAP32[((b+8|0)+(e<<2)|0)>>2]|0)?7:8;break;case 7:g=0;c=10;break;case 8:c=9;break;case 9:e=e+1|0;c=5;break;case 10:c=0!=(g|0)?11:12;break;case 11:a=d;c=15;break;case 12:c=13;break;case 13:d=HEAP32[(d+4|0)>>2];c=3;break;case 14:a=0;
c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_FindLogicalBind.X=1;
function _DetachAssociatedDependencies(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;j=0;g=d;a=3;break;case 3:a=0!=(g|0)?4:11;break;case 4:a=(HEAP32[(g|0)>>2]|0)==(e|0)?5:9;break;case 5:i=HEAP32[(g+4|0)>>2];a=0==(j|0)?6:7;break;case 6:d=i;a=8;break;case 7:HEAP32[(j+4|0)>>2]=i;a=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+
20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];g=i;a=10;break;case 9:j=g;g=HEAP32[(g+4|0)>>2];a=10;break;case 10:a=3;break;case 11:return d;default:assert(0,"bad label: "+a)}}_DetachAssociatedDependencies.X=1;
function _ReadNumber(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m=b+4,n,o,p,q;e=h;g=f;i=c;j=a;HEAP32[l>>2]=0;HEAP16[(i|0)>>1]=172;k=0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0)>>2]=0;HEAP32[m>>2]=0;n=_EnvGetcRouter(e,g);d=3;break;case 3:if(0!=(_isspace(n)|0))d=4;else{var r=0;d=6}break;case 4:-1!=(n|0)?d=5:(r=0,d=6);break;case 5:r=0!=(_GetHaltExecution(e)|0)^1;
d=6;break;case 6:d=r?7:8;break;case 7:n=_EnvGetcRouter(e,g);d=3;break;case 8:d=9;break;case 9:d=0!=(j|0)?11:10;break;case 10:d=0!=(_isspace(n)|0)?11:14;break;case 11:if(0!=(j|0))d=12;else{var s=0;d=16}break;case 12:10!=(n|0)?d=13:(s=0,d=16);break;case 13:13!=(n|0)?d=14:(s=0,d=16);break;case 14:-1!=(n|0)?d=15:(s=0,d=16);break;case 15:s=0!=(_GetHaltExecution(e)|0)^1;d=16;break;case 16:d=s?17:18;break;case 17:k=_ExpandStringWithChar(e,n,k,HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0,m,HEAP32[m>>2]+80|0);
n=_EnvGetcRouter(e,g);d=9;break;case 18:d=0!=(_GetHaltExecution(e)|0)?19:22;break;case 19:HEAP16[(i|0)>>1]=3;d=_EnvAddSymbol(e,STRING_TABLE.__str392500|0);HEAP32[(i+4|0)>>2]=d;d=0<HEAPU32[m>>2]>>>0?20:21;break;case 20:_rm(e,k,HEAP32[m>>2]);d=21;break;case 21:d=39;break;case 22:d=-1==(n|0)?23:26;break;case 23:HEAP16[(i|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str412502|0);HEAP32[(i+4|0)>>2]=d;d=0<HEAPU32[m>>2]>>>0?24:25;break;case 24:_rm(e,k,HEAP32[m>>2]);d=25;break;case 25:d=39;break;case 26:o=e;
q=_setlocale(4,0);q=_EnvAddSymbol(o,q);_setlocale(4,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+256|0)>>2]|0)>>2]+16|0)>>2]);o=_strtol(k,l,10);d=(HEAP32[l>>2]|0)!=(k|0)?27:32;break;case 27:d=0!=(_isspace(HEAP8[HEAP32[l>>2]]<<24>>24)|0)?29:28;break;case 28:d=0==(HEAP8[HEAP32[l>>2]]<<24>>24|0)?29:32;break;case 29:HEAP16[(i|0)>>1]=1;d=_EnvAddLong(e,o);HEAP32[(i+4|0)>>2]=d;d=0<HEAPU32[m>>2]>>>0?30:31;break;case 30:_rm(e,k,HEAP32[m>>2]);d=31;break;case 31:_setlocale(4,HEAP32[(q+16|0)>>2]);d=39;break;case 32:p=
_strtod(k,l);d=(HEAP32[l>>2]|0)!=(k|0)?33:38;break;case 33:d=0!=(_isspace(HEAP8[HEAP32[l>>2]]<<24>>24)|0)?35:34;break;case 34:d=0==(HEAP8[HEAP32[l>>2]]<<24>>24|0)?35:38;break;case 35:HEAP16[(i|0)>>1]=0;d=_EnvAddDouble(e,p);HEAP32[(i+4|0)>>2]=d;d=0<HEAPU32[m>>2]>>>0?36:37;break;case 36:_rm(e,k,HEAP32[m>>2]);d=37;break;case 37:_setlocale(4,HEAP32[(q+16|0)>>2]);d=39;break;case 38:_setlocale(4,HEAP32[(q+16|0)>>2]);HEAP16[(i|0)>>1]=3;d=_EnvAddSymbol(e,STRING_TABLE.__str392500|0);HEAP32[(i+4|0)>>2]=d;d=
39;break;case 39:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_ReadNumber.X=1;
function _AddLogicalDependencies(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+8|0)>>2]|0)?3:6;break;case 3:a=0!=(g|0)?4:5;break;case 4:_RemoveEntityDependencies(d,e);a=5;break;case 5:b=1;a=19;break;case 6:a=0!=(g|0)?7:9;break;case 7:a=0==(HEAP32[(e+4|0)>>2]|0)?8:9;break;case 8:b=1;a=19;break;case 9:a=10;break;case 10:i=_FindLogicalBind(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
72|0)>>2]+52|0)>>2]);a=0==(i|0)?11:12;break;case 11:b=0;a=19;break;case 12:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?13:14;break;case 13:var j=_genalloc(d,8);a=15;break;case 14:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=15;break;case 15:a=j;HEAP32[(a|0)>>2]=e;HEAP32[(a+4|0)>>2]=HEAP32[((i+8|0)+(((HEAPU32[i>>2]>>>6&511)+(HEAPU32[i>>2]>>>2&1)|0)<<2)|0)>>2];HEAP32[((i+8|0)+(((HEAPU32[i>>2]>>>6&511)+(HEAPU32[i>>2]>>>2&1)|0)<<2)|0)>>2]=a;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?16:17;break;case 16:var k=_genalloc(d,8);a=18;break;case 17:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>
2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=18;break;case 18:a=k;HEAP32[(a|0)>>2]=i;HEAP32[(a+4|0)>>2]=HEAP32[(e+4|0)>>2];HEAP32[(e+4|0)>>2]=a;b=1;a=19;break;case 19:return b;default:assert(0,"bad label: "+a)}}_AddLogicalDependencies.X=1;
function _RemoveEntityDependencies(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=HEAP32[(b+4|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:5;break;case 4:c=HEAP32[(d+4|0)>>2];g=HEAP32[(d|0)>>2];e=HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)+(HEAPU32[g>>2]>>>2&1)|0)<<2)|0)>>2];e=_DetachAssociatedDependencies(a,e,b);HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)+(HEAPU32[g>>2]>>>2&1)|0)<<2)|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+
236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];d=c;c=3;break;case 5:HEAP32[(b+4|0)>>2]=0;return;default:assert(0,"bad label: "+c)}}_RemoveEntityDependencies.X=1;
function _ReturnEntityDependencies(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=HEAP32[(b+4|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:5;break;case 4:c=HEAP32[(d+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>
2]+16|0)>>2];d=c;c=3;break;case 5:HEAP32[(b+4|0)>>2]=0;return;default:assert(0,"bad label: "+c)}}_ReturnEntityDependencies.X=1;
function _DestroyPMDependencies(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:5;break;case 4:c=HEAP32[(d+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>
2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];d=c;c=3;break;case 5:HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2]=0;return;default:assert(0,"bad label: "+c)}}_DestroyPMDependencies.X=1;
function _RemovePMDependencies(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:5;break;case 4:c=HEAP32[(d+4|0)>>2];g=HEAP32[(d|0)>>2];e=HEAP32[(g+4|0)>>2];e=_DetachAssociatedDependencies(a,e,b);HEAP32[(g+4|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];d=c;c=3;break;case 5:HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2]=0;return;default:assert(0,"bad label: "+c)}}_RemovePMDependencies.X=1;
function _RemoveLogicalSupport(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;c=0==(HEAPU32[b>>2]>>>3&1|0)?3:4;break;case 3:c=11;break;case 4:d=HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:10;break;case 6:e=HEAP32[(d+4|0)>>2];g=HEAP32[(d|0)>>2];c=HEAP32[(g+4|0)>>2];c=_DetachAssociatedDependencies(a,c,b);HEAP32[(g+4|0)>>2]=c;c=0==(HEAP32[(g+4|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[((HEAP32[(g|0)>>2]|0)+32|0)>>2]](a,
g);HEAP32[(d+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+12|0)>>2]=d;c=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=9;break;
case 9:d=e;c=5;break;case 10:HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)<<2)|0)>>2]=0;c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_RemoveLogicalSupport.X=1;
function _ForceLogicalRetractions(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:f=8;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+16|0)>>2]=1;f=5;break;case 5:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+12|0)>>2]|0)?6:7;break;case 6:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+12|0)>>2]|0)>>2];f=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>
2]+72|0)>>2]+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+12|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];FUNCTION_TABLE[HEAP32[((HEAP32[(a|0)>>2]|0)+28|0)>>2]](c,a);FUNCTION_TABLE[HEAP32[((HEAP32[(a|
0)>>2]|0)+16|0)>>2]](c,a);f=5;break;case 7:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+16|0)>>2]=0;f=8;break;case 8:return;default:assert(0,"bad label: "+f)}}_ForceLogicalRetractions.X=1;
function _Dependencies(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:_EnvPrintRouter(a,STRING_TABLE.__str2519|0,STRING_TABLE.__str12520|0);c=10;break;case 4:d=HEAP32[(b+4|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:10;break;case 6:c=1==(_GetHaltExecution(a)|0)?7:8;break;case 7:c=10;break;case 8:_PrintPartialMatch(a,STRING_TABLE.__str2519|0,HEAP32[(d|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str2519|0,STRING_TABLE.__str22521|0);c=9;break;case 9:d=HEAP32[(d+
4|0)>>2];c=5;break;case 10:return;default:assert(0,"bad label: "+c)}}
function _Dependents(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4,i,j;b=h;d=f;HEAP32[e>>2]=0;j=HEAP32[g>>2]=0;_GetNextPatternEntity(b,g,e);a=3;break;case 3:a=0!=(HEAP32[e>>2]|0)?4:18;break;case 4:a=1==(_GetHaltExecution(b)|0)?5:6;break;case 5:a=21;break;case 6:i=HEAP32[(HEAP32[e>>2]+4|0)>>2];a=7;break;case 7:a=0!=(i|0)?8:16;break;case 8:a=1==(_GetHaltExecution(b)|0)?9:10;
break;case 9:a=21;break;case 10:a=HEAP32[(i|0)>>2];a=1==(_FindEntityInPartialMatch(d,a)|0)?11:14;break;case 11:a=0!=(j|0)?12:13;break;case 12:_EnvPrintRouter(b,STRING_TABLE.__str2519|0,STRING_TABLE.__str32522|0);a=13;break;case 13:FUNCTION_TABLE[HEAP32[((HEAP32[(HEAP32[e>>2]|0)>>2]|0)+8|0)>>2]](b,STRING_TABLE.__str2519|0,HEAP32[e>>2]);j=1;a=16;break;case 14:a=15;break;case 15:i=HEAP32[(i+4|0)>>2];a=7;break;case 16:a=17;break;case 17:_GetNextPatternEntity(b,g,e);a=3;break;case 18:a=0!=(j|0)?20:19;
break;case 19:_EnvPrintRouter(b,STRING_TABLE.__str2519|0,STRING_TABLE.__str12520|0);a=21;break;case 20:_EnvPrintRouter(b,STRING_TABLE.__str2519|0,STRING_TABLE.__str22521|0);a=21;break;case 21:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_Dependents.X=1;
function _DependenciesCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str42523|0,0,1)|0)?3:4;break;case 3:c=7;break;case 4:d=_GetFactOrInstanceArgument(a,1,b,STRING_TABLE.__str42523|0);c=0==(d|0)?5:6;break;case 5:c=7;break;case 6:_Dependencies(a,d);c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _DependentsCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str52524|0,0,1)|0)?3:4;break;case 3:c=7;break;case 4:d=_GetFactOrInstanceArgument(a,1,b,STRING_TABLE.__str52524|0);c=0==(d|0)?5:6;break;case 5:c=7;break;case 6:_Dependents(a,d);c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _guecomain(h,f){var c;c=_CreateEnvironment();_RerouteStdin(c,h,f);_CommandLoop(c);return-1}function _EnvSetOutOfMemoryFunction(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+12|0)>>2]=f;return c}function _EnvMemUsed(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]|0)>>2]}function _EnvMemRequests(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+4|0)>>2]}
function _UpdateMemoryUsed(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]|0;HEAP32[c>>2]=HEAP32[c>>2]+f|0;return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]|0)>>2]}function _UpdateMemoryRequests(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+f|0;return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+4|0)>>2]}
function _InitializeMemory(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_AllocateEnvironmentData(c,59,32,0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+12|0)>>2]=1040;f=_malloc(2E3);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]=f;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(c,STRING_TABLE.__str2535|0,1,1);_EnvPrintRouter(c,STRING_TABLE.__str12536|0,STRING_TABLE.__str22537|0);_EnvExitRouter(c,1);f=4;break;case 4:a=0;f=5;break;case 5:f=
500>(a|0)?6:8;break;case 6:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+(a<<2)|0)>>2]=0;f=7;break;case 7:a=a+1|0;f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_InitializeMemory.X=1;function _DefaultOutOfMemoryFunction(h){_PrintErrorID(h,STRING_TABLE.__str2535|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str12536|0,STRING_TABLE.__str22537|0);_EnvExitRouter(h,1);return 1}
function _genalloc(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=_malloc(d);c=0==(e|0)?3:14;break;case 3:var g=b;c=4096<(5*d|0)>>>0?4:5;break;case 4:var i=5*d|0;c=6;break;case 5:i=4096;c=6;break;case 6:_EnvReleaseMem(g,i,0);e=_malloc(d);c=0==(e|0)?7:13;break;case 7:_EnvReleaseMem(b,-1,1);e=_malloc(d);c=8;break;case 8:c=0==(e|0)?9:12;break;case 9:c=0!=(FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+12|0)>>2]](b,d)|0)?10:11;break;case 10:a=0;c=15;break;case 11:e=_malloc(d);
c=8;break;case 12:c=13;break;case 13:c=14;break;case 14:c=HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]|0;HEAP32[c>>2]=HEAP32[c>>2]+d|0;c=HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;a=e;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_genalloc.X=1;
function _EnvReleaseMem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;l=k=0;a=1==(g|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str32538|0,STRING_TABLE.__str42539|0);a=4;break;case 4:j=499;a=5;break;case 5:a=4<=(j|0)?6:18;break;case 6:_YieldTime(d);i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(j<<2)|0)>>2];a=7;break;case 7:a=0!=(i|0)?8:11;break;case 8:a=HEAP32[(i|0)>>2];_genfree(d,i,j);i=a;l=l+j|0;k=k+1|0;a=0==((k|0)%100|0)?9:10;break;case 9:_YieldTime(d);
a=10;break;case 10:a=7;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(j<<2)|0)>>2]=0;a=(l|0)>(e|0)?12:16;break;case 12:a=0<(e|0)?13:16;break;case 13:a=1==(g|0)?14:15;break;case 14:_EnvPrintRouter(d,STRING_TABLE.__str32538|0,STRING_TABLE.__str52540|0);a=15;break;case 15:b=l;a=21;break;case 16:a=17;break;case 17:j=j-1|0;a=5;break;case 18:a=1==(g|0)?19:20;break;case 19:_EnvPrintRouter(d,STRING_TABLE.__str32538|0,STRING_TABLE.__str52540|0);a=20;break;case 20:b=l;a=21;
break;case 21:return b;default:assert(0,"bad label: "+a)}}_EnvReleaseMem.X=1;function _genfree(h,f,c){_free(f);f=HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]|0;HEAP32[f>>2]=HEAP32[f>>2]-c|0;h=HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]-1|0;return 0}
function _genrealloc(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;b=0!=(i|0)?3:4;break;case 3:var m=_gm2(d,i);b=5;break;case 4:m=0;b=5;break;case 5:j=m;b=0!=(e|0)?6:18;break;case 6:b=g>>>0<i>>>0?7:8;break;case 7:var n=g;b=9;break;case 8:n=i;b=9;break;case 9:l=n;k=0;b=10;break;case 10:b=k>>>0<l>>>0?11:13;break;case 11:HEAP8[j+k|0]=HEAP8[e+k|0];b=12;break;case 12:k=k+1|0;b=10;break;case 13:b=14;break;case 14:b=k>>>0<i>>>0?15:17;break;case 15:HEAP8[j+k|0]=0;b=16;break;
case 16:k=k+1|0;b=14;break;case 17:_rm(d,e,g);b=18;break;case 18:return j;default:assert(0,"bad label: "+b)}}_genrealloc.X=1;
function _gm2(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=4>d>>>0?3:4;break;case 3:c=d=4;break;case 4:c=500<=d>>>0?5:6;break;case 5:a=_genalloc(b,d);c=9;break;case 6:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2];c=0==(e|0)?7:8;break;case 7:a=_genalloc(b,d);c=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2]=HEAP32[(e|0)>>2];a=e;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}_gm2.X=1;
function _rm(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(g|0)?3:4;break;case 3:_SystemError(d,STRING_TABLE.__str2535|0,1);_EnvExitRouter(d,1);a=4;break;case 4:a=4>g>>>0?5:6;break;case 5:g=4;a=6;break;case 6:a=500<=g>>>0?7:8;break;case 7:b=_genfree(d,e,g);a=9;break;case 8:a=e;HEAP32[(a|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(g<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(g<<2)|0)>>2]=a;b=1;a=9;break;case 9:return b;
default:assert(0,"bad label: "+a)}}_rm.X=1;function _genlongalloc(h,f){return _genalloc(h,f)}function _genlongfree(h,f,c){return _genfree(h,f,c)}
function _gm1(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;c=4>(d|0)?3:4;break;case 3:c=d=4;break;case 4:c=500<=(d|0)?5:10;break;case 5:g=_genalloc(b,d);i=0;c=6;break;case 6:c=(i|0)<(d|0)?7:9;break;case 7:HEAP8[g+i|0]=0;c=8;break;case 8:i=i+1|0;c=6;break;case 9:a=g;c=21;break;case 10:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2];c=0==(e|0)?11:16;break;case 11:g=_genalloc(b,d);i=0;c=12;break;case 12:c=(i|0)<(d|0)?13:15;break;case 13:HEAP8[g+i|0]=
0;c=14;break;case 14:i=i+1|0;c=12;break;case 15:a=g;c=21;break;case 16:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2]=HEAP32[(e|0)>>2];g=e;i=0;c=17;break;case 17:c=(i|0)<(d|0)?18:20;break;case 18:HEAP8[g+i|0]=0;c=19;break;case 19:i=i+1|0;c=17;break;case 20:a=g;c=21;break;case 21:return a;default:assert(0,"bad label: "+c)}}_gm1.X=1;
function _PoolSize(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;d=0;a=4;f=3;break;case 3:f=500>(a|0)?4:9;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:7;break;case 6:d=d+a|0;b=HEAP32[(b|0)>>2];f=5;break;case 7:f=8;break;case 8:a=a+1|0;f=3;break;case 9:return d;default:assert(0,"bad label: "+f)}}
function _EnvSetConserveMemory(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+8|0)>>2]=f;return c}function _EnvGetConserveMemory(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+8|0)>>2]}
function _genmemcpy(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=0;a=3;break;case 3:a=g>>>0<e>>>0?4:6;break;case 4:HEAP8[b+g|0]=HEAP8[d+g|0];a=5;break;case 5:g=g+1|0;a=3;break;case 6:return;default:assert(0,"bad label: "+a)}}
function _gm3(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=4>(d|0)?3:4;break;case 3:c=d=4;break;case 4:c=500<=(d|0)?5:6;break;case 5:a=_genlongalloc(b,d);c=9;break;case 6:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2];c=0==(e|0)?7:8;break;case 7:a=_genalloc(b,d);c=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+(d<<2)|0)>>2]=HEAP32[(e|0)>>2];a=e;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}_gm3.X=1;
function _rm3(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(g|0)?3:4;break;case 3:_SystemError(d,STRING_TABLE.__str2535|0,1);_EnvExitRouter(d,1);a=4;break;case 4:a=4>(g|0)?5:6;break;case 5:g=4;a=6;break;case 6:a=500<=(g|0)?7:8;break;case 7:b=_genlongfree(d,e,g);a=9;break;case 8:a=e;HEAP32[(a|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(g<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(g<<2)|0)>>2]=a;b=1;a=9;break;case 9:return b;
default:assert(0,"bad label: "+a)}}_rm3.X=1;function _ActualPoolSize(h){return _PoolSize(h)}
function _MiscFunctionDefinitions(h){_AllocateEnvironmentData(h,9,4,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+36|0)>>2]|0)>>2]=1;_EnvDefineFunction2(h,STRING_TABLE.__str2565|0,119,1042,STRING_TABLE.__str12566|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str32568|0,119,1044,STRING_TABLE.__str42569|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str52570|0,108,1046,STRING_TABLE.__str62571|0,STRING_TABLE.__str72572|0);_EnvDefineFunction2(h,STRING_TABLE.__str82573|
0,118,1048,STRING_TABLE.__str92574|0,STRING_TABLE.__str102575|0);_EnvDefineFunction2(h,STRING_TABLE.__str112576|0,108,1050,STRING_TABLE.__str122577|0,STRING_TABLE.__str132578|0);_EnvDefineFunction2(h,STRING_TABLE.__str142579|0,108,1050,STRING_TABLE.__str122577|0,STRING_TABLE.__str132578|0);_EnvDefineFunction2(h,STRING_TABLE.__str152580|0,100,1052,STRING_TABLE.__str162581|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str172582|0,108,1054,STRING_TABLE.__str182583|0,STRING_TABLE.__str192584|
0);_EnvDefineFunction2(h,STRING_TABLE.__str202585|0,118,1056,STRING_TABLE.__str212586|0,STRING_TABLE.__str72572|0);_EnvDefineFunction2(h,STRING_TABLE.__str222587|0,118,1058,STRING_TABLE.__str232588|0,STRING_TABLE.__str242589|0);_EnvDefineFunction2(h,STRING_TABLE.__str252590|0,108,1060,STRING_TABLE.__str262591|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str272592|0,108,1062,STRING_TABLE.__str282593|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str292594|0,
108,1064,STRING_TABLE.__str302595|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str312596|0,118,1066,STRING_TABLE.__str322597|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str332598|0,117,1068,STRING_TABLE.__str342599|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str352600|0,117,1070,STRING_TABLE.__str362601|0,STRING_TABLE.__str372602|0);_FuncSeqOvlFlags(h,STRING_TABLE.__str352600|0,0,0);_EnvDefineFunction2(h,STRING_TABLE.__str382603|0,119,1072,STRING_TABLE.__str392604|
0,0);_EnvDefineFunction2(h,STRING_TABLE.__str402605|0,98,1074,STRING_TABLE.__str412606|0,STRING_TABLE.__str242589|0);_EnvDefineFunction2(h,STRING_TABLE.__str422607|0,98,1076,STRING_TABLE.__str432608|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str442609|0,115,1078,STRING_TABLE.__str452610|0,STRING_TABLE.__str242589|0);_EnvDefineFunction2(h,STRING_TABLE.__str462611|0,109,1080,STRING_TABLE.__str472612|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str482613|0,109,1080,STRING_TABLE.__str472612|
0,0);_EnvDefineFunction2(h,STRING_TABLE.__str492614|0,118,1082,STRING_TABLE.__str502615|0,STRING_TABLE.__str242589|0);_EnvDefineFunction2(h,STRING_TABLE.__str512616|0,109,1084,STRING_TABLE.__str522617|0,STRING_TABLE.__str22567|0);_EnvDefineFunction2(h,STRING_TABLE.__str532618|0,117,1086,STRING_TABLE.__str542619|0,STRING_TABLE.__str552620|0);_EnvDefineFunction2(h,STRING_TABLE.__str562621|0,100,1088,STRING_TABLE.__str572622|0,STRING_TABLE.__str582623|0)}_MiscFunctionDefinitions.X=1;
function _GensymFunction(h){var f=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_EnvArgCountCheck(h,STRING_TABLE.__str2565|0,0,0);var c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+36|0)>>2]|0)>>2];_sprintf(f|0,STRING_TABLE.__str602625|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));c=HEAP32[(HEAP32[(h+16|0)>>2]+36|0)>>2]|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;h=_EnvAddSymbol(h,
f|0);STACKTOP=f;return h}function _GensymStarFunction(h){_EnvArgCountCheck(h,STRING_TABLE.__str32568|0,0,0);return _GensymStar(h)}
function _SetgenFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str52570|0,0,1)|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+36|0)>>2]|0)>>2];c=9;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str52570|0,1,1,e)|0)?5:6;break;case 5:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+36|0)>>2]|0)>>2];c=9;break;case 6:d=HEAP32[(HEAP32[(e+
8|0)>>2]+16|0)>>2];c=1>(d|0)?7:8;break;case 7:_ExpectedTypeError1(b,STRING_TABLE.__str52570|0,1,STRING_TABLE.__str592624|0);a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+36|0)>>2]|0)>>2];c=9;break;case 8:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+36|0)>>2]|0)>>2]=d;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetgenFunction.X=1;
function _LengthFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str142579|0,0,1)|0)?3:4;break;case 3:a=-1;c=10;break;case 4:_EnvRtnUnknown(b,1,d);c=3==(HEAPU16[(d+4|0)>>1]&65535|0)?6:5;break;case 5:c=2==(HEAPU16[(d+4|0)>>1]&65535|0)?6:7;break;case 6:a=_strlen(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=10;break;case 7:c=4==(HEAPU16[(d+
4|0)>>1]&65535|0)?8:9;break;case 8:a=(HEAP32[(d+16|0)>>2]-HEAP32[(d+12|0)>>2]|0)+1|0;c=10;break;case 9:_SetEvaluationError(b,1);_ExpectedTypeError2(b,STRING_TABLE.__str142579|0,1);a=-1;c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_LengthFunction.X=1;function _TimeFunction(h){_EnvArgCountCheck(h,STRING_TABLE.__str152580|0,0,0);return _gentime()}
function _RandomFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i,j;b=h;d=_EnvRtnArgCount(b);c=0!=(d|0)?3:5;break;case 3:c=2!=(d|0)?4:5;break;case 4:_PrintErrorID(b,STRING_TABLE.__str612626|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str622627|0,STRING_TABLE.__str632628|0);c=5;break;case 5:e=_genrand();c=2==(d|0)?6:13;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str172582|
0,1,1,g)|0)?7:8;break;case 7:a=e;c=14;break;case 8:i=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str172582|0,2,1,g)|0)?9:10;break;case 9:a=e;c=14;break;case 10:j=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];c=(j|0)<(i|0)?11:12;break;case 11:_PrintErrorID(b,STRING_TABLE.__str612626|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str622627|0,STRING_TABLE.__str642629|0);a=e;c=14;break;case 12:e=i+(e|0)%((j-i|0)+1|0)|0;c=13;break;case 13:a=e;c=14;break;case 14:return h=a,STACKTOP=f,h;
default:assert(0,"bad label: "+c)}}_RandomFunction.X=1;
function _SeedFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str202585|0,0,1)|0)?3:4;break;case 3:c=7;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str202585|0,1,1,b)|0)?5:6;break;case 5:c=7;break;case 6:_genseed(HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _ConserveMemCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str222587|0,0,1)|0)?3:4;break;case 3:c=13;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str222587|0,1,2,d)|0)?5:6;break;case 5:c=13;break;case 6:b=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=0==(_strcmp(b,STRING_TABLE.__str652630|0)|0)?7:8;break;case 7:_EnvSetConserveMemory(a,
1);c=12;break;case 8:c=0==(_strcmp(b,STRING_TABLE.__str662631|0)|0)?9:10;break;case 9:_EnvSetConserveMemory(a,0);c=11;break;case 10:_ExpectedTypeError1(a,STRING_TABLE.__str222587|0,1,STRING_TABLE.__str672632|0);c=13;break;case 11:c=12;break;case 12:c=13;break;case 13:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _ReleaseMemCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str252590|0,0,0)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=_EnvReleaseMem(a,-1,0);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _MemUsedCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str272592|0,0,0)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=_EnvMemUsed(a);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _MemRequestsCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str292594|0,0,0)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=_EnvMemRequests(a);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _OptionsCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str312596|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str702635|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str712636|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str692634|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str722637|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str742639|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str752640|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str762641|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str772642|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str782643|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str792644|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str802645|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str812646|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str822647|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str832648|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str842649|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str852650|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str862651|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str872652|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str882653|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str892654|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str902655|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str692634|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str912656|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str922657|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str932658|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str942659|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str952660|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str962661|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str972662|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str982663|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str992664|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|
0,STRING_TABLE.__str922657|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str1002665|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str732638|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str1012666|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str922657|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str1022667|0);_EnvPrintRouter(c,STRING_TABLE.__str682633|0,STRING_TABLE.__str922657|0);f=5;break;case 5:return;default:assert(0,
"bad label: "+f)}}_OptionsCommand.X=1;
function _ExpandFuncCall(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;a=_CopyExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+8|0)>>2]);HEAP32[e>>2]=a;a=b;var j=d;i=HEAP32[e>>2];var k=_FindFunction(b,STRING_TABLE.__str352600|0);_ExpandFuncMultifield(a,j,i,e,k);a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|
0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(b,16);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:g=l;HEAP16[(g|0)>>1]=HEAP16[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2];HEAP32[(g+12|0)>>2]=0;HEAP32[(g+8|0)>>2]=HEAP32[e>>2];a=30==(HEAPU16[(g|0)>>1]&65535|0)?6:9;break;case 6:i=HEAP32[(g+4|0)>>2];a=b;j=HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2];i=HEAP32[(i+20|0)>>2];k=_CountArguments(HEAP32[e>>2]);a=0==(_CheckFunctionArgCount(a,j,i,k)|0)?7:8;break;case 7:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|
0)>>2]+4|0)>>2];_ReturnExpression(b,g);a=15;break;case 8:a=14;break;case 9:a=32==(HEAPU16[(g|0)>>1]&65535|0)?10:13;break;case 10:a=b;j=HEAP32[(g+4|0)>>2];i=_CountArguments(HEAP32[(g+8|0)>>2]);a=0==(_CheckDeffunctionCall(a,j,i)|0)?11:12;break;case 11:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_ReturnExpression(b,g);_SetEvaluationError(b,1);a=15;break;case 12:a=13;break;case 13:a=14;break;case 14:_EvaluateExpression(b,g,d);_ReturnExpression(b,g);
a=15;break;case 15:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ExpandFuncCall.X=1;function _DummyExpandFuncMultifield(h,f){HEAP16[(f+4|0)>>1]=2;HEAP32[(f+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(h,1);_PrintErrorID(h,STRING_TABLE.__str612626|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str622627|0,STRING_TABLE.__str1032668|0)}function _CauseEvaluationError(h){_SetEvaluationError(h,1);return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+4|0)>>2]}
function _SetSORCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str402605|0,1,2,d)|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+48|0)>>2];c=5;break;case 4:a=_EnvSetSequenceOperatorRecognition(b,(HEAP32[(d+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?0:1);c=5;break;case 5:return h=
a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _GetFunctionRestrictions(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str442609|0,1,2,d)|0)?3:4;break;case 3:a=_EnvAddSymbol(b,__str1042669|0);c=9;break;case 4:e=_FindFunction(b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=0==(e|0)?5:6;break;case 5:_CantFindItemErrorMessage(b,STRING_TABLE.__str1052670|0,HEAP32[(HEAP32[(d+8|0)>>2]+
16|0)>>2]);_SetEvaluationError(b,1);a=_EnvAddSymbol(b,__str1042669|0);c=9;break;case 6:c=0==(HEAP32[(e+20|0)>>2]|0)?7:8;break;case 7:a=_EnvAddSymbol(b,STRING_TABLE.__str1062671|0);c=9;break;case 8:a=_EnvAddSymbol(b,HEAP32[(e+20|0)>>2]);c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GetFunctionRestrictions.X=1;function _CreateFunction(h,f){_StoreInMultifield(h,f,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],1)}
function _AproposCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g;a=h;e=0;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str492614|0,0,1)|0)?3:4;break;case 3:c=9;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str492614|0,1,2,d)|0)?5:6;break;case 5:c=9;break;case 6:b=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];g=_strlen(b);c=7;break;case 7:e=c=_GetNextSymbolMatch(a,b,g,e,1,0);c=
0!=(c|0)?8:9;break;case 8:_EnvPrintRouter(a,STRING_TABLE.__str682633|0,HEAP32[(e+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str682633|0,STRING_TABLE.__str692634|0);c=7;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _GetFunctionListFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=0;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str512616|0,0,0)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(a,b);c=12;break;case 4:d=_GetFunctionList(a);c=5;break;case 5:c=0!=(d|0)?6:8;break;case 6:g=g+1|0;c=7;break;case 7:d=HEAP32[(d+32|0)>>2];c=5;break;case 8:HEAP16[(b+4|0)>>1]=4;HEAP32[(b+12|0)>>2]=0;HEAP32[(b+16|0)>>2]=g-1|0;e=_EnvCreateMultifield(a,g);HEAP32[(b+8|0)>>2]=e;d=_GetFunctionList(a);g=
1;c=9;break;case 9:c=0!=(d|0)?10:12;break;case 10:HEAP16[((e+16|0)+((g-1|0)<<3)|0)>>1]=2;HEAP32[(((e+16|0)+((g-1|0)<<3)|0)+4|0)>>2]=HEAP32[(d|0)>>2];c=11;break;case 11:d=HEAP32[(d+32|0)>>2];g=g+1|0;c=9;break;case 12:return;default:assert(0,"bad label: "+c)}}_GetFunctionListFunction.X=1;
function _FuncallFunction(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c,k=c+24,l,m,n,o;b=h;d=f;m=0;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=a=_EnvArgCountCheck(b,STRING_TABLE.__str532618|0,1,1);a=-1==(a|0)?3:4;break;case 3:a=35;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str532618|0,1,181,j)|0)?5:6;break;case 5:a=
35;break;case 6:a=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];a=0!=(_GetFunctionReference(b,a,k)|0)?8:7;break;case 7:_ExpectedTypeError1(b,STRING_TABLE.__str532618|0,1,STRING_TABLE.__str1072672|0);a=35;break;case 8:_ExpressionInstall(b,k);g=2;a=9;break;case 9:a=(g|0)<=(e|0)?10:30;break;case 10:_EnvRtnUnknown(b,g,j);a=0!=(_GetEvaluationError(b)|0)?11:12;break;case 11:_ExpressionDeinstall(b,k);a=35;break;case 12:a=4==(HEAPU16[(j+4|0)>>1]&65535|0)?13:24;break;case 13:n=b;a=_FindFunction(b,STRING_TABLE.__str462611|
0);n=_GenConstant(n,30,a);a=0==(m|0)?14:15;break;case 14:HEAP32[(k+8|0)>>2]=n;a=16;break;case 15:HEAP32[(m+12|0)>>2]=n;a=16;break;case 16:m=n;o=0;l=HEAP32[(j+8|0)>>2];i=HEAP32[(j+12|0)>>2]+1|0;a=17;break;case 17:a=(i|0)<=(HEAP32[(j+16|0)>>2]+1|0)?18:23;break;case 18:n=_GenConstant(b,HEAP16[((l+16|0)+((i-1|0)<<3)|0)>>1],HEAP32[(((l+16|0)+((i-1|0)<<3)|0)+4|0)>>2]);a=0==(o|0)?19:20;break;case 19:HEAP32[(m+8|0)>>2]=n;a=21;break;case 20:HEAP32[(o+12|0)>>2]=n;a=21;break;case 21:o=n;a=22;break;case 22:i=
i+1|0;a=17;break;case 23:_ExpressionInstall(b,m);a=28;break;case 24:n=_GenConstant(b,HEAP16[(j+4|0)>>1],HEAP32[(j+8|0)>>2]);a=0==(m|0)?25:26;break;case 25:HEAP32[(k+8|0)>>2]=n;a=27;break;case 26:HEAP32[(m+12|0)>>2]=n;a=27;break;case 27:m=n;_ExpressionInstall(b,m);a=28;break;case 28:a=29;break;case 29:g=g+1|0;a=9;break;case 30:a=32==(HEAPU16[(k|0)>>1]&65535|0)?31:34;break;case 31:a=b;var p=HEAP32[(k+4|0)>>2],q=_CountArguments(HEAP32[(k+8|0)>>2]);a=0==(_CheckDeffunctionCall(a,p,q)|0)?32:33;break;case 32:_PrintErrorID(b,
STRING_TABLE.__str612626|0,4,0);_EnvPrintRouter(b,STRING_TABLE.__str622627|0,STRING_TABLE.__str1082673|0);a=b;p=_GetConstructNameString(HEAP32[(k+4|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str622627|0,p);_EnvPrintRouter(b,STRING_TABLE.__str622627|0,STRING_TABLE.__str692634|0);_ExpressionDeinstall(b,k);_ReturnExpression(b,HEAP32[(k+8|0)>>2]);a=35;break;case 33:a=34;break;case 34:_EvaluateExpression(b,k,d);_ExpressionDeinstall(b,k);_ReturnExpression(b,HEAP32[(k+8|0)>>2]);a=35;break;case 35:STACKTOP=
c;return;default:assert(0,"bad label: "+a)}}_FuncallFunction.X=1;
function _TimerFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f;a=h;e=_gentime();b=_EnvRtnArgCount(a);d=1;c=3;break;case 3:if((d|0)<=(b|0))c=4;else{var i=0;c=5}break;case 4:i=1!=(_GetHaltExecution(a)|0);c=5;break;case 5:c=i?6:7;break;case 6:_EnvRtnUnknown(a,d,g);d=d+1|0;c=3;break;case 7:return h=_gentime()-e,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _GensymStar(h){var f=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;c=3;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+36|0)>>2]|0)>>2];_sprintf(b|0,STRING_TABLE.__str602625|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));c=HEAP32[(HEAP32[(a+16|0)>>2]+36|0)>>2]|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=4;break;case 4:c=
0!=(_FindSymbolHN(a,b|0)|0)?3:5;break;case 5:return h=_EnvAddSymbol(a,b|0),STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _ExpandFuncMultifield(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;k=b;d=3;break;case 3:d=0!=(i|0)?4:29;break;case 4:d=(HEAP32[(i+4|0)>>2]|0)==(k|0)?5:25;break;case 5:_EvaluateExpression(e,HEAP32[(i+8|0)>>2],g);_ReturnExpression(e,HEAP32[(i+8|0)>>2]);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?7:6;break;case 6:d=4!=(HEAPU16[(g+4|0)>>1]&65535|0)?7:11;break;case 7:HEAP32[(i+8|0)>>2]=0;d=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>
2]+4|0)>>2]|0)?8:10;break;case 8:d=4!=(HEAPU16[(g+4|0)>>1]&65535|0)?9:10;break;case 9:_ExpectedTypeError2(e,STRING_TABLE.__str352600|0,1);d=10;break;case 10:d=_FindFunction(e,STRING_TABLE.__str382603|0);HEAP32[(i+4|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]=0;d=29;break;case 11:m=n=0;o=HEAP32[(g+12|0)>>2]+1|0;d=12;break;case 12:d=(o|0)<=(HEAP32[(g+16|0)>>2]+1|0)?13:21;break;case 13:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?14:15;break;case 14:var p=_genalloc(e,16);d=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=16;break;case 16:l=p;HEAP16[(l|0)>>1]=HEAP16[((HEAP32[(g+
8|0)>>2]+16|0)+((o-1|0)<<3)|0)>>1];HEAP32[(l+4|0)>>2]=HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((o-1|0)<<3)|0)+4|0)>>2];HEAP32[(l+8|0)>>2]=0;HEAP32[(l+12|0)>>2]=0;d=0==(m|0)?17:18;break;case 17:m=l;d=19;break;case 18:HEAP32[(n+12|0)>>2]=l;d=19;break;case 19:n=l;d=20;break;case 20:o=o+1|0;d=12;break;case 21:d=0==(m|0)?22:23;break;case 22:HEAP32[j>>2]=HEAP32[(i+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];i=HEAP32[j>>2];d=24;break;case 23:HEAP32[(n+12|0)>>2]=HEAP32[(i+12|0)>>2];HEAP32[j>>2]=m;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];j=n+12|0;i=HEAP32[(n+12|0)>>2];d=24;break;case 24:d=28;break;case 25:d=0!=(HEAP32[(i+8|0)>>2]|0)?26:27;break;case 26:_ExpandFuncMultifield(e,g,HEAP32[(i+8|0)>>2],i+8|0,k);d=27;break;case 27:j=i+12|0;i=HEAP32[(i+12|0)>>2];d=28;break;case 28:d=3;break;case 29:return;default:assert(0,"bad label: "+d)}}_ExpandFuncMultifield.X=1;
function _DefmoduleBinarySetup(h){_AddBeforeBloadFunction(h,STRING_TABLE.__str2674|0,1090,2E3);_AddBinaryItem(h,STRING_TABLE.__str2674|0,0,1092,0,1094,1096,1098,1100,1102);_AddAbortBloadFunction(h,STRING_TABLE.__str2674|0,1104,0)}
function _BsaveFind2675(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0)>>2]=0;a=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(a|0)?4:26;break;case 4:b=HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=HEAP32[(a|
0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]&-5|4;b=HEAP32[(a+12|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:14;break;case 6:f=HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=0!=(HEAP32[(b|0)>>2]|0)?7:8;break;case 7:f=HEAP32[(b|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=8;break;case 8:f=0!=(HEAP32[(b+4|0)>>2]|0)?9:10;break;case 9:f=HEAP32[(b+4|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=10;break;case 10:f=0!=(HEAP32[(b+8|0)>>2]|0)?11:12;break;case 11:f=HEAP32[(b+8|0)>>2]+12|0;HEAP32[f>>
2]=HEAP32[f>>2]&-5|4;f=12;break;case 12:f=13;break;case 13:b=HEAP32[(b+12|0)>>2];f=5;break;case 14:b=HEAP32[(a+16|0)>>2];f=15;break;case 15:f=0!=(b|0)?16:24;break;case 16:f=HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=0!=(HEAP32[(b|0)>>2]|0)?17:18;break;case 17:f=HEAP32[(b|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=18;break;case 18:f=0!=(HEAP32[(b+4|0)>>2]|0)?19:20;break;case 19:f=HEAP32[(b+4|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=20;break;case 20:f=0!=(HEAP32[(b+
8|0)>>2]|0)?21:22;break;case 21:f=HEAP32[(b+8|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=22;break;case 22:f=23;break;case 23:b=HEAP32[(b+12|0)>>2];f=15;break;case 24:f=25;break;case 25:a=_EnvGetNextDefmodule(c,a);f=3;break;case 26:return;default:assert(0,"bad label: "+f)}}_BsaveFind2675.X=1;
function _BsaveStorage2676(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+60|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+64|0,4,f);STACKTOP=c}
function _BsaveBinaryItem2677(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+4,i=c+24,j;b=h;d=f;HEAP32[e>>2]=20*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+60|0)>>2]|0;HEAP32[e>>2]=HEAP32[e>>2]+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2]<<4|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+60|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>
2]+64|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:23;break;case 4:HEAP32[(g|0)>>2]=HEAPU32[(HEAP32[(e|0)>>2]+12|0)>>2]>>>3&536870911;a=HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+60|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0!=(HEAP32[(e+32|0)>>2]|0)?5:6;break;case 5:HEAP32[(g+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+60|0)>>2];a=7;break;case 6:HEAP32[(g+12|0)>>2]=-1;a=7;break;case 7:a=0==(HEAP32[(e+12|0)>>2]|0)?8:9;break;case 8:HEAP32[(g+4|0)>>2]=-1;a=14;break;case 9:HEAP32[(g+
4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2];j=HEAP32[(e+12|0)>>2];a=10;break;case 10:a=0!=(j|0)?11:13;break;case 11:a=HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=12;break;case 12:j=HEAP32[(j+12|0)>>2];a=10;break;case 13:a=14;break;case 14:a=0==(HEAP32[(e+16|0)>>2]|0)?15:16;break;case 15:HEAP32[(g+8|0)>>2]=-1;a=21;break;case 16:HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2];j=HEAP32[(e+16|0)>>2];a=17;break;case 17:a=0!=
(j|0)?18:20;break;case 18:a=HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=19;break;case 19:j=HEAP32[(j+12|0)>>2];a=17;break;case 20:a=21;break;case 21:HEAP32[(g+16|0)>>2]=HEAP32[(e+24|0)>>2];_GenWrite(g,20,d);a=22;break;case 22:e=_EnvGetNextDefmodule(b,e);a=3;break;case 23:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=24;break;case 24:a=0!=(e|0)?25:58;break;case 25:j=HEAP32[(e+12|0)>>2];a=26;break;case 26:a=0!=(j|0)?27:41;break;
case 27:a=HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0==(HEAP32[(j|0)>>2]|0)?28:29;break;case 28:HEAP32[(i|0)>>2]=-1;a=30;break;case 29:HEAP32[(i|0)>>2]=HEAPU32[(HEAP32[(j|0)>>2]+12|0)>>2]>>>3&536870911;a=30;break;case 30:a=0==(HEAP32[(j+4|0)>>2]|0)?31:32;break;case 31:HEAP32[(i+4|0)>>2]=-1;a=33;break;case 32:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(j+4|0)>>2]+12|0)>>2]>>>3&536870911;a=33;break;case 33:a=0==(HEAP32[(j+8|0)>>2]|0)?34:35;break;case 34:HEAP32[(i+8|0)>>2]=-1;
a=36;break;case 35:HEAP32[(i+8|0)>>2]=HEAPU32[(HEAP32[(j+8|0)>>2]+12|0)>>2]>>>3&536870911;a=36;break;case 36:a=0==(HEAP32[(j+12|0)>>2]|0)?37:38;break;case 37:HEAP32[(i+12|0)>>2]=-1;a=39;break;case 38:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2];a=39;break;case 39:_GenWrite(i,16,d);a=40;break;case 40:j=HEAP32[(j+12|0)>>2];a=26;break;case 41:j=HEAP32[(e+16|0)>>2];a=42;break;case 42:a=0!=(j|0)?43:57;break;case 43:a=HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0;HEAP32[a>>2]=
HEAP32[a>>2]+1|0;a=0==(HEAP32[(j|0)>>2]|0)?44:45;break;case 44:HEAP32[(i|0)>>2]=-1;a=46;break;case 45:HEAP32[(i|0)>>2]=HEAPU32[(HEAP32[(j|0)>>2]+12|0)>>2]>>>3&536870911;a=46;break;case 46:a=0==(HEAP32[(j+4|0)>>2]|0)?47:48;break;case 47:HEAP32[(i+4|0)>>2]=-1;a=49;break;case 48:HEAP32[(i+4|0)>>2]=HEAPU32[(HEAP32[(j+4|0)>>2]+12|0)>>2]>>>3&536870911;a=49;break;case 49:a=0==(HEAP32[(j+8|0)>>2]|0)?50:51;break;case 50:HEAP32[(i+8|0)>>2]=-1;a=52;break;case 51:HEAP32[(i+8|0)>>2]=HEAPU32[(HEAP32[(j+8|0)>>2]+
12|0)>>2]>>>3&536870911;a=52;break;case 52:a=0==(HEAP32[(j+12|0)>>2]|0)?53:54;break;case 53:HEAP32[(i+12|0)>>2]=-1;a=55;break;case 54:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0)>>2];a=55;break;case 55:_GenWrite(i,16,d);a=56;break;case 56:j=HEAP32[(j+12|0)>>2];a=42;break;case 57:e=_EnvGetNextDefmodule(b,e);a=24;break;case 58:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+60|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+64|0);STACKTOP=c;return;
default:assert(0,"bad label: "+a)}}_BsaveBinaryItem2677.X=1;
function _BloadStorage2678(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+60|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+64|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+60|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+72|0)>>2]=0;c=7;break;case 4:HEAP32[b>>
2]=36*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+60|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+72|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+64|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+68|0)>>2]=0;c=7;break;case 6:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+64|0)>>2]<<4|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+68|0)>>2]=c;c=7;break;case 7:STACKTOP=
f;return;default:assert(0,"bad label: "+c)}}_BloadStorage2678.X=1;
function _BloadBinaryItem2679(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a;c=f;a=h;_GenReadBinary(a,c,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+60|0)>>2]|0)?3:4;break;case 3:c=5;break;case 4:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+60|0)>>2],20,1106);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+64|0)>>2],16,1108);_SetListOfDefmodules(a,
HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+72|0)>>2]);c=a;var b=_EnvGetNextDefmodule(a,0);_EnvSetCurrentModule(c,b);c=5;break;case 5:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadBinaryItem2679.X=1;
function _UpdateDefmoduleItemHeader(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;d=h;e=f;g=c;i=a;j=b;HEAP32[(g|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*HEAP32[(e|0)>>2]|0;d=-1==(HEAP32[(e+4|0)>>2]|0)?3:4;break;case 3:HEAP32[(g+4|0)>>2]=0;HEAP32[(g+8|0)>>2]=0;d=5;break;case 4:d=i*HEAP32[(e+4|0)>>2]|0;k=i*HEAP32[(e+8|0)>>2]|0;HEAP32[(g+4|0)>>2]=j+d|0;HEAP32[(g+8|0)>>2]=j+k|0;d=5;break;case 5:return;default:assert(0,"bad label: "+d)}}
_UpdateDefmoduleItemHeader.X=1;function _AssignBsaveDefmdlItemHdrVals(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;HEAP32[(a|0)>>2]=HEAP32[(HEAP32[(b|0)>>2]+24|0)>>2];c=0==(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:HEAP32[(a+4|0)>>2]=-1;HEAP32[(a+8|0)>>2]=-1;c=5;break;case 4:HEAP32[(a+4|0)>>2]=HEAP32[(HEAP32[(b+4|0)>>2]+12|0)>>2];HEAP32[(a+8|0)>>2]=HEAP32[(HEAP32[(b+8|0)>>2]+12|0)>>2];c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _ClearBload2680(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;a=0;f=3;break;case 3:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]|0)?4:26;break;case 4:_DecrementSymbolCount(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*a|0)>>2]);d=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*a|0)+12|0)>>2];f=5;break;case 5:f=0!=(d|0)?6:14;break;case 6:f=0!=(HEAP32[(d|0)>>2]|0)?7:8;break;case 7:_DecrementSymbolCount(c,HEAP32[(d|0)>>2]);
f=8;break;case 8:f=0!=(HEAP32[(d+4|0)>>2]|0)?9:10;break;case 9:_DecrementSymbolCount(c,HEAP32[(d+4|0)>>2]);f=10;break;case 10:f=0!=(HEAP32[(d+8|0)>>2]|0)?11:12;break;case 11:_DecrementSymbolCount(c,HEAP32[(d+8|0)>>2]);f=12;break;case 12:f=13;break;case 13:d=HEAP32[(d+12|0)>>2];f=5;break;case 14:d=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*a|0)+16|0)>>2];f=15;break;case 15:f=0!=(d|0)?16:24;break;case 16:f=0!=(HEAP32[(d|0)>>2]|0)?17:18;break;case 17:_DecrementSymbolCount(c,
HEAP32[(d|0)>>2]);f=18;break;case 18:f=0!=(HEAP32[(d+4|0)>>2]|0)?19:20;break;case 19:_DecrementSymbolCount(c,HEAP32[(d+4|0)>>2]);f=20;break;case 20:f=0!=(HEAP32[(d+8|0)>>2]|0)?21:22;break;case 21:_DecrementSymbolCount(c,HEAP32[(d+8|0)>>2]);f=22;break;case 22:f=23;break;case 23:d=HEAP32[(d+12|0)>>2];f=15;break;case 24:f=c;var e=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*a|0)+8|0)>>2],g=_GetNumberOfModuleItems(c)<<2|0;_rm(f,e,g);f=25;break;case 25:a=a+1|0;f=3;break;case 26:b=
36*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]|0;f=0!=(b|0)?27:28;break;case 27:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2],b);f=28;break;case 28:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]=0;b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0)>>2]<<4|0;f=0!=(b|0)?29:30;break;case 29:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+68|0)>>2],b);f=30;break;case 30:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0)>>2]=0;_SetListOfDefmodules(c,
0);_CreateMainModule(c);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+40|0)>>2]=1;return;default:assert(0,"bad label: "+f)}}_ClearBload2680.X=1;
function _UpdateDefmodule(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d|0)>>2]<<2)|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=-1!=(HEAP32[(d+12|0)>>2]|0)?3:4;break;case 3:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+32|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*HEAP32[(d+12|0)>>2]|0;a=5;break;case 4:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+32|0)>>2]=0;a=5;break;case 5:a=0==(_GetNumberOfModuleItems(b)|0)?6:7;break;case 6:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+8|0)>>2]=0;a=8;break;case 7:a=b;var j=_GetNumberOfModuleItems(b)<<2|0;a=_gm2(a,j);HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+8|0)>>2]=a;a=8;break;
case 8:i=0;g=_GetListOfModuleItems(b);a=9;break;case 9:a=i;j=_GetNumberOfModuleItems(b);if((a|0)<(j|0))a=10;else{var k=0;a=11}break;case 10:k=0!=(g|0);a=11;break;case 11:a=k?12:17;break;case 12:a=0==(HEAP32[(g+16|0)>>2]|0)?13:14;break;case 13:HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+8|0)>>2]+(i<<2)|0)>>2]=0;a=15;break;case 14:a=FUNCTION_TABLE[HEAP32[(g+16|0)>>2]](b,e);HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+8|0)>>2]+
(i<<2)|0)>>2]=a;a=15;break;case 15:a=16;break;case 16:i=i+1|0;g=HEAP32[(g+28|0)>>2];a=9;break;case 17:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+4|0)>>2]=0;a=-1!=(HEAP32[(d+4|0)>>2]|0)?18:19;break;case 18:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(HEAP32[(d+4|0)>>2]<<4)|0;a=20;break;case 19:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+12|0)>>2]=
0;a=20;break;case 20:a=-1!=(HEAP32[(d+8|0)>>2]|0)?21:22;break;case 21:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(HEAP32[(d+8|0)>>2]<<4)|0;a=23;break;case 22:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+16|0)>>2]=0;a=23;break;case 23:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*e|0)+24|0)>>2]=HEAP32[(d+16|0)>>2];return;default:assert(0,"bad label: "+a)}}
_UpdateDefmodule.X=1;
function _UpdatePortItem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=-1!=(HEAP32[(d|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d|0)>>2]<<2)|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<
4)|0)>>2]=0;a=5;break;case 5:a=-1!=(HEAP32[(d+4|0)>>2]|0)?6:7;break;case 6:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+4|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=8;break;case 7:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+4|0)>>2]=0;a=8;break;case 8:a=-1!=
(HEAP32[(d+8|0)>>2]|0)?9:10;break;case 9:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+8|0)>>2]<<2)|0)>>2];a=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+8|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=11;break;case 10:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+8|0)>>2]=0;a=11;break;case 11:a=-1!=(HEAP32[(d+12|0)>>2]|0)?12:13;
break;case 12:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=14;break;case 13:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+68|0)>>2]+(e<<4)|0)+12|0)>>2]=0;a=14;break;case 14:return;default:assert(0,"bad label: "+a)}}_UpdatePortItem.X=1;
function _DefmoduleBasicCommands(h){_EnvAddClearFunction(h,STRING_TABLE.__str2685|0,1110,2E3);_AddSaveFunction(h,STRING_TABLE.__str2685|0,1112,1100);_EnvDefineFunction2(h,STRING_TABLE.__str12686|0,109,1114,STRING_TABLE.__str22687|0,STRING_TABLE.__str32688|0);_EnvDefineFunction2(h,STRING_TABLE.__str42689|0,118,1116,STRING_TABLE.__str52690|0,STRING_TABLE.__str32688|0);_EnvDefineFunction2(h,STRING_TABLE.__str62691|0,118,1118,STRING_TABLE.__str72692|0,STRING_TABLE.__str82693|0);_DefmoduleBinarySetup(h);
_DefmoduleCompilerSetup(h)}function _ClearDefmodules(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=1==(_Bloaded(c)|0)?3:4;break;case 3:f=5;break;case 4:_RemoveAllDefmodules(c);_CreateMainModule(c);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+40|0)>>2]=1;f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _SaveDefmodules(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=_EnvGetDefmodulePPForm(b,a);a=0!=(e|0)?3:4;break;case 3:_PrintInChunks(b,d,e);_EnvPrintRouter(b,d,STRING_TABLE.__str112696|0);a=4;break;case 4:return;default:assert(0,"bad label: "+a)}}function _EnvGetDefmoduleList(h,f){_OldGetConstructList(h,f,1120,1122)}
function _ListDefmodulesCommand(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=-1==(_EnvArgCountCheck(c,STRING_TABLE.__str42689|0,0,0)|0)?3:4;break;case 3:f=5;break;case 4:_EnvListDefmodules(c,STRING_TABLE.__str102695|0);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _PPDefmoduleCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=_GetConstructName(c,STRING_TABLE.__str62691|0,STRING_TABLE.__str92694|0);f=0==(a|0)?3:4;break;case 3:f=5;break;case 4:_PPDefmodule(c,a,STRING_TABLE.__str102695|0);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _PPDefmodule(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=_EnvFindDefmodule(d,e);a=0==(i|0)?3:4;break;case 3:_CantFindItemErrorMessage(d,STRING_TABLE.__str2685|0,e);b=0;a=7;break;case 4:a=0==(_EnvGetDefmodulePPForm(d,i)|0)?5:6;break;case 5:b=1;a=7;break;case 6:a=d;b=g;var j=_EnvGetDefmodulePPForm(d,i);_PrintInChunks(a,b,j);b=1;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _EnvListDefmodules(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=0;d=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(d|0)?4:6;break;case 4:c=a;var g=b,i=_EnvGetDefmoduleName(a,d);_EnvPrintRouter(c,g,i);_EnvPrintRouter(a,b,STRING_TABLE.__str112696|0);e=e+1|0;c=5;break;case 5:d=_EnvGetNextDefmodule(a,d);c=3;break;case 6:_PrintTally(a,b,e,STRING_TABLE.__str2685|0,STRING_TABLE.__str122697|0);return;default:assert(0,"bad label: "+c)}}
function _DefmoduleCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str2698|0,200,1124,1126,1128,3);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+56|0)>>2]=f}function _BeforeDefmodulesToCode(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=0;b=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(b|0)?4:6;break;case 4:f=a;a=f+1|0;HEAP32[(b+24|0)>>2]=f;f=5;break;case 5:b=_EnvGetNextDefmodule(c,b);f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _InitDefmoduleCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0!=(_EnvGetNextDefmodule(d,0)|0)?3:4;break;case 3:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+4|0)>>2];var i=g;_fprintf(e,STRING_TABLE.__str192717|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+
4>>2]=i,tempInt));b=5;break;case 4:_fprintf(e,STRING_TABLE.__str202718|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 5:_fprintf(e,STRING_TABLE.__str212719|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=a;return;default:assert(0,"bad label: "+b)}}
function _ConstructToCode2722(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t,u,v=e,w,x,y=e+4,A=e+8;j=h;k=f;l=c;m=a;n=b;o=d;u=s=q=0;HEAP32[v>>2]=0;HEAP32[y>>2]=1;HEAP32[A>>2]=2;_fprintf(m,STRING_TABLE.__str32701|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
r=g=_NewCFile(j,k,l,1,0);g=0==(g|0)?3:4;break;case 3:i=0;g=44;break;case 4:p=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]|0)>>2];g=n;_fprintf(r,STRING_TABLE.__str42702|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=g,HEAP32[tempInt+8>>2]=1,tempInt));p=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]|0)>>2];g=n;_fprintf(m,STRING_TABLE.__str52703|
0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=g,HEAP32[tempInt+8>>2]=1,tempInt));p=_EnvGetNextDefmodule(j,0);g=5;break;case 5:g=0!=(p|0)?6:41;break;case 6:q=_OpenFileIfNeeded(j,q,k,l,n,A,HEAP32[y>>2],m,STRING_TABLE.__str62704|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(q|0)?7:8;break;case 7:HEAP32[v>>2]=o;_CloseFileIfNeeded(j,q,v,y,o,0,0);_GenClose(j,r);
i=0;g=44;break;case 8:_fprintf(q,STRING_TABLE.__str72705|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(j,q,HEAP32[(p|0)>>2]);_fprintf(q,STRING_TABLE.__str82706|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));w=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+
20|0)>>2]|0)>>2];x=n;g=u;_fprintf(q,STRING_TABLE.__str92707|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=w,HEAP32[tempInt+4>>2]=x,HEAP32[tempInt+8>>2]=g,tempInt));w=0;x=_GetListOfModuleItems(j);g=9;break;case 9:g=w;var z=_GetNumberOfModuleItems(j);if((g|0)<(z|0))g=10;else{var B=0;g=11}break;case 10:B=0!=(x|0);g=11;break;case 11:g=B?12:22;break;case 12:u=u+1|0;g=0==(HEAP32[(x+20|0)>>2]|0)?13:14;break;case 13:_fprintf(r,STRING_TABLE.__str12699|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=15;break;case 14:FUNCTION_TABLE[HEAP32[(x+20|0)>>2]](j,r,HEAP32[(p+24|0)>>2],n,o);g=15;break;case 15:g=w+1|0;z=_GetNumberOfModuleItems(j);g=(g|0)<(z|0)?16:17;break;case 16:_fprintf(r,STRING_TABLE.__str102708|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
g=20;break;case 17:g=0!=(HEAP32[(p+32|0)>>2]|0)?18:19;break;case 18:_fprintf(r,STRING_TABLE.__str112709|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=19;break;case 19:g=20;break;case 20:g=21;break;case 21:w=w+1|0;x=HEAP32[(x+28|0)>>2];g=9;break;case 22:g=0==(HEAP32[(p+12|0)>>2]|0)?23:24;break;case 23:_fprintf(q,STRING_TABLE.__str122710|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=29;break;case 24:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+8|0)>>2];g=n;var z=((s|0)/(o|0)&-1)+1|0,C=(s|0)%(o|0);_fprintf(q,STRING_TABLE.__str132711|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=g,HEAP32[tempInt+8>>2]=z,HEAP32[tempInt+12>>2]=C,tempInt));t=HEAP32[(p+12|0)>>2];g=25;break;case 25:g=0!=
(t|0)?26:28;break;case 26:s=s+1|0;g=27;break;case 27:t=HEAP32[(t+12|0)>>2];g=25;break;case 28:g=29;break;case 29:g=0==(HEAP32[(p+16|0)>>2]|0)?30:31;break;case 30:_fprintf(q,STRING_TABLE.__str122710|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=36;break;case 31:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+8|0)>>2];g=n;z=((s|0)/(o|0)&-1)+1|0;C=(s|0)%(o|0);_fprintf(q,
STRING_TABLE.__str132711|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=g,HEAP32[tempInt+8>>2]=z,HEAP32[tempInt+12>>2]=C,tempInt));t=HEAP32[(p+16|0)>>2];g=32;break;case 32:g=0!=(t|0)?33:35;break;case 33:s=s+1|0;g=34;break;case 34:t=HEAP32[(t+12|0)>>2];g=32;break;case 35:g=36;break;case 36:g=HEAP32[(p+24|0)>>2];_fprintf(q,STRING_TABLE.__str142712|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));_fprintf(q,STRING_TABLE.__str122710|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0==(HEAP32[(p+32|0)>>2]|0)?37:38;break;case 37:_fprintf(q,STRING_TABLE.__str152713|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=39;break;case 38:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+
16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+4|0)>>2];var z=n,C=((HEAP32[(HEAP32[(p+32|0)>>2]+24|0)>>2]|0)/(o|0)&-1)+1|0,D=(HEAP32[(HEAP32[(p+32|0)>>2]+24|0)>>2]|0)%(o|0);_fprintf(q,STRING_TABLE.__str162714|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=z,HEAP32[tempInt+8>>2]=C,HEAP32[tempInt+12>>2]=D,tempInt));g=39;break;case 39:HEAP32[v>>2]=HEAP32[v>>2]+1|0;q=_CloseFileIfNeeded(j,q,v,y,o,0,0);g=40;break;case 40:p=_EnvGetNextDefmodule(j,
p);g=5;break;case 41:HEAP32[v>>2]=o;_CloseFileIfNeeded(j,q,v,y,o,0,0);_fprintf(r,STRING_TABLE.__str172715|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(j,r);g=0==(s|0)?42:43;break;case 42:i=1;g=44;break;case 43:i=_PortItemsToCode(j,k,l,m,n,o,A);g=44;break;case 44:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstructToCode2722.X=1;
function _PrintDefmoduleReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0==(g|0)?3:4;break;case 3:_fprintf(e,STRING_TABLE.__str12699|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|
0)>>2]+4|0)>>2];var i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2],j=((HEAP32[(g+24|0)>>2]|0)/(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,k=(HEAP32[(g+24|0)>>2]|0)%(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(e,STRING_TABLE.__str22700|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=j,HEAP32[tempInt+12>>2]=k,tempInt));b=5;break;case 5:STACKTOP=
a;return;default:assert(0,"bad label: "+b)}}_PrintDefmoduleReference.X=1;
function _PortItemsToCode(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r=g,s=g+4,t=g+8,u=g+12,v=g+16,w,x=g+20;k=h;l=f;m=c;n=a;o=b;p=d;q=e;HEAP32[r>>2]=0;HEAP32[s>>2]=0;HEAP32[t>>2]=0;HEAP32[u>>2]=0;w=HEAP32[v>>2]=0;HEAP32[x>>2]=1;i=_GetNextPortItem(k,r,s,u,v);HEAP32[s>>2]=i;i=3;break;case 3:i=0!=(HEAP32[s>>2]|0)?4:11;break;case 4:w=_OpenFileIfNeeded(k,w,l,m,o,
q,HEAP32[x>>2],n,STRING_TABLE.__str182716|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+8|0)>>2],0,0);i=0==(w|0)?5:6;break;case 5:HEAP32[t>>2]=p;_CloseFileIfNeeded(k,w,t,x,p,0,0);j=0;i=12;break;case 6:_fprintf(w,STRING_TABLE.__str72705|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(k,w,HEAP32[(HEAP32[s>>2]|0)>>2]);_fprintf(w,STRING_TABLE.__str102708|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(k,w,HEAP32[(HEAP32[s>>2]+4|0)>>2]);_fprintf(w,STRING_TABLE.__str102708|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(k,w,HEAP32[(HEAP32[s>>2]+8|0)>>2]);_fprintf(w,STRING_TABLE.__str102708|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=0==(HEAP32[(HEAP32[s>>2]+12|0)>>2]|0)?7:8;break;case 7:_fprintf(w,STRING_TABLE.__str152713|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=9;break;case 8:i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+16|0)>>2]+56|0)>>2]+20|0)>>2]+8|0)>>2];var y=o,A=((HEAP32[t>>2]+1|0)/(p|0)&
-1)+1|0,z=(HEAP32[t>>2]+1|0)%(p|0);_fprintf(w,STRING_TABLE.__str162714|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=y,HEAP32[tempInt+8>>2]=A,HEAP32[tempInt+12>>2]=z,tempInt));i=9;break;case 9:HEAP32[t>>2]=HEAP32[t>>2]+1|0;_CloseFileIfNeeded(k,w,t,x,p,0,0);i=10;break;case 10:i=_GetNextPortItem(k,r,s,u,v);HEAP32[s>>2]=i;i=3;break;case 11:HEAP32[t>>2]=p;_CloseFileIfNeeded(k,w,t,x,p,0,0);j=1;i=12;break;case 12:return h=
j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_PortItemsToCode.X=1;
function _GetNextPortItem(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;d=0==(HEAP32[i>>2]|0)?3:4;break;case 3:d=_EnvGetNextDefmodule(g,0);HEAP32[i>>2]=d;HEAP32[j>>2]=0;HEAP32[k>>2]=0;HEAP32[l>>2]=0;d=4;break;case 4:d=5;break;case 5:d=0!=(HEAP32[i>>2]|0)?6:20;break;case 6:d=0!=(HEAP32[j>>2]|0)?7:8;break;case 7:HEAP32[j>>2]=HEAP32[(HEAP32[j>>2]+12|0)>>2];d=8;break;case 8:d=0!=(HEAP32[j>>2]|0)?9:10;break;case 9:e=HEAP32[j>>2];d=21;break;case 10:d=0!=(HEAP32[k>>2]|0)?
14:11;break;case 11:HEAP32[j>>2]=HEAP32[(HEAP32[i>>2]+12|0)>>2];HEAP32[k>>2]=1;d=0==(HEAP32[j>>2]|0)?12:13;break;case 12:HEAP32[j>>2]=HEAP32[(HEAP32[i>>2]+16|0)>>2];HEAP32[l>>2]=1;d=13;break;case 13:d=17;break;case 14:d=0!=(HEAP32[l>>2]|0)?16:15;break;case 15:HEAP32[l>>2]=1;HEAP32[j>>2]=HEAP32[(HEAP32[i>>2]+16|0)>>2];d=16;break;case 16:d=17;break;case 17:d=0!=(HEAP32[j>>2]|0)?18:19;break;case 18:e=HEAP32[j>>2];d=21;break;case 19:d=_EnvGetNextDefmodule(g,HEAP32[i>>2]);HEAP32[i>>2]=d;HEAP32[k>>2]=0;
HEAP32[l>>2]=0;d=5;break;case 20:e=0;d=21;break;case 21:return e;default:assert(0,"bad label: "+d)}}_GetNextPortItem.X=1;function _AllocateDefmoduleGlobals(h){_AllocateEnvironmentData(h,4,76,0);_AddEnvironmentCleanupFunction(h,STRING_TABLE.__str2725|0,1130,-1E3);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+12|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+40|0)>>2]=1}
function _DeallocateDefmoduleData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i;c=h;g=0;f=3;break;case 3:f=(g|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]|0)?4:8;break;case 4:f=0!=(HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*g|0)+8|0)>>2]|0)?5:6;break;case 5:f=c;var j=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2]+36*g|0)+8|0)>>2],k=_GetNumberOfModuleItems(c)<<2|0;_rm(f,j,k);f=6;break;case 6:f=7;break;case 7:g=g+1|0;f=3;break;case 8:i=
36*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+60|0)>>2]|0;f=0!=(i|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+72|0)>>2],i);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2]=0;f=10;break;case 10:i=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+64|0)>>2]<<4|0;f=0!=(i|0)?11:12;break;case 11:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+68|0)>>2],i);f=12;break;case 12:d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2];f=13;break;case 13:f=
0!=(d|0)?14:15;break;case 14:f=HEAP32[(d+32|0)>>2];_ReturnDefmodule(c,d,1);d=f;f=13;break;case 15:e=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+44|0)>>2];f=16;break;case 16:f=0!=(e|0)?17:18;break;case 17:f=HEAP32[(e+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];e=f;f=16;break;case 18:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+8|0)>>2];f=19;break;case 19:f=0!=(a|0)?20:21;break;case 20:f=HEAP32[(a+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=19;break;case 21:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+32|0)>>2];f=22;break;case 22:f=0!=(b|0)?23:24;break;case 23:f=HEAP32[(b+28|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+
236|0)>>2]+16|0)>>2];b=f;f=22;break;case 24:_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+52|0)>>2]);_DeallocateCallList(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+4|0)>>2]);return;default:assert(0,"bad label: "+f)}}_DeallocateDefmoduleData.X=1;
function _InitializeDefmodules(h){_DefmoduleBasicCommands(h);_CreateMainModule(h);_AddConstruct(h,STRING_TABLE.__str12726|0,STRING_TABLE.__str2725|0,1132,0,0,0,0,0,0,0,0,0);_EnvDefineFunction2(h,STRING_TABLE.__str22727|0,119,1134,STRING_TABLE.__str32728|0,STRING_TABLE.__str42729|0);_EnvDefineFunction2(h,STRING_TABLE.__str52730|0,119,1136,STRING_TABLE.__str62731|0,STRING_TABLE.__str72732|0)}
function _CreateMainModule(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2]|0)?3:4;break;case 3:var e=_genalloc(c,36);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
e=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:a=e;f=_EnvAddSymbol(c,STRING_TABLE.__str82733|0);HEAP32[(a|0)>>2]=f;f=HEAP32[(a|0)>>2]+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;HEAP32[(a+32|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;HEAP32[(a+12|0)>>2]=0;HEAP32[(a+16|0)>>2]=0;HEAP32[(a+24|0)>>2]=0;HEAP32[(a+28|0)>>2]=0;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+28|0)>>2]|0)?6:7;break;case 6:HEAP32[(a+8|0)>>2]=0;f=17;break;case 7:b=_gm2(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>
2]+28|0)>>2]<<2|0);HEAP32[(a+8|0)>>2]=b;d=0;b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+32|0)>>2];f=8;break;case 8:if((d|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+28|0)>>2]|0))f=9;else{var g=0;f=10}break;case 9:g=0!=(b|0);f=10;break;case 10:f=g?11:16;break;case 11:f=0==(HEAP32[(b+8|0)>>2]|0)?12:13;break;case 12:HEAP32[(HEAP32[(a+8|0)>>2]+(d<<2)|0)>>2]=0;f=14;break;case 13:f=FUNCTION_TABLE[HEAP32[(b+8|0)>>2]](c);HEAP32[(HEAP32[(a+8|0)>>2]+(d<<2)|0)>>2]=f;f=HEAP32[(HEAP32[(a+8|0)>>2]+(d<<
2)|0)>>2];HEAP32[(f|0)>>2]=a;HEAP32[(f+4|0)>>2]=0;HEAP32[(f+8|0)>>2]=0;f=14;break;case 14:f=15;break;case 15:d=d+1|0;b=HEAP32[(b+28|0)>>2];f=8;break;case 16:f=17;break;case 17:_SetNumberOfDefmodules(c,1);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+24|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2]=a;_EnvSetCurrentModule(c,a);return;default:assert(0,"bad label: "+f)}}_CreateMainModule.X=1;
function _GetCurrentModuleCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;_EnvArgCountCheck(a,STRING_TABLE.__str22727|0,0,0);b=_EnvGetCurrentModule(a);f=0==(b|0)?3:4;break;case 3:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];f=5;break;case 4:c=_EnvAddSymbol(a,HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]);f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SetCurrentModuleCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g,i;b=h;g=_EnvGetCurrentModule(b);c=0==(g|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];c=11;break;case 4:c=b;i=_EnvGetCurrentModule(b)|0;i=_EnvAddSymbol(c,HEAP32[(HEAP32[i>>2]+16|0)>>2]);c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str52730|0,0,1)|0)?5:6;break;case 5:a=
i;c=11;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str52730|0,1,2,d)|0)?7:8;break;case 7:a=i;c=11;break;case 8:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];g=_EnvFindDefmodule(b,e);c=0==(g|0)?9:10;break;case 9:_CantFindItemErrorMessage(b,STRING_TABLE.__str12726|0,e);a=i;c=11;break;case 10:_EnvSetCurrentModule(b,g);a=i;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetCurrentModuleCommand.X=1;
function _GetListOfModuleItems(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+32|0)>>2]}function _GetNumberOfModuleItems(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+28|0)>>2]}function _EnvGetCurrentModule(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+20|0)>>2]}
function _RestoreCurrentModule(h){var f;f=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+8|0)>>2]=HEAP32[(f+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+12|0)>>2]=HEAP32[(f|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+20|0)>>2]=HEAP32[(f+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>
2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_RestoreCurrentModule.X=1;
function _GetModuleItem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(e|0)?3:6;break;case 3:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+20|0)>>2]|0)?4:5;break;case 4:b=0;a=9;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+20|0)>>2];a=6;break;case 6:a=0==(HEAP32[(e+8|0)>>2]|0)?7:8;break;case 7:b=0;a=9;break;case 8:b=HEAP32[(HEAP32[(e+8|0)>>2]+(g<<2)|0)>>2];a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}_GetModuleItem.X=1;
function _SetModuleItem(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0==(e|0)?3:6;break;case 3:b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+20|0)>>2]|0)?4:5;break;case 4:b=9;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+20|0)>>2];b=6;break;case 6:b=0==(HEAP32[(e+8|0)>>2]|0)?7:8;break;case 7:b=9;break;case 8:HEAP32[(HEAP32[(e+8|0)>>2]+(g<<2)|0)>>2]=i;b=9;break;case 9:return;default:assert(0,"bad label: "+b)}}_SetModuleItem.X=1;
function _SetListOfDefmodules(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=h;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+16|0)>>2];c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+24|0)>>2]|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+24|0)>>2]+32|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|
0)>>2]+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+24|0)>>2]+32|0)>>2];c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}_SetListOfDefmodules.X=1;function _EnvGetNextDefmodule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+16|0)>>2];c=5;break;case 4:a=HEAP32[(d+32|0)>>2];c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _EnvGetDefmoduleName(h,f){return HEAP32[(HEAP32[(f|0)>>2]+16|0)>>2]}function _EnvGetDefmodulePPForm(h,f){return HEAP32[(f+4|0)>>2]}
function _RegisterModuleItem(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p;i=h;j=f;k=c;l=a;m=b;n=d;o=e;g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]|0)?3:4;break;case 3:var q=_genalloc(i,32);g=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];q=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];g=5;break;case 5:p=q;HEAP32[(p|0)>>2]=j;HEAP32[(p+8|0)>>2]=k;HEAP32[(p+12|0)>>2]=l;HEAP32[(p+16|0)>>2]=m;HEAP32[(p+20|0)>>2]=n;HEAP32[(p+24|0)>>2]=o;g=HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]+28|0;var r=HEAP32[g>>2];HEAP32[g>>2]=r+1|0;HEAP32[(p+4|0)>>2]=r;HEAP32[(p+28|0)>>2]=0;g=0==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]+32|0)>>
2]=p;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]|0)>>2]=p;g=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]|0)>>2]+28|0)>>2]=p;HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+16|0)>>2]|0)>>2]=p;g=8;break;case 8:return HEAP32[(p+4|0)>>2];default:assert(0,"bad label: "+g)}}_RegisterModuleItem.X=1;
function _FindModuleItem(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+32|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+28|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvSetCurrentModule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;c=f;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+20|0)>>2]=c;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+12|0)>>2]|0)?3:7;break;case 3:b=HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+36|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+16|0)>>2]+4|0)>>2];c=4;break;case 4:c=0!=(b|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(b+4|0)>>2]](a);b=
HEAP32[(b+12|0)>>2];c=4;break;case 6:c=7;break;case 7:return d;default:assert(0,"bad label: "+c)}}_EnvSetCurrentModule.X=1;
function _SaveCurrentModule(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:h=a;HEAP32[(h|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+12|0)>>2]=0;HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+20|0)>>2];HEAP32[(h+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+8|0)>>2]=h;return;default:assert(0,"bad label: "+f)}}_SaveCurrentModule.X=1;
function _RemoveAllDefmodules(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2]|0)?4:5;break;case 4:f=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2]+32|0)>>2];_ReturnDefmodule(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2],0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+16|0)>>2]=f;f=3;break;case 5:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+20|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|
0)>>2]+24|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}_RemoveAllDefmodules.X=1;function _GetNumberOfDefmodules(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+48|0)>>2]}function _SetNumberOfDefmodules(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+48|0)>>2]=f}
function _ReturnDefmodule(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;b=h;d=f;e=c;a=0==(d|0)?3:4;break;case 3:a=45;break;case 4:a=0!=(e|0)?6:5;break;case 5:_EnvSetCurrentModule(b,d);a=6;break;case 6:a=0!=(HEAP32[(d+8|0)>>2]|0)?7:18;break;case 7:a=0!=(e|0)?17:8;break;case 8:g=0;i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+32|0)>>2];a=9;break;case 9:if((g|0)<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+28|0)>>2]|0))a=10;else{var l=0;a=11}break;case 10:l=0!=(i|0);a=11;break;case 11:a=
l?12:16;break;case 12:a=0!=(HEAP32[(i+12|0)>>2]|0)?13:14;break;case 13:FUNCTION_TABLE[HEAP32[(i+12|0)>>2]](b,HEAP32[(HEAP32[(d+8|0)>>2]+(g<<2)|0)>>2]);a=14;break;case 14:a=15;break;case 15:g=g+1|0;i=HEAP32[(i+28|0)>>2];a=9;break;case 16:a=17;break;case 17:_rm(b,HEAP32[(d+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+28|0)>>2]<<2|0);a=18;break;case 18:a=0!=(e|0)?20:19;break;case 19:_DecrementSymbolCount(b,HEAP32[(d|0)>>2]);a=20;break;case 20:j=HEAP32[(d+12|0)>>2];a=21;break;case 21:a=0!=(j|
0)?22:31;break;case 22:k=HEAP32[(j+12|0)>>2];a=0!=(e|0)?30:23;break;case 23:a=0!=(HEAP32[(j|0)>>2]|0)?24:25;break;case 24:_DecrementSymbolCount(b,HEAP32[(j|0)>>2]);a=25;break;case 25:a=0!=(HEAP32[(j+4|0)>>2]|0)?26:27;break;case 26:_DecrementSymbolCount(b,HEAP32[(j+4|0)>>2]);a=27;break;case 27:a=0!=(HEAP32[(j+8|0)>>2]|0)?28:29;break;case 28:_DecrementSymbolCount(b,HEAP32[(j+8|0)>>2]);a=29;break;case 29:a=30;break;case 30:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];j=k;a=21;break;case 31:j=HEAP32[(d+16|0)>>2];a=32;break;case 32:a=0!=(j|0)?33:42;break;case 33:k=HEAP32[(j+12|0)>>2];a=0!=(e|0)?41:34;break;case 34:a=0!=(HEAP32[(j|0)>>2]|0)?35:36;break;case 35:_DecrementSymbolCount(b,HEAP32[(j|0)>>2]);a=36;break;case 36:a=
0!=(HEAP32[(j+4|0)>>2]|0)?37:38;break;case 37:_DecrementSymbolCount(b,HEAP32[(j+4|0)>>2]);a=38;break;case 38:a=0!=(HEAP32[(j+8|0)>>2]|0)?39:40;break;case 39:_DecrementSymbolCount(b,HEAP32[(j+8|0)>>2]);a=40;break;case 40:a=41;break;case 41:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|
0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];j=k;a=32;break;case 42:a=0!=(HEAP32[(d+4|0)>>2]|0)?43:44;break;case 43:a=b;var m=HEAP32[(d+4|0)>>2],n=_strlen(HEAP32[(d+4|0)>>2])+1|0;_rm(a,m,n);a=44;break;case 44:_ClearUserDataList(b,HEAP32[(d+28|0)>>2]);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=45;break;case 45:return;default:assert(0,"bad label: "+a)}}_ReturnDefmodule.X=1;
function _EnvFindDefmodule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;e=c=_FindSymbolHN(b,f);c=0==(c|0)?3:4;break;case 3:a=0;c=10;break;case 4:d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+16|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:9;break;case 6:c=(HEAP32[(d|0)>>2]|0)==(e|0)?7:8;break;case 7:a=d;c=10;break;case 8:d=HEAP32[(d+32|0)>>2];c=5;break;case 9:a=0;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}
function _AddAfterModuleChangeFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+4|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+4|0)>>2]=f}function _IllegalModuleSpecifierMessage(h){_PrintErrorID(h,STRING_TABLE.__str92734|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str102735|0,STRING_TABLE.__str112736|0)}
function _AddAfterModuleDefinedFunction(h,f,c,a){f=_AddFunctionToCallList(h,f,a,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+52|0)>>2],1);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+16|0)>>2]+52|0)>>2]=f}
function _AddPortConstructItem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var g=_genalloc(b,12);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>
2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:h=g;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=e;HEAP32[(h+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+44|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+44|0)>>2]=h;return;default:assert(0,"bad label: "+a)}}_AddPortConstructItem.X=1;
function _ParseDefmodule(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c,k,l,m,n,o,p,q,r,s;d=h;e=f;s=r=q=o=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str2771|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str12772|
0);b=1;a=92;break;case 5:g=_GetConstructNameAndComment(d,e,j,STRING_TABLE.__str12772|0,1138,1140,STRING_TABLE.__str22773|0,1,1,0);a=0==(g|0)?6:7;break;case 6:b=1;a=92;break;case 7:a=0==(_strcmp(HEAP32[(g+16|0)>>2],STRING_TABLE.__str32774|0)|0)?8:9;break;case 8:o=_EnvFindDefmodule(d,STRING_TABLE.__str32774|0);a=9;break;case 9:a=0==(o|0)?10:17;break;case 10:i=_EnvFindDefmodule(d,HEAP32[(g+16|0)>>2]);a=0!=(i|0)?11:12;break;case 11:s=1;a=16;break;case 12:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+236|0)>>2]+20|0)>>2]+144|0)>>2]|0)?13:14;break;case 13:var t=_genalloc(d,36);a=15;break;case 14:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=15;break;case 15:i=t;HEAP32[(i|0)>>2]=g;HEAP32[(i+28|0)>>2]=
0;HEAP32[(i+32|0)>>2]=0;a=16;break;case 16:a=18;break;case 17:s=1;i=o;a=18;break;case 18:a=0!=s<<16>>16?19:20;break;case 19:q=HEAP32[(i+12|0)>>2];r=HEAP32[(i+16|0)>>2];a=20;break;case 20:HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=0;p=_ParsePortSpecifications(d,e,j,i);a=0!=(p|0)?22:21;break;case 21:p=_FindMultiImportConflict(d,i);a=22;break;case 22:a=0!=(p|0)?24:23;break;case 23:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?24:38;break;case 24:a=25;break;case 25:a=0!=(HEAP32[(i+
12|0)>>2]|0)?26:27;break;case 26:a=HEAP32[(HEAP32[(i+12|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(i+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(i+12|0)>>2]=a;a=25;break;case 27:a=28;break;case 28:a=0!=(HEAP32[(i+
16|0)>>2]|0)?29:30;break;case 29:a=HEAP32[(HEAP32[(i+16|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(i+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(i+16|0)>>2]=a;a=28;break;case 30:a=0==(o|0)?31:33;break;case 31:a=
0!=s<<16>>16?33:32;break;case 32:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+144|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=33;break;case 33:a=0!=s<<16>>16?34:35;break;case 34:HEAP32[(i+12|0)>>2]=q;HEAP32[(i+16|0)>>2]=r;a=35;break;case 35:a=0!=(p|0)?
36:37;break;case 36:b=1;a=92;break;case 37:b=0;a=92;break;case 38:a=0==(o|0)?39:40;break;case 39:a=HEAP32[(i|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=44;break;case 40:a=0!=(HEAP32[(i+12|0)>>2]|0)?42:41;break;case 41:a=0!=(HEAP32[(i+16|0)>>2]|0)?42:43;break;case 42:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+40|0)>>2]=0;a=43;break;case 43:a=44;break;case 44:m=HEAP32[(i+12|0)>>2];a=45;break;case 45:a=0!=(m|0)?46:54;break;case 46:a=0!=(HEAP32[(m|0)>>2]|0)?47:48;break;case 47:a=HEAP32[(m|0)>>2]+4|
0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=48;break;case 48:a=0!=(HEAP32[(m+4|0)>>2]|0)?49:50;break;case 49:a=HEAP32[(m+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=50;break;case 50:a=0!=(HEAP32[(m+8|0)>>2]|0)?51:52;break;case 51:a=HEAP32[(m+8|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=52;break;case 52:a=53;break;case 53:m=HEAP32[(m+12|0)>>2];a=45;break;case 54:m=HEAP32[(i+16|0)>>2];a=55;break;case 55:a=0!=(m|0)?56:64;break;case 56:a=0!=(HEAP32[(m|0)>>2]|0)?57:58;break;case 57:a=HEAP32[(m|0)>>2]+4|0;HEAP32[a>>
2]=HEAP32[a>>2]+1|0;a=58;break;case 58:a=0!=(HEAP32[(m+4|0)>>2]|0)?59:60;break;case 59:a=HEAP32[(m+4|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=60;break;case 60:a=0!=(HEAP32[(m+8|0)>>2]|0)?61:62;break;case 61:a=HEAP32[(m+8|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=62;break;case 62:a=63;break;case 63:m=HEAP32[(m+12|0)>>2];a=55;break;case 64:a=0!=(o|0)?65:66;break;case 65:a=79;break;case 66:a=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+28|0)>>2]|0)?67:68;break;case 67:HEAP32[(i+8|0)>>2]=0;a=
78;break;case 68:k=_gm2(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+28|0)>>2]<<2|0);HEAP32[(i+8|0)>>2]=k;k=0;l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+32|0)>>2];a=69;break;case 69:if((k|0)<(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+28|0)>>2]|0))a=70;else{var u=0;a=71}break;case 70:u=0!=(l|0);a=71;break;case 71:a=u?72:77;break;case 72:a=0==(HEAP32[(l+8|0)>>2]|0)?73:74;break;case 73:HEAP32[(HEAP32[(i+8|0)>>2]+(k<<2)|0)>>2]=0;a=75;break;case 74:a=FUNCTION_TABLE[HEAP32[(l+8|0)>>2]](d);HEAP32[(HEAP32[(i+
8|0)>>2]+(k<<2)|0)>>2]=a;a=HEAP32[(HEAP32[(i+8|0)>>2]+(k<<2)|0)>>2];HEAP32[(a|0)>>2]=i;HEAP32[(a+4|0)>>2]=0;HEAP32[(a+8|0)>>2]=0;a=75;break;case 75:a=76;break;case 76:k=k+1|0;l=HEAP32[(l+28|0)>>2];a=69;break;case 77:a=78;break;case 78:a=79;break;case 79:_SavePPBuffer(d,STRING_TABLE.__str42775|0);a=1==(_EnvGetConserveMemory(d)|0)?80:81;break;case 80:HEAP32[(i+4|0)>>2]=0;a=82;break;case 81:a=_CopyPPBuffer(d);HEAP32[(i+4|0)>>2]=a;a=82;break;case 82:a=0==(o|0)?83:87;break;case 83:a=0==(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+16|0)>>2]+24|0)>>2]|0)?84:85;break;case 84:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+16|0)>>2]=i;a=86;break;case 85:HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+24|0)>>2]+32|0)>>2]=i;a=86;break;case 86:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+24|0)>>2]=i;a=HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+48|0;var v=HEAP32[a>>2];HEAP32[a>>2]=v+1|0;HEAP32[(i+24|0)>>2]=v;a=87;break;case 87:_EnvSetCurrentModule(d,i);n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+52|0)>>2];a=88;break;
case 88:a=0!=(n|0)?89:91;break;case 89:FUNCTION_TABLE[HEAP32[(n+4|0)>>2]](d);a=90;break;case 90:n=HEAP32[(n+12|0)>>2];a=88;break;case 91:b=0;a=92;break;case 92:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefmodule.X=1;
function _DeleteDefmodule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=h;c=_EnvGetDefmoduleName(b,f);c=0==(_strcmp(c,STRING_TABLE.__str32774|0)|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+16|0)>>2]+40|0)>>2];c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _ParsePortSpecifications(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=0;b=3;break;case 3:b=171!=(HEAPU16[(i|0)>>1]&65535|0)?4:19;break;case 4:b=170!=(HEAPU16[(i|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(e,STRING_TABLE.__str12772|0);d=1;b=20;break;case 6:_GetToken(e,g,i);b=2!=(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(e,STRING_TABLE.__str12772|0);d=1;b=20;break;case 8:b=0==(_strcmp(HEAP32[(HEAP32[(i+
4|0)>>2]+16|0)>>2],STRING_TABLE.__str52776|0)|0)?9:10;break;case 9:k=_ParseImportSpec(e,g,i,j);b=14;break;case 10:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str62777|0)|0)?11:12;break;case 11:k=_ParseExportSpec(e,g,i,j,0);b=13;break;case 12:_SyntaxErrorMessage(e,STRING_TABLE.__str12772|0);d=1;b=20;break;case 13:b=14;break;case 14:b=0!=(k|0)?15:16;break;case 15:d=1;b=20;break;case 16:_PPCRAndIndent(e);_GetToken(e,g,i);b=171==(HEAPU16[(i|0)>>1]&65535|0)?17:18;break;case 17:_PPBackup(e);
_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str72778|0);b=18;break;case 18:b=3;break;case 19:d=0;b=20;break;case 20:return d;default:assert(0,"bad label: "+b)}}_ParsePortSpecifications.X=1;
function _FindMultiImportConflict(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k,l;d=h;e=f;_SaveCurrentModule(d);g=_EnvGetNextDefmodule(d,0);a=3;break;case 3:a=0!=(g|0)?4:16;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+16|0)>>2]+44|0)>>2];a=5;break;case 5:a=0!=(j|0)?6:14;break;case 6:_EnvSetCurrentModule(d,g);k=_FindConstruct(d,HEAP32[(j|0)>>2]);l=FUNCTION_TABLE[HEAP32[(k+
28|0)>>2]](d,0);a=7;break;case 7:a=0!=(l|0)?8:12;break;case 8:_EnvSetCurrentModule(d,e);a=d;var m=HEAP32[(j|0)>>2],n=FUNCTION_TABLE[HEAP32[(k+16|0)>>2]](l)+16|0;_FindImportedConstruct(a,m,0,HEAP32[n>>2],i,0,0);a=1<(HEAP32[i>>2]|0)?9:10;break;case 9:b=d;a=_EnvGetDefmoduleName(d,e);m=HEAP32[(j|0)>>2];n=FUNCTION_TABLE[HEAP32[(k+16|0)>>2]](l)+16|0;_ImportExportConflictMessage(b,STRING_TABLE.__str12772|0,a,m,HEAP32[n>>2]);_RestoreCurrentModule(d);b=1;a=17;break;case 10:_EnvSetCurrentModule(d,g);a=11;break;
case 11:l=FUNCTION_TABLE[HEAP32[(k+28|0)>>2]](d,l);a=7;break;case 12:a=13;break;case 13:j=HEAP32[(j+8|0)>>2];a=5;break;case 14:a=15;break;case 15:g=_EnvGetNextDefmodule(d,g);a=3;break;case 16:_RestoreCurrentModule(d);b=0;a=17;break;case 17:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_FindMultiImportConflict.X=1;
function _ValidPortConstructItem(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+44|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(b,HEAP32[(d|0)>>2])|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+8|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _FindImportExportConflict(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n=b;g=h;i=f;j=c;k=a;d=0==(_ValidPortConstructItem(g,i)|0)?3:4;break;case 3:e=0;d=17;break;case 4:d=0!=(_FindModuleSeparator(k)|0)?5:6;break;case 5:e=0;d=17;break;case 6:m=d=_FindModuleItem(g,i);d=0==(d|0)?7:8;break;case 7:e=0;d=17;break;case 8:d=0==(HEAP32[(m+24|0)>>2]|0)?9:10;break;case 9:e=
0;d=17;break;case 10:_SaveCurrentModule(g);l=_EnvGetNextDefmodule(g,0);d=11;break;case 11:d=0!=(l|0)?12:16;break;case 12:_EnvSetCurrentModule(g,l);_FindImportedConstruct(g,i,0,k,n,1,j);d=1<(HEAP32[n>>2]|0)?13:14;break;case 13:_RestoreCurrentModule(g);e=1;d=17;break;case 14:d=15;break;case 15:l=_EnvGetNextDefmodule(g,l);d=11;break;case 16:_RestoreCurrentModule(g);e=0;d=17;break;case 17:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_FindImportExportConflict.X=1;
function _ParseImportSpec(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p=b;g=h;i=f;j=c;k=a;_SavePPBuffer(g,STRING_TABLE.__str102781|0);_GetToken(g,i,j);d=2!=(HEAPU16[(j|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(g,STRING_TABLE.__str82779|0);e=1;d=48;break;case 4:l=d=_EnvFindDefmodule(g,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);d=0==(d|0)?5:6;break;case 5:_CantFindItemErrorMessage(g,
STRING_TABLE.__str12772|0,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);e=1;d=48;break;case 6:d=0==(HEAP32[(l+16|0)>>2]|0)?7:8;break;case 7:e=g;d=_EnvGetDefmoduleName(g,l);_NotExportedErrorMessage(e,d,0,0);e=1;d=48;break;case 8:n=HEAP32[(k+12|0)>>2];d=0!=(_ParseExportSpec(g,i,j,k,l)|0)?9:10;break;case 9:e=1;d=48;break;case 10:d=(HEAP32[(k+12|0)>>2]|0)==(n|0)?11:12;break;case 11:e=0;d=48;break;case 12:d=0!=(HEAP32[(HEAP32[(k+12|0)>>2]+4|0)>>2]|0)?13:38;break;case 13:o=0;m=HEAP32[(l+16|0)>>2];d=14;break;case 14:if(0!=
(m|0))d=15;else{var q=0;d=16}break;case 15:q=0!=(o|0)^1;d=16;break;case 16:d=q?17:32;break;case 17:d=0==(HEAP32[(m+4|0)>>2]|0)?18:19;break;case 18:o=1;d=30;break;case 19:d=(HEAP32[(m+4|0)>>2]|0)==(HEAP32[(HEAP32[(k+12|0)>>2]+4|0)>>2]|0)?20:29;break;case 20:d=0==(HEAP32[(HEAP32[(k+12|0)>>2]+8|0)>>2]|0)?21:22;break;case 21:o=1;d=28;break;case 22:d=0==(HEAP32[(m+8|0)>>2]|0)?23:24;break;case 23:o=1;d=27;break;case 24:d=(HEAP32[(m+8|0)>>2]|0)==(HEAP32[(HEAP32[(k+12|0)>>2]+8|0)>>2]|0)?25:26;break;case 25:o=
1;d=26;break;case 26:d=27;break;case 27:d=28;break;case 28:d=29;break;case 29:d=30;break;case 30:d=31;break;case 31:m=HEAP32[(m+12|0)>>2];d=14;break;case 32:d=0!=(o|0)?37:33;break;case 33:d=0==(HEAP32[(HEAP32[(k+12|0)>>2]+8|0)>>2]|0)?34:35;break;case 34:d=g;var r=_EnvGetDefmoduleName(g,l);_NotExportedErrorMessage(d,r,HEAP32[(HEAP32[(HEAP32[(k+12|0)>>2]+4|0)>>2]+16|0)>>2],0);d=36;break;case 35:d=g;r=_EnvGetDefmoduleName(g,l);_NotExportedErrorMessage(d,r,HEAP32[(HEAP32[(HEAP32[(k+12|0)>>2]+4|0)>>2]+
16|0)>>2],HEAP32[(HEAP32[(HEAP32[(k+12|0)>>2]+8|0)>>2]+16|0)>>2]);d=36;break;case 36:e=1;d=48;break;case 37:d=38;break;case 38:_SaveCurrentModule(g);_EnvSetCurrentModule(g,k);m=HEAP32[(k+12|0)>>2];d=39;break;case 39:d=0!=(m|0)?40:47;break;case 40:d=0==(HEAP32[(m+4|0)>>2]|0)?42:41;break;case 41:d=0==(HEAP32[(m+8|0)>>2]|0)?42:43;break;case 42:d=46;break;case 43:l=_EnvFindDefmodule(g,HEAP32[(HEAP32[(m|0)>>2]+16|0)>>2]);_EnvSetCurrentModule(g,l);d=0==(_FindImportedConstruct(g,HEAP32[(HEAP32[(m+4|0)>>
2]+16|0)>>2],0,HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2],p,1,0)|0)?44:45;break;case 44:e=g;d=_EnvGetDefmoduleName(g,l);_NotExportedErrorMessage(e,d,HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2]);_RestoreCurrentModule(g);e=1;d=48;break;case 45:d=46;break;case 46:m=HEAP32[(m+12|0)>>2];d=39;break;case 47:_RestoreCurrentModule(g);e=0;d=48;break;case 48:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseImportSpec.X=1;
function _FindModuleSeparator(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;a=h;d=b=0;f=3;break;case 3:f=0!=(HEAP8[a+b|0]<<24>>24|0)?4:11;break;case 4:f=58==(HEAP8[a+b|0]<<24>>24|0)?5:8;break;case 5:f=0!=(d|0)?6:7;break;case 6:c=b;f=12;break;case 7:d=1;f=9;break;case 8:d=0;f=9;break;case 9:f=10;break;case 10:b=b+1|0;f=3;break;case 11:c=0;f=12;break;case 12:return c;default:assert(0,"bad label: "+f)}}
function _ParseExportSpec(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q;g=h;i=f;j=c;k=a;l=b;d=0!=(l|0)?3:4;break;case 3:q=STRING_TABLE.__str82779|0;o=HEAP32[(l|0)>>2];d=5;break;case 4:q=STRING_TABLE.__str92780|0;o=0;d=5;break;case 5:_SavePPBuffer(g,STRING_TABLE.__str102781|0);_GetToken(g,i,j);d=35==(HEAPU16[(j|0)>>1]&65535|0)?6:25;break;case 6:d=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str112782|0)|0)?7:11;break;case 7:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?8:9;break;case 8:var r=_genalloc(g,16);d=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=10;break;case 10:m=r;HEAP32[(m|0)>>2]=o;HEAP32[(m+4|0)>>2]=0;
HEAP32[(m+8|0)>>2]=0;HEAP32[(m+12|0)>>2]=0;d=15;break;case 11:d=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str122783|0)|0)?12:13;break;case 12:m=0;d=14;break;case 13:_SyntaxErrorMessage(g,q);e=1;d=63;break;case 14:d=15;break;case 15:_GetToken(g,i,j);d=171!=(HEAPU16[(j|0)>>1]&65535|0)?16:19;break;case 16:d=0!=(m|0)?17:18;break;case 17:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=18;break;case 18:_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str102781|0);_SavePPBuffer(g,HEAP32[(j+8|0)>>2]);_SyntaxErrorMessage(g,q);e=1;d=63;break;case 19:d=0!=(m|0)?20:24;break;case 20:d=0!=(l|0)?21:22;break;case 21:HEAP32[(m+12|0)>>2]=HEAP32[(k+12|0)>>2];HEAP32[(k+12|0)>>2]=m;d=23;break;case 22:HEAP32[(m+12|0)>>2]=HEAP32[(k+
16|0)>>2];HEAP32[(k+16|0)>>2]=m;d=23;break;case 23:d=24;break;case 24:e=0;d=63;break;case 25:d=2!=(HEAPU16[(j|0)>>1]&65535|0)?26:27;break;case 26:_SyntaxErrorMessage(g,q);e=1;d=63;break;case 27:n=HEAP32[(j+4|0)>>2];p=d=_ValidPortConstructItem(g,HEAP32[(n+16|0)>>2]);d=0==(d|0)?28:29;break;case 28:_SyntaxErrorMessage(g,q);e=1;d=63;break;case 29:_SavePPBuffer(g,STRING_TABLE.__str102781|0);_GetToken(g,i,j);d=35==(HEAPU16[(j|0)>>1]&65535|0)?30:49;break;case 30:d=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+
16|0)>>2],STRING_TABLE.__str112782|0)|0)?31:35;break;case 31:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?32:33;break;case 32:var s=_genalloc(g,16);d=34;break;case 33:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];s=HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+16|0)>>2];d=34;break;case 34:m=s;HEAP32[(m|0)>>2]=o;HEAP32[(m+4|0)>>2]=n;HEAP32[(m+8|0)>>2]=0;HEAP32[(m+12|0)>>2]=0;d=39;break;case 35:d=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str122783|0)|0)?36:37;break;case 36:m=0;d=38;break;case 37:_SyntaxErrorMessage(g,q);e=1;d=63;break;case 38:d=39;break;case 39:_GetToken(g,i,j);d=171!=(HEAPU16[(j|0)>>1]&65535|0)?40:43;break;case 40:d=0!=(m|0)?41:42;break;case 41:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|
0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=42;break;case 42:_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str102781|0);_SavePPBuffer(g,HEAP32[(j+8|0)>>2]);_SyntaxErrorMessage(g,q);e=1;d=63;break;case 43:d=0!=(m|0)?44:48;break;case 44:d=0!=(l|0)?45:46;break;
case 45:HEAP32[(m+12|0)>>2]=HEAP32[(k+12|0)>>2];HEAP32[(k+12|0)>>2]=m;d=47;break;case 46:HEAP32[(m+12|0)>>2]=HEAP32[(k+16|0)>>2];HEAP32[(k+16|0)>>2]=m;d=47;break;case 47:d=48;break;case 48:e=0;d=63;break;case 49:d=171==(HEAPU16[(j|0)>>1]&65535|0)?50:51;break;case 50:_SyntaxErrorMessage(g,q);e=1;d=63;break;case 51:d=52;break;case 52:d=171!=(HEAPU16[(j|0)>>1]&65535|0)?53:62;break;case 53:d=(HEAPU16[(j|0)>>1]&65535|0)!=(HEAP32[(p+4|0)>>2]|0)?54:55;break;case 54:_SyntaxErrorMessage(g,q);e=1;d=63;break;
case 55:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?56:57;break;case 56:var t=_genalloc(g,16);d=58;break;case 57:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=58;break;
case 58:m=t;HEAP32[(m|0)>>2]=o;HEAP32[(m+4|0)>>2]=n;HEAP32[(m+8|0)>>2]=HEAP32[(j+4|0)>>2];d=0!=(l|0)?59:60;break;case 59:HEAP32[(m+12|0)>>2]=HEAP32[(k+12|0)>>2];HEAP32[(k+12|0)>>2]=m;d=61;break;case 60:HEAP32[(m+12|0)>>2]=HEAP32[(k+16|0)>>2];HEAP32[(k+16|0)>>2]=m;d=61;break;case 61:_SavePPBuffer(g,STRING_TABLE.__str102781|0);_GetToken(g,i,j);d=52;break;case 62:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str72778|0);e=0;d=63;break;case 63:return e;default:assert(0,"bad label: "+d)}}
_ParseExportSpec.X=1;
function _NotExportedErrorMessage(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;b=f;e=c;g=a;_PrintErrorID(d,STRING_TABLE.__str132784|0,1,1);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str152786|0);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,b);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str162787|0);b=0==(e|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str172788|0);b=8;break;case 4:b=0==(g|0)?5:6;break;case 5:_EnvPrintRouter(d,
STRING_TABLE.__str142785|0,STRING_TABLE.__str182789|0);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,e);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str192790|0);b=7;break;case 6:_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str202791|0);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,e);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,STRING_TABLE.__str102781|0);_EnvPrintRouter(d,STRING_TABLE.__str142785|0,g);b=7;break;case 7:b=8;break;case 8:_EnvPrintRouter(d,STRING_TABLE.__str142785|
0,STRING_TABLE.__str212792|0);return;default:assert(0,"bad label: "+b)}}function _ExtractModuleName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=1>=e>>>0?3:4;break;case 3:b=0;a=5;break;case 4:a=_gm2(d,e);_strncpy(a,g,e-1|0);HEAP8[a+(e-1|0)|0]=0;b=_EnvAddSymbol(d,a);_rm(d,a,e);a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _ExtractConstructName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0==(e|0)?3:4;break;case 3:b=_EnvAddSymbol(d,g);a=7;break;case 4:i=_strlen(g);a=i>>>0<=(e+1|0)>>>0?5:6;break;case 5:b=0;a=7;break;case 6:a=_gm2(d,i-e|0);_strncpy(a,g+(e+1|0)|0,i-e|0);b=_EnvAddSymbol(d,a);_rm(d,a,i-e|0);a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}_ExtractConstructName.X=1;
function _ExtractModuleAndConstructName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=_FindModuleSeparator(d);c=0!=(e|0)?4:3;break;case 3:a=d;c=9;break;case 4:g=_ExtractModuleName(b,e,d);c=0==(g|0)?5:6;break;case 5:a=0;c=9;break;case 6:i=_EnvFindDefmodule(b,HEAP32[(g+16|0)>>2]);c=0==(i|0)?7:8;break;case 7:a=0;c=9;break;case 8:_EnvSetCurrentModule(b,i);c=_ExtractConstructName(b,e,d);a=HEAP32[(c+16|0)>>2];c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
_ExtractModuleAndConstructName.X=1;
function _FindImportedConstruct(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;j=h;k=f;l=c;m=a;n=b;o=d;p=e;HEAP32[n>>2]=0;g=0!=(_FindModuleSeparator(m)|0)?3:4;break;case 3:i=0;g=9;break;case 4:_SaveCurrentModule(j);q=g=_FindModuleItem(j,k);g=0==(g|0)?5:6;break;case 5:_RestoreCurrentModule(j);i=0;g=9;break;case 6:g=0==(HEAP32[(q+24|0)>>2]|0)?7:8;break;case 7:_RestoreCurrentModule(j);i=0;g=9;break;case 8:_MarkModulesAsUnvisited(j);i=j;g=_EnvAddSymbol(j,k);var r=l,s=q,t=_EnvAddSymbol(j,
m);i=_SearchImportedConstructModules(i,g,r,s,t,n,o,p);_RestoreCurrentModule(j);g=9;break;case 9:return i;default:assert(0,"bad label: "+g)}}_FindImportedConstruct.X=1;
function _MarkModulesAsUnvisited(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+16|0)>>2]+20|0)>>2]+20|0)>>2]=0;a=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:HEAP32[(a+20|0)>>2]=0;f=5;break;case 5:a=_EnvGetNextDefmodule(c,a);f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _SearchImportedConstructModules(h,f,c,a,b,d,e,g){var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;w=0;A=_EnvGetCurrentModule(k);i=0!=(HEAP32[(A+20|0)>>2]|0)?3:4;break;case 3:j=0;i=48;break;case 4:i=0!=(q|0)?5:15;break;case 5:i=0==(m|0)?7:6;break;case 6:i=(A|0)==(m|0)?7:15;break;case 7:v=FUNCTION_TABLE[HEAP32[(n+24|0)>>2]](k,HEAP32[(o+16|0)>>2]);i=(r|0)==(A|0)?8:9;break;case 8:w=p;HEAP32[w>>2]=HEAP32[w>>2]+1|0;w=v;i=14;break;case 9:i=0!=
(v|0)?10:13;break;case 10:i=(HEAP32[(HEAP32[(v+8|0)>>2]|0)>>2]|0)==(A|0)?11:12;break;case 11:i=p;HEAP32[i>>2]=HEAP32[i>>2]+1|0;i=12;break;case 12:w=v;i=13;break;case 13:i=14;break;case 14:i=15;break;case 15:HEAP32[(A+20|0)>>2]=1;s=_EnvGetCurrentModule(k);t=HEAP32[(s+12|0)>>2];i=16;break;case 16:i=0!=(t|0)?17:47;break;case 17:x=0;i=0==(HEAP32[(t+4|0)>>2]|0)?19:18;break;case 18:i=(HEAP32[(t+4|0)>>2]|0)==(l|0)?19:23;break;case 19:i=0==(HEAP32[(t+8|0)>>2]|0)?21:20;break;case 20:i=(HEAP32[(t+8|0)>>2]|
0)==(o|0)?21:22;break;case 21:x=1;i=22;break;case 22:i=23;break;case 23:i=0!=(x|0)?24:27;break;case 24:s=_EnvFindDefmodule(k,HEAP32[(HEAP32[(t|0)>>2]+16|0)>>2]);i=0==(s|0)?25:26;break;case 25:x=0;i=26;break;case 26:i=27;break;case 27:i=0!=(x|0)?28:42;break;case 28:y=0;u=HEAP32[(s+16|0)>>2];i=29;break;case 29:if(0!=(u|0))i=30;else{var z=0;i=31}break;case 30:z=0!=(y|0)^1;i=31;break;case 31:i=z?32:39;break;case 32:i=0==(HEAP32[(u+4|0)>>2]|0)?34:33;break;case 33:i=(HEAP32[(u+4|0)>>2]|0)==(l|0)?34:38;
break;case 34:i=0==(HEAP32[(u+8|0)>>2]|0)?36:35;break;case 35:i=(HEAP32[(u+8|0)>>2]|0)==(o|0)?36:37;break;case 36:y=1;i=37;break;case 37:i=38;break;case 38:u=HEAP32[(u+12|0)>>2];i=29;break;case 39:i=0!=(y|0)?41:40;break;case 40:x=0;i=41;break;case 41:i=42;break;case 42:i=0!=(x|0)?43:46;break;case 43:_EnvSetCurrentModule(k,s);v=i=_SearchImportedConstructModules(k,l,m,n,o,p,1,r);i=0!=(i|0)?44:45;break;case 44:w=v;i=45;break;case 45:i=46;break;case 46:t=HEAP32[(t+12|0)>>2];i=16;break;case 47:j=w;i=48;
break;case 48:return j;default:assert(0,"bad label: "+i)}}_SearchImportedConstructModules.X=1;function _AmbiguousReferenceErrorMessage(h,f,c){_EnvPrintRouter(h,STRING_TABLE.__str2805|0,STRING_TABLE.__str12806|0);_EnvPrintRouter(h,STRING_TABLE.__str2805|0,f);_EnvPrintRouter(h,STRING_TABLE.__str2805|0,STRING_TABLE.__str22807|0);_EnvPrintRouter(h,STRING_TABLE.__str2805|0,c);_EnvPrintRouter(h,STRING_TABLE.__str2805|0,STRING_TABLE.__str32808|0)}
function _ListItemsDriver(h,f,c,a,b,d,e,g,i){var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w,x;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;s=i;w=v=0;_SaveCurrentModule(k);j=0==(m|0)?3:4;break;case 3:m=_EnvGetNextDefmodule(k,0);w=1;j=4;break;case 4:j=5;break;case 5:j=0!=(m|0)?6:34;break;case 6:j=0!=(w|0)?7:8;break;case 7:j=k;var y=l,A=_EnvGetDefmoduleName(k,m);_EnvPrintRouter(j,y,A);_EnvPrintRouter(k,l,STRING_TABLE.__str42809|0);j=8;break;case 8:_EnvSetCurrentModule(k,m);t=FUNCTION_TABLE[p](k,0);
j=9;break;case 9:j=0!=(t|0)?10:30;break;case 10:j=1==(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?11:12;break;case 11:j=37;break;case 12:j=0==(s|0)?13:14;break;case 13:x=1;j=15;break;case 14:x=FUNCTION_TABLE[s](k,t);j=15;break;case 15:j=0!=(x|0)?17:16;break;case 16:j=29;break;case 17:j=0!=(q|0)?18:23;break;case 18:u=FUNCTION_TABLE[q](t);j=0!=(u|0)?19:22;break;case 19:j=0!=(w|0)?20:21;break;case 20:_EnvPrintRouter(k,l,STRING_TABLE.__str52810|0);j=21;break;case 21:_EnvPrintRouter(k,l,
u);_EnvPrintRouter(k,l,STRING_TABLE.__str62811|0);j=22;break;case 22:j=28;break;case 23:j=0!=(r|0)?24:27;break;case 24:j=0!=(w|0)?25:26;break;case 25:_EnvPrintRouter(k,l,STRING_TABLE.__str52810|0);j=26;break;case 26:FUNCTION_TABLE[r](k,l,t);_EnvPrintRouter(k,l,STRING_TABLE.__str62811|0);j=27;break;case 27:j=28;break;case 28:j=29;break;case 29:t=FUNCTION_TABLE[p](k,t);v=v+1|0;j=9;break;case 30:j=0!=(w|0)?31:32;break;case 31:m=_EnvGetNextDefmodule(k,m);j=33;break;case 32:m=0;j=33;break;case 33:j=5;
break;case 34:j=0!=(n|0)?35:36;break;case 35:_PrintTally(k,l,v,n,o);j=36;break;case 36:_RestoreCurrentModule(k);j=37;break;case 37:return;default:assert(0,"bad label: "+j)}}_ListItemsDriver.X=1;
function _DoForAllModules(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;l=0;_SaveCurrentModule(e);k=_EnvGetNextDefmodule(e,0);b=3;break;case 3:b=0!=(k|0)?4:9;break;case 4:_EnvSetCurrentModule(e,k);b=0!=(i|0)?5:7;break;case 5:b=0!=(_GetHaltExecution(e)|0)?6:7;break;case 6:_RestoreCurrentModule(e);d=-1;b=10;break;case 7:FUNCTION_TABLE[g](k,j);b=8;break;case 8:k=_EnvGetNextDefmodule(e,k);l=l+1|0;b=3;break;case 9:_RestoreCurrentModule(e);d=l;b=10;break;case 10:return d;default:assert(0,
"bad label: "+b)}}_DoForAllModules.X=1;function _EnvGetDefmessageHandlerName(h,f,c){return HEAP32[(HEAP32[((HEAP32[(f+96|0)>>2]+40*(c-1|0)|0)+8|0)>>2]+16|0)>>2]}function _EnvGetDefmessageHandlerType(h,f,c){return HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)+((HEAPU32[(HEAP32[(f+96|0)>>2]+40*(c-1|0)|0)>>2]>>>1&3)<<2)|0)>>2]}
function _EnvGetNextDefmessageHandler(h,f,c){for(h=2;;)switch(h){case 2:var a,b,d;b=f;d=c;h=0==(d|0)?3:4;break;case 3:a=0!=(HEAP32[(b+96|0)>>2]|0)?1:0;h=7;break;case 4:h=(d|0)==(HEAP32[(b+104|0)>>2]|0)?5:6;break;case 5:a=0;h=7;break;case 6:a=d+1|0;h=7;break;case 7:return a;default:assert(0,"bad label: "+h)}}function _GetDefmessageHandlerPointer(h,f){return HEAP32[(h+96|0)>>2]+40*(f-1|0)|0}function _EnvGetDefmessageHandlerWatch(h,f,c){return HEAPU32[(HEAP32[(f+96|0)>>2]+40*(c-1|0)|0)>>2]>>>4&1}
function _EnvSetDefmessageHandlerWatch(h,f,c,a){h=HEAP32[(c+96|0)>>2]+40*(a-1|0)|0;HEAP32[h>>2]=HEAP32[h>>2]&-17|(f&1)<<4}
function _SetupMessageHandlers(h){var f=STACKTOP;STACKTOP+=112;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+56;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var a=_SetupMessageHandlers_handlerGetInfo>>2,b=f>>2,d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=_SetupMessageHandlers_handlerPutInfo>>2;b=c>>2;for(d=a+14;a<d;a++,
b++)HEAP32[b]=HEAP32[a];_AllocateEnvironmentData(h,32,168,0);b=HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=f>>2;b>>=2;for(d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];b=HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+56|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");a=c>>2;b>>=2;for(d=a+14;a<d;a++,b++)HEAP32[b]=HEAP32[a];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)>>2]=STRING_TABLE.__str22831|
0;HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)+4|0)>>2]=STRING_TABLE.__str32832|0;HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)+8|0)>>2]=STRING_TABLE.__str42833|0;HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)+12|0)>>2]=STRING_TABLE.__str52834|0;_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]|0,83);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+56|0,84);c=_EnvAddSymbol(h,STRING_TABLE.__str62835|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+112|
0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+112|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=_EnvAddSymbol(h,STRING_TABLE.__str72836|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+116|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+116|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=_EnvAddSymbol(h,STRING_TABLE.__str82837|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+120|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+120|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;
_EnvAddClearFunction(h,STRING_TABLE.__str92838|0,1142,-100);c=_EnvAddSymbol(h,STRING_TABLE.__str102839|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+148|0)>>2]=c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+148|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;_AddConstruct(h,STRING_TABLE.__str112840|0,STRING_TABLE.__str122841|0,1144,0,0,0,0,0,0,0,0,0);_EnvDefineFunction2(h,STRING_TABLE.__str132842|0,118,1146,STRING_TABLE.__str142843|0,STRING_TABLE.__str152844|0);_EnvDefineFunction2(h,STRING_TABLE.__str162845|
0,117,1148,STRING_TABLE.__str172846|0,STRING_TABLE.__str182847|0);_EnvDefineFunction2(h,STRING_TABLE.__str192848|0,118,1150,STRING_TABLE.__str202849|0,STRING_TABLE.__str212850|0);_EnvDefineFunction2(h,STRING_TABLE.__str222851|0,118,1152,STRING_TABLE.__str232852|0,STRING_TABLE.__str152844|0);_EnvDefineFunction2(h,STRING_TABLE.__str242853|0,118,1154,STRING_TABLE.__str252854|0,STRING_TABLE.__str262855|0);_EnvDefineFunction2(h,STRING_TABLE.__str272856|0,98,1156,STRING_TABLE.__str282857|0,STRING_TABLE.__str292858|
0);_FuncSeqOvlFlags(h,STRING_TABLE.__str272856|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str302859|0,117,1158,STRING_TABLE.__str312860|0,STRING_TABLE.__str292858|0);_FuncSeqOvlFlags(h,STRING_TABLE.__str302859|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str322861|0,117,1158,STRING_TABLE.__str312860|0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str322861|0,1,0);_EnvDefineFunction2(h,STRING_TABLE.__str332862|0,117,1160,STRING_TABLE.__str342863|0,STRING_TABLE.__str352864|0);_EnvDefineFunction2(h,STRING_TABLE.__str362865|
0,117,1162,STRING_TABLE.__str372866|0,STRING_TABLE.__str382867|0);_EnvDefineFunction2(h,STRING_TABLE.__str392868|0,117,1160,STRING_TABLE.__str342863|0,STRING_TABLE.__str352864|0);_EnvDefineFunction2(h,STRING_TABLE.__str402869|0,117,1162,STRING_TABLE.__str372866|0,STRING_TABLE.__str382867|0);_AddWatchItem(h,STRING_TABLE.__str412870|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+128|0,36,0,0);_AddWatchItem(h,STRING_TABLE.__str422871|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+124|0,35,1164,1166);STACKTOP=
f}_SetupMessageHandlers.X=1;
function _CreateSystemHandlers(h){_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str62835|0,STRING_TABLE.__str672896|0,0);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str72836|0,STRING_TABLE.__str682897|0,0);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str82837|0,STRING_TABLE.__str692898|0,0);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str702899|0,STRING_TABLE.__str712900|0,0);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str722901|
0,STRING_TABLE.__str732902|0,1);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str742903|0,STRING_TABLE.__str752904|0,1);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str762905|0,STRING_TABLE.__str772906|0,2);_NewSystemHandler(h,STRING_TABLE.__str662895|0,STRING_TABLE.__str782907|0,STRING_TABLE.__str792908|0,2)}
function _UndefmessageHandlerCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;a=h;c=0!=(_Bloaded(a)|0)?3:4;break;case 3:_PrintErrorID(a,STRING_TABLE.__str442873|0,3,0);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,STRING_TABLE.__str462875|0);c=20;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str132842|0,1,2,e)|0)?5:6;break;case 5:c=20;break;case 6:g=_LookupDefclassByMdlOrScope(a,
HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);c=0==(g|0)?7:8;break;case 7:c=0!=(_strcmp(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],STRING_TABLE.__str472876|0)|0)?9:10;break;case 8:c=10;break;case 9:_ClassExistError(a,STRING_TABLE.__str132842|0,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);c=20;break;case 10:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str132842|0,2,2,e)|0)?11:12;break;case 11:c=20;break;case 12:b=HEAP32[(e+8|0)>>2];c=3==(_EnvRtnArgCount(a)|0)?13:18;break;case 13:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str132842|
0,3,2,e)|0)?14:15;break;case 14:c=20;break;case 15:d=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];c=0==(_strcmp(d,STRING_TABLE.__str472876|0)|0)?16:17;break;case 16:d=0;c=17;break;case 17:c=19;break;case 18:d=HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+132|0)+8|0)>>2];c=19;break;case 19:_WildDeleteHandler(a,g,b,d);c=20;break;case 20:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_UndefmessageHandlerCommand.X=1;
function _PreviewSendCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;a=h;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str192848|0,1,2,d)|0)?3:4;break;case 3:c=9;break;case 4:b=_LookupDefclassByMdlOrScope(a,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=0==(b|0)?5:6;break;case 5:_ClassExistError(a,STRING_TABLE.__str192848|0,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=9;break;case 6:c=0==(_EnvArgTypeCheck(a,
STRING_TABLE.__str192848|0,2,2,d)|0)?7:8;break;case 7:c=9;break;case 8:_EnvPreviewSend(a,STRING_TABLE.__str532882|0,b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _PPDefmessageHandlerCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e,g,i,j,k;a=h;i=0;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str222851|0,1,2,b)|0)?3:4;break;case 3:c=22;break;case 4:d=_FindSymbolHN(a,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str222851|0,2,2,b)|0)?5:6;break;case 5:c=22;break;case 6:e=_FindSymbolHN(a,HEAP32[(HEAP32[(b+
8|0)>>2]+16|0)>>2]);c=3==(_EnvRtnArgCount(a)|0)?7:10;break;case 7:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str222851|0,3,2,b)|0)?8:9;break;case 8:c=22;break;case 9:g=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];c=11;break;case 10:g=HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+132|0)+8|0)>>2];c=11;break;case 11:j=_HandlerType(a,STRING_TABLE.__str222851|0,g);c=4==(j|0)?12:13;break;case 12:_SetEvaluationError(a,1);c=22;break;case 13:c=0!=(d|0)?14:15;break;case 14:i=_LookupDefclassByMdlOrScope(a,HEAP32[(d+
16|0)>>2]);c=15;break;case 15:c=0==(i|0)?17:16;break;case 16:c=0==(e|0)?17:18;break;case 17:c=19;break;case 18:k=c=_FindHandlerByAddress(i,e,j);c=0==(c|0)?19:20;break;case 19:_PrintErrorID(a,STRING_TABLE.__str442873|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,STRING_TABLE.__str492878|0);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,HEAP32[(e+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,STRING_TABLE.__str502879|0);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,g);_EnvPrintRouter(a,
STRING_TABLE.__str452874|0,STRING_TABLE.__str512880|0);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,HEAP32[(d+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str452874|0,STRING_TABLE.__str522881|0);_SetEvaluationError(a,1);c=22;break;case 20:c=0!=(HEAP32[(k+32|0)>>2]|0)?21:22;break;case 21:_PrintInChunks(a,STRING_TABLE.__str532882|0,HEAP32[(k+32|0)>>2]);c=22;break;case 22:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PPDefmessageHandlerCommand.X=1;
function _ListDefmessageHandlersCommand(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d;a=h;c=0==(_EnvRtnArgCount(a)|0)?3:4;break;case 3:_EnvListDefmessageHandlers(a,STRING_TABLE.__str532882|0,0,0);c=7;break;case 4:d=_ClassInfoFnxArgs(a,STRING_TABLE.__str242853|0,b);c=0==(d|0)?5:6;break;case 5:c=7;break;case 6:_EnvListDefmessageHandlers(a,STRING_TABLE.__str532882|0,d,HEAP32[b>>2]);c=
7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}function _DefmessageHandlerWatchAccess(h,f,c,a){return _DefmessageHandlerWatchSupport(h,0!=(c|0)?STRING_TABLE.__str642893|0:STRING_TABLE.__str652894|0,0,c,0,1168,a)}function _DefmessageHandlerWatchPrint(h,f,c,a){return _DefmessageHandlerWatchSupport(h,STRING_TABLE.__str552884|0,f,-1,1170,0,a)}
function _EnvFindDefmessageHandler(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=_HandlerType(e,STRING_TABLE.__str432872|0,a);b=4==(j|0)?3:4;break;case 3:d=0;b=7;break;case 4:k=_FindSymbolHN(e,i);b=0==(k|0)?5:6;break;case 5:d=0;b=7;break;case 6:b=g;b=_FindHandlerByIndex(b,k,j);d=b+1|0;b=7;break;case 7:return d;default:assert(0,"bad label: "+b)}}
function _EnvIsDefmessageHandlerDeletable(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;a=h;d=f;e=c;a=0!=(_ConstructsDeletable(a)|0)?4:3;break;case 3:b=0;a=7;break;case 4:g=d;a=1==(HEAP32[(HEAP32[(g+96|0)>>2]+40*(e-1|0)|0)>>2]&1|0)?5:6;break;case 5:b=0;a=7;break;case 6:b=0==(_HandlersExecuting(g)|0)?1:0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}function _EnvGetDefmessageHandlerPPForm(h,f,c){return HEAP32[((HEAP32[(f+96|0)>>2]+40*(c-1|0)|0)+32|0)>>2]}
function _WildDeleteHandler(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0==(i|0)?3:4;break;case 3:i=_EnvAddSymbol(e,STRING_TABLE.__str472876|0);b=4;break;case 4:b=0!=(j|0)?5:8;break;case 5:k=_HandlerType(e,STRING_TABLE.__str132842|0,j);b=4==(k|0)?6:7;break;case 6:d=0;b=18;break;case 7:b=9;break;case 8:k=-1;b=9;break;case 9:b=0==(g|0)?10:17;break;case 10:l=1;g=_EnvGetNextDefclass(e,0);b=11;break;case 11:b=0!=(g|0)?12:16;break;case 12:b=0==(_DeleteHandler(e,g,i,k,0)|
0)?13:14;break;case 13:l=0;b=14;break;case 14:b=15;break;case 15:g=_EnvGetNextDefclass(e,g);b=11;break;case 16:d=l;b=18;break;case 17:d=_DeleteHandler(e,g,i,k,1);b=18;break;case 18:return d;default:assert(0,"bad label: "+b)}}_WildDeleteHandler.X=1;
function _EnvUndefmessageHandler(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0!=(_Bloaded(d)|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str442873|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str452874|0,STRING_TABLE.__str462875|0);b=0;a=13;break;case 4:a=0==(e|0)?5:8;break;case 5:a=0!=(g|0)?6:7;break;case 6:_PrintErrorID(d,STRING_TABLE.__str442873|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str452874|0,STRING_TABLE.__str482877|0);b=0;a=13;break;case 7:b=_WildDeleteHandler(d,
0,0,0);a=13;break;case 8:a=0==(g|0)?9:10;break;case 9:b=_WildDeleteHandler(d,e,0,0);a=13;break;case 10:i=e;a=0!=(_HandlersExecuting(i)|0)?11:12;break;case 11:a=d;b=_GetConstructNameString(i);_HandlerDeleteError(a,b);b=0;a=13;break;case 12:a=HEAP32[(i+96|0)>>2]+40*(g-1|0)|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|8;_DeallocateMarkedHandlers(d,i);b=1;a=13;break;case 13:return b;default:assert(0,"bad label: "+a)}}_EnvUndefmessageHandler.X=1;
function _EnvListDefmessageHandlers(h,f,c,a){var b=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m=b+4;e=h;g=f;i=c;j=a;d=0!=(i|0)?3:7;break;case 3:HEAP32[k>>2]=i;d=0!=(j|0)?4:5;break;case 4:l=_DisplayHandlersInLinks(e,g,HEAP32[k>>2]+52|0,0);d=6;break;case 5:HEAP16[(m|0)>>1]=1;HEAP32[(m+4|0)>>2]=k;l=_DisplayHandlersInLinks(e,g,m,0);d=6;break;case 6:d=12;break;case 7:HEAP16[(m|0)>>1]=
1;l=0;d=_EnvGetNextDefclass(e,0);HEAP32[k>>2]=d;d=8;break;case 8:d=0!=(HEAP32[k>>2]|0)?9:11;break;case 9:HEAP32[(m+4|0)>>2]=k;d=_DisplayHandlersInLinks(e,g,m,0);l=l+d|0;d=10;break;case 10:d=_EnvGetNextDefclass(e,HEAP32[k>>2]);HEAP32[k>>2]=d;d=8;break;case 11:d=12;break;case 12:_PrintTally(e,g,l,STRING_TABLE.__str542883|0,STRING_TABLE.__str422871|0);STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvListDefmessageHandlers.X=1;
function _EnvPreviewSend(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;j=_FindSymbolHN(d,a);b=0==(j|0)?3:4;break;case 3:b=6;break;case 4:i=_FindPreviewApplicableHandlers(d,g,j);b=0!=(i|0)?5:6;break;case 5:_DisplayCore(d,e,i,0);_DestroyHandlerLinks(d,i);b=6;break;case 6:return;default:assert(0,"bad label: "+b)}}
function _DisplayHandlersInLinks(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;k=HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]+(i<<2)|0)>>2]+104|0)>>2];b=(i|0)<((HEAPU16[(g|0)>>1]&65535)-1|0)?3:4;break;case 3:b=_DisplayHandlersInLinks(d,e,g,i+1|0);k=k+b|0;b=4;break;case 4:j=0;b=5;break;case 5:b=j>>>0<HEAPU32[(HEAP32[(HEAP32[(g+4|0)>>2]+(i<<2)|0)>>2]+104|0)>>2]>>>0?6:8;break;case 6:_PrintHandler(d,e,HEAP32[(HEAP32[(HEAP32[(g+4|0)>>2]+(i<<2)|0)>>2]+96|0)>>2]+40*j|0,1);b=7;break;case 7:j=
j+1|0;b=5;break;case 8:return k;default:assert(0,"bad label: "+b)}}_DisplayHandlersInLinks.X=1;
function _DefmessageHandlerWatchSupport(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u,v,w=g;k=h;l=f;m=c;n=a;o=b;p=d;q=e;v=2;i=0==(q|0)?3:14;break;case 3:_SaveCurrentModule(k);r=_EnvGetNextDefmodule(k,0);i=4;break;case 4:i=0!=(r|0)?5:13;break;case 5:_EnvSetCurrentModule(k,r);i=0==(p|0)?6:7;break;case 6:i=k;var x=m,y=_EnvGetDefmoduleName(k,r);_EnvPrintRouter(i,
x,y);_EnvPrintRouter(k,m,STRING_TABLE.__str582887|0);i=7;break;case 7:s=_EnvGetNextDefclass(k,0);i=8;break;case 8:i=0!=(s|0)?9:12;break;case 9:i=0==(_WatchClassHandlers(k,s,0,-1,m,n,1,o,p)|0)?10:11;break;case 10:j=0;i=42;break;case 11:s=_EnvGetNextDefclass(k,s);i=8;break;case 12:r=_EnvGetNextDefmodule(k,r);i=4;break;case 13:_RestoreCurrentModule(k);j=1;i=42;break;case 14:i=15;break;case 15:i=0!=(q|0)?16:41;break;case 16:i=0!=(_EvaluateExpression(k,q,w)|0)?17:18;break;case 17:j=0;i=42;break;case 18:i=
2!=(HEAPU16[(w+4|0)>>1]&65535|0)?19:20;break;case 19:_ExpectedTypeError1(k,l,v,STRING_TABLE.__str592888|0);j=0;i=42;break;case 20:s=_LookupDefclassByMdlOrScope(k,HEAP32[(HEAP32[(w+8|0)>>2]+16|0)>>2]);i=0==(s|0)?21:22;break;case 21:_ExpectedTypeError1(k,l,v,STRING_TABLE.__str592888|0);j=0;i=42;break;case 22:i=0!=(HEAP32[(q+12|0)>>2]|0)?23:37;break;case 23:q=HEAP32[(q+12|0)>>2];v=v+1|0;i=0!=(_EvaluateExpression(k,q,w)|0)?24:25;break;case 24:j=0;i=42;break;case 25:i=2!=(HEAPU16[(w+4|0)>>1]&65535|0)?
26:27;break;case 26:_ExpectedTypeError1(k,l,v,STRING_TABLE.__str602889|0);j=0;i=42;break;case 27:t=HEAP32[(HEAP32[(w+8|0)>>2]+16|0)>>2];i=0!=(HEAP32[(q+12|0)>>2]|0)?28:35;break;case 28:q=HEAP32[(q+12|0)>>2];v=v+1|0;i=0!=(_EvaluateExpression(k,q,w)|0)?29:30;break;case 29:j=0;i=42;break;case 30:i=2!=(HEAPU16[(w+4|0)>>1]&65535|0)?31:32;break;case 31:_ExpectedTypeError1(k,l,v,STRING_TABLE.__str612890|0);j=0;i=42;break;case 32:u=i=_HandlerType(k,l,HEAP32[(HEAP32[(w+8|0)>>2]+16|0)>>2]);i=4==(i|0)?33:34;
break;case 33:j=0;i=42;break;case 34:i=36;break;case 35:u=-1;i=36;break;case 36:i=38;break;case 37:t=0;u=-1;i=38;break;case 38:i=0==(_WatchClassHandlers(k,s,t,u,m,n,0,o,p)|0)?39:40;break;case 39:_ExpectedTypeError1(k,l,v,STRING_TABLE.__str622891|0);j=0;i=42;break;case 40:v=v+1|0;q=HEAP32[(q+12|0)>>2];i=15;break;case 41:j=1;i=42;break;case 42:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_DefmessageHandlerWatchSupport.X=1;
function _PrintHandlerWatchFlag(h,f,c,a){var b=_GetConstructNameString(c);_EnvPrintRouter(h,f,b);_EnvPrintRouter(h,f,STRING_TABLE.__str502879|0);b=_EnvGetDefmessageHandlerName(h,c,a);_EnvPrintRouter(h,f,b);_EnvPrintRouter(h,f,STRING_TABLE.__str502879|0);b=_EnvGetDefmessageHandlerType(h,c,a);_EnvPrintRouter(h,f,b);c=0!=(_EnvGetDefmessageHandlerWatch(h,c,a)|0)?STRING_TABLE.__str562885|0:STRING_TABLE.__str572886|0;_EnvPrintRouter(h,f,c)}
function _WatchClassHandlers(h,f,c,a,b,d,e,g,i){var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;t=i;v=0;u=_EnvGetNextDefmessageHandler(l,m,0);j=3;break;case 3:j=0!=(u|0)?4:18;break;case 4:j=-1==(o|0)?5:6;break;case 5:j=7;break;case 6:j=(o|0)==(HEAPU32[(HEAP32[(m+96|0)>>2]+40*(u-1|0)|0)>>2]>>>1&3|0)?7:17;break;case 7:j=0==(n|0)?8:9;break;case 8:j=10;break;case 9:j=n;var w=_EnvGetDefmessageHandlerName(l,m,u);j=0==(_strcmp(j,w)|0)?10:16;break;case 10:j=0!=
(t|0)?11:12;break;case 11:FUNCTION_TABLE[t](l,q,m,u);j=15;break;case 12:j=0!=(r|0)?13:14;break;case 13:_EnvPrintRouter(l,p,STRING_TABLE.__str632892|0);j=14;break;case 14:FUNCTION_TABLE[s](l,p,m,u);j=15;break;case 15:v=1;j=16;break;case 16:j=17;break;case 17:u=_EnvGetNextDefmessageHandler(l,m,u);j=3;break;case 18:j=0!=(n|0)?19:22;break;case 19:j=-1!=(o|0)?20:22;break;case 20:j=0==(v|0)?21:22;break;case 21:k=0;j=23;break;case 22:k=1;j=23;break;case 23:return k;default:assert(0,"bad label: "+j)}}
_WatchClassHandlers.X=1;function _UnboundHandlerErr(h){_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str12918|0);_PrintHandler(h,STRING_TABLE.__str2917|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2],1)}
function _HandlersExecuting(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=0;f=3;break;case 3:f=b>>>0<HEAPU32[(a+104|0)>>2]>>>0?4:8;break;case 4:f=0<HEAPU32[((HEAP32[(a+96|0)>>2]+40*b|0)+4|0)>>2]>>>0?5:6;break;case 5:c=1;f=9;break;case 6:f=7;break;case 7:b=b+1|0;f=3;break;case 8:c=0;f=9;break;case 9:return c;default:assert(0,"bad label: "+f)}}
function _PrintHandler(h,f,c,a){_EnvPrintRouter(h,f,HEAP32[(HEAP32[(c+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,f,STRING_TABLE.__str62923|0);_EnvPrintRouter(h,f,HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+132|0)+((HEAPU32[c>>2]>>>1&3)<<2)|0)>>2]);_EnvPrintRouter(h,f,STRING_TABLE.__str72924|0);_PrintClassName(h,f,HEAP32[(c+12|0)>>2],a)}
function _PrintNoHandlerError(h,f){_PrintErrorID(h,STRING_TABLE.__str22919|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str32920|0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,f);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str42921|0)}
function _CheckHandlerArgCount(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2];f=-1==(HEAP32[(b+20|0)>>2]|0)?3:4;break;case 3:f=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)<(HEAP32[(b+16|0)>>2]|0)?5:6;break;case 4:f=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)!=(HEAP32[(b+16|0)>>2]|0)?5:6;break;case 5:_SetEvaluationError(a,1);_PrintErrorID(a,STRING_TABLE.__str22919|0,2,0);_EnvPrintRouter(a,STRING_TABLE.__str2917|
0,STRING_TABLE.__str52922|0);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,STRING_TABLE.__str62923|0);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+132|0)+((HEAPU32[b>>2]>>>1&3)<<2)|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,STRING_TABLE.__str72924|0);f=a;c=_GetConstructNameString(HEAP32[(b+12|0)>>2]);_EnvPrintRouter(f,STRING_TABLE.__str2917|0,c);_EnvPrintRouter(a,STRING_TABLE.__str2917|
0,STRING_TABLE.__str82925|0);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,-1==(HEAP32[(b+20|0)>>2]|0)?STRING_TABLE.__str92926|0:STRING_TABLE.__str102927|0);_PrintLongInteger(a,STRING_TABLE.__str2917|0,HEAP32[(b+16|0)>>2]-1|0);_EnvPrintRouter(a,STRING_TABLE.__str2917|0,STRING_TABLE.__str112928|0);c=0;f=7;break;case 6:c=1;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}_CheckHandlerArgCount.X=1;
function _SlotAccessViolationError(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;b=f;e=c;g=a;_PrintErrorID(d,STRING_TABLE.__str22919|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,b);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,STRING_TABLE.__str122929|0);b=0!=(e|0)?3:4;break;case 3:_PrintInstanceNameAndClass(d,STRING_TABLE.__str2917|0,g,0);b=5;break;case 4:_EnvPrintRouter(d,STRING_TABLE.__str2917|0,STRING_TABLE.__str132930|0);_PrintClassName(d,STRING_TABLE.__str2917|0,g,0);b=5;break;case 5:_EnvPrintRouter(d,
STRING_TABLE.__str2917|0,STRING_TABLE.__str142931|0);return;default:assert(0,"bad label: "+b)}}
function _SlotVisibilityViolationError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str22919|0,6,0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str152932|0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,HEAP32[(HEAP32[(HEAP32[(f+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str162933|0);_PrintClassName(h,STRING_TABLE.__str2917|0,HEAP32[(f+4|0)>>2],0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str172934|0);_PrintClassName(h,STRING_TABLE.__str2917|
0,c,1)}
function _NewSystemHandler(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j;e=h;g=f;i=c;j=a;d=b;var k=_LookupDefclassInScope(e,g);g=e;i=_EnvAddSymbol(e,i);i=_InsertHandlerHeader(g,k,i,2);g=HEAP32[(i+8|0)>>2]+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=i;HEAP32[g>>2]=HEAP32[g>>2]&-2|1;d=d+1|0;HEAP32[(i+20|0)>>2]=d;HEAP32[(i+16|0)>>2]=d;HEAP32[(i+24|0)>>2]=0;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(e,16);d=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(e+16|
0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=5;break;case 5:HEAP32[(i+28|0)>>2]=l;HEAP32[(HEAP32[(i+28|0)>>2]+8|0)>>2]=0;HEAP16[(HEAP32[(i+28|0)>>2]|0)>>1]=30;h=_FindFunction(e,j);HEAP32[(HEAP32[(i+28|0)>>2]+4|0)>>2]=h;HEAP32[(HEAP32[(i+
28|0)>>2]+12|0)>>2]=0;return;default:assert(0,"bad label: "+d)}}_NewSystemHandler.X=1;
function _InsertHandlerHeader(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p;d=h;e=f;g=c;i=a;p=-1;k=HEAP32[(e+96|0)>>2];m=HEAP32[(e+100|0)>>2];j=_gm2(d,40*(HEAP32[(e+104|0)>>2]+1|0)|0);l=_gm2(d,(HEAP32[(e+104|0)>>2]+1|0)<<2|0);n=j;o=k;b=40*HEAP32[(e+104|0)>>2]|0;assert(0===b%1,"memcpy given "+b+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(n,o,b,1);o=n=0;b=3;break;case 3:b=n>>>0<HEAPU32[(e+104|0)>>2]>>>0?4:12;break;case 4:b=-1==(p|0)?5:10;break;case 5:b=
(HEAPU32[(HEAP32[((k+40*HEAP32[(m+(n<<2)|0)>>2]|0)+8|0)>>2]+12|0)>>2]>>>3&536870911|0)>(HEAPU32[(g+12|0)>>2]>>>3&536870911|0)?6:7;break;case 6:b=8;break;case 7:b=(HEAP32[((k+40*HEAP32[(m+(n<<2)|0)>>2]|0)+8|0)>>2]|0)==(g|0)?8:9;break;case 8:p=n;o=o+1|0;b=9;break;case 9:b=10;break;case 10:HEAP32[(l+(o<<2)|0)>>2]=HEAP32[(m+(n<<2)|0)>>2];b=11;break;case 11:n=n+1|0;o=o+1|0;b=3;break;case 12:b=-1==(p|0)?13:14;break;case 13:p=HEAP32[(e+104|0)>>2];b=14;break;case 14:HEAP32[(l+(p<<2)|0)>>2]=HEAP32[(e+104|
0)>>2];b=j+40*HEAP32[(e+104|0)>>2]|0;HEAP32[b>>2]&=-2;b=j+40*HEAP32[(e+104|0)>>2]|0;HEAP32[b>>2]=HEAP32[b>>2]&-7|(i&3)<<1;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+4|0)>>2]=0;b=j+40*HEAP32[(e+104|0)>>2]|0;HEAP32[b>>2]&=-9;b=j+40*HEAP32[(e+104|0)>>2]|0;HEAP32[b>>2]=HEAP32[b>>2]&-17|(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+124|0)>>2]&1)<<4;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+8|0)>>2]=g;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+12|0)>>2]=e;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+16|0)>>2]=0;HEAP32[((j+
40*HEAP32[(e+104|0)>>2]|0)+20|0)>>2]=0;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+24|0)>>2]=0;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+28|0)>>2]=0;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+32|0)>>2]=0;HEAP32[((j+40*HEAP32[(e+104|0)>>2]|0)+36|0)>>2]=0;b=0!=(HEAP32[(e+104|0)>>2]|0)?15:16;break;case 15:_rm(d,k,40*HEAP32[(e+104|0)>>2]|0);_rm(d,m,HEAP32[(e+104|0)>>2]<<2|0);b=16;break;case 16:return HEAP32[(e+96|0)>>2]=j,HEAP32[(e+100|0)>>2]=l,h=e+104|0,HEAP32[h>>2]=HEAP32[h>>2]+1|0,j+40*(HEAP32[(e+104|0)>>2]-1|0)|
0;default:assert(0,"bad label: "+b)}}_InsertHandlerHeader.X=1;
function _DeleteHandler(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p;g=h;i=f;j=c;k=a;l=b;p=1;d=0==(HEAP32[(i+104|0)>>2]|0)?3:6;break;case 3:d=0!=(l|0)?4:5;break;case 4:e=g;d=_GetConstructNameString(i);_HandlerDeleteError(e,d);e=0;d=51;break;case 5:e=1;d=51;break;case 6:d=0!=(_HandlersExecuting(i)|0)?7:8;break;case 7:e=g;d=_GetConstructNameString(i);_HandlerDeleteError(e,d);e=0;d=51;break;case 8:d=-1==(k|0)?9:29;break;case 9:m=o=0;d=10;break;case 10:d=3>=m>>>0?11:18;break;case 11:n=
_FindHandlerByAddress(i,j,m);d=0!=(n|0)?12:16;break;case 12:o=1;d=0==(HEAP32[n>>2]&1|0)?13:14;break;case 13:d=n;HEAP32[d>>2]=HEAP32[d>>2]&-9|8;d=15;break;case 14:_PrintErrorID(g,STRING_TABLE.__str182935|0,3,0);_EnvPrintRouter(g,STRING_TABLE.__str2917|0,STRING_TABLE.__str192936|0);p=0;d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:m=m+1|0;d=10;break;case 18:d=0==(o|0)?19:20;break;case 19:d=0==(_strcmp(HEAP32[(j+16|0)>>2],STRING_TABLE.__str202937|0)|0)?21:28;break;case 20:d=28;break;case 21:m=
0;d=22;break;case 22:d=m>>>0<HEAPU32[(i+104|0)>>2]>>>0?23:27;break;case 23:d=0==(HEAP32[(HEAP32[(i+96|0)>>2]+40*m|0)>>2]&1|0)?24:25;break;case 24:d=HEAP32[(i+96|0)>>2]+40*m|0;HEAP32[d>>2]=HEAP32[d>>2]&-9|8;d=25;break;case 25:d=26;break;case 26:m=m+1|0;d=22;break;case 27:d=28;break;case 28:d=50;break;case 29:n=_FindHandlerByAddress(i,j,k);d=0==(n|0)?30:43;break;case 30:d=0==(_strcmp(HEAP32[(j+16|0)>>2],STRING_TABLE.__str202937|0)|0)?31:39;break;case 31:m=0;d=32;break;case 32:d=m>>>0<HEAPU32[(i+104|
0)>>2]>>>0?33:38;break;case 33:d=(HEAPU32[(HEAP32[(i+96|0)>>2]+40*m|0)>>2]>>>1&3|0)==(k|0)?34:36;break;case 34:d=0==(HEAP32[(HEAP32[(i+96|0)>>2]+40*m|0)>>2]&1|0)?35:36;break;case 35:d=HEAP32[(i+96|0)>>2]+40*m|0;HEAP32[d>>2]=HEAP32[d>>2]&-9|8;d=36;break;case 36:d=37;break;case 37:m=m+1|0;d=32;break;case 38:d=42;break;case 39:d=0!=(l|0)?40:41;break;case 40:d=g;var q=_GetConstructNameString(i);_HandlerDeleteError(d,q);d=41;break;case 41:p=0;d=42;break;case 42:d=49;break;case 43:d=0==(HEAP32[n>>2]&1|
0)?44:45;break;case 44:d=n;HEAP32[d>>2]=HEAP32[d>>2]&-9|8;d=48;break;case 45:d=0!=(l|0)?46:47;break;case 46:_PrintErrorID(g,STRING_TABLE.__str182935|0,3,0);_EnvPrintRouter(g,STRING_TABLE.__str2917|0,STRING_TABLE.__str192936|0);d=47;break;case 47:p=0;d=48;break;case 48:d=49;break;case 49:d=50;break;case 50:_DeallocateMarkedHandlers(g,i);e=p;d=51;break;case 51:return e;default:assert(0,"bad label: "+d)}}_DeleteHandler.X=1;
function _HandlerDeleteError(h,f){_PrintErrorID(h,STRING_TABLE.__str22919|0,8,0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str242941|0);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,f);_EnvPrintRouter(h,STRING_TABLE.__str2917|0,STRING_TABLE.__str42921|0)}
function _FindHandlerByAddress(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;i=a=_FindHandlerNameGroup(d,e);a=-1==(a|0)?3:4;break;case 3:b=0;a=13;break;case 4:l=HEAP32[(d+100|0)>>2];k=HEAP32[(d+96|0)>>2];j=i;a=5;break;case 5:a=j>>>0<HEAPU32[(d+104|0)>>2]>>>0?6:12;break;case 6:a=(HEAP32[((k+40*HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]|0)!=(e|0)?7:8;break;case 7:b=0;a=13;break;case 8:a=(HEAPU32[(k+40*HEAP32[(l+(j<<2)|0)>>2]|0)>>2]>>>1&3|0)==(g|0)?9:10;break;case 9:b=k+40*HEAP32[(l+
(j<<2)|0)>>2]|0;a=13;break;case 10:a=11;break;case 11:j=j+1|0;a=5;break;case 12:b=0;a=13;break;case 13:return b;default:assert(0,"bad label: "+a)}}_FindHandlerByAddress.X=1;
function _DeallocateMarkedHandlers(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l;a=h;b=f;d=k=0;c=3;break;case 3:c=k>>>0<HEAPU32[(b+104|0)>>2]>>>0?4:11;break;case 4:e=HEAP32[(b+96|0)>>2]+40*k|0;c=1==(HEAPU32[e>>2]>>>3&1|0)?5:8;break;case 5:d=d+1|0;_DecrementSymbolCount(a,HEAP32[(e+8|0)>>2]);_ExpressionDeinstall(a,HEAP32[(e+28|0)>>2]);_ReturnPackedExpression(a,HEAP32[(e+28|0)>>2]);_ClearUserDataList(a,HEAP32[(e+36|0)>>2]);c=0!=(HEAP32[(e+32|0)>>2]|0)?6:7;break;case 6:c=a;var m=HEAP32[(e+
32|0)>>2],n=_strlen(HEAP32[(e+32|0)>>2])+1|0;_rm(c,m,n);c=7;break;case 7:c=9;break;case 8:HEAP32[(e+4|0)>>2]=d;c=9;break;case 9:c=10;break;case 10:k=k+1|0;c=3;break;case 11:c=0==(d|0)?12:13;break;case 12:c=28;break;case 13:c=(d|0)==(HEAP32[(b+104|0)>>2]|0)?14:15;break;case 14:_rm(a,HEAP32[(b+96|0)>>2],40*HEAP32[(b+104|0)>>2]|0);_rm(a,HEAP32[(b+100|0)>>2],HEAP32[(b+104|0)>>2]<<2|0);HEAP32[(b+96|0)>>2]=0;HEAP32[(b+100|0)>>2]=0;HEAP32[(b+104|0)>>2]=0;c=28;break;case 15:d=HEAP32[(b+104|0)>>2]-d|0;e=HEAP32[(b+
96|0)>>2];i=HEAP32[(b+100|0)>>2];g=_gm2(a,40*d|0);j=_gm2(a,d<<2|0);l=k=0;c=16;break;case 16:c=l>>>0<d>>>0?17:21;break;case 17:c=0==(HEAPU32[(e+40*HEAP32[(i+(k<<2)|0)>>2]|0)>>2]>>>3&1|0)?18:19;break;case 18:HEAP32[(j+(l<<2)|0)>>2]=HEAP32[(i+(k<<2)|0)>>2]-HEAP32[((e+40*HEAP32[(i+(k<<2)|0)>>2]|0)+4|0)>>2]|0;l=l+1|0;c=19;break;case 19:c=20;break;case 20:k=k+1|0;c=16;break;case 21:l=k=0;c=22;break;case 22:c=l>>>0<d>>>0?23:27;break;case 23:c=0==(HEAPU32[(e+40*k|0)>>2]>>>3&1|0)?24:25;break;case 24:HEAP32[((e+
40*k|0)+4|0)>>2]=0;c=g+40*l|0;m=e+40*k|0;assert(!0,"memcpy given 40 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(c,m,40,1);l=l+1|0;c=25;break;case 25:c=26;break;case 26:k=k+1|0;c=22;break;case 27:_rm(a,e,40*HEAP32[(b+104|0)>>2]|0);_rm(a,i,HEAP32[(b+104|0)>>2]<<2|0);HEAP32[(b+96|0)>>2]=g;HEAP32[(b+100|0)>>2]=j;HEAP32[(b+104|0)>>2]=d;c=28;break;case 28:return;default:assert(0,"bad label: "+c)}}_DeallocateMarkedHandlers.X=1;
function _HandlerType(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=0;a=3;break;case 3:a=3>=i>>>0?4:8;break;case 4:a=0==(_strcmp(g,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+132|0)+(i<<2)|0)>>2])|0)?5:6;break;case 5:b=i;a=9;break;case 6:a=7;break;case 7:i=i+1|0;a=3;break;case 8:_PrintErrorID(d,STRING_TABLE.__str22919|0,7,0);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,STRING_TABLE.__str212938|0);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,e);_EnvPrintRouter(d,STRING_TABLE.__str2917|
0,STRING_TABLE.__str42921|0);b=4;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}
function _CheckCurrentMessage(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)?3:4;break;case 3:a=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:_PrintErrorID(d,STRING_TABLE.__str22919|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,e);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,STRING_TABLE.__str222939|
0);_SetEvaluationError(d,1);b=0;a=14;break;case 5:i=_GetNthMessageArgument(d,0);a=1==(g|0)?6:7;break;case 6:a=7!=(HEAPU16[(i+4|0)>>1]&65535|0)?8:9;break;case 7:a=9;break;case 8:_PrintErrorID(d,STRING_TABLE.__str22919|0,5,0);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,e);_EnvPrintRouter(d,STRING_TABLE.__str2917|0,STRING_TABLE.__str232940|0);_SetEvaluationError(d,1);b=0;a=14;break;case 9:a=7==(HEAPU16[(i+4|0)>>1]&65535|0)?10:11;break;case 10:a=1==(HEAPU32[(HEAP32[(i+8|0)>>2]+24|0)>>2]>>>1&1|0)?12:13;
break;case 11:a=13;break;case 12:_StaleInstanceAddress(d,e,0);_SetEvaluationError(d,1);b=0;a=14;break;case 13:b=1;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_CheckCurrentMessage.X=1;
function _FindHandlerNameGroup(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m;b=h;d=f;c=0==(HEAP32[(b+104|0)>>2]|0)?3:4;break;case 3:a=-1;c=32;break;case 4:k=HEAP32[(b+96|0)>>2];l=HEAP32[(b+100|0)>>2];e=0;g=HEAP32[(b+104|0)>>2]-1|0;m=-1;c=5;break;case 5:i=(e+g|0)/2&-1;c=(HEAPU32[(d+12|0)>>2]>>>3&536870911|0)==(HEAPU32[(HEAP32[((k+40*HEAP32[(l+(i<<2)|0)>>2]|0)+8|0)>>2]+12|0)>>2]>>>3&536870911|0)?6:25;break;case 6:j=i;c=7;break;case 7:c=(j|0)>=(e|0)?8:14;break;case 8:c=(HEAP32[((k+40*
HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]|0)==(d|0)?9:10;break;case 9:m=j;c=10;break;case 10:c=(HEAPU32[(HEAP32[((k+40*HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]+12|0)>>2]>>>3&536870911|0)!=(HEAPU32[(d+12|0)>>2]>>>3&536870911|0)?11:12;break;case 11:c=14;break;case 12:c=13;break;case 13:j=j-1|0;c=7;break;case 14:c=-1!=(m|0)?15:16;break;case 15:a=m;c=32;break;case 16:j=i+1|0;c=17;break;case 17:c=(j|0)<=(g|0)?18:24;break;case 18:c=(HEAP32[((k+40*HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]|0)==(d|0)?19:20;break;case 19:a=
j;c=32;break;case 20:c=(HEAPU32[(HEAP32[((k+40*HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]+12|0)>>2]>>>3&536870911|0)!=(HEAPU32[(d+12|0)>>2]>>>3&536870911|0)?21:22;break;case 21:a=-1;c=32;break;case 22:c=23;break;case 23:j=j+1|0;c=17;break;case 24:a=-1;c=32;break;case 25:c=(HEAPU32[(d+12|0)>>2]>>>3&536870911|0)<(HEAPU32[(HEAP32[((k+40*HEAP32[(l+(i<<2)|0)>>2]|0)+8|0)>>2]+12|0)>>2]>>>3&536870911|0)?26:27;break;case 26:g=i-1|0;c=28;break;case 27:e=i+1|0;c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=
(e|0)<=(g|0)?5:31;break;case 31:a=-1;c=32;break;case 32:return a;default:assert(0,"bad label: "+c)}}_FindHandlerNameGroup.X=1;
function _FindHandlerByIndex(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;i=a=_FindHandlerNameGroup(d,e);a=-1==(a|0)?3:4;break;case 3:b=-1;a=13;break;case 4:l=HEAP32[(d+100|0)>>2];k=HEAP32[(d+96|0)>>2];j=i;a=5;break;case 5:a=j>>>0<HEAPU32[(d+104|0)>>2]>>>0?6:12;break;case 6:a=(HEAP32[((k+40*HEAP32[(l+(j<<2)|0)>>2]|0)+8|0)>>2]|0)!=(e|0)?7:8;break;case 7:b=-1;a=13;break;case 8:a=(HEAPU32[(k+40*HEAP32[(l+(j<<2)|0)>>2]|0)>>2]>>>1&3|0)==(g|0)?9:10;break;case 9:b=HEAP32[(l+(j<<
2)|0)>>2];a=13;break;case 10:a=11;break;case 11:j=j+1|0;a=5;break;case 12:b=-1;a=13;break;case 13:return b;default:assert(0,"bad label: "+a)}}_FindHandlerByIndex.X=1;
function _DisplayCore(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0==(HEAPU32[HEAP32[(g|0)>>2]>>2]>>>1&3|0)?3:6;break;case 3:_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str252942|0);b=0!=(HEAP32[(g+4|0)>>2]|0)?4:5;break;case 4:_DisplayCore(d,e,HEAP32[(g+4|0)>>2],i+1|0);b=5;break;case 5:_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str262943|0);b=23;break;case 6:b=7;break;case 7:b=0!=(g|0)?8:9;break;case 8:var j=1==(HEAPU32[HEAP32[(g|0)>>2]>>2]>>>1&3|0)&1;b=10;break;case 9:j=
0;b=10;break;case 10:b=0!=(j|0)?11:12;break;case 11:_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str252942|0);_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str262943|0);g=HEAP32[(g+4|0)>>2];b=7;break;case 12:b=0!=(g|0)?13:14;break;case 13:b=2==(HEAPU32[HEAP32[(g|0)>>2]>>2]>>>1&3|0)?15:16;break;case 14:b=16;break;case 15:g=_DisplayPrimaryCore(d,e,g,i);b=16;break;case 16:b=17;break;case 17:b=0!=(g|0)?18:19;break;case 18:var k=3==(HEAPU32[HEAP32[(g|0)>>2]>>2]>>>1&3|0)&1;b=20;break;case 19:k=0;b=20;break;
case 20:b=0!=(k|0)?21:22;break;case 21:_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str252942|0);_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str262943|0);g=HEAP32[(g+4|0)>>2];b=17;break;case 22:b=23;break;case 23:return;default:assert(0,"bad label: "+b)}}_DisplayCore.X=1;
function _PrintPreviewHandler(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=b;l=0;d=3;break;case 3:d=(l|0)<(j|0)?4:6;break;case 4:_EnvPrintRouter(e,g,STRING_TABLE.__str322949|0);d=5;break;case 5:l=l+1|0;d=3;break;case 6:_EnvPrintRouter(e,g,k);_EnvPrintRouter(e,g,STRING_TABLE.__str62923|0);_PrintHandler(e,g,HEAP32[(i|0)>>2],1);return;default:assert(0,"bad label: "+d)}}
function _DisplayPrimaryCore(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;_PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str252942|0);b=0!=(HEAP32[(g+4|0)>>2]|0)?3:4;break;case 3:b=2==(HEAPU32[HEAP32[(HEAP32[(g+4|0)>>2]|0)>>2]>>2]>>>1&3|0)?5:6;break;case 4:b=6;break;case 5:j=_DisplayPrimaryCore(d,e,HEAP32[(g+4|0)>>2],i+1|0);b=7;break;case 6:j=HEAP32[(g+4|0)>>2];b=7;break;case 7:return _PrintPreviewHandler(d,e,g,i,STRING_TABLE.__str262943|0),j;default:assert(0,"bad label: "+
b)}}_DisplayPrimaryCore.X=1;
function _FindPreviewApplicableHandlers(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+16;d=h;e=f;g=c;i=0;b=3;break;case 3:b=3>=(i|0)?4:6;break;case 4:HEAP32[(k+(i<<2)|0)>>2]=0;HEAP32[(j+(i<<2)|0)>>2]=0;b=5;break;case 5:i=i+1|0;b=3;break;case 6:i=0;b=7;break;case 7:b=(i|0)<(HEAPU16[(e+52|0)>>1]&65535|0)?8:10;break;case 8:_FindApplicableOfName(d,HEAP32[(HEAP32[((e+52|0)+
4|0)>>2]+(i<<2)|0)>>2],j|0,k|0,g);b=9;break;case 9:i=i+1|0;b=7;break;case 10:return h=_JoinHandlerLinks(d,j|0,k|0,g),STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FindPreviewApplicableHandlers.X=1;
function _WatchMessage(h,f,c){_EnvPrintRouter(h,f,STRING_TABLE.__str272944|0);_EnvPrintRouter(h,f,c);_EnvPrintRouter(h,f,STRING_TABLE.__str62923|0);_EnvPrintRouter(h,f,HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+128|0)>>2]+152|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,f,STRING_TABLE.__str282945|0);_PrintLongInteger(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+12|0)>>2]);_PrintProcParamArray(h,f)}
function _WatchHandler(h,f,c,a){_EnvPrintRouter(h,f,STRING_TABLE.__str292946|0);_EnvPrintRouter(h,f,a);_EnvPrintRouter(h,f,STRING_TABLE.__str62923|0);_PrintHandler(h,STRING_TABLE.__str302947|0,HEAP32[(c|0)>>2],1);_EnvPrintRouter(h,f,STRING_TABLE.__str312948|0);_PrintLongInteger(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+12|0)>>2]);_PrintProcParamArray(h,f)}
function _DirectMessage(h,f,c,a,b){var d=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+16;g=h;i=f;j=c;k=a;l=b;e=0==(k|0)?3:4;break;case 3:k=n;e=4;break;case 4:HEAP32[(m+12|0)>>2]=l;HEAP32[(m+8|0)>>2]=0;HEAP16[(m|0)>>1]=7;HEAP32[(m+4|0)>>2]=j;_PerformMessage(g,k,m,i);STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _PerformMessage(h,f,c,a){var b=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p=b,q,r;e=h;g=f;i=c;j=a;n=m=0;HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:d=48;break;case 4:k=_ExecutingConstruct(e);
_SetExecutingConstruct(e,1);o=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2]=j;d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=e;var s=i,t=_CountArguments(i);_PushProcParameters(d,s,t,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2]+16|0)>>2],STRING_TABLE.__str52979|0,1172);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:d=HEAP32[(HEAP32[(e+16|0)>>2]+
176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2]=o;_PeriodicCleanup(e,0,1);_SetExecutingConstruct(e,k);d=48;break;case 6:d=7==(HEAPU16[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+4|0)>>1]&65535|0)?7:14;break;case 7:n=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+8|0)>>2];d=1==(HEAPU32[(n+24|0)>>2]>>>1&1|0)?8:9;break;case 8:_StaleInstanceAddress(e,STRING_TABLE.__str2974|0,0);_SetEvaluationError(e,1);d=13;break;case 9:d=
e;s=HEAP32[(n+44|0)>>2];t=_EnvGetCurrentModule(e);d=0==(_DefclassInScope(d,s,t)|0)?10:11;break;case 10:_NoInstanceError(e,HEAP32[(HEAP32[(n+28|0)>>2]+16|0)>>2],STRING_TABLE.__str2974|0);d=12;break;case 11:m=HEAP32[(n+44|0)>>2];d=n+40|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=12;break;case 12:d=13;break;case 13:d=23;break;case 14:d=8==(HEAPU16[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+4|0)>>1]&65535|0)?15:19;break;case 15:n=_FindInstanceBySymbol(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+
148|0)>>2]+4|0)>>2]+8|0)>>2]);d=0==(n|0)?16:17;break;case 16:_PrintErrorID(e,STRING_TABLE.__str12975|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str22976|0,STRING_TABLE.__str172991|0);_EnvPrintRouter(e,STRING_TABLE.__str22976|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+8|0)>>2]+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str22976|0,STRING_TABLE.__str182992|0);_SetEvaluationError(e,1);d=18;break;case 17:HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+8|0)>>
2]=n;HEAP16[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+4|0)>>1]=7;m=HEAP32[(n+44|0)>>2];d=n+40|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;d=18;break;case 18:d=22;break;case 19:m=d=HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+64|0)+((HEAPU16[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]+4|0)>>1]&65535)<<2)|0)>>2];d=0==(d|0)?20:21;break;case 20:_SystemError(e,STRING_TABLE.__str12975|0,1);_EnvExitRouter(e,1);d=21;break;case 21:d=22;break;case 22:d=23;break;case 23:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?24:25;break;case 24:_PopProcParameters(e);d=HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2]=o;_PeriodicCleanup(e,0,1);_SetExecutingConstruct(e,k);d=48;break;case 25:l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2];d=_FindApplicableHandlers(e,m,j);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]=d;d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]|0)?
26:44;break;case 26:q=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+164|0)>>2];d=0==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]|0)>>2]>>2]>>>1&3|0)?27:38;break;case 27:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]+4|
0)>>2];d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+128|0)>>2]|0)?28:29;break;case 28:_WatchMessage(e,STRING_TABLE.__str62980|0,STRING_TABLE.__str72981|0);d=29;break;case 29:d=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?30:31;break;case 30:_WatchHandler(e,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);d=31;break;case 31:d=0!=(_CheckHandlerArgCount(e)|0)?32:33;break;case 32:_StartProfile(e,
p,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(e,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|0)>>2],g,1172);_EndProfile(e,p);d=33;break;
case 33:d=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?34:35;break;case 34:_WatchHandler(e,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);d=35;break;case 35:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+128|0)>>2]|0)?36:37;break;case 36:_WatchMessage(e,STRING_TABLE.__str62980|0,STRING_TABLE.__str82982|0);d=37;break;case 37:d=43;break;case 38:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>
2]+128|0)>>2]+156|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2];d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+128|0)>>2]|0)?39:40;break;case 39:_WatchMessage(e,STRING_TABLE.__str62980|0,STRING_TABLE.__str72981|0);d=40;break;case 40:_CallHandlers(e,g);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+128|0)>>2]|0)?41:42;break;case 41:_WatchMessage(e,STRING_TABLE.__str62980|0,STRING_TABLE.__str82982|0);d=42;break;
case 42:d=43;break;case 43:_DestroyHandlerLinks(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+156|0)>>2]=q;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+164|0)>>2]=r;d=44;break;case 44:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+160|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+52|0)>>2]|0)>>2]=0;d=0!=(n|0)?45:46;break;case 45:d=n+40|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=46;break;case 46:_PopProcParameters(e);d=HEAP32[(HEAP32[(e+16|0)>>
2]+176|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+128|0)>>2]+152|0)>>2]=o;_PropagateReturnValue(e,g);_PeriodicCleanup(e,0,1);_SetExecutingConstruct(e,k);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?47:48;break;case 47:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];d=48;break;case 48:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_PerformMessage.X=1;
function _GetNthMessageArgument(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*f|0}
function _NextHandlerAvailable(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)?3:4;break;case 3:c=0;f=10;break;case 4:f=0==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>1&3|0)?5:6;break;case 5:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?1:0;f=10;break;case 6:f=2==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>1&3|0)?7:9;break;
case 7:f=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?8:9;break;case 8:c=2==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?1:0;f=10;break;case 9:c=0;f=10;break;case 10:return c;default:assert(0,"bad label: "+f)}}_NextHandlerAvailable.X=1;
function _EnvSend(h,f,c,a,b){var d=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n,o;g=h;i=f;j=c;k=a;l=b;e=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?3:6;break;case 3:e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+160|0)>>2]|0)>>2]|0)?6:4;break;case 4:e=0==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]|0)>>2]|0)?5:6;break;case 5:_PeriodicCleanup(g,1,0);e=6;break;case 6:_SetEvaluationError(g,
0);HEAP16[(l+4|0)>>1]=2;HEAP32[(l+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2];o=_FindSymbolHN(g,j);e=0==(o|0)?7:8;break;case 7:_PrintNoHandlerError(g,j);_SetEvaluationError(g,1);e=11;break;case 8:n=_GenConstant(g,HEAP16[(i+4|0)>>1],HEAP32[(i+8|0)>>2]);e=_ParseConstantArguments(g,k,m);HEAP32[(n+12|0)>>2]=e;e=1==(HEAP32[m>>2]|0)?9:10;break;case 9:_ReturnExpression(g,n);_SetEvaluationError(g,1);e=11;break;case 10:_PerformMessage(g,l,n,o);_ReturnExpression(g,n);e=11;break;case 11:STACKTOP=
d;return;default:assert(0,"bad label: "+e)}}_EnvSend.X=1;
function _DestroyHandlerLinks(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=b;b=HEAP32[(b+4|0)>>2];var d=HEAP32[(c|0)>>2]+4|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;_DecrementDefclassBusyCount(a,HEAP32[(HEAP32[(c|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}_DestroyHandlerLinks.X=1;
function _SendCommand(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+16;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str2974|0,2,2,g)|0)?3:4;break;case 3:a=5;break;case 4:a=HEAP32[(g+8|0)>>2];HEAP16[(e|0)>>1]=HEAP16[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+
8|0)>>2]|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2];HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+8|0)>>2];HEAP32[(e+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2];_PerformMessage(b,d,e,a);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SendCommand.X=1;
function _CallNextHandler(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k=c+16;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:a=35;break;case 4:a=0==(_NextHandlerAvailable(b)|0)?
5:6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str12975|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str22976|0,STRING_TABLE.__str32977|0);_SetEvaluationError(b,1);a=35;break;case 6:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+4|0)>>2];var l=_FindFunction(b,STRING_TABLE.__str42978|0);a=(a|0)==(l|0)?7:13;break;case 7:g=1;HEAP16[(e|0)>>1]=HEAP16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]|0)+4|0)>>1];a=4!=(HEAPU16[(e|0)>>1]&65535|0)?8:9;break;case 8:HEAP32[(e+4|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+148|0)>>2]+4|0)>>2]|0)+8|0)>>2];a=10;break;case 9:HEAP32[(e+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]|0;a=10;break;case 10:HEAP32[(e+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];HEAP32[(e+8|0)>>2]=0;a=b;l=_CountArguments(e);_PushProcParameters(a,e,l,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+152|0)>>2]+16|0)>>2],STRING_TABLE.__str52979|0,1172);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?11:12;break;
case 11:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=35;break;case 12:a=14;break;case 13:g=0;a=14;break;case 14:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2];a=0==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>1&3|0)?15:25;break;case 15:a=0==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?16:23;break;case 16:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?17:18;break;case 17:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);a=18;break;case 18:a=0!=(_CheckHandlerArgCount(b)|
0)?19:20;break;case 19:_StartProfile(b,k,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|
0)>>2],d,1172);_EndProfile(b,k);a=20;break;case 20:a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?21:22;break;case 21:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);a=22;break;case 22:a=24;break;case 23:_CallHandlers(b,d);a=24;break;case 24:a=32;break;case 25:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|
0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?26:27;break;case 26:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);a=27;break;case 27:a=0!=(_CheckHandlerArgCount(b)|0)?28:29;break;case 28:_StartProfile(b,k,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|0)>>2],d,1172);_EndProfile(b,k);a=29;break;case 29:a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?30:31;break;case 30:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);a=31;break;case 31:a=32;break;case 32:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=j;a=0!=(g|0)?33:34;break;case 33:_PopProcParameters(b);a=34;break;case 34:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=35;break;case 35:STACKTOP=
c;return;default:assert(0,"bad label: "+a)}}_CallNextHandler.X=1;
function _CallHandlers(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j=c+24;b=h;d=f;g=e=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?3:4;break;case 3:a=45;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2];a=5;break;case 5:a=1==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?6:16;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?7:8;break;case 7:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);a=8;break;case 8:a=0!=(_CheckHandlerArgCount(b)|0)?9:10;break;case 9:_StartProfile(b,j,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>
2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|0)>>2],i,1172);_EndProfile(b,j);a=10;break;case 10:a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?11:12;break;case 11:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);a=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=0==(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?14:13;break;case 13:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?14:15;break;case 14:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=e;a=45;break;case 15:a=5;break;case 16:a=2==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?17:32;break;case 17:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+164|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?18:19;break;case 18:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);a=19;break;case 19:a=0!=(_CheckHandlerArgCount(b)|0)?20:21;break;case 20:_StartProfile(b,
j,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|0)>>2],d,1172);_EndProfile(b,j);a=21;break;
case 21:a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?22:23;break;case 22:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);a=23;break;case 23:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?25:24;break;case 24:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?25:26;break;case 25:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+128|0)>>2]+164|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=e;a=45;break;case 26:a=27;break;case 27:a=2==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?28:31;break;case 28:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?29:30;break;case 29:HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+128|0)>>2]+164|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=e;a=45;break;case 30:a=27;break;case 31:a=32;break;case 32:a=33;break;case 33:a=3==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)>>2]>>2]>>>1&3|0)?34:44;break;case 34:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+128|0)>>2]+164|0)>>2]+4|0)>>2];a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?35:36;break;case 35:_WatchHandler(b,STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str72981|0);a=36;break;case 36:a=0!=(_CheckHandlerArgCount(b)|0)?37:38;break;case 37:_StartProfile(b,j,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>
2]);_EvaluateProcActions(b,HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)+8|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+24|0)>>2],i,1172);_EndProfile(b,j);a=38;break;case 38:a=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]>>2]>>>4&1|0)?39:40;break;case 39:_WatchHandler(b,
STRING_TABLE.__str62980|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2],STRING_TABLE.__str82982|0);a=40;break;case 40:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]=0;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]|0)?42:41;break;case 41:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?42:43;break;case 42:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=e;a=45;break;case 43:a=33;
break;case 44:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+164|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]=e;a=45;break;case 45:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CallHandlers.X=1;function _PrintHandlerSlotGetFunction(){}function _PrintHandlerSlotPutFunction(){}
function _FindApplicableOfName(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p;e=h;g=f;i=c;j=a;k=b;l=_FindHandlerNameGroup(g,k);d=-1==(l|0)?3:4;break;case 3:d=19;break;case 4:m=HEAP32[(g+104|0)>>2]-1|0;n=HEAP32[(g+96|0)>>2];o=HEAP32[(g+100|0)>>2];d=5;break;case 5:d=(l|0)<=(m|0)?6:19;break;case 6:d=(HEAP32[((n+40*HEAP32[(o+(l<<2)|0)>>2]|0)+8|0)>>2]|0)!=(k|0)?7:8;break;case 7:d=19;break;case 8:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?9:
10;break;case 9:var q=_genalloc(e,8);d=11;break;case 10:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];q=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=11;break;case 11:p=q;d=(n+40*HEAP32[(o+(l<<2)|0)>>2]|0)+4|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;_IncrementDefclassBusyCount(e,
HEAP32[((n+40*HEAP32[(o+(l<<2)|0)>>2]|0)+12|0)>>2]);HEAP32[(p|0)>>2]=n+40*HEAP32[(o+(l<<2)|0)>>2]|0;d=0==(HEAP32[(i+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]|0)?12:13;break;case 12:HEAP32[(p+4|0)>>2]=0;d=p;HEAP32[(j+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]=d;HEAP32[(i+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]=d;d=17;break;case 13:d=3==(HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3|0)?14:15;break;case 14:HEAP32[(p+4|0)>>2]=HEAP32[(i+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2];HEAP32[(i+
((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]=p;d=16;break;case 15:HEAP32[(HEAP32[(j+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]+4|0)>>2]=p;HEAP32[(j+((HEAPU32[HEAP32[(p|0)>>2]>>2]>>>1&3)<<2)|0)>>2]=p;HEAP32[(p+4|0)>>2]=0;d=16;break;case 16:d=17;break;case 17:d=18;break;case 18:l=l+1|0;d=5;break;case 19:return;default:assert(0,"bad label: "+d)}}_FindApplicableOfName.X=1;
function _JoinHandlerLinks(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0==(HEAP32[(g+8|0)>>2]|0)?3:8;break;case 3:_PrintNoHandlerError(e,HEAP32[(j+16|0)>>2]);k=0;b=4;break;case 4:b=3>=(k|0)?5:7;break;case 5:_DestroyHandlerLinks(e,HEAP32[(g+(k<<2)|0)>>2]);b=6;break;case 6:k=k+1|0;b=4;break;case 7:_SetEvaluationError(e,1);d=0;b=13;break;case 8:l=HEAP32[(g+8|0)>>2];b=0!=(HEAP32[(g+4|0)>>2]|0)?9:10;break;case 9:HEAP32[(HEAP32[(i+4|0)>>2]+4|0)>>2]=l;l=HEAP32[(g+4|0)>>
2];b=10;break;case 10:b=0!=(HEAP32[(g|0)>>2]|0)?11:12;break;case 11:HEAP32[(HEAP32[(i|0)>>2]+4|0)>>2]=l;l=HEAP32[(g|0)>>2];b=12;break;case 12:HEAP32[(HEAP32[(i+8|0)>>2]+4|0)>>2]=HEAP32[(g+12|0)>>2];d=l;b=13;break;case 13:return d;default:assert(0,"bad label: "+b)}}_JoinHandlerLinks.X=1;
function _HandlerSlotGetFunction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;a=f;e=c;g=HEAP32[(a+16|0)>>2];j=HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]|0)+8|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+100|0)>>2]+((HEAPU16[(g|0)>>1]&65535)<<2)|0)>>2];a=0!=(HEAPU32[(j+24|0)>>2]>>>1&1|0)?3:4;break;case 3:_StaleInstanceAddress(d,STRING_TABLE.__str92983|0,0);HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>
2]+4|0)>>2];_SetEvaluationError(d,1);b=0;a=17;break;case 4:a=(HEAP32[(j+44|0)>>2]|0)==(i|0)?5:6;break;case 5:l=HEAP32[(HEAP32[(HEAP32[(j+44|0)>>2]+68|0)>>2]+(HEAP32[(g+4|0)>>2]<<2)|0)>>2];k=HEAP32[(HEAP32[(j+72|0)>>2]+((l-1|0)<<2)|0)>>2];a=13;break;case 6:a=HEAPU32[(g+4|0)>>2]>>>0>HEAPU32[(HEAP32[(j+44|0)>>2]+84|0)>>2]>>>0?7:8;break;case 7:a=16;break;case 8:l=HEAP32[(HEAP32[(HEAP32[(j+44|0)>>2]+68|0)>>2]+(HEAP32[(g+4|0)>>2]<<2)|0)>>2];a=0==(l|0)?9:10;break;case 9:a=16;break;case 10:l=l-1|0;k=HEAP32[(HEAP32[(j+
72|0)>>2]+(l<<2)|0)>>2];a=(HEAP32[(HEAP32[(k|0)>>2]+4|0)>>2]|0)!=(i|0)?11:12;break;case 11:a=16;break;case 12:a=13;break;case 13:HEAP16[(e+4|0)>>1]=HEAPU32[(k+4|0)>>2]>>>2&63;HEAP32[(e+8|0)>>2]=HEAP32[(k+8|0)>>2];a=4==(HEAPU32[(k+4|0)>>2]>>>2&63|0)?14:15;break;case 14:HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=HEAP32[(HEAP32[(k+8|0)>>2]+8|0)>>2]-1|0;a=15;break;case 15:b=1;a=17;break;case 16:_EarlySlotBindError(d,j,i,HEAP32[(g+4|0)>>2]);HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(d,1);b=0;a=17;break;case 17:return b;default:assert(0,"bad label: "+a)}}_HandlerSlotGetFunction.X=1;
function _EarlySlotBindError(h,f,c,a){a=HEAP32[(HEAP32[(c+64|0)>>2]+((HEAP32[(HEAP32[(c+68|0)>>2]+(a<<2)|0)>>2]-1|0)<<2)|0)>>2];_PrintErrorID(h,STRING_TABLE.__str12975|0,3,0);_EnvPrintRouter(h,STRING_TABLE.__str22976|0,STRING_TABLE.__str142988|0);_EnvPrintRouter(h,STRING_TABLE.__str22976|0,HEAP32[(HEAP32[(HEAP32[(a+8|0)>>2]+12|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str22976|0,STRING_TABLE.__str152989|0);_PrintClassName(h,STRING_TABLE.__str22976|0,c,0);_EnvPrintRouter(h,STRING_TABLE.__str22976|
0,STRING_TABLE.__str162990|0);_PrintInstanceNameAndClass(h,STRING_TABLE.__str22976|0,f,1)}
function _HandlerSlotPutFunction(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n=a;e=h;b=f;g=c;i=HEAP32[(b+16|0)>>2];k=HEAP32[((HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]+4|0)>>2]|0)+8|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+100|0)>>2]+((HEAPU16[(i|0)>>1]&65535)<<2)|0)>>2];b=0!=(HEAPU32[(k+24|0)>>2]>>>1&1|0)?3:4;break;case 3:_StaleInstanceAddress(e,
STRING_TABLE.__str102984|0,0);HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(e,1);d=0;b=26;break;case 4:b=(HEAP32[(k+44|0)>>2]|0)==(j|0)?5:6;break;case 5:m=HEAP32[(HEAP32[(HEAP32[(k+44|0)>>2]+68|0)>>2]+(HEAP32[(i+4|0)>>2]<<2)|0)>>2];l=HEAP32[(HEAP32[(k+72|0)>>2]+((m-1|0)<<2)|0)>>2];b=13;break;case 6:b=HEAPU32[(i+4|0)>>2]>>>0>HEAPU32[(HEAP32[(k+44|0)>>2]+84|0)>>2]>>>0?7:8;break;case 7:b=24;break;case 8:m=HEAP32[(HEAP32[(HEAP32[(k+
44|0)>>2]+68|0)>>2]+(HEAP32[(i+4|0)>>2]<<2)|0)>>2];b=0==(m|0)?9:10;break;case 9:b=24;break;case 10:m=m-1|0;l=HEAP32[(HEAP32[(k+72|0)>>2]+(m<<2)|0)>>2];b=(HEAP32[(HEAP32[(l|0)>>2]+4|0)>>2]|0)!=(j|0)?11:12;break;case 11:b=24;break;case 12:b=13;break;case 13:b=0!=(HEAPU32[HEAP32[(l|0)>>2]>>2]>>>5&1|0)?14:16;break;case 14:b=0!=(HEAPU32[(k+24|0)>>2]>>>3&1|0)?16:15;break;case 15:_SlotAccessViolationError(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(l|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2],1,k);b=25;break;case 16:b=0!=
(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)?17:20;break;case 17:b=0==(_EvaluateAndStoreInDataObject(e,HEAPU32[HEAP32[(l|0)>>2]>>2]>>>1&1,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],n,1)|0)?18:19;break;case 18:b=25;break;case 19:b=21;break;case 20:HEAP32[(n+12|0)>>2]=0;HEAP32[(n+16|0)>>2]=-1;HEAP16[(n+4|0)>>1]=4;HEAP32[(n+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+148|0)>>2]|0)>>2];b=21;break;case 21:b=0==(_PutSlotValue(e,k,l,n,g,0)|0)?22:
23;break;case 22:b=25;break;case 23:d=1;b=26;break;case 24:_EarlySlotBindError(e,k,j,HEAP32[(i+4|0)>>2]);b=25;break;case 25:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_SetEvaluationError(e,1);d=0;b=26;break;case 26:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_HandlerSlotPutFunction.X=1;
function _DynamicHandlerGetSlot(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_CheckCurrentMessage(b,STRING_TABLE.__str112985|0,1)|0)?3:4;break;case 3:a=13;break;case 4:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],g);a=2!=
(HEAPU16[(g+4|0)>>1]&65535|0)?5:6;break;case 5:_ExpectedTypeError1(b,STRING_TABLE.__str112985|0,1,STRING_TABLE.__str122986|0);_SetEvaluationError(b,1);a=13;break;case 6:a=_GetNthMessageArgument(b,0)+8|0;a=HEAP32[a>>2];e=_FindInstanceSlot(b,a,HEAP32[(g+8|0)>>2]);a=0==(e|0)?7:8;break;case 7:_SlotExistError(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],STRING_TABLE.__str112985|0);a=13;break;case 8:a=0==(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>10&1|0)?9:11;break;case 9:a=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)!=(HEAP32[(HEAP32[(e|0)>>2]+4|0)>>2]|0)?10:11;break;case 10:_SlotVisibilityViolationError(b,HEAP32[(e|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]);_SetEvaluationError(b,1);a=13;break;case 11:HEAP16[(d+4|0)>>1]=HEAPU32[(e+4|0)>>2]>>>2&63;HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];a=4==(HEAPU32[(e+4|0)>>2]>>>2&63|0)?12:13;break;case 12:HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(e+8|0)>>2]+
8|0)>>2]-1|0;a=13;break;case 13:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DynamicHandlerGetSlot.X=1;
function _DynamicHandlerPutSlot(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_CheckCurrentMessage(b,STRING_TABLE.__str132987|0,1)|0)?3:4;break;case 3:a=22;break;case 4:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],i);a=
2!=(HEAPU16[(i+4|0)>>1]&65535|0)?5:6;break;case 5:_ExpectedTypeError1(b,STRING_TABLE.__str132987|0,1,STRING_TABLE.__str122986|0);_SetEvaluationError(b,1);a=22;break;case 6:a=_GetNthMessageArgument(b,0)+8|0;g=HEAP32[a>>2];e=_FindInstanceSlot(b,g,HEAP32[(i+8|0)>>2]);a=0==(e|0)?7:8;break;case 7:_SlotExistError(b,HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],STRING_TABLE.__str132987|0);a=22;break;case 8:a=0==(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>4&1|0)?9:10;break;case 9:a=13;break;case 10:a=0==(HEAPU32[HEAP32[(e|0)>>
2]>>2]>>>5&1|0)?12:11;break;case 11:a=0!=(HEAPU32[(g+24|0)>>2]>>>3&1|0)?13:12;break;case 12:_SlotAccessViolationError(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e|0)>>2]+8|0)>>2]+12|0)>>2]+16|0)>>2],1,g);_SetEvaluationError(b,1);a=22;break;case 13:a=0==(HEAPU32[HEAP32[(e|0)>>2]>>2]>>>10&1|0)?14:16;break;case 14:a=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]|0)!=(HEAP32[(HEAP32[(e|0)>>2]+4|0)>>2]|0)?15:16;break;case 15:_SlotVisibilityViolationError(b,HEAP32[(e|
0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+156|0)>>2]|0)>>2]+12|0)>>2]);_SetEvaluationError(b,1);a=22;break;case 16:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?17:20;break;case 17:a=0==(_EvaluateAndStoreInDataObject(b,HEAPU32[HEAP32[(e|0)>>2]>>2]>>>1&1,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],i,1)|0)?18:19;break;case 18:a=22;break;case 19:a=21;break;case 20:HEAP32[(i+12|
0)>>2]=0;HEAP32[(i+16|0)>>2]=-1;HEAP16[(i+4|0)>>1]=4;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]|0)>>2];a=21;break;case 21:_PutSlotValue(b,g,e,i,d,0);a=22;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DynamicHandlerPutSlot.X=1;
function _FindApplicableHandlers(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+16;d=h;e=f;g=c;i=0;b=3;break;case 3:b=3>=(i|0)?4:6;break;case 4:HEAP32[(k+(i<<2)|0)>>2]=0;HEAP32[(j+(i<<2)|0)>>2]=0;b=5;break;case 5:i=i+1|0;b=3;break;case 6:i=0;b=7;break;case 7:b=(i|0)<(HEAPU16[(e+52|0)>>1]&65535|0)?8:10;break;case 8:_FindApplicableOfName(d,HEAP32[(HEAP32[((e+52|0)+4|0)>>
2]+(i<<2)|0)>>2],j|0,k|0,g);b=9;break;case 9:i=i+1|0;b=7;break;case 10:return h=_JoinHandlerLinks(d,j|0,k|0,g),STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FindApplicableHandlers.X=1;
function _ParseDefmessageHandler(h,f){var c=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l,m=c+4,n=c+8,o=c+12,p=c+16,q,r,s;d=h;e=f;l=2;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SetIndentDepth(d,3);_SavePPBuffer(d,STRING_TABLE.__str3021|0);a=0!=(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,
STRING_TABLE.__str13022|0);b=1;a=52;break;case 5:i=_GetConstructNameAndComment(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0,STRING_TABLE.__str13022|0,0,0,STRING_TABLE.__str23023|0,1,0,1);a=0==(i|0)?6:7;break;case 6:b=1;a=52;break;case 7:g=_LookupDefclassByMdlOrScope(d,HEAP32[(i+16|0)>>2]);a=0==(g|0)?8:9;break;case 8:_PrintErrorID(d,STRING_TABLE.__str33024|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str43025|0,STRING_TABLE.__str53026|0);b=1;a=52;break;case 9:a=(g|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|
0)>>2]+84|0)>>2]+64|0)+32|0)>>2]|0)?12:10;break;case 10:a=(g|0)==(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+28|0)>>2]|0)?12:11;break;case 11:a=(g|0)==(HEAP32[(HEAP32[((HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+64|0)+32|0)>>2]+36|0)+4|0)>>2]|0)>>2]|0)?12:13;break;case 12:_PrintErrorID(d,STRING_TABLE.__str33024|0,8,0);_EnvPrintRouter(d,STRING_TABLE.__str43025|0,STRING_TABLE.__str63027|0);b=d;a=_GetConstructNameString(g);_EnvPrintRouter(b,STRING_TABLE.__str43025|0,a);_EnvPrintRouter(d,
STRING_TABLE.__str43025|0,STRING_TABLE.__str73028|0);b=1;a=52;break;case 13:a=0!=(_HandlersExecuting(g)|0)?14:15;break;case 14:_PrintErrorID(d,STRING_TABLE.__str33024|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str43025|0,STRING_TABLE.__str83029|0);_EnvPrintRouter(d,STRING_TABLE.__str43025|0,STRING_TABLE.__str93030|0);b=1;a=52;break;case 15:a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?16:17;break;case 16:_SyntaxErrorMessage(d,STRING_TABLE.__str13022|0);b=1;a=52;break;case 17:_PPBackup(d);
_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str103031|0);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);_SavePPBuffer(d,STRING_TABLE.__str103031|0);j=HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2];_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=170!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?18:28;break;case 18:_SavePPBuffer(d,STRING_TABLE.__str103031|0);a=3!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|
0)>>1]&65535|0)?19:26;break;case 19:a=2!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?20:21;break;case 20:_SyntaxErrorMessage(d,STRING_TABLE.__str13022|0);b=1;a=52;break;case 21:l=_HandlerType(d,STRING_TABLE.__str13022|0,HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+4|0)>>2]+16|0)>>2]);a=4==(l|0)?22:23;break;case 22:b=1;a=52;break;case 23:_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=3==(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&
65535|0)?24:25;break;case 24:_SavePPBuffer(d,STRING_TABLE.__str103031|0);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=25;break;case 25:a=27;break;case 26:_SavePPBuffer(d,STRING_TABLE.__str103031|0);_GetToken(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0);a=27;break;case 27:a=28;break;case 28:_PPBackup(d);_PPBackup(d);_PPCRAndIndent(d);_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);s=_FindHandlerByAddress(g,j,l);a=0!=(_GetPrintWhileLoading(d)|0)?29:
31;break;case 29:a=0!=(_GetCompilationsWatch(d)|0)?30:31;break;case 30:_EnvPrintRouter(d,STRING_TABLE.__str113032|0,STRING_TABLE.__str123033|0);_EnvPrintRouter(d,STRING_TABLE.__str113032|0,HEAP32[(j+16|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str113032|0,STRING_TABLE.__str103031|0);_EnvPrintRouter(d,STRING_TABLE.__str113032|0,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+132|0)+(l<<2)|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str113032|0,0==(s|0)?STRING_TABLE.__str133034|0:STRING_TABLE.__str143035|
0);a=31;break;case 31:a=0!=(s|0)?32:33;break;case 32:a=0!=(HEAP32[s>>2]&1|0)?34:35;break;case 33:a=35;break;case 34:_PrintErrorID(d,STRING_TABLE.__str33024|0,3,0);_EnvPrintRouter(d,STRING_TABLE.__str43025|0,STRING_TABLE.__str153036|0);b=1;a=52;break;case 35:q=_GenConstant(d,2,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+128|0)>>2]+148|0)>>2]);q=_ParseProcParameters(d,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0,q,k,m,n,o,1174);a=0!=(HEAP32[o>>2]|0)?36:37;break;case 36:b=1;a=52;break;case 37:_PPCRAndIndent(d);
HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;r=_ParseProcActions(d,STRING_TABLE.__str163037|0,e,HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0,q,HEAP32[k>>2],1176,1178,p,g);a=0==(r|0)?38:39;break;case 38:_ReturnExpression(d,q);b=1;a=52;break;case 39:a=171!=(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)>>1]&65535|0)?40:41;break;case 40:_SyntaxErrorMessage(d,STRING_TABLE.__str13022|0);_ReturnExpression(d,q);_ReturnPackedExpression(d,r);b=1;a=52;break;case 41:_PPBackup(d);_PPBackup(d);
_SavePPBuffer(d,HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+140|0)+8|0)>>2]);_SavePPBuffer(d,STRING_TABLE.__str173038|0);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?42:43;break;case 42:_ReturnExpression(d,q);_ReturnPackedExpression(d,r);b=0;a=52;break;case 43:a=0!=(s|0)?44:47;break;case 44:_ExpressionDeinstall(d,HEAP32[(s+28|0)>>2]);_ReturnPackedExpression(d,HEAP32[(s+28|0)>>2]);a=0!=(HEAP32[(s+32|0)>>2]|0)?45:46;break;case 45:a=d;var t=HEAP32[(s+32|0)>>2],u=_strlen(HEAP32[(s+
32|0)>>2])+1|0;_rm(a,t,u);a=46;break;case 46:a=48;break;case 47:s=_InsertHandlerHeader(d,g,j,l);a=HEAP32[(s+8|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=48;break;case 48:_ReturnExpression(d,q);HEAP32[(s+16|0)>>2]=HEAP32[m>>2];HEAP32[(s+20|0)>>2]=HEAP32[n>>2];HEAP32[(s+24|0)>>2]=HEAP32[p>>2];HEAP32[(s+28|0)>>2]=r;_ExpressionInstall(d,HEAP32[(s+28|0)>>2]);a=0==(_EnvGetConserveMemory(d)|0)?49:50;break;case 49:a=_CopyPPBuffer(d);HEAP32[(s+32|0)>>2]=a;a=51;break;case 50:HEAP32[(s+32|0)>>2]=0;a=51;break;
case 51:b=0;a=52;break;case 52:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_ParseDefmessageHandler.X=1;
function _IsParameterSlotReference(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(_strncmp(d,STRING_TABLE.__str213042|0,4)|0)?3:4;break;case 3:c=58==(HEAP8[d+4|0]<<24>>24|0)?5:6;break;case 4:c=6;break;case 5:_PrintErrorID(b,STRING_TABLE.__str33024|0,4,0);_EnvPrintRouter(b,STRING_TABLE.__str43025|0,STRING_TABLE.__str313052|0);a=1;c=7;break;case 6:a=0;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _SlotReferenceVar(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;b=35!=(HEAPU16[(g|0)>>1]&65535|0)?3:5;break;case 3:b=36!=(HEAPU16[(g|0)>>1]&65535|0)?4:5;break;case 4:d=0;b=14;break;case 5:b=0==(_strncmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2],STRING_TABLE.__str213042|0,4)|0)?6:7;break;case 6:b=58==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+4|0]<<24>>24|
0)?8:13;break;case 7:b=13;break;case 8:_OpenStringSource(e,STRING_TABLE.__str233044|0,(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+4|0)+1|0,0);b=_GetPPBufferStatus(e);_SetPPBufferStatus(e,0);_GetToken(e,STRING_TABLE.__str233044|0,j);_SetPPBufferStatus(e,b);_CloseStringSource(e,STRING_TABLE.__str233044|0);b=172!=(HEAPU16[(j|0)>>1]&65535|0)?9:12;break;case 9:k=_CheckSlotReference(e,i,HEAPU16[(j|0)>>1]&65535,HEAP32[(j+4|0)>>2],0,0);b=0==(k|0)?10:11;break;case 10:d=-1;b=14;break;case 11:_GenHandlerSlotReference(e,
g,83,k);d=1;b=14;break;case 12:b=13;break;case 13:d=0;b=14;break;case 14:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_SlotReferenceVar.X=1;
function _BindSlotReference(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a,l,m;e=h;g=f;i=c;j=HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+4|0)>>2]+16|0)>>2];b=0==(_strcmp(j,STRING_TABLE.__str213042|0)|0)?3:4;break;case 3:_PrintErrorID(e,STRING_TABLE.__str33024|0,5,0);_EnvPrintRouter(e,STRING_TABLE.__str43025|0,STRING_TABLE.__str223043|0);d=-1;b=13;break;case 4:b=0==(_strncmp(j,STRING_TABLE.__str213042|
0,4)|0)?5:6;break;case 5:b=58==(HEAP8[j+4|0]<<24>>24|0)?7:12;break;case 6:b=12;break;case 7:_OpenStringSource(e,STRING_TABLE.__str233044|0,(j+4|0)+1|0,0);b=_GetPPBufferStatus(e);_SetPPBufferStatus(e,0);_GetToken(e,STRING_TABLE.__str233044|0,k);_SetPPBufferStatus(e,b);_CloseStringSource(e,STRING_TABLE.__str233044|0);b=172!=(HEAPU16[(k|0)>>1]&65535|0)?8:11;break;case 8:m=HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2];l=_CheckSlotReference(e,i,HEAPU16[(k|0)>>1]&65535,HEAP32[(k+4|0)>>2],1,m);b=0==(l|0)?9:10;break;
case 9:d=-1;b=13;break;case 10:_GenHandlerSlotReference(e,g,84,l);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=0;_ReturnExpression(e,HEAP32[(g+8|0)>>2]);HEAP32[(g+8|0)>>2]=m;d=1;b=13;break;case 11:b=12;break;case 12:d=0;b=13;break;case 13:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_BindSlotReference.X=1;
function _CreateGetAndPutHandlers(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o;b=h;d=f;k=STRING_TABLE.__str183039|0;a=0==(HEAPU32[d>>2]>>>11&1|0)?3:5;break;case 3:a=0==(HEAPU32[d>>2]>>>12&1|0)?4:5;break;case 4:a=10;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(d+4|0)>>2]|0)>>2]+16|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(d+8|0)>>2]+12|0)>>2]+16|0)>>2];i=_strlen(e);j=_strlen(g)<<1|0;i=(i+j|0)+
80|0;j=_gm2(b,i);l=_GetPrintWhileLoading(b);_SetPrintWhileLoading(b,0);m=_EnvSetConserveMemory(b,1);a=0!=(HEAPU32[d>>2]>>>11&1|0)?6:7;break;case 6:a=e;o=n=g;_sprintf(j,STRING_TABLE.__str193040|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,tempInt));a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+184|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2]=j;_ParseDefmessageHandler(b,k);_DestroyPPBuffer(b);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2]=o;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2]=n;a=7;break;case 7:a=0!=(HEAPU32[d>>2]>>>12&1|0)?8:9;break;case 8:a=e;o=
n=g;_sprintf(j,STRING_TABLE.__str203041|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,tempInt));a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+184|0)>>2]+12|0)>>2]=j;_ParseDefmessageHandler(b,k);_DestroyPPBuffer(b);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2]=o;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2]=n;a=9;break;case 9:_SetPrintWhileLoading(b,l);_EnvSetConserveMemory(b,m);_rm(b,j,i);a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CreateGetAndPutHandlers.X=1;
function _CheckSlotReference(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;i=h;j=f;e=c;k=a;l=b;m=d;e=2!=(e|0)?3:4;break;case 3:_PrintErrorID(i,STRING_TABLE.__str33024|0,7,0);_EnvPrintRouter(i,STRING_TABLE.__str43025|0,STRING_TABLE.__str243045|0);g=0;e=19;break;case 4:n=_FindInstanceTemplateSlot(i,j,k);e=-1==(n|0)?5:6;break;case 5:_PrintErrorID(i,STRING_TABLE.__str33024|0,6,0);_EnvPrintRouter(i,STRING_TABLE.__str43025|0,STRING_TABLE.__str253046|0);_EnvPrintRouter(i,STRING_TABLE.__str43025|
0,HEAP32[(k+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str43025|0,STRING_TABLE.__str263047|0);g=i;e=_GetConstructNameString(j);_EnvPrintRouter(g,STRING_TABLE.__str43025|0,e);_EnvPrintRouter(i,STRING_TABLE.__str43025|0,STRING_TABLE.__str273048|0);g=0;e=19;break;case 6:o=HEAP32[(HEAP32[(j+64|0)>>2]+(n<<2)|0)>>2];e=0==(HEAPU32[o>>2]>>>10&1|0)?7:9;break;case 7:e=(HEAP32[(o+4|0)>>2]|0)!=(j|0)?8:9;break;case 8:_SlotVisibilityViolationError(i,o,j);g=0;e=19;break;case 9:e=0!=(l|0)?11:10;break;case 10:g=
o;e=19;break;case 11:e=0!=(HEAPU32[o>>2]>>>4&1|0)?12:14;break;case 12:e=0==(HEAPU32[o>>2]>>>5&1|0)?13:14;break;case 13:_SlotAccessViolationError(i,HEAP32[(k+16|0)>>2],0,j);g=0;e=19;break;case 14:e=0!=(_EnvGetStaticConstraintChecking(i)|0)?15:18;break;case 15:p=_ConstraintCheckExpressionChain(i,m,HEAP32[(o+20|0)>>2]);e=0!=(p|0)?16:17;break;case 16:_PrintErrorID(i,STRING_TABLE.__str283049|0,1,0);_EnvPrintRouter(i,STRING_TABLE.__str43025|0,STRING_TABLE.__str293050|0);_PrintSlot(i,STRING_TABLE.__str43025|
0,o,0,STRING_TABLE.__str303051|0);_ConstraintViolationErrorMessage(i,0,0,0,0,0,0,p,HEAP32[(o+20|0)>>2],0);g=0;e=19;break;case 17:e=18;break;case 18:g=o;e=19;break;case 19:return g;default:assert(0,"bad label: "+e)}}_CheckSlotReference.X=1;
function _GenHandlerSlotReference(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ClearBitString(b,8);HEAP16[(b|0)>>1]=HEAP16[(HEAP32[(a+4|0)>>2]+26|0)>>1];HEAP32[(b+4|0)>>2]=HEAP32[(HEAP32[(a+8|0)>>2]+8|0)>>2];HEAP16[(f|0)>>1]=c;h=_AddBitMap(h,b,8);HEAP32[(f+4|0)>>2]=h;STACKTOP=b}function _InitializeMultifieldData(h){_AllocateEnvironmentData(h,51,4,1180)}
function _DeallocateMultifieldData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+204|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+12|0)>>2];_ReturnMultifield(c,a);a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _CreateMultifield2(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;d=b=f;c=0>=b>>>0?3:4;break;case 3:d=1;c=4;break;case 4:c=500>(((d-1|0)<<3|0)+24|0)>>>0?5:6;break;case 5:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+24|0)<<2)|0)>>2]|0)?7:8;break;case 6:c=7;break;case 7:var e=_gm3(a,((d-1|0)<<3|0)+24|0);c=9;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-
1|0)<<3|0)+24|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+24|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=9;break;case 9:return c=e,HEAP32[(c+8|0)>>2]=b,HEAP16[(c+4|0)>>1]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]&65535,HEAP32[(c|0)>>2]=0,HEAP32[(c+12|0)>>2]=0,c;default:assert(0,"bad label: "+c)}}_CreateMultifield2.X=1;
function _AddToMultifieldList(h,f){HEAP16[(f+4|0)>>1]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+176|0)>>2]+12|0)>>2]&65535;HEAP32[(f+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+204|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+204|0)>>2]|0)>>2]=f;var c=HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+16|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+20|0;HEAP32[c>>2]=HEAP32[c>>2]+((HEAP32[(f+8|0)>>2]<<3|0)+24|0)|0}_AddToMultifieldList.X=1;
function _ReturnMultifield(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=11;break;case 4:c=0==(HEAP32[(b+8|0)>>2]|0)?5:6;break;case 5:d=1;c=7;break;case 6:d=HEAP32[(b+8|0)>>2];c=7;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]=((d-1|0)<<3|0)+24|0;c=500>HEAPU32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]>>>0?8:9;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+28|0)>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 9:_rm3(a,b,((d-1|0)<<3|0)+24|0);c=10;break;case 10:c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_ReturnMultifield.X=1;
function _MultifieldInstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=8;break;case 4:d=HEAP32[(b+8|0)>>2];c=b|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;g=b+16|0;e=0;c=5;break;case 5:c=e>>>0<d>>>0?6:8;break;case 6:_AtomInstall(a,HEAPU16[(g+(e<<3)|0)>>1]&65535,HEAP32[((g+(e<<3)|0)+4|0)>>2]);c=7;break;case 7:e=e+1|0;c=5;break;case 8:return;default:assert(0,"bad label: "+c)}}
function _MultifieldDeinstall(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=8;break;case 4:d=HEAP32[(b+8|0)>>2];c=b|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;g=b+16|0;e=0;c=5;break;case 5:c=e>>>0<d>>>0?6:8;break;case 6:_AtomDeinstall(a,HEAPU16[(g+(e<<3)|0)>>1]&65535,HEAP32[((g+(e<<3)|0)+4|0)>>2]);c=7;break;case 7:e=e+1|0;c=5;break;case 8:return;default:assert(0,"bad label: "+c)}}
function _StringToMultifield(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c,e,g,i,j,k,l;b=h;a=f;k=j=i=0;_OpenStringSource(b,STRING_TABLE.__str3057|0,a,0);_GetToken(b,STRING_TABLE.__str3057|0,d);a=3;break;case 3:a=172!=(HEAPU16[(d|0)>>1]&65535|0)?4:15;break;case 4:a=2==(HEAPU16[(d|0)>>1]&65535|0)?9:5;break;case 5:a=3==(HEAPU16[(d|0)>>1]&65535|0)?9:6;break;case 6:a=0==(HEAPU16[(d|0)>>
1]&65535|0)?9:7;break;case 7:a=1==(HEAPU16[(d|0)>>1]&65535|0)?9:8;break;case 8:a=8==(HEAPU16[(d|0)>>1]&65535|0)?9:10;break;case 9:l=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);a=11;break;case 10:l=b;a=_EnvAddSymbol(b,HEAP32[(d+8|0)>>2]);l=_GenConstant(l,3,a);a=11;break;case 11:i=i+1|0;a=0==(j|0)?12:13;break;case 12:j=l;a=14;break;case 13:HEAP32[(k+12|0)>>2]=l;a=14;break;case 14:k=l;_GetToken(b,STRING_TABLE.__str3057|0,d);a=3;break;case 15:_CloseStringSource(b,STRING_TABLE.__str3057|0);e=_EnvCreateMultifield(b,
i);g=e+16|0;l=j;i=0;a=16;break;case 16:a=0!=(l|0)?17:18;break;case 17:HEAP16[(g+(i<<3)|0)>>1]=HEAP16[(l|0)>>1];HEAP32[((g+(i<<3)|0)+4|0)>>2]=HEAP32[(l+4|0)>>2];i=i+1|0;l=HEAP32[(l+12|0)>>2];a=16;break;case 18:return _ReturnExpression(b,j),b=e,STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_StringToMultifield.X=1;
function _EnvCreateMultifield(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0>=b>>>0?3:4;break;case 3:d=1;c=5;break;case 4:d=b;c=5;break;case 5:c=500>(((d-1|0)<<3|0)+24|0)>>>0?6:7;break;case 6:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+24|0)<<2)|0)>>2]|0)?8:9;break;case 7:c=8;break;case 8:var e=_gm3(a,((d-1|0)<<3|0)+24|0);c=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+24|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((d-1|0)<<3|0)+24|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:return c=e,HEAP32[(c+8|0)>>2]=b,HEAP16[(c+4|0)>>1]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+12|0)>>2]&65535,HEAP32[(c|0)>>2]=0,HEAP32[(c+12|0)>>2]=0,HEAP32[(c+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+204|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+204|0)>>2]|0)>>2]=c,b=HEAP32[(HEAP32[(a+16|0)>>2]+220|0)>>2]+16|0,HEAP32[b>>2]=HEAP32[b>>2]+1|0,a=HEAP32[(HEAP32[(a+16|0)>>2]+220|0)>>2]+20|0,HEAP32[a>>2]=HEAP32[a>>2]+((d<<3|0)+24|0)|0,c;default:assert(0,"bad label: "+c)}}_EnvCreateMultifield.X=1;
function _DOToMultifield(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=4!=(HEAPU16[(d+4|0)>>1]&65535|0)?3:4;break;case 3:a=0;c=5;break;case 4:c=_CreateMultifield2(b,(HEAP32[(d+16|0)>>2]-HEAP32[(d+12|0)>>2]|0)+1|0);e=HEAP32[(d+8|0)>>2];a=c+16|0;e=(e+16|0)+(((HEAP32[(d+12|0)>>2]+1|0)-1|0)<<3)|0;var g=HEAP32[(c+8|0)>>2]<<3|0;assert(0===g%1,"memcpy given "+g+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,e,g,1);a=c;c=5;break;case 5:return a;default:assert(0,"bad label: "+
c)}}_DOToMultifield.X=1;
function _FlushMultifields(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;d=0;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+204|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:18;break;case 4:b=HEAP32[(a+12|0)>>2];f=(HEAP16[(a+4|0)>>1]<<16>>16|0)>(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?5:16;break;case 5:f=0==(HEAP32[(a|0)>>2]|0)?6:16;break;case 6:f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+16|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+20|0;HEAP32[f>>2]=HEAP32[f>>
2]-((HEAP32[(a+8|0)>>2]<<3|0)+24|0)|0;f=0==(HEAP32[(a+8|0)>>2]|0)?7:8;break;case 7:e=1;f=9;break;case 8:e=HEAP32[(a+8|0)>>2];f=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+28|0)>>2]=((e-1|0)<<3|0)+24|0;f=500>HEAPU32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+28|0)>>2]>>>0?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+
(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+28|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+28|0)>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=12;break;case 11:_rm3(c,a,((e-1|0)<<3|0)+24|0);f=12;break;case 12:f=0==(d|0)?13:14;break;case 13:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+204|0)>>2]|0)>>2]=b;f=15;break;case 14:HEAP32[(d+12|0)>>2]=b;f=15;break;case 15:f=17;break;case 16:d=a;f=17;
break;case 17:a=b;f=3;break;case 18:return;default:assert(0,"bad label: "+f)}}_FlushMultifields.X=1;
function _DuplicateMultifield(h,f,c){HEAP16[(f+4|0)>>1]=4;HEAP32[(f+12|0)>>2]=0;HEAP32[(f+16|0)>>2]=HEAP32[(c+16|0)>>2]-HEAP32[(c+12|0)>>2]|0;h=_CreateMultifield2(h,HEAP32[(f+16|0)>>2]+1|0);HEAP32[(f+8|0)>>2]=h;h=HEAP32[(f+8|0)>>2]+16|0;c=(HEAP32[(c+8|0)>>2]+16|0)+(HEAP32[(c+12|0)>>2]<<3)|0;f=(HEAP32[(f+16|0)>>2]+1|0)<<3|0;assert(0===f%1,"memcpy given "+f+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(h,c,f,1)}_DuplicateMultifield.X=1;
function _CopyMultifield(h,f){var c;c=_CreateMultifield2(h,HEAP32[(f+8|0)>>2]);var a=c+16|0,b=f+16|0,d=HEAP32[(f+8|0)>>2]<<3|0;assert(0===d%1,"memcpy given "+d+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,b,d,1);return c}
function _PrintMultifield(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n;g=h;i=f;e=c;j=a;k=b;l=d;m=e+16|0;e=0!=(l|0)?3:4;break;case 3:_EnvPrintRouter(g,i,STRING_TABLE.__str13058|0);e=4;break;case 4:n=j;e=5;break;case 5:e=(n|0)<=(k|0)?6:9;break;case 6:_PrintAtom(g,i,HEAPU16[(m+(n<<3)|0)>>1]&65535,HEAP32[((m+(n<<3)|0)+4|0)>>2]);n=n+1|0;e=(n|0)<=(k|0)?7:8;break;case 7:_EnvPrintRouter(g,i,STRING_TABLE.__str23059|0);e=8;break;case 8:e=5;break;case 9:e=0!=(l|0)?10:11;break;case 10:_EnvPrintRouter(g,
i,STRING_TABLE.__str33060|0);e=11;break;case 11:return;default:assert(0,"bad label: "+e)}}_PrintMultifield.X=1;
function _StoreInMultifield(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m,n,o,p,q,r,s,t,u;e=h;g=f;i=c;j=a;t=_CountArguments(i);d=0==(t|0)?3:7;break;case 3:HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=-1;d=0!=(j|0)?4:5;break;case 4:m=_EnvCreateMultifield(e,0);d=6;break;case 5:m=_CreateMultifield2(e,0);d=6;break;case 6:HEAP32[(g+8|0)>>2]=m;d=39;break;
case 7:l=_gm3(e,24*t|0);u=0;q=1;d=8;break;case 8:d=(q|0)<=(t|0)?9:22;break;case 9:_EvaluateExpression(e,i,k);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?10:14;break;case 10:HEAP16[(g+4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=-1;d=0!=(j|0)?11:12;break;case 11:m=_EnvCreateMultifield(e,0);d=13;break;case 12:m=_CreateMultifield2(e,0);d=13;break;case 13:HEAP32[(g+8|0)>>2]=m;_rm3(e,l,24*t|0);d=39;break;case 14:HEAP16[(((l+24*q|0)-24|0)+4|0)>>1]=HEAP16[(k+4|0)>>1];d=4==(HEAPU16[(k+
4|0)>>1]&65535|0)?15:16;break;case 15:HEAP32[(((l+24*q|0)-24|0)+8|0)>>2]=HEAP32[(k+8|0)>>2];o=HEAP32[(k+12|0)>>2]+1|0;p=HEAP32[(k+16|0)>>2]+1|0;d=20;break;case 16:d=175==(HEAPU16[(k+4|0)>>1]&65535|0)?17:18;break;case 17:HEAP32[(((l+24*q|0)-24|0)+8|0)>>2]=HEAP32[(k+8|0)>>2];o=1;p=0;d=19;break;case 18:HEAP32[(((l+24*q|0)-24|0)+8|0)>>2]=HEAP32[(k+8|0)>>2];o=p=-1;d=19;break;case 19:d=20;break;case 20:u=u+((p-o|0)+1|0)|0;HEAP32[(((l+24*q|0)-24|0)+12|0)>>2]=o-1|0;HEAP32[(((l+24*q|0)-24|0)+16|0)>>2]=p-1|
0;d=21;break;case 21:q=q+1|0;i=HEAP32[(i+12|0)>>2];d=8;break;case 22:d=0!=(j|0)?23:24;break;case 23:m=_EnvCreateMultifield(e,u);d=25;break;case 24:m=_CreateMultifield2(e,u);d=25;break;case 25:s=0;r=1;d=26;break;case 26:d=(s|0)<(t|0)?27:38;break;case 27:d=4==(HEAPU16[((l+24*s|0)+4|0)>>1]&65535|0)?28:33;break;case 28:o=HEAP32[((l+24*s|0)+12|0)>>2]+1|0;p=HEAP32[((l+24*s|0)+16|0)>>2]+1|0;n=HEAP32[((l+24*s|0)+8|0)>>2];q=o;d=29;break;case 29:d=(q|0)<(p+1|0)?30:32;break;case 30:HEAP16[((m+16|0)+((r-1|0)<<
3)|0)>>1]=HEAP16[((n+16|0)+((q-1|0)<<3)|0)>>1];HEAP32[(((m+16|0)+((r-1|0)<<3)|0)+4|0)>>2]=HEAP32[(((n+16|0)+((q-1|0)<<3)|0)+4|0)>>2];d=31;break;case 31:q=q+1|0;r=r+1|0;d=29;break;case 32:d=36;break;case 33:d=4!=(HEAPU16[((l+24*s|0)+4|0)>>1]&65535|0)?34:35;break;case 34:HEAP16[((m+16|0)+((r-1|0)<<3)|0)>>1]=HEAP16[((l+24*s|0)+4|0)>>1];HEAP32[(((m+16|0)+((r-1|0)<<3)|0)+4|0)>>2]=HEAP32[((l+24*s|0)+8|0)>>2];r=r+1|0;d=35;break;case 35:d=36;break;case 36:d=37;break;case 37:s=s+1|0;d=26;break;case 38:HEAP16[(g+
4|0)>>1]=4;HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=u-1|0;HEAP32[(g+8|0)>>2]=m;_rm3(e,l,24*t|0);d=39;break;case 39:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_StoreInMultifield.X=1;
function _MultifieldDOsEqual(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=(HEAP32[(b+16|0)>>2]-HEAP32[(b+12|0)>>2]|0)+1|0;c=(e|0)!=((HEAP32[(d+16|0)>>2]-HEAP32[(d+12|0)>>2]|0)+1|0)?3:4;break;case 3:a=0;c=14;break;case 4:g=(HEAP32[(b+8|0)>>2]+16|0)+(((HEAP32[(b+12|0)>>2]+1|0)-1|0)<<3)|0;i=(HEAP32[(d+8|0)>>2]+16|0)+(((HEAP32[(d+12|0)>>2]+1|0)-1|0)<<3)|0;c=5;break;case 5:c=0!=(e|0)?6:13;break;case 6:c=(HEAPU16[(g|0)>>1]&65535|0)!=(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:a=0;c=
14;break;case 8:c=(HEAP32[(g+4|0)>>2]|0)!=(HEAP32[(i+4|0)>>2]|0)?9:10;break;case 9:a=0;c=14;break;case 10:e=e-1|0;c=0<(e|0)?11:12;break;case 11:g=g+8|0;i=i+8|0;c=12;break;case 12:c=5;break;case 13:a=1;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_MultifieldDOsEqual.X=1;function _GetMultifieldList(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+204|0)>>2]|0)>>2]}
function _MultifieldsEqual(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;j=0;i=HEAP32[(b+8|0)>>2];c=(i|0)!=(HEAP32[(d+8|0)>>2]|0)?3:4;break;case 3:a=0;c=17;break;case 4:e=b+16|0;g=d+16|0;c=5;break;case 5:c=j>>>0<i>>>0?6:16;break;case 6:c=(HEAPU16[(e+(j<<3)|0)>>1]&65535|0)!=(HEAPU16[(g+(j<<3)|0)>>1]&65535|0)?7:8;break;case 7:a=0;c=17;break;case 8:c=4==(HEAPU16[(e+(j<<3)|0)>>1]&65535|0)?9:12;break;case 9:c=0==(_MultifieldsEqual(HEAP32[((e+(j<<3)|0)+4|0)>>2],HEAP32[((g+(j<<3)|0)+4|
0)>>2])|0)?10:11;break;case 10:a=0;c=17;break;case 11:c=15;break;case 12:c=(HEAP32[((e+(j<<3)|0)+4|0)>>2]|0)!=(HEAP32[((g+(j<<3)|0)+4|0)>>2]|0)?13:14;break;case 13:a=0;c=17;break;case 14:c=15;break;case 15:j=j+1|0;c=5;break;case 16:a=1;c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}_MultifieldsEqual.X=1;
function _HashMultifield(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j=c;b=h;d=f;g=0;e=HEAP32[(b+8|0)>>2];i=b+16|0;b=0;a=3;break;case 3:a=b>>>0<e>>>0?4:12;break;case 4:a=HEAPU16[(i+(b<<3)|0)>>1]&65535;a=4==(a|0)?5:0==(a|0)?6:1==(a|0)?7:6==(a|0)||5==(a|0)||7==(a|0)?8:2==(a|0)||3==(a|0)||8==(a|0)?9:10;break;case 5:a=_HashMultifield(HEAP32[((i+(b<<3)|0)+4|0)>>2],d);g=g+a|0;a=10;
break;case 6:a=HEAP32[((i+(b<<3)|0)+4|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);var k=j;tempDoubleF64[0]=a;HEAP32[k>>2]=tempDoubleI32[0];HEAP32[k+4>>2]=tempDoubleI32[1];a=HEAP32[j>>2]*(b+29|0)|0;k=HEAP32[((i+(b<<3)|0)+4|0)>>2]+16|0;k=(tempDoubleI32[0]=HEAP32[k>>2],tempDoubleI32[1]=HEAP32[k+4>>2],tempDoubleF64[0])&-1;g=g+(a+k|0)|0;a=10;break;case 7:g=g+((HEAP32[(HEAP32[((i+(b<<3)|0)+4|0)>>2]+16|0)>>2]*(b+29|0)|0)+HEAP32[(HEAP32[((i+(b<<3)|0)+4|0)>>
2]+16|0)>>2]|0)|0;a=10;break;case 8:g=g+(HEAP32[((i+(b<<3)|0)+4|0)>>2]*(b+29|0)|0)|0;a=10;break;case 9:a=_HashSymbol(HEAP32[(HEAP32[((i+(b<<3)|0)+4|0)>>2]+16|0)>>2],d);g=g+(a*(b+29|0)|0)|0;a=10;break;case 10:a=11;break;case 11:b=b+1|0;a=3;break;case 12:return d=g,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_HashMultifield.X=1;
function _ImplodeMultifield(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l;b=h;d=f;e=0;l=HEAP32[(d+8|0)>>2];g=HEAP32[(d+12|0)>>2]+1|0;c=3;break;case 3:c=(g|0)<=(HEAP32[(d+16|0)>>2]+1|0)?4:29;break;case 4:c=0==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?5:6;break;case 5:j=b;c=HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=_FloatToString(j,c);c=_strlen(j)+1|0;e=e+c|0;c=27;break;case 6:c=1==(HEAPU16[((l+
16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?7:8;break;case 7:j=_LongIntegerToString(b,HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2]);c=_strlen(j)+1|0;e=e+c|0;c=26;break;case 8:c=3==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?9:18;break;case 9:j=_strlen(HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2])+3|0;e=e+j|0;j=HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];c=10;break;case 10:c=0!=HEAP8[j]<<24>>24?11:17;break;case 11:c=34==(HEAP8[j]<<24>>24|0)?12:13;break;case 12:e=
e+1|0;c=16;break;case 13:c=92==(HEAP8[j]<<24>>24|0)?14:15;break;case 14:e=e+1|0;c=15;break;case 15:c=16;break;case 16:j=j+1|0;c=10;break;case 17:c=25;break;case 18:c=8==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?19:20;break;case 19:c=_strlen(HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2])+3|0;e=e+c|0;c=24;break;case 20:c=7==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?21:22;break;case 21:c=_strlen(HEAP32[(HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+28|0)>>2]+16|0)>>2])+
3|0;e=e+c|0;c=23;break;case 22:c=_strlen(HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2])+1|0;e=e+c|0;c=23;break;case 23:c=24;break;case 24:c=25;break;case 25:c=26;break;case 26:c=27;break;case 27:c=28;break;case 28:g=g+1|0;c=3;break;case 29:c=0==(e|0)?30:31;break;case 30:a=_EnvAddSymbol(b,__str43061|0);c=74;break;case 31:k=_gm2(b,e);i=0;g=HEAP32[(d+12|0)>>2]+1|0;c=32;break;case 32:c=(g|0)<=(HEAP32[(d+16|0)>>2]+1|0)?33:73;break;case 33:c=0==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|
0)?34:38;break;case 34:j=b;c=HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=_FloatToString(j,c);c=35;break;case 35:c=0!=HEAP8[j]<<24>>24?36:37;break;case 36:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=35;break;case 37:c=71;break;case 38:c=1==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?39:43;break;case 39:j=_LongIntegerToString(b,HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2]);c=40;break;case 40:c=0!=
HEAP8[j]<<24>>24?41:42;break;case 41:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=40;break;case 42:c=70;break;case 43:c=3==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?44:53;break;case 44:j=HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];HEAP8[k+i|0]=34;i=i+1|0;c=45;break;case 45:c=0!=HEAP8[j]<<24>>24?46:52;break;case 46:c=34==(HEAP8[j]<<24>>24|0)?47:48;break;case 47:HEAP8[k+i|0]=92;i=i+1|0;c=51;break;case 48:c=92==(HEAP8[j]<<24>>24|0)?49:50;break;case 49:HEAP8[k+i|0]=92;i=i+1|0;c=50;break;
case 50:c=51;break;case 51:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=45;break;case 52:HEAP8[k+i|0]=34;i=i+1|0;c=69;break;case 53:c=8==(HEAPU16[((l+16|0)+((g-1|0)<<3)|0)>>1]&65535|0)?54:58;break;case 54:j=HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];c=k;var m=i;i=m+1|0;HEAP8[c+m|0]=91;c=55;break;case 55:c=0!=HEAP8[j]<<24>>24?56:57;break;case 56:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=55;break;case 57:c=k;m=i;i=m+1|0;HEAP8[c+m|0]=93;c=68;break;case 58:c=7==(HEAPU16[((l+16|0)+((g-1|0)<<
3)|0)>>1]&65535|0)?59:63;break;case 59:j=HEAP32[(HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+28|0)>>2]+16|0)>>2];c=k;m=i;i=m+1|0;HEAP8[c+m|0]=91;c=60;break;case 60:c=0!=HEAP8[j]<<24>>24?61:62;break;case 61:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=60;break;case 62:c=k;m=i;i=m+1|0;HEAP8[c+m|0]=93;c=67;break;case 63:j=HEAP32[(HEAP32[(((l+16|0)+((g-1|0)<<3)|0)+4|0)>>2]+16|0)>>2];c=64;break;case 64:c=0!=HEAP8[j]<<24>>24?65:66;break;case 65:HEAP8[k+i|0]=HEAP8[j];i=i+1|0;j=j+1|0;c=64;break;case 66:c=
67;break;case 67:c=68;break;case 68:c=69;break;case 69:c=70;break;case 70:c=71;break;case 71:HEAP8[k+i|0]=32;i=i+1|0;c=72;break;case 72:g=g+1|0;c=32;break;case 73:HEAP8[(k+i|0)-1|0]=0;a=_EnvAddSymbol(b,k);_rm(b,k,e);c=74;break;case 74:return a;default:assert(0,"bad label: "+c)}}_ImplodeMultifield.X=1;
function _MultifieldFunctionDefinitions(h){_AllocateEnvironmentData(h,10,4,0);_EnvDefineFunction2(h,STRING_TABLE.__str3090|0,109,1182,STRING_TABLE.__str13091|0,STRING_TABLE.__str23092|0);_EnvDefineFunction2(h,STRING_TABLE.__str33093|0,109,1184,STRING_TABLE.__str43094|0,STRING_TABLE.__str23092|0);_EnvDefineFunction2(h,STRING_TABLE.__str53095|0,109,1186,STRING_TABLE.__str63096|0,STRING_TABLE.__str73097|0);_EnvDefineFunction2(h,STRING_TABLE.__str83098|0,109,1188,STRING_TABLE.__str93099|0,STRING_TABLE.__str103100|
0);_EnvDefineFunction2(h,STRING_TABLE.__str113101|0,109,1190,STRING_TABLE.__str123102|0,STRING_TABLE.__str133103|0);_EnvDefineFunction2(h,STRING_TABLE.__str143104|0,109,1192,STRING_TABLE.__str153105|0,STRING_TABLE.__str73097|0);_EnvDefineFunction2(h,STRING_TABLE.__str163106|0,109,1194,STRING_TABLE.__str173107|0,STRING_TABLE.__str183108|0);_EnvDefineFunction2(h,STRING_TABLE.__str193109|0,109,1196,STRING_TABLE.__str203110|0,STRING_TABLE.__str213111|0);_EnvDefineFunction2(h,STRING_TABLE.__str223112|
0,109,1198,STRING_TABLE.__str233113|0,STRING_TABLE.__str243114|0);_EnvDefineFunction2(h,STRING_TABLE.__str253115|0,115,1200,STRING_TABLE.__str263116|0,STRING_TABLE.__str23092|0);_EnvDefineFunction2(h,STRING_TABLE.__str273117|0,117,1202,STRING_TABLE.__str283118|0,STRING_TABLE.__str293119|0);_EnvDefineFunction2(h,STRING_TABLE.__str303120|0,117,1204,STRING_TABLE.__str313121|0,STRING_TABLE.__str323122|0);_EnvDefineFunction2(h,STRING_TABLE.__str333123|0,98,1206,STRING_TABLE.__str343124|0,STRING_TABLE.__str353125|
0);_EnvDefineFunction2(h,STRING_TABLE.__str363126|0,117,1208,STRING_TABLE.__str373127|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str383128|0,115,1200,STRING_TABLE.__str263116|0,STRING_TABLE.__str23092|0);_EnvDefineFunction2(h,STRING_TABLE.__str393129|0,109,1198,STRING_TABLE.__str233113|0,STRING_TABLE.__str243114|0);_EnvDefineFunction2(h,STRING_TABLE.__str403130|0,98,1206,STRING_TABLE.__str343124|0,STRING_TABLE.__str353125|0);_EnvDefineFunction2(h,STRING_TABLE.__str413131|0,117,1202,STRING_TABLE.__str283118|
0,STRING_TABLE.__str293119|0);_EnvDefineFunction2(h,STRING_TABLE.__str423132|0,109,1210,STRING_TABLE.__str433133|0,STRING_TABLE.__str443134|0);_EnvDefineFunction2(h,STRING_TABLE.__str453135|0,117,1204,STRING_TABLE.__str313121|0,STRING_TABLE.__str323122|0);_EnvDefineFunction2(h,STRING_TABLE.__str463136|0,109,1212,STRING_TABLE.__str473137|0,STRING_TABLE.__str483138|0);_EnvDefineFunction2(h,STRING_TABLE.__str493139|0,109,1214,STRING_TABLE.__str503140|0,STRING_TABLE.__str293119|0);_AddFunctionParser(h,
STRING_TABLE.__str363126|0,1216);_FuncSeqOvlFlags(h,STRING_TABLE.__str363126|0,0,0);_EnvDefineFunction2(h,STRING_TABLE.__str513141|0,117,1218,STRING_TABLE.__str523142|0,STRING_TABLE.__str533143|0);_EnvDefineFunction2(h,STRING_TABLE.__str543144|0,108,1220,STRING_TABLE.__str553145|0,STRING_TABLE.__str533143|0)}_MultifieldFunctionDefinitions.X=1;
function _FirstFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str3090|0,1,4,e)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=8;break;case 4:a=HEAP32[(e+8|0)>>2];HEAP16[(d+4|0)>>1]=4;HEAP32[(d+8|0)>>2]=a;a=(HEAP32[(e+16|0)>>2]+1|0)>=(HEAP32[(e+12|0)>>2]+1|0)?5:6;break;case 5:HEAP32[(d+16|0)>>2]=(HEAP32[(e+12|0)>>2]+
1|0)-1|0;a=7;break;case 6:HEAP32[(d+16|0)>>2]=(HEAP32[(e+16|0)>>2]+1|0)-1|0;a=7;break;case 7:HEAP32[(d+12|0)>>2]=(HEAP32[(e+12|0)>>2]+1|0)-1|0;a=8;break;case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_FirstFunction.X=1;
function _RestFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str33093|0,1,4,e)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=8;break;case 4:a=HEAP32[(e+8|0)>>2];HEAP16[(d+4|0)>>1]=4;HEAP32[(d+8|0)>>2]=a;a=(HEAP32[(e+12|0)>>2]+1|0)>(HEAP32[(e+16|0)>>2]+1|0)?5:6;break;case 5:HEAP32[(d+12|0)>>2]=(HEAP32[(e+12|0)>>2]+
1|0)-1|0;a=7;break;case 6:HEAP32[(d+12|0)>>2]=((HEAP32[(e+12|0)>>2]+1|0)+1|0)-1|0;a=7;break;case 7:HEAP32[(d+16|0)>>2]=(HEAP32[(e+16|0)>>2]+1|0)-1|0;a=8;break;case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_RestFunction.X=1;
function _SubseqFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k,l;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str53095|0,1,4,e)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 4:g=HEAP32[(e+8|0)>>2];i=HEAP32[(e+12|0)>>2]+1|0;l=(HEAP32[(e+16|0)>>2]-HEAP32[(e+12|0)>>2]|0)+1|0;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str53095|0,2,1,e)|0)?5:6;
break;case 5:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 6:j=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str53095|0,3,1,e)|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 8:k=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=1>(k|0)?10:9;break;case 9:a=(k|0)<(j|0)?10:11;break;case 10:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 11:a=(j|0)>(l|0)?12:13;break;case 12:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 13:a=(k|0)>(l|0)?14:15;break;case 14:k=
l;a=15;break;case 15:a=1>(j|0)?16:17;break;case 16:j=1;a=17;break;case 17:HEAP16[(d+4|0)>>1]=4;HEAP32[(d+8|0)>>2]=g;HEAP32[(d+16|0)>>2]=((i+k|0)-1|0)-1|0;HEAP32[(d+12|0)>>2]=((i+j|0)-1|0)-1|0;a=18;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SubseqFunction.X=1;
function _DeleteMemberFunction(h,f){var c=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+24,j,k,l,m=c+48,n=c+52;b=h;d=f;k=_EnvArgCountCheck(b,STRING_TABLE.__str83098|0,1,2);a=-1==(k|0)?3:4;break;case 3:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=18;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str83098|0,1,4,e)|0)?5:6;break;case 5:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,
d);a=18;break;case 6:l=24*(k-1|0)|0;g=_gm2(b,l);j=2;a=7;break;case 7:a=(j|0)<=(k|0)?8:12;break;case 8:a=0!=(_EnvRtnUnknown(b,j,g+24*(j-2|0)|0)|0)?10:9;break;case 9:_rm(b,g,l);_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=18;break;case 10:a=11;break;case 11:j=j+1|0;a=7;break;case 12:a=13;break;case 13:a=0!=(_FindDOsInSegment(g,k-1|0,e,m,n,0,0)|0)?14:17;break;case 14:a=0==(_DeleteMultiValueField(b,i,e,HEAP32[m>>2],HEAP32[n>>2],STRING_TABLE.__str83098|0)|0)?15:16;break;case 15:_rm(b,g,
l);_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=18;break;case 16:a=e;var o=i;assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,o,24,1);a=13;break;case 17:_rm(b,g,l);a=d;o=e;assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,o,24,1);a=18;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_DeleteMemberFunction.X=1;
function _ReplaceMemberFunction(h,f){var c=STACKTOP;STACKTOP+=88;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i,j=c+48,k,l,m,n=c+72,o=c+76,p=c+80,q,r;b=h;d=f;r=1;l=_EnvArgCountCheck(b,STRING_TABLE.__str113101|0,1,3);a=-1==(l|0)?3:4;break;case 3:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=22;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str113101|0,1,4,e)|0)?5:6;break;case 5:_SetEvaluationError(b,
1);_EnvSetMultifieldErrorValue(b,d);a=22;break;case 6:a=0!=(_EnvRtnUnknown(b,2,g)|0)?8:7;break;case 7:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=22;break;case 8:a=4==(HEAPU16[(g+4|0)>>1]&65535|0)?9:10;break;case 9:r=(HEAP32[(g+16|0)>>2]-HEAP32[(g+12|0)>>2]|0)+1|0;a=10;break;case 10:m=24*(l-2|0)|0;i=_gm2(b,m);k=3;a=11;break;case 11:a=(k|0)<=(l|0)?12:16;break;case 12:a=0!=(_EnvRtnUnknown(b,k,i+24*(k-3|0)|0)|0)?14:13;break;case 13:_rm(b,i,m);_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,
d);a=22;break;case 14:a=15;break;case 15:k=k+1|0;a=11;break;case 16:q=0;a=17;break;case 17:a=0!=(_FindDOsInSegment(i,l-2|0,e,n,o,q,0!=(q|0)?1:0)|0)?18:21;break;case 18:a=0==(_ReplaceMultiValueField(b,j,e,HEAP32[n>>2],HEAP32[o>>2],g,STRING_TABLE.__str113101|0)|0)?19:20;break;case 19:_rm(b,i,m);_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=22;break;case 20:q=e;a=j;assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(q,a,24,1);HEAP32[(p|0)>>2]=
1;HEAP32[(p+4|0)>>2]=(HEAP32[n>>2]+r|0)-1|0;q=p|0;a=17;break;case 21:_rm(b,i,m);a=d;var s=e;assert(!0,"memcpy given 24 bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,s,24,1);a=22;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReplaceMemberFunction.X=1;
function _DeleteFunction(h,f){var c=STACKTOP;STACKTOP+=72;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str143104|0,1,4,e)|0)?5:3;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str143104|0,2,1,g)|0)?5:4;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str143104|0,3,1,i)|0)?5:6;break;case 5:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,
d);a=8;break;case 6:a=0==(_DeleteMultiValueField(b,d,e,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],STRING_TABLE.__str143104|0)|0)?7:8;break;case 7:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=8;break;case 8:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _ReplaceFunction(h,f){var c=STACKTOP;STACKTOP+=96;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48,j=c+72,k;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str163106|0,1,4,e)|0)?5:3;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str163106|0,2,1,g)|0)?5:4;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str163106|0,3,1,i)|0)?5:6;break;case 5:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,
d);a=11;break;case 6:k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2]+12|0)>>2];a=0!=(HEAP32[(k+12|0)>>2]|0)?7:8;break;case 7:_StoreInMultifield(b,j,k,1);a=9;break;case 8:_EvaluateExpression(b,k,j);a=9;break;case 9:a=0==(_ReplaceMultiValueField(b,d,e,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],j,STRING_TABLE.__str163106|0)|0)?10:11;break;case 10:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,
d);a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ReplaceFunction.X=1;
function _InsertFunction(h,f){var c=STACKTOP;STACKTOP+=72;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48,j;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str193109|0,1,4,e)|0)?4:3;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str193109|0,2,1,g)|0)?4:5;break;case 4:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=10;break;case 5:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2];a=0!=(HEAP32[(j+12|0)>>2]|0)?6:7;break;case 6:_StoreInMultifield(b,i,j,1);a=8;break;case 7:_EvaluateExpression(b,j,i);a=8;break;case 8:a=0==(_InsertMultiValueField(b,d,e,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],i,STRING_TABLE.__str193109|0)|0)?9:10;break;case 9:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_InsertFunction.X=1;
function _ExplodeFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str223112|0,0,1)|0)?3:4;break;case 3:_SetHaltExecution(b,1);_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=10;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str223112|0,1,3,e)|0)?5:6;break;case 5:_SetHaltExecution(b,1);_SetEvaluationError(b,
1);_EnvSetMultifieldErrorValue(b,d);a=10;break;case 6:g=_StringToMultifield(b,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=0==(g|0)?7:8;break;case 7:g=_EnvCreateMultifield(b,0);i=0;a=9;break;case 8:i=HEAP32[(g+8|0)>>2];a=9;break;case 9:HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=i-1|0;HEAP32[(d+8|0)>>2]=g;a=10;break;case 10:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_ExplodeFunction.X=1;
function _ImplodeFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str253115|0,0,1)|0)?3:4;break;case 3:a=_EnvAddSymbol(b,__str563146|0);c=7;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str253115|0,1,4,d)|0)?5:6;break;case 5:a=_EnvAddSymbol(b,__str563146|0);c=7;break;case 6:a=_ImplodeMultifield(b,d);c=7;break;case 7:return h=
a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _NthFunction(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str273117|0,0,2)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str573147|0);HEAP32[(d+8|0)>>2]=a;a=11;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str273117|0,1,1,e)|0)?6:5;break;case 5:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str273117|
0,2,4,g)|0)?6:7;break;case 6:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str573147|0);HEAP32[(d+8|0)>>2]=a;a=11;break;case 7:i=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=(i|0)>((HEAP32[(g+16|0)>>2]-HEAP32[(g+12|0)>>2]|0)+1|0)?9:8;break;case 8:a=1>(i|0)?9:10;break;case 9:HEAP16[(d+4|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str573147|0);HEAP32[(d+8|0)>>2]=a;a=11;break;case 10:a=HEAP32[(g+8|0)>>2];HEAP16[(d+4|0)>>1]=HEAP16[((a+16|0)+((((i+(HEAP32[(g+12|0)>>2]+1|0)|0)-1|0)-1|0)<<3)|0)>>1];HEAP32[(d+
8|0)>>2]=HEAP32[(((a+16|0)+((((i+(HEAP32[(g+12|0)>>2]+1|0)|0)-1|0)-1|0)<<3)|0)+4|0)>>2];a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_NthFunction.X=1;
function _MemberFunction(h,f){var c=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48,j=c+52;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str303120|0,0,2)|0)?3:4;break;case 3:a=11;break;case 4:_EnvRtnUnknown(b,1,e);a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str303120|0,2,4,g)|0)?5:6;
break;case 5:a=11;break;case 6:a=0!=(_FindDOsInSegment(e,1,g,i,j,0,0)|0)?7:11;break;case 7:a=(HEAP32[i>>2]|0)==(HEAP32[j>>2]|0)?8:9;break;case 8:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,HEAP32[i>>2]);HEAP32[(d+8|0)>>2]=a;a=10;break;case 9:HEAP16[(d+4|0)>>1]=4;a=_EnvCreateMultifield(b,2);HEAP32[(d+8|0)>>2]=a;HEAP16[(HEAP32[(d+8|0)>>2]+16|0)>>1]=1;a=_EnvAddLong(b,HEAP32[i>>2]);HEAP32[((HEAP32[(d+8|0)>>2]+16|0)+4|0)>>2]=a;HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+8|0)>>1]=1;a=_EnvAddLong(b,HEAP32[j>>2]);HEAP32[(((HEAP32[(d+
8|0)>>2]+16|0)+8|0)+4|0)>>2]=a;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=1;a=10;break;case 10:a=11;break;case 11:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MemberFunction.X=1;
function _SubsetpFunction(h){var f=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24,g=f+48,i,j=f+72,k=f+76;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str333123|0,0,2)|0)?3:4;break;case 3:a=0;c=19;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str333123|0,1,4,d)|0)?5:6;break;case 5:a=0;c=19;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str333123|0,2,4,e)|0)?7:8;break;case 7:a=
0;c=19;break;case 8:c=0==((HEAP32[(d+16|0)>>2]-HEAP32[(d+12|0)>>2]|0)+1|0)?9:10;break;case 9:a=1;c=19;break;case 10:c=0==((HEAP32[(e+16|0)>>2]-HEAP32[(e+12|0)>>2]|0)+1|0)?11:12;break;case 11:a=0;c=19;break;case 12:i=HEAP32[(d+12|0)>>2]+1|0;c=13;break;case 13:c=(i|0)<=(HEAP32[(d+16|0)>>2]+1|0)?14:18;break;case 14:HEAP16[(g+4|0)>>1]=HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1];HEAP32[(g+8|0)>>2]=HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2];c=0!=(_FindDOsInSegment(g,1,e,j,k,0,
0)|0)?16:15;break;case 15:a=0;c=19;break;case 16:c=17;break;case 17:i=i+1|0;c=13;break;case 18:a=1;c=19;break;case 19:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SubsetpFunction.X=1;
function _MultifieldPrognFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j,k;b=h;d=f;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(b,16);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:k=l;HEAP16[(k|0)>>1]=2;HEAP32[(k+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(k+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+40|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+40|0)>>2]|0)>>2]=k;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+
4|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str363126|0,1,4,g)|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+40|0)>>2]|0)>>2]=HEAP32[(k+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=
24;break;case 7:_ValueInstall(b,g);j=HEAP32[(g+16|0)>>2]+1|0;i=HEAP32[(g+12|0)>>2]+1|0;a=8;break;case 8:a=(i|0)<=(j|0)?9:23;break;case 9:HEAP16[(k|0)>>1]=HEAP16[((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1];HEAP32[(k+4|0)>>2]=HEAP32[(((HEAP32[(g+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2];HEAP32[(k+8|0)>>2]=(i-(HEAP32[(g+12|0)>>2]+1|0)|0)+1|0;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=10;break;case 10:a=0!=(e|0)?11:21;break;case 11:a=HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_EvaluateExpression(b,e,d);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?12:13;break;case 12:_PropagateReturnValue(b,d);a=13;break;case 13:_PeriodicCleanup(b,0,1);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?16:14;break;case 14:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?16:15;break;case 15:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+52|0)>>2]|0)>>2]|0)?16:19;break;case 16:_ValueDeinstall(b,g);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?17:18;break;case 17:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=18;break;case 18:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+40|0)>>2]|0)>>2]=HEAP32[(k+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=24;break;case 19:a=20;break;case 20:e=HEAP32[(e+12|0)>>2];a=10;break;case 21:a=22;break;case 22:i=i+1|0;a=8;break;case 23:_ValueDeinstall(b,g);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+40|0)>>2]|0)>>2]=HEAP32[(k+
12|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=24;break;case 24:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MultifieldPrognFunction.X=1;
function _MVReplaceFunction(h,f){var c=STACKTOP;STACKTOP+=72;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i=c+48;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str423132|0,1,1,e)|0)?4:3;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str423132|0,2,4,g)|0)?4:5;break;case 4:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=7;break;case 5:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2],i);a=0==(_ReplaceMultiValueField(b,d,g,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],i,STRING_TABLE.__str423132|0)|0)?6:7;break;case 6:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MVReplaceFunction.X=1;
function _GetMvPrognField(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;a=f;b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+40|0)>>2]|0)>>2];c=3;break;case 3:c=0<(b|0)?4:5;break;case 4:d=HEAP32[(d+12|0)>>2];b=b-1|0;c=3;break;case 5:HEAP16[(a+4|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(a+8|0)>>2]=HEAP32[(d+4|0)>>2];return;default:assert(0,"bad label: "+c)}}_GetMvPrognField.X=1;
function _GetMvPrognIndex(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;c=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+40|0)>>2]|0)>>2];f=3;break;case 3:f=0<(c|0)?4:5;break;case 4:a=HEAP32[(a+12|0)>>2];c=c-1|0;f=3;break;case 5:return HEAP32[(a+8|0)>>2];default:assert(0,"bad label: "+f)}}
function _MVSubseqFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k,l;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str463136|0,1,1,e)|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 4:j=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str463136|0,2,1,e)|0)?5:6;break;case 5:_EnvSetMultifieldErrorValue(b,d);a=18;break;
case 6:k=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=1>(k|0)?8:7;break;case 7:a=(k|0)<(j|0)?8:9;break;case 8:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 9:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str463136|0,3,4,e)|0)?10:11;break;case 10:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 11:g=HEAP32[(e+8|0)>>2];i=HEAP32[(e+12|0)>>2]+1|0;l=(HEAP32[(e+16|0)>>2]-HEAP32[(e+12|0)>>2]|0)+1|0;a=(j|0)>(l|0)?12:13;break;case 12:_EnvSetMultifieldErrorValue(b,d);a=18;break;case 13:a=(k|0)>(l|0)?14:15;break;case 14:k=
l;a=15;break;case 15:a=1>(j|0)?16:17;break;case 16:j=1;a=17;break;case 17:HEAP16[(d+4|0)>>1]=4;HEAP32[(d+8|0)>>2]=g;HEAP32[(d+16|0)>>2]=((i+k|0)-1|0)-1|0;HEAP32[(d+12|0)>>2]=((i+j|0)-1|0)-1|0;a=18;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_MVSubseqFunction.X=1;
function _MVDeleteFunction(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24;b=h;d=f;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str493139|0,1,1,e)|0)?4:3;break;case 3:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str493139|0,2,4,g)|0)?4:5;break;case 4:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=7;break;case 5:a=0==(_DeleteMultiValueField(b,d,g,HEAP32[(HEAP32[(e+8|0)>>
2]+16|0)>>2],HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],STRING_TABLE.__str493139|0)|0)?6:7;break;case 6:_SetEvaluationError(b,1);_EnvSetMultifieldErrorValue(b,d);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _MultifieldPrognParser(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m=a,n;e=h;g=f;i=c;n=0;_SavePPBuffer(e,STRING_TABLE.__str663156|0);_GetToken(e,i,m);b=170!=(HEAPU16[(m|0)>>1]&65535|0)?3:6;break;case 3:b=_ParseAtomOrExpression(e,i,m);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?4:5;break;case 4:_ReturnExpression(e,g);d=0;b=36;break;case 5:b=18;break;case 6:_GetToken(e,
i,m);b=35!=(HEAPU16[(m|0)>>1]&65535|0)?7:12;break;case 7:b=2!=(HEAPU16[(m|0)>>1]&65535|0)?8:9;break;case 8:b=35;break;case 9:b=_Function2Parse(e,i,HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?10:11;break;case 10:_ReturnExpression(e,g);d=0;b=36;break;case 11:b=17;break;case 12:n=HEAP32[(m+4|0)>>2];_SavePPBuffer(e,STRING_TABLE.__str663156|0);b=_ParseAtomOrExpression(e,i,0);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?13:14;break;case 13:_ReturnExpression(e,
g);d=0;b=36;break;case 14:_GetToken(e,i,m);b=171!=(HEAPU16[(m|0)>>1]&65535|0)?15:16;break;case 15:b=35;break;case 16:_PPBackup(e);_SavePPBuffer(e,HEAP32[(m+8|0)>>2]);_SavePPBuffer(e,STRING_TABLE.__str663156|0);b=17;break;case 17:b=18;break;case 18:b=0!=(_CheckArgumentAgainstRestriction(e,HEAP32[(g+8|0)>>2],109)|0)?19:20;break;case 19:b=35;break;case 20:j=_GetParsedBindNames(e);_SetParsedBindNames(e,0);_IncrementIndentDepth(e,3);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+44|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+180|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2];_PPCRAndIndent(e);b=_GroupActions(e,i,m,1,0,0);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;_DecrementIndentDepth(e,3);_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(m+8|0)>>2]);b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?21:22;break;case 21:_SetParsedBindNames(e,j);_ReturnExpression(e,g);d=0;b=36;break;case 22:k=HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=HEAP32[(k+
8|0)>>2];HEAP32[(k+8|0)>>2]=0;_ReturnExpression(e,k);k=_GetParsedBindNames(e);l=0;b=23;break;case 23:b=0!=(k|0)?24:29;break;case 24:b=0==(n|0)?25:26;break;case 25:b=28;break;case 26:b=0==(_strcmp(HEAP32[(HEAP32[(k|0)>>2]+16|0)>>2],HEAP32[(n+16|0)>>2])|0)?27:28;break;case 27:_ClearParsedBindNames(e);_SetParsedBindNames(e,j);_PrintErrorID(e,STRING_TABLE.__str583148|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str673157|0);_ReturnExpression(e,g);d=0;b=36;break;case 28:l=k;k=HEAP32[(k+
8|0)>>2];b=23;break;case 29:b=0==(l|0)?30:31;break;case 30:_SetParsedBindNames(e,j);b=32;break;case 31:HEAP32[(l+8|0)>>2]=j;b=32;break;case 32:b=0!=(n|0)?33:34;break;case 33:_ReplaceMvPrognFieldVars(e,n,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2],0);b=34;break;case 34:d=g;b=36;break;case 35:_SyntaxErrorMessage(e,STRING_TABLE.__str363126|0);_ReturnExpression(e,g);d=0;b=36;break;case 36:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_MultifieldPrognParser.X=1;
function _DeleteMultiValueField(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r;i=h;j=f;k=c;l=a;m=b;n=d;e=0!=(k|0)?3:4;break;case 3:var s=(HEAP32[(k+16|0)>>2]-HEAP32[(k+12|0)>>2]|0)+1|0;e=5;break;case 4:s=0;e=5;break;case 5:r=s;e=(m|0)<(l|0)?10:6;break;case 6:e=1>(l|0)?10:7;break;case 7:e=1>(m|0)?10:8;break;case 8:e=(l|0)>(r|0)?10:9;break;case 9:e=(m|0)>(r|0)?10:11;break;case 10:_MVRangeError(i,l,m,r,n);g=0;e=25;break;case 11:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;e=0==
(r|0)?12:13;break;case 12:g=_EnvCreateMultifield(i,0);HEAP32[(j+8|0)>>2]=g;HEAP32[(j+16|0)>>2]=-1;g=1;e=25;break;case 13:l=(HEAP32[(k+12|0)>>2]+l|0)-1|0;m=(HEAP32[(k+12|0)>>2]+m|0)-1|0;o=r-((m-l|0)+1|0)|0;HEAP32[(j+16|0)>>2]=o-1|0;o=_EnvCreateMultifield(i,o);HEAP32[(j+8|0)>>2]=o;o=0;p=HEAP32[(k+12|0)>>2];e=14;break;case 14:e=(p|0)<(l|0)?15:17;break;case 15:e=(HEAP32[(j+8|0)>>2]+16|0)+(o<<3)|0;q=(HEAP32[(k+8|0)>>2]+16|0)+(p<<3)|0;HEAP16[(e|0)>>1]=HEAP16[(q|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(q+4|0)>>
2];e=16;break;case 16:o=o+1|0;p=p+1|0;e=14;break;case 17:e=18;break;case 18:e=(p|0)<(m|0)?19:20;break;case 19:p=p+1|0;e=18;break;case 20:p=p+1|0;e=21;break;case 21:e=(o|0)<=(HEAP32[(j+16|0)>>2]|0)?22:24;break;case 22:e=(HEAP32[(j+8|0)>>2]+16|0)+(o<<3)|0;q=(HEAP32[(k+8|0)>>2]+16|0)+(p<<3)|0;HEAP16[(e|0)>>1]=HEAP16[(q|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(q+4|0)>>2];e=23;break;case 23:p=p+1|0;o=o+1|0;e=21;break;case 24:g=1;e=25;break;case 25:return g;default:assert(0,"bad label: "+e)}}
_DeleteMultiValueField.X=1;
function _ReplaceMultiValueField(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t,u,v;j=h;k=f;l=c;m=a;n=b;o=d;p=e;g=0!=(l|0)?3:4;break;case 3:var w=(HEAP32[(l+16|0)>>2]-HEAP32[(l+12|0)>>2]|0)+1|0;g=5;break;case 4:w=0;g=5;break;case 5:u=w;g=(n|0)<(m|0)?10:6;break;case 6:g=1>(m|0)?10:7;break;case 7:g=1>(n|0)?10:8;break;case 8:g=(m|0)>(u|0)?10:9;break;case 9:g=(n|0)>(u|0)?10:11;break;case 10:_MVRangeError(j,m,n,u,p);i=0;g=33;break;case 11:m=(HEAP32[(l+12|0)>>2]+m|0)-1|0;n=
(HEAP32[(l+12|0)>>2]+n|0)-1|0;g=4==(HEAPU16[(o+4|0)>>1]&65535|0)?12:13;break;case 12:v=(u+((HEAP32[(o+16|0)>>2]-HEAP32[(o+12|0)>>2]|0)+1|0)|0)-((n-m|0)+1|0)|0;g=14;break;case 13:v=(u+1|0)-((n-m|0)+1|0)|0;g=14;break;case 14:HEAP16[(k+4|0)>>1]=4;HEAP32[(k+12|0)>>2]=0;q=_EnvCreateMultifield(j,v);HEAP32[(k+8|0)>>2]=q;HEAP32[(k+16|0)>>2]=v-1|0;q=0;r=HEAP32[(l+12|0)>>2];g=15;break;case 15:g=(r|0)<(m|0)?16:18;break;case 16:g=(HEAP32[(k+8|0)>>2]+16|0)+(q<<3)|0;t=(HEAP32[(l+8|0)>>2]+16|0)+(r<<3)|0;HEAP16[(g|
0)>>1]=HEAP16[(t|0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(t+4|0)>>2];g=17;break;case 17:q=q+1|0;r=r+1|0;g=15;break;case 18:g=4!=(HEAPU16[(o+4|0)>>1]&65535|0)?19:20;break;case 19:g=q;q=g+1|0;g=(HEAP32[(k+8|0)>>2]+16|0)+(g<<3)|0;HEAP16[(g|0)>>1]=HEAP16[(o+4|0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(o+8|0)>>2];g=25;break;case 20:s=HEAP32[(o+12|0)>>2];g=21;break;case 21:g=(s|0)<=(HEAP32[(o+16|0)>>2]|0)?22:24;break;case 22:g=(HEAP32[(k+8|0)>>2]+16|0)+(q<<3)|0;t=(HEAP32[(o+8|0)>>2]+16|0)+(s<<3)|0;HEAP16[(g|0)>>1]=HEAP16[(t|
0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(t+4|0)>>2];g=23;break;case 23:s=s+1|0;q=q+1|0;g=21;break;case 24:g=25;break;case 25:g=26;break;case 26:g=(r|0)<(n|0)?27:28;break;case 27:r=r+1|0;g=26;break;case 28:r=r+1|0;g=29;break;case 29:g=(q|0)<(v|0)?30:32;break;case 30:g=(HEAP32[(k+8|0)>>2]+16|0)+(q<<3)|0;t=(HEAP32[(l+8|0)>>2]+16|0)+(r<<3)|0;HEAP16[(g|0)>>1]=HEAP16[(t|0)>>1];HEAP32[(g+4|0)>>2]=HEAP32[(t+4|0)>>2];g=31;break;case 31:q=q+1|0;r=r+1|0;g=29;break;case 32:i=1;g=33;break;case 33:return i;default:assert(0,
"bad label: "+g)}}_ReplaceMultiValueField.X=1;
function _FindDOsInSegment(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t,u;j=h;k=f;l=c;m=a;n=b;o=d;p=e;q=(HEAP32[(l+16|0)>>2]-HEAP32[(l+12|0)>>2]|0)+1|0;s=0;g=3;break;case 3:g=(s|0)<(q|0)?4:30;break;case 4:u=0;g=5;break;case 5:g=(u|0)<(k|0)?6:28;break;case 6:g=4==(HEAPU16[((j+24*u|0)+4|0)>>1]&65535|0)?7:21;break;case 7:r=(HEAP32[((j+24*u|0)+16|0)>>2]-HEAP32[((j+24*u|0)+12|0)>>2]|0)+1|0;g=0!=(_MVRangeCheck(s+1|0,s+r|0,o,p)|0)?8:20;break;case 8:t=0;g=9;break;case 9:if((t|
0)<(r|0))g=10;else{var v=0;g=11}break;case 10:v=(t+s|0)<(q|0);g=11;break;case 11:g=v?12:17;break;case 12:g=(HEAPU16[((HEAP32[((j+24*u|0)+8|0)>>2]+16|0)+(((t+(HEAP32[((j+24*u|0)+12|0)>>2]+1|0)|0)-1|0)<<3)|0)>>1]&65535|0)!=(HEAPU16[((HEAP32[(l+8|0)>>2]+16|0)+((((t+s|0)+(HEAP32[(l+12|0)>>2]+1|0)|0)-1|0)<<3)|0)>>1]&65535|0)?14:13;break;case 13:g=(HEAP32[(((HEAP32[((j+24*u|0)+8|0)>>2]+16|0)+(((t+(HEAP32[((j+24*u|0)+12|0)>>2]+1|0)|0)-1|0)<<3)|0)+4|0)>>2]|0)!=(HEAP32[(((HEAP32[(l+8|0)>>2]+16|0)+((((t+s|
0)+(HEAP32[(l+12|0)>>2]+1|0)|0)-1|0)<<3)|0)+4|0)>>2]|0)?14:15;break;case 14:g=17;break;case 15:g=16;break;case 16:t=t+1|0;g=9;break;case 17:g=(t|0)>=(r|0)?18:19;break;case 18:HEAP32[m>>2]=s+1|0;HEAP32[n>>2]=s+r|0;i=1;g=31;break;case 19:g=20;break;case 20:g=26;break;case 21:g=(HEAP32[((j+24*u|0)+8|0)>>2]|0)==(HEAP32[(((HEAP32[(l+8|0)>>2]+16|0)+(((s+(HEAP32[(l+12|0)>>2]+1|0)|0)-1|0)<<3)|0)+4|0)>>2]|0)?22:25;break;case 22:g=(HEAPU16[((j+24*u|0)+4|0)>>1]&65535|0)==(HEAPU16[((HEAP32[(l+8|0)>>2]+16|0)+
(((s+(HEAP32[(l+12|0)>>2]+1|0)|0)-1|0)<<3)|0)>>1]&65535|0)?23:25;break;case 23:g=0!=(_MVRangeCheck(s+1|0,s+1|0,o,p)|0)?24:25;break;case 24:g=s+1|0;HEAP32[n>>2]=g;HEAP32[m>>2]=g;i=1;g=31;break;case 25:g=26;break;case 26:g=27;break;case 27:u=u+1|0;g=5;break;case 28:g=29;break;case 29:s=s+1|0;g=3;break;case 30:i=0;g=31;break;case 31:return i;default:assert(0,"bad label: "+g)}}_FindDOsInSegment.X=1;
function _MVRangeCheck(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;b=0!=(i|0)?3:4;break;case 3:b=0!=(j|0)?5:4;break;case 4:d=1;b=15;break;case 5:k=0;b=6;break;case 6:b=(k|0)<(j|0)?7:14;break;case 7:b=(e|0)>=(HEAP32[(i+((k<<1|0)<<2)|0)>>2]|0)?8:9;break;case 8:b=(e|0)<=(HEAP32[(i+(((k<<1|0)+1|0)<<2)|0)>>2]|0)?11:9;break;case 9:b=(g|0)>=(HEAP32[(i+((k<<1|0)<<2)|0)>>2]|0)?10:12;break;case 10:b=(g|0)<=(HEAP32[(i+(((k<<1|0)+1|0)<<2)|0)>>2]|0)?11:12;break;case 11:d=0;b=15;break;
case 12:b=13;break;case 13:k=k+1|0;b=6;break;case 14:d=1;b=15;break;case 15:return d;default:assert(0,"bad label: "+b)}}_MVRangeCheck.X=1;
function _InsertMultiValueField(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r,s;i=h;j=f;k=c;l=a;m=b;n=d;e=0!=(k|0)?3:4;break;case 3:var t=(HEAP32[(k+16|0)>>2]-HEAP32[(k+12|0)>>2]|0)+1|0;e=5;break;case 4:t=0;e=5;break;case 5:s=t;e=1>(l|0)?6:7;break;case 6:_MVRangeError(i,l,l,s+1|0,n);g=0;e=33;break;case 7:e=(l|0)>(s+1|0)?8:9;break;case 8:l=s+1|0;e=9;break;case 9:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;e=0==(k|0)?10:14;break;case 10:e=4==(HEAPU16[(m+4|0)>>1]&65535|0)?11:
12;break;case 11:_DuplicateMultifield(i,j,m);_AddToMultifieldList(i,HEAP32[(j+8|0)>>2]);e=13;break;case 12:e=_EnvCreateMultifield(i,0);HEAP32[(j+8|0)>>2]=e;HEAP32[(j+16|0)>>2]=0;e=HEAP32[(j+8|0)>>2]+16|0;HEAP16[(e|0)>>1]=HEAP16[(m+4|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(m+8|0)>>2];e=13;break;case 13:g=1;e=33;break;case 14:e=4==(HEAPU16[(m+4|0)>>1]&65535|0)?15:16;break;case 15:var u=((HEAP32[(m+16|0)>>2]-HEAP32[(m+12|0)>>2]|0)+1|0)+s|0;e=17;break;case 16:u=s+1|0;e=17;break;case 17:o=u;p=_EnvCreateMultifield(i,
o);HEAP32[(j+8|0)>>2]=p;HEAP32[(j+16|0)>>2]=o-1|0;l=l-1|0;o=0;p=HEAP32[(k+12|0)>>2];e=18;break;case 18:e=(o|0)<(l|0)?19:21;break;case 19:e=(HEAP32[(j+8|0)>>2]+16|0)+(o<<3)|0;r=(HEAP32[(k+8|0)>>2]+16|0)+(p<<3)|0;HEAP16[(e|0)>>1]=HEAP16[(r|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(r+4|0)>>2];e=20;break;case 20:o=o+1|0;p=p+1|0;e=18;break;case 21:e=4!=(HEAPU16[(m+4|0)>>1]&65535|0)?22:23;break;case 22:e=(HEAP32[(j+8|0)>>2]+16|0)+(l<<3)|0;HEAP16[(e|0)>>1]=HEAP16[(m+4|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(m+8|0)>>2];
o=o+1|0;e=28;break;case 23:q=HEAP32[(m+12|0)>>2];e=24;break;case 24:e=(q|0)<=(HEAP32[(m+16|0)>>2]|0)?25:27;break;case 25:e=(HEAP32[(j+8|0)>>2]+16|0)+(o<<3)|0;r=(HEAP32[(m+8|0)>>2]+16|0)+(q<<3)|0;HEAP16[(e|0)>>1]=HEAP16[(r|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(r+4|0)>>2];e=26;break;case 26:q=q+1|0;o=o+1|0;e=24;break;case 27:e=28;break;case 28:e=29;break;case 29:e=(p|0)<=(HEAP32[(k+16|0)>>2]|0)?30:32;break;case 30:e=(HEAP32[(j+8|0)>>2]+16|0)+(o<<3)|0;r=(HEAP32[(k+8|0)>>2]+16|0)+(p<<3)|0;HEAP16[(e|0)>>1]=
HEAP16[(r|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(r+4|0)>>2];e=31;break;case 31:o=o+1|0;p=p+1|0;e=29;break;case 32:g=1;e=33;break;case 33:return g;default:assert(0,"bad label: "+e)}}_InsertMultiValueField.X=1;
function _MVRangeError(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;_PrintErrorID(e,STRING_TABLE.__str583148|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str603150|0);d=(g|0)==(i|0)?3:4;break;case 3:_PrintLongInteger(e,STRING_TABLE.__str593149|0,g);d=5;break;case 4:_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str613151|0);_PrintLongInteger(e,STRING_TABLE.__str593149|0,g);_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str623152|
0);_PrintLongInteger(e,STRING_TABLE.__str593149|0,i);d=5;break;case 5:_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str633153|0);_PrintLongInteger(e,STRING_TABLE.__str593149|0,j);d=0!=(k|0)?6:7;break;case 6:_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str643154|0);_EnvPrintRouter(e,STRING_TABLE.__str593149|0,k);d=7;break;case 7:_EnvPrintRouter(e,STRING_TABLE.__str593149|0,STRING_TABLE.__str653155|0);return;default:assert(0,"bad label: "+d)}}_MVRangeError.X=1;
function _ReplaceMvPrognFieldVars(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;j=_strlen(HEAP32[(e+16|0)>>2]);b=3;break;case 3:b=0!=(g|0)?4:21;break;case 4:b=35!=(HEAPU16[(g|0)>>1]&65535|0)?5:6;break;case 5:b=13;break;case 6:b=0==(_strncmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2],HEAP32[(e+16|0)>>2],j)|0)?7:13;break;case 7:b=0==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+j|0]<<24>>24|0)?8:9;break;case 8:HEAP16[(g|0)>>1]=30;b=_FindFunction(d,STRING_TABLE.__str513141|0);HEAP32[(g+
4|0)>>2]=b;b=d;var k=_EnvAddLong(d,i);b=_GenConstant(b,1,k);HEAP32[(g+8|0)>>2]=b;b=12;break;case 9:b=0==(_strcmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+j|0,STRING_TABLE.__str683158|0)|0)?10:11;break;case 10:HEAP16[(g|0)>>1]=30;b=_FindFunction(d,STRING_TABLE.__str543144|0);HEAP32[(g+4|0)>>2]=b;b=d;k=_EnvAddLong(d,i);b=_GenConstant(b,1,k);HEAP32[(g+8|0)>>2]=b;b=11;break;case 11:b=12;break;case 12:b=20;break;case 13:b=0!=(HEAP32[(g+8|0)>>2]|0)?14:19;break;case 14:b=30==(HEAPU16[(g|0)>>1]&65535|0)?15:17;
break;case 15:b=HEAP32[(g+4|0)>>2];k=_FindFunction(d,STRING_TABLE.__str363126|0);b=(b|0)==(k|0)?16:17;break;case 16:_ReplaceMvPrognFieldVars(d,e,HEAP32[(g+8|0)>>2],i+1|0);b=18;break;case 17:_ReplaceMvPrognFieldVars(d,e,HEAP32[(g+8|0)>>2],i);b=18;break;case 18:b=19;break;case 19:b=20;break;case 20:g=HEAP32[(g+12|0)>>2];b=3;break;case 21:return;default:assert(0,"bad label: "+b)}}_ReplaceMvPrognFieldVars.X=1;
function _SetupObjectsBload(h){_AllocateEnvironmentData(h,33,68,1222);_AddAbortBloadFunction(h,STRING_TABLE.__str3165|0,112,0);_AddBinaryItem(h,STRING_TABLE.__str3165|0,0,1224,1226,1228,1230,1232,1234,1236)}
function _DeallocateObjectBinaryData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+36|0)>>2],a);f=4;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?5:27;break;case 5:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+100|0)>>2]|0)?6:7;break;case 6:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+100|0)>>2],(HEAPU16[(HEAP32[(HEAP32[(c+
16|0)>>2]+84|0)>>2]+110|0)>>1]&65535)<<2|0);f=7;break;case 7:b=0;f=8;break;case 8:f=b>>>0<HEAPU32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]>>>0?9:14;break;case 9:f=0!=(HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*b|0)+16|0)>>2]|0)?10:12;break;case 10:f=0==(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*b|0)>>2]>>>6&1|0)?11:12;break;case 11:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|
0)>>2]+44|0)>>2]+44*b|0)+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=12;break;case 12:f=13;break;case 13:b=b+1|0;f=8;break;case 14:a=148*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?15:16;break;case 15:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+132|0)>>2]|0)>>2],a);f=16;break;case 16:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+12|0)>>2]<<2|0;f=0!=(a|0)?17:18;break;case 17:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+40|0)>>2],a);f=18;break;case 18:a=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]|0;f=0!=(a|0)?19:20;break;case 19:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2],a);f=20;break;case 20:a=28*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]|0;f=0!=(a|0)?
21:22;break;case 21:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+52|0)>>2],a);f=22;break;case 22:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+24|0)>>2]<<2|0;f=0!=(a|0)?23:24;break;case 23:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+48|0)>>2],a);f=24;break;case 24:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+28|0)>>2]<<2|0;f=0!=(a|0)?25:26;break;case 25:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+56|0)>>2],a);f=26;break;case 26:f=27;break;
case 27:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?28:31;break;case 28:a=40*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]|0;f=0!=(a|0)?29:30;break;case 29:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+60|0)>>2],a);a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]<<2|0;_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+64|0)>>2],a);f=30;break;case 30:f=31;break;case 31:return;default:assert(0,"bad label: "+f)}}
_DeallocateObjectBinaryData.X=1;
function _BsaveObjectsFind(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+12|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|
0)>>2]+132|0)>>2]+24|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+28|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|
0)>>2]+132|0)>>2]+24|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+28|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]=0;a=_DoForAllConstructs(c,1238,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+4|0)>>2],0,0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]=a;a=0;f=3;break;case 3:f=167>a>>>0?4:13;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:11;break;case 6:f=0!=(HEAP32[(b+8|0)>>2]|0)?
7:9;break;case 7:f=1!=(HEAP32[(b+8|0)>>2]|0)?8:9;break;case 8:f=HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0;var d=HEAP32[f>>2];HEAP32[f>>2]=d+1|0;HEAP32[(b+24|0)>>2]=d;f=HEAP32[(b+12|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=HEAP32[(b+16|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=9;break;case 9:f=10;break;case 10:b=HEAP32[(b+20|0)>>2];f=5;break;case 11:f=12;break;case 12:a=a+1|0;f=3;break;case 13:return;default:assert(0,"bad label: "+f)}}_BsaveObjectsFind.X=1;
function _BsaveObjectsExpressions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?3:5;break;case 3:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?4:5;break;case 4:c=6;break;case 5:_DoForAllConstructs(a,1240,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+4|0)>>2],0,b);_DoForAllConstructs(a,1242,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+4|0)>>2],0,b);c=6;break;case 6:return;default:assert(0,"bad label: "+c)}}
_BsaveObjectsExpressions.X=1;
function _BsaveStorageObjects(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?3:5;break;case 3:a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?4:5;break;case 4:HEAP32[e>>2]=0;_GenWrite(e,4,d);a=6;break;case 5:HEAP32[e>>2]=36;_GenWrite(e,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+4|
0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+12|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+20|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+16|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+24|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+28|0,4,d);_GenWrite(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0,4,d);HEAP32[e>>2]=HEAPU16[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535;_GenWrite(e,
4,d);a=6;break;case 6:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveStorageObjects.X=1;
function _BsaveObjects(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4,j=c+16,k,l;b=h;d=f;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?3:5;break;case 3:a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?4:5;break;case 4:HEAP32[e>>2]=0;_GenWrite(e,4,d);a=20;break;case 5:HEAP32[e>>2]=((((((((12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+
4|0)>>2]|0)+(80*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+12|0)>>2]<<2|0)|0)+(24*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+16|0)>>2]|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+20|0)>>2]<<4|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+24|0)>>2]<<2|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+28|0)>>2]<<2|0)|0)+(28*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)|0)+(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+132|0)>>2]+32|0)>>2]<<2|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+20|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+24|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+28|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0)>>2]=0;g=_EnvGetNextDefmodule(b,0);a=6;break;
case 6:a=0!=(g|0)?7:8;break;case 7:a=b;var m=g,n=_FindModuleItem(b,STRING_TABLE.__str3165|0)+4|0;a=_GetModuleItem(a,m,HEAP32[n>>2]);_AssignBsaveDefmdlItemHdrVals(i|0,a|0);_GenWrite(i,12,d);g=_EnvGetNextDefmodule(b,g);a=6;break;case 8:_DoForAllConstructs(b,1244,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+12|0)>>2]=0;_DoForAllConstructs(b,1246,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);l=0;a=9;break;case 9:a=167>l>>>0?10:
19;break;case 10:k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+112|0)>>2]+(l<<2)|0)>>2];a=11;break;case 11:a=0!=(k|0)?12:17;break;case 12:a=0!=(HEAP32[(k+8|0)>>2]|0)?13:15;break;case 13:a=1!=(HEAP32[(k+8|0)>>2]|0)?14:15;break;case 14:HEAP32[(j|0)>>2]=HEAP32[(k+8|0)>>2];HEAP32[(j+4|0)>>2]=HEAP32[(k|0)>>2];HEAP32[(j+8|0)>>2]=HEAPU32[(HEAP32[(k+12|0)>>2]+12|0)>>2]>>>3&536870911;HEAP32[(j+12|0)>>2]=HEAPU32[(HEAP32[(k+16|0)>>2]+12|0)>>2]>>>3&536870911;_GenWrite(j,16,d);a=15;break;case 15:a=16;
break;case 16:k=HEAP32[(k+20|0)>>2];a=11;break;case 17:a=18;break;case 18:l=l+1|0;a=9;break;case 19:_DoForAllConstructs(b,1248,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);_DoForAllConstructs(b,1250,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);_DoForAllConstructs(b,1252,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);_DoForAllConstructs(b,1254,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);_DoForAllConstructs(b,1256,HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+84|0)>>2]+4|0)>>2],0,d);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+4|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+8|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+12|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+16|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+20|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+24|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+28|0);_RestoreBloadCount(b,
HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+32|0);a=20;break;case 20:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveObjects.X=1;
function _BloadStorageObjects(h){var f=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d=f+4;a=h;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]|0)?4:3;break;case 3:c=0!=(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535|0)?4:5;break;case 4:_SystemError(a,STRING_TABLE.__str13166|0,1);_EnvExitRouter(a,1);c=5;break;case 5:_GenReadBinary(a,b,4);c=0==(HEAP32[b>>2]|0)?
6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2]=0;c=23;break;case 7:_GenReadBinary(a,d|0,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+4|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2]=HEAP32[(d+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+12|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+20|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+132|0)>>2]+16|0)>>2]=HEAP32[(d+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+24|0)>>2]=HEAP32[(d+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0)>>2]=HEAP32[(d+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]=HEAP32[(d+28|0)>>2];HEAP16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+108|0)>>1]=HEAP32[(d+32|0)>>2]&65535;HEAP16[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+110|0)>>1]=HEAP32[(d+32|0)>>2]&65535;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+
4|0)>>2]|0)?8:9;break;case 8:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+36|0)>>2]=c;c=9;break;case 9:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?10:11;break;case 10:HEAP32[b>>2]=148*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]|0)>>2]=c;c=_gm2(a,(HEAPU16[(HEAP32[(HEAP32[(a+16|0)>>
2]+84|0)>>2]+108|0)>>1]&65535)<<2|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+100|0)>>2]=c;c=11;break;case 11:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+12|0)>>2]|0)?12:13;break;case 12:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+12|0)>>2]<<2|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+40|0)>>2]=c;c=13;break;case 13:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+16|0)>>2]|0)?14:15;break;case 14:HEAP32[b>>2]=44*HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+132|0)>>2]+16|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+44|0)>>2]=c;c=15;break;case 15:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+20|0)>>2]|0)?16:17;break;case 16:HEAP32[b>>2]=28*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+20|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+52|0)>>2]=c;c=17;break;case 17:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+24|0)>>2]|0)?18:19;break;case 18:HEAP32[b>>
2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+24|0)>>2]<<2|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+48|0)>>2]=c;c=19;break;case 19:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0)>>2]|0)?20:21;break;case 20:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0)>>2]<<2|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+56|0)>>2]=c;c=21;break;case 21:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|
0)>>2]|0)?22:23;break;case 22:HEAP32[b>>2]=40*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+60|0)>>2]=c;HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]<<2|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+64|0)>>2]=c;c=23;break;case 23:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageObjects.X=1;
function _BloadObjects(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);c=0==(HEAP32[b>>2]|0)?3:4;break;case 3:c=14;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+4|0)>>2],12,1258);c=6;break;case 6:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>
2]+8|0)>>2]|0)?7:14;break;case 7:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0)>>2],80,1260);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+12|0)>>2],4,1262);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+20|0)>>2],16,1264);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+16|0)>>2],24,1266);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+24|0)>>2]|0)?8:9;break;case 8:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|
0)>>2]+132|0)>>2]+24|0)>>2],4,1268);c=9;break;case 9:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0)>>2]|0)?10:11;break;case 10:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0)>>2]<<2|0;_GenReadBinary(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+56|0)>>2],HEAP32[b>>2]);c=11;break;case 11:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?12:13;break;case 12:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2],28,1270);HEAP32[b>>
2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0)>>2]<<2|0;_GenReadBinary(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+64|0)>>2],HEAP32[b>>2]);c=13;break;case 13:_UpdatePrimitiveClassesMap(a);c=14;break;case 14:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadObjects.X=1;function _BloadDefclassModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+132|0)>>2]+36|0)>>2]+12*f|0}
function _ClearBloadObjects(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]|0;f=0==(b|0)?3:4;break;case 3:f=41;break;case 4:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+36|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+36|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+4|0)>>2]=0;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?5:33;break;case 5:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>
2]+84|0)>>2]+100|0)>>2],(HEAPU16[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+110|0)>>1]&65535)<<2|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+100|0)>>2]=0;HEAP16[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+108|0)>>1]=0;a=HEAP16[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+110|0)>>1]=0;f=6;break;case 6:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]|0)?7:9;break;case 7:_UnmarkConstructHeader(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]|0)>>2]+148*a|0);_DecrementBitMapCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+132|0)>>2]|0)>>2]+148*a|0)+112|0)>>2]);_RemoveClassFromTable(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]|0)>>2]+148*a|0);f=8;break;case 8:a=a+1|0;f=6;break;case 9:a=0;f=10;break;case 10:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]|0)?11:16;break;case 11:_DecrementSymbolCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*a|0)+12|0)>>2]);f=0!=(HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*a|0)+16|0)>>2]|0)?12:14;break;
case 12:f=0==(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*a|0)>>2]>>>6&1|0)?13:14;break;case 13:_ValueDeinstall(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*a|0)+16|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*a|0)+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+
96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=14;break;case 14:f=15;break;case 15:a=a+1|0;f=10;break;case 16:a=0;f=17;break;case 17:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]|0)?18:20;break;case 18:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+112|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+52|0)>>2]+28*a|0)>>2]<<2)|0)>>2]=0;_DecrementSymbolCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+132|0)>>2]+52|0)>>2]+28*a|0)+12|0)>>2]);_DecrementSymbolCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+52|0)>>2]+28*a|0)+16|0)>>2]);f=19;break;case 19:a=a+1|0;f=17;break;case 20:b=148*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]|0;f=0!=(b|0)?21:22;break;case 21:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+8|0)>>2]=0;f=22;break;case 22:b=
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+12|0)>>2]<<2|0;f=0!=(b|0)?23:24;break;case 23:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+40|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+40|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+12|0)>>2]=0;f=24;break;case 24:b=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]|0;f=0!=(b|0)?25:26;break;case 25:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+44|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+132|0)>>2]+44|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+16|0)>>2]=0;f=26;break;case 26:b=28*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]|0;f=0!=(b|0)?27:28;break;case 27:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+52|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+52|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+20|0)>>2]=0;f=28;break;case 28:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+24|0)>>2]<<2|0;f=0!=(b|0)?29:30;break;
case 29:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+48|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+48|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+24|0)>>2]=0;f=30;break;case 30:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+28|0)>>2]<<2|0;f=0!=(b|0)?31:32;break;case 31:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+56|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+56|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+28|0)>>
2]=0;f=32;break;case 32:f=33;break;case 33:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?34:41;break;case 34:a=0;f=35;break;case 35:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]|0)?36:38;break;case 36:_DecrementSymbolCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+60|0)>>2]+40*a|0)+8|0)>>2]);f=37;break;case 37:a=a+1|0;f=35;break;case 38:b=40*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]|0;f=0!=(b|0)?39:40;break;case 39:_genlongfree(c,
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+60|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+60|0)>>2]=0;b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]<<2|0;_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+64|0)>>2],b);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+64|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]+32|0)>>2]=0;f=40;break;case 40:f=41;break;case 41:return;default:assert(0,"bad label: "+f)}}_ClearBloadObjects.X=1;
function _UpdateDefclassModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+132|0)>>2]+36|0)>>2]+12*c|0,148,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+132|0)>>2]|0)>>2])}
function _UpdateLink(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=a;a=-1==(HEAP32[e>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*HEAP32[e>>2]|0;a=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+40|0)>>2]+(d<<2)|0)>>2]=g;return;default:assert(0,"bad label: "+a)}}
function _UpdateSlotName(h,f,c){c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+132|0)>>2]+52|0)>>2]+28*c|0;HEAP32[(c+8|0)>>2]=HEAP32[(f|0)>>2];HEAP32[(c+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(f+8|0)>>2]<<2)|0)>>2];var a=HEAP32[(c+12|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[(c+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(f+12|0)>>2]<<2)|0)>>2];a=HEAP32[(c+16|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[(c|0)>>2]=HEAP32[(f+
4|0)>>2];HEAP32[(c+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+112|0)>>2]+(HEAP32[(c|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+112|0)>>2]+(HEAP32[(c|0)>>2]<<2)|0)>>2]=c}_UpdateSlotName.X=1;
function _UpdateDefclass(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*e|0;_UpdateConstructHeader(b,d|0,e|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+36|0)>>2],148,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]);a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAP32[(d+12|0)>>2]&1)<<2;a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[(d+12|0)>>2]>>>1&1)<<3;a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(d+12|0)>>2]>>>2&
1)<<1;HEAP16[(e+26|0)>>1]=HEAP16[(d+14|0)>>1];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+100|0)>>2]+((HEAPU16[(e+26|0)>>1]&65535)<<2)|0)>>2]=e;a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-17|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+128|0)>>2]&1)<<4;a=e+24|0;HEAP32[a>>2]=HEAP32[a>>2]&-33|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+132|0)>>2]&1)<<5;HEAP32[(e+72|0)>>2]=HEAP32[(d+40|0)>>2];HEAP32[(e+80|0)>>2]=HEAP32[(d+48|0)>>2];HEAP32[(e+76|0)>>2]=HEAP32[(d+44|0)>>2];HEAP32[(e+84|0)>>2]=HEAP32[(d+
52|0)>>2];HEAP32[(e+104|0)>>2]=HEAP32[(d+56|0)>>2];HEAP16[(e+36|0)>>1]=HEAP16[(d+16|0)>>1];a=-1==(HEAP32[((d+16|0)+4|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+40|0)>>2]+(HEAP32[((d+16|0)+4|0)>>2]<<2)|0;a=5;break;case 5:HEAP32[((e+36|0)+4|0)>>2]=g;HEAP16[(e+44|0)>>1]=HEAP16[(d+24|0)>>1];a=-1==(HEAP32[((d+24|0)+4|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+40|0)>>2]+(HEAP32[((d+24|0)+
4|0)>>2]<<2)|0;a=8;break;case 8:HEAP32[((e+44|0)+4|0)>>2]=i;HEAP16[(e+52|0)>>1]=HEAP16[(d+32|0)>>1];a=-1==(HEAP32[((d+32|0)+4|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+40|0)>>2]+(HEAP32[((d+32|0)+4|0)>>2]<<2)|0;a=11;break;case 11:HEAP32[((e+52|0)+4|0)>>2]=j;a=-1==(HEAP32[(d+60|0)>>2]|0)?12:13;break;case 12:var k=0;a=14;break;case 13:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*HEAP32[(d+60|0)>>2]|0;a=14;break;case 14:HEAP32[(e+
60|0)>>2]=k;a=-1==(HEAP32[(d+64|0)>>2]|0)?15:16;break;case 15:var l=0;a=17;break;case 16:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+48|0)>>2]+(HEAP32[(d+64|0)>>2]<<2)|0;a=17;break;case 17:HEAP32[(e+64|0)>>2]=l;a=-1==(HEAP32[(d+68|0)>>2]|0)?18:19;break;case 18:var m=0;a=20;break;case 19:m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+56|0)>>2]+(HEAP32[(d+68|0)>>2]<<2)|0;a=20;break;case 20:HEAP32[(e+68|0)>>2]=m;HEAP32[(e+88|0)>>2]=0;a=-1==(HEAP32[(d+72|0)>>2]|0)?21:22;break;case 21:var n=0;a=
23;break;case 22:n=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+60|0)>>2]+40*HEAP32[(d+72|0)>>2]|0;a=23;break;case 23:HEAP32[(e+96|0)>>2]=n;a=-1==(HEAP32[(d+72|0)>>2]|0)?24:25;break;case 24:var o=0;a=26;break;case 25:o=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+64|0)>>2]+(HEAP32[(d+72|0)>>2]<<2)|0;a=26;break;case 26:HEAP32[(e+100|0)>>2]=o;h=e+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-2|1;HEAP32[(e+28|0)>>2]=0;HEAP32[(e+88|0)>>2]=0;HEAP32[(e+92|0)>>2]=0;HEAP32[(e+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+196|0)>>2]+80|0)>>2]+(HEAP32[(d+76|0)>>2]<<2)|0)>>2];h=HEAP32[(e+112|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;_PutClassInTable(b,e);return;default:assert(0,"bad label: "+a)}}_UpdateDefclass.X=1;
function _UpdateTemplateSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=-1==(HEAP32[d>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*HEAP32[d>>2]|0;a=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+48|0)>>2]+(e<<2)|0)>>2]=g;return;default:assert(0,"bad label: "+a)}}
function _UpdateHandler(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;a=e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+60|0)>>2]+40*c|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[d>>2]&1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-7|(HEAPU32[d>>2]>>>1&3)<<1;HEAP32[(e+16|0)>>2]=HEAP32[(d+4|0)>>2];HEAP32[(e+20|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[(e+24|0)>>2]=HEAP32[(d+12|0)>>2];a=-1==(HEAP32[(d+20|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*
HEAP32[(d+20|0)>>2]|0;a=5;break;case 5:HEAP32[(e+12|0)>>2]=g;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+16|0)>>2]<<2)|0)>>2];a=HEAP32[(e+8|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=-1==(HEAP32[(d+24|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+24|0)>>2]<<4)|0;a=8;break;case 8:HEAP32[(e+28|0)>>2]=i;HEAP32[(e+32|0)>>2]=0;HEAP32[(e+4|0)>>2]=0;h=e;HEAP32[h>>2]&=-9;HEAP32[(e+
36|0)>>2]=0;HEAP32[e>>2]=HEAP32[e>>2]&-17|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+128|0)>>2]+124|0)>>2]&1)<<4;return;default:assert(0,"bad label: "+a)}}_UpdateHandler.X=1;
function _UpdatePrimitiveClassesMap(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=9>a>>>0?4:6;break;case 4:HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+84|0)>>2]+64|0)+(a<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+132|0)>>2]|0)>>2]+148*a|0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _UpdateSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;a=e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+44|0)>>2]+44*c|0;HEAP32[a>>2]=HEAP32[a>>2]&-65|(HEAPU32[d>>2]>>>6&1)<<6;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-257|(HEAPU32[d>>2]>>>7&1)<<8;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[d>>2]&1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[d>>2]>>>1&1)<<1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[d>>2]>>>2&1)<<2;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[d>>2]>>>3&1)<<3;a=e;HEAP32[a>>2]=
HEAP32[a>>2]&-17|(HEAPU32[d>>2]>>>4&1)<<4;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-33|(HEAPU32[d>>2]>>>5&1)<<5;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-513|(HEAPU32[d>>2]>>>8&1)<<9;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-1025|(HEAPU32[d>>2]>>>9&1)<<10;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2049|(HEAPU32[d>>2]>>>10&1)<<11;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-4097|(HEAPU32[d>>2]>>>11&1)<<12;a=-1==(HEAP32[(d+4|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]|0)>>2]+148*HEAP32[(d+4|0)>>2]|0;
a=5;break;case 5:HEAP32[(e+4|0)>>2]=g;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+132|0)>>2]+52|0)>>2]+28*HEAP32[(d+8|0)>>2]|0;HEAP32[(e+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(d+20|0)>>2]<<2)|0)>>2];a=HEAP32[(e+12|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=-1!=(HEAP32[(d+12|0)>>2]|0)?6:19;break;case 6:a=0!=(HEAPU32[e>>2]>>>6&1|0)?7:11;break;case 7:a=-1==(HEAP32[(d+12|0)>>2]|0)?8:9;break;case 8:var i=0;a=10;break;case 9:i=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=10;break;case 10:HEAP32[(e+16|0)>>2]=i;a=18;break;case 11:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?12:13;break;case 12:var j=_genalloc(b,24);a=14;break;case 13:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=14;break;case 14:HEAP32[(e+16|0)>>2]=j;var k=b,l=HEAPU32[e>>2]>>>1&1;a=-1==(HEAP32[(d+12|0)>>2]|0)?15:16;break;case 15:var m=0;a=17;break;case 16:m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+12|0)>>2]<<4)|0;a=17;break;case 17:_EvaluateAndStoreInDataObject(k,l,m,HEAP32[(e+16|0)>>2],1);_ValueInstall(b,HEAP32[(e+16|0)>>2]);a=18;break;case 18:a=20;break;case 19:HEAP32[(e+16|0)>>
2]=0;a=20;break;case 20:a=-1==(HEAP32[(d+16|0)>>2]|0)?21:22;break;case 21:var n=0;a=23;break;case 22:n=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]+12|0)>>2]+48*HEAP32[(d+16|0)>>2]|0;a=23;break;case 23:HEAP32[(e+20|0)>>2]=n;HEAP32[(e+24|0)>>2]=0;HEAP32[((e+32|0)+8|0)>>2]=0;HEAP32[(e+28|0)>>2]=0;a=0!=(HEAP32[e>>2]&1|0)?24:25;break;case 24:HEAP32[(e+32|0)>>2]=e;HEAP32[((e+32|0)+8|0)>>2]=0;a=25;break;case 25:return;default:assert(0,"bad label: "+a)}}_UpdateSlot.X=1;
function _BsaveDefclass(h,f,c){var a=STACKTOP;STACKTOP+=80;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;g=c;_AssignBsaveConstructHeaderVals(i|0,e|0);b=i+12|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|HEAPU32[(e+24|0)>>2]>>>2&1;b=i+12|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(HEAPU32[(e+24|0)>>2]>>>3&1)<<1;b=i+12|0;HEAP32[b>>2]=HEAP32[b>>2]&-5|(HEAPU32[(e+24|0)>>2]>>>1&1)<<2;HEAP16[(i+14|0)>>1]=HEAP16[(e+26|0)>>1];HEAP32[(i+
40|0)>>2]=HEAP32[(e+72|0)>>2];HEAP32[(i+48|0)>>2]=HEAP32[(e+80|0)>>2];HEAP32[(i+44|0)>>2]=HEAP32[(e+76|0)>>2];HEAP32[(i+52|0)>>2]=HEAP32[(e+84|0)>>2];HEAP32[(i+56|0)>>2]=HEAP32[(e+104|0)>>2];HEAP16[(i+16|0)>>1]=HEAP16[(e+36|0)>>1];HEAP16[(i+24|0)>>1]=HEAP16[(e+44|0)>>1];HEAP16[(i+32|0)>>1]=HEAP16[(e+52|0)>>1];b=0!=(HEAPU16[(e+36|0)>>1]&65535|0)?3:4;break;case 3:HEAP32[((i+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;HEAP32[b>>
2]=HEAP32[b>>2]+(HEAPU16[(e+36|0)>>1]&65535)|0;b=5;break;case 4:HEAP32[((i+16|0)+4|0)>>2]=-1;b=5;break;case 5:b=0!=(HEAPU16[(e+44|0)>>1]&65535|0)?6:7;break;case 6:HEAP32[((i+24|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]+(HEAPU16[(e+44|0)>>1]&65535)|0;b=8;break;case 7:HEAP32[((i+24|0)+4|0)>>2]=-1;b=8;break;case 8:b=0!=(HEAPU16[(e+52|0)>>1]&65535|0)?9:10;break;case 9:HEAP32[((i+32|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+132|0)>>2]+12|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]+(HEAPU16[(e+52|0)>>1]&65535)|0;b=11;break;case 10:HEAP32[((i+32|0)+4|0)>>2]=-1;b=11;break;case 11:b=0!=(HEAP32[(e+60|0)>>2]|0)?12:13;break;case 12:HEAP32[(i+60|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+16|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+16|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(e+72|0)>>2]|0;b=14;break;case 13:HEAP32[(i+60|0)>>2]=-1;b=14;break;case 14:b=0!=(HEAP32[(e+64|
0)>>2]|0)?15:16;break;case 15:HEAP32[(i+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+24|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+24|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(e+80|0)>>2]|0;HEAP32[(i+68|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+28|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+28|0;HEAP32[b>>2]=HEAP32[b>>2]+(HEAP32[(e+84|0)>>2]+1|0)|0;b=17;break;case 16:HEAP32[(i+64|0)>>2]=-1;HEAP32[(i+68|0)>>2]=-1;b=17;break;case 17:b=0!=(HEAP32[(e+96|0)>>2]|0)?18:19;break;
case 18:HEAP32[(i+72|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+32|0)>>2];b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+32|0;HEAP32[b>>2]=HEAP32[b>>2]+HEAP32[(e+104|0)>>2]|0;b=20;break;case 19:HEAP32[(i+72|0)>>2]=-1;b=20;break;case 20:HEAP32[(i+76|0)>>2]=HEAPU32[(HEAP32[(e+112|0)>>2]+12|0)>>2]>>>3&536870911;_GenWrite(i,80,g);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveDefclass.X=1;
function _BsaveClassLinks(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;i=0;b=3;break;case 3:b=i>>>0<(HEAPU16[(e+36|0)>>1]&65535)>>>0?4:9;break;case 4:b=0==(HEAP32[(HEAP32[((e+36|0)+4|0)>>2]+(i<<2)|0)>>2]|0)?5:6;break;case 5:var k=-1;b=7;break;case 6:k=HEAP32[(HEAP32[(HEAP32[((e+36|0)+4|0)>>2]+(i<<2)|0)>>2]+12|0)>>2];b=7;break;case 7:HEAP32[j>>2]=k;_GenWrite(j,
4,g);b=8;break;case 8:i=i+1|0;b=3;break;case 9:b=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]+(HEAPU16[(e+36|0)>>1]&65535)|0;i=0;b=10;break;case 10:b=i>>>0<(HEAPU16[(e+44|0)>>1]&65535)>>>0?11:16;break;case 11:b=0==(HEAP32[(HEAP32[((e+44|0)+4|0)>>2]+(i<<2)|0)>>2]|0)?12:13;break;case 12:var l=-1;b=14;break;case 13:l=HEAP32[(HEAP32[(HEAP32[((e+44|0)+4|0)>>2]+(i<<2)|0)>>2]+12|0)>>2];b=14;break;case 14:HEAP32[j>>2]=l;_GenWrite(j,4,g);b=15;break;case 15:i=i+1|0;b=10;break;case 16:b=
HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]+(HEAPU16[(e+44|0)>>1]&65535)|0;i=0;b=17;break;case 17:b=i>>>0<(HEAPU16[(e+52|0)>>1]&65535)>>>0?18:23;break;case 18:b=0==(HEAP32[(HEAP32[((e+52|0)+4|0)>>2]+(i<<2)|0)>>2]|0)?19:20;break;case 19:var m=-1;b=21;break;case 20:m=HEAP32[(HEAP32[(HEAP32[((e+52|0)+4|0)>>2]+(i<<2)|0)>>2]+12|0)>>2];b=21;break;case 21:HEAP32[j>>2]=m;_GenWrite(j,4,g);b=22;break;case 22:i=i+1|0;b=17;break;case 23:h=HEAP32[(HEAP32[(d+16|0)>>2]+132|0)>>2]+12|0;
HEAP32[h>>2]=HEAP32[h>>2]+(HEAPU16[(e+52|0)>>1]&65535)|0;STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveClassLinks.X=1;
function _BsaveSlots(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;d=h;e=f;g=c;i=0;b=3;break;case 3:b=i>>>0<HEAPU32[(e+72|0)>>2]>>>0?4:19;break;case 4:k=HEAP32[(e+60|0)>>2]+44*i|0;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-65|(HEAPU32[k>>2]>>>6&1)<<6;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-129|(HEAPU32[k>>2]>>>8&1)<<7;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-2|HEAP32[k>>2]&1;b=j;HEAP32[b>>2]=HEAP32[b>>
2]&-3|(HEAPU32[k>>2]>>>1&1)<<1;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-5|(HEAPU32[k>>2]>>>2&1)<<2;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-9|(HEAPU32[k>>2]>>>3&1)<<3;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-17|(HEAPU32[k>>2]>>>4&1)<<4;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-33|(HEAPU32[k>>2]>>>5&1)<<5;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-257|(HEAPU32[k>>2]>>>9&1)<<8;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-513|(HEAPU32[k>>2]>>>10&1)<<9;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-1025|(HEAPU32[k>>2]>>>11&1)<<10;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-2049|(HEAPU32[k>>2]>>>
12&1)<<11;b=0==(HEAP32[(k+4|0)>>2]|0)?5:6;break;case 5:var l=-1;b=7;break;case 6:l=HEAP32[(HEAP32[(k+4|0)>>2]+12|0)>>2];b=7;break;case 7:HEAP32[(j+4|0)>>2]=l;HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(k+8|0)>>2]+24|0)>>2];HEAP32[(j+20|0)>>2]=HEAPU32[(HEAP32[(k+12|0)>>2]+12|0)>>2]>>>3&536870911;b=0!=(HEAP32[(k+16|0)>>2]|0)?8:12;break;case 8:HEAP32[(j+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=0!=(HEAPU32[k>>2]>>>6&1|0)?9:10;break;case 9:b=_ExpressionSize(HEAP32[(k+16|0)>>2]);var m=
HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[m>>2]=HEAP32[m>>2]+b|0;b=11;break;case 10:b=_ConvertValueToExpression(d,HEAP32[(k+16|0)>>2]);var m=_ExpressionSize(b),n=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[n>>2]=HEAP32[n>>2]+m|0;_ReturnExpression(d,b);b=11;break;case 11:b=13;break;case 12:HEAP32[(j+12|0)>>2]=-1;b=13;break;case 13:b=0!=(_EnvGetDynamicConstraintChecking(d)|0)?14:15;break;case 14:b=0==(HEAP32[(k+20|0)>>2]|0)?15:16;break;case 15:var o=-1;b=17;break;case 16:o=HEAPU16[(HEAP32[(k+
20|0)>>2]+4|0)>>1]&65535;b=17;break;case 17:HEAP32[(j+16|0)>>2]=o;_GenWrite(j,24,g);b=18;break;case 18:i=i+1|0;b=3;break;case 19:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveSlots.X=1;
function _BsaveTemplateSlots(h,f,c){h=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=h;b=f;d=c;e=0;a=3;break;case 3:a=e>>>0<HEAPU32[(b+80|0)>>2]>>>0?4:9;break;case 4:a=0!=(HEAP32[(HEAP32[(b+64|0)>>2]+(e<<2)|0)>>2]|0)?5:6;break;case 5:var i=HEAP32[(HEAP32[(HEAP32[(b+64|0)>>2]+(e<<2)|0)>>2]+28|0)>>2];a=7;break;case 6:i=-1;a=7;break;case 7:HEAP32[g>>2]=i;_GenWrite(g,4,d);a=8;break;case 8:e=e+1|
0;a=3;break;case 9:STACKTOP=h;return;default:assert(0,"bad label: "+a)}}_BsaveTemplateSlots.X=1;function _BsaveSlotMap(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=0!=(HEAP32[(a+80|0)>>2]|0)?3:4;break;case 3:_GenWrite(HEAP32[(a+68|0)>>2],(HEAP32[(a+84|0)>>2]+1|0)<<2|0,b);h=4;break;case 4:return;default:assert(0,"bad label: "+h)}}
function _BsaveHandlers(h,f,c){var a=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;d=h;e=f;g=c;i=0;b=3;break;case 3:b=i>>>0<HEAPU32[(e+104|0)>>2]>>>0?4:12;break;case 4:k=HEAP32[(e+96|0)>>2]+40*i|0;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-2|HEAP32[k>>2]&1;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-7|(HEAPU32[k>>2]>>>1&3)<<1;HEAP32[(j+4|0)>>2]=HEAP32[(k+16|0)>>2];HEAP32[(j+8|0)>>2]=HEAP32[(k+20|0)>>2];HEAP32[(j+
12|0)>>2]=HEAP32[(k+24|0)>>2];b=0==(HEAP32[(k+12|0)>>2]|0)?5:6;break;case 5:var l=-1;b=7;break;case 6:l=HEAP32[(HEAP32[(k+12|0)>>2]+12|0)>>2];b=7;break;case 7:HEAP32[(j+20|0)>>2]=l;HEAP32[(j+16|0)>>2]=HEAPU32[(HEAP32[(k+8|0)>>2]+12|0)>>2]>>>3&536870911;b=0!=(HEAP32[(k+28|0)>>2]|0)?8:9;break;case 8:HEAP32[(j+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(k+28|0)>>2]);var m=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[m>>2]=HEAP32[m>>2]+b|0;b=10;break;
case 9:HEAP32[(j+24|0)>>2]=-1;b=10;break;case 10:_GenWrite(j,28,g);b=11;break;case 11:i=i+1|0;b=3;break;case 12:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveHandlers.X=1;function _BsaveHandlerMap(h,f,c){_GenWrite(HEAP32[(f+100|0)>>2],HEAP32[(f+104|0)>>2]<<2|0,c)}
function _BsaveDefaultSlotExpressions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=0;a=3;break;case 3:a=g>>>0<HEAPU32[(d+72|0)>>2]>>>0?4:11;break;case 4:a=0!=(HEAP32[((HEAP32[(d+60|0)>>2]+44*g|0)+16|0)>>2]|0)?5:9;break;case 5:a=0!=(HEAPU32[(HEAP32[(d+60|0)>>2]+44*g|0)>>2]>>>6&1|0)?6:7;break;case 6:_BsaveExpression(b,HEAP32[((HEAP32[(d+60|0)>>2]+44*g|0)+16|0)>>2],e);a=8;break;case 7:a=_ConvertValueToExpression(b,HEAP32[((HEAP32[(d+60|0)>>2]+44*g|0)+16|0)>>2]);_BsaveExpression(b,
a,e);_ReturnExpression(b,a);a=8;break;case 8:a=9;break;case 9:a=10;break;case 10:g=g+1|0;a=3;break;case 11:return;default:assert(0,"bad label: "+a)}}_BsaveDefaultSlotExpressions.X=1;
function _BsaveHandlerActionExpressions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;a=f;d=c;e=a;g=0;a=3;break;case 3:a=g>>>0<HEAPU32[(e+104|0)>>2]>>>0?4:6;break;case 4:_BsaveExpression(b,HEAP32[((HEAP32[(e+96|0)>>2]+40*g|0)+28|0)>>2],d);a=5;break;case 5:g=g+1|0;a=3;break;case 6:return;default:assert(0,"bad label: "+a)}}
function _MarkDefclassItems(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=b|0;c=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+8|0;var e=HEAP32[c>>2];HEAP32[c>>2]=e+1|0;_MarkConstructHeaderNeededItems(d,e);d=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]+(((HEAPU16[(b+36|0)>>1]&65535)+(HEAPU16[(b+44|0)>>1]&65535)|0)+(HEAPU16[(b+52|0)>>1]&65535)|0)|0;d=HEAP32[(b+112|0)>>2]+12|0;HEAP32[d>>2]=HEAP32[d>>2]&-5|4;d=0;c=3;break;case 3:c=d>>>0<HEAPU32[(b+72|0)>>2]>>>0?4:11;break;
case 4:c=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+16|0;e=HEAP32[c>>2];HEAP32[c>>2]=e+1|0;HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+28|0)>>2]=e;c=HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+12|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=0!=(HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]|0)?5:9;break;case 5:c=0!=(HEAPU32[(HEAP32[(b+60|0)>>2]+44*d|0)>>2]>>>6&1|0)?6:7;break;case 6:c=_ExpressionSize(HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]);e=HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+32|0;HEAP32[e>>2]=HEAP32[e>>
2]+c|0;_MarkNeededItems(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]);c=8;break;case 7:c=_ConvertValueToExpression(a,HEAP32[((HEAP32[(b+60|0)>>2]+44*d|0)+16|0)>>2]);var e=_ExpressionSize(c),g=HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+32|0;HEAP32[g>>2]=HEAP32[g>>2]+e|0;_MarkNeededItems(a,c);_ReturnExpression(a,c);c=8;break;case 8:c=9;break;case 9:c=10;break;case 10:d=d+1|0;c=3;break;case 11:c=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+24|0;HEAP32[c>>2]=HEAP32[c>>2]+HEAP32[(b+80|0)>>2]|0;c=0!=(HEAP32[(b+
80|0)>>2]|0)?12:13;break;case 12:c=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+28|0;HEAP32[c>>2]=HEAP32[c>>2]+(HEAP32[(b+84|0)>>2]+1|0)|0;c=13;break;case 13:d=0;c=14;break;case 14:c=d>>>0<HEAPU32[(b+104|0)>>2]>>>0?15:17;break;case 15:c=HEAP32[((HEAP32[(b+96|0)>>2]+40*d|0)+8|0)>>2]+12|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=_ExpressionSize(HEAP32[((HEAP32[(b+96|0)>>2]+40*d|0)+28|0)>>2]);e=HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+32|0;HEAP32[e>>2]=HEAP32[e>>2]+c|0;_MarkNeededItems(a,HEAP32[((HEAP32[(b+96|0)>>2]+
40*d|0)+28|0)>>2]);c=16;break;case 16:d=d+1|0;c=14;break;case 17:a=HEAP32[(HEAP32[(a+16|0)>>2]+132|0)>>2]+32|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(b+104|0)>>2]|0;return;default:assert(0,"bad label: "+c)}}_MarkDefclassItems.X=1;function _SetupObjectsCompiler(h){_AllocateEnvironmentData(h,36,4,0);var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str3171|0,0,1272,1274,1276,13);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]=f}
function _ReadyObjectsForCode(h){var f=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e;a=h;HEAP32[(b|0)>>2]=0;HEAP16[(b+4|0)>>1]=1;HEAP16[(b+6|0)>>1]=0;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+164|0)>>2]+8|0)>>2];_DoForAllConstructs(a,1278,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+84|0)>>2]+4|0)>>2],0,b);d=b=0;c=3;break;case 3:c=167>(d|0)?4:10;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+84|0)>>2]+112|0)>>2]+(d<<2)|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:8;break;case 6:c=b;b=c+1|0;HEAP32[(e+24|0)>>2]=c;c=7;break;case 7:e=HEAP32[(e+20|0)>>2];c=5;break;case 8:c=9;break;case 9:d=d+1|0;c=3;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ReadyObjectsForCode.X=1;
function _InitObjectsCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+40|0)>>2],d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+36|0)>>2],e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+44|0)>>2],h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+48|
0)>>2];_fprintf(f,STRING_TABLE.__str453217|0,(tempInt=STACKTOP,STACKTOP+=32,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=c,HEAP32[tempInt+8>>2]=d,HEAP32[tempInt+12>>2]=c,HEAP32[tempInt+16>>2]=e,HEAP32[tempInt+20>>2]=c,HEAP32[tempInt+24>>2]=h,HEAP32[tempInt+28>>2]=c,tempInt));STACKTOP=a}_InitObjectsCode.X=1;
function _ObjectsToCode(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=228;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t,u=e+4,v=e+36,w=e+68,x=e+100,y=e+132;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;s=t=0;g=3;break;case 3:g=8>(s|0)?4:6;break;case 4:HEAP32[(u+(s<<2)|0)>>2]=0;HEAP32[(v+(s<<2)|0)>>2]=1;HEAP32[(w+(s<<2)|0)>>2]=0;HEAP32[(x+(s<<2)|0)>>2]=0;HEAP32[(y+12*s|0)>>2]=0;g=5;break;case 5:s=s+1|0;g=3;break;
case 6:_fprintf(m,STRING_TABLE.__str43176|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(m,STRING_TABLE.__str53177|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0==(_ClassIDMapToCode(j,k,l,m,n,o,p)|0)?7:8;break;case 7:i=0;g=39;break;case 8:g=0==(_ClassHashTableToCode(j,k,l,m,n,o,p)|0)?9:10;
break;case 9:i=0;g=39;break;case 10:g=0==(_SlotNameHashTableToCode(j,k,l,m,n,o,p)|0)?11:12;break;case 11:i=0;g=39;break;case 12:g=0==(_SlotNameEntriesToCode(j,k,l,m,n,o,p)|0)?13:14;break;case 13:i=0;g=39;break;case 14:q=_EnvGetNextDefmodule(j,0);g=15;break;case 15:g=0!=(q|0)?16:37;break;case 16:_EnvSetCurrentModule(j,q);g=_OpenFileIfNeeded(j,HEAP32[(w|0)>>2],k,l,n,p,HEAP32[(v|0)>>2],m,STRING_TABLE.__str63178|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]|0)>>2],
HEAP32[(x|0)>>2],y|0);HEAP32[(w|0)>>2]=g;g=0==(HEAP32[(w|0)>>2]|0)?17:18;break;case 17:g=38;break;case 18:_DefclassModuleToCode(j,HEAP32[(w|0)>>2],q,n,o);r=_CloseFileIfNeeded(j,HEAP32[(w|0)>>2],u|0,v|0,o,x|0,y|0);HEAP32[(w|0)>>2]=r;r=_EnvGetNextDefclass(j,0);g=19;break;case 19:g=0!=(r|0)?20:36;break;case 20:g=_OpenFileIfNeeded(j,HEAP32[(w+4|0)>>2],k,l,n,p,HEAP32[(v+4|0)>>2],m,STRING_TABLE.__str73179|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+4|0)>>2],HEAP32[(x+
4|0)>>2],y+12|0);HEAP32[(w+4|0)>>2]=g;g=0==(HEAP32[(w+4|0)>>2]|0)?21:22;break;case 21:g=38;break;case 22:_SingleDefclassToCode(j,HEAP32[(w+4|0)>>2],n,o,r,t,HEAP32[(v+8|0)>>2],HEAP32[(u+8|0)>>2],HEAP32[(v+12|0)>>2],HEAP32[(u+12|0)>>2],HEAP32[(v+16|0)>>2],HEAP32[(u+16|0)>>2],HEAP32[(v+20|0)>>2],HEAP32[(u+20|0)>>2],HEAP32[(v+24|0)>>2],HEAP32[(u+24|0)>>2],HEAP32[(v+28|0)>>2],HEAP32[(u+28|0)>>2]);g=u+4|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=_CloseFileIfNeeded(j,HEAP32[(w+4|0)>>2],u+4|0,v+4|0,o,x+4|0,y+12|0);
HEAP32[(w+4|0)>>2]=g;g=0==(_InheritanceLinksToCode(j,w+8|0,k,l,n,m,p,o,r,v+8|0,u+8|0,x+8|0,y+24|0)|0)?23:24;break;case 23:g=38;break;case 24:g=0==(_SlotsToCode(j,w+12|0,k,l,n,m,p,o,r,v+12|0,u+12|0,x+12|0,y+36|0)|0)?25:26;break;case 25:g=38;break;case 26:g=0==(_TemplateSlotsToCode(j,w+16|0,k,l,n,m,p,o,r,v+16|0,u+16|0,x+16|0,y+48|0)|0)?27:28;break;case 27:g=38;break;case 28:g=0==(_OrderedSlotsToCode(j,w+20|0,k,l,n,m,p,o,r,v+20|0,u+20|0,x+20|0,y+60|0)|0)?29:30;break;case 29:g=38;break;case 30:g=0==(_HandlersToCode(j,
w+24|0,k,l,n,m,p,o,r,v+24|0,u+24|0,x+24|0,y+72|0)|0)?31:32;break;case 31:g=38;break;case 32:g=0==(_OrderedHandlersToCode(j,w+28|0,k,l,n,m,p,o,r,v+28|0,u+28|0,x+28|0,y+84|0)|0)?33:34;break;case 33:g=38;break;case 34:g=35;break;case 35:r=_EnvGetNextDefclass(j,r);g=19;break;case 36:q=_EnvGetNextDefmodule(j,q);t=t+1|0;g=u|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;g=15;break;case 37:_CloseObjectFiles(j,w|0,x|0,y|0,o);i=1;g=39;break;case 38:_CloseObjectFiles(j,w|0,x|0,y|0,o);i=0;g=39;break;case 39:return h=i,STACKTOP=
e,h;default:assert(0,"bad label: "+g)}}_ObjectsToCode.X=1;
function _PrintClassReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str13173|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+144|0)>>2]|
0)>>2]+20|0)>>2]+4|0)>>2];var m=k,n=((HEAP32[((j|0)+12|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[((j|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str23174|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _DefclassCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str33175|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}
function _ClassIDMapToCode(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r;k=h;i=f;l=c;m=a;n=b;o=d;p=e;q=0;q=_OpenFileIfNeeded(k,q,i,l,n,p,1,m,STRING_TABLE.__str263198|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+44|0)>>2],0,0);i=0==(q|0)?3:4;break;case 3:j=0;i=11;break;case 4:r=0;i=5;break;case 5:i=(r|0)<(HEAPU16[(HEAP32[(HEAP32[(k+16|
0)>>2]+84|0)>>2]+108|0)>>1]&65535|0)?6:10;break;case 6:i=0<(r|0)?7:8;break;case 7:_fprintf(q,STRING_TABLE.__str123184|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=8;break;case 8:_PrintClassReference(k,q,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+84|0)>>2]+100|0)>>2]+(r<<2)|0)>>2],n,o);i=9;break;case 9:r=r+1|0;i=5;break;case 10:_fprintf(q,STRING_TABLE.__str423214|0,(tempInt=STACKTOP,STACKTOP+=1,
STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+48|0)>>2];i=n;l=HEAPU16[(HEAP32[(HEAP32[(k+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535;_fprintf(q,STRING_TABLE.__str433215|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=l,tempInt));j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+
16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+48|0)>>2];i=n;_fprintf(m,STRING_TABLE.__str443216|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=j,HEAP32[tempInt+4>>2]=i,tempInt));_GenClose(k,q);j=1;i=11;break;case 11:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_ClassIDMapToCode.X=1;
function _ClassHashTableToCode(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r=g,s=g+4;k=h;i=f;l=c;m=a;n=b;o=d;p=e;q=0;HEAP32[s>>2]=1;q=_OpenFileIfNeeded(k,q,i,l,n,p,HEAP32[s>>2],m,STRING_TABLE.__str263198|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+40|0)>>2],0,0);i=0==(q|0)?3:4;break;case 3:j=0;i=11;break;case 4:HEAP32[r>>
2]=0;i=5;break;case 5:i=167>(HEAP32[r>>2]|0)?6:10;break;case 6:i=0<(HEAP32[r>>2]|0)?7:8;break;case 7:_fprintf(q,STRING_TABLE.__str123184|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=8;break;case 8:_PrintClassReference(k,q,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+84|0)>>2]+104|0)>>2]+(HEAP32[r>>2]<<2)|0)>>2],n,o);i=9;break;case 9:HEAP32[r>>2]=HEAP32[r>>2]+1|0;i=5;break;case 10:_CloseFileIfNeeded(k,
q,r,s,HEAP32[r>>2],0,0);j=1;i=11;break;case 11:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_ClassHashTableToCode.X=1;
function _SlotNameHashTableToCode(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r=g,s=g+4;k=h;i=f;l=c;m=a;n=b;o=d;p=e;q=0;HEAP32[s>>2]=1;q=_OpenFileIfNeeded(k,q,i,l,n,p,HEAP32[s>>2],m,STRING_TABLE.__str413213|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+36|0)>>2],0,0);i=0==(q|0)?3:4;break;case 3:j=0;i=11;break;case 4:HEAP32[r>>
2]=0;i=5;break;case 5:i=167>(HEAP32[r>>2]|0)?6:10;break;case 6:i=0<(HEAP32[r>>2]|0)?7:8;break;case 7:_fprintf(q,STRING_TABLE.__str123184|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=8;break;case 8:_PrintSlotNameReference(k,q,HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+84|0)>>2]+112|0)>>2]+(HEAP32[r>>2]<<2)|0)>>2],n,o);i=9;break;case 9:HEAP32[r>>2]=HEAP32[r>>2]+1|0;i=5;break;case 10:_CloseFileIfNeeded(k,
q,r,s,HEAP32[r>>2],0,0);j=1;i=11;break;case 11:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_SlotNameHashTableToCode.X=1;
function _SlotNameEntriesToCode(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s=g,t=g+4,u,v;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=0;HEAP32[s>>2]=0;HEAP32[t>>2]=1;v=0;i=3;break;case 3:i=167>v>>>0?4:12;break;case 4:u=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+84|0)>>2]+112|0)>>2]+(v<<2)|0)>>2];i=5;break;case 5:i=0!=(u|0)?6:10;break;case 6:r=_OpenFileIfNeeded(k,r,l,m,o,
q,HEAP32[t>>2],n,STRING_TABLE.__str383210|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+32|0)>>2],0,0);i=0==(r|0)?7:8;break;case 7:j=0;i=15;break;case 8:i=HEAP32[(u|0)>>2];var w=HEAP32[(u+8|0)>>2];_fprintf(r,STRING_TABLE.__str393211|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=w,tempInt));_PrintSymbolReference(k,r,HEAP32[(u+12|0)>>2]);_fprintf(r,STRING_TABLE.__str93181|0,(tempInt=
STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(k,r,HEAP32[(u+16|0)>>2]);_fprintf(r,STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSlotNameReference(k,r,HEAP32[(u+20|0)>>2],o,p);_fprintf(r,STRING_TABLE.__str403212|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+
3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));HEAP32[s>>2]=HEAP32[s>>2]+1|0;r=_CloseFileIfNeeded(k,r,s,t,p,0,0);i=9;break;case 9:u=HEAP32[(u+20|0)>>2];i=5;break;case 10:i=11;break;case 11:v=v+1|0;i=3;break;case 12:i=0!=(r|0)?13:14;break;case 13:_CloseFileIfNeeded(k,r,s,t,HEAP32[s>>2],0,0);i=14;break;case 14:j=1;i=15;break;case 15:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_SlotNameEntriesToCode.X=1;
function _DefclassModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str273199|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+4|0)>>
2]);_fprintf(f,STRING_TABLE.__str373209|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _SingleDefclassToCode(h,f,c,a,b,d,e,g,i,j,k,l,m,n,o,p,q,r){var s=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var t;for(t=2;;)switch(t){case 2:var u,v,w,x,y,A,z,B,C,D,E,F,G,H,J,O,K;u=h;v=f;w=c;x=a;y=b;t=d;A=e;z=g;B=i;C=j;D=k;E=l;F=m;G=n;H=o;J=p;O=q;K=r;_fprintf(v,STRING_TABLE.__str273199|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(u,
v,y|0,w,x,t,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+4|0)>>2]);t=HEAPU32[(y+24|0)>>2]>>>1&1;var L=HEAPU32[(y+24|0)>>2]>>>2&1,I=HEAPU32[(y+24|0)>>2]>>>3&1,M=HEAPU16[(y+26|0)>>1]&65535,N=HEAP32[(y+32|0)>>2];_fprintf(v,STRING_TABLE.__str283200|0,(tempInt=STACKTOP,STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,
HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,HEAP32[tempInt+16>>2]=N,tempInt));t=0<(HEAPU16[(y+36|0)>>1]&65535|0)?3:4;break;case 3:t=HEAPU16[(y+36|0)>>1]&65535;L=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+8|0)>>2];I=w;M=A;N=z;_fprintf(v,STRING_TABLE.__str293201|0,(tempInt=STACKTOP,STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,HEAP32[tempInt+16>>
2]=N,tempInt));t=5;break;case 4:_fprintf(v,STRING_TABLE.__str303202|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=5;break;case 5:z=z+(HEAPU16[(y+36|0)>>1]&65535)|0;t=0<(HEAPU16[(y+44|0)>>1]&65535|0)?6:7;break;case 6:t=HEAPU16[(y+44|0)>>1]&65535;L=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+8|0)>>2];I=w;M=A;N=z;_fprintf(v,STRING_TABLE.__str293201|0,(tempInt=STACKTOP,
STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,HEAP32[tempInt+16>>2]=N,tempInt));t=8;break;case 7:_fprintf(v,STRING_TABLE.__str303202|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=8;break;case 8:z=z+(HEAPU16[(y+44|0)>>1]&65535)|0;t=0<(HEAPU16[(y+52|0)>>1]&65535|0)?9:10;break;case 9:t=
HEAPU16[(y+52|0)>>1]&65535;L=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+8|0)>>2];I=w;M=A;N=z;_fprintf(v,STRING_TABLE.__str293201|0,(tempInt=STACKTOP,STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,HEAP32[tempInt+16>>2]=N,tempInt));t=11;break;case 10:_fprintf(v,STRING_TABLE.__str313203|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=11;break;case 11:t=0!=(HEAP32[(y+60|0)>>2]|0)?12:13;break;case 12:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+12|0)>>2];L=w;I=B;M=C;_fprintf(v,STRING_TABLE.__str323204|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=14;break;case 13:_fprintf(v,
STRING_TABLE.__str333205|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=14;break;case 14:t=0!=(HEAP32[(y+64|0)>>2]|0)?15:16;break;case 15:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+16|0)>>2];L=w;I=D;M=E;_fprintf(v,STRING_TABLE.__str323204|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+
4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=17;break;case 16:_fprintf(v,STRING_TABLE.__str333205|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=17;break;case 17:t=0!=(HEAP32[(y+68|0)>>2]|0)?18:19;break;case 18:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+20|0)>>2];L=w;I=F;M=G;_fprintf(v,STRING_TABLE.__str323204|0,(tempInt=STACKTOP,STACKTOP+=
16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=20;break;case 19:_fprintf(v,STRING_TABLE.__str333205|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=20;break;case 20:t=HEAP32[(y+72|0)>>2];L=HEAP32[(y+76|0)>>2];I=HEAP32[(y+80|0)>>2];M=HEAP32[(y+84|0)>>2];_fprintf(v,STRING_TABLE.__str343206|
0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=0!=(HEAP32[(y+96|0)>>2]|0)?21:22;break;case 21:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+24|0)>>2];L=w;I=H;M=J;_fprintf(v,STRING_TABLE.__str323204|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+
4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=23;break;case 22:_fprintf(v,STRING_TABLE.__str333205|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=23;break;case 23:t=0!=(HEAP32[(y+100|0)>>2]|0)?24:25;break;case 24:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(u+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+28|0)>>2];L=w;I=O;M=K;_fprintf(v,STRING_TABLE.__str323204|0,(tempInt=STACKTOP,STACKTOP+=
16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=L,HEAP32[tempInt+8>>2]=I,HEAP32[tempInt+12>>2]=M,tempInt));t=26;break;case 25:_fprintf(v,STRING_TABLE.__str333205|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));t=26;break;case 26:h=HEAP32[(y+104|0)>>2];_fprintf(v,STRING_TABLE.__str353207|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=h,tempInt));_PrintClassReference(u,v,HEAP32[(y+108|0)>>2],w,x);_fprintf(v,STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintBitMapReference(u,v,HEAP32[(y+112|0)>>2]);_fprintf(v,STRING_TABLE.__str363208|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=
0,tempInt));STACKTOP=s;return;default:assert(0,"bad label: "+t)}}_SingleDefclassToCode.X=1;
function _InheritanceLinksToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;F=0;E=((HEAPU16[(y+36|0)>>1]&65535)+(HEAPU16[(y+44|0)>>1]&65535)|0)+(HEAPU16[(y+52|0)>>1]&65535)|0;o=0==(E|0)?3:4;break;case 3:p=1;o=25;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str263198|
0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+8|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=25;break;case 6:D=0;o=7;break;case 7:o=D>>>0<(HEAPU16[(y+36|0)>>1]&65535)>>>0?8:12;break;case 8:o=0!=(F|0)?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:_PrintClassReference(q,
HEAP32[r>>2],HEAP32[(HEAP32[((y+36|0)+4|0)>>2]+(D<<2)|0)>>2],u,x);F=1;o=11;break;case 11:D=D+1|0;o=7;break;case 12:D=0;o=13;break;case 13:o=D>>>0<(HEAPU16[(y+44|0)>>1]&65535)>>>0?14:18;break;case 14:o=0!=(F|0)?15:16;break;case 15:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=16;break;case 16:_PrintClassReference(q,HEAP32[r>>2],HEAP32[(HEAP32[((y+44|0)+
4|0)>>2]+(D<<2)|0)>>2],u,x);F=1;o=17;break;case 17:D=D+1|0;o=13;break;case 18:D=0;o=19;break;case 19:o=D>>>0<(HEAPU16[(y+52|0)>>1]&65535)>>>0?20:24;break;case 20:o=0!=(F|0)?21:22;break;case 21:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=22;break;case 22:_PrintClassReference(q,HEAP32[r>>2],HEAP32[(HEAP32[((y+52|0)+4|0)>>2]+(D<<2)|0)>>2],u,x);F=1;o=23;
break;case 23:D=D+1|0;o=19;break;case 24:p=z;HEAP32[p>>2]=HEAP32[p>>2]+E|0;p=_CloseFileIfNeeded(q,HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=25;break;case 25:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_InheritanceLinksToCode.X=1;
function _SlotsToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F=n;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;o=0==(HEAP32[(y+72|0)>>2]|0)?3:4;break;case 3:p=1;o=22;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str183190|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>
2]|0)>>2]+20|0)>>2]+12|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=22;break;case 6:D=0;o=7;break;case 7:o=D>>>0<HEAPU32[(y+72|0)>>2]>>>0?8:21;break;case 8:E=HEAP32[(y+60|0)>>2]+44*D|0;o=0<D>>>0?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str123184|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:o=HEAP32[E>>2]&1;var G=HEAPU32[E>>2]>>>
1&1,H=HEAPU32[E>>2]>>>2&1,J=HEAPU32[E>>2]>>>3&1,O=HEAPU32[E>>2]>>>4&1,K=HEAPU32[E>>2]>>>5&1,L=HEAPU32[E>>2]>>>6&1,I=HEAPU32[E>>2]>>>7&1,M=HEAPU32[E>>2]>>>8&1,N=HEAPU32[E>>2]>>>9&1,P=HEAPU32[E>>2]>>>10&1,Q=HEAPU32[E>>2]>>>11&1,S=HEAPU32[E>>2]>>>12&1,R=HEAPU32[E>>2]>>>13&1;_fprintf(HEAP32[r>>2],STRING_TABLE.__str193191|0,(tempInt=STACKTOP,STACKTOP+=56,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=o,HEAP32[tempInt+4>>2]=G,HEAP32[tempInt+8>>2]=H,HEAP32[tempInt+12>>2]=J,HEAP32[tempInt+
16>>2]=O,HEAP32[tempInt+20>>2]=K,HEAP32[tempInt+24>>2]=L,HEAP32[tempInt+28>>2]=I,HEAP32[tempInt+32>>2]=M,HEAP32[tempInt+36>>2]=N,HEAP32[tempInt+40>>2]=P,HEAP32[tempInt+44>>2]=Q,HEAP32[tempInt+48>>2]=S,HEAP32[tempInt+52>>2]=R,tempInt));_PrintClassReference(q,HEAP32[r>>2],HEAP32[(E+4|0)>>2],u,x);_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSlotNameReference(q,
HEAP32[r>>2],HEAP32[(E+8|0)>>2],u,x);_fprintf(HEAP32[r>>2],STRING_TABLE.__str203192|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(q,HEAP32[r>>2],HEAP32[(E+12|0)>>2]);o=0!=(HEAP32[(E+16|0)>>2]|0)?11:15;break;case 11:_fprintf(HEAP32[r>>2],STRING_TABLE.__str213193|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=0,tempInt));o=0!=(HEAPU32[E>>2]>>>6&1|0)?12:13;break;case 12:_ExpressionToCode(q,HEAP32[r>>2],HEAP32[(E+16|0)>>2]);o=14;break;case 13:o=_ConvertValueToExpression(q,HEAP32[(E+16|0)>>2]);_ExpressionToCode(q,HEAP32[r>>2],o);_ReturnExpression(q,o);o=14;break;case 14:o=16;break;case 15:_fprintf(HEAP32[r>>2],STRING_TABLE.__str223194|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=16;break;case 16:_fprintf(HEAP32[r>>
2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintConstraintReference(q,HEAP32[r>>2],HEAP32[(E+20|0)>>2],u,x);_fprintf(HEAP32[r>>2],STRING_TABLE.__str233195|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=0!=(HEAP32[E>>2]&1|0)?17:18;break;case 17:HEAP32[F>>2]=HEAP32[(HEAP32[(E+
32|0)>>2]+28|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+12|0)>>2];G=u;H=HEAP32[F>>2]&65535;J=HEAPU32[F>>2]>>>16&65535;_fprintf(HEAP32[r>>2],STRING_TABLE.__str243196|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=o,HEAP32[tempInt+4>>2]=G,HEAP32[tempInt+8>>2]=H,HEAP32[tempInt+12>>2]=J,tempInt));o=19;break;case 18:_fprintf(HEAP32[r>>2],STRING_TABLE.__str253197|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=19;break;case 19:o=20;break;case 20:D=D+1|0;o=7;break;case 21:p=z;HEAP32[p>>2]=HEAP32[p>>2]+HEAP32[(y+72|0)>>2]|0;p=_CloseFileIfNeeded(q,HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=22;break;case 22:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_SlotsToCode.X=1;
function _TemplateSlotsToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F=n;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;o=0==(HEAP32[(y+80|0)>>2]|0)?3:4;break;case 3:p=1;o=13;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str163188|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+
144|0)>>2]|0)>>2]+20|0)>>2]+16|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=13;break;case 6:D=0;o=7;break;case 7:o=D>>>0<HEAPU32[(y+80|0)>>2]>>>0?8:12;break;case 8:E=HEAP32[(HEAP32[(y+64|0)>>2]+(D<<2)|0)>>2];o=0<D>>>0?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:HEAP32[F>>2]=HEAP32[(E+
28|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>2]+20|0)>>2]+12|0)>>2];var G=u,H=HEAP32[F>>2]&65535,J=HEAPU32[F>>2]>>>16&65535;_fprintf(HEAP32[r>>2],STRING_TABLE.__str173189|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=o,HEAP32[tempInt+4>>2]=G,HEAP32[tempInt+8>>2]=H,HEAP32[tempInt+12>>2]=J,tempInt));o=11;break;case 11:D=D+1|0;o=7;break;case 12:p=z;HEAP32[p>>2]=HEAP32[p>>2]+HEAP32[(y+80|0)>>2]|0;p=_CloseFileIfNeeded(q,
HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=13;break;case 13:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_TemplateSlotsToCode.X=1;
function _OrderedSlotsToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;o=0==(HEAP32[(y+80|0)>>2]|0)?3:4;break;case 3:p=1;o=13;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str83180|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>2]+
20|0)>>2]+20|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=13;break;case 6:D=0;o=7;break;case 7:o=D>>>0<=HEAPU32[(y+84|0)>>2]>>>0?8:12;break;case 8:o=0<D>>>0?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:o=HEAP32[(HEAP32[(y+68|0)>>2]+(D<<2)|0)>>2];_fprintf(HEAP32[r>>2],STRING_TABLE.__str103182|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=o,tempInt));o=11;break;case 11:D=D+1|0;o=7;break;case 12:p=z;HEAP32[p>>2]=HEAP32[p>>2]+(HEAP32[(y+84|0)>>2]+1|0)|0;p=_CloseFileIfNeeded(q,HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=13;break;case 13:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_OrderedSlotsToCode.X=1;
function _HandlersToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;o=0==(HEAP32[(y+104|0)>>2]|0)?3:4;break;case 3:p=1;o=13;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str113183|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>2]+20|
0)>>2]+24|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=13;break;case 6:D=0;o=7;break;case 7:o=D>>>0<HEAPU32[(y+104|0)>>2]>>>0?8:12;break;case 8:o=0<D>>>0?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str123184|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:o=HEAP32[(y+96|0)>>2]+40*D|0;var E=HEAP32[o>>2]&1,F=HEAPU32[o>>2]>>>1&3;_fprintf(HEAP32[r>>
2],STRING_TABLE.__str133185|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=E,HEAP32[tempInt+4>>2]=F,tempInt));_PrintSymbolReference(q,HEAP32[r>>2],HEAP32[(o+8|0)>>2]);_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintClassReference(q,HEAP32[r>>2],HEAP32[(o+12|0)>>2],u,x);var E=HEAP32[(o+16|0)>>
2],F=HEAP32[(o+20|0)>>2],G=HEAP32[(o+24|0)>>2];_fprintf(HEAP32[r>>2],STRING_TABLE.__str143186|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=E,HEAP32[tempInt+4>>2]=F,HEAP32[tempInt+8>>2]=G,tempInt));_ExpressionToCode(q,HEAP32[r>>2],HEAP32[(o+28|0)>>2]);_fprintf(HEAP32[r>>2],STRING_TABLE.__str153187|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
o=11;break;case 11:D=D+1|0;o=7;break;case 12:p=z;HEAP32[p>>2]=HEAP32[p>>2]+HEAP32[(y+104|0)>>2]|0;p=_CloseFileIfNeeded(q,HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=13;break;case 13:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_HandlersToCode.X=1;
function _MarkDefclassAndSlots(h,f,c){h=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=h;b=f;d=c;e=d|0;a=HEAP32[e>>2];HEAP32[e>>2]=a+1|0;HEAP32[((b|0)+12|0)>>2]=a;e=0;a=3;break;case 3:a=e>>>0<HEAPU32[(b+72|0)>>2]>>>0?4:8;break;case 4:a=g;HEAP32[a>>2]=HEAP32[a>>2]&-65536|HEAPU16[(d+4|0)>>1]&65535;a=g;HEAP32[a>>2]=HEAP32[a>>2]&65535|(HEAPU16[(d+6|0)>>1]&65535)<<16;HEAP32[((HEAP32[(b+60|0)>>2]+
44*e|0)+28|0)>>2]=HEAP32[g>>2];a=d+6|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=(HEAPU16[(d+6|0)>>1]&65535|0)>=(HEAP32[(d+8|0)>>2]|0)?5:6;break;case 5:a=d+4|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;HEAP16[(d+6|0)>>1]=0;a=6;break;case 6:a=7;break;case 7:e=e+1|0;a=3;break;case 8:STACKTOP=h;return;default:assert(0,"bad label: "+a)}}_MarkDefclassAndSlots.X=1;
function _OrderedHandlersToCode(h,f,c,a,b,d,e,g,i,j,k,l,m){var n=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var o;for(o=2;;)switch(o){case 2:var p,q,r,s,t,u,v,w,x,y,A,z,B,C,D;q=h;r=f;s=c;t=a;u=b;v=d;w=e;x=g;y=i;A=j;z=k;B=l;C=m;o=0==(HEAP32[(y+104|0)>>2]|0)?3:4;break;case 3:p=1;o=13;break;case 4:o=_OpenFileIfNeeded(q,HEAP32[r>>2],s,t,u,w,HEAP32[A>>2],v,STRING_TABLE.__str83180|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(q+16|0)>>2]+144|0)>>2]|0)>>
2]+20|0)>>2]+28|0)>>2],HEAP32[B>>2],C);HEAP32[r>>2]=o;o=0==(HEAP32[r>>2]|0)?5:6;break;case 5:p=0;o=13;break;case 6:D=0;o=7;break;case 7:o=D>>>0<HEAPU32[(y+104|0)>>2]>>>0?8:12;break;case 8:o=0<D>>>0?9:10;break;case 9:_fprintf(HEAP32[r>>2],STRING_TABLE.__str93181|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));o=10;break;case 10:o=HEAP32[(HEAP32[(y+100|0)>>2]+(D<<2)|0)>>2];_fprintf(HEAP32[r>>2],STRING_TABLE.__str103182|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=o,tempInt));o=11;break;case 11:D=D+1|0;o=7;break;case 12:p=z;HEAP32[p>>2]=HEAP32[p>>2]+HEAP32[(y+104|0)>>2]|0;p=_CloseFileIfNeeded(q,HEAP32[r>>2],z,A,x,B,C);HEAP32[r>>2]=p;p=1;o=13;break;case 13:return h=p,STACKTOP=n,h;default:assert(0,"bad label: "+o)}}_OrderedHandlersToCode.X=1;
function _CloseObjectFiles(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+4,o;g=h;i=f;j=c;k=a;l=b;HEAP32[m>>2]=l;o=HEAP32[n>>2]=0;e=3;break;case 3:e=8>(o|0)?4:6;break;case 4:HEAP32[m>>2]=l;e=_CloseFileIfNeeded(g,HEAP32[(i+(o<<2)|0)>>2],m,n,l,j+(o<<2)|0,k+12*o|0);HEAP32[(i+(o<<2)|0)>>2]=e;e=5;break;case 5:o=o+1|0;e=3;break;case 6:STACKTOP=d;return;default:assert(0,
"bad label: "+e)}}
function _PrintSlotNameReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str13173|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+144|0)>>
2]|0)>>2]+20|0)>>2]+32|0)>>2];var m=k,n=((HEAP32[(j+24|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[(j+24|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str23174|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _SetupObjectPatternsBload(h){_AllocateEnvironmentData(h,34,16,1280);_AddBinaryItem(h,STRING_TABLE.__str3224|0,0,1282,0,1284,1286,1288,1290,1292)}
function _DeallocateObjectReteBinaryData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]|0)?4:6;break;case 4:_DestroyAlphaBetaMemory(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*b|0)>>2]);f=5;break;case 5:b=b+1|0;f=3;break;case 6:a=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]|0;f=0!=(a|0)?7:8;break;case 7:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2],a);
f=8;break;case 8:a=40*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?9:10;break;case 9:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+12|0)>>2],a);f=10;break;case 10:return;default:assert(0,"bad label: "+f)}}_DeallocateObjectReteBinaryData.X=1;
function _BsaveObjectPatternsFind(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]=0;a=_ObjectNetworkTerminalPointer(c);f=3;break;case 3:f=0!=(a|0)?4:7;break;case 4:f=HEAP32[(a+20|0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=0!=(HEAP32[(a+24|0)>>2]|0)?5:6;break;case 5:f=HEAP32[(a+24|0)>>2]+12|0;HEAP32[f>>
2]=HEAP32[f>>2]&-5|4;f=6;break;case 6:f=HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0;var d=HEAP32[f>>2];HEAP32[f>>2]=d+1|0;HEAP32[(a+40|0)>>2]=d;a=HEAP32[(a+36|0)>>2];f=3;break;case 7:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0)>>2]=0;b=_ObjectNetworkPointer(c);f=8;break;case 8:f=0!=(b|0)?9:18;break;case 9:f=HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0;d=HEAP32[f>>2];HEAP32[f>>2]=d+1|0;HEAP32[(b+36|0)>>2]=d;f=0==(HEAP32[(b+16|0)>>2]|0)?10:16;break;case 10:f=11;break;case 11:f=0==(HEAP32[(b+28|0)>>
2]|0)?12:15;break;case 12:b=HEAP32[(b+20|0)>>2];f=0==(b|0)?13:14;break;case 13:f=18;break;case 14:f=11;break;case 15:b=HEAP32[(b+28|0)>>2];f=17;break;case 16:b=HEAP32[(b+16|0)>>2];f=17;break;case 17:f=8;break;case 18:return;default:assert(0,"bad label: "+f)}}_BsaveObjectPatternsFind.X=1;
function _BsaveStorageObjectPatterns(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=8;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+136|0)>>2]|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+136|0)>>2]+4|0,4,f);STACKTOP=c}
function _BsaveObjectPatterns(h,f){var c=STACKTOP;STACKTOP+=64;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4,j=c+32;b=h;d=f;HEAP32[e>>2]=(28*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]|0)>>2]|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+4|0)>>2]<<5|0)|0;_GenWrite(e,4,d);e=_ObjectNetworkTerminalPointer(b);a=3;break;case 3:a=0!=(e|0)?4:17;break;case 4:_AssignBsavePatternHeaderValues(i|0,e|0);HEAP32[(i+
8|0)>>2]=HEAPU32[(HEAP32[(e+20|0)>>2]+12|0)>>2]>>>3&536870911;a=0!=(HEAP32[(e+24|0)>>2]|0)?5:6;break;case 5:HEAP32[(i+12|0)>>2]=HEAPU32[(HEAP32[(e+24|0)>>2]+12|0)>>2]>>>3&536870911;a=7;break;case 6:HEAP32[(i+12|0)>>2]=-1;a=7;break;case 7:a=0!=(HEAP32[(e+28|0)>>2]|0)?8:9;break;case 8:var k=HEAP32[(HEAP32[(e+28|0)>>2]+36|0)>>2];a=10;break;case 9:k=-1;a=10;break;case 10:HEAP32[(i+16|0)>>2]=k;a=0!=(HEAP32[(e+32|0)>>2]|0)?11:12;break;case 11:var l=HEAP32[(HEAP32[(e+32|0)>>2]+40|0)>>2];a=13;break;case 12:l=
-1;a=13;break;case 13:HEAP32[(i+20|0)>>2]=l;a=0!=(HEAP32[(e+36|0)>>2]|0)?14:15;break;case 14:var m=HEAP32[(HEAP32[(e+36|0)>>2]+40|0)>>2];a=16;break;case 15:m=-1;a=16;break;case 16:HEAP32[(i+24|0)>>2]=m;_GenWrite(i,28,d);e=HEAP32[(e+36|0)>>2];a=3;break;case 17:g=_ObjectNetworkPointer(b);a=18;break;case 18:a=0!=(g|0)?19:43;break;case 19:a=j;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAPU32[g>>2]>>>1&1;a=j;HEAP32[a>>2]=HEAP32[a>>2]&-1021|(HEAPU32[g>>2]>>>3&255)<<2;a=j;HEAP32[a>>2]=HEAP32[a>>2]&-261121|(HEAPU32[g>>
2]>>>11&255)<<10;a=j;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[g>>2]>>>2&1)<<1;HEAP32[(j+4|0)>>2]=HEAP32[(g+8|0)>>2];a=_HashedExpressionIndex(b,HEAP32[(g+12|0)>>2]);HEAP32[(j+8|0)>>2]=a;a=0!=(HEAP32[(g+16|0)>>2]|0)?20:21;break;case 20:var n=HEAP32[(HEAP32[(g+16|0)>>2]+36|0)>>2];a=22;break;case 21:n=-1;a=22;break;case 22:HEAP32[(j+12|0)>>2]=n;a=0!=(HEAP32[(g+20|0)>>2]|0)?23:24;break;case 23:var o=HEAP32[(HEAP32[(g+20|0)>>2]+36|0)>>2];a=25;break;case 24:o=-1;a=25;break;case 25:HEAP32[(j+16|0)>>2]=o;a=0!=
(HEAP32[(g+24|0)>>2]|0)?26:27;break;case 26:var p=HEAP32[(HEAP32[(g+24|0)>>2]+36|0)>>2];a=28;break;case 27:p=-1;a=28;break;case 28:HEAP32[(j+20|0)>>2]=p;a=0!=(HEAP32[(g+28|0)>>2]|0)?29:30;break;case 29:var q=HEAP32[(HEAP32[(g+28|0)>>2]+36|0)>>2];a=31;break;case 30:q=-1;a=31;break;case 31:HEAP32[(j+24|0)>>2]=q;a=0!=(HEAP32[(g+32|0)>>2]|0)?32:33;break;case 32:var r=HEAP32[(HEAP32[(g+32|0)>>2]+40|0)>>2];a=34;break;case 33:r=-1;a=34;break;case 34:HEAP32[(j+28|0)>>2]=r;_GenWrite(j,32,d);a=0==(HEAP32[(g+
16|0)>>2]|0)?35:41;break;case 35:a=36;break;case 36:a=0==(HEAP32[(g+28|0)>>2]|0)?37:40;break;case 37:g=HEAP32[(g+20|0)>>2];a=0==(g|0)?38:39;break;case 38:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+4|0);a=44;break;case 39:a=36;break;case 40:g=HEAP32[(g+28|0)>>2];a=42;break;case 41:g=HEAP32[(g+16|0)>>2];a=42;break;case 42:a=18;break;case 43:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]|0);_RestoreBloadCount(b,
HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+4|0);a=44;break;case 44:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveObjectPatterns.X=1;
function _BloadStorageObjectPatterns(h){var f=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;c=f+4;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,c|0,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]|0)>>2]=HEAP32[(c|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+4|0)>>2]=HEAP32[(c+4|0)>>2];c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+136|0)>>2]+8|0)>>2]=0;c=5;break;case 4:HEAP32[b>>2]=44*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+8|0)>>2]=c;c=5;break;case 5:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+12|0)>>2]=0;c=8;break;case 7:HEAP32[b>>2]=40*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+136|0)>>2]+12|0)>>2]=c;c=8;break;case 8:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorageObjectPatterns.X=1;
function _BloadObjectPatterns(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a;c=f;a=h;_GenReadBinary(a,c,4);c=0==(HEAP32[c>>2]|0)?3:4;break;case 3:c=5;break;case 4:_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]|0)>>2],28,1294);_BloadandRefresh(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+4|0)>>2],32,1296);_SetObjectNetworkTerminalPointer(a,HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+136|0)>>2]+8|0)>>2]|0);_SetObjectNetworkPointer(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+136|0)>>2]+12|0)>>2]|0);c=5;break;case 5:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadObjectPatterns.X=1;
function _ClearBloadObjectPatterns(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=(a|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]|0)?4:8;break;case 4:_DecrementBitMapCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*a|0)+20|0)>>2]);f=0!=(HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*a|0)+24|0)>>2]|0)?5:6;break;case 5:_DecrementBitMapCount(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*a|0)+
24|0)>>2]);f=6;break;case 6:f=7;break;case 7:a=a+1|0;f=3;break;case 8:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]|0)?9:10;break;case 9:f=44*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]|0;_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2],f);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]|0)>>2]=0;f=40*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0)>>2]|0;_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+136|0)>>2]+12|0)>>2],f);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+136|0)>>2]+4|0)>>2]=0;f=10;break;case 10:_SetObjectNetworkTerminalPointer(c,0);_SetObjectNetworkPointer(c,0);return;default:assert(0,"bad label: "+f)}}_ClearBloadObjectPatterns.X=1;
function _UpdatePattern(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*e|0;HEAP32[a>>2]&=-2;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAP32[d>>2]&1)<<1;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-2041|(HEAPU32[d>>2]>>>2&255)<<3;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-522241|(HEAPU32[d>>2]>>>10&255)<<11;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[d>>2]>>>1&1)<<2;HEAP32[(e+4|0)>>2]=0;HEAP32[(e+8|0)>>2]=HEAP32[(d+4|0)>>2];a=-1==(HEAP32[(d+8|0)>>2]|0)?3:
4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+8|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[(e+12|0)>>2]=g;a=-1==(HEAP32[(d+12|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*HEAP32[(d+12|0)>>2]|0;a=8;break;case 8:HEAP32[(e+16|0)>>2]=i;a=-1==(HEAP32[(d+16|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*HEAP32[(d+
16|0)>>2]|0;a=11;break;case 11:HEAP32[(e+20|0)>>2]=j;a=-1==(HEAP32[(d+20|0)>>2]|0)?12:13;break;case 12:var k=0;a=14;break;case 13:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*HEAP32[(d+20|0)>>2]|0;a=14;break;case 14:HEAP32[(e+24|0)>>2]=k;a=-1==(HEAP32[(d+24|0)>>2]|0)?15:16;break;case 15:var l=0;a=17;break;case 16:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*HEAP32[(d+24|0)>>2]|0;a=17;break;case 17:HEAP32[(e+28|0)>>2]=l;a=-1==(HEAP32[(d+28|0)>>2]|0)?18:19;break;case 18:var m=
0;a=20;break;case 19:m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*HEAP32[(d+28|0)>>2]|0;a=20;break;case 20:HEAP32[(e+32|0)>>2]=m;HEAP32[(e+36|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}_UpdatePattern.X=1;
function _UpdateAlpha(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*e|0;_UpdatePatternNodeHeader(b,e|0,d|0);HEAP32[(e+16|0)>>2]=0;HEAP32[(e+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+80|0)>>2]+(HEAP32[(d+8|0)>>2]<<2)|0)>>2];a=-1!=(HEAP32[(d+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(e+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+80|0)>>2]+(HEAP32[(d+12|0)>>2]<<2)|0)>>2];a=HEAP32[(e+24|
0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=5;break;case 4:HEAP32[(e+24|0)>>2]=0;a=5;break;case 5:a=HEAP32[(e+20|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=-1==(HEAP32[(d+16|0)>>2]|0)?6:7;break;case 6:var g=0;a=8;break;case 7:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+12|0)>>2]+40*HEAP32[(d+16|0)>>2]|0;a=8;break;case 8:HEAP32[(e+28|0)>>2]=g;a=-1==(HEAP32[(d+20|0)>>2]|0)?9:10;break;case 9:var i=0;a=11;break;case 10:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*HEAP32[(d+20|0)>>
2]|0;a=11;break;case 11:HEAP32[(e+32|0)>>2]=i;a=-1==(HEAP32[(d+24|0)>>2]|0)?12:13;break;case 12:var j=0;a=14;break;case 13:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+136|0)>>2]+8|0)>>2]+44*HEAP32[(d+24|0)>>2]|0;a=14;break;case 14:HEAP32[(e+36|0)>>2]=j;HEAP32[(e+40|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}_UpdateAlpha.X=1;
function _SetupObjectPatternStuff(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=1==(_ReservedPatternSymbol(c,STRING_TABLE.__str3225|0,0)|0)?3:4;break;case 3:_SystemError(c,STRING_TABLE.__str13226|0,1);_EnvExitRouter(c,1);f=4;break;case 4:_AddReservedPatternSymbol(c,STRING_TABLE.__str3225|0,0);f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2]|0)?5:6;break;case 5:var a=_genalloc(c,96);f=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:h=a;HEAP32[(h|0)>>2]=STRING_TABLE.__str23227|0;HEAP32[(h+88|0)>>2]=20;HEAP32[(h+4|0)>>2]=HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+100|0;HEAP32[(h+12|0)>>2]=1298;HEAP32[(h+16|0)>>2]=1300;HEAP32[(h+20|0)>>2]=1302;HEAP32[(h+24|0)>>2]=1304;HEAP32[(h+
28|0)>>2]=1306;HEAP32[(h+32|0)>>2]=0;HEAP32[(h+36|0)>>2]=1308;HEAP32[(h+40|0)>>2]=1310;HEAP32[(h+44|0)>>2]=1312;HEAP32[(h+48|0)>>2]=1314;HEAP32[(h+52|0)>>2]=1316;HEAP32[(h+56|0)>>2]=1318;HEAP32[(h+60|0)>>2]=1320;HEAP32[(h+64|0)>>2]=1322;HEAP32[(h+68|0)>>2]=1324;HEAP32[(h+72|0)>>2]=1326;HEAP32[(h+76|0)>>2]=1328;HEAP32[(h+80|0)>>2]=1330;HEAP32[(h+84|0)>>2]=1332;_AddPatternParser(c,h);_EnvDefineFunction2(c,STRING_TABLE.__str33228|0,117,1334,STRING_TABLE.__str43229|0,0);_AddFunctionParser(c,STRING_TABLE.__str33228|
0,1336);_FuncSeqOvlFlags(c,STRING_TABLE.__str33228|0,0,0);_InstallObjectPrimitives(c);_ObjectPatternsCompilerSetup(c);_SetupObjectPatternsBload(c);return;default:assert(0,"bad label: "+f)}}_SetupObjectPatternStuff.X=1;function _PatternParserFind(h){var f;for(f=2;;)switch(f){case 2:var c;f=0==(_strcmp(HEAP32[(h+16|0)>>2],STRING_TABLE.__str3225|0)|0)?3:4;break;case 3:c=1;f=5;break;case 4:c=0;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _ObjectLHSParse(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i,j,k,l,m,n,o,p=c+12;d=h;e=f;o=j=i=0;l=_NewClassBitMap(d,(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)-1|0,1);a=0!=(_EmptyClassBitMap(l)|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str13226|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str93234|0);_DeleteIntermediateClassBitMap(d,
l);b=0;a=47;break;case 4:m=_NewClassBitMap(d,(HEAPU16[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)-1|0,1);_IncrementIndentDepth(d,7);_GetToken(d,e,g);a=5;break;case 5:a=171!=(HEAPU16[(g|0)>>1]&65535|0)?6:39;break;case 6:o=1;_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str103235|0);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=170!=(HEAPU16[(g|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(d,STRING_TABLE.__str113236|0);a=46;break;case 8:_GetToken(d,e,g);a=2!=(HEAPU16[(g|0)>>1]&65535|0)?9:
10;break;case 9:_SyntaxErrorMessage(d,STRING_TABLE.__str113236|0);a=46;break;case 10:a=0!=(_CheckDuplicateSlots(d,i,HEAP32[(g+4|0)>>2])|0)?11:12;break;case 11:a=46;break;case 12:a=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+116|0)>>2]|0)?13:18;break;case 13:k=_ParseClassRestriction(d,e,g);a=0==(k|0)?14:15;break;case 14:a=46;break;case 15:_InitializeClassBitMap(d,m,0);a=0==(_ProcessClassRestriction(d,m,k+68|0,1)|0)?16:17;break;case 16:_ReturnLHSParseNodes(d,k);a=46;break;
case 17:_IntersectClassBitMaps(l,m);a=29;break;case 18:a=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+120|0)>>2]|0)?19:22;break;case 19:k=_ParseNameRestriction(d,e,g);a=0==(k|0)?20:21;break;case 20:a=46;break;case 21:_InitializeClassBitMap(d,m,1);a=28;break;case 22:n=_ProcessSlotRestriction(d,l,HEAP32[(g+4|0)>>2],p);a=0!=(n|0)?23:26;break;case 23:_InitializeClassBitMap(d,m,1);k=_ParseSlotRestriction(d,e,g,n,HEAP32[p>>2]);a=0==(k|0)?24:25;break;case 24:a=46;break;case 25:a=
27;break;case 26:_InitializeClassBitMap(d,m,0);k=_GetLHSParseNode(d);HEAP32[(k+36|0)>>2]=HEAP32[(g+4|0)>>2];a=27;break;case 27:a=28;break;case 28:a=29;break;case 29:a=0!=(_EmptyClassBitMap(m)|0)?30:31;break;case 30:_PrintErrorID(d,STRING_TABLE.__str13226|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str123237|0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,HEAP32[(HEAP32[(k+36|0)>>2]+16|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str133238|0);_ReturnLHSParseNodes(d,
k);a=46;break;case 31:a=0!=(_EmptyClassBitMap(l)|0)?32:33;break;case 32:_PrintErrorID(d,STRING_TABLE.__str13226|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str93234|0);_ReturnLHSParseNodes(d,k);a=46;break;case 33:a=0!=(k|0)?34:38;break;case 34:a=0==(i|0)?35:36;break;case 35:i=k;a=37;break;case 36:HEAP32[(j+64|0)>>2]=k;a=37;break;case 37:j=k;a=38;break;case 38:_PPCRAndIndent(d);_GetToken(d,e,g);a=5;break;case 39:a=0==(i|0)?40:43;break;case 40:a=0!=(_EmptyClassBitMap(l)|0)?41:
42;break;case 41:_PrintErrorID(d,STRING_TABLE.__str13226|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str93234|0);a=46;break;case 42:i=_GetLHSParseNode(d);HEAP16[(i|0)>>1]=37;HEAP32[(i+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+116|0)>>2];HEAP16[(i+40|0)>>1]=0;HEAP16[(i+34|0)>>1]=1;a=43;break;case 43:a=0!=(o|0)?44:45;break;case 44:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=45;break;case 45:_DeleteIntermediateClassBitMap(d,m);l=_PackClassBitMap(d,
l);a=_AddBitMap(d,l,((HEAPU16[(l|0)>>1]&65535|0)/8&-1|0)+4|0);HEAP32[(i+60|0)>>2]=a;a=HEAP32[(i+60|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_DeleteIntermediateClassBitMap(d,l);_DecrementIndentDepth(d,7);b=i;a=47;break;case 46:_DeleteIntermediateClassBitMap(d,l);_DeleteIntermediateClassBitMap(d,m);_ReturnLHSParseNodes(d,i);_DecrementIndentDepth(d,7);b=0;a=47;break;case 47:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_ObjectLHSParse.X=1;
function _ReorderAndAnalyzeObjectPattern(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o,p=c,q=c+4,r=c+8,s,t,u,v;d=h;e=f;v=0;a=_FilterObjectPattern(d,HEAP32[(e+28|0)>>2],HEAP32[(e+64|0)>>2],p,q,r);HEAP32[(e+64|0)>>2]=a;a=0==(_EnvGetStaticConstraintChecking(d)|0)?3:4;break;case 3:b=0;a=53;break;case 4:g=HEAP32[(HEAP32[(HEAP32[p>>2]+60|0)>>2]+16|0)>>2];i=_NewClassBitMap(d,
HEAPU16[(g|0)>>1]&65535,0);a=0==(HEAP32[q>>2]|0)?5:6;break;case 5:a=19;break;case 6:a=0==(HEAP32[(HEAP32[q>>2]+20|0)>>2]|0)?7:8;break;case 7:a=19;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[q>>2]+20|0)>>2]+12|0)>>2]|0)?9:19;break;case 9:j=HEAP32[(HEAP32[(HEAP32[q>>2]+20|0)>>2]+12|0)>>2];a=10;break;case 10:a=0!=(j|0)?11:18;break;case 11:m=_LookupDefclassInScope(d,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);a=0!=(m|0)?12:17;break;case 12:a=(HEAPU16[(m+26|0)>>1]&65535|0)<=(HEAPU16[(g|0)>>1]&65535|0)?13:14;break;
case 13:a=0!=(HEAP8[(g+2|0)+((HEAPU16[(m+26|0)>>1]&65535|0)/8&-1)|0]<<24>>24&(1<<(HEAPU16[(m+26|0)>>1]&65535|0)%8&255)<<24>>24|0)?15:16;break;case 14:a=16;break;case 15:a=(i+2|0)+((HEAPU16[(m+26|0)>>1]&65535|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(HEAPU16[(m+26|0)>>1]&65535|0)%8&255)<<24>>24)&255;a=16;break;case 16:a=17;break;case 17:j=HEAP32[(j+12|0)>>2];a=10;break;case 18:v=0!=(_IdenticalClassBitMap(i,g)|0)?0:1;a=20;break;case 19:a=i+2|0;k=g+2|0;l=((HEAPU16[(i|0)>>1]&65535|0)/8&-1)+1|0;assert(0===
l%1,"memcpy given "+l+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(a,k,l,1);a=20;break;case 20:n=HEAP32[(e+64|0)>>2];a=21;break;case 21:a=(n|0)!=(HEAP32[p>>2]|0)?22:47;break;case 22:a=(n|0)==(HEAP32[q>>2]|0)?24:23;break;case 23:a=(n|0)==(HEAP32[r>>2]|0)?24:25;break;case 24:n=HEAP32[(n+64|0)>>2];a=21;break;case 25:s=0;a=26;break;case 26:a=(s&65535|0)<=(HEAPU16[(i|0)>>1]&65535|0)?27:46;break;case 27:a=0!=(HEAP8[(i+2|0)+((s&65535|0)/8&-1)|0]<<24>>24&(1<<(s&65535|0)%8&255)<<
24>>24|0)?28:44;break;case 28:m=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+100|0)>>2]+((s&65535)<<2)|0)>>2];t=_FindInstanceTemplateSlot(d,m,HEAP32[(n+36|0)>>2]);t=HEAP32[(HEAP32[(m+64|0)>>2]+(t<<2)|0)>>2];a=_IntersectConstraints(d,HEAP32[(n+20|0)>>2],HEAP32[(t+20|0)>>2]);k=_UnmatchableConstraint(a);_RemoveConstraint(d,a);a=0!=(k|0)?29:30;break;case 29:v=(i+2|0)+((s&65535|0)/8&-1)|0;HEAP8[v]=HEAP8[v]<<24>>24&((1<<(s&65535|0)%8^-1)&255)<<24>>24&255;v=1;a=43;break;case 30:a=38==(HEAPU16[(n|
0)>>1]&65535|0)?31:42;break;case 31:o=HEAP32[(n+68|0)>>2];a=32;break;case 32:a=0!=(o|0)?33:41;break;case 33:a=38==(HEAPU16[(o|0)>>1]&65535|0)?35:34;break;case 34:a=36==(HEAPU16[(o|0)>>1]&65535|0)?35:36;break;case 35:u=HEAP32[(HEAP32[(o+20|0)>>2]+32|0)>>2];a=37;break;case 36:u=HEAP32[(o+20|0)>>2];a=37;break;case 37:k=HEAP32[(u+24|0)>>2];HEAP32[(u+24|0)>>2]=HEAP32[(HEAP32[(t+20|0)>>2]+24|0)>>2];l=HEAP32[(u+28|0)>>2];HEAP32[(u+28|0)>>2]=HEAP32[(HEAP32[(t+20|0)>>2]+28|0)>>2];a=_IntersectConstraints(d,
u,HEAP32[(t+20|0)>>2]);HEAP32[(u+24|0)>>2]=k;HEAP32[(u+28|0)>>2]=l;k=_UnmatchableConstraint(a);_RemoveConstraint(d,a);a=0!=(k|0)?38:39;break;case 38:v=(i+2|0)+((s&65535|0)/8&-1)|0;HEAP8[v]=HEAP8[v]<<24>>24&((1<<(s&65535|0)%8^-1)&255)<<24>>24&255;v=1;a=41;break;case 39:a=40;break;case 40:o=HEAP32[(o+64|0)>>2];a=32;break;case 41:a=42;break;case 42:a=43;break;case 43:a=44;break;case 44:a=45;break;case 45:s=s+1&65535;a=26;break;case 46:n=HEAP32[(n+64|0)>>2];a=21;break;case 47:a=0!=(v|0)?48:51;break;case 48:a=
0!=(_EmptyClassBitMap(i)|0)?49:50;break;case 49:_PrintErrorID(d,STRING_TABLE.__str13226|0,3,1);_DeleteIntermediateClassBitMap(d,i);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str73232|0);_PrintLongInteger(d,STRING_TABLE.__str63231|0,HEAP16[(e+32|0)>>1]<<16>>16);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str83233|0);b=1;a=53;break;case 50:g=_PackClassBitMap(d,i);_DeleteClassBitMap(d,HEAP32[(HEAP32[p>>2]+60|0)>>2]);a=_AddBitMap(d,g,((HEAPU16[(g|0)>>1]&65535|0)/8&-1|0)+
4|0);HEAP32[(HEAP32[p>>2]+60|0)>>2]=a;a=HEAP32[(HEAP32[p>>2]+60|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_DeleteIntermediateClassBitMap(d,g);a=52;break;case 51:_DeleteIntermediateClassBitMap(d,i);a=52;break;case 52:b=0;a=53;break;case 53:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ReorderAndAnalyzeObjectPattern.X=1;
function _PlaceObjectPattern(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l,m,n,o=c+4,p;d=h;e=f;j=0;g=_ObjectNetworkPointer(d);i=0;p=_FormSlotBitMap(d,HEAP32[(e+64|0)>>2]);a=_RemoveSlotExistenceTests(d,HEAP32[(e+64|0)>>2],o);HEAP32[(e+64|0)>>2]=a;e=HEAP32[(e+64|0)>>2];a=3;break;case 3:a=0!=(HEAPU32[(e+8|0)>>2]>>>2&1|0)?4:5;break;case 4:j=e;e=HEAP32[(e+68|0)>>2];a=5;break;
case 5:a=38==(HEAPU16[(e|0)>>1]&65535|0)?7:6;break;case 6:a=36==(HEAPU16[(e|0)>>1]&65535|0)?7:10;break;case 7:a=0==(HEAP32[(e+64|0)>>2]|0)?8:10;break;case 8:a=0!=(j|0)?9:10;break;case 9:n=1;a=11;break;case 10:n=0;a=11;break;case 11:l=_FindObjectPatternNode(g,e,k,n);a=0==(l|0)?12:13;break;case 12:l=_CreateNewObjectPatternNode(d,e,HEAP32[k>>2],i,n);a=13;break;case 13:a=0==(HEAP32[(e+64|0)>>2]|0)?14:16;break;case 14:a=0!=(j|0)?15:16;break;case 15:e=j;j=0;a=16;break;case 16:i=l;g=HEAP32[(l+16|0)>>2];
e=HEAP32[(e+64|0)>>2];a=17;break;case 17:a=0!=(e|0)?18:19;break;case 18:var q=0==(HEAP32[(e+60|0)>>2]|0)&1;a=20;break;case 19:q=0;a=20;break;case 20:a=0!=(q|0)?3:21;break;case 21:m=HEAP32[(i+32|0)>>2];a=22;break;case 22:a=0!=(m|0)?23:27;break;case 23:a=(HEAP32[o>>2]|0)==(HEAP32[(m+20|0)>>2]|0)?24:26;break;case 24:a=(p|0)==(HEAP32[(m+24|0)>>2]|0)?25:26;break;case 25:b=m;a=33;break;case 26:m=HEAP32[(m+32|0)>>2];a=22;break;case 27:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+
176|0)>>2]|0)?28:29;break;case 28:var r=_genalloc(d,44);a=30;break;case 29:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=30;break;case 30:m=r;_InitializePatternHeader(d,m|0);HEAP32[(m+16|0)>>2]=0;HEAP32[(m+
28|0)>>2]=i;HEAP32[(m+20|0)>>2]=HEAP32[o>>2];a=HEAP32[o>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_MarkBitMapClassesBusy(d,HEAP32[o>>2],1);HEAP32[(m+24|0)>>2]=p;a=0!=(p|0)?31:32;break;case 31:a=p+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=32;break;case 32:HEAP32[(m+40|0)>>2]=0;HEAP32[(m+32|0)>>2]=HEAP32[(i+32|0)>>2];HEAP32[(i+32|0)>>2]=m;b=_ObjectNetworkTerminalPointer(d);HEAP32[(m+36|0)>>2]=b;_SetObjectNetworkTerminalPointer(d,m);b=m;a=33;break;case 33:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+
a)}}_PlaceObjectPattern.X=1;function _CopyClassBitMap(h,f){var c;for(c=2;;)switch(c){case 2:var a;a=f;c=0!=(a|0)?3:4;break;case 3:c=a+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=4;break;case 4:return a;default:assert(0,"bad label: "+c)}}function _MarkObjectPtnIncrementalReset(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=0==(HEAPU32[(a+12|0)>>2]>>>3&1|0)?3:4;break;case 3:h=5;break;case 4:h=a+12|0;HEAP32[h>>2]=HEAP32[h>>2]&-9|(b&1)<<3;h=5;break;case 5:return;default:assert(0,"bad label: "+h)}}
function _DetachObjectPattern(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;a=h;b=f;_ClearObjectPatternMatches(a,b);_MarkBitMapClassesBusy(a,HEAP32[(b+20|0)>>2],-1);_DeleteClassBitMap(a,HEAP32[(b+20|0)>>2]);c=0!=(HEAP32[(b+24|0)>>2]|0)?3:4;break;case 3:_DecrementBitMapCount(a,HEAP32[(b+24|0)>>2]);c=4;break;case 4:d=0;e=_ObjectNetworkTerminalPointer(a);c=5;break;case 5:c=(e|0)!=(b|0)?6:7;break;case 6:d=e;e=HEAP32[(e+36|0)>>2];c=5;break;case 7:c=0==(d|0)?8:9;break;case 8:_SetObjectNetworkTerminalPointer(a,
HEAP32[(e+36|0)>>2]);c=10;break;case 9:HEAP32[(d+36|0)>>2]=HEAP32[(e+36|0)>>2];c=10;break;case 10:d=0;e=HEAP32[(HEAP32[(b+28|0)>>2]+32|0)>>2];c=11;break;case 11:c=(e|0)!=(b|0)?12:13;break;case 12:d=e;e=HEAP32[(e+32|0)>>2];c=11;break;case 13:c=0==(d|0)?14:17;break;case 14:c=0!=(HEAP32[(b+32|0)>>2]|0)?15:16;break;case 15:HEAP32[(HEAP32[(b+28|0)>>2]+32|0)>>2]=HEAP32[(b+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=40;break;case 16:c=18;break;case 17:HEAP32[(d+32|0)>>2]=HEAP32[(b+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];
HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=40;break;case 18:HEAP32[(HEAP32[(b+28|0)>>2]+32|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];i=HEAP32[(b+28|0)>>2];c=0!=(HEAP32[(i+16|0)>>2]|0)?19:20;break;case 19:c=40;break;case 20:c=21;break;case 21:c=0!=(i|0)?22:40;break;case 22:c=0==(HEAP32[(i+24|0)>>2]|0)?23:30;break;case 23:c=0==(HEAP32[(i+28|0)>>2]|0)?24:30;break;case 24:g=i;i=HEAP32[(g+20|0)>>2];c=0==(i|0)?25:26;break;case 25:_SetObjectNetworkPointer(a,0);c=29;break;case 26:HEAP32[(i+16|0)>>2]=0;c=0!=(HEAP32[(i+32|0)>>2]|0)?27:28;break;case 27:i=0;c=28;break;case 28:c=29;break;case 29:_RemoveHashedExpression(a,
HEAP32[(g+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=39;break;case 30:c=0!=(HEAP32[(i+24|0)>>2]|0)?31:34;break;case 31:g=i;HEAP32[(HEAP32[(i+24|0)>>2]+28|0)>>2]=HEAP32[(i+28|0)>>2];c=0!=(HEAP32[(i+
28|0)>>2]|0)?32:33;break;case 32:HEAP32[(HEAP32[(i+28|0)>>2]+24|0)>>2]=HEAP32[(i+24|0)>>2];c=33;break;case 33:_RemoveHashedExpression(a,HEAP32[(g+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];i=0;
c=38;break;case 34:g=i;i=HEAP32[(i+20|0)>>2];c=0==(i|0)?35:36;break;case 35:_SetObjectNetworkPointer(a,HEAP32[(g+28|0)>>2]);c=37;break;case 36:HEAP32[(i+16|0)>>2]=HEAP32[(g+28|0)>>2];c=37;break;case 37:HEAP32[(HEAP32[(g+28|0)>>2]+24|0)>>2]=0;_RemoveHashedExpression(a,HEAP32[(g+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];i=0;c=38;break;case 38:c=39;break;case 39:c=21;break;case 40:return;default:assert(0,"bad label: "+c)}}_DetachObjectPattern.X=1;function _DeleteClassBitMap(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_DecrementBitMapCount(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _ObjectIncrementalReset(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+116|0)>>2]+172|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:_ObjectNetworkAction(c,1,a,-1);f=5;break;case 5:a=HEAP32[(a+68|0)>>2];f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _CreateInitialObjectPattern(h){var f,c;c=_LookupDefclassInScope(h,STRING_TABLE.__str53230|0)+26|0;f=HEAPU16[c>>1]&65535;c=_NewClassBitMap(h,f,0);var a=(c+2|0)+((f|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(f|0)%8&255)<<24>>24)&255;c=_PackClassBitMap(h,c);f=_GetLHSParseNode(h);a=_AddBitMap(h,c,((HEAPU16[(c|0)>>1]&65535|0)/8&-1|0)+4|0);HEAP32[(f+60|0)>>2]=a;a=HEAP32[(f+60|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_DeleteIntermediateClassBitMap(h,c);HEAP16[(f|0)>>1]=37;HEAP16[(f+34|0)>>1]=1;
HEAP32[(f+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+120|0)>>2];HEAP16[(f+40|0)>>1]=1;c=_GetLHSParseNode(h);HEAP32[(f+68|0)>>2]=c;HEAP16[(HEAP32[(f+68|0)>>2]|0)>>1]=8;HEAP32[(HEAP32[(f+68|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+84|0)>>2]+124|0)>>2];return f}_CreateInitialObjectPattern.X=1;
function _ObjectMatchDelayParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i;b=a;e=h;g=f;i=c;_IncrementIndentDepth(e,3);_PPCRAndIndent(e);i=_GroupActions(e,i,b,1,0,0);HEAP32[(g+8|0)>>2]=i;_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(b+8|0)>>2]);_DecrementIndentDepth(e,3);b=0==(HEAP32[(g+8|0)>>2]|0)?3:4;break;case 3:_ReturnExpression(e,g);d=0;b=5;break;case 4:d=g;b=5;break;
case 5:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}function _NewClassBitMap(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=-1==(d|0)?3:4;break;case 3:d=0;a=4;break;case 4:return f=((d|0)/8&-1|0)+4|0,h=_gm2(b,f),_ClearBitString(h,f),HEAP16[(h|0)>>1]=d&65535,_InitializeClassBitMap(b,h,e),h;default:assert(0,"bad label: "+a)}}
function _MarkBitMapClassesBusy(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:a=10;break;case 4:g=HEAP32[(d+16|0)>>2];i=0;a=5;break;case 5:a=(i&65535|0)<=(HEAPU16[(g|0)>>1]&65535|0)?6:10;break;case 6:a=0!=(HEAP8[(g+2|0)+((i&65535|0)/8&-1)|0]<<24>>24&(1<<(i&65535|0)%8&255)<<24>>24|0)?7:8;break;case 7:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+100|0)>>2]+((i&65535)<<2)|0)>>2];a=a+28|0;
HEAP32[a>>2]=HEAP32[a>>2]+e|0;a=8;break;case 8:a=9;break;case 9:i=i+1&65535;a=5;break;case 10:return;default:assert(0,"bad label: "+a)}}_MarkBitMapClassesBusy.X=1;
function _RemoveObjectPartialMatches(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;g=0;i=HEAP32[(d+16|0)>>2];a=3;break;case 3:a=0!=(i|0)?4:11;break;case 4:a=(HEAP32[(i+8|0)>>2]|0)==(e|0)?5:9;break;case 5:a=d+40|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=0==(g|0)?6:7;break;case 6:HEAP32[(d+16|0)>>2]=HEAP32[(i|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+
236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];i=HEAP32[(d+16|0)>>2];a=8;break;case 7:HEAP32[(g|0)>>2]=HEAP32[(i|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>
2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];i=HEAP32[(g|0)>>2];a=8;break;case 8:a=10;break;case 9:g=i;i=HEAP32[(i|0)>>2];a=10;break;case 10:a=3;break;case 11:return;default:assert(0,"bad label: "+a)}}_RemoveObjectPartialMatches.X=1;
function _PackClassBitMap(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=HEAP16[(b|0)>>1];c=3;break;case 3:c=0<(d&65535|0)?4:8;break;case 4:c=0!=(HEAP8[(b+2|0)+((d&65535|0)/8&-1)|0]<<24>>24&(1<<(d&65535|0)%8&255)<<24>>24|0)?5:6;break;case 5:c=8;break;case 6:c=7;break;case 7:d=d-1&65535;c=3;break;case 8:c=(d&65535|0)!=(HEAPU16[(b|0)>>1]&65535|0)?9:10;break;case 9:e=_NewClassBitMap(a,d&65535,0);c=e+2|0;var g=b+2|0,i=((d&65535|0)/8&-1)+1|0;assert(0===i%1,"memcpy given "+i+" bytes to copy. Problem with quantum=1 corrections perhaps?");
_memcpy(c,g,i,1);_DeleteIntermediateClassBitMap(a,b);c=11;break;case 10:e=b;c=11;break;case 11:return e;default:assert(0,"bad label: "+c)}}_PackClassBitMap.X=1;function _DeleteIntermediateClassBitMap(h,f){_rm(h,f,((HEAPU16[(f|0)>>1]&65535|0)/8&-1|0)+4|0)}
function _InitializeClassBitMap(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;b=h;d=f;e=c;i=((HEAPU16[(d|0)>>1]&65535|0)/8&-1)+1|0;a=3;break;case 3:a=0<(i|0)?4:5;break;case 4:HEAP8[(d+2|0)+(i-1|0)|0]=0;i=i-1|0;a=3;break;case 5:a=0!=(e|0)?6:18;break;case 6:k=_EnvGetCurrentModule(b);g=0;a=7;break;case 7:a=(g|0)<=(HEAPU16[(d|0)>>1]&65535|0)?8:17;break;case 8:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+84|0)>>2]+100|0)>>2]+(g<<2)|0)>>2];a=0!=(j|0)?9:10;break;case 9:a=0!=(_DefclassInScope(b,
j,k)|0)?11:15;break;case 10:a=15;break;case 11:a=0!=(HEAPU32[(j+24|0)>>2]>>>3&1|0)?12:14;break;case 12:a=0==(HEAPU32[(j+24|0)>>2]>>>2&1|0)?13:14;break;case 13:a=(d+2|0)+((g|0)/8&-1)|0;HEAP8[a]=(HEAP8[a]<<24>>24|(1<<(g|0)%8&255)<<24>>24)&255;a=14;break;case 14:a=15;break;case 15:a=16;break;case 16:g=g+1|0;a=7;break;case 17:a=18;break;case 18:return;default:assert(0,"bad label: "+a)}}_InitializeClassBitMap.X=1;
function _ClearObjectPatternMatches(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+172|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:5;break;case 4:_RemoveObjectPartialMatches(a,d,b);d=HEAP32[(d+68|0)>>2];c=3;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+116|0)>>2]+96|0)>>2];c=6;break;case 6:c=0!=(e|0)?7:8;break;case 7:_RemoveObjectPartialMatches(a,HEAP32[(e|0)>>2],b);e=HEAP32[(e+4|0)>>2];c=6;break;case 8:return;default:assert(0,"bad label: "+
c)}}_ClearObjectPatternMatches.X=1;
function _FormSlotBitMap(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;g=-1;e=d;c=3;break;case 3:c=0!=(e|0)?4:8;break;case 4:c=(HEAP16[(e+40|0)>>1]<<16>>16|0)>(g|0)?5:6;break;case 5:g=HEAP16[(e+40|0)>>1]<<16>>16;c=6;break;case 6:c=7;break;case 7:e=HEAP32[(e+64|0)>>2];c=3;break;case 8:c=0==(g|0)?10:9;break;case 9:c=1==(g|0)?10:11;break;case 10:a=0;c=16;break;case 11:i=((g|0)/8&-1|0)+4|0;j=_gm2(b,i);_ClearBitString(j,i);HEAP16[(j|0)>>1]=g&65535;e=d;c=12;break;case 12:c=0!=(e|0)?13:
15;break;case 13:c=(j+2|0)+((HEAP16[(e+40|0)>>1]<<16>>16|0)/8&-1)|0;HEAP8[c]=(HEAP8[c]<<24>>24|(1<<(HEAP16[(e+40|0)>>1]<<16>>16|0)%8&255)<<24>>24)&255;c=14;break;case 14:e=HEAP32[(e+64|0)>>2];c=12;break;case 15:a=_AddBitMap(b,j,((HEAPU16[(j|0)>>1]&65535|0)/8&-1|0)+4|0);_rm(b,j,i);c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_FormSlotBitMap.X=1;
function _RemoveSlotExistenceTests(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;g=d;i=0;a=3;break;case 3:a=0!=(g|0)?4:59;break;case 4:a=0!=(HEAP32[(g+60|0)>>2]|0)?5:6;break;case 5:HEAP32[e>>2]=HEAP32[(g+60|0)>>2];i=g;g=HEAP32[(g+64|0)>>2];a=58;break;case 6:a=37==(HEAPU16[(g|0)>>1]&65535|0)?8:7;break;case 7:a=35==(HEAPU16[(g|0)>>1]&65535|0)?8:16;break;case 8:a=0==(HEAP32[(g+52|0)>>2]|0)?9:16;break;case 9:a=0!=(i|0)?10:11;break;case 10:HEAP32[(i+64|0)>>2]=HEAP32[(g+64|0)>>2];a=
12;break;case 11:d=HEAP32[(g+64|0)>>2];a=12;break;case 12:HEAP32[(g+64|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=0!=(i|0)?13:14;break;case 13:g=HEAP32[(i+64|0)>>2];a=15;break;case 14:g=d;a=15;break;case 15:a=57;break;case 16:a=38==(HEAPU16[(g|0)>>1]&65535|0)?18:17;break;case 17:a=36==(HEAPU16[(g|0)>>1]&65535|0)?18:29;break;case 18:a=0==(HEAPU32[(g+8|0)>>2]>>>2&1|0)?19:29;break;case 19:a=0==(HEAP32[(g+52|0)>>2]|0)?20:29;break;case 20:a=0==(HEAPU16[(g+10|0)>>1]&65535|0)?21:29;break;case 21:a=0==(HEAPU16[(g+
12|0)>>1]&65535|0)?22:29;break;case 22:a=0!=(i|0)?23:24;break;case 23:HEAP32[(i+64|0)>>2]=HEAP32[(g+64|0)>>2];a=25;break;case 24:d=HEAP32[(g+64|0)>>2];a=25;break;case 25:HEAP32[(g+64|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=0!=(i|0)?26:27;break;case 26:g=HEAP32[(i+64|0)>>2];a=28;break;case 27:g=d;a=28;break;case 28:a=56;break;case 29:a=38==(HEAPU16[(g|0)>>1]&65535|0)?31:30;break;case 30:a=36==(HEAPU16[(g|0)>>1]&65535|0)?31:36;break;case 31:a=0==(HEAPU32[(g+8|0)>>2]>>>2&1|0)?32:36;break;case 32:a=0!=(HEAP32[(g+
52|0)>>2]|0)?33:36;break;case 33:a=0==(HEAPU16[(g+10|0)>>1]&65535|0)?34:36;break;case 34:a=0==(HEAPU16[(g+12|0)>>1]&65535|0)?35:36;break;case 35:HEAP16[(g|0)>>1]=37;i=g;g=HEAP32[(g+64|0)>>2];a=55;break;case 36:a=38==(HEAPU16[(g|0)>>1]&65535|0)?37:40;break;case 37:a=1==(HEAPU32[(g+8|0)>>2]>>>2&1|0)?38:40;break;case 38:a=0==(HEAP32[(g+68|0)>>2]|0)?39:40;break;case 39:HEAP16[(g|0)>>1]=37;_GenObjectZeroLengthTest(b,g);i=g+8|0;HEAP32[i>>2]&=-5;i=g;g=HEAP32[(g+64|0)>>2];a=54;break;case 40:a=38==(HEAPU16[(g|
0)>>1]&65535|0)?41:52;break;case 41:a=1==(HEAPU32[(g+8|0)>>2]>>>2&1|0)?42:52;break;case 42:_GenObjectLengthTest(b,HEAP32[(g+68|0)>>2]);a=_RemoveSlotExistenceTests(b,HEAP32[(g+68|0)>>2],e);HEAP32[(g+68|0)>>2]=a;a=0==(HEAP32[(g+68|0)>>2]|0)?43:50;break;case 43:a=0!=(i|0)?44:45;break;case 44:HEAP32[(i+64|0)>>2]=HEAP32[(g+64|0)>>2];a=46;break;case 45:d=HEAP32[(g+64|0)>>2];a=46;break;case 46:HEAP32[(g+64|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=0!=(i|0)?47:48;break;case 47:g=HEAP32[(i+64|0)>>2];a=49;break;
case 48:g=d;a=49;break;case 49:a=51;break;case 50:i=g;g=HEAP32[(g+64|0)>>2];a=51;break;case 51:a=53;break;case 52:i=g;g=HEAP32[(g+64|0)>>2];a=53;break;case 53:a=54;break;case 54:a=55;break;case 55:a=56;break;case 56:a=57;break;case 57:a=58;break;case 58:a=3;break;case 59:return d;default:assert(0,"bad label: "+a)}}_RemoveSlotExistenceTests.X=1;
function _FindObjectPatternNode(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;HEAP32[i>>2]=0;b=3;break;case 3:b=0!=(e|0)?4:20;break;case 4:b=38==(HEAPU16[(g|0)>>1]&65535|0)?6:5;break;case 5:b=36==(HEAPU16[(g|0)>>1]&65535|0)?6:7;break;case 6:b=0!=(HEAPU32[e>>2]>>>1&1|0)?8:15;break;case 7:b=0==(HEAPU32[e>>2]>>>1&1|0)?8:15;break;case 8:b=(HEAP16[(g+40|0)>>1]<<16>>16|0)==(HEAP32[(e+8|0)>>2]|0)?9:14;break;case 9:b=(HEAP16[(g+34|0)>>1]<<16>>16|0)==(HEAPU32[e>>2]>>>3&255|0)?10:
14;break;case 10:b=(HEAPU16[(g+16|0)>>1]&65535|0)==(HEAPU32[e>>2]>>>11&255|0)?11:14;break;case 11:b=(j|0)==(HEAPU32[e>>2]>>>2&1|0)?12:14;break;case 12:b=0!=(_IdenticalExpression(HEAP32[(e+12|0)>>2],HEAP32[(g+52|0)>>2])|0)?13:14;break;case 13:d=e;b=21;break;case 14:b=15;break;case 15:b=0==(HEAP32[i>>2]|0)?16:19;break;case 16:b=(HEAP16[(g+34|0)>>1]<<16>>16|0)==(HEAPU32[e>>2]>>>3&255|0)?17:19;break;case 17:b=(HEAP16[(g+40|0)>>1]<<16>>16|0)==(HEAP32[(e+8|0)>>2]|0)?18:19;break;case 18:HEAP32[i>>2]=e;b=
19;break;case 19:e=HEAP32[(e+28|0)>>2];b=3;break;case 20:d=0;b=21;break;case 21:return d;default:assert(0,"bad label: "+b)}}_FindObjectPatternNode.X=1;
function _IdenticalClassBitMap(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=(HEAPU16[(b|0)>>1]&65535|0)!=(HEAPU16[(d|0)>>1]&65535|0)?3:4;break;case 3:a=0;c=11;break;case 4:e=0;c=5;break;case 5:c=(e|0)<(((HEAPU16[(b|0)>>1]&65535|0)/8&-1)+1|0)?6:10;break;case 6:c=(HEAP8[(b+2|0)+e|0]<<24>>24|0)!=(HEAP8[(d+2|0)+e|0]<<24>>24|0)?7:8;break;case 7:a=0;c=11;break;case 8:c=9;break;case 9:e=e+1|0;c=5;break;case 10:a=1;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}
_IdenticalClassBitMap.X=1;function _EmptyClassBitMap(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;b=(((HEAPU16[(a|0)>>1]&65535|0)/8&-1)+1|0)&65535;f=3;break;case 3:f=0<(b&65535|0)?4:7;break;case 4:f=0!=(HEAP8[(a+2|0)+((b&65535)-1|0)|0]<<24>>24|0)?5:6;break;case 5:c=0;f=8;break;case 6:b=b-1&65535;f=3;break;case 7:c=1;f=8;break;case 8:return c;default:assert(0,"bad label: "+f)}}
function _CreateNewObjectPatternNode(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;l=b;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]|0)?3:4;break;case 3:var p=_genalloc(g,40);d=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=5;break;case 5:d=m=p;HEAP32[d>>2]&=-2;d=m;HEAP32[d>>2]&=-3;HEAP32[(m+32|0)>>2]=0;HEAP32[(m+4|0)>>2]=0;HEAP32[(m+16|0)>>2]=0;HEAP32[(m+28|0)>>2]=0;HEAP32[(m+24|0)>>2]=0;HEAP32[(m+36|0)>>2]=0;d=_AddHashedExpression(g,HEAP32[(i+52|0)>>2]);HEAP32[(m+12|0)>>2]=d;d=m;HEAP32[d>>2]=HEAP32[d>>2]&-2041|(HEAP16[(i+34|0)>>1]<<16>>16&255)<<3;d=m;HEAP32[d>>2]=HEAP32[d>>2]&-522241|(HEAPU16[(i+16|0)>>1]&255)<<11;HEAP32[(m+
8|0)>>2]=HEAP16[(i+40|0)>>1]<<16>>16;d=38==(HEAPU16[(i|0)>>1]&65535|0)?7:6;break;case 6:d=36==(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:d=m;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=8;break;case 8:d=m;HEAP32[d>>2]=HEAP32[d>>2]&-5|(l&1)<<2;HEAP32[(m+20|0)>>2]=k;d=0==(j|0)?9:15;break;case 9:d=0==(k|0)?10:11;break;case 10:d=_ObjectNetworkPointer(g);HEAP32[(m+28|0)>>2]=d;_SetObjectNetworkPointer(g,m);d=12;break;case 11:HEAP32[(m+28|0)>>2]=HEAP32[(k+16|0)>>2];HEAP32[(k+16|0)>>2]=m;d=12;break;case 12:d=0!=(HEAP32[(m+
28|0)>>2]|0)?13:14;break;case 13:HEAP32[(HEAP32[(m+28|0)>>2]+24|0)>>2]=m;d=14;break;case 14:e=m;d=39;break;case 15:n=0;o=j;d=16;break;case 16:d=0==(o|0)?17:18;break;case 17:var q=0;d=21;break;case 18:if((HEAP32[(o+8|0)>>2]|0)==(HEAP32[(j+8|0)>>2]|0))d=19;else{var r=0;d=20}break;case 19:r=(HEAPU32[o>>2]>>>3&255|0)==(HEAPU32[j>>2]>>>3&255|0);d=20;break;case 20:q=r&1;d=21;break;case 21:d=0!=(q|0)?22:29;break;case 22:d=0==(HEAP32[(o+12|0)>>2]|0)?23:24;break;case 23:d=28;break;case 24:d=75!=(HEAPU16[(HEAP32[(o+
12|0)>>2]|0)>>1]&65535|0)?25:26;break;case 25:d=28;break;case 26:d=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(o+12|0)>>2]+4|0)>>2]+16|0)>>2]>>2]>>>7&1|0)?27:28;break;case 27:d=29;break;case 28:n=o;o=HEAP32[(o+28|0)>>2];d=16;break;case 29:d=0!=(o|0)?30:37;break;case 30:HEAP32[(m+24|0)>>2]=HEAP32[(o+24|0)>>2];HEAP32[(m+28|0)>>2]=o;d=0!=(HEAP32[(o+24|0)>>2]|0)?31:32;break;case 31:HEAP32[(HEAP32[(o+24|0)>>2]+28|0)>>2]=m;d=36;break;case 32:d=0!=(HEAP32[(o+20|0)>>2]|0)?33:34;break;case 33:HEAP32[(HEAP32[(o+20|
0)>>2]+16|0)>>2]=m;d=35;break;case 34:_SetObjectNetworkPointer(g,m);d=35;break;case 35:d=36;break;case 36:HEAP32[(o+24|0)>>2]=m;d=38;break;case 37:HEAP32[(m+24|0)>>2]=n;HEAP32[(n+28|0)>>2]=m;d=38;break;case 38:e=m;d=39;break;case 39:return e;default:assert(0,"bad label: "+d)}}_CreateNewObjectPatternNode.X=1;
function _FilterObjectPattern(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n;g=h;e=f;i=c;j=a;k=b;l=d;HEAP32[k>>2]=0;HEAP32[l>>2]=0;m=_GetLHSParseNode(g);HEAP32[j>>2]=m;HEAP16[(HEAP32[j>>2]|0)>>1]=37;HEAP32[(HEAP32[j>>2]+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+116|0)>>2];HEAP16[(HEAP32[j>>2]+40|0)>>1]=0;HEAP16[(HEAP32[j>>2]+34|0)>>1]=1;HEAP32[(HEAP32[j>>2]+28|0)>>2]=e;HEAP32[(HEAP32[j>>2]+60|0)>>2]=HEAP32[(i+60|0)>>2];m=HEAP32[(i+60|0)>>2]=0;n=i;e=3;break;case 3:e=
0!=(n|0)?4:10;break;case 4:e=(HEAP32[(n+36|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+116|0)>>2]|0)?5:6;break;case 5:HEAP32[k>>2]=n;e=9;break;case 6:e=(HEAP32[(n+36|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+84|0)>>2]+120|0)>>2]|0)?7:8;break;case 7:HEAP32[l>>2]=n;e=8;break;case 8:e=9;break;case 9:m=n;n=HEAP32[(n+64|0)>>2];e=3;break;case 10:e=0==(m|0)?11:12;break;case 11:i=HEAP32[j>>2];e=13;break;case 12:HEAP32[(m+64|0)>>2]=HEAP32[j>>2];e=13;break;case 13:return i;default:assert(0,
"bad label: "+e)}}_FilterObjectPattern.X=1;
function _CheckDuplicateSlots(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=3;break;case 3:a=0!=(e|0)?4:7;break;case 4:a=(HEAP32[(e+36|0)>>2]|0)==(g|0)?5:6;break;case 5:_PrintErrorID(d,STRING_TABLE.__str13226|0,4,1);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str203245|0);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,HEAP32[(g+16|0)>>2]);_EnvPrintRouter(d,STRING_TABLE.__str63231|0,STRING_TABLE.__str213246|0);b=1;a=8;break;case 6:e=HEAP32[(e+64|0)>>2];a=3;break;case 7:b=
0;a=8;break;case 8:return b;default:assert(0,"bad label: "+a)}}
function _ParseClassRestriction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=i=_GetConstraintRecord(d);HEAP32[a>>2]&=-2;a=i;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;a=HEAP32[(g+4|0)>>2];_SavePPBuffer(d,STRING_TABLE.__str103235|0);_GetToken(d,e,g);e=_RestrictionParse(d,e,g,0,a,0,i,0);a=0==(e|0)?3:4;break;case 3:_RemoveConstraint(d,i);b=0;a=11;break;case 4:a=171!=(HEAPU16[(g|0)>>1]&65535|0)?7:5;break;case 5:a=38==(HEAPU16[(e|0)>>1]&65535|0)?7:6;break;case 6:a=36==(HEAPU16[(e|0)>>1]&65535|
0)?7:10;break;case 7:_PPBackup(d);a=171!=(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:_SavePPBuffer(d,STRING_TABLE.__str103235|0);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=9;break;case 9:_SyntaxErrorMessage(d,STRING_TABLE.__str193244|0);_ReturnLHSParseNodes(d,e);_RemoveConstraint(d,i);b=0;a=11;break;case 10:b=e+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-17|16;b=e;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_ParseClassRestriction.X=1;
function _IntersectClassBitMaps(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=(((HEAPU16[(b|0)>>1]&65535|0)/8&-1)+1|0)&65535;c=3;break;case 3:c=0<(d&65535|0)?4:5;break;case 4:c=(a+2|0)+((d&65535)-1|0)|0;HEAP8[c]=HEAP8[c]<<24>>24&HEAP8[(b+2|0)+((d&65535)-1|0)|0]<<24>>24&255;d=d-1&65535;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _UnionClassBitMaps(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=(((HEAPU16[(b|0)>>1]&65535|0)/8&-1)+1|0)&65535;c=3;break;case 3:c=0<(d&65535|0)?4:5;break;case 4:c=(a+2|0)+((d&65535)-1|0)|0;HEAP8[c]=(HEAP8[c]<<24>>24|HEAP8[(b+2|0)+((d&65535)-1|0)|0]<<24>>24)&255;d=d-1&65535;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _ProcessClassRestriction(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;o=1;b=0==(HEAP32[i>>2]|0)?3:6;break;case 3:b=0!=(j|0)?4:5;break;case 4:_InitializeClassBitMap(e,g,1);b=5;break;case 5:d=1;b=24;break;case 6:m=_NewClassBitMap(e,(HEAPU16[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)-1|0,1);n=_NewClassBitMap(e,(HEAPU16[(HEAP32[(HEAP32[(e+16|0)>>2]+84|0)>>2]+108|0)>>1]&65535)-1|0,0);k=HEAP32[i>>2];b=7;break;case 7:b=0!=(k|0)?8:18;break;case 8:b=
2==(HEAPU16[(k|0)>>1]&65535|0)?9:15;break;case 9:b=_LookupDefclassInScope(e,HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2]);HEAP32[(k+4|0)>>2]=b;b=0==(HEAP32[(k+4|0)>>2]|0)?10:11;break;case 10:_PrintErrorID(e,STRING_TABLE.__str13226|0,5,0);_EnvPrintRouter(e,STRING_TABLE.__str63231|0,STRING_TABLE.__str173242|0);_DeleteIntermediateClassBitMap(e,m);_DeleteIntermediateClassBitMap(e,n);d=0;b=24;break;case 11:b=0!=(HEAP32[(k+8|0)>>2]&1|0)?12:13;break;case 12:_InitializeClassBitMap(e,n,1);_MarkBitMapSubclasses(n+
2|0,HEAP32[(k+4|0)>>2],0);b=14;break;case 13:_InitializeClassBitMap(e,n,0);_MarkBitMapSubclasses(n+2|0,HEAP32[(k+4|0)>>2],1);b=14;break;case 14:_IntersectClassBitMaps(m,n);b=16;break;case 15:o=0;b=16;break;case 16:b=17;break;case 17:k=HEAP32[(k+64|0)>>2];b=7;break;case 18:b=0!=(_EmptyClassBitMap(m)|0)?19:20;break;case 19:_PrintErrorID(e,STRING_TABLE.__str13226|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str63231|0,STRING_TABLE.__str123237|0);_EnvPrintRouter(e,STRING_TABLE.__str63231|0,STRING_TABLE.__str183243|
0);_DeleteIntermediateClassBitMap(e,m);_DeleteIntermediateClassBitMap(e,n);d=0;b=24;break;case 20:b=0!=(o|0)?21:22;break;case 21:k=HEAP32[i>>2];HEAP32[i>>2]=HEAP32[(k+68|0)>>2];HEAP32[(k+68|0)>>2]=0;_ReturnLHSParseNodes(e,k);l=i;b=23;break;case 22:l=HEAP32[i>>2]+68|0;b=23;break;case 23:_UnionClassBitMaps(g,m);_DeleteIntermediateClassBitMap(e,m);_DeleteIntermediateClassBitMap(e,n);d=_ProcessClassRestriction(e,g,l,0);b=24;break;case 24:return d;default:assert(0,"bad label: "+b)}}
_ProcessClassRestriction.X=1;
function _ParseNameRestriction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=i=_GetConstraintRecord(d);HEAP32[a>>2]&=-2;a=i;HEAP32[a>>2]=HEAP32[a>>2]&-33|32;a=HEAP32[(g+4|0)>>2];_SavePPBuffer(d,STRING_TABLE.__str103235|0);_GetToken(d,e,g);e=_RestrictionParse(d,e,g,0,a,1,i,0);a=0==(e|0)?3:4;break;case 3:_RemoveConstraint(d,i);b=0;a=11;break;case 4:a=171!=(HEAPU16[(g|0)>>1]&65535|0)?7:5;break;case 5:a=38==(HEAPU16[(e|0)>>1]&65535|0)?7:6;break;case 6:a=36==(HEAPU16[(e|0)>>1]&65535|
0)?7:10;break;case 7:_PPBackup(d);a=171!=(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:_SavePPBuffer(d,STRING_TABLE.__str103235|0);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=9;break;case 9:_SyntaxErrorMessage(d,STRING_TABLE.__str163241|0);_ReturnLHSParseNodes(d,e);_RemoveConstraint(d,i);b=0;a=11;break;case 10:b=e+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-17|16;b=e;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_ParseNameRestriction.X=1;
function _ProcessSlotRestriction(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m;d=h;e=f;g=c;i=a;l=0;m=HEAP32[i>>2]=0;b=3;break;case 3:b=167>m>>>0?4:19;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+84|0)>>2]+104|0)>>2]+(m<<2)|0)>>2];b=5;break;case 5:b=0!=(j|0)?6:17;break;case 6:b=0!=(HEAP8[(e+2|0)+((HEAPU16[(j+26|0)>>1]&65535|0)/8&-1)|0]<<24>>24&(1<<(HEAPU16[(j+26|0)>>1]&65535|0)%8&255)<<24>>24|0)?7:15;break;case 7:k=_FindInstanceTemplateSlot(d,j,g);b=-1!=(k|0)?8:9;break;
case 8:b=0!=(HEAPU32[HEAP32[(HEAP32[(j+64|0)>>2]+(k<<2)|0)>>2]>>2]>>>9&1|0)?10:13;break;case 9:b=13;break;case 10:b=0!=(HEAPU32[HEAP32[(HEAP32[(j+64|0)>>2]+(k<<2)|0)>>2]>>2]>>>1&1|0)?11:12;break;case 11:HEAP32[i>>2]=1;b=12;break;case 12:b=_UnionConstraints(d,HEAP32[(HEAP32[(HEAP32[(j+64|0)>>2]+(k<<2)|0)>>2]+20|0)>>2],l);_RemoveConstraint(d,l);l=b;b=14;break;case 13:b=(e+2|0)+((HEAPU16[(j+26|0)>>1]&65535|0)/8&-1)|0;HEAP8[b]=HEAP8[b]<<24>>24&((1<<(HEAPU16[(j+26|0)>>1]&65535|0)%8^-1)&255)<<24>>24&255;
b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:j=HEAP32[(j+108|0)>>2];b=5;break;case 17:b=18;break;case 18:m=m+1|0;b=3;break;case 19:return l;default:assert(0,"bad label: "+b)}}_ProcessSlotRestriction.X=1;
function _ParseSlotRestriction(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;d=HEAP32[(j+4|0)>>2];_SavePPBuffer(g,STRING_TABLE.__str103235|0);_GetToken(g,i,j);m=g;var n=j,o=d;d=_FindSlotNameID(g,d);m=_RestrictionParse(m,i,n,l,o,d,k,1);d=0==(m|0)?3:4;break;case 3:_RemoveConstraint(g,k);e=0;d=10;break;case 4:d=171!=(HEAPU16[(j|0)>>1]&65535|0)?5:6;break;case 5:_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str103235|0);_SavePPBuffer(g,HEAP32[(j+8|0)>>2]);_SyntaxErrorMessage(g,
STRING_TABLE.__str143239|0);_ReturnLHSParseNodes(g,m);_RemoveConstraint(g,k);e=0;d=10;break;case 6:d=0==(HEAP32[(m+68|0)>>2]|0)?7:9;break;case 7:d=0!=(HEAPU32[(m+8|0)>>2]>>>2&1|0)?8:9;break;case 8:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str153240|0);d=9;break;case 9:e=m+8|0;HEAP32[e>>2]=HEAP32[e>>2]&-17|16;e=m;d=10;break;case 10:return e;default:assert(0,"bad label: "+d)}}_ParseSlotRestriction.X=1;
function _ObjectPatternsCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str3249|0,0,1338,1340,1342,2);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+712|0)>>2]=f}
function _BeforeObjectPatternsToCode(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;a=0;b=_ObjectNetworkPointer(c);f=3;break;case 3:f=0!=(b|0)?4:5;break;case 4:f=a;a=f+1|0;HEAP32[(b+36|0)>>2]=f;b=_GetNextObjectPatternNode(b);f=3;break;case 5:a=0;d=_ObjectNetworkTerminalPointer(c);f=6;break;case 6:f=0!=(d|0)?7:8;break;case 7:f=a;a=f+1|0;HEAP32[(d+40|0)>>2]=f;d=HEAP32[(d+36|0)>>2];f=6;break;case 8:return;default:assert(0,"bad label: "+f)}}
function _InitObjectPatternsCode(h,f,c,a){var b=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;d=0!=(_ObjectNetworkPointer(e)|0)?3:4;break;case 3:d=_ObjectNetworkPointer(e)+36|0;k=HEAP32[d>>2];d=_ObjectNetworkTerminalPointer(e)+40|0;d=HEAP32[d>>2];var l=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]|0)>>2],m=i,n=((k|0)/(j|0)&-1)+1|0;k=(k|0)%(j|0);_fprintf(g,
STRING_TABLE.__str153264|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=l,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=k,tempInt));k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]+4|0)>>2];l=i;m=((d|0)/(j|0)&-1)+1|0;d=(d|0)%(j|0);_fprintf(g,STRING_TABLE.__str163265|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,HEAP32[tempInt+
4>>2]=l,HEAP32[tempInt+8>>2]=m,HEAP32[tempInt+12>>2]=d,tempInt));d=5;break;case 4:_fprintf(g,STRING_TABLE.__str173266|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_fprintf(g,STRING_TABLE.__str183267|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));d=5;break;case 5:STACKTOP=b;return;default:assert(0,"bad label: "+
d)}}_InitObjectPatternsCode.X=1;function _ObjectPatternsToCode(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;o=_IntermediatePatternNodesToCode(i,j,k,l,m,n,1);e=0==(o|0)?3:4;break;case 3:g=0;e=7;break;case 4:e=0!=(_AlphaPatternNodesToCode(i,j,k,l,m,n,o)|0)?6:5;break;case 5:g=0;e=7;break;case 6:g=1;e=7;break;case 7:return g;default:assert(0,"bad label: "+e)}}function _PrintObjectGetVarJN1(){}
function _GetNextObjectPatternNode(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(HEAP32[(a+16|0)>>2]|0)?3:4;break;case 3:c=HEAP32[(a+16|0)>>2];f=10;break;case 4:f=5;break;case 5:f=0==(HEAP32[(a+28|0)>>2]|0)?6:9;break;case 6:a=HEAP32[(a+20|0)>>2];f=0==(a|0)?7:8;break;case 7:c=0;f=10;break;case 8:f=5;break;case 9:c=HEAP32[(a+28|0)>>2];f=10;break;case 10:return c;default:assert(0,"bad label: "+f)}}
function _ObjectPatternNodeReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;e=0==(i|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str13250|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:m=i;e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>
2]+140|0)>>2]+712|0)>>2]+20|0)>>2]+4|0)>>2];var n=k,o=((HEAP32[(m+40|0)>>2]|0)/(l|0)&-1)+1|0;m=(HEAP32[(m+40|0)>>2]|0)%(l|0);_fprintf(j,STRING_TABLE.__str23251|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=m,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _IntermediatePatternNodesToCode(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u,v;k=h;l=f;m=c;n=a;o=b;p=d;q=e;i=0==(_ObjectNetworkPointer(k)|0)?3:4;break;case 3:j=1;i=22;break;case 4:_fprintf(n,STRING_TABLE.__str113260|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
r=i=_NewCFile(k,l,m,q,0);i=0==(i|0)?5:6;break;case 5:j=0;i=22;break;case 6:u=s=t=1;v=_ObjectNetworkPointer(k);i=7;break;case 7:i=0!=(v|0)?8:21;break;case 8:i=0!=(t|0)?9:10;break;case 9:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]|0)>>2];i=o;var w=s;_fprintf(r,STRING_TABLE.__str123261|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=w,tempInt));t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+
16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]|0)>>2];i=o;w=s;_fprintf(n,STRING_TABLE.__str133262|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=w,tempInt));t=0;i=10;break;case 10:i=HEAPU32[v>>2]>>>1&1;var w=HEAPU32[v>>2]>>>2&1,x=HEAPU32[v>>2]>>>3&255,y=HEAPU32[v>>2]>>>11&255,A=HEAP32[(v+8|0)>>2];_fprintf(r,STRING_TABLE.__str143263|0,(tempInt=STACKTOP,STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=w,HEAP32[tempInt+8>>2]=x,HEAP32[tempInt+12>>2]=y,HEAP32[tempInt+16>>2]=A,tempInt));_PrintHashedExpressionReference(k,r,HEAP32[(v+12|0)>>2],o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_IntermediatePatternNodeReference(k,HEAP32[(v+16|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,
STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_IntermediatePatternNodeReference(k,HEAP32[(v+20|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_IntermediatePatternNodeReference(k,HEAP32[(v+24|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_IntermediatePatternNodeReference(k,HEAP32[(v+28|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ObjectPatternNodeReference(k,HEAP32[(v+32|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str83257|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));u=u+1|0;v=_GetNextObjectPatternNode(v);i=(u|0)>(p|0)?12:11;break;case 11:i=0==(v|0)?12:17;break;case 12:_fprintf(r,STRING_TABLE.__str93258|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(k,r);u=1;q=q+1|0;s=s+1|0;i=0!=(v|0)?13:16;break;case 13:r=i=_NewCFile(k,l,m,q,0);i=0==(i|0)?14:15;break;case 14:j=0;i=22;break;case 15:t=
1;i=16;break;case 16:i=20;break;case 17:i=0!=(v|0)?18:19;break;case 18:_fprintf(r,STRING_TABLE.__str103259|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=19;break;case 19:i=20;break;case 20:i=7;break;case 21:j=q;i=22;break;case 22:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_IntermediatePatternNodesToCode.X=1;
function _AlphaPatternNodesToCode(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t,u,v;k=h;l=f;m=c;n=a;o=b;p=d;q=e;i=0==(_ObjectNetworkTerminalPointer(k)|0)?3:4;break;case 3:j=q;i=22;break;case 4:r=i=_NewCFile(k,l,m,q,0);i=0==(i|0)?5:6;break;case 5:j=0;i=22;break;case 6:u=s=t=1;v=_ObjectNetworkTerminalPointer(k);i=7;break;case 7:i=0!=(v|0)?8:21;break;case 8:i=0!=(t|0)?9:
10;break;case 9:t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]+4|0)>>2];i=o;var w=s;_fprintf(r,STRING_TABLE.__str33252|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=w,tempInt));t=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+140|0)>>2]+712|0)>>2]+20|0)>>2]+4|0)>>2];i=o;w=s;_fprintf(n,STRING_TABLE.__str43253|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=t,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=w,tempInt));t=0;i=10;break;case 10:_fprintf(r,STRING_TABLE.__str53254|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PatternNodeHeaderToCode(k,r,v|0,o,p);_fprintf(r,STRING_TABLE.__str63255|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));_PrintBitMapReference(k,r,HEAP32[(v+20|0)>>2]);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintBitMapReference(k,r,HEAP32[(v+24|0)>>2]);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_IntermediatePatternNodeReference(k,
HEAP32[(v+28|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ObjectPatternNodeReference(k,HEAP32[(v+32|0)>>2],r,o,p);_fprintf(r,STRING_TABLE.__str73256|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ObjectPatternNodeReference(k,HEAP32[(v+36|0)>>2],r,o,p);
_fprintf(r,STRING_TABLE.__str83257|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));u=u+1|0;v=HEAP32[(v+36|0)>>2];i=(u|0)>(p|0)?12:11;break;case 11:i=0==(v|0)?12:17;break;case 12:_fprintf(r,STRING_TABLE.__str93258|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(k,r);u=1;q=q+1|0;s=s+1|0;i=0!=(v|0)?
13:16;break;case 13:r=i=_NewCFile(k,l,m,q,0);i=0==(i|0)?14:15;break;case 14:j=0;i=22;break;case 15:t=1;i=16;break;case 16:i=20;break;case 17:i=0!=(v|0)?18:19;break;case 18:_fprintf(r,STRING_TABLE.__str103259|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=19;break;case 19:i=20;break;case 20:i=7;break;case 21:j=q;i=22;break;case 22:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}
_AlphaPatternNodesToCode.X=1;
function _IntermediatePatternNodeReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(i|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str13250|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>
2]+140|0)>>2]+712|0)>>2]+20|0)>>2]|0)>>2];var m=k,n=((HEAP32[(i+36|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[(i+36|0)>>2]|0)%(l|0);_fprintf(j,STRING_TABLE.__str23251|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _InstallObjectPrimitives(h){var f=STACKTOP;STACKTOP+=672;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+56,a=f+112,b=f+168,d=f+224,e=f+280,g=f+336,i=f+392,j=f+448,k=f+504,l=f+560,m=f+616;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var n=_InstallObjectPrimitives_objectGVInfo1>>2,o=f>>2,p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=_InstallObjectPrimitives_objectGVInfo2>>2;o=c>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_objectGVPNInfo1>>2;o=a>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_objectGVPNInfo2>>2;o=b>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=_InstallObjectPrimitives_objectCmpConstantInfo>>2;o=d>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_lengthTestInfo>>2;o=e>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_pNSimpleCompareInfo1>>2;o=g>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=_InstallObjectPrimitives_pNSimpleCompareInfo2>>2;o=i>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_pNSimpleCompareInfo3>>2;o=j>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_jNSimpleCompareInfo1>>2;o=k>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=_InstallObjectPrimitives_jNSimpleCompareInfo2>>2;o=l>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=_InstallObjectPrimitives_jNSimpleCompareInfo3>>2;o=m>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];_AllocateEnvironmentData(h,35,716,1344);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+8|0)>>2]=1;o=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+16|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=f>>2;o>>=2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];o=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+72|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=c>>2;o>>=2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];c=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+128|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=a>>2;o=c>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];a=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+184|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=b>>2;o=a>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];b=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+240|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=d>>2;o=b>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];d=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+296|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=e>>2;o=d>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];e=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+352|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=g>>2;o=e>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];g=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+408|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=i>>2;o=g>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];i=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+464|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=j>>2;o=i>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];j=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+520|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
n=k>>2;o=j>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];k=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+576|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=l>>2;o=k>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];l=HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+632|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");n=m>>2;o=l>>2;for(p=n+14;n<p;n++,o++)HEAP32[o]=HEAP32[n];_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+16|
0,72);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+72|0,73);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+128|0,70);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+184|0,71);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+240|0,75);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+296|0,74);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+352|0,76);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+408|0,78);_InstallPrimitive(h,
HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+464|0,80);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+520|0,77);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+576|0,79);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+632|0,81);STACKTOP=f}_InstallObjectPrimitives.X=1;function _PrintObjectGetVarJN2(){}function _PrintObjectGetVarPN1(){}function _PrintObjectGetVarPN2(){}function _PrintObjectCmpConstant(){}function _PrintSlotLengthTest(){}
function _PrintPNSimpleCompareFunction1(){}function _PrintPNSimpleCompareFunction2(){}function _PrintPNSimpleCompareFunction3(){}
function _SlotLengthTestFunction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;a=f;e=c;HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];g=HEAP32[(a+16|0)>>2];a=HEAPU32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]>>>0<(HEAP32[g>>2]&32767)>>>0?3:4;break;case 3:b=0;a=8;break;case 4:a=0!=(HEAPU32[g>>2]>>>15&1|0)?5:7;break;case 5:a=HEAPU32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]>>>0>(HEAP32[g>>2]&32767)>>>0?6:7;break;case 6:b=0;a=8;
break;case 7:HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=1;a=8;break;case 8:return b;default:assert(0,"bad label: "+a)}}_SlotLengthTestFunction.X=1;
function _PNSimpleCompareFunction1(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;a=f;d=c;e=HEAP32[(a+16|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+140|0)>>2]|0)>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+140|0)>>2]|0)>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(e|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+140|0)>>2]|0)>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+140|0)>>2]|0)>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(e+2|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];a=(HEAPU32[(g+4|0)>>2]>>>2&63|0)!=(HEAPU32[(i+4|0)>>2]>>>2&63|0)?3:4;break;case 3:j=HEAPU32[(e+4|0)>>2]>>>1&1;a=8;break;case 4:a=(HEAP32[(g+8|0)>>2]|0)!=(HEAP32[(i+8|0)>>2]|0)?5:6;break;case 5:j=HEAPU32[(e+4|0)>>2]>>>1&1;a=7;break;case 6:j=HEAP32[(e+4|0)>>2]&1;a=7;break;case 7:a=8;break;case 8:HEAP16[(d+4|0)>>1]=2;a=0!=(j|0)?9:10;break;case 9:var k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]|0)>>2];
a=11;break;case 10:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=11;break;case 11:return HEAP32[(d+8|0)>>2]=k,j;default:assert(0,"bad label: "+a)}}_PNSimpleCompareFunction1.X=1;
function _ObjectGetVarJNFunction1(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=a+4,f=HEAP32[(f+16|0)>>2];_GetPatternObjectAndMarks(h,(HEAPU16[(f+2|0)>>1]&65535)-1|0,a,b);_GetObjectValueGeneral(h,c,HEAP32[a>>2],HEAP32[b>>2],f);STACKTOP=a;return 1}
function _ObjectGetVarJNFunction2(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");f=HEAP32[(f+16|0)>>2];_GetPatternObjectAndMarks(h,(HEAPU16[(f+2|0)>>1]&65535)-1|0,a,a+4);_GetObjectValueSimple(h,c,HEAP32[a>>2],f);STACKTOP=a;return 1}
function _ObjectGetVarPNFunction1(h,f,c){_GetObjectValueGeneral(h,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+12|0)>>2],HEAP32[(f+16|0)>>2]);return 1}function _ObjectGetVarPNFunction2(h,f,c){_GetObjectValueSimple(h,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]|0)>>2],HEAP32[(f+16|0)>>2]);return 1}
function _ObjectCmpConstantFunction(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a,j,k,l;d=h;b=f;e=c;g=HEAP32[(b+16|0)>>2];b=0!=(HEAPU32[g>>2]>>>9&1|0)?3:4;break;case 3:_EvaluateExpression(d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],i);j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];b=11;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];b=4==(HEAPU32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]+4|0)>>2]>>>2&63|0)?5:9;break;case 5:l=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]+8|0)>>2];b=0!=(HEAPU32[g>>2]>>>10&1|0)?6:7;break;case 6:HEAP16[(i+4|0)>>1]=HEAP16[((l+16|0)+((HEAP32[g>>2]&127)<<3)|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(((l+16|0)+((HEAP32[g>>2]&127)<<3)|0)+4|0)>>2];b=8;break;case 7:HEAP16[(i+4|0)>>1]=HEAP16[((l+16|0)+((HEAP32[(l+8|0)>>2]-((HEAP32[g>>2]&127)+1|
0)|0)<<3)|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(((l+16|0)+((HEAP32[(l+8|0)>>2]-((HEAP32[g>>2]&127)+1|0)|0)<<3)|0)+4|0)>>2];b=8;break;case 8:b=10;break;case 9:HEAP16[(i+4|0)>>1]=HEAPU32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]+4|0)>>2]>>>2&63;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]+8|0)>>2];b=10;break;case 10:b=11;break;case 11:b=(HEAPU16[(i+4|0)>>1]&65535|0)!=(HEAPU16[(j|0)>>1]&65535|0)?12:13;break;case 12:k=HEAPU32[g>>2]>>>8&1;b=17;break;case 13:b=
(HEAP32[(i+8|0)>>2]|0)!=(HEAP32[(j+4|0)>>2]|0)?14:15;break;case 14:k=HEAPU32[g>>2]>>>8&1;b=16;break;case 15:k=HEAPU32[g>>2]>>>7&1;b=16;break;case 16:b=17;break;case 17:HEAP16[(e+4|0)>>1]=2;b=0!=(k|0)?18:19;break;case 18:var m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=20;break;case 19:m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=20;break;case 20:return HEAP32[(e+8|0)>>2]=m,h=k,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ObjectCmpConstantFunction.X=1;
function _PNSimpleCompareFunction2(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;d=h;b=f;e=c;g=HEAP32[(b+16|0)>>2];_GetInsMultiSlotField(j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2],HEAPU16[(g|0)>>1]&65535,HEAPU32[(g+4|0)>>2]>>>9&1,HEAPU32[(g+4|0)>>2]>>>2&127);k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+140|0)>>2]|0)>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(g+2|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];b=(HEAPU16[(j|0)>>1]&65535|0)!=(HEAPU32[(k+4|0)>>2]>>>2&63|0)?3:4;break;case 3:i=HEAPU32[(g+4|0)>>2]>>>1&1;b=8;break;case 4:b=(HEAP32[(j+4|0)>>2]|0)!=(HEAP32[(k+8|0)>>2]|0)?5:6;break;case 5:i=HEAPU32[(g+4|0)>>2]>>>1&1;b=7;break;case 6:i=HEAP32[(g+4|0)>>2]&1;b=7;break;case 7:b=8;break;case 8:HEAP16[(e+4|0)>>1]=2;b=0!=(i|0)?9:10;break;case 9:var l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>
2];b=11;break;case 10:l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:return HEAP32[(e+8|0)>>2]=l,h=i,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_PNSimpleCompareFunction2.X=1;function _PrintJNSimpleCompareFunction1(){}function _PrintJNSimpleCompareFunction2(){}function _PrintJNSimpleCompareFunction3(){}
function _GetPatternObjectAndMarks(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:HEAP32[g>>2]=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]|0)>>2];HEAP32[i>>2]=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]+4|0)>>2];b=8;break;case 4:b=((HEAPU32[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+60|0)>>2]>>2]>>>
9&127)-1|0)==(e|0)?5:6;break;case 5:HEAP32[g>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]|0)>>2];HEAP32[i>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+56|0)>>2]+8|0)>>2]+4|0)>>2];b=7;break;case 6:HEAP32[g>>2]=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]|0)>>2];HEAP32[i>>2]=HEAP32[(HEAP32[((HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+52|0)>>2]+8|0)+(e<<2)|0)>>2]+4|0)>>2];b=7;break;case 7:b=
8;break;case 8:return;default:assert(0,"bad label: "+b)}}_GetPatternObjectAndMarks.X=1;
function _PNSimpleCompareFunction3(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+8;d=h;b=f;e=c;g=HEAP32[(b+16|0)>>2];_GetInsMultiSlotField(j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2],HEAPU16[(g|0)>>1]&65535,HEAPU32[(g+4|0)>>2]>>>9&1,HEAPU32[(g+4|0)>>2]>>>2&127);_GetInsMultiSlotField(k,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2],HEAPU16[(g+2|0)>>1]&
65535,HEAPU32[(g+4|0)>>2]>>>17&1,HEAPU32[(g+4|0)>>2]>>>10&127);b=(HEAPU16[(j|0)>>1]&65535|0)!=(HEAPU16[(k|0)>>1]&65535|0)?3:4;break;case 3:i=HEAPU32[(g+4|0)>>2]>>>1&1;b=8;break;case 4:b=(HEAP32[(j+4|0)>>2]|0)!=(HEAP32[(k+4|0)>>2]|0)?5:6;break;case 5:i=HEAPU32[(g+4|0)>>2]>>>1&1;b=7;break;case 6:i=HEAP32[(g+4|0)>>2]&1;b=7;break;case 7:b=8;break;case 8:HEAP16[(e+4|0)>>1]=2;b=0!=(i|0)?9:10;break;case 9:var l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=11;break;case 10:l=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:return HEAP32[(e+8|0)>>2]=l,h=i,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_PNSimpleCompareFunction3.X=1;
function _JNSimpleCompareFunction1(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;b=a+4;var j=a+8,k;d=h;e=f;g=c;e=HEAP32[(e+16|0)>>2];_GetPatternObjectAndMarks(d,(HEAPU16[(e+4|0)>>1]&65535)-1|0,i,j);i=HEAP32[(HEAP32[(HEAP32[i>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[i>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(e|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];_GetPatternObjectAndMarks(d,
(HEAPU16[(e+6|0)>>1]&65535)-1|0,b,j);j=HEAP32[(HEAP32[(HEAP32[b>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[b>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(e+2|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];b=(HEAPU32[(i+4|0)>>2]>>>2&63|0)!=(HEAPU32[(j+4|0)>>2]>>>2&63|0)?3:4;break;case 3:k=HEAPU32[(e+8|0)>>2]>>>1&1;b=8;break;case 4:b=(HEAP32[(i+8|0)>>2]|0)!=(HEAP32[(j+8|0)>>2]|0)?5:6;break;case 5:k=HEAPU32[(e+8|0)>>2]>>>1&1;b=7;break;case 6:k=HEAP32[(e+8|0)>>2]&1;b=7;break;case 7:b=8;break;case 8:HEAP16[(g+4|0)>>
1]=2;b=0!=(k|0)?9:10;break;case 9:var l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=11;break;case 10:l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:return HEAP32[(g+8|0)>>2]=l,h=k,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_JNSimpleCompareFunction1.X=1;
function _JNSimpleCompareFunction2(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;b=a;var i=a+4,j=a+8,k,l=a+12;d=h;e=f;g=c;e=HEAP32[(e+16|0)>>2];_GetPatternObjectAndMarks(d,(HEAPU16[(e+4|0)>>1]&65535)-1|0,b,j);_GetInsMultiSlotField(l,HEAP32[b>>2],HEAPU16[(e|0)>>1]&65535,HEAPU32[(e+8|0)>>2]>>>1&1,HEAPU32[(e+8|0)>>2]>>>2&127);_GetPatternObjectAndMarks(d,(HEAPU16[(e+6|0)>>1]&65535)-
1|0,i,j);i=HEAP32[(HEAP32[(HEAP32[i>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[i>>2]+44|0)>>2]+68|0)>>2]+((HEAPU16[(e+2|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0)>>2];b=(HEAPU16[(l|0)>>1]&65535|0)!=(HEAPU32[(i+4|0)>>2]>>>2&63|0)?3:4;break;case 3:k=HEAPU32[(e+8|0)>>2]>>>9&1;b=8;break;case 4:b=(HEAP32[(l+4|0)>>2]|0)!=(HEAP32[(i+8|0)>>2]|0)?5:6;break;case 5:k=HEAPU32[(e+8|0)>>2]>>>9&1;b=7;break;case 6:k=HEAP32[(e+8|0)>>2]&1;b=7;break;case 7:b=8;break;case 8:HEAP16[(g+4|0)>>1]=2;b=0!=(k|0)?9:10;break;case 9:var m=
HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2];b=11;break;case 10:m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:return HEAP32[(g+8|0)>>2]=m,h=k,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_JNSimpleCompareFunction2.X=1;
function _JNSimpleCompareFunction3(h,f,c){var a=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;b=a;var i=a+4,j=a+8,k,l=a+12,m=a+20;d=h;e=f;g=c;e=HEAP32[(e+16|0)>>2];_GetPatternObjectAndMarks(d,(HEAPU16[(e+4|0)>>1]&65535)-1|0,b,j);_GetInsMultiSlotField(l,HEAP32[b>>2],HEAPU16[(e|0)>>1]&65535,HEAPU32[(e+8|0)>>2]>>>9&1,HEAPU32[(e+8|0)>>2]>>>2&127);_GetPatternObjectAndMarks(d,(HEAPU16[(e+6|0)>>1]&
65535)-1|0,i,j);_GetInsMultiSlotField(m,HEAP32[i>>2],HEAPU16[(e+2|0)>>1]&65535,HEAPU32[(e+8|0)>>2]>>>17&1,HEAPU32[(e+8|0)>>2]>>>10&127);b=(HEAPU16[(l|0)>>1]&65535|0)!=(HEAPU16[(m|0)>>1]&65535|0)?3:4;break;case 3:k=HEAPU32[(e+8|0)>>2]>>>1&1;b=8;break;case 4:b=(HEAP32[(l+4|0)>>2]|0)!=(HEAP32[(m+4|0)>>2]|0)?5:6;break;case 5:k=HEAPU32[(e+8|0)>>2]>>>1&1;b=7;break;case 6:k=HEAP32[(e+8|0)>>2]&1;b=7;break;case 7:b=8;break;case 8:HEAP16[(g+4|0)>>1]=2;b=0!=(k|0)?9:10;break;case 9:var n=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+196|0)>>2]|0)>>2];b=11;break;case 10:n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=11;break;case 11:return HEAP32[(g+8|0)>>2]=n,h=k,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_JNSimpleCompareFunction3.X=1;
function _DeallocateObjectReteData(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=5;break;case 4:f=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+692|0)>>2];_DestroyObjectPatternNetwork(c,f);f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _GetInsMultiSlotField(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;e=h;d=f;g=c;i=a;j=b;g=HEAP32[(HEAP32[(d+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(d+44|0)>>2]+68|0)>>2]+(g<<2)|0)>>2]-1|0)<<2)|0)>>2];d=0!=(HEAPU32[HEAP32[(g|0)>>2]>>2]>>>1&1|0)?3:7;break;case 3:k=HEAP32[(g+8|0)>>2];d=0!=(i|0)?4:5;break;case 4:l=(k+16|0)+(j<<3)|0;d=6;break;case 5:l=(k+16|0)+(((HEAP32[(k+8|0)>>2]-j|0)-1|0)<<3)|0;d=6;break;case 6:HEAP16[(e|0)>>1]=HEAP16[(l|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(l+4|0)>>
2];d=8;break;case 7:HEAP16[(e|0)>>1]=HEAPU32[(g+4|0)>>2]>>>2&63;HEAP32[(e+4|0)>>2]=HEAP32[(g+8|0)>>2];d=8;break;case 8:return;default:assert(0,"bad label: "+d)}}_GetInsMultiSlotField.X=1;
function _GetObjectValueSimple(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m;e=h;g=f;i=c;j=a;k=HEAP32[(i+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(i+44|0)>>2]+68|0)>>2]+((HEAPU16[(j|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0;d=0!=(HEAP32[(i+20|0)>>2]|0)?3:7;break;case 3:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?7:4;break;case 4:HEAP32[l>>2]=HEAP32[(i+20|0)>>
2]+12*((k-HEAP32[(i+72|0)>>2]|0)/4&-1)|0;d=0!=(HEAP32[(HEAP32[l>>2]+8|0)>>2]|0)?5:6;break;case 5:k=l;d=6;break;case 6:d=7;break;case 7:d=0!=(HEAPU32[HEAP32[(HEAP32[k>>2]|0)>>2]>>2]>>>1&1|0)?8:15;break;case 8:m=HEAP32[(HEAP32[k>>2]+8|0)>>2];d=0!=(HEAP32[(j+4|0)>>2]&1|0)?9:13;break;case 9:d=0!=(HEAPU32[(j+4|0)>>2]>>>8&1|0)?10:11;break;case 10:HEAP16[(g+4|0)>>1]=4;HEAP32[(g+8|0)>>2]=m;HEAP32[(g+12|0)>>2]=HEAPU32[(j+4|0)>>2]>>>1&127;HEAP32[(g+16|0)>>2]=(HEAP32[(m+8|0)>>2]-(HEAPU32[(j+4|0)>>2]>>>9&127)|
0)-1|0;d=12;break;case 11:d=(m+16|0)+((HEAPU32[(j+4|0)>>2]>>>1&127)<<3)|0;HEAP16[(g+4|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(g+8|0)>>2]=HEAP32[(d+4|0)>>2];d=12;break;case 12:d=14;break;case 13:d=(m+16|0)+((HEAP32[(m+8|0)>>2]-((HEAPU32[(j+4|0)>>2]>>>9&127)+1|0)|0)<<3)|0;HEAP16[(g+4|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(g+8|0)>>2]=HEAP32[(d+4|0)>>2];d=14;break;case 14:d=16;break;case 15:HEAP16[(g+4|0)>>1]=HEAPU32[(HEAP32[k>>2]+4|0)>>2]>>>2&63;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[k>>2]+8|0)>>2];d=16;break;case 16:STACKTOP=
b;return;default:assert(0,"bad label: "+d)}}_GetObjectValueSimple.X=1;
function _CalculateSlotField(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=i;HEAP32[j>>2]=-1;b=0==(g|0)?3:4;break;case 3:d=k;b=20;break;case 4:l=HEAP32[(HEAP32[(HEAP32[(g|0)>>2]+8|0)>>2]+12|0)>>2];b=5;break;case 5:b=0!=(e|0)?6:9;break;case 6:b=(HEAP32[(e+4|0)>>2]|0)==(l|0)?7:8;break;case 7:b=9;break;case 8:e=HEAP32[(e+16|0)>>2];b=5;break;case 9:b=10;break;case 10:b=0!=(e|0)?11:12;break;case 11:var m=(HEAP32[(e+4|0)>>2]|0)==(l|0)&1;b=13;break;case 12:m=0;b=13;break;
case 13:b=0!=(m|0)?14:19;break;case 14:b=(HEAP32[(e|0)>>2]|0)==(i|0)?15:16;break;case 15:HEAP32[j>>2]=(HEAP32[(e+12|0)>>2]-HEAP32[(e+8|0)>>2]|0)+1|0;d=k;b=20;break;case 16:b=(HEAP32[(e|0)>>2]|0)>(i|0)?17:18;break;case 17:d=k;b=20;break;case 18:k=k+(HEAP32[(e+12|0)>>2]-HEAP32[(e+8|0)>>2]|0)|0;e=HEAP32[(e+16|0)>>2];b=10;break;case 19:d=k;b=20;break;case 20:return d;default:assert(0,"bad label: "+b)}}_CalculateSlotField.X=1;
function _GetObjectValueGeneral(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o,p=d+4;g=h;i=f;j=c;k=a;l=b;e=0!=(HEAPU32[(l+4|0)>>2]>>>16&1|0)?3:4;break;case 3:HEAP16[(i+4|0)>>1]=7;HEAP32[(i+8|0)>>2]=j;e=23;break;case 4:e=0==(HEAPU16[(l|0)>>1]&65535|0)?5:6;break;case 5:HEAP16[(i+4|0)>>1]=2;e=_GetConstructNamePointer(HEAP32[(j+44|0)>>2]);HEAP32[(i+8|0)>>2]=e;e=23;break;
case 6:e=1==(HEAPU16[(l|0)>>1]&65535|0)?7:8;break;case 7:HEAP16[(i+4|0)>>1]=8;HEAP32[(i+8|0)>>2]=HEAP32[(j+28|0)>>2];e=23;break;case 8:o=HEAP32[(j+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(j+44|0)>>2]+68|0)>>2]+((HEAPU16[(l|0)>>1]&65535)<<2)|0)>>2]-1|0)<<2)|0;e=0!=(HEAP32[(j+20|0)>>2]|0)?9:13;break;case 9:e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?13:10;break;case 10:HEAP32[p>>2]=HEAP32[(j+20|0)>>2]+12*((o-HEAP32[(j+72|0)>>2]|0)/4&-1)|0;e=0!=(HEAP32[(HEAP32[p>>2]+8|0)>>2]|0)?11:12;
break;case 11:o=p;e=12;break;case 12:e=13;break;case 13:e=0!=(HEAPU32[(l+4|0)>>2]>>>17&1|0)?14:17;break;case 14:HEAP16[(i+4|0)>>1]=HEAPU32[(HEAP32[o>>2]+4|0)>>2]>>>2&63;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[o>>2]+8|0)>>2];e=4==(HEAPU16[(i+4|0)>>1]&65535|0)?15:16;break;case 15:HEAP32[(i+12|0)>>2]=0;HEAP32[(i+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[o>>2]+8|0)>>2]+8|0)>>2]-1|0;e=16;break;case 16:e=23;break;case 17:m=_CalculateSlotField(k,HEAP32[o>>2],HEAPU16[(l+4|0)>>1]&65535,n);e=-1==(HEAP32[n>>2]|0)?18:22;break;
case 18:e=0!=(HEAPU32[HEAP32[(HEAP32[o>>2]|0)>>2]>>2]>>>1&1|0)?19:20;break;case 19:HEAP16[(i+4|0)>>1]=HEAP16[((HEAP32[(HEAP32[o>>2]+8|0)>>2]+16|0)+((m-1|0)<<3)|0)>>1];HEAP32[(i+8|0)>>2]=HEAP32[(((HEAP32[(HEAP32[o>>2]+8|0)>>2]+16|0)+((m-1|0)<<3)|0)+4|0)>>2];e=21;break;case 20:HEAP16[(i+4|0)>>1]=HEAPU32[(HEAP32[o>>2]+4|0)>>2]>>>2&63;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[o>>2]+8|0)>>2];e=21;break;case 21:e=23;break;case 22:HEAP16[(i+4|0)>>1]=4;HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[o>>2]+8|0)>>2];HEAP32[(i+12|
0)>>2]=m-1|0;HEAP32[(i+16|0)>>2]=(m+HEAP32[n>>2]|0)-2|0;e=23;break;case 23:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_GetObjectValueGeneral.X=1;
function _DestroyObjectPatternNetwork(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:7;break;case 6:c=HEAP32[(b+28|0)>>2];_DestroyObjectPatternNetwork(a,HEAP32[(b+16|0)>>2]);_DestroyObjectAlphaNodes(a,HEAP32[(b+32|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|
0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}_DestroyObjectPatternNetwork.X=1;
function _DestroyObjectAlphaNodes(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=7;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:7;break;case 6:c=HEAP32[(b+32|0)>>2];_DestroyAlphaBetaMemory(a,HEAP32[(b|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>
2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=5;break;case 7:return;default:assert(0,"bad label: "+c)}}_DestroyObjectAlphaNodes.X=1;function _ReplaceGetJNObjectValue(h,f,c){_GenObjectGetVar(h,1,f,c)}
function _GenObjectGetVar(h,f,c,a){var b=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l=b+8;e=h;g=f;i=c;j=a;_ClearBitString(k,8);_ClearBitString(l,8);d=0!=(g|0)?3:4;break;case 3:HEAP16[(k+2|0)>>1]=HEAP16[(j+32|0)>>1];HEAP16[(l+2|0)>>1]=HEAP16[(j+32|0)>>1];d=4;break;case 4:d=0>(HEAP16[(j+40|0)>>1]<<16>>16|0)?5:6;break;case 5:d=k+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-65537|65536;HEAP16[(i|0)>>
1]=(0!=(g|0)?72:70)&65535;d=_AddBitMap(e,k,8);HEAP32[(i+4|0)>>2]=d;d=28;break;case 6:d=0==(HEAPU16[(j+14|0)>>1]&65535|0)?7:14;break;case 7:d=0==(HEAPU16[(j+16|0)>>1]&65535|0)?8:14;break;case 8:d=0==(HEAPU16[(j+10|0)>>1]&65535|0)?9:14;break;case 9:d=0==(HEAPU16[(j+12|0)>>1]&65535|0)?10:14;break;case 10:d=0==(HEAPU32[(j+8|0)>>2]>>>14&1|0)?13:11;break;case 11:d=36==(HEAPU16[(j|0)>>1]&65535|0)?13:12;break;case 12:d=38==(HEAPU16[(j|0)>>1]&65535|0)?13:14;break;case 13:d=k+4|0;HEAP32[d>>2]=HEAP32[d>>2]&
-131073|131072;HEAP16[(k|0)>>1]=HEAP16[(j+40|0)>>1];HEAP16[(i|0)>>1]=(0!=(g|0)?72:70)&65535;d=_AddBitMap(e,k,8);HEAP32[(i+4|0)>>2]=d;d=28;break;case 14:d=37==(HEAPU16[(j|0)>>1]&65535|0)?16:15;break;case 15:d=35==(HEAPU16[(j|0)>>1]&65535|0)?16:22;break;case 16:d=0==(HEAPU16[(j+10|0)>>1]&65535|0)?18:17;break;case 17:d=0==(HEAPU16[(j+12|0)>>1]&65535|0)?18:22;break;case 18:HEAP16[(l|0)>>1]=HEAP16[(j+40|0)>>1];d=0==(HEAPU16[(j+10|0)>>1]&65535|0)?19:20;break;case 19:d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|
1;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-255|(HEAPU16[(j+14|0)>>1]&127)<<1;d=21;break;case 20:d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-257|256;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-65025|(HEAPU16[(j+16|0)>>1]&127)<<9;d=21;break;case 21:HEAP16[(i|0)>>1]=(0!=(g|0)?73:71)&65535;d=_AddBitMap(e,l,8);HEAP32[(i+4|0)>>2]=d;d=28;break;case 22:d=38==(HEAPU16[(j|0)>>1]&65535|0)?24:23;break;case 23:d=36==(HEAPU16[(j|0)>>1]&65535|0)?24:27;break;case 24:d=0==(HEAPU16[(j+10|0)>>1]&65535|0)?25:27;break;case 25:d=0==(HEAPU16[(j+
12|0)>>1]&65535|0)?26:27;break;case 26:HEAP16[(l|0)>>1]=HEAP16[(j+40|0)>>1];d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-257|256;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-255|(HEAPU16[(j+14|0)>>1]&127)<<1;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-65025|(HEAPU16[(j+16|0)>>1]&127)<<9;HEAP16[(i|0)>>1]=(0!=(g|0)?73:71)&65535;d=_AddBitMap(e,l,8);HEAP32[(i+4|0)>>2]=d;d=28;break;case 27:HEAP16[(k|0)>>1]=HEAP16[(j+40|0)>>1];HEAP16[(k+4|0)>>1]=HEAP16[(j+34|0)>>1];HEAP16[(i|0)>>1]=(0!=(g|0)?
72:70)&65535;d=_AddBitMap(e,k,8);HEAP32[(i+4|0)>>2]=d;d=28;break;case 28:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_GenObjectGetVar.X=1;function _GenGetJNObjectValue(h,f){var c;c=_GenConstant(h,0,0);_GenObjectGetVar(h,1,c,f);return c}function _ObjectJNVariableComparison(h,f,c){return _GenerateSlotComparisonTest(h,1,f,c)}
function _GenerateSlotComparisonTest(h,f,c,a){var b=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m=b+8,n=b+16,o=b+24,p=b+36,q=b+48;e=h;g=f;i=c;j=a;d=0!=(_IsSimpleSlotVariable(i)|0)?3:50;break;case 3:d=0!=(_IsSimpleSlotVariable(j)|0)?4:50;break;case 4:d=0==(HEAPU32[(i+8|0)>>2]>>>14&1|0)?5:13;break;case 5:d=0==(HEAPU32[(j+8|0)>>2]>>>14&1|0)?6:13;break;case 6:_ClearBitString(l,8);_ClearBitString(o,
12);d=0!=(HEAP32[(i+8|0)>>2]&1|0)?7:8;break;case 7:d=o+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=9;break;case 8:d=o+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=l+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=9;break;case 9:d=HEAP16[(i+40|0)>>1];HEAP16[(o|0)>>1]=d;HEAP16[(l|0)>>1]=d;d=HEAP16[(j+40|0)>>1];HEAP16[(o+2|0)>>1]=d;HEAP16[(l+2|0)>>1]=d;d=0!=(g|0)?10:11;break;case 10:HEAP16[(o+4|0)>>1]=HEAP16[(i+32|0)>>1];HEAP16[(o+6|0)>>1]=HEAP16[(j+32|0)>>1];k=e;d=_AddBitMap(e,o,12);k=
_GenConstant(k,77,d);d=12;break;case 11:k=e;d=_AddBitMap(e,l,8);k=_GenConstant(k,76,d);d=12;break;case 12:d=49;break;case 13:d=0==(HEAPU32[(i+8|0)>>2]>>>14&1|0)?15:14;break;case 14:d=0==(HEAPU32[(j+8|0)>>2]>>>14&1|0)?15:35;break;case 15:_ClearBitString(m,8);_ClearBitString(p,12);d=0!=(HEAP32[(i+8|0)>>2]&1|0)?16:17;break;case 16:d=p+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-513|512;d=m+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=18;break;case 17:d=p+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=m+4|0;HEAP32[d>>2]=HEAP32[d>>
2]&-2|1;d=18;break;case 18:d=1==(HEAPU32[(i+8|0)>>2]>>>14&1|0)?19:25;break;case 19:d=HEAP16[(i+40|0)>>1];HEAP16[(p|0)>>1]=d;HEAP16[(m|0)>>1]=d;d=HEAP16[(j+40|0)>>1];HEAP16[(p+2|0)>>1]=d;HEAP16[(m+2|0)>>1]=d;d=0!=(g|0)?20:21;break;case 20:HEAP16[(p+4|0)>>1]=HEAP16[(i+32|0)>>1];HEAP16[(p+6|0)>>1]=HEAP16[(j+32|0)>>1];d=21;break;case 21:d=0==(HEAPU16[(i+10|0)>>1]&65535|0)?22:23;break;case 22:d=p+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=m+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-513|512;d=HEAPU16[(i+14|0)>>1]&127;var r=
p+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=m+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=24;break;case 23:d=HEAPU16[(i+16|0)>>1]&127;r=p+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=m+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=24;break;case 24:d=31;break;case 25:d=HEAP16[(j+40|0)>>1];HEAP16[(p|0)>>1]=d;HEAP16[(m|0)>>1]=d;d=HEAP16[(i+40|0)>>1];HEAP16[(p+2|0)>>1]=d;HEAP16[(m+2|0)>>1]=d;d=0!=(g|0)?26:27;break;case 26:HEAP16[(p+4|0)>>1]=HEAP16[(j+32|0)>>1];HEAP16[(p+6|0)>>1]=HEAP16[(i+
32|0)>>1];d=27;break;case 27:d=0==(HEAPU16[(j+10|0)>>1]&65535|0)?28:29;break;case 28:d=p+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=m+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-513|512;d=HEAPU16[(j+14|0)>>1]&127;r=p+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=m+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=30;break;case 29:d=HEAPU16[(j+16|0)>>1]&127;r=p+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=m+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=30;break;case 30:d=31;break;case 31:d=0!=(g|0)?32:33;break;
case 32:k=e;d=_AddBitMap(e,p,12);k=_GenConstant(k,79,d);d=34;break;case 33:k=e;d=_AddBitMap(e,m,8);k=_GenConstant(k,78,d);d=34;break;case 34:d=48;break;case 35:_ClearBitString(n,8);_ClearBitString(q,12);d=0!=(HEAP32[(i+8|0)>>2]&1|0)?36:37;break;case 36:d=q+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=n+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=38;break;case 37:d=q+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=n+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=38;break;case 38:d=HEAP16[(i+40|0)>>1];HEAP16[(q|0)>>1]=d;HEAP16[(n|0)>>
1]=d;d=HEAP16[(j+40|0)>>1];HEAP16[(q+2|0)>>1]=d;HEAP16[(n+2|0)>>1]=d;d=0==(HEAPU16[(i+10|0)>>1]&65535|0)?39:40;break;case 39:d=q+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-513|512;d=n+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-513|512;d=HEAPU16[(i+14|0)>>1]&127;r=q+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=n+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=41;break;case 40:d=HEAPU16[(i+16|0)>>1]&127;r=q+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;r=n+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-509|(d&127)<<2;d=41;break;case 41:d=
0==(HEAPU16[(j+10|0)>>1]&65535|0)?42:43;break;case 42:d=q+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-131073|131072;d=n+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-131073|131072;d=HEAPU16[(j+14|0)>>1]&127;r=q+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-130049|(d&127)<<10;r=n+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-130049|(d&127)<<10;d=44;break;case 43:d=HEAPU16[(j+16|0)>>1]&127;r=q+8|0;HEAP32[r>>2]=HEAP32[r>>2]&-130049|(d&127)<<10;r=n+4|0;HEAP32[r>>2]=HEAP32[r>>2]&-130049|(d&127)<<10;d=44;break;case 44:d=0!=(g|0)?45:46;break;case 45:HEAP16[(q+
4|0)>>1]=HEAP16[(i+32|0)>>1];HEAP16[(q+6|0)>>1]=HEAP16[(j+32|0)>>1];k=e;d=_AddBitMap(e,q,12);k=_GenConstant(k,81,d);d=47;break;case 46:k=e;d=_AddBitMap(e,n,8);k=_GenConstant(k,80,d);d=47;break;case 47:d=48;break;case 48:d=49;break;case 49:d=54;break;case 50:var s=e;d=0!=(HEAP32[(i+8|0)>>2]&1|0)?51:52;break;case 51:var t=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+12|0)>>2];d=53;break;case 52:t=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+8|0)>>2];d=53;break;case 53:k=_GenConstant(s,30,t);d=_GenConstant(e,
0,0);HEAP32[(k+8|0)>>2]=d;_GenObjectGetVar(e,g,HEAP32[(k+8|0)>>2],i);d=_GenConstant(e,0,0);HEAP32[(HEAP32[(k+8|0)>>2]+12|0)>>2]=d;_GenObjectGetVar(e,g,HEAP32[(HEAP32[(k+8|0)>>2]+12|0)>>2],j);d=54;break;case 54:return h=k,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_GenerateSlotComparisonTest.X=1;
function _IsSimpleSlotVariable(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=38==(HEAPU16[(a|0)>>1]&65535|0)?4:3;break;case 3:f=36==(HEAPU16[(a|0)>>1]&65535|0)?4:5;break;case 4:c=0;f=17;break;case 5:f=0>(HEAP16[(a+40|0)>>1]<<16>>16|0)?8:6;break;case 6:f=0==(HEAP16[(a+40|0)>>1]<<16>>16|0)?8:7;break;case 7:f=1==(HEAP16[(a+40|0)>>1]<<16>>16|0)?8:9;break;case 8:c=0;f=17;break;case 9:f=0==(HEAPU32[(a+8|0)>>2]>>>14&1|0)?10:11;break;case 10:c=1;f=17;break;case 11:f=1==(HEAPU32[(a+8|0)>>2]>>>2&1|0)?12:
13;break;case 12:c=0;f=17;break;case 13:f=0==(HEAPU16[(a+10|0)>>1]&65535|0)?15:14;break;case 14:f=0==(HEAPU16[(a+12|0)>>1]&65535|0)?15:16;break;case 15:c=1;f=17;break;case 16:c=0;f=17;break;case 17:return c;default:assert(0,"bad label: "+f)}}_IsSimpleSlotVariable.X=1;function _GetDelayObjectPatternMatching(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+700|0)>>2]}function _ObjectNetworkPointer(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+692|0)>>2]}
function _ObjectNetworkTerminalPointer(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+696|0)>>2]}function _SetObjectNetworkPointer(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+692|0)>>2]=f}function _SetObjectNetworkTerminalPointer(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+696|0)>>2]=f}
function _GenObjectPNConstantCompare(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;_ClearBitString(e,4);a=0!=(HEAP32[(d+8|0)>>2]&1|0)?3:4;break;case 3:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-257|256;a=5;break;case 4:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-129|128;a=5;break;case 5:a=0==(HEAPU32[(d+8|0)>>2]>>>14&1|0)?8:6;break;case 6:a=0==(HEAPU16[(d+12|0)>>1]&65535|0)?8:7;break;case 7:a=
0==(HEAPU16[(d+10|0)>>1]&65535|0)?8:17;break;case 8:a=0!=(HEAP16[(d+40|0)>>1]<<16>>16|0)?9:17;break;case 9:a=1!=(HEAP16[(d+40|0)>>1]<<16>>16|0)?10:17;break;case 10:a=0==(HEAPU32[(d+8|0)>>2]>>>14&1|0)?11:12;break;case 11:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-1025|1024;a=16;break;case 12:a=0==(HEAPU16[(d+10|0)>>1]&65535|0)?13:14;break;case 13:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-1025|1024;a=e;HEAP32[a>>2]=HEAP32[a>>2]&-128|HEAPU16[(d+14|0)>>1]&127;a=15;break;case 14:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-128|HEAPU16[(d+
16|0)>>1]&127;a=15;break;case 15:a=16;break;case 16:g=b;a=_AddBitMap(b,e,4);g=_GenConstant(g,75,a);a=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);HEAP32[(g+8|0)>>2]=a;a=18;break;case 17:g=e;HEAP32[g>>2]=HEAP32[g>>2]&-513|512;g=b;a=_AddBitMap(b,e,4);g=_GenConstant(g,75,a);a=_GenConstant(b,0,0);HEAP32[(g+8|0)>>2]=a;a=HEAP16[(d|0)>>1];HEAP16[(d|0)>>1]=35;_GenObjectGetVar(b,0,HEAP32[(g+8|0)>>2],d);HEAP16[(d|0)>>1]=a;a=_GenConstant(b,HEAP16[(d|0)>>1],HEAP32[(d+4|0)>>2]);HEAP32[(HEAP32[(g+8|0)>>
2]+12|0)>>2]=a;a=18;break;case 18:return b=g,STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_GenObjectPNConstantCompare.X=1;function _ReplaceGetPNObjectValue(h,f,c){_GenObjectGetVar(h,0,f,c)}function _GenGetPNObjectValue(h,f){var c;c=_GenConstant(h,0,0);_GenObjectGetVar(h,0,c,f);return c}function _ObjectPNVariableComparison(h,f,c){return _GenerateSlotComparisonTest(h,0,f,c)}
function _GenObjectLengthTest(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=0==(HEAPU16[(d+16|0)>>1]&65535|0)?3:6;break;case 3:a=35!=(HEAPU16[(d|0)>>1]&65535|0)?4:6;break;case 4:a=37!=(HEAPU16[(d|0)>>1]&65535|0)?5:6;break;case 5:a=16;break;case 6:_ClearBitString(e,4);a=36!=(HEAPU16[(d|0)>>1]&65535|0)?7:10;break;case 7:a=38!=(HEAPU16[(d|0)>>1]&65535|0)?8:10;break;case 8:a=
0==(HEAPU16[(d+12|0)>>1]&65535|0)?9:10;break;case 9:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-32769|32768;a=11;break;case 10:a=e;HEAP32[a>>2]&=-32769;a=11;break;case 11:a=35==(HEAPU16[(d|0)>>1]&65535|0)?13:12;break;case 12:a=37==(HEAPU16[(d|0)>>1]&65535|0)?13:14;break;case 13:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-32768|((HEAPU16[(d+16|0)>>1]&65535)+1|0)&32767;a=15;break;case 14:a=e;HEAP32[a>>2]=HEAP32[a>>2]&-32768|HEAPU16[(d+16|0)>>1]&32767;a=15;break;case 15:a=b;var g=_AddBitMap(b,e,4);a=_GenConstant(a,74,g);a=_CombineExpressions(b,
a,HEAP32[(d+52|0)>>2]);HEAP32[(d+52|0)>>2]=a;a=16;break;case 16:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_GenObjectLengthTest.X=1;
function _GenObjectZeroLengthTest(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ClearBitString(c,4);HEAP32[c>>2]=HEAP32[c>>2]&-32769|32768;HEAP32[c>>2]&=-32768;var a=_AddBitMap(h,c,4),a=_GenConstant(h,74,a),a=_CombineExpressions(h,a,HEAP32[(f+52|0)>>2]);HEAP32[(f+52|0)>>2]=a;STACKTOP=c}
function _ObjectMatchDelay(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;c=f;b=_SetDelayObjectPatternMatching(a,1);_EvaluateExpression(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],c);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_SetHaltExecution(a,0);_SetEvaluationError(a,0);_SetDelayObjectPatternMatching(a,b);_SetEvaluationError(a,1);c=5;break;case 4:_SetDelayObjectPatternMatching(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+
c)}}function _SetDelayObjectPatternMatching(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;c=f;b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+700|0)>>2];c=0!=(c|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+700|0)>>2]=1;c=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+700|0)>>2]=0;_ObjectNetworkAction(a,0,0,-1);c=5;break;case 5:return b;default:assert(0,"bad label: "+c)}}
function _ObjectNetworkAction(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:b=15;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+48|0)>>2]=1;b=HEAP32[(HEAP32[(d+16|0)>>2]+64|0)>>2]+8|0;var j=HEAP32[b>>2];HEAP32[b>>2]=j+1|0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+708|0)>>2]=j;b=0!=(g|0)?5:13;break;case 5:b=g+24|0;HEAP32[b>>2]&=-17;b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|
0)>>2]+700|0)>>2]|0)?6:11;break;case 6:b=e;b=1==(b|0)?7:2==(b|0)?8:9;break;case 7:_ObjectAssertAction(d,g);b=10;break;case 8:_ObjectRetractAction(d,g,0);b=10;break;case 9:b=_QueueModifySlotMap(d,0,i);_ObjectModifyAction(d,g,b);_rm(d,b,((HEAPU16[(b|0)>>1]&65535|0)/8&-1|0)+4|0);b=10;break;case 10:b=12;break;case 11:_QueueObjectMatchAction(d,e,g,i);b=12;break;case 12:b=13;break;case 13:_ProcessObjectMatchQueue(d);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+48|0)>>2]=0;_ForceLogicalRetractions(d);b=
0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]|0)>>2]|0)?14:15;break;case 14:_FlushGarbagePartialMatches(d);b=15;break;case 15:return;default:assert(0,"bad label: "+b)}}_ObjectNetworkAction.X=1;
function _ObjectAssertAction(h,f){HEAP32[((f|0)+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+708|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+4|0)>>2]=0;_MarkObjectPatternNetwork(h,0);var c=_ObjectNetworkPointer(h);_ObjectPatternMatch(h,0,c,0);c=f+24|0;HEAP32[c>>2]=HEAP32[c>>2]&-17|16}_ObjectAssertAction.X=1;
function _CompareSlotBitMaps(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=(HEAPU16[(b|0)>>1]&65535|0)<(HEAPU16[(d|0)>>1]&65535|0)?3:4;break;case 3:var i=HEAPU16[(b|0)>>1]&65535;c=5;break;case 4:i=HEAPU16[(d|0)>>1]&65535;c=5;break;case 5:g=(i|0)/8&65535;e=0;c=6;break;case 6:c=(e&65535|0)<=(g&65535|0)?7:11;break;case 7:c=0!=(HEAP8[(b+2|0)+(e&65535)|0]<<24>>24&HEAP8[(d+2|0)+(e&65535)|0]<<24>>24|0)?8:9;break;case 8:a=1;c=12;break;case 9:c=10;break;case 10:e=e+1&65535;c=6;break;case 11:a=
0;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_CompareSlotBitMaps.X=1;
function _ObjectRetractAction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;b=h;d=f;e=c;a=0==(e|0)?3:9;break;case 3:a=0!=(HEAP32[(d+16|0)>>2]|0)?4:8;break;case 4:i=HEAP32[(d+16|0)>>2];a=5;break;case 5:a=0!=(i|0)?6:7;break;case 6:a=d+40|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;i=HEAP32[(i|0)>>2];a=5;break;case 7:_NetworkRetract(b,HEAP32[(d+16|0)>>2]);HEAP32[(d+16|0)>>2]=0;a=8;break;case 8:a=27;break;case 9:g=k=j=0;i=HEAP32[(d+16|0)>>2];a=10;break;case 10:a=0!=(i|0)?11:24;break;case 11:l=HEAP32[(i+
8|0)>>2];a=0!=(HEAP32[(l+24|0)>>2]|0)?12:22;break;case 12:a=0!=(_CompareSlotBitMaps(e,HEAP32[(HEAP32[(l+24|0)>>2]+16|0)>>2])|0)?13:20;break;case 13:a=d+40|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=0==(g|0)?14:15;break;case 14:HEAP32[(d+16|0)>>2]=HEAP32[(i|0)>>2];a=16;break;case 15:HEAP32[(g|0)>>2]=HEAP32[(i|0)>>2];a=16;break;case 16:a=0!=(j|0)?18:17;break;case 17:j=i;a=19;break;case 18:HEAP32[(k|0)>>2]=i;a=19;break;case 19:k=i;i=HEAP32[(i|0)>>2];HEAP32[(k|0)>>2]=0;a=21;break;case 20:g=i;i=HEAP32[(i|0)>>2];
a=21;break;case 21:a=23;break;case 22:g=i;i=HEAP32[(i|0)>>2];a=23;break;case 23:a=10;break;case 24:a=0!=(j|0)?25:26;break;case 25:a=HEAP32[((d|0)+4|0)>>2];HEAP32[((d|0)+4|0)>>2]=0;_NetworkRetract(b,j);HEAP32[((d|0)+4|0)>>2]=a;a=26;break;case 26:a=27;break;case 27:h=d+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-17|16;return;default:assert(0,"bad label: "+a)}}_ObjectRetractAction.X=1;
function _QueueModifySlotMap(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=0==(d|0)?3:4;break;case 3:a=5;break;case 4:a=(e|0)>(HEAPU16[(d|0)>>1]&65535|0)?5:8;break;case 5:i=(e<<1|0)&65535;a=((i&65535|0)/8&-1|0)+4|0;g=_gm2(b,a);_ClearBitString(g,a);a=0!=(d|0)?6:7;break;case 6:a=((HEAPU16[(d|0)>>1]&65535|0)/8&-1|0)+4|0;var j=g,k=d,l=a|0;assert(0===l%1,"memcpy given "+l+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(j,k,l,1);_rm(b,d,a);a=7;break;case 7:HEAP16[(g|
0)>>1]=i;a=9;break;case 8:g=d;a=9;break;case 9:return h=(g+2|0)+((e|0)/8&-1)|0,HEAP8[h]=(HEAP8[h]<<24>>24|(1<<(e|0)%8&255)<<24>>24)&255,g;default:assert(0,"bad label: "+a)}}_QueueModifySlotMap.X=1;
function _ObjectModifyAction(h,f,c){HEAP32[((f|0)+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+708|0)>>2];_ObjectRetractAction(h,f,c);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]+4|0)>>2]=0;_MarkObjectPatternNetwork(h,c);c=_ObjectNetworkPointer(h);_ObjectPatternMatch(h,0,c,0);h=f+24|0;HEAP32[h>>2]=HEAP32[h>>2]&-17|16}_ObjectModifyAction.X=1;
function _QueueObjectMatchAction(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;j=0;k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+688|0)>>2];b=3;break;case 3:b=0!=(k|0)?4:20;break;case 4:b=(HEAP32[(k+4|0)>>2]|0)==(g|0)?5:19;break;case 5:b=1==(HEAP32[(k|0)>>2]|0)?6:12;break;case 6:b=2==(e|0)?7:11;break;case 7:b=0==(j|0)?8:9;break;case 8:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+688|0)>>2]=HEAP32[(k+12|0)>>2];b=10;break;case 9:HEAP32[(j+12|0)>>2]=HEAP32[(k+12|0)>>
2];b=10;break;case 10:b=HEAP32[(k+4|0)>>2]+40|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;_ReturnObjectMatchAction(d,k);b=11;break;case 11:b=18;break;case 12:b=2==(e|0)?13:16;break;case 13:HEAP32[(k|0)>>2]=2;b=0!=(HEAP32[(k+8|0)>>2]|0)?14:15;break;case 14:_rm(d,HEAP32[(k+8|0)>>2],((HEAPU16[(HEAP32[(k+8|0)>>2]|0)>>1]&65535|0)/8&-1|0)+4|0);HEAP32[(k+8|0)>>2]=0;b=15;break;case 15:b=17;break;case 16:b=_QueueModifySlotMap(d,HEAP32[(k+8|0)>>2],i);HEAP32[(k+8|0)>>2]=b;b=17;break;case 17:b=18;break;case 18:b=29;break;
case 19:j=k;k=HEAP32[(k+12|0)>>2];b=3;break;case 20:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?21:22;break;case 21:var m=_genalloc(d,16);b=23;break;case 22:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+16|0)>>2];b=23;break;case 23:l=m;HEAP32[(l|0)>>2]=e;HEAP32[(l+12|0)>>2]=k;b=3!=(e|0)?24:25;break;case 24:var n=0;b=26;break;case 25:n=_QueueModifySlotMap(d,0,i);b=26;break;case 26:HEAP32[(l+8|0)>>2]=n;HEAP32[(l+4|0)>>2]=g;b=HEAP32[(l+4|0)>>2]+40|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=0==(j|0)?27:28;break;case 27:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+688|0)>>2]=l;b=29;break;case 28:HEAP32[(j+12|0)>>2]=l;b=29;break;case 29:return;default:assert(0,"bad label: "+b)}}
_QueueObjectMatchAction.X=1;
function _ProcessObjectMatchQueue(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=3;break;case 3:if(0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+688|0)>>2]|0))f=4;else{var b=0;f=5}break;case 4:b=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+700|0)>>2]|0);f=5;break;case 5:f=b?6:11;break;case 6:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+688|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+688|0)>>2]=HEAP32[(a+12|0)>>2];f=HEAP32[(a|0)>>2];f=1==(f|0)?7:2==(f|0)?8:9;break;case 7:_ObjectAssertAction(c,
HEAP32[(a+4|0)>>2]);f=10;break;case 8:_ObjectRetractAction(c,HEAP32[(a+4|0)>>2],HEAP32[(a+8|0)>>2]);f=10;break;case 9:_ObjectModifyAction(c,HEAP32[(a+4|0)>>2],HEAP32[(a+8|0)>>2]);f=10;break;case 10:f=HEAP32[(a+4|0)>>2]+40|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;_ReturnObjectMatchAction(c,a);f=3;break;case 11:return;default:assert(0,"bad label: "+f)}}_ProcessObjectMatchQueue.X=1;
function _ResetObjectMatchTimeTags(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;f=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+704|0)>>2]+1|0)>>>0>HEAPU32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+704|0)>>2]>>>0?3:4;break;case 3:f=12;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+140|0)>>2]+704|0)>>2]=0;a=_ObjectNetworkTerminalPointer(c);f=5;break;case 5:f=0!=(a|0)?6:12;break;case 6:HEAP32[(a+16|0)>>2]=0;b=HEAP32[(a+28|0)>>2];f=7;break;case 7:f=0!=(b|0)?8:11;break;case 8:f=0==(HEAP32[(b+4|
0)>>2]|0)?9:10;break;case 9:f=11;break;case 10:HEAP32[(b+4|0)>>2]=0;b=HEAP32[(b+20|0)>>2];f=7;break;case 11:a=HEAP32[(a+36|0)>>2];f=5;break;case 12:return;default:assert(0,"bad label: "+f)}}_ResetObjectMatchTimeTags.X=1;
function _MarkObjectPatternNetwork(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;a=h;b=f;_ResetObjectMatchTimeTags(a);c=HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;d=_ObjectNetworkTerminalPointer(a);i=HEAPU16[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]|0)>>2]+44|0)>>2]+26|0)>>1]&65535;c=3;break;case 3:c=0!=(d|0)?4:33;break;case 4:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+40|0)>>2]|0)?5:7;break;case 5:c=0==(HEAPU32[((d|0)+12|0)>>2]>>>3&1|
0)?6:7;break;case 6:d=HEAP32[(d+36|0)>>2];c=3;break;case 7:g=HEAP32[(HEAP32[(d+20|0)>>2]+16|0)>>2];c=i>>>0>(HEAPU16[(g|0)>>1]&65535)>>>0?8:9;break;case 8:c=32;break;case 9:c=0!=(HEAP8[(g+2|0)+Math.floor((i>>>0)/8)|0]<<24>>24&(1<<(i>>>0)%8&255)<<24>>24|0)?10:32;break;case 10:c=0==(b|0)?11:19;break;case 11:HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2];e=HEAP32[(d+28|0)>>2];c=12;break;case 12:c=0!=(e|0)?13:18;break;case 13:c=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+140|0)>>2]+704|0)>>2]|0)?14:15;break;case 14:c=18;break;case 15:HEAP32[(e+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2];c=16;break;case 16:c=17;break;case 17:e=HEAP32[(e+20|0)>>2];c=12;break;case 18:c=31;break;case 19:c=0!=(HEAP32[(d+24|0)>>2]|0)?20:30;break;case 20:c=0!=(_CompareSlotBitMaps(b,HEAP32[(HEAP32[(d+24|0)>>2]+16|0)>>2])|0)?21:29;break;case 21:HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2];e=HEAP32[(d+28|0)>>2];c=22;break;case 22:c=
0!=(e|0)?23:28;break;case 23:c=(HEAP32[(e+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2]|0)?24:25;break;case 24:c=28;break;case 25:HEAP32[(e+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2];c=26;break;case 26:c=27;break;case 27:e=HEAP32[(e+20|0)>>2];c=22;break;case 28:c=29;break;case 29:c=30;break;case 30:c=31;break;case 31:c=32;break;case 32:d=HEAP32[(d+36|0)>>2];c=3;break;case 33:return;default:assert(0,"bad label: "+c)}}_MarkObjectPatternNetwork.X=1;
function _ObjectPatternMatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;b=3;break;case 3:b=0!=(g|0)?4:27;break;case 4:b=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+704|0)>>2]|0)?5:17;break;case 5:b=0==(HEAP32[(g+8|0)>>2]|0)?7:6;break;case 6:b=1==(HEAP32[(g+8|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]=1;e=0;b=16;break;case 8:b=0==(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+140|0)>>2]+4|0)>>2]|0)?9:10;break;case 9:b=11;break;case 10:b=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]|0)>>2]+8|0)>>2]+8|0)>>2]|0)!=(HEAP32[(g+8|0)>>2]|0)?11:15;break;case 11:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2]+72|0)>>2]+((HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]|0)>>2]+44|0)>>2]+68|0)>>2]+(HEAP32[(g+8|0)>>2]<<2)|0)>>2]-1|0)<<2)|
0)>>2];e=0;b=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]|0)>>2]>>2]>>>1&1|0)?12:13;break;case 12:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]+8|0)>>2]+8|0)>>2];b=14;break;case 13:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]=1;b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+140|0)>>2]+4|0)>>2];_ProcessPatternNode(d,e,g,i);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]=j;b=17;break;case 17:b=1==(HEAP32[g>>2]&1|0)?18:25;break;case 18:k=g;HEAP32[k>>2]&=-2;k=g;g=HEAP32[(g+28|0)>>2];b=19;break;case 19:b=0!=(g|0)?20:24;break;case 20:b=(HEAP32[(g+8|0)>>2]|0)!=(HEAP32[(k+8|0)>>2]|0)?22:21;break;case 21:b=(HEAPU32[g>>2]>>>3&255|0)!=(HEAPU32[k>>2]>>>3&255|0)?22:23;break;case 22:b=24;break;case 23:g=HEAP32[(g+
28|0)>>2];b=19;break;case 24:b=26;break;case 25:g=HEAP32[(g+28|0)>>2];b=26;break;case 26:b=3;break;case 27:return;default:assert(0,"bad label: "+b)}}_ObjectPatternMatch.X=1;
function _ProcessPatternNode(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o;d=h;e=f;g=c;i=a;j=HEAPU32[g>>2]>>>3&255;k=j+e|0;b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]|0)?3:10;break;case 3:b=0==(HEAP32[(g+12|0)>>2]|0)?4:5;break;case 4:b=6;break;case 5:b=0!=(_EvaluateObjectPatternTest(d,k,0,HEAP32[(g+12|0)>>2],g)|0)?6:9;break;case 6:b=0!=(HEAP32[(g+32|0)>>2]|0)?7:8;break;case 7:_CreateObjectAlphaMatch(d,HEAP32[(g+32|0)>>2]);b=8;break;case 8:_ObjectPatternMatch(d,
e,HEAP32[(g+16|0)>>2],i);b=9;break;case 9:b=46;break;case 10:b=0==(HEAPU32[g>>2]>>>1&1|0)?11:18;break;case 11:b=0==(HEAP32[(g+12|0)>>2]|0)?12:13;break;case 12:b=14;break;case 13:b=0!=(_EvaluateObjectPatternTest(d,k,0,HEAP32[(g+12|0)>>2],g)|0)?14:17;break;case 14:b=0!=(HEAP32[(g+32|0)>>2]|0)?15:16;break;case 15:_CreateObjectAlphaMatch(d,HEAP32[(g+32|0)>>2]);b=16;break;case 16:_ObjectPatternMatch(d,e,HEAP32[(g+16|0)>>2],i);b=17;break;case 17:b=46;break;case 18:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?19:20;break;case 19:var p=_genalloc(d,20);b=21;break;case 20:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=21;break;case 21:o=p;HEAP32[(o|0)>>2]=j;HEAP32[(o+4|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];HEAP32[(o+8|0)>>2]=k;HEAP32[(o+16|0)>>2]=0;b=0==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+12|0)>>2]|0)?22:23;break;case 22:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+12|0)>>2]=o;b=24;break;case 23:HEAP32[(i+16|0)>>2]=o;b=24;break;case 24:b=0==(HEAPU32[g>>2]>>>2&1|0)?25:35;break;case 25:l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
140|0)>>2]+4|0)>>2];HEAP32[(o+12|0)>>2]=HEAP32[(o+8|0)>>2]-1|0;m=((l-HEAP32[(o+8|0)>>2]|0)-(HEAPU32[g>>2]>>>11&255)|0)+2|0;b=26;break;case 26:b=0<(m|0)?27:34;break;case 27:b=0==(HEAP32[(g+12|0)>>2]|0)?28:29;break;case 28:b=30;break;case 29:b=0!=(_EvaluateObjectPatternTest(d,k,o,HEAP32[(g+12|0)>>2],g)|0)?30:33;break;case 30:b=0!=(HEAP32[(g+32|0)>>2]|0)?31:32;break;case 31:_CreateObjectAlphaMatch(d,HEAP32[(g+32|0)>>2]);b=32;break;case 32:_ObjectPatternMatch(d,e+(HEAP32[(o+12|0)>>2]-k|0)|0,HEAP32[(g+
16|0)>>2],o);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+4|0)>>2]=n;b=33;break;case 33:b=o+12|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;m=m-1|0;b=26;break;case 34:b=42;break;case 35:HEAP32[(o+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+8|0)>>2];b=0==(HEAP32[(g+12|0)>>2]|0)?36:37;break;case 36:b=38;break;case 37:b=0!=(_EvaluateObjectPatternTest(d,k,o,HEAP32[(g+12|0)>>2],g)|0)?38:41;break;case 38:b=0!=(HEAP32[(g+32|0)>>2]|0)?39:40;break;
case 39:_CreateObjectAlphaMatch(d,HEAP32[(g+32|0)>>2]);b=40;break;case 40:_ObjectPatternMatch(d,0,HEAP32[(g+16|0)>>2],o);b=41;break;case 41:b=42;break;case 42:b=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+12|0)>>2]|0)==(o|0)?43:44;break;case 43:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+140|0)>>2]+12|0)>>2]=0;b=45;break;case 44:HEAP32[(i+16|0)>>2]=0;b=45;break;case 45:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=o;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=46;break;case 46:return;default:assert(0,"bad label: "+b)}}_ProcessPatternNode.X=1;
function _EvaluateObjectPatternTest(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o;i=h;j=f;k=c;l=a;m=b;e=75==(HEAPU16[(l|0)>>1]&65535|0)?3:8;break;case 3:o=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|0)>>2]=l;e=_ObjectCmpConstantFunction(i,HEAP32[(l+4|0)>>2],n);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]|
0)>>2]=o;e=0!=(e|0)?4:7;break;case 4:e=0!=(HEAPU32[HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2]>>2]>>>7&1|0)?5:6;break;case 5:e=m;HEAP32[e>>2]=HEAP32[e>>2]&-2|1;e=6;break;case 6:g=1;e=30;break;case 7:g=0;e=30;break;case 8:e=(HEAP32[(l+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|0)>>2]+4|0)>>2]|0)?9:15;break;case 9:l=HEAP32[(l+8|0)>>2];e=10;break;case 10:e=0!=(l|0)?11:14;break;case 11:e=0!=(_EvaluateObjectPatternTest(i,j,k,l,m)|0)?12:13;break;case 12:g=m;HEAP32[g>>2]&=-2;g=1;e=30;break;case 13:e=
m;HEAP32[e>>2]&=-2;l=HEAP32[(l+12|0)>>2];e=10;break;case 14:g=0;e=30;break;case 15:e=(HEAP32[(l+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+180|0)>>2]|0)>>2]|0)?16:22;break;case 16:l=HEAP32[(l+8|0)>>2];e=17;break;case 17:e=0!=(l|0)?18:21;break;case 18:e=0==(_EvaluateObjectPatternTest(i,j,k,l,m)|0)?19:20;break;case 19:g=m;HEAP32[g>>2]&=-2;g=0;e=30;break;case 20:e=m;HEAP32[e>>2]&=-2;l=HEAP32[(l+12|0)>>2];e=17;break;case 21:g=1;e=30;break;case 22:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+
8|0)>>2]=0;e=0!=(_EvaluateExpression(i,l,n)|0)?23:24;break;case 23:_ObjectPatternNetErrorMessage(i,m);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;g=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+176|0)>>2]+8|0)>>2]=0;e=30;break;case 24:e=(HEAP32[(n+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?26:25;break;case 25:e=2!=(HEAPU16[(n+4|0)>>1]&65535|0)?26:27;break;case 26:g=1;e=30;break;case 27:e=28;break;case 28:e=29;break;case 29:g=0;e=30;break;case 30:return h=g,STACKTOP=
d,h;default:assert(0,"bad label: "+e)}}_EvaluateObjectPatternTest.X=1;
function _CreateObjectAlphaMatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:13;break;case 4:c=(HEAP32[(b+16|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+704|0)>>2]|0)?5:12;break;case 5:e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]|0)>>2]+40|0;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=_CreateAlphaMatch(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]+12|0)>>2],b);c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?6:7;break;case 6:var g=_genalloc(a,12);c=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=8;break;case 8:d=g;HEAP32[(d|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+140|0)>>2]|0)>>2]+16|0)>>2];HEAP32[(d+8|0)>>2]=b;HEAP32[(d+4|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+140|0)>>2]|0)>>2]+16|0)>>2]=d;d=HEAP32[((b|0)+8|0)>>2];c=9;break;case 9:c=0!=(d|0)?10:11;break;case 10:_NetworkAssert(a,e,d,1);d=HEAP32[(d+32|0)>>2];c=9;break;case 11:c=12;break;case 12:b=HEAP32[(b+32|0)>>2];c=3;break;case 13:return;default:assert(0,"bad label: "+c)}}_CreateObjectAlphaMatch.X=1;
function _ObjectPatternNetErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str3304|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str23306|0);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str33307|0);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+140|0)>>2]|0)>>2]+28|0)>>2]+16|0)>>2]);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str43308|0);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str53309|
0);var c=_FindIDSlotName(h,HEAP32[(f+8|0)>>2])+16|0;_EnvPrintRouter(h,STRING_TABLE.__str13305|0,HEAP32[c>>2]);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str63310|0);_PrintLongInteger(h,STRING_TABLE.__str13305|0,HEAPU32[f>>2]>>>3&255);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str73311|0);_TraceErrorToObjectPattern(h,1,f);_EnvPrintRouter(h,STRING_TABLE.__str13305|0,STRING_TABLE.__str73311|0)}_ObjectPatternNetErrorMessage.X=1;
function _TraceErrorToObjectPattern(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=3;break;case 3:a=0!=(e|0)?4:12;break;case 4:a=0!=(HEAP32[(e+32|0)>>2]|0)?5:9;break;case 5:g=HEAP32[((HEAP32[(e+32|0)>>2]|0)+8|0)>>2];a=6;break;case 6:a=0!=(g|0)?7:8;break;case 7:_EnvPrintRouter(b,STRING_TABLE.__str13305|0,STRING_TABLE.__str83312|0);_PrintLongInteger(b,STRING_TABLE.__str13305|0,HEAPU32[g>>2]>>>9&127);_EnvPrintRouter(b,STRING_TABLE.__str13305|0,STRING_TABLE.__str93313|0);_TraceErrorToRule(b,
g,STRING_TABLE.__str103314|0);g=HEAP32[(g+32|0)>>2];a=6;break;case 8:a=9;break;case 9:_TraceErrorToObjectPattern(b,0,HEAP32[(e+16|0)>>2]);a=0!=(d|0)?10:11;break;case 10:a=12;break;case 11:e=HEAP32[(e+28|0)>>2];a=3;break;case 12:return;default:assert(0,"bad label: "+a)}}_TraceErrorToObjectPattern.X=1;
function _ReturnObjectMatchAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(HEAP32[(b+8|0)>>2]|0)?3:4;break;case 3:_rm(a,HEAP32[(b+8|0)>>2],((HEAPU16[(HEAP32[(b+8|0)>>2]|0)>>1]&65535|0)/8&-1|0)+4|0);c=4;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>
2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+c)}}_ReturnObjectMatchAction.X=1;function _ParseFunctionDefinitions(h){_AllocateEnvironmentData(h,11,24,0);_EnvDefineFunction2(h,STRING_TABLE.__str3329|0,117,1346,STRING_TABLE.__str13330|0,STRING_TABLE.__str23331|0)}
function _CheckSyntaxFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]|0)>>2];a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str3329|0,0,1)|0)?3:4;break;case 3:a=7;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str3329|0,1,3,e)|0)?5:6;break;case 5:a=7;break;case 6:_CheckSyntax(b,
HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],d);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _CheckSyntax(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l;e=h;b=f;g=c;HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]|0)>>2];b=0==(_OpenStringSource(e,STRING_TABLE.__str3329|0,b,0)|0)?3:4;break;case 3:d=1;b=22;break;case 4:_GetToken(e,STRING_TABLE.__str3329|0,j);b=170!=(HEAPU16[(j|0)>>1]&65535|0)?5:6;break;case 5:_CloseStringSource(e,
STRING_TABLE.__str3329|0);d=_EnvAddSymbol(e,STRING_TABLE.__str33332|0);HEAP32[(g+8|0)>>2]=d;d=1;b=22;break;case 6:_GetToken(e,STRING_TABLE.__str3329|0,j);b=2!=(HEAPU16[(j|0)>>1]&65535|0)?7:8;break;case 7:_CloseStringSource(e,STRING_TABLE.__str3329|0);d=_EnvAddSymbol(e,STRING_TABLE.__str43333|0);HEAP32[(g+8|0)>>2]=d;d=1;b=22;break;case 8:i=HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2];_EnvAddRouter(e,STRING_TABLE.__str53334|0,40,1348,1350,0,0,0);b=0!=(_FindConstruct(e,i)|0)?9:17;break;case 9:HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+168|0)>>2]+52|0)>>2]=1;l=_ParseConstruct(e,i,STRING_TABLE.__str3329|0)&65535;_GetToken(e,STRING_TABLE.__str3329|0,j);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+168|0)>>2]+52|0)>>2]=0;b=0!=l<<16>>16?10:11;break;case 10:_EnvPrintRouter(e,STRING_TABLE.__str63335|0,STRING_TABLE.__str73336|0);b=e;var m=_GetPPBuffer(e);_PrintInChunks(b,STRING_TABLE.__str63335|0,m);_EnvPrintRouter(e,STRING_TABLE.__str63335|0,STRING_TABLE.__str83337|0);b=11;break;case 11:_DestroyPPBuffer(e);_CloseStringSource(e,STRING_TABLE.__str3329|
0);b=0!=(l<<16>>16|0)?13:12;break;case 12:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+44|0)>>2]+12|0)>>2]|0)?13:14;break;case 13:_SetErrorCaptureValues(e,g);_DeactivateErrorCapture(e);d=1;b=22;break;case 14:b=172!=(HEAPU16[(j|0)>>1]&65535|0)?15:16;break;case 15:d=_EnvAddSymbol(e,STRING_TABLE.__str93338|0);HEAP32[(g+8|0)>>2]=d;_DeactivateErrorCapture(e);d=1;b=22;break;case 16:HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_DeactivateErrorCapture(e);d=
0;b=22;break;case 17:k=_Function2Parse(e,STRING_TABLE.__str3329|0,i);_GetToken(e,STRING_TABLE.__str3329|0,j);_ClearParsedBindNames(e);_CloseStringSource(e,STRING_TABLE.__str3329|0);b=0==(k|0)?18:19;break;case 18:_SetErrorCaptureValues(e,g);_DeactivateErrorCapture(e);d=1;b=22;break;case 19:b=172!=(HEAPU16[(j|0)>>1]&65535|0)?20:21;break;case 20:d=_EnvAddSymbol(e,STRING_TABLE.__str93338|0);HEAP32[(g+8|0)>>2]=d;_DeactivateErrorCapture(e);_ReturnExpression(e,k);d=1;b=22;break;case 21:_DeactivateErrorCapture(e);
_ReturnExpression(e,k);HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];d=0;b=22;break;case 22:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_CheckSyntax.X=1;
function _FindErrorCapture(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=0==(_strcmp(b,STRING_TABLE.__str63335|0)|0)?4:3;break;case 3:c=0==(_strcmp(b,STRING_TABLE.__str103339|0)|0)?4:5;break;case 4:a=1;c=6;break;case 5:a=0;c=6;break;case 6:return a;default:assert(0,"bad label: "+c)}}
function _PrintErrorCapture(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(_strcmp(d,STRING_TABLE.__str63335|0)|0)?3:4;break;case 3:a=_AppendToString(b,e,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]|0)>>2],HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]+4|0,HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]+8|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]|0)>>2]=a;a=7;break;case 4:a=0==(_strcmp(d,STRING_TABLE.__str103339|0)|0)?5:6;break;case 5:a=_AppendToString(b,e,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+44|0)>>2]+12|0)>>2],HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]+16|0,HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]+20|0);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+44|0)>>2]+12|0)>>2]=a;a=6;break;case 6:a=7;break;case 7:return 1;default:assert(0,"bad label: "+a)}}_PrintErrorCapture.X=1;
function _DeallocatePatternData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+76|0)>>2]+40|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+76|0)>>2]|0)>>2];f=6;break;case 6:f=0!=(b|0)?7:8;break;case 7:f=HEAP32[(b+92|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+384|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>
2]+16|0)>>2];b=f;f=6;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocatePatternData.X=1;
function _SetErrorCaptureValues(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=_EnvCreateMultifield(a,2);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+44|0)>>2]|0)>>2]|0)?3:4;break;case 3:HEAP16[(d+16|0)>>1]=3;c=_EnvAddSymbol(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+44|0)>>2]|0)>>2]);HEAP32[((d+16|0)+4|0)>>2]=c;c=5;break;case 4:HEAP16[(d+16|0)>>1]=2;HEAP32[((d+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=5;break;case 5:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+44|0)>>
2]+12|0)>>2]|0)?6:7;break;case 6:HEAP16[((d+16|0)+8|0)>>1]=3;c=_EnvAddSymbol(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+44|0)>>2]+12|0)>>2]);HEAP32[(((d+16|0)+8|0)+4|0)>>2]=c;c=8;break;case 7:HEAP16[((d+16|0)+8|0)>>1]=2;HEAP32[(((d+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=8;break;case 8:HEAP16[(b+4|0)>>1]=4;HEAP32[(b+12|0)>>2]=0;HEAP32[(b+16|0)>>2]=1;HEAP32[(b+8|0)>>2]=d;return;default:assert(0,"bad label: "+c)}}_SetErrorCaptureValues.X=1;
function _DeactivateErrorCapture(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]|0)>>2]=0;f=4;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+12|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+44|0)>>2]+20|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+12|0)>>2]=0;f=6;break;case 6:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+44|0)>>2]+20|0)>>2]=0;_EnvDeleteRouter(c,STRING_TABLE.__str53334|0);return;default:assert(0,"bad label: "+f)}}_DeactivateErrorCapture.X=1;
function _InitializePatterns(h){_AllocateEnvironmentData(h,19,60,1352)}
function _AddReservedPatternSymbol(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var g=_genalloc(b,12);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|
0)>>2]|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:h=g;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=e;HEAP32[(h+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+40|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+40|0)>>2]=h;return;default:assert(0,"bad label: "+a)}}_AddReservedPatternSymbol.X=1;
function _ReservedPatternSymbol(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;a=h;d=f;e=c;g=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+76|0)>>2]+40|0)>>2];a=3;break;case 3:a=0!=(g|0)?4:13;break;case 4:a=0==(_strcmp(d,HEAP32[(g|0)>>2])|0)?5:11;break;case 5:a=0==(HEAP32[(g+4|0)>>2]|0)?7:6;break;case 6:a=0==(e|0)?7:8;break;case 7:b=1;a=14;break;case 8:a=0==(_strcmp(e,HEAP32[(g+4|0)>>2])|0)?9:10;break;case 9:b=0;a=14;break;case 10:b=1;a=14;break;case 11:a=12;break;case 12:g=HEAP32[(g+8|0)>>2];a=3;break;
case 13:b=0;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}_ReservedPatternSymbol.X=1;
function _ReservedPatternSymbolErrorMsg(h,f,c){_PrintErrorID(h,STRING_TABLE.__str3340|0,1,1);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,STRING_TABLE.__str23342|0);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,f);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,STRING_TABLE.__str33343|0);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,STRING_TABLE.__str43344|0);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,c);_EnvPrintRouter(h,STRING_TABLE.__str13341|0,STRING_TABLE.__str53345|0)}
function _GetNextPatternEntity(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(HEAP32[d>>2]|0)?3:4;break;case 3:HEAP32[d>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]|0)>>2];HEAP32[e>>2]=0;a=10;break;case 4:a=0!=(e|0)?5:8;break;case 5:a=FUNCTION_TABLE[HEAP32[((HEAP32[(HEAP32[d>>2]+4|0)>>2]|0)+24|0)>>2]](b,HEAP32[e>>2]);HEAP32[e>>2]=a;a=0!=(HEAP32[e>>2]|0)?6:7;break;case 6:a=18;break;case 7:HEAP32[d>>2]=HEAP32[(HEAP32[d>>2]+92|0)>>2];a=9;break;case 8:_SystemError(b,STRING_TABLE.__str3340|
0,1);_EnvExitRouter(b,1);a=9;break;case 9:a=10;break;case 10:a=11;break;case 11:if(0==(HEAP32[e>>2]|0))a=12;else{var g=0;a=13}break;case 12:g=0!=(HEAP32[d>>2]|0);a=13;break;case 13:a=g?14:17;break;case 14:a=FUNCTION_TABLE[HEAP32[((HEAP32[(HEAP32[d>>2]+4|0)>>2]|0)+24|0)>>2]](b,HEAP32[e>>2]);HEAP32[e>>2]=a;a=0!=(HEAP32[e>>2]|0)?15:16;break;case 15:a=18;break;case 16:HEAP32[d>>2]=HEAP32[(HEAP32[d>>2]+92|0)>>2];a=11;break;case 17:a=18;break;case 18:return;default:assert(0,"bad label: "+a)}}
_GetNextPatternEntity.X=1;function _DetachPattern(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0!=(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+4|0)+(d<<2)|0)>>2]|0)?3:4;break;case 3:_FlushAlphaBetaMemory(b,HEAP32[(e|0)>>2]);FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+4|0)+(d<<2)|0)>>2]+28|0)>>2]](b,e);a=4;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _AddPatternParser(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=0;c=8<=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+36|0)>>2]|0)?3:4;break;case 3:a=0;c=16;break;case 4:HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+36|0)>>2];HEAP32[((HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+4|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+36|0)>>2]<<2)|0)>>2]=d;c=HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]+36|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+76|0)>>2]|0)>>2]|0)?5:6;break;case 5:HEAP32[(d+92|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]|0)>>2]=d;a=1;c=16;break;case 6:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]|0)>>2];c=7;break;case 7:c=0!=(e|0)?8:9;break;case 8:var i=(HEAP32[(d+88|0)>>2]|0)<(HEAP32[(e+88|0)>>2]|0)&1;c=10;break;case 9:i=0;c=10;break;case 10:c=0!=(i|0)?11:12;break;case 11:g=e;e=HEAP32[(e+92|0)>>2];c=7;break;case 12:c=0==(g|0)?13:14;break;case 13:HEAP32[(d+92|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+
76|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]|0)>>2]=d;c=15;break;case 14:HEAP32[(d+92|0)>>2]=e;HEAP32[(g+92|0)>>2]=d;c=15;break;case 15:a=1;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_AddPatternParser.X=1;function _GetPatternParser(h,f){return HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+76|0)>>2]+4|0)+(f<<2)|0)>>2]}
function _FindPatternParser(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+76|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+92|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _PatternNodeHeaderToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;_fprintf(i,STRING_TABLE.__str63346|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=0==(HEAP32[(j+8|0)>>2]|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str73347|0,(tempInt=STACKTOP,STACKTOP+=
1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];var m=k,n=((HEAP32[(HEAP32[(j+8|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[(HEAP32[(j+8|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str83348|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>
2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:h=HEAP32[(j+12|0)>>2]&1;f=HEAPU32[(j+12|0)>>2]>>>1&1;c=HEAPU32[(j+12|0)>>2]>>>2&1;a=HEAPU32[(j+12|0)>>2]>>>5&1;j=HEAPU32[(j+12|0)>>2]>>>6&1;_fprintf(i,STRING_TABLE.__str93349|0,(tempInt=STACKTOP,STACKTOP+=20,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=f,HEAP32[tempInt+8>>2]=c,HEAP32[tempInt+12>>2]=a,HEAP32[tempInt+16>>2]=j,tempInt));STACKTOP=d;return;default:assert(0,
"bad label: "+e)}}_PatternNodeHeaderToCode.X=1;
function _PostPatternAnalysis(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=3;break;case 3:c=0!=(d|0)?4:13;break;case 4:c=150==(HEAPU16[(d|0)>>1]&65535|0)?5:11;break;case 5:c=0!=(HEAP32[(d+28|0)>>2]|0)?6:11;break;case 6:e=HEAP32[(d+28|0)>>2];c=0!=(HEAP32[(e+20|0)>>2]|0)?7:10;break;case 7:c=0!=(FUNCTION_TABLE[HEAP32[(e+20|0)>>2]](b,d)|0)?8:9;break;case 8:a=1;c=14;break;case 9:c=10;break;case 10:c=11;break;case 11:c=12;break;case 12:d=HEAP32[(d+68|0)>>2];c=3;break;case 13:a=0;c=14;break;
case 14:return a;default:assert(0,"bad label: "+c)}}_PostPatternAnalysis.X=1;
function _RestrictionParse(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A=i,z;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;x=w=u=t=0;y=s;HEAP32[A>>2]=0;j=3;break;case 3:j=171!=(HEAPU16[(n|0)>>1]&65535|0)?4:29;break;case 4:j=37==(HEAPU16[(n|0)>>1]&65535|0)?6:5;break;case 5:j=38==(HEAPU16[(n|0)>>1]&65535|0)?6:7;break;case 6:v=_GetLHSParseNode(l);HEAP16[(v|0)>>
1]=HEAP16[(n|0)>>1];j=v+8|0;HEAP32[j>>2]&=-2;_GetToken(l,m,n);j=10;break;case 7:v=_ConjuctiveRestrictionParse(l,m,n,A);j=0==(v|0)?8:9;break;case 8:_ReturnLHSParseNodes(l,t);k=0;j=53;break;case 9:j=10;break;case 10:j=171!=(HEAPU16[(n|0)>>1]&65535|0)?11:13;break;case 11:j=1==(o|0)?12:13;break;case 12:_PPBackup(l);_SavePPBuffer(l,STRING_TABLE.__str103350|0);_SavePPBuffer(l,HEAP32[(n+8|0)>>2]);j=13;break;case 13:j=37==(HEAPU16[(v|0)>>1]&65535|0)?15:14;break;case 14:j=35==(HEAPU16[(v|0)>>1]&65535|0)?15:
16;break;case 15:w=w+1|0;j=17;break;case 16:x=x+1|0;j=17;break;case 17:HEAP32[(v+36|0)>>2]=p;HEAP16[(v+40|0)>>1]=q;j=s;s=j+1&65535;HEAP16[(v+34|0)>>1]=j;j=0!=(o|0)?25:18;break;case 18:j=0==(r|0)?19:23;break;case 19:j=35==(HEAPU16[(v|0)>>1]&65535|0)?20:21;break;case 20:j=_GetConstraintRecord(l);HEAP32[(v+20|0)>>2]=j;j=22;break;case 21:HEAP32[(v+20|0)>>2]=0;j=22;break;case 22:j=24;break;case 23:HEAP32[(v+20|0)>>2]=r;j=24;break;case 24:k=v;j=53;break;case 25:j=0==(u|0)?26:27;break;case 26:t=v;j=28;break;
case 27:HEAP32[(u+64|0)>>2]=v;j=28;break;case 28:u=v;j=3;break;case 29:j=0==(t|0)?30:32;break;case 30:j=0!=(o|0)?32:31;break;case 31:_SyntaxErrorMessage(l,STRING_TABLE.__str113351|0);k=0;j=53;break;case 32:v=t;j=33;break;case 33:j=0!=(v|0)?34:50;break;case 34:j=0==(r|0)?35:39;break;case 35:j=35==(HEAPU16[(v|0)>>1]&65535|0)?36:37;break;case 36:j=_GetConstraintRecord(l);HEAP32[(v+20|0)>>2]=j;j=38;break;case 37:j=49;break;case 38:j=40;break;case 39:j=_CopyConstraintRecord(l,r);HEAP32[(v+20|0)>>2]=j;
j=40;break;case 40:_ReturnExpression(l,HEAP32[(HEAP32[(v+20|0)>>2]+24|0)>>2]);_ReturnExpression(l,HEAP32[(HEAP32[(v+20|0)>>2]+28|0)>>2]);j=_GenConstant(l,2,HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+196|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(v+20|0)>>2]+24|0)>>2]=j;j=_GenConstant(l,2,HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+196|0)>>2]+8|0)>>2]);HEAP32[(HEAP32[(v+20|0)>>2]+28|0)>>2]=j;j=v+8|0;HEAP32[j>>2]=HEAP32[j>>2]&-17|16;j=38!=(HEAPU16[(v|0)>>1]&65535|0)?41:43;break;case 41:j=36!=(HEAPU16[(v|0)>>1]&65535|0)?42:
43;break;case 42:j=49;break;case 43:z=_GetConstraintRecord(l);_SetConstraintType(4,z);j=z;HEAP32[j>>2]&=-262145;HEAP32[(z+32|0)>>2]=HEAP32[(v+20|0)>>2];HEAP32[(v+20|0)>>2]=z;j=(HEAP32[(HEAP32[(r+28|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?44:45;break;case 44:_ReturnExpression(l,HEAP32[(z+28|0)>>2]);j=l;var B=_EnvAddLong(l,HEAP32[(HEAP32[(HEAP32[(r+28|0)>>2]+4|0)>>2]+16|0)>>2]-w|0);j=_GenConstant(j,1,B);HEAP32[(z+28|0)>>2]=j;j=45;break;case 45:j=1==(x|0)?46:48;
break;case 46:j=(HEAP32[(HEAP32[(r+24|0)>>2]+4|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?47:48;break;case 47:_ReturnExpression(l,HEAP32[(z+24|0)>>2]);j=l;B=_EnvAddLong(l,HEAP32[(HEAP32[(HEAP32[(r+24|0)>>2]+4|0)>>2]+16|0)>>2]-w|0);j=_GenConstant(j,1,B);HEAP32[(z+24|0)>>2]=j;j=48;break;case 48:j=49;break;case 49:v=HEAP32[(v+64|0)>>2];j=33;break;case 50:j=0!=(o|0)?51:52;break;case 51:v=_GetLHSParseNode(l);HEAP16[(v|0)>>1]=38;j=v+8|0;HEAP32[j>>2]=HEAP32[j>>2]&-5|4;HEAP32[(v+
68|0)>>2]=t;HEAP32[(v+36|0)>>2]=p;HEAP16[(v+40|0)>>1]=q;HEAP16[(v+34|0)>>1]=y;HEAP32[(v+20|0)>>2]=r;t=v;_TallyFieldTypes(HEAP32[(t+68|0)>>2]);j=52;break;case 52:k=t;j=53;break;case 53:return h=k,STACKTOP=i,h;default:assert(0,"bad label: "+j)}}_RestrictionParse.X=1;
function _TallyFieldTypes(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j;c=h;j=i=g=e=0;a=c;f=3;break;case 3:f=0!=(a|0)?4:10;break;case 4:f=35==(HEAPU16[(a|0)>>1]&65535|0)?6:5;break;case 5:f=37==(HEAPU16[(a|0)>>1]&65535|0)?6:7;break;case 6:e=e+1&65535;f=8;break;case 7:g=g+1&65535;f=8;break;case 8:f=9;break;case 9:a=HEAP32[(a+64|0)>>2];f=3;break;case 10:a=c;f=11;break;case 11:f=0!=(a|0)?12:30;break;case 12:HEAP16[(a+14|0)>>1]=i;HEAP16[(a+10|0)>>1]=j;f=a+8|0;HEAP32[f>>2]=HEAP32[f>>2]&-16385|
16384;f=35==(HEAPU16[(a|0)>>1]&65535|0)?14:13;break;case 13:f=37==(HEAPU16[(a|0)>>1]&65535|0)?14:15;break;case 14:HEAP16[(a+16|0)>>1]=((e&65535)-((i&65535)+1|0)|0)&65535;HEAP16[(a+12|0)>>1]=((g&65535)-(j&65535)|0)&65535;f=16;break;case 15:HEAP16[(a+16|0)>>1]=((e&65535)-(i&65535)|0)&65535;HEAP16[(a+12|0)>>1]=((g&65535)-((j&65535)+1|0)|0)&65535;f=16;break;case 16:b=HEAP32[(a+68|0)>>2];f=17;break;case 17:f=0!=(b|0)?18:24;break;case 18:d=b;f=19;break;case 19:f=0!=(d|0)?20:22;break;case 20:HEAP16[(d+14|
0)>>1]=HEAP16[(a+14|0)>>1];HEAP16[(d+16|0)>>1]=HEAP16[(a+16|0)>>1];HEAP16[(d+10|0)>>1]=HEAP16[(a+10|0)>>1];HEAP16[(d+12|0)>>1]=HEAP16[(a+12|0)>>1];f=d+8|0;HEAP32[f>>2]=HEAP32[f>>2]&-16385|16384;f=21;break;case 21:d=HEAP32[(d+64|0)>>2];f=19;break;case 22:f=23;break;case 23:b=HEAP32[(b+68|0)>>2];f=17;break;case 24:f=35==(HEAPU16[(a|0)>>1]&65535|0)?26:25;break;case 25:f=37==(HEAPU16[(a|0)>>1]&65535|0)?26:27;break;case 26:i=i+1&65535;f=28;break;case 27:j=j+1&65535;f=28;break;case 28:f=29;break;case 29:a=
HEAP32[(a+64|0)>>2];f=11;break;case 30:return;default:assert(0,"bad label: "+f)}}_TallyFieldTypes.X=1;
function _ConjuctiveRestrictionParse(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;l=_LiteralRestrictionParse(e,g,i,j);b=1==(HEAP32[j>>2]|0)?3:4;break;case 3:d=0;b=35;break;case 4:_GetToken(e,g,i);b=35==(HEAPU16[(l|0)>>1]&65535|0)?6:5;break;case 5:b=36==(HEAPU16[(l|0)>>1]&65535|0)?6:9;break;case 6:b=0==(HEAP32[(l+8|0)>>2]&1|0)?7:9;break;case 7:b=162!=(HEAPU16[(i|0)>>1]&65535|0)?8:9;break;case 8:k=l+8|0;HEAP32[k>>2]=HEAP32[k>>2]&-9|8;k=l;n=m=0;b=13;break;case 9:k=
_GetLHSParseNode(e);b=36==(HEAPU16[(l|0)>>1]&65535|0)?10:11;break;case 10:HEAP16[(k|0)>>1]=38;b=12;break;case 11:HEAP16[(k|0)>>1]=37;b=12;break;case 12:b=k+8|0;HEAP32[b>>2]&=-2;n=m=HEAP32[(k+68|0)>>2]=l;b=13;break;case 13:b=14;break;case 14:if(162==(HEAPU16[(i|0)>>1]&65535|0)){var p=1;b=16}else b=15;break;case 15:p=161==(HEAPU16[(i|0)>>1]&65535|0);b=16;break;case 16:b=p?17:32;break;case 17:o=HEAPU16[(i|0)>>1]&65535;_GetToken(e,g,i);l=_LiteralRestrictionParse(e,g,i,j);b=1==(HEAP32[j>>2]|0)?18:19;break;
case 18:_ReturnLHSParseNodes(e,k);d=0;b=35;break;case 19:b=162==(o|0)?20:24;break;case 20:b=0==(m|0)?21:22;break;case 21:HEAP32[(k+68|0)>>2]=l;b=23;break;case 22:HEAP32[(m+68|0)>>2]=l;b=23;break;case 23:n=m=l;b=31;break;case 24:b=161==(o|0)?25:29;break;case 25:b=0==(n|0)?26:27;break;case 26:m=HEAP32[(k+68|0)>>2]=l;b=28;break;case 27:HEAP32[(n+64|0)>>2]=l;b=28;break;case 28:n=l;b=30;break;case 29:_SystemError(e,STRING_TABLE.__str123352|0,1);_EnvExitRouter(e,1);b=30;break;case 30:b=31;break;case 31:_GetToken(e,
g,i);b=14;break;case 32:b=0!=(_CheckForVariableMixing(e,k)|0)?33:34;break;case 33:HEAP32[j>>2]=1;_ReturnLHSParseNodes(e,k);d=0;b=35;break;case 34:d=k;b=35;break;case 35:return d;default:assert(0,"bad label: "+b)}}_ConjuctiveRestrictionParse.X=1;
function _LiteralRestrictionParse(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;k=_GetLHSParseNode(e);b=160==(HEAPU16[(i|0)>>1]&65535|0)?3:4;break;case 3:_GetToken(e,g,i);b=k+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=5;break;case 4:b=k+8|0;HEAP32[b>>2]&=-2;b=5;break;case 5:HEAP16[(k|0)>>1]=HEAP16[(i|0)>>1];b=2==(HEAPU16[(i|0)>>1]&65535|0)?6:17;break;case 6:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str143354|0)|0)?7:10;break;case 7:l=_Function0Parse(e,
g);b=0==(l|0)?8:9;break;case 8:HEAP32[j>>2]=1;_ReturnLHSParseNodes(e,k);d=0;b=27;break;case 9:HEAP16[(k|0)>>1]=164;b=_ExpressionToLHSParseNodes(e,l);HEAP32[(k+56|0)>>2]=b;_ReturnExpression(e,l);b=16;break;case 10:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str153355|0)|0)?11:14;break;case 11:l=_Function0Parse(e,g);b=0==(l|0)?12:13;break;case 12:HEAP32[j>>2]=1;_ReturnLHSParseNodes(e,k);d=0;b=27;break;case 13:HEAP16[(k|0)>>1]=163;b=_ExpressionToLHSParseNodes(e,l);HEAP32[(k+56|
0)>>2]=b;_ReturnExpression(e,l);b=15;break;case 14:HEAP32[(k+4|0)>>2]=HEAP32[(i+4|0)>>2];b=15;break;case 15:b=16;break;case 16:b=26;break;case 17:b=35==(HEAPU16[(i|0)>>1]&65535|0)?23:18;break;case 18:b=36==(HEAPU16[(i|0)>>1]&65535|0)?23:19;break;case 19:b=0==(HEAPU16[(i|0)>>1]&65535|0)?23:20;break;case 20:b=1==(HEAPU16[(i|0)>>1]&65535|0)?23:21;break;case 21:b=3==(HEAPU16[(i|0)>>1]&65535|0)?23:22;break;case 22:b=8==(HEAPU16[(i|0)>>1]&65535|0)?23:24;break;case 23:HEAP32[(k+4|0)>>2]=HEAP32[(i+4|0)>>
2];b=25;break;case 24:_SyntaxErrorMessage(e,STRING_TABLE.__str113351|0);HEAP32[j>>2]=1;_ReturnLHSParseNodes(e,k);d=0;b=27;break;case 25:b=26;break;case 26:d=k;b=27;break;case 27:return d;default:assert(0,"bad label: "+b)}}_LiteralRestrictionParse.X=1;
function _FlushPPBuffer(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]|0)?3:4;break;case 3:f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+20|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+24|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+12|0)>>2]=0;HEAP8[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]|0]=0;f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}_FlushPPBuffer.X=1;
function _PPBackup(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]|0)>>2]|0)?5:3;break;case 3:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]|0)?5:4;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+4|0)>>2]|0)?6:5;break;case 5:f=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+208|0)>>2]+24|0)>>2];HEAP8[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]+HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+12|0)>>2]|0]=0;f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}_PPBackup.X=1;function _GetPPBuffer(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+28|0)>>2]}function _IncrementIndentDepth(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+8|0;HEAP32[c>>2]=HEAP32[c>>2]+f|0}
function _DecrementIndentDepth(h,f){var c=HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+8|0;HEAP32[c>>2]=HEAP32[c>>2]-f|0}function _SetIndentDepth(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+8|0)>>2]=f}
function _CheckForVariableMixing(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m;b=h;d=f;m=l=k=j=i=0;c=35==(HEAPU16[(d|0)>>1]&65535|0)?3:4;break;case 3:j=1;c=7;break;case 4:c=36==(HEAPU16[(d|0)>>1]&65535|0)?5:6;break;case 5:i=1;c=6;break;case 6:c=7;break;case 7:d=HEAP32[(d+68|0)>>2];c=8;break;case 8:c=0!=(d|0)?9:32;break;case 9:e=d;c=10;break;case 10:c=0!=(e|0)?11:30;break;case 11:c=35==(HEAPU16[(e|0)>>1]&65535|0)?12:13;break;case 12:j=1;c=28;break;case 13:c=36==(HEAPU16[(e|0)>>1]&65535|
0)?14:15;break;case 14:i=1;c=27;break;case 15:c=0!=(_ConstantType(HEAPU16[(e|0)>>1]&65535)|0)?16:17;break;case 16:k=1;c=26;break;case 17:c=164==(HEAPU16[(e|0)>>1]&65535|0)?18:25;break;case 18:g=_FunctionCallToConstraintRecord(b,HEAP32[(HEAP32[(e+56|0)>>2]+4|0)>>2]);c=0!=(HEAP32[g>>2]&1|0)?19:20;break;case 19:c=24;break;case 20:c=0!=(HEAPU32[g>>2]>>>17&1|0)?21:22;break;case 21:m=1;c=23;break;case 22:l=1;c=23;break;case 23:c=24;break;case 24:_RemoveConstraint(b,g);c=25;break;case 25:c=26;break;case 26:c=
27;break;case 27:c=28;break;case 28:c=29;break;case 29:e=HEAP32[(e+64|0)>>2];c=10;break;case 30:c=31;break;case 31:d=HEAP32[(d+68|0)>>2];c=8;break;case 32:c=0!=(j|0)?35:33;break;case 33:c=0!=(k|0)?35:34;break;case 34:c=0!=(l|0)?35:38;break;case 35:c=0!=(i|0)?37:36;break;case 36:c=0!=(m|0)?37:38;break;case 37:_PrintErrorID(b,STRING_TABLE.__str3340|0,2,1);_EnvPrintRouter(b,STRING_TABLE.__str13341|0,STRING_TABLE.__str133353|0);a=1;c=39;break;case 38:a=0;c=39;break;case 39:return a;default:assert(0,"bad label: "+
c)}}_CheckForVariableMixing.X=1;function _InitializePrettyPrintData(h){_AllocateEnvironmentData(h,52,32,1354);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+4|0)>>2]=1}
function _DeallocatePrettyPrintData(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+16|0)>>2]);f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}
function _DestroyPPBuffer(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+20|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+24|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+12|0)>>2]=0;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+16|0)>>2]);f=4;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>
2]+208|0)>>2]+28|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+208|0)>>2]+16|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}_DestroyPPBuffer.X=1;
function _SavePPBuffer(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]|0)>>2]|0)?4:3;break;case 3:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+4|0)>>2]|0)?5:4;break;case 4:c=14;break;case 5:e=512;c=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2]|0)>(e|0)?6:9;break;case 6:e=3*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2]|0;c=0>(e|0)?7:8;break;case 7:e=512;c=8;break;case 8:c=9;break;case 9:c=d=_strlen(b);c=c+
((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2]+e|0)+1|0)|0;d=d+((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2]+e|0)+1|0)|0;c=(d|0)!=(c|0)?10:11;break;case 10:c=14;break;case 11:c=((_strlen(b)+HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2]|0)+1|0)>=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+16|0)>>2]|0)?12:13;break;case 12:c=_genrealloc(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+208|0)>>2]+16|0)>>2]+e|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+28|0)>>2]=c;c=HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+16|0;HEAP32[c>>2]=HEAP32[c>>2]+e|0;c=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+12|0)>>2];c=_AppendToString(a,b,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+28|0)>>2],HEAP32[(HEAP32[(a+
16|0)>>2]+208|0)>>2]+12|0,HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+16|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+28|0)>>2]=c;c=14;break;case 14:return;default:assert(0,"bad label: "+c)}}_SavePPBuffer.X=1;function _CopyPPBuffer(h){var f;f=_strlen(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+28|0)>>2])+1|0;f=_gm2(h,f);_strcpy(f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+28|0)>>2]);return f}
function _PPCRAndIndent(h){var f=STACKTOP;STACKTOP+=120;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;a=h;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]|0)>>2]|0)?4:3;break;case 3:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+4|0)>>2]|0)?5:4;break;case 4:c=10;break;case 5:HEAP8[d|0]=10;b=1;c=6;break;case 6:c=(b|0)<=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+208|0)>>2]+8|0)>>2]|0)?7:9;break;case 7:HEAP8[d+
b|0]=32;c=8;break;case 8:b=b+1|0;c=6;break;case 9:HEAP8[d+b|0]=0;_SavePPBuffer(a,d|0);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_PPCRAndIndent.X=1;function _SetPPBufferStatus(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]|0)>>2]=f}function _GetPPBufferStatus(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]|0)>>2]}
function _SetPPBufferEnabled(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+4|0)>>2]=f;return c}function _GetPPBufferEnabled(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+208|0)>>2]+4|0)>>2]}
function _RtnProcParam(h,f,c){h=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*(HEAP32[HEAP32[(f+16|0)>>2]>>2]-1|0)|0;HEAP16[(c+4|0)>>1]=HEAP16[(h+4|0)>>1];HEAP32[(c+8|0)>>2]=HEAP32[(h+8|0)>>2];HEAP32[(c+12|0)>>2]=HEAP32[(h+12|0)>>2];HEAP32[(c+16|0)>>2]=HEAP32[(h+16|0)>>2];return 1}_RtnProcParam.X=1;
function _InstallProcedurePrimitives(h){var f=STACKTOP;STACKTOP+=224;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c=f+56,a=f+112,b=f+168;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var d=_InstallProcedurePrimitives_procParameterInfo>>2,e=f>>2,g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=_InstallProcedurePrimitives_procWildInfo>>
2;e=c>>2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=_InstallProcedurePrimitives_procGetInfo>>2;e=a>>2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=_InstallProcedurePrimitives_procBindInfo>>2;e=b>>2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];_AllocateEnvironmentData(h,37,264,1356);e=HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+36|
0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=f>>2;e>>=2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];e=HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+92|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=c>>2;e>>=2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];c=HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+148|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=a>>2;e=c>>2;for(g=d+14;d<g;d++,
e++)HEAP32[e]=HEAP32[d];a=HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+204|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");d=b>>2;e=a>>2;for(g=d+14;d<g;d++,e++)HEAP32[e]=HEAP32[d];_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+36|0,95);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+92|0,96);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+148|0,97);_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]+204|0,98);HEAP32[(HEAP32[(HEAP32[(h+
16|0)>>2]+148|0)>>2]+260|0)>>2]=-1;b=_CreateMultifield2(h,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]|0)>>2]=b;_MultifieldInstall(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]|0)>>2]);STACKTOP=f}_InstallProcedurePrimitives.X=1;function _RtnProcWild(h,f,c){_GrabProcWildargs(h,c,HEAP32[HEAP32[(f+16|0)>>2]>>2]);return 1}
function _GetProcBind(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;a=f;e=c;i=HEAP32[(a+16|0)>>2];g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+28|0)>>2]+24*((HEAPU32[i>>2]>>>1&32767)-1|0)|0;a=(HEAP32[(g|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]|0)>>2]|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(e+12|0)>>2]=HEAP32[(g+12|0)>>2];HEAP32[(e+16|0)>>2]=HEAP32[(g+16|0)>>2];b=1;a=15;break;case 4:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:_EvaluateExpression(d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],e);b=1;a=15;break;case 6:a=0==(HEAPU32[i>>2]>>>17&32767|0)?7:11;break;case 7:_PrintErrorID(d,STRING_TABLE.__str53401|0,5,0);_SetEvaluationError(d,1);_EnvPrintRouter(d,STRING_TABLE.__str63402|0,STRING_TABLE.__str183414|0);_EnvPrintRouter(d,STRING_TABLE.__str63402|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2]);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+32|0)>>2]|0)?8:9;break;case 8:_EnvPrintRouter(d,STRING_TABLE.__str63402|0,STRING_TABLE.__str193415|0);FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+32|0)>>2]](d);a=10;break;case 9:_EnvPrintRouter(d,STRING_TABLE.__str63402|0,STRING_TABLE.__str203416|0);a=10;break;case 10:HEAP16[(e+4|0)>>1]=2;HEAP32[(e+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];b=1;a=15;break;case 11:a=
0==(HEAPU32[i>>2]>>>16&1|0)?12:13;break;case 12:g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*((HEAPU32[i>>2]>>>17&32767)-1|0)|0;HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(e+12|0)>>2]=HEAP32[(g+12|0)>>2];HEAP32[(e+16|0)>>2]=HEAP32[(g+16|0)>>2];a=14;break;case 13:_GrabProcWildargs(d,e,HEAPU32[i>>2]>>>17&32767);a=14;break;case 14:b=1;a=15;break;case 15:return b;default:assert(0,"bad label: "+a)}}_GetProcBind.X=1;
function _PutProcBind(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;a=f;d=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+28|0)>>2]+24*(HEAP32[HEAP32[(a+16|0)>>2]>>2]-1|0)|0;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)?3:6;break;case 3:a=(HEAP32[(e|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]|0)>>2]|0)?4:5;break;case 4:_ValueDeinstall(b,e);a=5;break;case 5:HEAP32[(e|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP16[(d+
4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=12;break;case 6:a=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?7:8;break;case 7:_StoreInMultifield(b,d,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],1);a=9;break;case 8:_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],d);a=9;break;case 9:a=(HEAP32[(e|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>
2]+196|0)>>2]|0)>>2]|0)?10:11;break;case 10:_ValueDeinstall(b,e);a=11;break;case 11:HEAP32[(e|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]|0)>>2];HEAP16[(e+4|0)>>1]=HEAP16[(d+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(d+8|0)>>2];HEAP32[(e+12|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[(e+16|0)>>2]=HEAP32[(d+16|0)>>2];_ValueInstall(b,e);a=12;break;case 12:return 1;default:assert(0,"bad label: "+a)}}_PutProcBind.X=1;
function _DeallocateProceduralPrimitiveData(h){_ReturnMultifield(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+148|0)>>2]|0)>>2])}
function _ParseProcParameters(h,f,c,a,b,d,e,g,i){var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w,x;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;t=i;x=0;HEAP32[p>>2]=0;HEAP32[q>>2]=0;HEAP32[s>>2]=1;u=v=o;j=3;break;case 3:j=0!=(u|0)?4:5;break;case 4:v=q;HEAP32[v>>2]=HEAP32[v>>2]+1|0;v=u;u=HEAP32[(u+12|0)>>2];j=3;break;case 5:j=170!=(HEAPU16[(n|0)>>1]&65535|0)?6:7;break;case 6:_SyntaxErrorMessage(l,STRING_TABLE.__str43400|0);_ReturnExpression(l,o);k=0;j=38;break;case 7:_GetToken(l,m,n);j=8;break;case 8:if(35==
(HEAPU16[(n|0)>>1]&65535|0)){var y=1;j=10}else j=9;break;case 9:y=36==(HEAPU16[(n|0)>>1]&65535|0);j=10;break;case 10:j=y?11:30;break;case 11:w=o;j=12;break;case 12:j=0!=(w|0)?13:17;break;case 13:j=(HEAP32[(w+4|0)>>2]|0)==(HEAP32[(n+4|0)>>2]|0)?14:15;break;case 14:_PrintErrorID(l,STRING_TABLE.__str53401|0,7,0);_EnvPrintRouter(l,STRING_TABLE.__str63402|0,STRING_TABLE.__str73403|0);_ReturnExpression(l,o);k=0;j=38;break;case 15:j=16;break;case 16:w=HEAP32[(w+12|0)>>2];j=12;break;case 17:j=0!=(HEAP32[p>>
2]|0)?18:19;break;case 18:_PrintErrorID(l,STRING_TABLE.__str53401|0,8,0);_EnvPrintRouter(l,STRING_TABLE.__str63402|0,STRING_TABLE.__str83404|0);_ReturnExpression(l,o);k=0;j=38;break;case 19:j=0!=(t|0)?20:21;break;case 20:j=0!=(FUNCTION_TABLE[t](l,HEAP32[(HEAP32[(n+4|0)>>2]+16|0)>>2])|0)?22:23;break;case 21:j=23;break;case 22:_ReturnExpression(l,o);k=0;j=38;break;case 23:u=_GenConstant(l,HEAP16[(n|0)>>1],HEAP32[(n+4|0)>>2]);j=36==(HEAPU16[(n|0)>>1]&65535|0)?24:25;break;case 24:HEAP32[p>>2]=HEAP32[(n+
4|0)>>2];j=26;break;case 25:j=q;HEAP32[j>>2]=HEAP32[j>>2]+1|0;j=26;break;case 26:j=0==(v|0)?27:28;break;case 27:o=u;j=29;break;case 28:HEAP32[(v+12|0)>>2]=u;j=29;break;case 29:v=u;_SavePPBuffer(l,STRING_TABLE.__str93405|0);x=1;_GetToken(l,m,n);j=8;break;case 30:j=171!=(HEAPU16[(n|0)>>1]&65535|0)?31:32;break;case 31:_SyntaxErrorMessage(l,STRING_TABLE.__str43400|0);_ReturnExpression(l,o);k=0;j=38;break;case 32:j=0!=(x|0)?33:34;break;case 33:_PPBackup(l);_PPBackup(l);_SavePPBuffer(l,STRING_TABLE.__str103406|
0);j=34;break;case 34:HEAP32[s>>2]=0;j=0!=(HEAP32[p>>2]|0)?35:36;break;case 35:var A=-1;j=37;break;case 36:A=HEAP32[q>>2];j=37;break;case 37:HEAP32[r>>2]=A;k=o;j=38;break;case 38:return k;default:assert(0,"bad label: "+j)}}_ParseProcParameters.X=1;
function _ParseProcActions(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u;m=h;n=f;o=c;k=a;p=b;q=d;r=e;s=g;t=i;u=j;_ClearParsedBindNames(m);o=_GroupActions(m,o,k,1,0,0);k=0==(o|0)?3:4;break;case 3:l=0;k=11;break;case 4:k=0!=(s|0)?5:8;break;case 5:k=0!=(_ReplaceProcBinds(m,o,s,u)|0)?6:7;break;case 6:_ClearParsedBindNames(m);_ReturnExpression(m,o);l=0;k=11;break;case 7:k=8;break;case 8:k=_CountParsedBindNames(m);HEAP32[t>>2]=k;k=0!=(_ReplaceProcVars(m,n,o,p,q,r,u)|0)?9:
10;break;case 9:_ClearParsedBindNames(m);_ReturnExpression(m,o);l=0;k=11;break;case 10:o=_CompactActions(m,o);l=_PackExpression(m,o);_ReturnExpression(m,o);_ClearParsedBindNames(m);k=11;break;case 11:return l;default:assert(0,"bad label: "+k)}}_ParseProcActions.X=1;
function _ReplaceProcBinds(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=3;break;case 3:b=0!=(g|0)?4:16;break;case 4:b=0!=(HEAP32[(g+8|0)>>2]|0)?5:15;break;case 5:b=0!=(_ReplaceProcBinds(e,HEAP32[(g+8|0)>>2],i,j)|0)?6:7;break;case 6:d=1;b=17;break;case 7:b=HEAP32[(g+4|0)>>2];var m=_FindFunction(e,STRING_TABLE.__str143410|0);b=(b|0)==(m|0)?8:14;break;case 8:b=2==(HEAPU16[(HEAP32[(g+8|0)>>2]|0)>>1]&65535|0)?9:14;break;case 9:l=HEAP32[(HEAP32[(g+8|0)>>2]+4|0)>>2];k=FUNCTION_TABLE[i](e,
g,j);b=-1==(k|0)?10:11;break;case 10:d=1;b=17;break;case 11:b=1==(k|0)?12:13;break;case 12:_RemoveParsedBindName(e,l);b=13;break;case 13:b=14;break;case 14:b=15;break;case 15:g=HEAP32[(g+12|0)>>2];b=3;break;case 16:d=0;b=17;break;case 17:return d;default:assert(0,"bad label: "+b)}}_ReplaceProcBinds.X=1;
function _CompactActions(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[(b+8|0)>>2]|0)?3:4;break;case 3:HEAP16[(b|0)>>1]=2;HEAP32[(b+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=7;break;case 4:c=0==(HEAP32[(HEAP32[(b+8|0)>>2]+12|0)>>2]|0)?5:6;break;case 5:c=b;b=HEAP32[(b+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=c;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|
0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=6;break;case 6:c=7;break;case 7:return b;default:assert(0,"bad label: "+c)}}_CompactActions.X=1;
function _FindProcParameter(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=1;a=3;break;case 3:a=0!=(e|0)?4:7;break;case 4:a=(HEAP32[(e+4|0)>>2]|0)==(d|0)?5:6;break;case 5:b=i;a=10;break;case 6:i=i+1|0;e=HEAP32[(e+12|0)>>2];a=3;break;case 7:a=(d|0)==(g|0)?8:9;break;case 8:b=i;a=10;break;case 9:b=0;a=10;break;case 10:return b;default:assert(0,"bad label: "+a)}}
function _ReplaceProcVars(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r=g,s,t=g+4,u,v,w=g+8;k=h;l=f;m=c;n=a;o=b;p=d;q=e;i=3;break;case 3:i=0!=(m|0)?4:43;break;case 4:i=35==(HEAPU16[(m|0)>>1]&65535|0)?5:26;break;case 5:v=HEAP32[(m+4|0)>>2];i=_FindProcParameter(v,n,o);HEAP32[r>>2]=i;i=_SearchParsedBindNames(k,v);HEAP32[t>>2]=i;i=0==(HEAP32[r>>2]|0)?6:12;break;
case 6:i=0==(HEAP32[t>>2]|0)?7:12;break;case 7:i=0!=(p|0)?8:9;break;case 8:i=1!=(FUNCTION_TABLE[p](k,m,q)|0)?10:11;break;case 9:i=10;break;case 10:_PrintErrorID(k,STRING_TABLE.__str53401|0,3,1);_EnvPrintRouter(k,STRING_TABLE.__str63402|0,STRING_TABLE.__str113407|0);_EnvPrintRouter(k,STRING_TABLE.__str63402|0,HEAP32[(v+16|0)>>2]);_EnvPrintRouter(k,STRING_TABLE.__str63402|0,STRING_TABLE.__str123408|0);_EnvPrintRouter(k,STRING_TABLE.__str63402|0,l);_EnvPrintRouter(k,STRING_TABLE.__str63402|0,STRING_TABLE.__str133409|
0);j=1;i=44;break;case 11:i=25;break;case 12:i=0<(HEAP32[r>>2]|0)?13:15;break;case 13:i=0==(HEAP32[t>>2]|0)?14:15;break;case 14:HEAP16[(m|0)>>1]=((v|0)!=(o|0)?95:96)&65535;i=_AddBitMap(k,r,4);HEAP32[(m+4|0)>>2]=i;i=24;break;case 15:i=0!=(p|0)?16:22;break;case 16:u=_GenConstant(k,HEAP16[(m|0)>>1],HEAP32[(m+4|0)>>2]);s=FUNCTION_TABLE[p](k,u,q);i=0==(s|0)?17:18;break;case 17:HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]=u;HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2];u=0;i=21;break;case 18:i=-1==(s|0)?19:20;break;case 19:HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]=u;HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2];j=1;i=44;break;case 20:i=21;break;case 21:i=23;break;case 22:u=0;i=23;break;case 23:HEAP16[(m|0)>>1]=97;_ClearBitString(w,4);i=w;HEAP32[i>>2]=HEAP32[i>>2]&-65535|(HEAP32[t>>2]&32767)<<1;i=w;HEAP32[i>>2]=HEAP32[i>>2]&131071|(HEAP32[r>>2]&32767)<<17;i=w;HEAP32[i>>2]=HEAP32[i>>2]&-65537|(((v|0)!=(o|0)?0:1)&1)<<16;i=_AddBitMap(k,w,4);HEAP32[(m+4|0)>>2]=i;i=_GenConstant(k,2,v);HEAP32[(m+8|0)>>2]=i;HEAP32[(HEAP32[(m+
8|0)>>2]+12|0)>>2]=u;i=24;break;case 24:i=25;break;case 25:i=31;break;case 26:i=33==(HEAPU16[(m|0)>>1]&65535|0)?27:30;break;case 27:i=0==(_ReplaceGlobalVariable(k,m)|0)?28:29;break;case 28:j=-1;i=44;break;case 29:i=30;break;case 30:i=31;break;case 31:i=0!=(p|0)?32:33;break;case 32:i=-1==(FUNCTION_TABLE[p](k,m,q)|0)?34:35;break;case 33:i=35;break;case 34:j=1;i=44;break;case 35:i=0!=(HEAP32[(m+8|0)>>2]|0)?36:42;break;case 36:i=0!=(_ReplaceProcVars(k,l,HEAP32[(m+8|0)>>2],n,o,p,q)|0)?37:38;break;case 37:j=
1;i=44;break;case 38:i=HEAP32[(m+4|0)>>2];var x=_FindFunction(k,STRING_TABLE.__str143410|0);i=(i|0)==(x|0)?39:41;break;case 39:i=2==(HEAPU16[(HEAP32[(m+8|0)>>2]|0)>>1]&65535|0)?40:41;break;case 40:HEAP16[(m|0)>>1]=98;i=_SearchParsedBindNames(k,HEAP32[(HEAP32[(m+8|0)>>2]+4|0)>>2]);HEAP32[t>>2]=i;i=_AddBitMap(k,t,4);HEAP32[(m+4|0)>>2]=i;i=HEAP32[(HEAP32[(m+8|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(m+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>
2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(m+8|0)>>2]=i;i=41;break;case 41:i=42;break;case 42:m=HEAP32[(m+12|0)>>2];i=3;break;case 43:j=0;i=44;break;case 44:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_ReplaceProcVars.X=1;
function _GenProcWildcardReference(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=f;var a=_AddBitMap(h,c,4),a=_GenConstant(h,96,a);STACKTOP=c;return a}
function _PushProcParameters(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;m=d;e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?3:4;break;case 3:var o=_genalloc(g,24);e=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|
0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=5;break;case 5:n=o;HEAP32[(n|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+4|0)>>2];HEAP32[(n+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+8|0)>>2];HEAP32[(n+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+32|0)>>2];HEAP32[(n+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+20|0)>>2]=n;_EvaluateProcParameters(g,
i,j,k,l);e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:n=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+20|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=n;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=8;break;case 7:HEAP32[(n+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+16|0)>>2]=0;HEAP32[(n+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+32|0)>>2]=m;e=8;break;case 8:return;default:assert(0,"bad label: "+e)}}
_PushProcParameters.X=1;
function _EvaluateProcParameters(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o;g=h;i=f;j=c;k=a;l=b;o=0;e=0==(j|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+8|0)>>2]=0;e=14;break;case 4:m=_gm2(g,24*j|0);e=5;break;case 5:e=0!=(i|0)?6:13;break;case 6:e=1==(_EvaluateExpression(g,i,n)|0)?
7:8;break;case 7:e=9;break;case 8:e=175==(HEAPU16[(n+4|0)>>1]&65535|0)?9:12;break;case 9:e=175==(HEAPU16[(n+4|0)>>1]&65535|0)?10:11;break;case 10:_PrintErrorID(g,STRING_TABLE.__str53401|0,2,0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str213417|0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,l);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str223418|0);_SetEvaluationError(g,1);e=11;break;case 11:_PrintErrorID(g,STRING_TABLE.__str53401|0,6,0);_EnvPrintRouter(g,STRING_TABLE.__str63402|
0,STRING_TABLE.__str233419|0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str243420|0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,l);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str93405|0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,k);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str133409|0);_rm(g,m,24*j|0);e=14;break;case 12:HEAP16[((m+24*o|0)+4|0)>>1]=HEAP16[(n+4|0)>>1];HEAP32[((m+24*o|0)+8|0)>>2]=HEAP32[(n+8|0)>>2];HEAP32[((m+24*o|0)+12|0)>>2]=HEAP32[(n+
12|0)>>2];HEAP32[((m+24*o|0)+16|0)>>2]=HEAP32[(n+16|0)>>2];i=HEAP32[(i+12|0)>>2];o=o+1|0;e=5;break;case 13:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+8|0)>>2]=j;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+4|0)>>2]=m;e=14;break;case 14:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_EvaluateProcParameters.X=1;
function _PopProcParameters(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+4|0)>>2],24*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+8|0)>>2]|0);f=4;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+16|0)>>2]|0)?5:6;break;case 5:_rm(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+8|0)>>2]<<
4|0);f=6;break;case 6:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+20|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+4|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+8|0)>>2]=HEAP32[(a+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+16|0)>>2]=HEAP32[(a+4|0)>>2];f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2]|0)?
7:10;break;case 7:_MultifieldDeinstall(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);f=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]|0)>>2]|0)?8:9;break;case 8:_AddToMultifieldList(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);f=9;break;case 9:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2];
HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+24|0)>>2]=HEAP32[(a+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+148|0)>>2]+32|0)>>2]=HEAP32[(a+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|
0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+f)}}_PopProcParameters.X=1;
function _GetProcParamExpressions(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]|0)?4:5;break;case 4:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2];f=16;break;case 5:f=_gm2(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]<<4|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]=f;b=0;f=6;break;case 6:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+148|0)>>2]+8|0)>>2]|0)?7:15;break;case 7:HEAP16[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]+(b<<4)|0)>>1]=HEAP16[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*b|0)+4|0)>>1];f=4!=(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*b|0)+4|0)>>1]&65535|0)?8:9;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]+(b<<4)|0)+4|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*b|0)+8|0)>>2];f=10;break;
case 9:HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]+(b<<4)|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*b|0;f=10;break;case 10:HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]+(b<<4)|0)+8|0)>>2]=0;f=(b+1|0)!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)?11:12;break;case 11:var d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2]+((b+1|0)<<4)|0;f=13;break;case 12:d=0;f=13;break;case 13:HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+148|0)>>2]+16|0)>>2]+(b<<4)|0)+12|0)>>2]=d;f=14;break;case 14:b=b+1|0;f=6;break;case 15:c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+16|0)>>2];f=16;break;case 16:return c;default:assert(0,"bad label: "+f)}}_GetProcParamExpressions.X=1;
function _EvaluateProcActions(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;g=h;i=f;j=c;k=a;l=b;m=d;n=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2];e=0==(k|0)?3:4;break;case 3:var r=0;e=5;break;case 4:r=_gm2(g,24*k|0);e=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2]=r;o=0;e=6;break;case 6:e=(o|0)<(k|0)?7:9;break;case 7:HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2]+24*o|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>
2]+4|0)>>2];e=8;break;case 8:o=o+1|0;e=6;break;case 9:p=_EnvGetCurrentModule(g);e=(p|0)!=(i|0)?10:11;break;case 10:_EnvSetCurrentModule(g,i);e=11;break;case 11:q=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+12|0)>>2]=j;e=0!=(_EvaluateExpression(g,j,l)|0)?12:13;break;case 12:HEAP16[(l+4|0)>>1]=2;HEAP32[(l+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2];e=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+12|0)>>
2]=q;e=p;var s=_EnvGetCurrentModule(g);e=(e|0)!=(s|0)?14:15;break;case 14:_EnvSetCurrentModule(g,p);e=15;break;case 15:e=0!=(m|0)?16:17;break;case 16:e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?18:19;break;case 17:e=19;break;case 18:_PrintErrorID(g,STRING_TABLE.__str53401|0,4,0);_EnvPrintRouter(g,STRING_TABLE.__str63402|0,STRING_TABLE.__str153411|0);FUNCTION_TABLE[m](g);e=19;break;case 19:e=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]|0)?20:21;break;case 20:e=
(HEAP32[(l+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]|0)?22:25;break;case 21:e=25;break;case 22:_MultifieldDeinstall(g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);e=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]|0)>>2]|0)?23:24;break;case 23:_AddToMultifieldList(g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);e=24;
break;case 24:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+24|0)>>2]=0;e=25;break;case 25:e=0!=(k|0)?26:33;
break;case 26:o=0;e=27;break;case 27:e=(o|0)<(k|0)?28:32;break;case 28:e=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2]+24*o|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]|0)>>2]|0)?29:30;break;case 29:_ValueDeinstall(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2]+24*o|0);e=30;break;case 30:e=31;break;case 31:o=o+1|0;e=27;break;case 32:_rm(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+148|0)>>2]+28|0)>>2],24*k|0);e=33;break;case 33:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>
2]+148|0)>>2]+28|0)>>2]=n;return;default:assert(0,"bad label: "+e)}}_EvaluateProcActions.X=1;
function _PrintProcParamArray(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;_EnvPrintRouter(a,b,STRING_TABLE.__str163412|0);d=0;c=3;break;case 3:c=(d|0)<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)?4:8;break;case 4:_PrintDataObject(a,b,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*d|0);c=(d|0)!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+148|0)>>2]+8|0)>>2]-1|0)?5:6;break;case 5:_EnvPrintRouter(a,b,STRING_TABLE.__str93405|0);c=6;break;case 6:c=7;break;case 7:d=d+1|0;
c=3;break;case 8:_EnvPrintRouter(a,b,STRING_TABLE.__str173413|0);return;default:assert(0,"bad label: "+c)}}_PrintProcParamArray.X=1;
function _GrabProcWildargs(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;b=h;d=f;e=c;HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]|0)?3:7;break;case 3:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?4:5;break;case 4:var m=_genalloc(b,24);a=6;break;case 5:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=6;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+12|0)>>2]=0;a=13;break;case 7:a=(e|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+260|0)>>2]|0)?8:9;break;case 8:HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>
2]+24|0)>>2]+16|0)>>2];HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2];a=33;break;case 9:_MultifieldDeinstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);a=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]|0)>>2]|0)?10:11;break;case 10:_AddToMultifieldList(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);a=11;break;case 11:a=
12;break;case 12:a=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+260|0)>>2]=e;k=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+8|0)>>2]-e|0)+1|0;a=0>=(k|0)?14:15;break;case 14:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+16|0)>>2]=-1;HEAP32[(d+16|0)>>2]=-1;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]=a;HEAP32[(d+8|0)>>2]=a;_MultifieldInstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);a=33;break;case 15:g=e-1|0;a=16;break;case 16:a=(g|0)<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)?17:21;break;case 17:a=4==(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+4|0)>>1]&65535|0)?18:19;break;case 18:k=k+(HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+16|0)>>2]-HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+12|0)>>2]|0)|0;a=19;break;case 19:a=20;break;case 20:g=
g+1|0;a=16;break;case 21:g=k-1|0;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+16|0)>>2]=g;HEAP32[(d+16|0)>>2]=g;g=_CreateMultifield2(b,k);HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]=g;HEAP32[(d+8|0)>>2]=g;g=e-1|0;i=1;a=22;break;case 22:a=(g|0)<(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+8|0)>>2]|0)?23:32;break;case 23:a=4!=(HEAPU16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+4|0)>>1]&65535|0)?24:25;break;case 24:HEAP16[((HEAP32[(d+
8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>1]=HEAP16[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+4|0)>>1];HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0)+8|0)>>2];i=i+1|0;a=30;break;case 25:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+4|0)>>2]+24*g|0;j=HEAP32[(l+12|0)>>2]+1|0;a=26;break;case 26:a=(j|0)<=(HEAP32[(l+16|0)>>2]+1|0)?27:29;break;case 27:HEAP16[((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)>>
1]=HEAP16[((HEAP32[(l+8|0)>>2]+16|0)+((j-1|0)<<3)|0)>>1];HEAP32[(((HEAP32[(d+8|0)>>2]+16|0)+((i-1|0)<<3)|0)+4|0)>>2]=HEAP32[(((HEAP32[(l+8|0)>>2]+16|0)+((j-1|0)<<3)|0)+4|0)>>2];a=28;break;case 28:j=j+1|0;i=i+1|0;a=26;break;case 29:a=30;break;case 30:a=31;break;case 31:g=g+1|0;a=22;break;case 32:_MultifieldInstall(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+148|0)>>2]+24|0)>>2]+8|0)>>2]);a=33;break;case 33:return;default:assert(0,"bad label: "+a)}}_GrabProcWildargs.X=1;
function _ProceduralFunctionDefinitions(h){_AllocateEnvironmentData(h,13,16,0);_EnvDefineFunction2(h,STRING_TABLE.__str3439|0,117,1358,STRING_TABLE.__str13441|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str23442|0,117,1360,STRING_TABLE.__str33443|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str43444|0,117,1362,STRING_TABLE.__str53445|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str63446|0,108,1364,STRING_TABLE.__str73447|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str83448|0,117,1366,STRING_TABLE.__str93449|
0,0);_EnvDefineFunction2(h,STRING_TABLE.__str103450|0,117,522,STRING_TABLE.__str113451|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str123452|0,117,1368,STRING_TABLE.__str133453|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str143454|0,118,1370,STRING_TABLE.__str153455|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str163456|0,117,1372,STRING_TABLE.__str173457|0,0);_ProceduralFunctionParsers(h);_FuncSeqOvlFlags(h,STRING_TABLE.__str103450|0,0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str3439|0,0,0);_FuncSeqOvlFlags(h,
STRING_TABLE.__str23442|0,0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str43444|0,0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str123452|0,0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str163456|0,0,0)}
function _IfFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)?4:3;break;case 3:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:_EnvArgRangeCheck(a,STRING_TABLE.__str3439|0,2,3);HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=29;break;case 5:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2]|0)?6:7;break;case 6:d=2;c=11;break;case 7:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2]+12|0)>>2]|0)?8:9;break;case 8:d=3;c=10;break;case 9:_EnvArgRangeCheck(a,STRING_TABLE.__str3439|0,2,3);HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=29;break;case 10:c=11;break;case 11:_EvaluateExpression(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],b);c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?13:12;break;case 12:c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]|0)>>2]|0)?13:14;break;case 13:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=29;break;case 14:c=(HEAP32[(b+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?15:21;break;case 15:c=2==(HEAPU16[(b+4|0)>>1]&65535|0)?16:21;break;case 16:c=3==(d|0)?17:21;break;
case 17:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2];c=HEAPU16[(e|0)>>1]&65535;c=1==(c|0)||0==(c|0)||2==(c|0)||3==(c|0)||8==(c|0)||7==(c|0)||5==(c|0)?18:19;break;case 18:HEAP16[(b+4|0)>>1]=HEAP16[(e|0)>>1];HEAP32[(b+8|0)>>2]=HEAP32[(e+4|0)>>2];c=20;break;case 19:_EvaluateExpression(a,e,b);c=20;break;case 20:c=29;break;case 21:c=(HEAP32[(b+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?23:22;break;case 22:c=2!=
(HEAPU16[(b+4|0)>>1]&65535|0)?23:27;break;case 23:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];c=HEAPU16[(e|0)>>1]&65535;c=1==(c|0)||0==(c|0)||2==(c|0)||3==(c|0)||8==(c|0)||7==(c|0)||5==(c|0)?24:25;break;case 24:HEAP16[(b+4|0)>>1]=HEAP16[(e|0)>>1];HEAP32[(b+8|0)>>2]=HEAP32[(e+4|0)>>2];c=26;break;case 25:_EvaluateExpression(a,e,b);c=26;break;case 26:c=29;break;case 27:c=28;break;case 28:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+196|0)>>2]+4|0)>>2];c=29;break;case 29:return;default:assert(0,"bad label: "+c)}}_IfFunction.X=1;
function _WhileFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_EnvRtnUnknown(b,1,e);a=3;break;case 3:a=(HEAP32[(e+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?5:4;break;case 4:if(2!=(HEAPU16[(e+4|0)>>1]&65535|0))a=5;else{var g=0;a=6}break;case 5:g=1!=(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]+8|0)>>2]|0);a=6;break;case 6:a=g?7:16;break;case 7:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?9:8;break;case 8:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?9:10;break;case 9:a=16;break;case 10:_EnvRtnUnknown(b,2,e);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?11:12;break;case 11:_PropagateReturnValue(b,e);a=12;break;case 12:_PeriodicCleanup(b,0,1);
a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?14:13;break;case 13:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?14:15;break;case 14:a=16;break;case 15:_EnvRtnUnknown(b,1,e);a=3;break;case 16:a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?17:18;
break;case 17:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];HEAP32[(d+12|0)>>2]=HEAP32[(e+12|0)>>2];HEAP32[(d+16|0)>>2]=HEAP32[(e+16|0)>>2];a=19;break;case 18:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=19;break;case 19:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WhileFunction.X=1;
function _GetLoopCount(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;c=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2]+16|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+52|0)>>2]+8|0)>>2];f=3;break;case 3:f=0<(c|0)?4:5;break;case 4:a=HEAP32[(a+4|0)>>2];c=c-1|0;f=3;break;case 5:return HEAP32[(a|0)>>2];default:assert(0,"bad label: "+f)}}
function _LoopForCountFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;b=h;d=f;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?3:4;break;case 3:var j=_genalloc(b,8);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:i=j;HEAP32[(i|0)>>2]=0;HEAP32[(i+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+8|0)>>2]=i;a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str43444|0,1,1,e)|0)?6:7;break;case 6:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|
0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+8|0)>>2]=HEAP32[(i+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=26;break;case 7:HEAP32[(i|0)>>2]=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=
0==(_EnvArgTypeCheck(b,STRING_TABLE.__str43444|0,2,1,e)|0)?8:9;break;case 8:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+8|0)>>2]=HEAP32[(i+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>
2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=26;break;case 9:g=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=10;break;case 10:if((HEAP32[(i|0)>>2]|0)<=(g|0))a=11;else{var k=0;a=12}break;case 11:k=1!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0);a=12;break;case 12:a=k?13:22;break;case 13:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?15:14;break;case 14:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?15:16;break;case 15:a=22;
break;case 16:a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;_EnvRtnUnknown(b,3,e);a=HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?17:18;break;case 17:_PropagateReturnValue(b,e);a=18;break;case 18:_PeriodicCleanup(b,0,1);a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?20:19;break;case 19:a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?20:21;break;case 20:a=
22;break;case 21:a=i|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=10;break;case 22:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]+4|0)>>2]=0;a=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+52|0)>>2]|0)>>2]|0)?23:24;break;case 23:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(e+8|0)>>2];HEAP32[(d+12|0)>>2]=HEAP32[(e+12|0)>>2];HEAP32[(d+16|0)>>2]=HEAP32[(e+16|0)>>2];a=25;break;case 24:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=25;break;case 25:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+52|0)>>2]+8|0)>>2]=HEAP32[(i+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=26;break;case 26:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_LoopForCountFunction.X=1;
function _BreakFunction(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+52|0)>>2]+4|0)>>2]=1}
function _GetBoundVariable(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;a=h;d=f;e=c;g=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+12|0)>>2];a=3;break;case 3:a=0!=(g|0)?4:8;break;case 4:a=(HEAP32[(g|0)>>2]|0)==(e|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(d+12|0)>>2]=HEAP32[(g+12|0)>>2];HEAP32[(d+16|0)>>2]=HEAP32[(g+16|0)>>2];b=1;a=9;break;case 6:a=7;break;case 7:g=HEAP32[(g+20|0)>>2];a=3;break;case 8:b=0;a=9;break;case 9:return b;
default:assert(0,"bad label: "+a)}}_GetBoundVariable.X=1;
function _BindFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k;a=h;b=f;k=j=i=g=0;c=90==(HEAPU16[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)>>1]&65535|0)?3:4;break;case 3:k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+4|0)>>2];c=5;break;case 4:_EvaluateExpression(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],b);j=HEAP32[(b+8|0)>>2];c=5;break;case 5:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?6:7;break;case 6:i=1;c=11;break;case 7:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]+12|0)>>2]|0)?8:9;break;case 8:_EvaluateExpression(a,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],b);c=10;break;case 9:_StoreInMultifield(a,b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2],1);c=10;break;case 10:c=11;break;case 11:c=
0!=(k|0)?12:13;break;case 12:_QSetDefglobalValue(a,k,b,i);c=39;break;case 13:d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+12|0)>>2];e=0;c=14;break;case 14:if(0!=(d|0))c=15;else{var l=0;c=16}break;case 15:l=0==(g|0);c=16;break;case 16:c=l?17:21;break;case 17:c=(HEAP32[(d|0)>>2]|0)==(j|0)?18:19;break;case 18:g=1;c=20;break;case 19:e=d;d=HEAP32[(d+20|0)>>2];c=20;break;case 20:c=14;break;case 21:c=0==(g|0)?22:32;break;case 22:c=0==(i|0)?23:30;break;case 23:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|
0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?24:25;break;case 24:var m=_genalloc(a,24);c=26;break;case 25:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=26;break;case 26:d=m;HEAP32[(d|0)>>2]=j;HEAP32[(d+20|0)>>2]=
0;c=0==(e|0)?27:28;break;case 27:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+12|0)>>2]=d;c=29;break;case 28:HEAP32[(e+20|0)>>2]=d;c=29;break;case 29:c=31;break;case 30:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=39;break;case 31:c=33;break;case 32:_ValueDeinstall(a,d);c=33;break;case 33:c=0==(i|0)?34:35;break;case 34:HEAP16[(d+4|0)>>1]=HEAP16[(b+4|0)>>1];HEAP32[(d+8|0)>>2]=HEAP32[(b+8|0)>>2];HEAP32[(d+12|0)>>2]=HEAP32[(b+12|0)>>2];HEAP32[(d+
16|0)>>2]=HEAP32[(b+16|0)>>2];_ValueInstall(a,b);c=39;break;case 35:c=0==(e|0)?36:37;break;case 36:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+12|0)>>2]=HEAP32[(d+20|0)>>2];c=38;break;case 37:HEAP32[(e+20|0)>>2]=HEAP32[(d+20|0)>>2];c=38;break;case 38:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+
236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=39;break;case 39:return;default:assert(0,"bad label: "+c)}}_BindFunction.X=1;
function _PrognFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=_EnvRtnArgCount(a);c=0==(d|0)?3:4;break;case 3:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=15;break;case 4:e=1;c=5;break;case 5:if((e|0)<=(d|0))c=6;else{var g=0;c=7}break;case 6:g=1!=(_GetHaltExecution(a)|0);c=7;break;case 7:c=g?8:12;break;case 8:_EnvRtnUnknown(a,e,b);c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]+4|0)>>2]|0)?10:9;break;case 9:c=1==(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+52|0)>>2]|0)>>2]|0)?10:11;break;case 10:c=12;break;case 11:e=e+1|0;c=5;break;case 12:c=1==(_GetHaltExecution(a)|0)?13:14;break;case 13:HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=15;break;case 14:c=15;break;case 15:return;default:assert(0,"bad label: "+c)}}_PrognFunction.X=1;
function _ReturnFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(_EnvRtnArgCount(a)|0)?3:4;break;case 3:HEAP16[(b+4|0)>>1]=175;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=5;break;case 4:_EnvRtnUnknown(a,1,b);c=5;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+52|0)>>2]|0)>>2]=1;return;default:assert(0,"bad label: "+c)}}
function _SwitchFunction(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];_EvaluateExpression(b,HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2],e);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:a=18;break;case 4:i=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2];a=5;break;case 5:a=0!=(i|0)?6:18;break;case 6:a=175==(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:_EvaluateExpression(b,HEAP32[(i+12|0)>>2],d);a=18;break;case 8:_EvaluateExpression(b,i,g);a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?9:10;break;case 9:a=18;break;case 10:a=(HEAPU16[(e+4|0)>>1]&65535|0)==(HEAPU16[(g+4|0)>>1]&65535|0)?11:16;break;case 11:a=4==(HEAPU16[(g+4|0)>>1]&65535|0)?12:13;
break;case 12:a=0!=(_MultifieldDOsEqual(e,g)|0)?14:15;break;case 13:a=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(g+8|0)>>2]|0)?14:15;break;case 14:_EvaluateExpression(b,HEAP32[(i+12|0)>>2],d);a=18;break;case 15:a=16;break;case 16:a=17;break;case 17:i=HEAP32[(HEAP32[(i+12|0)>>2]+12|0)>>2];a=5;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SwitchFunction.X=1;
function _FlushBindList(h){_ReturnValues(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+52|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+52|0)>>2]+12|0)>>2]=0}
function _ProceduralFunctionParsers(h){_AllocateEnvironmentData(h,12,4,0);_AddFunctionParser(h,STRING_TABLE.__str3464|0,1374);_AddFunctionParser(h,STRING_TABLE.__str13465|0,1376);_AddFunctionParser(h,STRING_TABLE.__str23466|0,1378);_AddFunctionParser(h,STRING_TABLE.__str33467|0,1380);_AddFunctionParser(h,STRING_TABLE.__str43468|0,1382);_AddFunctionParser(h,STRING_TABLE.__str53469|0,1384);_AddFunctionParser(h,STRING_TABLE.__str63470|0,1386);_AddFunctionParser(h,STRING_TABLE.__str73471|0,1388)}
function _BindParse(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l,m,n,o=a+12;e=h;g=f;i=c;m=0;_SavePPBuffer(e,STRING_TABLE.__str83472|0);_GetToken(e,i,j);b=35!=(HEAPU16[(j|0)>>1]&65535|0)?3:8;break;case 3:b=33!=(HEAPU16[(j|0)>>1]&65535|0)?4:8;break;case 4:b=36!=(HEAPU16[(j|0)>>1]&65535|0)?6:5;break;case 5:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+48|0)>>2]|0)?
6:7;break;case 6:_SyntaxErrorMessage(e,STRING_TABLE.__str213485|0);_ReturnExpression(e,g);d=0;b=25;break;case 7:b=8;break;case 8:k=_GenConstant(e,2,HEAP32[(j+4|0)>>2]);HEAP32[(g+8|0)>>2]=k;k=HEAP32[(j+4|0)>>2];b=33==(HEAPU16[(j|0)>>1]&65535|0)?9:10;break;case 9:n=b=_FindImportedConstruct(e,STRING_TABLE.__str223486|0,0,HEAP32[(k+16|0)>>2],o,1,0);b=0!=(b|0)?11:12;break;case 10:b=12;break;case 11:HEAP16[(HEAP32[(g+8|0)>>2]|0)>>1]=90;HEAP32[(HEAP32[(g+8|0)>>2]+4|0)>>2]=n;b=15;break;case 12:b=33==(HEAPU16[(j|
0)>>1]&65535|0)?13:14;break;case 13:_GlobalReferenceErrorMessage(e,HEAP32[(k+16|0)>>2]);_ReturnExpression(e,g);d=0;b=25;break;case 14:b=15;break;case 15:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?16:17;break;case 16:var p=_genalloc(e,16);b=18;break;case 17:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=18;break;case 18:l=p;HEAP32[(l+12|0)>>2]=0;HEAP32[(l+8|0)>>2]=0;b=0==(_CollectArguments(e,l,i)|0)?19:20;break;case 19:_ReturnExpression(e,g);d=0;b=25;break;case 20:HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=HEAP32[(l+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=l;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=90==(HEAPU16[(HEAP32[(g+8|0)>>2]|0)>>1]&65535|0)?21:22;break;case 21:d=g;b=25;break;case 22:b=0!=(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?23:24;break;case 23:m=_ExpressionToConstraintRecord(e,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]);b=24;break;case 24:_AddBindName(e,k,m);d=g;b=25;break;case 25:return h=d,STACKTOP=a,h;default:assert(0,
"bad label: "+b)}}_BindParse.X=1;
function _PrognParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_ReturnExpression(h,f);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+44|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2];_IncrementIndentDepth(h,3);_PPCRAndIndent(h);f=_GroupActions(h,c,a,1,0,0);
_DecrementIndentDepth(h,3);_PPBackup(h);_PPBackup(h);_SavePPBuffer(h,HEAP32[(a+8|0)>>2]);STACKTOP=a;return f}_PrognParse.X=1;
function _IfParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=_ParseAtomOrExpression(e,i,0);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?3:4;break;case 3:_ReturnExpression(e,g);d=0;b=23;break;case 4:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);_GetToken(e,i,j);b=2!=(HEAPU16[(j|0)>>1]&65535|0)?6:5;break;case 5:b=
0!=(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str133477|0)|0)?6:7;break;case 6:_SyntaxErrorMessage(e,STRING_TABLE.__str233487|0);_ReturnExpression(e,g);d=0;b=23;break;case 7:_PPCRAndIndent(e);b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2]|0)?8:9;break;case 8:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;b=9;break;case 9:b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]+4|0)>>2]|0)?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+180|0)>>2]+44|0)>>2]=1;b=11;break;case 11:b=_GroupActions(e,i,j,1,STRING_TABLE.__str243488|0,0);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?12:13;break;case 12:_ReturnExpression(e,g);d=0;b=23;break;case 13:b=_RemoveUnneededProgn(e,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=171==(HEAPU16[(j|0)>>1]&65535|0)?14:15;break;case 14:_DecrementIndentDepth(e,3);_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);
d=g;b=23;break;case 15:b=2!=(HEAPU16[(j|0)>>1]&65535|0)?17:16;break;case 16:b=0!=(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str243488|0)|0)?17:18;break;case 17:_SyntaxErrorMessage(e,STRING_TABLE.__str233487|0);_ReturnExpression(e,g);d=0;b=23;break;case 18:_PPCRAndIndent(e);b=_GroupActions(e,i,j,1,0,0);HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]|0)?19:20;break;case 19:_ReturnExpression(e,g);d=0;b=23;break;case 20:b=
_RemoveUnneededProgn(e,HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]=b;b=171!=(HEAPU16[(j|0)>>1]&65535|0)?21:22;break;case 21:_SyntaxErrorMessage(e,STRING_TABLE.__str233487|0);_ReturnExpression(e,g);d=0;b=23;break;case 22:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str183482|0);_DecrementIndentDepth(e,3);d=g;b=23;break;case 23:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_IfParse.X=1;
function _WhileParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=_ParseAtomOrExpression(e,i,0);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?3:4;break;case 3:_ReturnExpression(e,g);d=0;b=18;break;case 4:_GetToken(e,i,j);b=2==(HEAPU16[(j|0)>>1]&65535|0)?5:7;break;case 5:b=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+
16|0)>>2],STRING_TABLE.__str253489|0)|0)?6:7;break;case 6:k=1;_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str83472|0);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=11;break;case 7:b=170==(HEAPU16[(j|0)>>1]&65535|0)?8:9;break;case 8:k=0;_PPBackup(e);_IncrementIndentDepth(e,3);_PPCRAndIndent(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);b=10;break;case 9:_SyntaxErrorMessage(e,STRING_TABLE.__str293493|0);_ReturnExpression(e,g);d=0;b=18;break;case 10:b=11;break;case 11:b=
1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2]|0)?12:13;break;case 12:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;b=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+44|0)>>2]=1;b=_GroupActions(e,i,j,k,0,0);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?14:15;break;case 14:_ReturnExpression(e,g);d=0;b=18;break;case 15:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);b=171!=(HEAPU16[(j|0)>>
1]&65535|0)?16:17;break;case 16:_SyntaxErrorMessage(e,STRING_TABLE.__str293493|0);_ReturnExpression(e,g);d=0;b=18;break;case 17:_DecrementIndentDepth(e,3);d=g;b=18;break;case 18:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_WhileParse.X=1;
function _LoopForCountParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l,m,n,o;e=h;g=f;i=c;k=0;_SavePPBuffer(e,STRING_TABLE.__str83472|0);_GetToken(e,i,j);b=170!=(HEAPU16[(j|0)>>1]&65535|0)?3:6;break;case 3:b=e;var p=_EnvAddLong(e,1);b=_GenConstant(b,1,p);HEAP32[(g+8|0)>>2]=b;b=_ParseAtomOrExpression(e,i,j);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(g+
8|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:_ReturnExpression(e,g);d=0;b=54;break;case 5:b=25;break;case 6:_GetToken(e,i,j);b=35!=(HEAPU16[(j|0)>>1]&65535|0)?7:12;break;case 7:b=2!=(HEAPU16[(j|0)>>1]&65535|0)?8:9;break;case 8:b=53;break;case 9:b=e;p=_EnvAddLong(e,1);b=_GenConstant(b,1,p);HEAP32[(g+8|0)>>2]=b;b=_Function2Parse(e,i,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?10:11;break;case 10:_ReturnExpression(e,g);d=0;b=54;
break;case 11:b=24;break;case 12:k=HEAP32[(j+4|0)>>2];_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=_ParseAtomOrExpression(e,i,0);HEAP32[(g+8|0)>>2]=b;b=0==(HEAP32[(g+8|0)>>2]|0)?13:14;break;case 13:_ReturnExpression(e,g);d=0;b=54;break;case 14:b=0!=(_CheckArgumentAgainstRestriction(e,HEAP32[(g+8|0)>>2],105)|0)?15:16;break;case 15:b=53;break;case 16:_SavePPBuffer(e,STRING_TABLE.__str83472|0);_GetToken(e,i,j);b=171==(HEAPU16[(j|0)>>1]&65535|0)?17:18;break;case 17:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,
HEAP32[(j+8|0)>>2]);b=e;p=_EnvAddLong(e,1);b=_GenConstant(b,1,p);HEAP32[(b+12|0)>>2]=HEAP32[(g+8|0)>>2];HEAP32[(g+8|0)>>2]=b;b=23;break;case 18:b=_ParseAtomOrExpression(e,i,j);HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]|0)?19:20;break;case 19:_ReturnExpression(e,g);d=0;b=54;break;case 20:_GetToken(e,i,j);b=171!=(HEAPU16[(j|0)>>1]&65535|0)?21:22;break;case 21:b=53;break;case 22:b=23;break;case 23:_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=24;break;case 24:b=
25;break;case 25:b=0!=(_CheckArgumentAgainstRestriction(e,HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2],105)|0)?26:27;break;case 26:b=53;break;case 27:_GetToken(e,i,j);b=2==(HEAPU16[(j|0)>>1]&65535|0)?28:30;break;case 28:b=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str253489|0)|0)?29:30;break;case 29:l=1;_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str83472|0);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=34;break;case 30:b=170==(HEAPU16[(j|0)>>1]&65535|
0)?31:32;break;case 31:l=0;_PPBackup(e);_IncrementIndentDepth(e,3);_PPCRAndIndent(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);b=33;break;case 32:b=53;break;case 33:b=34;break;case 34:b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2]|0)?35:36;break;case 35:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;b=36;break;case 36:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+44|0)>>2]=1;m=_GetParsedBindNames(e);_SetParsedBindNames(e,0);b=_GroupActions(e,i,j,l,0,0);HEAP32[(HEAP32[(HEAP32[(g+
8|0)>>2]+12|0)>>2]+12|0)>>2]=b;b=0==(HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2]|0)?37:38;break;case 37:_SetParsedBindNames(e,m);_ReturnExpression(e,g);d=0;b=54;break;case 38:n=_GetParsedBindNames(e);o=0;b=39;break;case 39:b=0!=(n|0)?40:45;break;case 40:b=0==(k|0)?41:42;break;case 41:b=44;break;case 42:b=0==(_strcmp(HEAP32[(HEAP32[(n|0)>>2]+16|0)>>2],HEAP32[(k+16|0)>>2])|0)?43:44;break;case 43:_ClearParsedBindNames(e);_SetParsedBindNames(e,m);_PrintErrorID(e,STRING_TABLE.__str103474|0,
1,1);_EnvPrintRouter(e,STRING_TABLE.__str113475|0,STRING_TABLE.__str263490|0);_ReturnExpression(e,g);d=0;b=54;break;case 44:o=n;n=HEAP32[(n+8|0)>>2];b=39;break;case 45:b=0==(o|0)?46:47;break;case 46:_SetParsedBindNames(e,m);b=48;break;case 47:HEAP32[(o+8|0)>>2]=m;b=48;break;case 48:b=0!=(k|0)?49:50;break;case 49:_ReplaceLoopCountVars(e,k,HEAP32[(HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2]+12|0)>>2],0);b=50;break;case 50:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);b=171!=(HEAPU16[(j|0)>>
1]&65535|0)?51:52;break;case 51:_SyntaxErrorMessage(e,STRING_TABLE.__str273491|0);_ReturnExpression(e,g);d=0;b=54;break;case 52:_DecrementIndentDepth(e,3);d=g;b=54;break;case 53:_SyntaxErrorMessage(e,STRING_TABLE.__str273491|0);_ReturnExpression(e,g);d=0;b=54;break;case 54:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_LoopForCountParse.X=1;
function _ReturnParse(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k=a+4;e=h;g=f;i=c;HEAP32[j>>2]=0;b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;b=4;break;case 4:b=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]|0)?5:6;break;case 5:_PrintErrorID(e,
STRING_TABLE.__str103474|0,2,1);_EnvPrintRouter(e,STRING_TABLE.__str113475|0,STRING_TABLE.__str193483|0);_ReturnExpression(e,g);d=0;b=15;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=0;_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=_ArgumentParse(e,i,j);HEAP32[(g+8|0)>>2]=b;b=0!=(HEAP32[j>>2]|0)?7:8;break;case 7:_ReturnExpression(e,g);d=0;b=15;break;case 8:b=0==(HEAP32[(g+8|0)>>2]|0)?9:10;break;case 9:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str183482|0);b=13;
break;case 10:_SavePPBuffer(e,STRING_TABLE.__str83472|0);_GetToken(e,i,k);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?11:12;break;case 11:_SyntaxErrorMessage(e,STRING_TABLE.__str203484|0);_ReturnExpression(e,g);d=0;b=15;break;case 12:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str183482|0);b=13;break;case 13:b=14;break;case 14:d=g;b=15;break;case 15:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ReturnParse.X=1;
function _BreakParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(e,STRING_TABLE.__str103474|0,2,1);_EnvPrintRouter(e,STRING_TABLE.__str113475|0,STRING_TABLE.__str163480|0);_ReturnExpression(e,g);d=0;b=7;break;case 4:_SavePPBuffer(e,STRING_TABLE.__str83472|
0);_GetToken(e,i,j);b=171!=(HEAPU16[(j|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(e,STRING_TABLE.__str173481|0);_ReturnExpression(e,g);d=0;b=7;break;case 6:_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str183482|0);d=g;b=7;break;case 7:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_BreakParse.X=1;function _GetParsedBindNames(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+48|0)>>2]|0)>>2]}
function _SetParsedBindNames(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+48|0)>>2]|0)>>2]=f}function _ParsedBindNamesEmpty(h){var f;for(f=2;;)switch(f){case 2:var c;f=0!=(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+48|0)>>2]|0)>>2]|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=1;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}
function _SearchParsedBindNames(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=f;e=1;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=(HEAP32[(d|0)>>2]|0)==(b|0)?5:6;break;case 5:a=e;c=8;break;case 6:d=HEAP32[(d+8|0)>>2];e=e+1|0;c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _FindBindConstraints(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=(HEAP32[(d|0)>>2]|0)==(b|0)?5:6;break;case 5:a=HEAP32[(d+4|0)>>2];c=8;break;case 6:d=HEAP32[(d+8|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _CountParsedBindNames(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;a=0;c=HEAP32[(HEAP32[(HEAP32[(f+16|0)>>2]+48|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(c|0)?4:5;break;case 4:c=HEAP32[(c+8|0)>>2];a=a+1|0;f=3;break;case 5:return a;default:assert(0,"bad label: "+f)}}
function _SwitchParse(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k,l,m;e=h;g=f;i=c;m=0;_IncrementIndentDepth(e,3);_SavePPBuffer(e,STRING_TABLE.__str83472|0);k=b=_ParseAtomOrExpression(e,i,0);HEAP32[(g+8|0)>>2]=b;b=0==(k|0)?3:4;break;case 3:b=43;break;case 4:_GetToken(e,i,j);b=5;break;case 5:b=171!=(HEAPU16[(j|0)>>1]&65535|0)?6:41;break;case 6:_PPBackup(e);_PPCRAndIndent(e);
_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);b=170!=(HEAPU16[(j|0)>>1]&65535|0)?7:8;break;case 7:b=42;break;case 8:_GetToken(e,i,j);_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=2==(HEAPU16[(j|0)>>1]&65535|0)?9:27;break;case 9:b=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str93473|0)|0)?10:27;break;case 10:b=0!=(m|0)?11:12;break;case 11:b=42;break;case 12:b=_ParseAtomOrExpression(e,i,0);HEAP32[(k+12|0)>>2]=b;_SavePPBuffer(e,STRING_TABLE.__str83472|0);b=0==(HEAP32[(k+12|0)>>2]|0)?13:14;break;
case 13:b=43;break;case 14:l=HEAP32[(HEAP32[(g+8|0)>>2]+12|0)>>2];b=15;break;case 15:b=(l|0)!=(HEAP32[(k+12|0)>>2]|0)?16:22;break;case 16:b=(HEAPU16[(l|0)>>1]&65535|0)==(HEAPU16[(HEAP32[(k+12|0)>>2]|0)>>1]&65535|0)?17:20;break;case 17:b=(HEAP32[(l+4|0)>>2]|0)==(HEAP32[(HEAP32[(k+12|0)>>2]+4|0)>>2]|0)?18:20;break;case 18:b=0!=(_IdenticalExpression(HEAP32[(l+8|0)>>2],HEAP32[(HEAP32[(k+12|0)>>2]+8|0)>>2])|0)?19:20;break;case 19:_PrintErrorID(e,STRING_TABLE.__str103474|0,3,1);_EnvPrintRouter(e,STRING_TABLE.__str113475|
0,STRING_TABLE.__str123476|0);b=43;break;case 20:b=21;break;case 21:l=HEAP32[(l+12|0)>>2];b=15;break;case 22:_GetToken(e,i,j);b=2!=(HEAPU16[(j|0)>>1]&65535|0)?23:24;break;case 23:b=25;break;case 24:b=0!=(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str133477|0)|0)?25:26;break;case 25:b=42;break;case 26:b=34;break;case 27:b=2==(HEAPU16[(j|0)>>1]&65535|0)?28:32;break;case 28:b=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str143478|0)|0)?29:32;break;case 29:b=0!=(m|
0)?30:31;break;case 30:b=42;break;case 31:m=_GenConstant(e,175,0);HEAP32[(k+12|0)>>2]=m;m=1;b=33;break;case 32:b=42;break;case 33:b=34;break;case 34:k=HEAP32[(k+12|0)>>2];b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]|0)>>2]|0)?35:36;break;case 35:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=1;b=36;break;case 36:b=1==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+36|0)>>2]+4|0)>>2]|0)?37:38;break;case 37:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+44|
0)>>2]=1;b=38;break;case 38:_IncrementIndentDepth(e,3);_PPCRAndIndent(e);b=_GroupActions(e,i,j,1,0,0);HEAP32[(k+12|0)>>2]=b;_DecrementIndentDepth(e,3);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+40|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+180|0)>>2]+44|0)>>2]=0;b=0==(HEAP32[(k+12|0)>>2]|0)?39:40;break;case 39:b=43;break;case 40:k=HEAP32[(k+12|0)>>2];_PPBackup(e);_PPBackup(e);_SavePPBuffer(e,HEAP32[(j+8|0)>>2]);_GetToken(e,i,j);b=5;break;case 41:_DecrementIndentDepth(e,3);d=g;b=44;break;case 42:_SyntaxErrorMessage(e,
STRING_TABLE.__str153479|0);b=43;break;case 43:_ReturnExpression(e,g);_DecrementIndentDepth(e,3);d=0;b=44;break;case 44:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_SwitchParse.X=1;
function _ClearParsedBindNames(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2]|0)?4:5;break;case 4:f=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2]+8|0)>>2];_RemoveConstraint(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+48|0)>>2]|0)>>2]=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_ClearParsedBindNames.X=1;
function _RemoveParsedBindName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+48|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:5;break;case 4:var g=(HEAP32[(e|0)>>2]|0)!=(b|0)&1;c=6;break;case 5:g=0;c=6;break;case 6:c=0!=(g|0)?7:8;break;case 7:d=e;e=HEAP32[(e+8|0)>>2];c=3;break;case 8:c=0!=(e|0)?9:13;break;case 9:c=0==(d|0)?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+48|0)>>2]|0)>>2]=HEAP32[(e+8|0)>>2];c=12;break;case 11:HEAP32[(d+8|0)>>
2]=HEAP32[(e+8|0)>>2];c=12;break;case 12:_RemoveConstraint(a,HEAP32[(e+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=13;break;case 13:return;default:assert(0,"bad label: "+c)}}
_RemoveParsedBindName.X=1;
function _AddBindName(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;k=1;j=0;i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+48|0)>>2]|0)>>2];a=3;break;case 3:a=0!=(i|0)?4:9;break;case 4:a=(HEAP32[(i|0)>>2]|0)==(e|0)?5:8;break;case 5:a=0!=(g|0)?6:7;break;case 6:a=HEAP32[(i+4|0)>>2];var l=_UnionConstraints(d,g,HEAP32[(i+4|0)>>2]);HEAP32[(i+4|0)>>2]=l;_RemoveConstraint(d,a);_RemoveConstraint(d,g);a=7;break;case 7:b=k;a=16;break;case 8:j=i;i=HEAP32[(i+8|0)>>2];k=k+1|0;a=3;break;case 9:a=
0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?10:11;break;case 10:var m=_genalloc(d,12);a=12;break;case 11:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=12;break;case 12:i=
m;HEAP32[(i|0)>>2]=e;HEAP32[(i+4|0)>>2]=g;HEAP32[(i+8|0)>>2]=0;a=0==(j|0)?13:14;break;case 13:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+48|0)>>2]|0)>>2]=i;a=15;break;case 14:HEAP32[(j+8|0)>>2]=i;a=15;break;case 15:b=k;a=16;break;case 16:return b;default:assert(0,"bad label: "+a)}}_AddBindName.X=1;
function _ReplaceLoopCountVars(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;d=h;e=f;g=c;i=a;b=3;break;case 3:b=0!=(g|0)?4:17;break;case 4:b=35!=(HEAPU16[(g|0)>>1]&65535|0)?5:6;break;case 5:b=8;break;case 6:b=0==(_strcmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2],HEAP32[(e+16|0)>>2])|0)?7:8;break;case 7:HEAP16[(g|0)>>1]=30;b=_FindFunction(d,STRING_TABLE.__str283492|0);HEAP32[(g+4|0)>>2]=b;b=d;var j=_EnvAddLong(d,i);b=_GenConstant(b,1,j);HEAP32[(g+8|0)>>2]=b;b=16;break;case 8:b=0!=(HEAP32[(g+8|0)>>
2]|0)?9:15;break;case 9:b=30!=(HEAPU16[(g|0)>>1]&65535|0)?10:11;break;case 10:b=13;break;case 11:b=HEAP32[(g+4|0)>>2];j=_FindFunction(d,STRING_TABLE.__str43468|0);b=(b|0)==(j|0)?12:13;break;case 12:_ReplaceLoopCountVars(d,e,HEAP32[(g+8|0)>>2],i+1|0);b=14;break;case 13:_ReplaceLoopCountVars(d,e,HEAP32[(g+8|0)>>2],i);b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:g=HEAP32[(g+12|0)>>2];b=3;break;case 17:return;default:assert(0,"bad label: "+b)}}_ReplaceLoopCountVars.X=1;
function _PredicateFunctionDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str3510|0,98,1390,STRING_TABLE.__str13511|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str33513|0,98,1392,STRING_TABLE.__str43514|0,STRING_TABLE.__str53515|0);_EnvDefineFunction2(h,STRING_TABLE.__str63516|0,98,1394,STRING_TABLE.__str73517|0,STRING_TABLE.__str53515|0);_EnvDefineFunction2(h,STRING_TABLE.__str83518|0,98,1396,STRING_TABLE.__str93519|0,STRING_TABLE.__str53515|0);_EnvDefineFunction2(h,STRING_TABLE.__str103520|
0,98,1398,STRING_TABLE.__str113521|0,STRING_TABLE.__str53515|0);_EnvDefineFunction2(h,STRING_TABLE.__str123522|0,98,1400,STRING_TABLE.__str133523|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str153525|0,98,1402,STRING_TABLE.__str163526|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str173527|0,98,1404,STRING_TABLE.__str183528|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str193529|0,98,1406,STRING_TABLE.__str203530|0,STRING_TABLE.__str143524|
0);_EnvDefineFunction2(h,STRING_TABLE.__str213531|0,98,1408,STRING_TABLE.__str223532|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str233533|0,98,1410,STRING_TABLE.__str243534|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str253535|0,98,1410,STRING_TABLE.__str243534|0,STRING_TABLE.__str143524|0);_EnvDefineFunction2(h,STRING_TABLE.__str263536|0,98,1412,STRING_TABLE.__str273537|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str283538|0,98,
1412,STRING_TABLE.__str273537|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str293539|0,98,1414,STRING_TABLE.__str303540|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str313541|0,98,1416,STRING_TABLE.__str323542|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str333543|0,98,1418,STRING_TABLE.__str343544|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str353545|0,98,1420,STRING_TABLE.__str363546|0,STRING_TABLE.__str23512|0);
_EnvDefineFunction2(h,STRING_TABLE.__str373547|0,98,1422,STRING_TABLE.__str383548|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str393549|0,98,1424,STRING_TABLE.__str403550|0,STRING_TABLE.__str413551|0);_EnvDefineFunction2(h,STRING_TABLE.__str423552|0,98,1426,STRING_TABLE.__str433553|0,STRING_TABLE.__str413551|0);_EnvDefineFunction2(h,STRING_TABLE.__str443554|0,98,1428,STRING_TABLE.__str453555|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str463556|0,98,1428,
STRING_TABLE.__str453555|0,STRING_TABLE.__str23512|0);_EnvDefineFunction2(h,STRING_TABLE.__str473557|0,98,1430,STRING_TABLE.__str483558|0,STRING_TABLE.__str23512|0)}_PredicateFunctionDefinitions.X=1;
function _NotFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=0;c=10;break;case 4:c=0!=(_EvaluateExpression(b,d,e)|0)?5:6;break;case 5:a=0;c=10;break;case 6:c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?7:9;break;case 7:c=2==(HEAPU16[(e+
4|0)>>1]&65535|0)?8:9;break;case 8:a=1;c=10;break;case 9:a=0;c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_NotFunction.X=1;
function _AndFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:11;break;case 4:c=0!=(_EvaluateExpression(b,d,e)|0)?5:6;break;case 5:a=0;c=12;break;case 6:c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?7:9;break;case 7:c=2==(HEAPU16[(e+
4|0)>>1]&65535|0)?8:9;break;case 8:a=0;c=12;break;case 9:c=10;break;case 10:d=HEAP32[(d+12|0)>>2];c=3;break;case 11:a=1;c=12;break;case 12:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_AndFunction.X=1;
function _OrFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:11;break;case 4:c=0!=(_EvaluateExpression(b,d,e)|0)?5:6;break;case 5:a=0;c=12;break;case 6:c=(HEAP32[(e+8|0)>>2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2]|0)?8:7;break;case 7:c=2!=(HEAPU16[(e+
4|0)>>1]&65535|0)?8:9;break;case 8:a=1;c=12;break;case 9:c=10;break;case 10:d=HEAP32[(d+12|0)>>2];c=3;break;case 11:a=0;c=12;break;case 12:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_OrFunction.X=1;
function _EqFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24,g,i,j;b=h;g=_EnvRtnArgCount(b);c=0==(g|0)?3:4;break;case 3:a=0;c=18;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];_EvaluateExpression(b,j,d);j=HEAP32[(j+12|0)>>2];i=2;c=5;break;case 5:c=(i|0)<=(g|0)?6:17;break;case 6:_EvaluateExpression(b,j,e);c=(HEAPU16[(e+4|0)>>1]&65535|
0)!=(HEAPU16[(d+4|0)>>1]&65535|0)?7:8;break;case 7:a=0;c=18;break;case 8:c=4==(HEAPU16[(e+4|0)>>1]&65535|0)?9:12;break;case 9:c=0==(_MultifieldDOsEqual(e,d)|0)?10:11;break;case 10:a=0;c=18;break;case 11:c=15;break;case 12:c=(HEAP32[(e+8|0)>>2]|0)!=(HEAP32[(d+8|0)>>2]|0)?13:14;break;case 13:a=0;c=18;break;case 14:c=15;break;case 15:j=HEAP32[(j+12|0)>>2];c=16;break;case 16:i=i+1|0;c=5;break;case 17:a=1;c=18;break;case 18:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_EqFunction.X=1;
function _NeqFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24,g,i,j;b=h;g=_EnvRtnArgCount(b);c=0==(g|0)?3:4;break;case 3:a=0;c=19;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];_EvaluateExpression(b,j,d);i=2;j=HEAP32[(j+12|0)>>2];c=5;break;case 5:c=(i|0)<=(g|0)?6:18;break;case 6:_EvaluateExpression(b,j,e);c=(HEAPU16[(e+4|0)>>1]&
65535|0)!=(HEAPU16[(d+4|0)>>1]&65535|0)?7:8;break;case 7:c=17;break;case 8:c=4==(HEAPU16[(e+4|0)>>1]&65535|0)?9:12;break;case 9:c=1==(_MultifieldDOsEqual(e,d)|0)?10:11;break;case 10:a=0;c=19;break;case 11:c=15;break;case 12:c=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(d+8|0)>>2]|0)?13:14;break;case 13:a=0;c=19;break;case 14:c=15;break;case 15:c=16;break;case 16:c=17;break;case 17:i=i+1|0;j=HEAP32[(j+12|0)>>2];c=5;break;case 18:a=1;c=19;break;case 19:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
_NeqFunction.X=1;
function _LessThanOrEqualFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str123522|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=(d|
0)?8:29;break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str123522|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)>(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=
HEAP32[j+4>>2],tempDoubleF64[0]);c=c>j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])>(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c>j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_LessThanOrEqualFunction.X=1;
function _GreaterThanOrEqualFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str153525|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=
(d|0)?8:29;break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str153525|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)<(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=
HEAP32[j+4>>2],tempDoubleF64[0]);c=c<j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])<(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c<j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GreaterThanOrEqualFunction.X=1;
function _LessThanFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str173527|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=(d|0)?8:29;
break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str173527|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)>=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+
4>>2],tempDoubleF64[0]);c=c>=j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])>=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c>=j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_LessThanFunction.X=1;
function _GreaterThanFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str193529|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=(d|0)?
8:29;break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str193529|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)<=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=
HEAP32[j+4>>2],tempDoubleF64[0]);c=c<=j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])<=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c<=j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:HEAP16[(e+4|0)>>1]=HEAP16[(g+4|0)>>1];HEAP32[(e+8|0)>>2]=HEAP32[(g+8|0)>>2];c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GreaterThanFunction.X=1;
function _NumericEqualFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str213531|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=(d|0)?
8:29;break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str213531|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)!=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=
HEAP32[j+4>>2],tempDoubleF64[0]);c=c!=j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])!=(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c!=j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_NumericEqualFunction.X=1;
function _NumericNotEqualFunction(h){var f=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+24,i;b=h;i=1;d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];c=0==(d|0)?3:4;break;case 3:a=1;c=30;break;case 4:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str233533|0,e,0,i)|0)?6:5;break;case 5:a=0;c=30;break;case 6:i=i+1|0;d=HEAP32[(d+12|0)>>2];c=7;break;case 7:c=0!=(d|
0)?8:29;break;case 8:c=0!=(_GetNumericArgument(b,d,STRING_TABLE.__str233533|0,g,0,i)|0)?10:9;break;case 9:a=0;c=30;break;case 10:c=1==(HEAPU16[(e+4|0)>>1]&65535|0)?11:19;break;case 11:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?12:15;break;case 12:c=(HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0)==(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=30;break;case 14:c=18;break;case 15:c=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]|0;var j=HEAP32[(g+8|0)>>2]+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=
HEAP32[j+4>>2],tempDoubleF64[0]);c=c==j?16:17;break;case 16:a=0;c=30;break;case 17:c=18;break;case 18:c=27;break;case 19:c=1==(HEAPU16[(g+4|0)>>1]&65535|0)?20:23;break;case 20:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])==(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=0;c=30;break;case 22:c=26;break;case 23:c=HEAP32[(e+8|0)>>2]+16|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);j=HEAP32[(g+
8|0)>>2]+16|0;j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c==j?24:25;break;case 24:a=0;c=30;break;case 25:c=26;break;case 26:c=27;break;case 27:c=28;break;case 28:d=HEAP32[(d+12|0)>>2];i=i+1|0;c=7;break;case 29:a=1;c=30;break;case 30:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_NumericNotEqualFunction.X=1;
function _SymbolpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str263536|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=2==(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=1;c=7;break;case 6:a=0;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _StringpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str293539|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=3==(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=1;c=7;break;case 6:a=0;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _LexemepFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str313541|0,0,1)|0)?3:4;break;case 3:a=0;c=8;break;case 4:_EnvRtnUnknown(b,1,d);c=2==(HEAPU16[(d+4|0)>>1]&65535|0)?6:5;break;case 5:c=3==(HEAPU16[(d+4|0)>>1]&65535|0)?6:7;break;case 6:a=1;c=8;break;case 7:a=0;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}
function _NumberpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str333543|0,0,1)|0)?3:4;break;case 3:a=0;c=8;break;case 4:_EnvRtnUnknown(b,1,d);c=0==(HEAPU16[(d+4|0)>>1]&65535|0)?6:5;break;case 5:c=1==(HEAPU16[(d+4|0)>>1]&65535|0)?6:7;break;case 6:a=1;c=8;break;case 7:a=0;c=8;break;case 8:return h=a,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}function _IntegerpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str353545|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=1!=(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=1;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _FloatpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str373547|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=0==(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=1;c=7;break;case 6:a=0;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _OddpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str393549|0,0,1)|0)?3:4;break;case 3:a=0;c=9;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str393549|0,1,1,d)|0)?5:6;break;case 5:a=0;c=9;break;case 6:c=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];e=((c|0)/2&-1)<<1|0;c=(c|0)==(e|0)?7:8;break;case 7:a=0;c=9;break;case 8:a=
1;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _EvenpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str423552|0,0,1)|0)?3:4;break;case 3:a=0;c=9;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str423552|0,1,1,d)|0)?5:6;break;case 5:a=0;c=9;break;case 6:c=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];e=((c|0)/2&-1)<<1|0;c=(c|0)!=(e|0)?7:8;break;case 7:a=0;c=9;break;case 8:a=
1;c=9;break;case 9:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _MultifieldpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str443554|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=4!=(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=1;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _PointerpFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str473557|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:_EnvRtnUnknown(b,1,d);c=5!=(HEAPU16[(d+4|0)>>1]&65535|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=1;c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _InitializePrintUtilityData(h){_AllocateEnvironmentData(h,53,12,0)}
function _PrintInChunks(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(e|0)?3:4;break;case 3:a=10;break;case 4:a=5;break;case 5:a=500<(_strlen(e)|0)?6:9;break;case 6:a=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:a=10;break;case 8:a=HEAP8[e+500|0];HEAP8[e+500|0]=0;_EnvPrintRouter(b,d,e);HEAP8[e+500|0]=a;e=e+500|0;a=5;break;case 9:_EnvPrintRouter(b,d,e);a=10;break;case 10:return;default:assert(0,"bad label: "+a)}}_PrintInChunks.X=1;
function _PrintFloat(h,f,c){c=_FloatToString(h,c);_EnvPrintRouter(h,f,c)}
function _FloatToString(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i;d=h;g=f;_sprintf(e|0,STRING_TABLE.__str343594|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),tempDoubleF64[0]=g,HEAP32[tempInt>>2]=tempDoubleI32[0],HEAP32[tempInt+4>>2]=tempDoubleI32[1],tempInt));g=0;a=3;break;case 3:i=a=HEAP8[e+g|0];a=0!=(a<<24>>24|0)?4:9;break;case 4:a=
46==(i<<24>>24|0)?6:5;break;case 5:a=101==(i<<24>>24|0)?6:7;break;case 6:b=_EnvAddSymbol(d,e|0);b=HEAP32[(b+16|0)>>2];a=10;break;case 7:a=8;break;case 8:g=g+1|0;a=3;break;case 9:_strcat(e|0,STRING_TABLE.__str353595|0);b=_EnvAddSymbol(d,e|0);b=HEAP32[(b+16|0)>>2];a=10;break;case 10:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_FloatToString.X=1;
function _PrintLongInteger(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_sprintf(a|0,STRING_TABLE.__str3560|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=c,tempInt));_EnvPrintRouter(h,f,a|0);STACKTOP=a}
function _PrintAtom(h,f,c,a){var b=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;g=f;i=c;j=a;d=i;d=0==(d|0)?3:1==(d|0)?4:2==(d|0)?5:3==(d|0)?6:5==(d|0)?10:8==(d|0)?15:175==(d|0)?16:17;break;case 3:d=e;var l=g,m=j+16|0,m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0]);_PrintFloat(d,l,m);d=22;break;case 4:_PrintLongInteger(e,g,HEAP32[(j+16|0)>>2]);d=
22;break;case 5:_EnvPrintRouter(e,g,HEAP32[(j+16|0)>>2]);d=22;break;case 6:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+212|0)>>2]|0)>>2]|0)?7:8;break;case 7:d=e;l=g;m=_StringPrintForm(e,HEAP32[(j+16|0)>>2]);_EnvPrintRouter(d,l,m);d=9;break;case 8:_EnvPrintRouter(e,g,STRING_TABLE.__str13561|0);_EnvPrintRouter(e,g,HEAP32[(j+16|0)>>2]);_EnvPrintRouter(e,g,STRING_TABLE.__str13561|0);d=9;break;case 9:d=22;break;case 10:d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?11:12;break;case 11:_EnvPrintRouter(e,
g,STRING_TABLE.__str13561|0);d=12;break;case 12:_EnvPrintRouter(e,g,STRING_TABLE.__str23562|0);d=j;_sprintf(k|0,STRING_TABLE.__str33563|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));_EnvPrintRouter(e,g,k|0);_EnvPrintRouter(e,g,STRING_TABLE.__str43564|0);d=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+212|0)>>2]+4|0)>>2]|0)?13:14;break;case 13:_EnvPrintRouter(e,g,STRING_TABLE.__str13561|0);d=14;break;case 14:d=22;break;case 15:_EnvPrintRouter(e,
g,STRING_TABLE.__str53565|0);_EnvPrintRouter(e,g,HEAP32[(j+16|0)>>2]);_EnvPrintRouter(e,g,STRING_TABLE.__str63566|0);d=22;break;case 16:d=22;break;case 17:d=0==(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+(i<<2)|0)>>2]|0)?18:19;break;case 18:d=22;break;case 19:d=0==(HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+16|0)+(i<<2)|0)>>2]+12|0)>>2]|0)?20:21;break;case 20:_EnvPrintRouter(e,g,STRING_TABLE.__str73567|0);d=22;break;case 21:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(e+
16|0)>>2]+176|0)>>2]+16|0)+(i<<2)|0)>>2]+12|0)>>2]](e,g,j);d=22;break;case 22:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_PrintAtom.X=1;
function _PrintTally(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;d=0==(i|0)?3:4;break;case 3:d=8;break;case 4:_EnvPrintRouter(e,g,STRING_TABLE.__str83568|0);_PrintLongInteger(e,g,i);_EnvPrintRouter(e,g,STRING_TABLE.__str93569|0);d=1==(i|0)?5:6;break;case 5:_EnvPrintRouter(e,g,j);d=7;break;case 6:_EnvPrintRouter(e,g,k);d=7;break;case 7:_EnvPrintRouter(e,g,STRING_TABLE.__str103570|0);d=8;break;case 8:return;default:assert(0,"bad label: "+d)}}
function _PrintErrorID(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0!=(a|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str113571|0,STRING_TABLE.__str123572|0);b=4;break;case 4:_EnvPrintRouter(d,STRING_TABLE.__str113571|0,STRING_TABLE.__str53565|0);_EnvPrintRouter(d,STRING_TABLE.__str113571|0,e);_PrintLongInteger(d,STRING_TABLE.__str113571|0,g);_EnvPrintRouter(d,STRING_TABLE.__str113571|0,STRING_TABLE.__str133573|0);return;default:assert(0,"bad label: "+b)}}
function _PrintWarningID(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0!=(a|0)?3:4;break;case 3:_EnvPrintRouter(d,STRING_TABLE.__str143574|0,STRING_TABLE.__str123572|0);b=4;break;case 4:_EnvPrintRouter(d,STRING_TABLE.__str143574|0,STRING_TABLE.__str53565|0);_EnvPrintRouter(d,STRING_TABLE.__str143574|0,e);_PrintLongInteger(d,STRING_TABLE.__str143574|0,g);_EnvPrintRouter(d,STRING_TABLE.__str143574|0,STRING_TABLE.__str153575|0);return;default:assert(0,"bad label: "+b)}}
function _CantFindItemErrorMessage(h,f,c){_PrintErrorID(h,STRING_TABLE.__str163576|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str173577|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str93569|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0)}
function _CantFindItemInFunctionErrorMessage(h,f,c,a){_PrintErrorID(h,STRING_TABLE.__str163576|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str173577|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str93569|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str183578|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,a);_EnvPrintRouter(h,STRING_TABLE.__str113571|
0,STRING_TABLE.__str103570|0)}function _CantDeleteItemErrorMessage(h,f,c){_PrintErrorID(h,STRING_TABLE.__str163576|0,4,0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str193579|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str93569|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0)}
function _AlreadyParsedErrorMessage(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;_PrintErrorID(b,STRING_TABLE.__str163576|0,5,1);_EnvPrintRouter(b,STRING_TABLE.__str113571|0,STRING_TABLE.__str203580|0);a=0!=(d|0)?3:4;break;case 3:_EnvPrintRouter(b,STRING_TABLE.__str113571|0,d);a=4;break;case 4:a=0!=(e|0)?5:6;break;case 5:_EnvPrintRouter(b,STRING_TABLE.__str113571|0,e);a=6;break;case 6:_EnvPrintRouter(b,STRING_TABLE.__str113571|0,STRING_TABLE.__str213581|0);return;default:assert(0,
"bad label: "+a)}}
function _SyntaxErrorMessage(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;_PrintErrorID(a,STRING_TABLE.__str163576|0,2,1);_EnvPrintRouter(a,STRING_TABLE.__str113571|0,STRING_TABLE.__str223582|0);c=0!=(b|0)?3:4;break;case 3:_EnvPrintRouter(a,STRING_TABLE.__str113571|0,STRING_TABLE.__str233583|0);_EnvPrintRouter(a,STRING_TABLE.__str113571|0,b);c=4;break;case 4:_EnvPrintRouter(a,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0);_SetEvaluationError(a,1);return;default:assert(0,"bad label: "+
c)}}function _LocalVariableErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str163576|0,6,1);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str243584|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0)}
function _SystemError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str163576|0,3,1);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str253585|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str263586|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str273587|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str283588|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_PrintLongInteger(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|
0,STRING_TABLE.__str123572|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str263586|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str293589|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str303590|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str313591|0)}
function _DivideByZeroErrorMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str163576|0,7,0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str323592|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str333593|0)}
function _LongIntegerToString(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_sprintf(c|0,STRING_TABLE.__str3560|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=f,tempInt));var a=_EnvAddSymbol(h,c|0),a=HEAP32[(a+16|0)>>2];STACKTOP=c;return a}
function _DataObjectToString(h,f){var c=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l=c;d=h;e=f;a=HEAPU16[(e+4|0)>>1]&65535;a=4==(a|0)?3:3==(a|0)?4:8==(a|0)?5:2==(a|0)?6:0==(a|0)?7:1==(a|0)?8:175==(a|0)?9:7==(a|0)?10:5==(a|0)?16:6==(a|0)?17:20;break;case 3:j=STRING_TABLE.__str363596|0;i=_ImplodeMultifield(d,e)+16|0;i=HEAP32[i>>2];k=STRING_TABLE.__str373597|0;a=21;break;case 4:j=STRING_TABLE.__str13561|
0;i=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];k=STRING_TABLE.__str13561|0;a=21;break;case 5:j=STRING_TABLE.__str53565|0;i=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];k=STRING_TABLE.__str63566|0;a=21;break;case 6:b=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];a=22;break;case 7:b=d;a=HEAP32[(e+8|0)>>2]+16|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);b=_FloatToString(b,a);a=22;break;case 8:b=_LongIntegerToString(d,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2]);a=22;break;case 9:b=__str383598|
0;a=22;break;case 10:g=HEAP32[(e+8|0)>>2];a=(g|0)==(HEAP32[(HEAP32[(d+16|0)>>2]+116|0)>>2]|0)?11:12;break;case 11:b=STRING_TABLE.__str393599|0;a=22;break;case 12:a=0!=(HEAPU32[(g+24|0)>>2]>>>1&1|0)?13:14;break;case 13:j=STRING_TABLE.__str403600|0;i=HEAP32[(HEAP32[(g+28|0)>>2]+16|0)>>2];k=STRING_TABLE.__str43564|0;a=15;break;case 14:j=STRING_TABLE.__str413601|0;i=_GetFullInstanceName(d,g)+16|0;i=HEAP32[i>>2];k=STRING_TABLE.__str43564|0;a=15;break;case 15:a=21;break;case 16:g=HEAP32[(e+8|0)>>2];_sprintf(l|
0,STRING_TABLE.__str423602|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=_EnvAddSymbol(d,l|0);b=HEAP32[(g+16|0)>>2];a=22;break;case 17:a=(HEAP32[(e+8|0)>>2]|0)==(HEAP32[(HEAP32[(d+16|0)>>2]+12|0)>>2]+8|0)?18:19;break;case 18:b=STRING_TABLE.__str433603|0;a=22;break;case 19:g=HEAP32[(e+8|0)>>2];g=HEAP32[(g+24|0)>>2];_sprintf(l|0,STRING_TABLE.__str443604|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=g,tempInt));g=_EnvAddSymbol(d,l|0);b=HEAP32[(g+16|0)>>2];a=22;break;case 20:b=STRING_TABLE.__str453605|0;a=22;break;case 21:g=_strlen(j);b=_strlen(i);g=g+b|0;b=_strlen(k);a=(g+b|0)+1|0;b=_genalloc(d,a);HEAP8[b|0]=0;_strcat(b,j);_strcat(b,i);_strcat(b,k);g=_EnvAddSymbol(d,b);_genfree(d,b,a);b=HEAP32[(g+16|0)>>2];a=22;break;case 22:return d=b,STACKTOP=c,d;default:assert(0,"bad label: "+a)}}_DataObjectToString.X=1;
function _SalienceInformationError(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;_PrintErrorID(b,STRING_TABLE.__str163576|0,8,1);_EnvPrintRouter(b,STRING_TABLE.__str113571|0,STRING_TABLE.__str463606|0);a=0!=(e|0)?3:4;break;case 3:_EnvPrintRouter(b,STRING_TABLE.__str113571|0,STRING_TABLE.__str473607|0);_EnvPrintRouter(b,STRING_TABLE.__str113571|0,d);_EnvPrintRouter(b,STRING_TABLE.__str113571|0,STRING_TABLE.__str93569|0);_EnvPrintRouter(b,STRING_TABLE.__str113571|0,e);a=4;break;case 4:_EnvPrintRouter(b,
STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0);return;default:assert(0,"bad label: "+a)}}function _SalienceRangeError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str163576|0,9,1);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str483608|0);_PrintLongInteger(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str493609|0);_PrintLongInteger(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0)}
function _SalienceNonIntegerError(h){_PrintErrorID(h,STRING_TABLE.__str163576|0,10,1);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str503610|0)}
function _SlotExistError(h,f,c){_PrintErrorID(h,STRING_TABLE.__str513611|0,3,0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str523612|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,f);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str183578|0);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,c);_EnvPrintRouter(h,STRING_TABLE.__str113571|0,STRING_TABLE.__str103570|0);_SetEvaluationError(h,1)}
function _ConstructProfilingFunctionDefinitions(h){var f=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");assert(!0,"memcpy given 12 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[f>>2]=HEAP32[(_ConstructProfilingFunctionDefinitions_profileDataInfo|0)>>2];HEAP32[f+4>>2]=HEAP32[(_ConstructProfilingFunctionDefinitions_profileDataInfo|0)+4>>2];HEAP32[f+8>>2]=HEAP32[(_ConstructProfilingFunctionDefinitions_profileDataInfo|
0)+8>>2];_AllocateEnvironmentData(h,15,68,0);var c=HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+36|0;assert(!0,"memcpy given 12 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[c>>2]=HEAP32[f>>2];HEAP32[c+4>>2]=HEAP32[f+4>>2];HEAP32[c+8>>2]=HEAP32[f+8>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+24|0)>>2]=0;c=HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+28|0;tempDoubleF64[0]=0;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+4>>2]=tempDoubleI32[1];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+64|
0)>>2]=STRING_TABLE.__str3653|0;_EnvDefineFunction2(h,STRING_TABLE.__str13654|0,118,1432,STRING_TABLE.__str23655|0,STRING_TABLE.__str33656|0);_EnvDefineFunction2(h,STRING_TABLE.__str43657|0,118,1434,STRING_TABLE.__str53658|0,STRING_TABLE.__str63659|0);_EnvDefineFunction2(h,STRING_TABLE.__str73660|0,118,1436,STRING_TABLE.__str83661|0,STRING_TABLE.__str93662|0);_EnvDefineFunction2(h,STRING_TABLE.__str103663|0,100,1438,STRING_TABLE.__str113664|0,STRING_TABLE.__str123665|0);_EnvDefineFunction2(h,STRING_TABLE.__str133666|
0,100,1440,STRING_TABLE.__str143667|0,STRING_TABLE.__str93662|0);c=_InstallUserDataRecord(h,HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+36|0);HEAP8[HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+48|0]=c;_EnvAddClearFunction(h,STRING_TABLE.__str13654|0,1442,0);STACKTOP=f}_ConstructProfilingFunctionDefinitions.X=1;
function _CreateProfileData(h){h=_genalloc(h,40);HEAP32[(h+8|0)>>2]=0;var f=h+12|0;HEAP32[f>>2]&=-2;f=h+16|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];f=h+24|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];f=h+32|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];return h}function _DeleteProfileData(h,f){_genfree(h,f,40)}
function _ProfileCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str13654|0,0,1)|0)?3:4;break;case 3:c=9;break;case 4:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str13654|0,1,2,b)|0)?5:6;break;case 5:c=9;break;case 6:c=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];c=0!=(_Profile(a,c)|0)?8:7;break;case 7:_ExpectedTypeError1(a,STRING_TABLE.__str13654|
0,1,STRING_TABLE.__str153668|0);c=9;break;case 8:c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
function _ProfileInfoCommand(h){var f=STACKTOP;STACKTOP+=536;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24;a=h;b=c=_EnvArgCountCheck(a,STRING_TABLE.__str13654|0,2,1);c=-1==(c|0)?3:4;break;case 3:c=27;break;case 4:c=1==(b|0)?5:8;break;case 5:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str13654|0,1,2,d)|0)?6:7;break;case 6:c=27;break;case 7:c=8;break;case 8:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+
52|0)>>2]|0)?10:9;break;case 9:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+56|0)>>2]|0)?10:11;break;case 10:c=_gentime();var g=HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+8|0;tempDoubleF64[0]=c;HEAP32[g>>2]=tempDoubleI32[0];HEAP32[g+4>>2]=tempDoubleI32[1];c=HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+8|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);g=HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]|0;g=(tempDoubleI32[0]=HEAP32[g>>2],tempDoubleI32[1]=HEAP32[g+4>>2],tempDoubleF64[0]);
g=c-g;c=HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+16|0;g=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])+g;tempDoubleF64[0]=g;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+4>>2]=tempDoubleI32[1];c=11;break;case 11:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?12:23;break;case 12:c=e|0;g=HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+16|0;g=(tempDoubleI32[0]=HEAP32[g>>2],tempDoubleI32[1]=HEAP32[g+4>>2],tempDoubleF64[0]);_sprintf(c,STRING_TABLE.__str193672|0,(tempInt=
STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),tempDoubleF64[0]=g,HEAP32[tempInt>>2]=tempDoubleI32[0],HEAP32[tempInt+4>>2]=tempDoubleI32[1],tempInt));_EnvPrintRouter(a,STRING_TABLE.__str203673|0,e|0);c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?13:14;break;case 13:_EnvPrintRouter(a,STRING_TABLE.__str203673|0,STRING_TABLE.__str213674|0);c=17;break;case 14:c=2==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?15:16;break;case 15:_EnvPrintRouter(a,
STRING_TABLE.__str203673|0,STRING_TABLE.__str223675|0);c=16;break;case 16:c=17;break;case 17:_EnvPrintRouter(a,STRING_TABLE.__str203673|0,STRING_TABLE.__str233676|0);c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?18:19;break;case 18:_EnvPrintRouter(a,STRING_TABLE.__str203673|0,STRING_TABLE.__str243677|0);c=22;break;case 19:c=2==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?20:21;break;case 20:_EnvPrintRouter(a,STRING_TABLE.__str203673|0,STRING_TABLE.__str253678|0);
c=21;break;case 21:c=22;break;case 22:_EnvPrintRouter(a,STRING_TABLE.__str203673|0,STRING_TABLE.__str263679|0);c=23;break;case 23:c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?24:25;break;case 24:_OutputUserFunctionsInfo(a);c=25;break;case 25:c=2==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+24|0)>>2]|0)?26:27;break;case 26:_OutputConstructsCodeInfo(a);c=27;break;case 27:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ProfileInfoCommand.X=1;
function _ProfileResetCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k;c=h;a=HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]|0;tempDoubleF64[0]=0;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];a=HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+8|0;tempDoubleF64[0]=0;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];a=HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+16|0;tempDoubleF64[0]=0;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+
60|0)>>2]+24|0)>>2]=0;a=_GetFunctionList(c);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(a+36|0)>>2]);_ResetProfileInfo(f);f=5;break;case 5:a=HEAP32[(a+32|0)>>2];f=3;break;case 6:b=0;f=7;break;case 7:f=150>(b|0)?8:12;break;case 8:f=0!=(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]|0)?9:10;break;case 9:f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(HEAP32[((HEAP32[(HEAP32[(c+16|
0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]+52|0)>>2]);_ResetProfileInfo(f);f=10;break;case 10:f=11;break;case 11:b=b+1|0;f=7;break;case 12:d=_EnvGetNextDeffunction(c,0);f=13;break;case 13:f=0!=(d|0)?14:16;break;case 14:f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[((d|0)+20|0)>>2]);_ResetProfileInfo(f);f=15;break;case 15:d=_EnvGetNextDeffunction(c,d);f=13;break;case 16:e=_EnvGetNextDefrule(c,0);f=17;break;case 17:f=0!=(e|0)?18:20;break;case 18:f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+
16|0)>>2]+60|0)>>2]+48|0],HEAP32[((e|0)+20|0)>>2]);_ResetProfileInfo(f);f=19;break;case 19:e=_EnvGetNextDefrule(c,e);f=17;break;case 20:g=_EnvGetNextDefgeneric(c,0);f=21;break;case 21:f=0!=(g|0)?22:28;break;case 22:i=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[((g|0)+20|0)>>2]);_ResetProfileInfo(i);i=_EnvGetNextDefmethod(c,g,0);f=23;break;case 23:f=0!=(i|0)?24:26;break;case 24:f=_GetDefmethodPointer(g,i);f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],
HEAP32[(f+40|0)>>2]);_ResetProfileInfo(f);f=25;break;case 25:i=_EnvGetNextDefmethod(c,g,i);f=23;break;case 26:f=27;break;case 27:g=_EnvGetNextDefgeneric(c,g);f=21;break;case 28:j=_EnvGetNextDefclass(c,0);f=29;break;case 29:f=0!=(j|0)?30:36;break;case 30:k=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[((j|0)+20|0)>>2]);_ResetProfileInfo(k);k=_EnvGetNextDefmessageHandler(c,j,0);f=31;break;case 31:f=0!=(k|0)?32:34;break;case 32:f=_GetDefmessageHandlerPointer(j,k);f=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+
16|0)>>2]+60|0)>>2]+48|0],HEAP32[(f+36|0)>>2]);_ResetProfileInfo(f);f=33;break;case 33:k=_EnvGetNextDefmessageHandler(c,j,k);f=31;break;case 34:f=35;break;case 35:j=_EnvGetNextDefclass(c,j);f=29;break;case 36:return;default:assert(0,"bad label: "+f)}}_ProfileResetCommand.X=1;
function _SetProfilePercentThresholdCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str103663|0,0,1)|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+28|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);c=13;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str103663|0,1,180,d)|
0)?5:6;break;case 5:a=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+28|0;a=(tempDoubleI32[0]=HEAP32[a>>2],tempDoubleI32[1]=HEAP32[a+4>>2],tempDoubleF64[0]);c=13;break;case 6:c=1==(HEAPU16[(d+4|0)>>1]&65535|0)?7:8;break;case 7:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]|0;c=9;break;case 8:e=HEAP32[(d+8|0)>>2]+16|0;e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]);c=9;break;case 9:c=0>e?11:10;break;case 10:c=100<e?11:12;break;case 11:_ExpectedTypeError1(b,STRING_TABLE.__str103663|
0,1,STRING_TABLE.__str273680|0);a=-1;c=13;break;case 12:a=_SetProfilePercentThreshold(b,e);c=13;break;case 13:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SetProfilePercentThresholdCommand.X=1;function _GetProfilePercentThresholdCommand(h){_EnvArgCountCheck(h,STRING_TABLE.__str133666|0,0,0);h=HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+28|0;return tempDoubleI32[0]=HEAP32[h>>2],tempDoubleI32[1]=HEAP32[h+4>>2],tempDoubleF64[0]}
function _ProfileClearFunction(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_GetFunctionList(c);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:f=_DeleteUserData(c,HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(a+36|0)>>2]);HEAP32[(a+36|0)>>2]=f;f=5;break;case 5:a=HEAP32[(a+32|0)>>2];f=3;break;case 6:b=0;f=7;break;case 7:f=150>(b|0)?8:12;break;case 8:f=0!=(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]|0)?9:10;break;case 9:f=_DeleteUserData(c,HEAP8[HEAP32[(HEAP32[(c+
16|0)>>2]+60|0)>>2]+48|0],HEAP32[(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]+52|0)>>2]);HEAP32[(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]+52|0)>>2]=f;f=10;break;case 10:f=11;break;case 11:b=b+1|0;f=7;break;case 12:return;default:assert(0,"bad label: "+f)}}_ProfileClearFunction.X=1;
function _Profile(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(_strcmp(d,STRING_TABLE.__str163669|0)|0)?3:4;break;case 3:c=_gentime();var e=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]|0;tempDoubleF64[0]=c;HEAP32[e>>2]=tempDoubleI32[0];HEAP32[e+4>>2]=tempDoubleI32[1];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+52|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+24|0)>>2]=1;c=11;break;case 4:c=0==(_strcmp(d,STRING_TABLE.__str173670|
0)|0)?5:6;break;case 5:c=_gentime();e=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]|0;tempDoubleF64[0]=c;HEAP32[e>>2]=tempDoubleI32[0];HEAP32[e+4>>2]=tempDoubleI32[1];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+52|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]=1;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+24|0)>>2]=2;c=10;break;case 6:c=0==(_strcmp(d,STRING_TABLE.__str183671|0)|0)?7:8;break;case 7:c=_gentime();e=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+8|0;tempDoubleF64[0]=c;HEAP32[e>>
2]=tempDoubleI32[0];HEAP32[e+4>>2]=tempDoubleI32[1];c=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+8|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);e=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]|0;e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]);e=c-e;c=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+16|0;e=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])+e;tempDoubleF64[0]=e;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+4>>
2]=tempDoubleI32[1];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+52|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+56|0)>>2]=0;c=9;break;case 8:a=0;c=12;break;case 9:c=10;break;case 10:c=11;break;case 11:a=1;c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}_Profile.X=1;
function _OutputUserFunctionsInfo(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_GetFunctionList(c);f=3;break;case 3:f=0!=(a|0)?4:6;break;case 4:f=c;var d=HEAP32[(HEAP32[(a|0)>>2]+16|0)>>2],e=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(a+36|0)>>2]);_OutputProfileInfo(f,d,e,0,0,0,0);f=5;break;case 5:a=HEAP32[(a+32|0)>>2];f=3;break;case 6:b=0;f=7;break;case 7:f=150>(b|0)?8:12;break;case 8:f=0!=(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]|0)?
9:10;break;case 9:f=c;d=HEAP32[(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]|0)>>2];e=_TestUserData(HEAP8[HEAP32[(HEAP32[(c+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(HEAP32[((HEAP32[(HEAP32[(c+16|0)>>2]+176|0)>>2]+16|0)+(b<<2)|0)>>2]+52|0)>>2]);_OutputProfileInfo(f,d,e,0,0,0,0);f=10;break;case 10:f=11;break;case 11:b=b+1|0;f=7;break;case 12:return;default:assert(0,"bad label: "+f)}}_OutputUserFunctionsInfo.X=1;
function _OutputConstructsCodeInfo(h){var f=STACKTOP;STACKTOP+=516;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f,k,l,m,n,o,p=f+512;a=h;HEAP32[p>>2]=STRING_TABLE.__str283681|0;b=_EnvGetNextDeffunction(a,0);c=3;break;case 3:c=0!=(b|0)?4:6;break;case 4:c=a;var q=_GetConstructNameString(b);g=_TestUserData(HEAP8[HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+48|0],HEAP32[((b|0)+20|0)>>2]);_OutputProfileInfo(c,q,g,0,
0,0,p);c=5;break;case 5:b=_EnvGetNextDeffunction(a,b);c=3;break;case 6:HEAP32[p>>2]=STRING_TABLE.__str293682|0;e=_EnvGetNextDefgeneric(a,0);c=7;break;case 7:c=0!=(e|0)?8:16;break;case 8:n=STRING_TABLE.__str303683|0;m=_GetConstructNameString(e);o=STRING_TABLE.__str303683|0;i=_EnvGetNextDefmethod(a,e,0);c=9;break;case 9:c=0!=(i|0)?10:14;break;case 10:g=_GetDefmethodPointer(e,i);_EnvGetDefmethodDescription(a,j|0,510,e,i);c=a;q=j|0;g=_TestUserData(HEAP8[HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(g+
40|0)>>2]);c=0!=(_OutputProfileInfo(c,q,g,n,m,o,p)|0)?11:12;break;case 11:o=m=n=0;c=12;break;case 12:c=13;break;case 13:i=_EnvGetNextDefmethod(a,e,i);c=9;break;case 14:c=15;break;case 15:e=_EnvGetNextDefgeneric(a,e);c=7;break;case 16:HEAP32[p>>2]=STRING_TABLE.__str313684|0;k=_EnvGetNextDefclass(a,0);c=17;break;case 17:c=0!=(k|0)?18:26;break;case 18:o=STRING_TABLE.__str303683|0;m=_GetConstructNameString(k);n=STRING_TABLE.__str303683|0;l=_EnvGetNextDefmessageHandler(a,k,0);c=19;break;case 19:c=0!=(l|
0)?20:24;break;case 20:g=_GetDefmessageHandlerPointer(k,l);c=a;q=_EnvGetDefmessageHandlerName(a,k,l);g=_TestUserData(HEAP8[HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+48|0],HEAP32[(g+36|0)>>2]);c=0!=(_OutputProfileInfo(c,q,g,n,m,o,p)|0)?21:22;break;case 21:o=m=n=0;c=22;break;case 22:c=23;break;case 23:l=_EnvGetNextDefmessageHandler(a,k,l);c=19;break;case 24:c=25;break;case 25:k=_EnvGetNextDefclass(a,k);c=17;break;case 26:HEAP32[p>>2]=STRING_TABLE.__str323685|0;d=_EnvGetNextDefrule(a,0);c=27;break;case 27:c=
0!=(d|0)?28:30;break;case 28:c=a;q=_GetConstructNameString(d);g=_TestUserData(HEAP8[HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+48|0],HEAP32[((d|0)+20|0)>>2]);_OutputProfileInfo(c,q,g,0,0,0,p);c=29;break;case 29:d=_EnvGetNextDefrule(a,d);c=27;break;case 30:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_OutputConstructsCodeInfo.X=1;
function _StartProfile(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;b=0!=(a|0)?4:3;break;case 3:b=e;HEAP32[b>>2]&=-3;b=8;break;case 4:j=_FetchUserData(d,HEAP8[HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+48|0],g);i=e;HEAP32[i>>2]=HEAP32[i>>2]&-3|2;i=e;HEAP32[i>>2]&=-2;i=_gentime();HEAP32[(e+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2];b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]|0)?5:6;break;case 5:b=i;var k=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
60|0)>>2]+60|0)>>2]+16|0,k=(tempDoubleI32[0]=HEAP32[k>>2],tempDoubleI32[1]=HEAP32[k+4>>2],tempDoubleF64[0]),k=b-=k;b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]+24|0;k=(tempDoubleI32[0]=HEAP32[b>>2],tempDoubleI32[1]=HEAP32[b+4>>2],tempDoubleF64[0])+k;tempDoubleF64[0]=k;HEAP32[b>>2]=tempDoubleI32[0];HEAP32[b+4>>2]=tempDoubleI32[1];b=6;break;case 6:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]=j;b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]+8|0;HEAP32[b>>2]=HEAP32[b>>
2]+1|0;b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]+16|0;tempDoubleF64[0]=i;HEAP32[b>>2]=tempDoubleI32[0];HEAP32[b+4>>2]=tempDoubleI32[1];b=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]+12|0)>>2]&1|0)?8:7;break;case 7:b=e;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=e+4|0;tempDoubleF64[0]=i;HEAP32[b>>2]=tempDoubleI32[0];HEAP32[b+4>>2]=tempDoubleI32[1];b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+60|0)>>2]+60|0)>>2]+12|0;HEAP32[b>>2]=HEAP32[b>>2]&-2|1;b=8;break;case 8:return;default:assert(0,
"bad label: "+b)}}_StartProfile.X=1;
function _ResetProfileInfo(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(c|0)?3:4;break;case 3:f=5;break;case 4:HEAP32[(c+8|0)>>2]=0;f=c+12|0;HEAP32[f>>2]&=-2;f=c+16|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];f=c+24|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];f=c+32|0;tempDoubleF64[0]=0;HEAP32[f>>2]=tempDoubleI32[0];HEAP32[f+4>>2]=tempDoubleI32[1];f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}
function _SetProfilePercentThreshold(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0>d?4:3;break;case 3:c=100<d?4:5;break;case 4:a=-1;c=6;break;case 5:c=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+28|0;c=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0]);a=HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+28|0;tempDoubleF64[0]=d;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];a=c;c=6;break;case 6:return a;default:assert(0,"bad label: "+c)}}
function _GetProfilePercentThreshold(h){h=HEAP32[(HEAP32[(h+16|0)>>2]+60|0)>>2]+28|0;return tempDoubleI32[0]=HEAP32[h>>2],tempDoubleI32[1]=HEAP32[h+4>>2],tempDoubleF64[0]}
function _SetProfileOutputString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+64|0)>>2];c=5;break;case 4:c=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+60|0)>>2]+64|0)>>2]=d;a=c;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _EndProfile(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0!=(HEAPU32[b>>2]>>>1&1|0)?4:3;break;case 3:c=9;break;case 4:d=_gentime();c=0!=(HEAP32[b>>2]&1|0)?5:6;break;case 5:c=d;var e=b+4|0,e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]),e=c-=e;c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+60|0)>>2]+32|0;e=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])+e;tempDoubleF64[0]=e;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+
4>>2]=tempDoubleI32[1];c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+60|0)>>2]+12|0;HEAP32[c>>2]&=-2;c=6;break;case 6:c=d;e=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+60|0)>>2]+16|0;e=(tempDoubleI32[0]=HEAP32[e>>2],tempDoubleI32[1]=HEAP32[e+4>>2],tempDoubleF64[0]);e=c-e;c=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+60|0)>>2]+24|0;e=(tempDoubleI32[0]=HEAP32[c>>2],tempDoubleI32[1]=HEAP32[c+4>>2],tempDoubleF64[0])+e;tempDoubleF64[0]=e;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+4>>2]=tempDoubleI32[1];
c=0!=(HEAP32[(b+12|0)>>2]|0)?7:8;break;case 7:c=HEAP32[(b+12|0)>>2]+16|0;tempDoubleF64[0]=d;HEAP32[c>>2]=tempDoubleI32[0];HEAP32[c+4>>2]=tempDoubleI32[1];c=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+60|0)>>2]+60|0)>>2]=HEAP32[(b+12|0)>>2];c=9;break;case 9:return;default:assert(0,"bad label: "+c)}}_EndProfile.X=1;
function _OutputProfileInfo(h,f,c,a,b,d,e){var g=STACKTOP;STACKTOP+=512;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o,p,q,r,s,t=g;k=h;l=f;m=c;n=a;o=b;p=d;q=e;s=r=0;i=0==(m|0)?3:4;break;case 3:j=0;i=26;break;case 4:i=0==(HEAP32[(m+8|0)>>2]|0)?5:6;break;case 5:j=0;i=26;break;case 6:i=HEAP32[(HEAP32[(k+16|0)>>2]+60|0)>>2]+16|0;i=0!=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0])?
7:12;break;case 7:r=m+24|0;r=100*(tempDoubleI32[0]=HEAP32[r>>2],tempDoubleI32[1]=HEAP32[r+4>>2],tempDoubleF64[0]);i=HEAP32[(HEAP32[(k+16|0)>>2]+60|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],tempDoubleF64[0]);r/=i;i=0.0050>r?8:9;break;case 8:r=0;i=9;break;case 9:s=m+32|0;s=100*(tempDoubleI32[0]=HEAP32[s>>2],tempDoubleI32[1]=HEAP32[s+4>>2],tempDoubleF64[0]);i=HEAP32[(HEAP32[(k+16|0)>>2]+60|0)>>2]+16|0;i=(tempDoubleI32[0]=HEAP32[i>>2],tempDoubleI32[1]=HEAP32[i+4>>2],
tempDoubleF64[0]);s/=i;i=0.0050>s?10:11;break;case 10:s=0;i=11;break;case 11:i=12;break;case 12:i=r;var u=HEAP32[(HEAP32[(k+16|0)>>2]+60|0)>>2]+28|0,u=(tempDoubleI32[0]=HEAP32[u>>2],tempDoubleI32[1]=HEAP32[u+4>>2],tempDoubleF64[0]);i=i<u?13:14;break;case 13:j=0;i=26;break;case 14:i=0!=(q|0)?15:17;break;case 15:i=0!=(HEAP32[q>>2]|0)?16:17;break;case 16:_EnvPrintRouter(k,STRING_TABLE.__str203673|0,HEAP32[q>>2]);HEAP32[q>>2]=0;i=17;break;case 17:i=0!=(n|0)?18:19;break;case 18:_EnvPrintRouter(k,STRING_TABLE.__str203673|
0,n);i=19;break;case 19:i=0!=(o|0)?20:21;break;case 20:_EnvPrintRouter(k,STRING_TABLE.__str203673|0,o);i=21;break;case 21:i=0!=(p|0)?22:23;break;case 22:_EnvPrintRouter(k,STRING_TABLE.__str203673|0,p);i=23;break;case 23:i=40<=_strlen(l)>>>0?24:25;break;case 24:_EnvPrintRouter(k,STRING_TABLE.__str203673|0,l);_EnvPrintRouter(k,STRING_TABLE.__str203673|0,STRING_TABLE.__str303683|0);l=__str333686|0;i=25;break;case 25:j=t|0;i=HEAP32[(HEAP32[(HEAP32[(k+16|0)>>2]+60|0)>>2]+64|0)>>2];var u=l,v=HEAP32[(m+
8|0)>>2],w=m+24|0,w=(tempDoubleI32[0]=HEAP32[w>>2],tempDoubleI32[1]=HEAP32[w+4>>2],tempDoubleF64[0]),x=r,y=m+32|0,y=(tempDoubleI32[0]=HEAP32[y>>2],tempDoubleI32[1]=HEAP32[y+4>>2],tempDoubleF64[0]),A=s;_sprintf(j,i,(tempInt=STACKTOP,STACKTOP+=40,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=u,HEAP32[tempInt+4>>2]=v,tempDoubleF64[0]=w,HEAP32[tempInt+8>>2]=tempDoubleI32[0],HEAP32[tempInt+8+4>>2]=tempDoubleI32[1],tempDoubleF64[0]=x,HEAP32[tempInt+16>>2]=tempDoubleI32[0],
HEAP32[tempInt+16+4>>2]=tempDoubleI32[1],tempDoubleF64[0]=y,HEAP32[tempInt+24>>2]=tempDoubleI32[0],HEAP32[tempInt+24+4>>2]=tempDoubleI32[1],tempDoubleF64[0]=A,HEAP32[tempInt+32>>2]=tempDoubleI32[0],HEAP32[tempInt+32+4>>2]=tempDoubleI32[1],tempInt));_EnvPrintRouter(k,STRING_TABLE.__str203673|0,t|0);j=1;i=26;break;case 26:return h=j,STACKTOP=g,h;default:assert(0,"bad label: "+i)}}_OutputProfileInfo.X=1;
function _ReorderPatterns(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;b=h;d=f;e=c;g=_GetLHSParseNode(b);HEAP16[(g|0)>>1]=151;a=0==(d|0)?3:4;break;case 3:a=_CreateInitialPattern(b,0);HEAP32[(g+64|0)>>2]=a;a=5;break;case 4:HEAP32[(g+64|0)>>2]=d;a=5;break;case 5:g=_ReorderDriver(b,g,e,1);g=_ReorderDriver(b,g,e,2);a=152==(HEAPU16[(g|0)>>1]&65535|0)?6:16;break;case 6:j=HEAP32[(g+64|0)>>2];k=0;a=7;break;case 7:a=0!=(j|0)?8:15;break;case 8:a=151!=(HEAPU16[(j|0)>>1]&65535|0)?9:13;break;case 9:d=
_GetLHSParseNode(b);HEAP16[(d|0)>>1]=151;HEAP32[(d+64|0)>>2]=j;HEAP32[(d+68|0)>>2]=HEAP32[(j+68|0)>>2];HEAP32[(j+68|0)>>2]=0;a=0==(k|0)?10:11;break;case 10:HEAP32[(g+64|0)>>2]=d;a=12;break;case 11:HEAP32[(k+68|0)>>2]=d;a=12;break;case 12:j=d;a=13;break;case 13:a=14;break;case 14:k=j;j=HEAP32[(j+68|0)>>2];a=7;break;case 15:a=19;break;case 16:a=151!=(HEAPU16[(g|0)>>1]&65535|0)?17:18;break;case 17:d=g;g=_GetLHSParseNode(b);HEAP16[(g|0)>>1]=151;HEAP32[(g+64|0)>>2]=d;a=18;break;case 18:a=19;break;case 19:_AddInitialPatterns(b,
g);a=152==(HEAPU16[(g|0)>>1]&65535|0)?20:21;break;case 20:d=HEAP32[(g+64|0)>>2];a=22;break;case 21:d=g;a=22;break;case 22:a=23;break;case 23:a=0!=(d|0)?24:32;break;case 24:l=1;i=HEAP32[(d+64|0)>>2];a=25;break;case 25:a=0!=(i|0)?26:30;break;case 26:a=0!=(HEAPU32[(i+8|0)>>2]>>>5&1|0)?27:28;break;case 27:a=l;l=a+1|0;var m=i+8|0;HEAP32[m>>2]=HEAP32[m>>2]&-8129|(a&127)<<6;a=28;break;case 28:a=29;break;case 29:i=HEAP32[(i+68|0)>>2];a=25;break;case 30:_AssignPatternIndices(HEAP32[(d+64|0)>>2],1);a=31;break;
case 31:d=HEAP32[(d+68|0)>>2];a=23;break;case 32:return g;default:assert(0,"bad label: "+a)}}_ReorderPatterns.X=1;
function _GetLHSParseNode(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,72);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return h=a,HEAP16[(h|0)>>1]=173,HEAP32[(h+4|0)>>2]=0,f=h+8|0,HEAP32[f>>2]&=-2,f=h+8|0,HEAP32[f>>2]&=-9,f=h+8|0,HEAP32[f>>2]&=-16385,f=h+8|0,HEAP32[f>>2]&=-5,HEAP16[(h+10|0)>>1]=0,HEAP16[(h+12|0)>>1]=0,HEAP16[(h+14|0)>>1]=0,HEAP16[(h+16|0)>>1]=0,f=h+8|0,HEAP32[f>>2]&=-3,f=h+8|0,HEAP32[f>>2]&=-17,f=h+8|0,HEAP32[f>>2]=HEAP32[f>>2]&-33|32,HEAP32[(h+20|0)>>2]=0,HEAP32[(h+24|0)>>2]=0,HEAP32[(h+28|0)>>2]=0,HEAP16[(h+32|0)>>1]=-1,HEAP16[(h+34|0)>>1]=-1,HEAP32[(h+
36|0)>>2]=0,HEAP16[(h+40|0)>>1]=-1,HEAP32[(h+44|0)>>2]=1,HEAP32[(h+48|0)>>2]=1,HEAP32[(h+60|0)>>2]=0,HEAP32[(h+52|0)>>2]=0,HEAP32[(h+56|0)>>2]=0,HEAP32[(h+64|0)>>2]=0,HEAP32[(h+68|0)>>2]=0,h;default:assert(0,"bad label: "+f)}}_GetLHSParseNode.X=1;
function _CreateInitialPattern(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=_GetLHSParseNode(b);HEAP16[(e|0)>>1]=150;c=e+8|0;HEAP32[c>>2]&=-33;HEAP32[(e+68|0)>>2]=0;c=0==(d|0)?3:4;break;case 3:d=_FindPatternParser(b,STRING_TABLE.__str13692|0);c=4;break;case 4:c=0!=(d|0)?5:6;break;case 5:a=FUNCTION_TABLE[HEAP32[(d+80|0)>>2]](b);HEAP32[(e+64|0)>>2]=a;_PropagatePatternType(e,d);a=e;c=13;break;case 6:d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+76|0)>>2]|0)>>2];c=7;break;case 7:c=0!=(d|0)?8:12;
break;case 8:c=0!=(HEAP32[(d+80|0)>>2]|0)?9:10;break;case 9:a=FUNCTION_TABLE[HEAP32[(d+80|0)>>2]](b);HEAP32[(e+64|0)>>2]=a;_PropagatePatternType(e,d);a=e;c=13;break;case 10:c=11;break;case 11:d=HEAP32[(d+92|0)>>2];c=7;break;case 12:_SystemError(b,STRING_TABLE.__str3691|0,2);a=0;c=13;break;case 13:return a;default:assert(0,"bad label: "+c)}}_CreateInitialPattern.X=1;
function _ReorderDriver(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o=b;e=h;g=f;i=c;j=a;HEAP32[i>>2]=0;n=1;d=3;break;case 3:d=0!=(n|0)?4:29;break;case 4:n=0;d=151==(HEAPU16[(g|0)>>1]&65535|0)?7:5;break;case 5:d=153==(HEAPU16[(g|0)>>1]&65535|0)?7:6;break;case 6:d=152==(HEAPU16[(g|0)>>1]&65535|0)?7:15;break;case 7:d=1==(j|0)?8:9;break;case 8:g=_PerformReorder1(e,g,o);
d=10;break;case 9:g=_PerformReorder2(e,g,o);d=10;break;case 10:d=0!=(HEAP32[o>>2]|0)?11:12;break;case 11:n=HEAP32[i>>2]=1;d=12;break;case 12:g=_CompressCEs(e,g,o);d=0!=(HEAP32[o>>2]|0)?13:14;break;case 13:n=HEAP32[i>>2]=1;d=14;break;case 14:d=15;break;case 15:l=0;k=HEAP32[(g+64|0)>>2];d=16;break;case 16:d=0!=(k|0)?17:28;break;case 17:m=HEAP32[(k+68|0)>>2];d=151==(HEAPU16[(k|0)>>1]&65535|0)?20:18;break;case 18:d=153==(HEAPU16[(k|0)>>1]&65535|0)?20:19;break;case 19:d=152==(HEAPU16[(k|0)>>1]&65535|0)?
20:26;break;case 20:d=0==(l|0)?21:22;break;case 21:HEAP32[(k+68|0)>>2]=0;l=_ReorderDriver(e,k,o,j);HEAP32[(g+64|0)>>2]=l;HEAP32[(HEAP32[(g+64|0)>>2]+68|0)>>2]=m;l=HEAP32[(g+64|0)>>2];d=23;break;case 22:HEAP32[(k+68|0)>>2]=0;d=_ReorderDriver(e,k,o,j);HEAP32[(l+68|0)>>2]=d;HEAP32[(HEAP32[(l+68|0)>>2]+68|0)>>2]=m;l=HEAP32[(l+68|0)>>2];d=23;break;case 23:d=0!=(HEAP32[o>>2]|0)?24:25;break;case 24:n=HEAP32[i>>2]=1;d=25;break;case 25:d=27;break;case 26:l=k;d=27;break;case 27:k=m;d=16;break;case 28:d=3;break;
case 29:return h=g,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ReorderDriver.X=1;
function _AddInitialPatterns(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;c=152==(HEAPU16[(b|0)>>1]&65535|0)?3:8;break;case 3:d=HEAP32[(b+64|0)>>2];c=4;break;case 4:c=0!=(d|0)?5:7;break;case 5:_AddInitialPatterns(a,d);c=6;break;case 6:d=HEAP32[(d+68|0)>>2];c=4;break;case 7:c=21;break;case 8:e=0;d=HEAP32[(b+64|0)>>2];c=9;break;case 9:c=0!=(d|0)?10:14;break;case 10:c=150==(HEAPU16[(d|0)>>1]&65535|0)?11:12;break;case 11:e=HEAP32[(d+28|0)>>2];c=14;break;case 12:c=13;break;case 13:d=HEAP32[(d+
68|0)>>2];c=9;break;case 14:c=0!=(HEAP32[(HEAP32[(b+64|0)>>2]+8|0)>>2]&1|0)?17:15;break;case 15:c=154==(HEAPU16[(HEAP32[(b+64|0)>>2]|0)>>1]&65535|0)?17:16;break;case 16:c=1<(HEAP32[(HEAP32[(b+64|0)>>2]+44|0)>>2]|0)?17:20;break;case 17:d=_CreateInitialPattern(a,e);if(0!=(HEAPU32[(b+8|0)>>2]>>>1&1|0)){var g=1;c=19}else c=18;break;case 18:g=0!=(HEAPU32[(HEAP32[(b+64|0)>>2]+8|0)>>2]>>>1&1|0);c=19;break;case 19:c=d+8|0;HEAP32[c>>2]=HEAP32[c>>2]&-3|(g&1)<<1;HEAP32[(d+68|0)>>2]=HEAP32[(b+64|0)>>2];HEAP32[(b+
64|0)>>2]=d;c=20;break;case 20:_AddRemainingInitialPatterns(a,HEAP32[(b+64|0)>>2],e);c=21;break;case 21:return;default:assert(0,"bad label: "+c)}}_AddInitialPatterns.X=1;
function _AssignPatternIndices(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=HEAP32[(b+44|0)>>2];c=3;break;case 3:c=0!=(b|0)?4:23;break;case 4:c=(HEAP32[(b+44|0)>>2]|0)>(e|0)?5:8;break;case 5:b=_AssignPatternIndices(b,d);c=(HEAP32[(b+48|0)>>2]|0)<(e|0)?6:7;break;case 6:a=b;c=24;break;case 7:d=d+1&65535;c=22;break;case 8:c=154==(HEAPU16[(b|0)>>1]&65535|0)?9:12;break;case 9:c=(HEAP32[(b+48|0)>>2]|0)<(e|0)?10:11;break;case 10:a=b;c=24;break;case 11:c=21;break;case 12:c=150==(HEAPU16[(b|
0)>>1]&65535|0)?13:20;break;case 13:HEAP16[(b+32|0)>>1]=d;g=HEAP32[(b+64|0)>>2];c=14;break;case 14:c=0!=(g|0)?15:17;break;case 15:HEAP16[(g+32|0)>>1]=d;_PropagateIndexSlotPatternValues(g,HEAP16[(g+32|0)>>1],HEAP16[(g+34|0)>>1],HEAP32[(g+36|0)>>2],HEAP16[(g+40|0)>>1]);c=16;break;case 16:g=HEAP32[(g+64|0)>>2];c=14;break;case 17:c=(HEAP32[(b+48|0)>>2]|0)<(e|0)?18:19;break;case 18:a=b;c=24;break;case 19:d=d+1&65535;c=20;break;case 20:c=21;break;case 21:c=22;break;case 22:b=HEAP32[(b+68|0)>>2];c=3;break;
case 23:a=0;c=24;break;case 24:return a;default:assert(0,"bad label: "+c)}}_AssignPatternIndices.X=1;
function _AddRemainingInitialPatterns(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;g=d;a=3;break;case 3:a=0!=(g|0)?4:6;break;case 4:a=g+8|0;HEAP32[a>>2]&=-8193;a=5;break;case 5:g=HEAP32[(g+68|0)>>2];a=3;break;case 6:j=0;a=7;break;case 7:a=0!=(d|0)?8:38;break;case 8:a=0!=(HEAP32[(d+8|0)>>2]&1|0)?9:11;break;case 9:a=0!=(HEAPU32[(d+8|0)>>2]>>>13&1|0)?10:11;break;case 10:g=0;a=22;break;case 11:a=154==(HEAPU16[(d|0)>>1]&65535|0)?13:12;break;case 12:a=0!=(HEAP32[(d+8|0)>>2]&1|0)?
13:20;break;case 13:a=0==(HEAPU32[(d+8|0)>>2]>>>13&1|0)?14:20;break;case 14:a=0!=(HEAP32[(d+8|0)>>2]&1|0)?15:16;break;case 15:i=_CreateInitialPattern(b,HEAP32[(d+28|0)>>2]);a=17;break;case 16:i=_CreateInitialPattern(b,e);a=17;break;case 17:a=i+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(d+8|0)>>2]>>>1&1)<<1;HEAP32[(i+44|0)>>2]=HEAP32[(d+44|0)>>2];HEAP32[(i+48|0)>>2]=HEAP32[(d+44|0)>>2];a=0==(j|0)?18:19;break;case 18:_SystemError(b,STRING_TABLE.__str3691|0,3);a=19;break;case 19:HEAP32[(j+68|0)>>2]=
i;HEAP32[(i+68|0)>>2]=d;d=i;g=HEAP32[(d+68|0)>>2];a=21;break;case 20:g=HEAP32[(d+68|0)>>2];a=21;break;case 21:a=22;break;case 22:a=23;break;case 23:a=0!=(g|0)?24:37;break;case 24:a=(HEAP32[(g+44|0)>>2]|0)!=(HEAP32[(d+44|0)>>2]|0)?25:26;break;case 25:a=36;break;case 26:a=0!=(HEAP32[(g+8|0)>>2]&1|0)?27:28;break;case 27:a=g+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-8193|8192;a=34;break;case 28:a=150==(HEAPU16[(g|0)>>1]&65535|0)?29:30;break;case 29:a=37;break;case 30:a=154==(HEAPU16[(g|0)>>1]&65535|0)?31:32;break;
case 31:a=g+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-8193|8192;HEAP32[(g+28|0)>>2]=HEAP32[(d+28|0)>>2];a=32;break;case 32:a=33;break;case 33:a=34;break;case 34:a=35;break;case 35:a=36;break;case 36:g=HEAP32[(g+68|0)>>2];a=23;break;case 37:j=d;d=HEAP32[(d+68|0)>>2];a=7;break;case 38:return;default:assert(0,"bad label: "+a)}}_AddRemainingInitialPatterns.X=1;
function _CopyLHSParseNodes(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2]|0)?5:6;break;case 5:var e=_genalloc(b,72);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:c=e;_CopyLHSParseNode(b,c,d,1);a=_CopyLHSParseNodes(b,HEAP32[(d+64|0)>>2]);HEAP32[(c+64|0)>>2]=a;a=_CopyLHSParseNodes(b,HEAP32[(d+68|0)>>2]);HEAP32[(c+68|0)>>2]=a;a=c;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_CopyLHSParseNodes.X=1;
function _CopyLHSParseNode(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=a;HEAP16[(e|0)>>1]=HEAP16[(g|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(g+4|0)>>2];var i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-2|HEAP32[(g+8|0)>>2]&1;i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-9|(HEAPU32[(g+8|0)>>2]>>>3&1)<<3;i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-16385|(HEAPU32[(g+8|0)>>2]>>>14&1)<<14;i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-5|(HEAPU32[(g+8|0)>>2]>>>2&1)<<2;HEAP16[(e+10|0)>>1]=HEAP16[(g+10|0)>>1];HEAP16[(e+12|0)>>1]=HEAP16[(g+
12|0)>>1];HEAP16[(e+14|0)>>1]=HEAP16[(g+14|0)>>1];HEAP16[(e+16|0)>>1]=HEAP16[(g+16|0)>>1];i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-3|(HEAPU32[(g+8|0)>>2]>>>1&1)<<1;i=e+8|0;HEAP32[i>>2]=HEAP32[i>>2]&-33|(HEAPU32[(g+8|0)>>2]>>>5&1)<<5;HEAP32[(e+24|0)>>2]=HEAP32[(g+24|0)>>2];HEAP32[(e+28|0)>>2]=HEAP32[(g+28|0)>>2];HEAP16[(e+32|0)>>1]=HEAP16[(g+32|0)>>1];HEAP16[(e+34|0)>>1]=HEAP16[(g+34|0)>>1];HEAP32[(e+36|0)>>2]=HEAP32[(g+36|0)>>2];HEAP16[(e+40|0)>>1]=HEAP16[(g+40|0)>>1];HEAP32[(e+44|0)>>2]=HEAP32[(g+44|0)>>
2];HEAP32[(e+48|0)>>2]=HEAP32[(g+48|0)>>2];b=0!=(b|0)?3:13;break;case 3:b=_CopyExpression(d,HEAP32[(g+52|0)>>2]);HEAP32[(e+52|0)>>2]=b;b=0==(HEAP32[(g+60|0)>>2]|0)?4:5;break;case 4:HEAP32[(e+60|0)>>2]=0;b=9;break;case 5:b=0==(HEAP32[(HEAP32[(g+28|0)>>2]+68|0)>>2]|0)?6:7;break;case 6:HEAP32[(e+60|0)>>2]=HEAP32[(g+60|0)>>2];b=8;break;case 7:b=FUNCTION_TABLE[HEAP32[(HEAP32[(g+28|0)>>2]+68|0)>>2]](d,HEAP32[(g+60|0)>>2]);HEAP32[(e+60|0)>>2]=b;b=8;break;case 8:b=9;break;case 9:b=_CopyLHSParseNodes(d,HEAP32[(g+
56|0)>>2]);HEAP32[(e+56|0)>>2]=b;b=_CopyConstraintRecord(d,HEAP32[(g+20|0)>>2]);HEAP32[(e+20|0)>>2]=b;b=0!=(HEAP32[(e+20|0)>>2]|0)?10:11;break;case 10:b=e+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-17|16;b=12;break;case 11:b=e+8|0;HEAP32[b>>2]&=-17;b=12;break;case 12:b=14;break;case 13:HEAP32[(e+52|0)>>2]=HEAP32[(g+52|0)>>2];HEAP32[(e+60|0)>>2]=HEAP32[(g+60|0)>>2];HEAP32[(e+56|0)>>2]=HEAP32[(g+56|0)>>2];b=e+8|0;HEAP32[b>>2]&=-17;HEAP32[(e+20|0)>>2]=HEAP32[(g+20|0)>>2];b=14;break;case 14:return;default:assert(0,
"bad label: "+b)}}_CopyLHSParseNode.X=1;
function _ReturnLHSParseNodes(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(b|0)?3:9;break;case 3:_ReturnExpression(a,HEAP32[(b+52|0)>>2]);_ReturnLHSParseNodes(a,HEAP32[(b+64|0)>>2]);_ReturnLHSParseNodes(a,HEAP32[(b+68|0)>>2]);_ReturnLHSParseNodes(a,HEAP32[(b+56|0)>>2]);c=0!=(HEAPU32[(b+8|0)>>2]>>>4&1|0)?4:5;break;case 4:_RemoveConstraint(a,HEAP32[(b+20|0)>>2]);c=5;break;case 5:c=0!=(HEAP32[(b+60|0)>>2]|0)?6:8;break;case 6:c=0!=(HEAP32[(HEAP32[(b+28|0)>>2]+64|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(HEAP32[(b+
28|0)>>2]+64|0)>>2]](a,HEAP32[(b+60|0)>>2]);c=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+288|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=9;break;case 9:return;default:assert(0,"bad label: "+c)}}_ReturnLHSParseNodes.X=1;
function _ExpressionToLHSParseNodes(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=13;break;case 4:e=_GetLHSParseNode(b);HEAP16[(e|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(e+4|0)>>2]=HEAP32[(d+4|0)>>2];c=_ExpressionToLHSParseNodes(b,HEAP32[(d+12|0)>>2]);HEAP32[(e+64|0)>>2]=c;c=_ExpressionToLHSParseNodes(b,HEAP32[(d+8|0)>>2]);HEAP32[(e+68|0)>>2]=c;c=30!=(HEAPU16[(e|0)>>1]&65535|0)?5:6;break;case 5:a=e;c=13;break;case 6:i=HEAP32[(e+4|0)>>2];g=HEAP32[(e+68|0)>>
2];j=1;c=7;break;case 7:c=0!=(g|0)?8:12;break;case 8:c=35==(HEAPU16[(g|0)>>1]&65535|0)?9:10;break;case 9:c=_GetNthRestriction(i,j);c=_ArgumentTypeToConstraintRecord(b,c);HEAP32[(g+20|0)>>2]=c;c=g+8|0;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=10;break;case 10:c=11;break;case 11:g=HEAP32[(g+64|0)>>2];j=j+1|0;c=7;break;case 12:a=e;c=13;break;case 13:return a;default:assert(0,"bad label: "+c)}}_ExpressionToLHSParseNodes.X=1;
function _LHSParseNodesToExpression(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(d|0)?3:4;break;case 3:a=0;c=8;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?5:6;break;case 5:var e=_genalloc(b,16);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:c=e;HEAP16[(c|0)>>1]=HEAP16[(d|0)>>1];HEAP32[(c+4|0)>>2]=HEAP32[(d+4|0)>>2];a=_LHSParseNodesToExpression(b,HEAP32[(d+64|0)>>2]);HEAP32[(c+12|0)>>2]=a;a=_LHSParseNodesToExpression(b,HEAP32[(d+68|0)>>2]);HEAP32[(c+8|0)>>2]=a;a=c;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}_LHSParseNodesToExpression.X=1;
function _PropagateIndexSlotPatternValues(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;k=b;d=0==(e|0)?3:4;break;case 3:d=22;break;case 4:d=0!=(HEAPU32[(e+8|0)>>2]>>>2&1|0)?5:12;break;case 5:HEAP16[(e+32|0)>>1]=g;d=0<(i<<16>>16|0)?6:7;break;case 6:HEAP16[(e+34|0)>>1]=i;d=7;break;case 7:HEAP32[(e+36|0)>>2]=j;HEAP16[(e+40|0)>>1]=k;l=HEAP32[(e+68|0)>>2];d=8;break;case 8:d=0!=(l|0)?9:11;break;case 9:HEAP16[(l+32|0)>>1]=g;HEAP32[(l+36|0)>>2]=j;_PropagateIndexSlotPatternValues(l,
g,HEAP16[(l+34|0)>>1],j,k);d=10;break;case 10:l=HEAP32[(l+64|0)>>2];d=8;break;case 11:d=22;break;case 12:e=HEAP32[(e+68|0)>>2];d=13;break;case 13:d=0!=(e|0)?14:22;break;case 14:m=e;d=15;break;case 15:d=0!=(m|0)?16:20;break;case 16:HEAP16[(m+32|0)>>1]=g;d=0<(i<<16>>16|0)?17:18;break;case 17:HEAP16[(m+34|0)>>1]=i;d=18;break;case 18:HEAP32[(m+36|0)>>2]=j;HEAP16[(m+40|0)>>1]=k;d=19;break;case 19:m=HEAP32[(m+64|0)>>2];d=15;break;case 20:d=21;break;case 21:e=HEAP32[(e+68|0)>>2];d=13;break;case 22:return;
default:assert(0,"bad label: "+d)}}_PropagateIndexSlotPatternValues.X=1;
function _PerformReorder1(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m;b=h;d=f;e=c;m=1;HEAP32[e>>2]=0;a=3;break;case 3:a=0!=(m|0)?4:33;break;case 4:m=0;l=1;i=0;g=HEAP32[(d+64|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:32;break;case 6:a=151==(HEAPU16[(d|0)>>1]&65535|0)?7:9;break;case 7:a=152==(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:d=_ReverseAndOr(b,d,HEAP32[(g+64|0)>>2],l);m=1;HEAP32[e>>2]=1;a=32;break;case 9:a=153==(HEAPU16[(d|0)>>1]&65535|0)?10:15;break;case 10:a=152==(HEAPU16[(g|
0)>>1]&65535|0)?11:15;break;case 11:m=1;HEAP32[e>>2]=1;k=HEAP32[(g+64|0)>>2];HEAP32[(g+64|0)>>2]=0;HEAP32[(g+68|0)>>2]=0;_ReturnLHSParseNodes(b,g);HEAP16[(d|0)>>1]=151;HEAP32[(d+64|0)>>2]=k;a=12;break;case 12:a=0!=(k|0)?13:14;break;case 13:a=_GetLHSParseNode(b);_CopyLHSParseNode(b,a,k,0);HEAP32[(a+64|0)>>2]=HEAP32[(k+64|0)>>2];HEAP32[(a+68|0)>>2]=0;HEAP16[(k|0)>>1]=153;var n=k+8|0;HEAP32[n>>2]&=-2;n=k+8|0;HEAP32[n>>2]&=-3;HEAP32[(k+4|0)>>2]=0;HEAP32[(k+56|0)>>2]=0;HEAP32[(k+64|0)>>2]=a;k=HEAP32[(k+
68|0)>>2];a=12;break;case 14:a=32;break;case 15:a=152==(HEAPU16[(d|0)>>1]&65535|0)?16:17;break;case 16:a=152==(HEAPU16[(g|0)>>1]&65535|0)?19:17;break;case 17:a=151==(HEAPU16[(d|0)>>1]&65535|0)?18:28;break;case 18:a=151==(HEAPU16[(g|0)>>1]&65535|0)?19:28;break;case 19:a=0!=(HEAPU32[(g+8|0)>>2]>>>1&1|0)?20:21;break;case 20:a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;a=21;break;case 21:m=1;HEAP32[e>>2]=1;k=HEAP32[(g+64|0)>>2];j=HEAP32[(g+68|0)>>2];HEAP32[(g+64|0)>>2]=0;HEAP32[(g+68|0)>>2]=0;_ReturnLHSParseNodes(b,
g);a=0==(i|0)?22:23;break;case 22:HEAP32[(d+64|0)>>2]=k;a=24;break;case 23:HEAP32[(i+68|0)>>2]=k;a=24;break;case 24:g=k;a=25;break;case 25:a=0!=(HEAP32[(k+68|0)>>2]|0)?26:27;break;case 26:k=HEAP32[(k+68|0)>>2];a=25;break;case 27:HEAP32[(k+68|0)>>2]=j;a=29;break;case 28:l=l+1|0;i=g;g=HEAP32[(g+68|0)>>2];a=29;break;case 29:a=30;break;case 30:a=31;break;case 31:a=5;break;case 32:a=3;break;case 33:return d;default:assert(0,"bad label: "+a)}}_PerformReorder1.X=1;
function _PerformReorder2(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;i=1;HEAP32[e>>2]=0;a=3;break;case 3:a=0!=(i|0)?4:17;break;case 4:i=0;g=HEAP32[(d+64|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:16;break;case 6:a=153==(HEAPU16[(d|0)>>1]&65535|0)?7:9;break;case 7:a=150==(HEAPU16[(g|0)>>1]&65535|0)?8:9;break;case 8:i=1;HEAP32[e>>2]=1;_CopyLHSParseNode(b,d,g,0);a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|1;HEAP32[(d+64|0)>>2]=HEAP32[(g+64|0)>>2];HEAP32[(g+52|0)>>2]=0;HEAP32[(g+56|0)>>2]=0;
HEAP32[(g+60|0)>>2]=0;HEAP32[(g+64|0)>>2]=0;HEAP32[(g+68|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=16;break;case 9:a=153==(HEAPU16[(d|0)>>1]&65535|0)?10:13;break;case 10:a=151==(HEAPU16[(g|0)>>1]&65535|0)?12:11;break;case 11:a=153==(HEAPU16[(g|0)>>1]&65535|0)?12:13;break;case 12:i=1;HEAP32[e>>2]=1;HEAP16[(d|0)>>1]=HEAP16[(g|0)>>1];a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(g+8|0)>>2]&1;HEAP32[(d+4|0)>>2]=HEAP32[(g+4|0)>>2];a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(g+8|0)>>2]>>>1&1)<<1;HEAP32[(d+
64|0)>>2]=HEAP32[(g+64|0)>>2];HEAP32[(g+64|0)>>2]=0;HEAP32[(g+68|0)>>2]=0;_ReturnLHSParseNodes(b,g);_IncrementNandDepth(b,HEAP32[(d+64|0)>>2],1);a=16;break;case 13:g=HEAP32[(g+68|0)>>2];a=14;break;case 14:a=15;break;case 15:a=5;break;case 16:a=3;break;case 17:return d;default:assert(0,"bad label: "+a)}}_PerformReorder2.X=1;
function _CompressCEs(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m;b=h;d=f;e=c;l=1;HEAP32[e>>2]=0;a=3;break;case 3:a=0!=(l|0)?4:41;break;case 4:i=l=0;g=HEAP32[(d+64|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:40;break;case 6:a=152==(HEAPU16[(d|0)>>1]&65535|0)?7:8;break;case 7:a=152==(HEAPU16[(g|0)>>1]&65535|0)?10:8;break;case 8:a=151==(HEAPU16[(d|0)>>1]&65535|0)?9:19;break;case 9:a=151==(HEAPU16[(g|0)>>1]&65535|0)?10:19;break;case 10:a=0!=(HEAPU32[(g+8|0)>>2]>>>1&1|0)?11:12;break;case 11:a=
d+8|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|2;a=12;break;case 12:l=1;HEAP32[e>>2]=1;k=HEAP32[(g+64|0)>>2];j=HEAP32[(g+68|0)>>2];HEAP32[(g+64|0)>>2]=0;HEAP32[(g+68|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=0==(i|0)?13:14;break;case 13:HEAP32[(d+64|0)>>2]=k;a=15;break;case 14:HEAP32[(i+68|0)>>2]=k;a=15;break;case 15:g=k;a=16;break;case 16:a=0!=(HEAP32[(k+68|0)>>2]|0)?17:18;break;case 17:k=HEAP32[(k+68|0)>>2];a=16;break;case 18:HEAP32[(k+68|0)>>2]=j;a=39;break;case 19:a=153==(HEAPU16[(d|0)>>1]&65535|0)?20:22;break;
case 20:a=154==(HEAPU16[(g|0)>>1]&65535|0)?21:22;break;case 21:l=1;HEAP32[e>>2]=1;a=_GenConstant(b,30,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+16|0)>>2]);m=_LHSParseNodesToExpression(b,HEAP32[(g+56|0)>>2]);HEAP32[(a+8|0)>>2]=m;_CopyLHSParseNode(b,d,g,1);_ReturnLHSParseNodes(b,g);_ReturnLHSParseNodes(b,HEAP32[(d+56|0)>>2]);m=_ExpressionToLHSParseNodes(b,a);HEAP32[(d+56|0)>>2]=m;HEAP32[(d+64|0)>>2]=0;_ReturnExpression(b,a);a=40;break;case 22:a=151==(HEAPU16[(d|0)>>1]&65535|0)?23:30;break;case 23:a=
154==(HEAPU16[(g|0)>>1]&65535|0)?24:30;break;case 24:a=0!=(HEAP32[(g+68|0)>>2]|0)?25:26;break;case 25:a=154==(HEAPU16[(HEAP32[(g+68|0)>>2]|0)>>1]&65535|0)?27:30;break;case 26:a=30;break;case 27:a=(HEAP32[(g+44|0)>>2]|0)==(HEAP32[(g+48|0)>>2]|0)?28:30;break;case 28:a=(HEAP32[(g+48|0)>>2]|0)==(HEAP32[(HEAP32[(g+68|0)>>2]+44|0)>>2]|0)?29:30;break;case 29:l=1;HEAP32[e>>2]=1;a=_LHSParseNodesToExpression(b,HEAP32[(g+56|0)>>2]);m=_LHSParseNodesToExpression(b,HEAP32[(HEAP32[(g+68|0)>>2]+56|0)>>2]);a=_CombineExpressions(b,
a,m);_ReturnLHSParseNodes(b,HEAP32[(g+56|0)>>2]);k=_ExpressionToLHSParseNodes(b,a);HEAP32[(g+56|0)>>2]=k;_ReturnExpression(b,a);k=HEAP32[(g+68|0)>>2];HEAP32[(g+68|0)>>2]=HEAP32[(k+68|0)>>2];HEAP32[(k+68|0)>>2]=0;_ReturnLHSParseNodes(b,k);a=37;break;case 30:a=151==(HEAPU16[(d|0)>>1]&65535|0)?31:35;break;case 31:a=154==(HEAPU16[(g|0)>>1]&65535|0)?32:35;break;case 32:a=(HEAP32[(d+64|0)>>2]|0)==(g|0)?33:35;break;case 33:a=0==(HEAP32[(g+68|0)>>2]|0)?34:35;break;case 34:l=1;HEAP32[e>>2]=1;_CopyLHSParseNode(b,
d,g,1);HEAP32[(d+64|0)>>2]=0;_ReturnLHSParseNodes(b,g);a=40;break;case 35:i=g;g=HEAP32[(g+68|0)>>2];a=36;break;case 36:a=37;break;case 37:a=38;break;case 38:a=39;break;case 39:a=5;break;case 40:a=3;break;case 41:return d;default:assert(0,"bad label: "+a)}}_CompressCEs.X=1;
function _IncrementNandDepth(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=3;break;case 3:a=0!=(d|0)?4:24;break;case 4:a=150==(HEAPU16[(d|0)>>1]&65535|0)?6:5;break;case 5:a=154==(HEAPU16[(d|0)>>1]&65535|0)?6:12;break;case 6:a=d+44|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=0==(e|0)?7:8;break;case 7:a=d+48|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=11;break;case 8:a=0!=(HEAP32[(d+68|0)>>2]|0)?9:10;break;case 9:a=d+48|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=10;break;case 10:a=11;break;case 11:a=22;break;
case 12:a=151==(HEAPU16[(d|0)>>1]&65535|0)?14:13;break;case 13:a=153==(HEAPU16[(d|0)>>1]&65535|0)?14:18;break;case 14:var g=b,i=HEAP32[(d+64|0)>>2];a=0!=(e|0)?15:16;break;case 15:var j=0==(HEAP32[(d+68|0)>>2]|0)&1;a=17;break;case 16:j=0;a=17;break;case 17:_IncrementNandDepth(g,i,j);a=21;break;case 18:a=152==(HEAPU16[(d|0)>>1]&65535|0)?19:20;break;case 19:_SystemError(b,STRING_TABLE.__str3691|0,1);a=20;break;case 20:a=21;break;case 21:a=22;break;case 22:a=23;break;case 23:d=HEAP32[(d+68|0)>>2];a=3;
break;case 24:return;default:assert(0,"bad label: "+a)}}_IncrementNandDepth.X=1;
function _ReverseAndOr(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n;d=h;e=f;g=c;i=a;l=k=0;b=3;break;case 3:b=0!=(g|0)?4:12;break;case 4:m=_CopyLHSParseNodes(d,e);j=1;n=HEAP32[(m+64|0)>>2];b=5;break;case 5:b=(j|0)!=(i|0)?6:8;break;case 6:b=7;break;case 7:j=j+1|0;n=HEAP32[(n+68|0)>>2];b=5;break;case 8:_ReturnLHSParseNodes(d,HEAP32[(n+64|0)>>2]);_CopyLHSParseNode(d,n,g,1);b=_CopyLHSParseNodes(d,HEAP32[(g+64|0)>>2]);HEAP32[(n+64|0)>>2]=b;b=0==(l|0)?9:10;break;case 9:k=m;HEAP32[(m+68|
0)>>2]=0;l=m;b=11;break;case 10:HEAP32[(l+68|0)>>2]=m;HEAP32[(m+68|0)>>2]=0;l=m;b=11;break;case 11:g=HEAP32[(g+68|0)>>2];b=3;break;case 12:return _ReturnLHSParseNodes(d,e),m=_GetLHSParseNode(d),HEAP16[(m|0)>>1]=152,HEAP32[(m+64|0)>>2]=k,m;default:assert(0,"bad label: "+b)}}_ReverseAndOr.X=1;
function _PrintPartialMatch(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;i=0;a=3;break;case 3:a=(i<<16>>16|0)<(HEAPU32[e>>2]>>>6&511|0)?4:11;break;case 4:a=0!=(HEAP32[(HEAP32[((e+8|0)+(i<<16>>16<<2)|0)>>2]|0)>>2]|0)?5:8;break;case 5:g=HEAP32[(HEAP32[((e+8|0)+(i<<16>>16<<2)|0)>>2]|0)>>2];a=0!=(g|0)?6:7;break;case 6:FUNCTION_TABLE[HEAP32[((HEAP32[(g|0)>>2]|0)+8|0)>>2]](b,d,g);a=7;break;case 7:a=8;break;case 8:i=i+1&65535;a=(i<<16>>16|0)<(HEAPU32[e>>2]>>>6&511|0)?9:10;break;case 9:_EnvPrintRouter(b,
d,STRING_TABLE.__str3701|0);a=10;break;case 10:a=3;break;case 11:return;default:assert(0,"bad label: "+a)}}_PrintPartialMatch.X=1;
function _CopyPartialMatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;b=500>((((((HEAPU32[e>>2]>>>6&511)+g|0)+i|0)-1|0)<<2|0)+12|0)>>>0?3:4;break;case 3:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(((((((HEAPU32[e>>2]>>>6&511)+g|0)+i|0)-1|0)<<2|0)+12|0)<<2)|0)>>2]|0)?5:6;break;case 4:b=5;break;case 5:var l=_genalloc(d,(((((HEAPU32[e>>2]>>>6&511)+g|0)+i|0)-1|0)<<2|0)+12|0);b=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(((((((HEAPU32[e>>2]>>>6&511)+g|0)+i|0)-1|0)<<2|0)+12|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+(((((((HEAPU32[e>>2]>>>6&511)+g|0)+i|0)-1|0)<<2|0)+12|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=7;break;case 7:j=l;HEAP32[(j+4|0)>>2]=0;k=j;HEAP32[k>>2]=HEAP32[k>>2]&-2|1;k=j;HEAP32[k>>2]&=-3;k=j;
HEAP32[k>>2]=HEAP32[k>>2]&-5|(g&1)<<2;k=j;HEAP32[k>>2]=HEAP32[k>>2]&-9|(i&1)<<3;k=j;HEAP32[k>>2]&=-17;k=j;HEAP32[k>>2]&=-33;k=j;HEAP32[k>>2]=HEAP32[k>>2]&-32705|(HEAPU32[e>>2]>>>6&511)<<6;k=0;b=8;break;case 8:b=(k<<16>>16|0)<(HEAPU32[j>>2]>>>6&511|0)?9:11;break;case 9:b=(j+8|0)+(k<<16>>16<<2)|0;var m=(e+8|0)+(k<<16>>16<<2)|0;assert(!0,"memcpy given 4 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[b>>2]=HEAP32[m>>2];b=10;break;case 10:k=k+1&65535;b=8;break;case 11:b=0!=(g|0)?12:
13;break;case 12:b=k;k=b+1&65535;HEAP32[((j+8|0)+(b<<16>>16<<2)|0)>>2]=0;b=13;break;case 13:b=0!=(i|0)?14:15;break;case 14:HEAP32[((j+8|0)+(k<<16>>16<<2)|0)>>2]=0;b=15;break;case 15:return j;default:assert(0,"bad label: "+b)}}_CopyPartialMatch.X=1;
function _MergePartialMatches(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;k=b;d=500>(((((((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)+j|0)+k|0)-1|0)<<2|0)+12|0)>>>0?3:4;break;case 3:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)+j|0)+k|0)-1|0)<<2|0)+12|0)<<2)|0)>>2]|0)?5:6;break;case 4:d=5;break;case 5:var o=_genalloc(e,((((((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)+
j|0)+k|0)-1|0)<<2|0)+12|0);d=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)+j|0)+k|0)-1|0)<<2|0)+12|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)+j|0)+k|0)-1|0)<<2|0)+12|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+16|0)>>2];d=7;break;case 7:l=o;HEAP32[(l+4|0)>>2]=0;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-2|1;m=l;HEAP32[m>>2]&=-3;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-5|(j&1)<<2;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-9|(k&1)<<3;m=l;HEAP32[m>>2]&=-17;m=l;HEAP32[m>>2]&=-33;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-32705|(((HEAPU32[g>>2]>>>6&511)+(HEAPU32[i>>2]>>>6&511)|0)&511)<<6;m=0;d=8;break;case 8:d=(m<<16>>16|0)<(HEAPU32[g>>2]>>>6&511|0)?9:11;break;case 9:d=(l+8|0)+(m<<16>>16<<2)|0;var p=(g+8|0)+(m<<16>>16<<2)|0;assert(!0,
"memcpy given 4 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[d>>2]=HEAP32[p>>2];d=10;break;case 10:m=m+1&65535;d=8;break;case 11:m=HEAPU32[g>>2]>>>6&511;n=0;d=12;break;case 12:d=(m<<16>>16|0)<((HEAPU32[l>>2]>>>6&511)<<16>>16|0)?13:15;break;case 13:d=(l+8|0)+(m<<16>>16<<2)|0;p=(i+8|0)+(n<<16>>16<<2)|0;assert(!0,"memcpy given 4 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[d>>2]=HEAP32[p>>2];d=14;break;case 14:m=m+1&65535;n=n+1&65535;d=12;break;case 15:d=
0!=(j|0)?16:17;break;case 16:d=m;m=d+1&65535;HEAP32[((l+8|0)+(d<<16>>16<<2)|0)>>2]=0;d=17;break;case 17:d=0!=(k|0)?18:19;break;case 18:HEAP32[((l+8|0)+(m<<16>>16<<2)|0)>>2]=0;d=19;break;case 19:return l;default:assert(0,"bad label: "+d)}}_MergePartialMatches.X=1;
function _InitializePatternHeader(h,f){HEAP32[(f+8|0)>>2]=0;HEAP32[(f|0)>>2]=0;HEAP32[(f+4|0)>>2]=0;var c=f+12|0;HEAP32[c>>2]&=-2;c=f+12|0;HEAP32[c>>2]&=-3;c=f+12|0;HEAP32[c>>2]&=-5;var c=_EnvGetIncrementalReset(h),a=f+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|(c&1)<<3;c=f+12|0;HEAP32[c>>2]&=-17;c=f+12|0;HEAP32[c>>2]&=-33;c=f+12|0;HEAP32[c>>2]&=-65}_InitializePatternHeader.X=1;
function _CreateAlphaMatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var l=_genalloc(d,12);b=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+
16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=5;break;case 5:j=l;HEAP32[(j+4|0)>>2]=0;b=j;HEAP32[b>>2]&=-2;b=j;HEAP32[b>>2]&=-3;b=j;HEAP32[b>>2]&=-5;b=j;HEAP32[b>>2]&=-9;b=j;HEAP32[b>>2]&=-17;b=j;HEAP32[b>>2]&=-33;b=j;HEAP32[b>>2]=HEAP32[b>>2]&-32705|64;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?6:7;break;case 6:var m=_genalloc(d,12);b=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=8;break;case 8:k=m;HEAP32[(k+8|0)>>2]=0;HEAP32[(k|0)>>2]=e;b=0!=(g|0)?9:10;break;case 9:b=_CopyMultifieldMarkers(d,g);HEAP32[(k+4|0)>>2]=b;b=11;break;case 10:HEAP32[(k+4|0)>>2]=0;b=11;break;case 11:HEAP32[(j+8|0)>>2]=k;b=0==(HEAP32[(i+4|0)>>2]|0)?12:13;
break;case 12:HEAP32[(i|0)>>2]=j;HEAP32[(i+4|0)>>2]=j;b=14;break;case 13:HEAP32[(HEAP32[(i+4|0)>>2]+4|0)>>2]=j;HEAP32[(i+4|0)>>2]=j;b=14;break;case 14:return j;default:assert(0,"bad label: "+b)}}_CreateAlphaMatch.X=1;
function _CopyMultifieldMarkers(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;e=d=0;c=3;break;case 3:c=0!=(b|0)?4:11;break;case 4:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?5:6;break;case 5:var i=_genalloc(a,20);c=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=7;break;case 7:g=i;HEAP32[(g+16|0)>>2]=0;HEAP32[(g|0)>>2]=HEAP32[(b|0)>>2];c=g+4|0;var j=b+4|0;assert(!0,"memcpy given 4 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[c>>2]=HEAP32[j>>2];HEAP32[(g+8|0)>>2]=HEAP32[(b+8|0)>>2];HEAP32[(g+12|0)>>2]=HEAP32[(b+12|0)>>2];c=0==(e|0)?8:9;break;case 8:d=g;c=10;break;case 9:HEAP32[(e+16|0)>>2]=g;c=10;break;case 10:e=g;b=HEAP32[(b+16|0)>>2];
c=3;break;case 11:return d;default:assert(0,"bad label: "+c)}}_CopyMultifieldMarkers.X=1;
function _AddSingleMatch(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;k=b;d=500>(((((HEAPU32[g>>2]>>>6&511)+j|0)+k|0)<<2|0)+12|0)>>>0?3:4;break;case 3:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((HEAPU32[g>>2]>>>6&511)+j|0)+k|0)<<2|0)+12|0)<<2)|0)>>2]|0)?5:6;break;case 4:d=5;break;case 5:var n=_genalloc(e,((((HEAPU32[g>>2]>>>6&511)+j|0)+k|0)<<2|0)+12|0);d=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((HEAPU32[g>>2]>>>6&511)+j|0)+k|0)<<2|0)+12|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+((((((HEAPU32[g>>2]>>>6&511)+j|0)+k|0)<<2|0)+12|0)<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];n=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=7;break;case 7:l=n;HEAP32[(l+4|0)>>2]=0;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-2|1;m=l;HEAP32[m>>2]&=-3;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-5|(j&1)<<2;m=l;HEAP32[m>>
2]=HEAP32[m>>2]&-9|(k&1)<<3;m=l;HEAP32[m>>2]&=-17;m=l;HEAP32[m>>2]&=-33;m=l;HEAP32[m>>2]=HEAP32[m>>2]&-32705|(((HEAPU32[g>>2]>>>6&511)+1|0)&511)<<6;m=0;d=8;break;case 8:d=(m<<16>>16|0)<(HEAPU32[g>>2]>>>6&511|0)?9:11;break;case 9:d=(l+8|0)+(m<<16>>16<<2)|0;var o=(g+8|0)+(m<<16>>16<<2)|0;assert(!0,"memcpy given 4 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[d>>2]=HEAP32[o>>2];d=10;break;case 10:m=m+1&65535;d=8;break;case 11:d=i;o=m;m=o+1&65535;HEAP32[((l+8|0)+(o<<16>>16<<2)|0)>>
2]=d;d=0!=(j|0)?12:13;break;case 12:d=m;m=d+1&65535;HEAP32[((l+8|0)+(d<<16>>16<<2)|0)>>2]=0;d=13;break;case 13:d=0!=(k|0)?14:15;break;case 14:HEAP32[((l+8|0)+(m<<16>>16<<2)|0)>>2]=0;d=15;break;case 15:return l;default:assert(0,"bad label: "+d)}}_AddSingleMatch.X=1;
function _NewPseudoFactPartialMatch(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var b=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];
b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:a=b;HEAP32[(a+4|0)>>2]=0;f=a;HEAP32[f>>2]=HEAP32[f>>2]&-2|1;f=a;HEAP32[f>>2]&=-3;f=a;HEAP32[f>>2]&=-5;f=a;HEAP32[f>>2]&=-9;f=a;HEAP32[f>>2]=HEAP32[f>>2]&-17|16;f=a;HEAP32[f>>2]&=-33;f=a;HEAP32[f>>2]&=-32705;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?6:7;break;case 6:var d=_genalloc(c,12);f=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=8;break;case 8:return h=d,HEAP32[(h+8|0)>>2]=0,HEAP32[(h|0)>>2]=0,HEAP32[(h+4|0)>>2]=0,HEAP32[(a+8|0)>>2]=h,a;default:assert(0,"bad label: "+f)}}_NewPseudoFactPartialMatch.X=1;
function _FindEntityInPartialMatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=0;c=3;break;case 3:c=(e<<16>>16|0)<(HEAPU32[d>>2]>>>6&511|0)?4:8;break;case 4:c=(HEAP32[(HEAP32[((d+8|0)+(e<<16>>16<<2)|0)>>2]|0)>>2]|0)==(b|0)?5:6;break;case 5:a=1;c=9;break;case 6:c=7;break;case 7:e=e+1&65535;c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _GetPatternNumberFromJoin(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=0!=(c|0)?4:8;break;case 4:f=0!=(HEAPU32[c>>2]>>>2&1|0)?5:6;break;case 5:c=HEAP32[(c+16|0)>>2];f=7;break;case 6:a=a+1|0;c=HEAP32[(c+24|0)>>2];f=7;break;case 7:f=3;break;case 8:return a;default:assert(0,"bad label: "+f)}}
function _FlushAlphaBetaMemory(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:10;break;case 4:d=HEAP32[(b+4|0)>>2];c=0!=(HEAPU32[b>>2]>>>4&1|0)?5:6;break;case 5:c=0==(HEAPU32[b>>2]>>>5&1|0)?7:6;break;case 6:c=0==(HEAP32[b>>2]&1|0)?7:8;break;case 7:HEAP32[(b+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+68|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+68|0)>>2]=b;c=9;break;case 8:_ReturnPartialMatch(a,b);c=9;break;case 9:b=d;c=3;break;case 10:return;
default:assert(0,"bad label: "+c)}}_FlushAlphaBetaMemory.X=1;function _DestroyAlphaBetaMemory(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+4|0)>>2];_DestroyPartialMatch(a,b);b=c;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}function _TraceErrorToRule(h,f,c){_MarkRuleNetwork(h,0);_TraceErrorToRuleDriver(h,f,c)}
function _MarkRuleNetwork(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;_SaveCurrentModule(a);g=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(g|0)?4:18;break;case 4:_EnvSetCurrentModule(a,g);d=_EnvGetNextDefrule(a,0);c=5;break;case 5:c=0!=(d|0)?6:16;break;case 6:e=HEAP32[(d+48|0)>>2];c=7;break;case 7:c=0!=(e|0)?8:12;break;case 8:c=e;HEAP32[c>>2]=HEAP32[c>>2]&-33|(b&1)<<5;c=0!=(HEAPU32[e>>2]>>>2&1|0)?9:10;break;case 9:var i=HEAP32[(e+16|0)>>2];c=11;break;case 10:i=HEAP32[(e+24|0)>>
2];c=11;break;case 11:e=i;c=7;break;case 12:c=0!=(HEAP32[(d+52|0)>>2]|0)?13:14;break;case 13:d=HEAP32[(d+52|0)>>2];c=15;break;case 14:d=_EnvGetNextDefrule(a,d);c=15;break;case 15:c=5;break;case 16:c=17;break;case 17:g=_EnvGetNextDefmodule(a,g);c=3;break;case 18:_RestoreCurrentModule(a);return;default:assert(0,"bad label: "+c)}}_MarkRuleNetwork.X=1;
function _TraceErrorToRuleDriver(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=3;break;case 3:a=0!=(d|0)?4:11;break;case 4:a=0!=(HEAPU32[d>>2]>>>5&1|0)?5:6;break;case 5:a=10;break;case 6:a=0!=(HEAP32[(d+36|0)>>2]|0)?7:8;break;case 7:a=d;HEAP32[a>>2]=HEAP32[a>>2]&-33|32;a=_GetConstructNameString(HEAP32[(d+36|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str13702|0,e);_EnvPrintRouter(b,STRING_TABLE.__str13702|0,a);_EnvPrintRouter(b,STRING_TABLE.__str13702|0,STRING_TABLE.__str23703|0);a=
9;break;case 8:a=d;HEAP32[a>>2]=HEAP32[a>>2]&-33|32;_TraceErrorToRuleDriver(b,HEAP32[(d+20|0)>>2],e);a=9;break;case 9:a=10;break;case 10:d=HEAP32[(d+28|0)>>2];a=3;break;case 11:return;default:assert(0,"bad label: "+a)}}_TraceErrorToRuleDriver.X=1;
function _TagRuleNetwork(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;HEAP32[e>>2]=0;HEAP32[g>>2]=0;HEAP32[i>>2]=0;_MarkRuleNetwork(d,0);j=_EnvGetNextDefmodule(d,0);b=3;break;case 3:b=0!=(j|0)?4:21;break;case 4:k=e;HEAP32[k>>2]=HEAP32[k>>2]+1|0;_EnvSetCurrentModule(d,j);k=_EnvGetNextDefrule(d,0);b=5;break;case 5:b=0!=(k|0)?6:19;break;case 6:HEAP32[((k|0)+12|0)>>2]=HEAP32[g>>2];l=g;HEAP32[l>>2]=HEAP32[l>>2]+1|0;l=HEAP32[(k+48|0)>>2];b=7;break;case 7:b=0!=(l|0)?8:15;break;
case 8:b=0==(HEAPU32[l>>2]>>>5&1|0)?9:10;break;case 9:b=l;HEAP32[b>>2]=HEAP32[b>>2]&-33|32;HEAP32[(l+4|0)>>2]=HEAP32[i>>2];b=i;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=10;break;case 10:b=11;break;case 11:b=0!=(HEAPU32[l>>2]>>>2&1|0)?12:13;break;case 12:var m=HEAP32[(l+16|0)>>2];b=14;break;case 13:m=HEAP32[(l+24|0)>>2];b=14;break;case 14:l=m;b=7;break;case 15:b=0!=(HEAP32[(k+52|0)>>2]|0)?16:17;break;case 16:k=HEAP32[(k+52|0)>>2];b=18;break;case 17:k=_EnvGetNextDefrule(d,k);b=18;break;case 18:b=5;break;case 19:b=
20;break;case 20:j=_EnvGetNextDefmodule(d,j);b=3;break;case 21:return;default:assert(0,"bad label: "+b)}}_TagRuleNetwork.X=1;
function _NetworkRetract(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+4,j;b=h;e=d=f;a=3;break;case 3:a=0!=(d|0)?4:12;break;case 4:j=HEAP32[(HEAP32[(d+8|0)>>2]+8|0)>>2];a=5;break;case 5:a=0!=(j|0)?6:10;break;case 6:a=0==(HEAPU32[j>>2]>>>3&1|0)?7:8;break;case 7:_PosEntryRetract(b,j,HEAP32[(HEAP32[(d+4|0)>>2]+8|0)>>2],HEAP32[(d+4|0)>>2],(HEAPU32[j>>2]>>>9&127)-1|0,HEAP32[(HEAP32[(HEAP32[(d+
4|0)>>2]+8|0)>>2]|0)>>2]);a=8;break;case 8:a=9;break;case 9:j=HEAP32[(j+32|0)>>2];a=5;break;case 10:a=11;break;case 11:d=HEAP32[(d|0)>>2];a=3;break;case 12:d=e;a=13;break;case 13:a=0!=(d|0)?14:24;break;case 14:j=HEAP32[(HEAP32[(d+8|0)>>2]+8|0)>>2];a=15;break;case 15:a=0!=(j|0)?16:23;break;case 16:a=1==(HEAPU32[j>>2]>>>3&1|0)?17:21;break;case 17:a=1==(HEAP32[j>>2]&1|0)?18:19;break;case 18:_SystemError(b,STRING_TABLE.__str3726|0,3);_EnvExitRouter(b,1);a=20;break;case 19:_NegEntryRetract(b,j,HEAP32[(d+
4|0)>>2],HEAP32[(HEAP32[(HEAP32[(d+4|0)>>2]+8|0)>>2]|0)>>2]);a=20;break;case 20:a=21;break;case 21:a=22;break;case 22:j=HEAP32[(j+32|0)>>2];a=15;break;case 23:HEAP32[i>>2]=0;a=_RemovePartialMatches(b,HEAP32[(HEAP32[(d+4|0)>>2]+8|0)>>2],HEAP32[(HEAP32[(d+8|0)>>2]|0)>>2],g,0,i);HEAP32[(HEAP32[(d+8|0)>>2]|0)>>2]=a;HEAP32[(HEAP32[(d+8|0)>>2]+4|0)>>2]=HEAP32[i>>2];_DeletePartialMatches(b,HEAP32[g>>2],0);e=HEAP32[(d|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];d=e;a=13;break;case 24:_DriveRetractions(b);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_NetworkRetract.X=1;
function _PosEntryRetract(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o=e,p,q=e+4;i=h;j=f;k=c;l=a;m=b;n=d;g=3;break;case 3:g=0!=(j|0)?4:19;break;case 4:g=0==(HEAP32[(j+8|0)>>2]|0)?5:6;break;case 5:g=19;break;case 6:g=_RemovePartialMatches(i,k,HEAP32[(j+8|0)>>2],o,m,q);HEAP32[(j+8|0)>>2]=g;g=0==(HEAP32[o>>2]|0)?7:8;break;case 7:g=19;break;case 8:p=HEAP32[(j+20|0)>>2];
g=0==(p|0)?9:10;break;case 9:_DeletePartialMatches(i,HEAP32[o>>2],1);g=19;break;case 10:g=(HEAP32[(p+16|0)>>2]|0)==(j|0)?11:15;break;case 11:l=HEAP32[o>>2];g=12;break;case 12:g=0!=(l|0)?13:14;break;case 13:_NegEntryRetract(i,p,l,n);l=HEAP32[(l+4|0)>>2];g=12;break;case 14:_DeletePartialMatches(i,HEAP32[o>>2],1);g=19;break;case 15:_DeletePartialMatches(i,HEAP32[o>>2],1);g=16;break;case 16:g=0!=(HEAP32[(p+28|0)>>2]|0)?17:18;break;case 17:_PosEntryRetract(i,p,k,l,m,n);p=HEAP32[(p+28|0)>>2];g=16;break;
case 18:j=p;g=3;break;case 19:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_PosEntryRetract.X=1;
function _NegEntryRetract(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;d=h;e=f;g=c;i=a;j=HEAP32[(e+8|0)>>2];b=3;break;case 3:b=0!=(j|0)?4:33;break;case 4:b=0==(HEAPU32[j>>2]>>>5&1|0)?5:6;break;case 5:b=32;break;case 6:b=(HEAP32[((j+8|0)+(((HEAPU32[j>>2]>>>6&511)-1|0)<<2)|0)>>2]|0)!=(g|0)?7:8;break;case 7:b=32;break;case 8:HEAP32[((j+8|0)+(((HEAPU32[j>>2]>>>6&511)-1|0)<<2)|0)>>2]=0;b=_FindNextConflictingAlphaMatch(d,j,HEAP32[(g+4|0)>>2],e);b=0==(b|0)?9:31;break;case 9:b=j;HEAP32[b>>2]&=
-33;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?10:11;break;case 10:var l=_genalloc(d,12);b=12;break;case 11:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=12;break;case 12:b=
l;HEAP32[(b+8|0)>>2]=0;HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;HEAP32[((j+8|0)+(((HEAPU32[j>>2]>>>6&511)-1|0)<<2)|0)>>2]=b;b=0!=(HEAP32[(e+36|0)>>2]|0)?13:14;break;case 13:_AddActivation(d,HEAP32[(e+36|0)>>2],j);b=14;break;case 14:k=HEAP32[(e+20|0)>>2];b=0!=(k|0)?15:30;break;case 15:b=(HEAP32[(k+16|0)>>2]|0)==(e|0)?16:17;break;case 16:_NetworkAssert(d,j,k,1);b=29;break;case 17:b=0!=(i|0)?18:24;break;case 18:b=0==(_FindEntityInPartialMatch(i,j)|0)?19:23;break;case 19:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?20:21;break;case 20:var m=_genalloc(d,12);b=22;break;case 21:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=22;break;case 22:b=m;HEAP32[(b|0)>>2]=j;HEAP32[(b+4|0)>>
2]=HEAP32[(e+20|0)>>2];HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+64|0)>>2]=b;b=23;break;case 23:b=28;break;case 24:b=25;break;case 25:b=0!=(k|0)?26:27;break;case 26:_NetworkAssert(d,j,k,0);k=HEAP32[(k+28|0)>>2];b=25;break;case 27:b=28;break;case 28:b=29;break;case 29:b=30;break;case 30:b=31;break;case 31:b=32;break;case 32:j=HEAP32[(j+4|0)>>2];b=3;break;case 33:return;default:assert(0,"bad label: "+b)}}
_NegEntryRetract.X=1;
function _RemovePartialMatches(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;g=h;i=f;j=c;k=a;l=b;m=d;q=0;o=n=j;HEAP32[k>>2]=0;e=3;break;case 3:e=0!=(j|0)?4:25;break;case 4:e=1==(HEAPU32[j>>2]>>>5&1|0)?5:7;break;case 5:e=(l|0)==((HEAPU32[j>>2]>>>6&511)-1|0)?6:7;break;case 6:o=j;j=HEAP32[(j+4|0)>>2];e=24;break;case 7:e=(HEAP32[((j+8|0)+(l<<2)|0)>>2]|0)==(i|0)?8:22;break;case 8:e=0!=(HEAPU32[j>>2]>>>2&1|0)?9:10;break;case 9:e=0!=(HEAP32[((j+8|0)+((HEAPU32[j>>2]>>>6&511)<<2)|0)>>
2]|0)?11:12;break;case 10:e=12;break;case 11:_RemoveActivation(g,HEAP32[((j+8|0)+((HEAPU32[j>>2]>>>6&511)<<2)|0)>>2],1,1);e=12;break;case 12:e=(j|0)==(n|0)?13:17;break;case 13:p=HEAP32[(j+4|0)>>2];e=0==(HEAP32[k>>2]|0)?14:15;break;case 14:HEAP32[k>>2]=j;e=16;break;case 15:HEAP32[(q+4|0)>>2]=j;e=16;break;case 16:HEAP32[(j+4|0)>>2]=0;q=j;o=n=j=p;e=21;break;case 17:HEAP32[(o+4|0)>>2]=HEAP32[(j+4|0)>>2];e=0==(HEAP32[k>>2]|0)?18:19;break;case 18:HEAP32[k>>2]=j;e=20;break;case 19:HEAP32[(q+4|0)>>2]=j;e=
20;break;case 20:HEAP32[(j+4|0)>>2]=0;q=j;j=HEAP32[(o+4|0)>>2];e=21;break;case 21:e=23;break;case 22:o=j;j=HEAP32[(j+4|0)>>2];e=23;break;case 23:e=24;break;case 24:e=3;break;case 25:return HEAP32[m>>2]=o,n;default:assert(0,"bad label: "+e)}}_RemovePartialMatches.X=1;
function _DeletePartialMatches(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=3;break;case 3:a=0!=(d|0)?4:12;break;case 4:g=HEAP32[(d+4|0)>>2];a=0!=(HEAPU32[d>>2]>>>3&1|0)?5:6;break;case 5:_RemoveLogicalSupport(b,d);a=6;break;case 6:a=0!=(e|0)?7:10;break;case 7:a=0==(HEAPU32[d>>2]>>>4&1|0)?9:8;break;case 8:a=0!=(HEAPU32[d>>2]>>>5&1|0)?9:10;break;case 9:_ReturnPartialMatch(b,d);a=11;break;case 10:HEAP32[(d+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+68|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+72|0)>>2]+68|0)>>2]=d;a=11;break;case 11:d=g;a=3;break;case 12:return;default:assert(0,"bad label: "+a)}}_DeletePartialMatches.X=1;
function _ReturnMarkers(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=3;break;case 5:return;
default:assert(0,"bad label: "+c)}}_ReturnMarkers.X=1;
function _DriveRetractions(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|0)>>2]|0)?4:9;break;case 4:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|0)>>2]+4|0)>>2];f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:_NetworkAssert(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|0)>>2]|0)>>2],a,0);f=7;break;case 7:a=HEAP32[(a+28|0)>>2];f=5;break;case 8:f=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|
0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+64|0)>>2]=f;f=3;break;case 9:return;default:assert(0,
"bad label: "+f)}}_DriveRetractions.X=1;
function _FindNextConflictingAlphaMatch(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0!=(HEAPU32[j>>2]>>>2&1|0)?3:4;break;case 3:i=HEAP32[(HEAP32[(j+16|0)>>2]+8|0)>>2];b=4;break;case 4:b=5;break;case 5:b=0!=(i|0)?6:29;break;case 6:l=0;b=0!=(HEAPU32[i>>2]>>>5&1|0)?7:8;break;case 7:b=25;break;case 8:b=0!=(_PartialMatchDefunct(e,i)|0)?9:10;break;case 9:b=24;break;case 10:b=0==(HEAP32[(j+12|0)>>2]|0)?11:20;break;case 11:l=1;b=0!=(HEAPU32[j>>2]>>>2&1|0)?12:19;break;case 12:k=
0;b=13;break;case 13:b=(k|0)<((HEAPU32[g>>2]>>>6&511)-1|0)?14:18;break;case 14:b=(HEAP32[((i+8|0)+(k<<2)|0)>>2]|0)!=(HEAP32[((g+8|0)+(k<<2)|0)>>2]|0)?15:16;break;case 15:l=0;b=18;break;case 16:b=17;break;case 17:k=k+1|0;b=13;break;case 18:b=19;break;case 19:b=23;break;case 20:l=_EvaluateJoinExpression(e,HEAP32[(j+12|0)>>2],g,i,j);b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]|0)?21:22;break;case 21:l=1;HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+4|0)>>2]=0;b=22;break;case 22:b=23;
break;case 23:b=24;break;case 24:b=25;break;case 25:b=0!=(l|0)?26:27;break;case 26:HEAP32[((g+8|0)+(((HEAPU32[g>>2]>>>6&511)-1|0)<<2)|0)>>2]=i;d=1;b=30;break;case 27:b=28;break;case 28:i=HEAP32[(i+4|0)>>2];b=5;break;case 29:d=0;b=30;break;case 30:return d;default:assert(0,"bad label: "+b)}}_FindNextConflictingAlphaMatch.X=1;
function _ReturnPartialMatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0!=(HEAPU32[b>>2]>>>1&1|0)?3:4;break;case 3:HEAP32[(b+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+68|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]+68|0)>>2]=b;c=14;break;case 4:c=0==(HEAP32[b>>2]&1|0)?5:8;break;case 5:c=0!=(HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:_ReturnMarkers(a,HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2]);c=7;break;case 7:_rm(a,HEAP32[(b+8|0)>>2],12);c=8;break;case 8:c=
0!=(HEAPU32[b>>2]>>>3&1|0)?9:10;break;case 9:_RemovePMDependencies(a,b);c=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]=(((((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)+(HEAPU32[b>>2]>>>3&1)|0)-1|0)<<2|0)+12|0;c=500>HEAPU32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]>>>0?11:12;break;case 11:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=13;break;case 12:_genfree(a,b,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]);c=13;break;case 13:c=14;break;case 14:return;default:assert(0,"bad label: "+c)}}_ReturnPartialMatch.X=1;
function _DestroyPartialMatch(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(HEAP32[b>>2]&1|0)?3:6;break;case 3:c=0!=(HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2]|0)?4:5;break;case 4:_ReturnMarkers(a,HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2]);c=5;break;case 5:_rm(a,HEAP32[(b+8|0)>>2],12);c=6;break;case 6:c=0!=(HEAPU32[b>>2]>>>4&1|0)?7:11;break;case 7:c=0==(HEAPU32[b>>2]>>>5&1|0)?8:11;break;case 8:c=0!=(HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)-1|0)<<2)|0)>>2]|0)?9:10;break;case 9:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((b+8|0)+(((HEAPU32[b>>2]>>>6&511)-1|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:c=11;break;case 11:c=0!=(HEAPU32[b>>2]>>>3&1|0)?12:13;break;case 12:_DestroyPMDependencies(a,b);c=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+24|0)>>2]=(((((HEAPU32[b>>2]>>>6&511)+(HEAPU32[b>>2]>>>2&1)|0)+(HEAPU32[b>>2]>>>3&1)|0)-1|0)<<2|0)+12|0;c=500>HEAPU32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]>>>0?14:15;break;case 14:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=16;break;case 15:_genfree(a,b,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+24|0)>>2]);c=16;break;case 16:return;default:assert(0,"bad label: "+c)}}_DestroyPartialMatch.X=1;
function _RetractCheckDriveRetractions(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;j=0;i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+64|0)>>2];a=3;break;case 3:a=0!=(i|0)?4:12;break;case 4:a=(e|0)<(HEAPU32[HEAP32[(i|0)>>2]>>2]>>>6&511|0)?5:10;break;case 5:a=(HEAP32[((HEAP32[(i|0)>>2]+8|0)+(e<<2)|0)>>2]|0)==(d|0)?6:10;break;case 6:g=HEAP32[(i+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|
0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=0==(j|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+64|0)>>2]=g;a=9;break;case 8:HEAP32[(j+8|0)>>2]=g;a=9;break;case 9:i=g;a=11;break;case 10:j=i;i=HEAP32[(i+8|0)>>2];a=11;break;case 11:a=3;break;case 12:return;default:assert(0,"bad label: "+a)}}
_RetractCheckDriveRetractions.X=1;
function _DeallocateRouterData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+184|0)>>2]+20|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+40|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateRouterData.X=1;
function _FlushGarbagePartialMatches(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=3;break;case 3:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+72|0)>>2]|0)?4:5;break;case 4:f=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+72|0)>>2]+8|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+72|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|
0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+72|0)>>2]=f;f=3;break;case 5:f=6;break;case 6:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]|0)?7:13;break;case 7:a=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]+4|0)>>2];f=0!=(HEAPU32[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]>>2]>>>4&1|0)?8:12;break;case 8:f=
0==(HEAPU32[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]>>2]>>>5&1|0)?9:12;break;case 9:f=0!=(HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]+8|0)+(((HEAPU32[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]>>2]>>>6&511)-1|0)<<2)|0)>>2]|0)?10:11;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]+8|0)+(((HEAPU32[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]>>2]>>>6&511)-
1|0)<<2)|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=11;break;case 11:f=12;break;case 12:f=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2];HEAP32[f>>2]&=-3;_ReturnPartialMatch(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+72|0)>>2]+68|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+72|0)>>2]+68|0)>>2]=a;f=6;break;case 13:return;default:assert(0,"bad label: "+f)}}_FlushGarbagePartialMatches.X=1;
function _PartialMatchDefunct(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=0;c=3;break;case 3:c=e>>>0<(HEAPU32[d>>2]>>>6&511)>>>0?4:10;break;case 4:g=HEAP32[(HEAP32[((d+8|0)+(e<<2)|0)>>2]|0)>>2];c=0!=(g|0)?5:8;break;case 5:c=0!=(HEAP32[(HEAP32[(g|0)>>2]+68|0)>>2]|0)?6:8;break;case 6:c=0!=(FUNCTION_TABLE[HEAP32[(HEAP32[(g|0)>>2]+68|0)>>2]](b,g)|0)?8:7;break;case 7:a=1;c=11;break;case 8:c=9;break;case 9:e=e+1|0;c=3;break;case 10:a=0;c=11;break;case 11:return a;default:assert(0,"bad label: "+
c)}}_PartialMatchDefunct.X=1;function _InitializeDefaultRouters(h){_AllocateEnvironmentData(h,46,36,1444);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]|0)>>2]=-1;_EnvDefineFunction2(h,STRING_TABLE.__str3741|0,118,1446,STRING_TABLE.__str13742|0,STRING_TABLE.__str23743|0);_InitializeFileRouter(h);_InitializeStringRouter(h)}
function _ExitCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=f=_EnvArgCountCheck(c,STRING_TABLE.__str3741|0,2,1);f=-1==(f|0)?3:4;break;case 3:f=10;break;case 4:f=0==(a|0)?5:6;break;case 5:_EnvExitRouter(c,0);f=9;break;case 6:b=_EnvRtnLong(c,1);f=0!=(_GetEvaluationError(c)|0)?7:8;break;case 7:f=10;break;case 8:_EnvExitRouter(c,b);f=9;break;case 9:f=10;break;case 10:return;default:assert(0,"bad label: "+f)}}
function _EnvPrintRouter(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;b=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]+28|0)>>2]|0)==(g|0)?3:4;break;case 3:b=i;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]+28|0)>>2],STRING_TABLE.__str33744|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));d=2;b=
17;break;case 4:j=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]+20|0)>>2];b=5;break;case 5:b=0!=(j|0)?6:14;break;case 6:_SetEnvironmentRouterContext(e,HEAP32[(j+16|0)>>2]);b=0!=(HEAP32[(j+24|0)>>2]|0)?7:8;break;case 7:b=0!=(_QueryRouter(e,g,j)|0)?9:13;break;case 8:b=13;break;case 9:b=0!=HEAP16[(j+12|0)>>1]<<16>>16?10:11;break;case 10:FUNCTION_TABLE[HEAP32[(j+24|0)>>2]](e,g,i);b=12;break;case 11:FUNCTION_TABLE[HEAP32[(j+24|0)>>2]](g,i);b=12;break;case 12:d=1;b=17;break;case 13:j=HEAP32[(j+40|0)>>
2];b=5;break;case 14:b=0!=(_strcmp(STRING_TABLE.__str43745|0,g)|0)?15:16;break;case 15:_UnrecognizedRouterMessage(e,g);b=16;break;case 16:d=0;b=17;break;case 17:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvPrintRouter.X=1;
function _QueryRouter(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(HEAP32[(g+4|0)>>2]|0)?3:4;break;case 3:b=0;a=14;break;case 4:a=0==(HEAP32[(g+20|0)>>2]|0)?5:6;break;case 5:b=0;a=14;break;case 6:a=0!=HEAP16[(g+12|0)>>1]<<16>>16?7:10;break;case 7:a=1==(FUNCTION_TABLE[HEAP32[(g+20|0)>>2]](d,e)|0)?8:9;break;case 8:b=1;a=14;break;case 9:a=13;break;case 10:a=1==(FUNCTION_TABLE[HEAP32[(g+20|0)>>2]](e)|0)?11:12;break;case 11:b=1;a=14;break;case 12:a=13;break;case 13:b=0;a=14;break;
case 14:return b;default:assert(0,"bad label: "+a)}}_QueryRouter.X=1;function _UnrecognizedRouterMessage(h,f){_PrintErrorID(h,STRING_TABLE.__str53746|0,1,0);_EnvPrintRouter(h,STRING_TABLE.__str43745|0,STRING_TABLE.__str63747|0);_EnvPrintRouter(h,STRING_TABLE.__str43745|0,f);_EnvPrintRouter(h,STRING_TABLE.__str43745|0,STRING_TABLE.__str73748|0)}function _AbortExit(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]+32|0)>>2]=1}
function _EnvGetcRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+24|0)>>2]|0)==(d|0)?3:9;break;case 3:g=_getc(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+24|0)>>2]);c=13==(g|0)?5:4;break;case 4:c=10==(g|0)?5:8;break;case 5:c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+24|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:_IncrementLineCount(b);c=7;break;case 7:c=8;break;case 8:a=g;c=35;
break;case 9:c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]|0)==(d|0)?10:18;break;case 10:g=HEAPU8[HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+12|0)>>2]+HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0)>>2]|0]&255;c=HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+16|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=0==(g|0)?11:12;break;case 11:a=-1;c=35;break;case 12:c=13==(g|0)?14:13;break;case 13:c=10==(g|0)?14:17;break;case 14:c=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?15:16;break;case 15:_IncrementLineCount(b);c=16;break;case 16:c=17;break;case 17:a=g;c=35;break;case 18:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+20|0)>>2];c=19;break;case 19:c=0!=(e|0)?20:34;break;case 20:c=0!=(HEAP32[(e+32|0)>>2]|0)?21:22;break;case 21:c=0!=(_QueryRouter(b,d,e)|0)?23:33;break;case 22:c=33;break;case 23:c=0!=HEAP16[(e+12|0)>>1]<<16>>16?24:25;break;case 24:g=FUNCTION_TABLE[HEAP32[(e+32|0)>>2]](b,d);c=26;break;case 25:g=FUNCTION_TABLE[HEAP32[(e+
32|0)>>2]](d);c=26;break;case 26:c=13==(g|0)?28:27;break;case 27:c=10==(g|0)?28:32;break;case 28:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?29:31;break;case 29:c=0==(_strcmp(d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+4|0)>>2])|0)?30:31;break;case 30:_IncrementLineCount(b);c=31;break;case 31:c=32;break;case 32:a=g;c=35;break;case 33:e=HEAP32[(e+40|0)>>2];c=19;break;case 34:_UnrecognizedRouterMessage(b,d);a=-1;c=35;break;case 35:return a;default:assert(0,"bad label: "+c)}}
_EnvGetcRouter.X=1;
function _EnvUngetcRouter(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+24|0)>>2]|0)==(g|0)?3:9;break;case 3:a=13==(e|0)?5:4;break;case 4:a=10==(e|0)?5:8;break;case 5:a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+24|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:_DecrementLineCount(d);a=7;break;case 7:a=8;break;case 8:b=_ungetc(e,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+24|0)>>
2]);a=34;break;case 9:a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+8|0)>>2]|0)==(g|0)?10:18;break;case 10:a=13==(e|0)?12:11;break;case 11:a=10==(e|0)?12:15;break;case 12:a=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?13:14;break;case 13:_DecrementLineCount(d);a=14;break;case 14:a=15;break;case 15:a=0<(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+16|0)>>2]|0)?16:17;break;case 16:a=HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>
2]+16|0;HEAP32[a>>2]=HEAP32[a>>2]-1|0;a=17;break;case 17:b=e;a=34;break;case 18:i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+20|0)>>2];a=19;break;case 19:a=0!=(i|0)?20:33;break;case 20:a=0!=(HEAP32[(i+36|0)>>2]|0)?21:22;break;case 21:a=0!=(_QueryRouter(d,g,i)|0)?23:32;break;case 22:a=32;break;case 23:a=13==(e|0)?25:24;break;case 24:a=10==(e|0)?25:29;break;case 25:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+184|0)>>2]+4|0)>>2]|0)?26:28;break;case 26:a=0==(_strcmp(g,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+184|0)>>2]+4|0)>>2])|0)?27:28;break;case 27:_DecrementLineCount(d);a=28;break;case 28:a=29;break;case 29:a=0!=HEAP16[(i+12|0)>>1]<<16>>16?30:31;break;case 30:b=FUNCTION_TABLE[HEAP32[(i+36|0)>>2]](d,e,g);a=34;break;case 31:b=FUNCTION_TABLE[HEAP32[(i+36|0)>>2]](e,g);a=34;break;case 32:i=HEAP32[(i+40|0)>>2];a=19;break;case 33:_UnrecognizedRouterMessage(d,g);b=-1;a=34;break;case 34:return b;default:assert(0,"bad label: "+a)}}_EnvUngetcRouter.X=1;
function _EnvExitRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]+32|0)>>2]=0;d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]+20|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:12;break;case 4:e=HEAP32[(d+40|0)>>2];c=1==(HEAP32[(d+4|0)>>2]|0)?5:11;break;case 5:c=0!=(HEAP32[(d+28|0)>>2]|0)?6:10;break;case 6:c=0!=HEAP16[(d+12|0)>>1]<<16>>16?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(d+28|0)>>2]](a,b);c=9;break;case 8:FUNCTION_TABLE[HEAP32[(d+28|0)>>
2]](b);c=9;break;case 9:c=10;break;case 10:c=11;break;case 11:d=e;c=3;break;case 12:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+184|0)>>2]+32|0)>>2]|0)?13:14;break;case 13:c=15;break;case 14:_genexit(b);c=15;break;case 15:return;default:assert(0,"bad label: "+c)}}_EnvExitRouter.X=1;
function _AddRouter(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t;j=h;k=f;l=c;m=a;n=b;o=d;p=e;t=_GetCurrentEnvironment();g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]|0)?3:4;break;case 3:var u=_genalloc(t,44);g=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];u=HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+236|0)>>2]+16|0)>>2];g=5;break;case 5:q=u;HEAP32[(q|0)>>2]=j;HEAP32[(q+4|0)>>2]=1;HEAP16[(q+12|0)>>1]=0;HEAP32[(q+8|0)>>2]=k;HEAP32[(q+16|0)>>2]=0;HEAP32[(q+20|0)>>2]=l;HEAP32[(q+24|0)>>2]=m;HEAP32[(q+28|0)>>2]=p;HEAP32[(q+32|0)>>2]=n;HEAP32[(q+36|0)>>2]=o;HEAP32[(q+40|0)>>2]=0;g=0==(HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+184|0)>>2]+20|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(t+16|
0)>>2]+184|0)>>2]+20|0)>>2]=q;i=1;g=17;break;case 7:r=0;s=HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+184|0)>>2]+20|0)>>2];g=8;break;case 8:g=0!=(s|0)?9:10;break;case 9:var v=(k|0)<(HEAP32[(s+8|0)>>2]|0)&1;g=11;break;case 10:v=0;g=11;break;case 11:g=0!=(v|0)?12:13;break;case 12:r=s;s=HEAP32[(s+40|0)>>2];g=8;break;case 13:g=0==(r|0)?14:15;break;case 14:HEAP32[(q+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+184|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(t+16|0)>>2]+184|0)>>2]+20|0)>>2]=q;g=16;break;case 15:HEAP32[(q+
40|0)>>2]=s;HEAP32[(r+40|0)>>2]=q;g=16;break;case 16:i=1;g=17;break;case 17:return i;default:assert(0,"bad label: "+g)}}_AddRouter.X=1;function _SetFastLoad(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]+24|0)>>2]=f}function _SetFastSave(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]+28|0)>>2]=f}function _GetFastLoad(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]+24|0)>>2]}function _GetFastSave(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+184|0)>>2]+28|0)>>2]}
function _EnvAddRouter(h,f,c,a,b,d,e,g){return _EnvAddRouterWithContext(h,f,c,a,b,d,e,g,0)}
function _EnvAddRouterWithContext(h,f,c,a,b,d,e,g,i){var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t,u,v,w;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;t=i;j=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]|0)?3:4;break;case 3:var x=_genalloc(l,44);j=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+20|0)>>2]+176|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];x=HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+236|0)>>2]+16|0)>>2];j=5;break;case 5:u=x;HEAP32[(u|0)>>2]=m;HEAP32[(u+4|0)>>2]=1;HEAP16[(u+12|0)>>1]=1;HEAP32[(u+16|0)>>2]=t;HEAP32[(u+8|0)>>2]=n;HEAP32[(u+20|0)>>2]=o;HEAP32[(u+24|0)>>2]=p;HEAP32[(u+28|0)>>2]=s;HEAP32[(u+32|0)>>2]=q;HEAP32[(u+36|0)>>2]=r;HEAP32[(u+40|0)>>2]=0;j=0==(HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+184|0)>>2]+20|0)>>2]|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(l+16|
0)>>2]+184|0)>>2]+20|0)>>2]=u;k=1;j=17;break;case 7:v=0;w=HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+184|0)>>2]+20|0)>>2];j=8;break;case 8:j=0!=(w|0)?9:10;break;case 9:var y=(n|0)<(HEAP32[(w+8|0)>>2]|0)&1;j=11;break;case 10:y=0;j=11;break;case 11:j=0!=(y|0)?12:13;break;case 12:v=w;w=HEAP32[(w+40|0)>>2];j=8;break;case 13:j=0==(v|0)?14:15;break;case 14:HEAP32[(u+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+184|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(l+16|0)>>2]+184|0)>>2]+20|0)>>2]=u;j=16;break;case 15:HEAP32[(u+
40|0)>>2]=w;HEAP32[(v+40|0)>>2]=u;j=16;break;case 16:k=1;j=17;break;case 17:return k;default:assert(0,"bad label: "+j)}}_EnvAddRouterWithContext.X=1;
function _EnvDeleteRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+20|0)>>2];g=0;c=3;break;case 3:c=0!=(e|0)?4:9;break;case 4:c=0==(_strcmp(HEAP32[(e|0)>>2],d)|0)?5:8;break;case 5:c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+20|0)>>2]=HEAP32[(e+40|0)>>2];_rm(b,e,44);a=1;c=10;break;case 7:HEAP32[(g+40|0)>>2]=HEAP32[(e+40|0)>>2];_rm(b,e,44);a=1;c=10;break;case 8:g=e;e=HEAP32[(e+40|0)>>2];c=3;break;case 9:a=
0;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}_EnvDeleteRouter.X=1;function _QueryRouters(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+184|0)>>2]+20|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:7;break;case 4:c=1==(_QueryRouter(b,d,e)|0)?5:6;break;case 5:a=1;c=8;break;case 6:e=HEAP32[(e+40|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _EnvDeactivateRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+184|0)>>2]+20|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:HEAP32[(d+4|0)>>2]=0;a=1;c=8;break;case 6:d=HEAP32[(d+40|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _EnvActivateRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+184|0)>>2]+20|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:a=HEAP32[(d+4|0)>>2]=1;c=8;break;case 6:d=HEAP32[(d+40|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _PrintNRouter(h,f,c,a){var b;b=_genlongalloc(h,a+1|0);_strncpy(b,c,a);HEAP8[b+a|0]=0;f=_EnvPrintRouter(h,f,b);_genlongfree(h,b,a+1|0);return f}function _DefruleBinarySetup(h){_AllocateEnvironmentData(h,20,24,1448);_AddBinaryItem(h,STRING_TABLE.__str3775|0,20,1450,1452,1454,1456,1458,1460,1462)}
function _DeallocateDefruleBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;b=0;f=3;break;case 3:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+8|0)>>2]|0)?4:6;break;case 4:_DestroyAlphaBetaMemory(c,HEAP32[((HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*b|0)+8|0)>>2]);f=5;break;case 5:b=b+1|0;f=3;break;case 6:b=0;f=7;break;case 7:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]|0)>>2]|0)?8:15;break;case 8:f=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+12|
0)>>2]+(b<<4)|0;d=HEAP32[(f+12|0)>>2];f=9;break;case 9:f=0!=(d|0)?10:13;break;case 10:e=HEAP32[(d+28|0)>>2];f=0!=(HEAP32[(d+16|0)>>2]|0)?11:12;break;case 11:_DestroyPartialMatch(c,HEAP32[(d+16|0)>>2]);f=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];d=e;f=9;break;case 13:f=14;break;case 14:b=b+1|0;f=7;break;case 15:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]|0)>>2]<<4|0;f=0!=(a|0)?16:17;break;case 16:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+12|0)>>2],a);f=17;break;case 17:a=56*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?18:19;break;case 18:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+16|0)>>2],a);f=19;break;case 19:a=40*HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+80|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?20:21;break;case 20:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+20|0)>>2],a);f=21;break;case 21:return;default:assert(0,"bad label: "+f)}}_DeallocateDefruleBloadData.X=1;
function _BsaveFind3776(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+4|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+8|0)>>2]);_TagRuleNetwork(c,HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]|0,HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+4|0,HEAP32[(HEAP32[(c+16|0)>>2]+80|0)>>2]+8|0);d=_EnvGetNextDefmodule(c,0);f=3;break;case 3:f=0!=(d|0)?4:14;break;
case 4:_EnvSetCurrentModule(c,d);a=_EnvGetNextDefrule(c,0);f=5;break;case 5:f=0!=(a|0)?6:12;break;case 6:_MarkConstructHeaderNeededItems(a|0,HEAP32[((a|0)+12|0)>>2]);b=_ExpressionSize(HEAP32[(a+36|0)>>2]);f=HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+32|0;HEAP32[f>>2]=HEAP32[f>>2]+b|0;_MarkNeededItems(c,HEAP32[(a+36|0)>>2]);b=a;f=7;break;case 7:f=0!=(b|0)?8:10;break;case 8:f=_ExpressionSize(HEAP32[(b+40|0)>>2]);var e=HEAP32[(HEAP32[(c+16|0)>>2]+180|0)>>2]+32|0;HEAP32[e>>2]=HEAP32[e>>2]+f|0;_MarkNeededItems(c,
HEAP32[(b+40|0)>>2]);f=9;break;case 9:b=HEAP32[(b+52|0)>>2];f=7;break;case 10:f=11;break;case 11:a=_EnvGetNextDefrule(c,a);f=5;break;case 12:f=13;break;case 13:d=_EnvGetNextDefmodule(c,d);f=3;break;case 14:_MarkRuleNetwork(c,1);return;default:assert(0,"bad label: "+f)}}_BsaveFind3776.X=1;
function _BsaveExpressions3777(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(g|0)?4:14;break;case 4:_EnvSetCurrentModule(a,g);d=_EnvGetNextDefrule(a,0);c=5;break;case 5:c=0!=(d|0)?6:12;break;case 6:_BsaveExpression(a,HEAP32[(d+36|0)>>2],b);e=d;c=7;break;case 7:c=0!=(e|0)?8:10;break;case 8:_BsaveExpression(a,HEAP32[(e+40|0)>>2],b);c=9;break;case 9:e=HEAP32[(e+52|0)>>2];c=7;break;case 10:c=11;break;case 11:d=_EnvGetNextDefrule(a,d);c=
5;break;case 12:c=13;break;case 13:g=_EnvGetNextDefmodule(a,g);c=3;break;case 14:_MarkRuleNetwork(a,1);return;default:assert(0,"bad label: "+c)}}_BsaveExpressions3777.X=1;
function _BsaveStorage3778(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=12;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+4|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+8|0,4,f);STACKTOP=c}
function _BsaveBinaryItem3779(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4;b=h;d=f;HEAP32[e>>2]=((44*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+4|0)>>2]|0)+(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+8|0)>>2]<<5|0)|0)+(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]|0)>>2]|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+4|0)>>2]=0;e=_EnvGetNextDefmodule(b,
0);a=3;break;case 3:a=0!=(e|0)?4:6;break;case 4:_EnvSetCurrentModule(b,e);a=b;var j=_FindModuleItem(b,STRING_TABLE.__str3775|0)+4|0;a=_GetModuleItem(a,0,HEAP32[j>>2]);_AssignBsaveDefmdlItemHdrVals(i|0,a|0);_GenWrite(i,12,d);a=5;break;case 5:e=_EnvGetNextDefmodule(b,e);a=3;break;case 6:e=_EnvGetNextDefmodule(b,0);a=7;break;case 7:a=0!=(e|0)?8:14;break;case 8:_EnvSetCurrentModule(b,e);g=_EnvGetNextDefrule(b,0);a=9;break;case 9:a=0!=(g|0)?10:12;break;case 10:_BsaveDisjuncts(b,d,g);a=11;break;case 11:g=
_EnvGetNextDefrule(b,g);a=9;break;case 12:a=13;break;case 13:e=_EnvGetNextDefmodule(b,e);a=7;break;case 14:_MarkRuleNetwork(b,1);_BsaveJoins(b,d);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+4|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+8|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveBinaryItem3779.X=1;
function _BloadStorage3780(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+4|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+8|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+80|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+20|0)>>2]=0;c=4;break;case 4:HEAP32[b>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]|0)>>2]<<4|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+12|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+
80|0)>>2]+20|0)>>2]=0;c=7;break;case 6:HEAP32[b>>2]=56*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+16|0)>>2]=c;HEAP32[b>>2]=40*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+20|0)>>2]=c;c=7;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorage3780.X=1;
function _BloadBinaryItem3781(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]|0)>>2],12,1464);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+4|0)>>2],44,1466);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+8|0)>>2],32,1468);STACKTOP=f}
function _AssignBsavePatternHeaderValues(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=a+4|0;HEAP32[c>>2]=HEAP32[c>>2]&-3|(HEAPU32[(b+12|0)>>2]>>>1&1)<<1;c=0==(HEAP32[(b+8|0)>>2]|0)?3:4;break;case 3:var d=-1;c=5;break;case 4:d=HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2];c=5;break;case 5:HEAP32[(a|0)>>2]=d;d=a+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-2|HEAP32[(b+12|0)>>2]&1;d=a+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-5|(HEAPU32[(b+12|0)>>2]>>>2&1)<<2;d=a+4|0;HEAP32[d>>2]=HEAP32[d>>2]&-65|(HEAPU32[(b+12|0)>>2]>>>5&
1)<<6;a=a+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-129|(HEAPU32[(b+12|0)>>2]>>>6&1)<<7;return;default:assert(0,"bad label: "+c)}}_AssignBsavePatternHeaderValues.X=1;
function _UpdatePatternNodeHeader(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(e+4|0)>>2]&1;a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(e+4|0)>>2]>>>1&1)<<1;a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[(e+4|0)>>2]>>>2&1)<<2;a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-33|(HEAPU32[(e+4|0)>>2]>>>6&1)<<5;a=d+12|0;HEAP32[a>>2]=HEAP32[a>>2]&-65|(HEAPU32[(e+4|0)>>2]>>>7&1)<<6;a=d+12|0;HEAP32[a>>2]&=-9;a=d+12|0;HEAP32[a>>2]&=-17;HEAP32[(d|0)>>
2]=0;HEAP32[(d+4|0)>>2]=0;a=-1==(HEAP32[(e|0)>>2]|0)?3:4;break;case 3:var i=0;a=5;break;case 4:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(e|0)>>2]|0;a=5;break;case 5:g=i;HEAP32[(d+8|0)>>2]=g;a=6;break;case 6:a=0!=(g|0)?7:8;break;case 7:HEAP32[(g+16|0)>>2]=d;g=HEAP32[(g+32|0)>>2];a=6;break;case 8:return;default:assert(0,"bad label: "+a)}}_UpdatePatternNodeHeader.X=1;
function _BloadDefruleModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+12|0)>>2]+(f<<4)|0}
function _ClearBload3782(h){var f=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g=f+4,i;a=h;HEAP32[e>>2]=0;HEAP32[g>>2]=0;_GetNextPatternEntity(a,e,g);c=3;break;case 3:c=0!=(HEAP32[g>>2]|0)?4:5;break;case 4:FUNCTION_TABLE[HEAP32[((HEAP32[(HEAP32[g>>2]|0)>>2]|0)+16|0)>>2]](a,HEAP32[g>>2]);HEAP32[g>>2]=0;_GetNextPatternEntity(a,e,g);c=3;break;case 5:_SaveCurrentModule(a);i=_EnvGetNextDefmodule(a,
0);c=6;break;case 6:c=0!=(i|0)?7:9;break;case 7:_EnvSetCurrentModule(a,i);_RemoveAllActivations(a);c=8;break;case 8:i=_EnvGetNextDefmodule(a,i);c=6;break;case 9:_RestoreCurrentModule(a);_EnvClearFocusStack(a);d=0;c=10;break;case 10:c=(d|0)<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+8|0)>>2]|0)?11:13;break;case 11:_FlushAlphaBetaMemory(a,HEAP32[((HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*d|0)+8|0)>>2]);c=12;break;case 12:d=d+1|0;c=10;break;case 13:d=0;c=14;break;case 14:c=(d|0)<
(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+4|0)>>2]|0)?15:17;break;case 15:_UnmarkConstructHeader(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*d|0);c=16;break;case 16:d=d+1|0;c=14;break;case 17:b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]|0)>>2]<<4|0;c=0!=(b|0)?18:19;break;case 18:_genlongfree(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+12|0)>>2],b);c=19;break;case 19:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]|0)>>2]=0;b=56*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>
2]+4|0)>>2]|0;c=0!=(b|0)?20:21;break;case 20:_genlongfree(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+16|0)>>2],b);c=21;break;case 21:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+4|0)>>2]=0;b=40*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+8|0)>>2]|0;c=0!=(b|0)?22:23;break;case 22:_genlongfree(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+20|0)>>2],b);c=23;break;case 23:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+80|0)>>2]+8|0)>>2]=0;STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
_ClearBload3782.X=1;function _UpdateDefruleModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+12|0)>>2]+(c<<4)|0,56,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+16|0)>>2]);HEAP32[((HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+80|0)>>2]+12|0)>>2]+(c<<4)|0)+12|0)>>2]=0}_UpdateDefruleModule.X=1;
function _UpdateJoin(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[d>>2]&1;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[d>>2]>>>1&1)<<1;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[d>>2]>>>2&1)<<2;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>
2]=HEAP32[a>>2]&-9|(HEAPU32[d>>2]>>>3&1)<<3;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-65025|(HEAPU32[d>>2]>>>7&127)<<9;a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[a>>2]=HEAP32[a>>2]&-449|(HEAPU32[d>>2]>>>4&7)<<6;a=-1==(HEAP32[(d+4|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+4|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+12|0)>>2]=g;a=-1==(HEAP32[(d+12|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+12|0)>>2]|0;a=8;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+20|0)>>2]=i;a=-1==(HEAP32[(d+16|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+16|0)>>2]|0;a=11;break;case 11:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+24|0)>>2]=j;a=1==(HEAPU32[d>>2]>>>2&1|0)?12:16;break;case 12:a=-1==(HEAP32[(d+8|0)>>2]|0)?13:14;break;case 13:var k=0;a=15;break;case 14:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+8|0)>>2]|0;a=15;break;case 15:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+16|0)>>2]=k;a=16;break;case 16:a=-1==(HEAP32[(d+24|0)>>2]|0)?17:18;break;case 17:var l=0;a=19;break;case 18:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>
2]+20|0)>>2]+40*HEAP32[(d+24|0)>>2]|0;a=19;break;case 19:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+32|0)>>2]=l;a=-1==(HEAP32[(d+20|0)>>2]|0)?20:21;break;case 20:var m=0;a=22;break;case 21:m=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+20|0)>>2]|0;a=22;break;case 22:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+28|0)>>2]=m;a=-1==(HEAP32[(d+28|0)>>2]|0)?23:24;break;case 23:var n=0;a=25;break;case 24:n=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+80|0)>>2]+16|0)>>2]+56*HEAP32[(d+28|0)>>2]|0;a=25;break;case 25:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+36|0)>>2]=n;h=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[h>>2]&=-17;h=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0;HEAP32[h>>2]&=-33;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+4|0)>>2]=0;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*e|0)+8|0)>>2]=0;return;default:assert(0,
"bad label: "+a)}}_UpdateJoin.X=1;
function _UpdateDefrule(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;_UpdateConstructHeader(b,d|0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0,16,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+12|0)>>2],56,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]);a=-1==(HEAP32[(d+24|0)>>2]|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+24|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|
0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+36|0)>>2]=g;a=-1==(HEAP32[(d+28|0)>>2]|0)?6:7;break;case 6:var i=0;a=8;break;case 7:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(d+28|0)>>2]<<4)|0;a=8;break;case 8:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+40|0)>>2]=i;a=-1==(HEAP32[(d+32|0)>>2]|0)?9:10;break;case 9:var j=0;a=11;break;case 10:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+32|0)>>2]|0;a=11;break;case 11:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+44|0)>>2]=j;a=-1==(HEAP32[(d+36|0)>>2]|0)?12:13;break;case 12:var k=0;a=14;break;case 13:k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+20|0)>>2]+40*HEAP32[(d+36|0)>>2]|0;a=14;break;case 14:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+48|0)>>2]=k;a=-1==(HEAP32[(d+40|0)>>2]|0)?15:16;break;case 15:var l=0;a=17;break;case 16:l=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*HEAP32[(d+40|0)>>2]|0;a=17;break;case 17:HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+52|0)>>2]=l;HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+24|0)>>2]=HEAP32[(d+12|0)>>2];HEAP32[((HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+28|0)>>2]=HEAP32[(d+16|0)>>2];h=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[h>>2]=HEAP32[h>>2]&-2048|HEAP32[(d+20|0)>>2]&2047;h=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[h>>2]=HEAP32[h>>2]&-16385|(HEAPU32[(d+
20|0)>>2]>>>12&1)<<14;d=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[d>>2]&=-32769;d=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[d>>2]&=-2049;d=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[d>>2]=HEAP32[d>>2]&-4097|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+68|0)>>2]|0)>>2]&1)<<12;e=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+80|0)>>2]+16|0)>>2]+56*e|0)+32|0;HEAP32[e>>2]=HEAP32[e>>2]&-8193|(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+64|0)>>2]+12|0)>>2]&1)<<13;return;default:assert(0,"bad label: "+a)}}_UpdateDefrule.X=1;
function _BsaveDisjuncts(h,f,c){var a=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a,j,k;d=h;e=f;g=c;j=0;k=1;b=3;break;case 3:b=0!=(g|0)?4:24;break;case 4:b=HEAP32[(HEAP32[(d+16|0)>>2]+80|0)>>2]+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;_AssignBsaveConstructHeaderVals(i|0,g|0);HEAP32[(i+12|0)>>2]=HEAP32[(g+24|0)>>2];HEAP32[(i+16|0)>>2]=HEAP32[(g+28|0)>>2];b=i+20|0;HEAP32[b>>2]=HEAP32[b>>2]&-4096|
HEAP32[(g+32|0)>>2]&2047;b=i+20|0;HEAP32[b>>2]=HEAP32[b>>2]&-4097|(HEAPU32[(g+32|0)>>2]>>>14&1)<<12;b=0!=(HEAP32[(g+36|0)>>2]|0)?5:9;break;case 5:b=0!=(k|0)?6:7;break;case 6:HEAP32[(i+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(g+36|0)>>2]);var l=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[l>>2]=HEAP32[l>>2]+b|0;b=8;break;case 7:HEAP32[(i+24|0)>>2]=j;b=8;break;case 8:b=10;break;case 9:HEAP32[(i+
24|0)>>2]=-1;b=10;break;case 10:b=0!=(HEAP32[(g+40|0)>>2]|0)?11:12;break;case 11:HEAP32[(i+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0)>>2];b=_ExpressionSize(HEAP32[(g+40|0)>>2]);l=HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+32|0;HEAP32[l>>2]=HEAP32[l>>2]+b|0;b=13;break;case 12:HEAP32[(i+28|0)>>2]=-1;b=13;break;case 13:b=0==(HEAP32[(g+44|0)>>2]|0)?14:15;break;case 14:var m=-1;b=16;break;case 15:m=HEAP32[(HEAP32[(g+44|0)>>2]+4|0)>>2];b=16;break;case 16:HEAP32[(i+32|0)>>2]=m;b=0==(HEAP32[(g+
48|0)>>2]|0)?17:18;break;case 17:var n=-1;b=19;break;case 18:n=HEAP32[(HEAP32[(g+48|0)>>2]+4|0)>>2];b=19;break;case 19:HEAP32[(i+36|0)>>2]=n;b=0!=(HEAP32[(g+52|0)>>2]|0)?20:21;break;case 20:HEAP32[(i+40|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+80|0)>>2]+4|0)>>2];b=22;break;case 21:HEAP32[(i+40|0)>>2]=-1;b=22;break;case 22:_GenWrite(i,44,e);b=23;break;case 23:g=HEAP32[(g+52|0)>>2];k=0;b=3;break;case 24:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveDisjuncts.X=1;
function _BsaveJoins(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(g|0)?4:21;break;case 4:_EnvSetCurrentModule(a,g);d=_EnvGetNextDefrule(a,0);c=5;break;case 5:c=0!=(d|0)?6:19;break;case 6:e=HEAP32[(d+48|0)>>2];c=7;break;case 7:c=0!=(e|0)?8:15;break;case 8:c=0!=(HEAPU32[e>>2]>>>5&1|0)?9:10;break;case 9:_BsaveJoin(a,b,e);c=10;break;case 10:c=11;break;case 11:c=0!=(HEAPU32[e>>2]>>>2&1|0)?12:13;break;case 12:var i=HEAP32[(e+16|0)>>2];c=
14;break;case 13:i=HEAP32[(e+24|0)>>2];c=14;break;case 14:e=i;c=7;break;case 15:c=0!=(HEAP32[(d+52|0)>>2]|0)?16:17;break;case 16:d=HEAP32[(d+52|0)>>2];c=18;break;case 17:d=_EnvGetNextDefrule(a,d);c=18;break;case 18:c=5;break;case 19:c=20;break;case 20:g=_EnvGetNextDefmodule(a,g);c=3;break;case 21:return;default:assert(0,"bad label: "+c)}}_BsaveJoins.X=1;
function _BsaveJoin(h,f,c){var a=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;d=h;e=f;b=g=c;HEAP32[b>>2]&=-33;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-16257|(HEAPU32[g>>2]>>>9&127)<<7;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-113|(HEAPU32[g>>2]>>>6&7)<<4;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-2|HEAP32[g>>2]&1;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-3|(HEAPU32[g>>2]>>>1&1)<<1;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-5|(HEAPU32[g>>2]>>>
2&1)<<2;b=i;HEAP32[b>>2]=HEAP32[b>>2]&-9|(HEAPU32[g>>2]>>>3&1)<<3;b=0!=(HEAPU32[g>>2]>>>2&1|0)?3:7;break;case 3:b=0==(HEAP32[(g+16|0)>>2]|0)?4:5;break;case 4:var j=-1;b=6;break;case 5:j=HEAP32[(HEAP32[(g+16|0)>>2]+4|0)>>2];b=6;break;case 6:HEAP32[(i+8|0)>>2]=j;b=8;break;case 7:HEAP32[(i+8|0)>>2]=-1;b=8;break;case 8:b=0==(HEAP32[(g+24|0)>>2]|0)?9:10;break;case 9:var k=-1;b=11;break;case 10:k=HEAP32[(HEAP32[(g+24|0)>>2]+4|0)>>2];b=11;break;case 11:HEAP32[(i+16|0)>>2]=k;b=0==(HEAP32[(g+20|0)>>2]|0)?
12:13;break;case 12:var l=-1;b=14;break;case 13:l=HEAP32[(HEAP32[(g+20|0)>>2]+4|0)>>2];b=14;break;case 14:HEAP32[(i+12|0)>>2]=l;b=0==(HEAP32[(g+32|0)>>2]|0)?15:16;break;case 15:var m=-1;b=17;break;case 16:m=HEAP32[(HEAP32[(g+32|0)>>2]+4|0)>>2];b=17;break;case 17:HEAP32[(i+24|0)>>2]=m;b=0==(HEAP32[(g+28|0)>>2]|0)?18:19;break;case 18:var n=-1;b=20;break;case 19:n=HEAP32[(HEAP32[(g+28|0)>>2]+4|0)>>2];b=20;break;case 20:HEAP32[(i+20|0)>>2]=n;b=_HashedExpressionIndex(d,HEAP32[(g+12|0)>>2]);HEAP32[(i+4|
0)>>2]=b;b=0!=(HEAP32[(g+36|0)>>2]|0)?21:22;break;case 21:HEAP32[(i+28|0)>>2]=HEAP32[(HEAP32[(g+36|0)>>2]+12|0)>>2];b=23;break;case 22:HEAP32[(i+28|0)>>2]=-1;b=23;break;case 23:_GenWrite(i,32,e);STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_BsaveJoin.X=1;
function _ConstructJoins(h,f,c){var a=STACKTOP;STACKTOP+=128;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q=a,r,s,t,u;d=h;e=f;g=c;i=0;r=o=l=k=1;s=0;_AttachTestCEsToPatternCEs(d,g);b=3;break;case 3:b=0!=(g|0)?4:34;break;case 4:b=0==(HEAP32[(g+68|0)>>2]|0)?5:6;break;case 5:s=1;b=6;break;case 6:b=7;break;case 7:b=(HEAP32[(g+44|0)>>2]|0)>(r|0)?8:9;break;case 8:HEAP32[(q+((r-1|0)<<2)|0)>>2]=i;r=r+1|0;
b=7;break;case 9:t=HEAP32[(HEAP32[(g+28|0)>>2]+8|0)>>2];j=FUNCTION_TABLE[HEAP32[(HEAP32[(g+28|0)>>2]+24|0)>>2]](d,g);b=(o|0)==(e|0)?10:11;break;case 10:p=1;b=12;break;case 11:p=0;b=12;break;case 12:b=1==(k|0)?13:14;break;case 13:m=HEAP32[(j+8|0)>>2];b=15;break;case 14:m=HEAP32[(i+20|0)>>2];b=15;break;case 15:u=HEAP32[(g+48|0)>>2];b=1==(l|0)?16:21;break;case 16:n=b=_FindShareableJoin(m,j,k,HEAP32[(g+8|0)>>2]&1,p,HEAP32[(g+52|0)>>2],u,r,s,q|0);b=0!=(b|0)?17:21;break;case 17:b=1==(_EnvGetWatchItem(d,
STRING_TABLE.__str3787|0)|0)?18:20;break;case 18:b=0!=(_GetPrintWhileLoading(d)|0)?19:20;break;case 19:_EnvPrintRouter(d,STRING_TABLE.__str13788|0,STRING_TABLE.__str23789|0);b=20;break;case 20:i=n;b=22;break;case 21:l=0;b=i=_CreateNewJoin(d,HEAP32[(g+52|0)>>2],i,j,0,HEAP32[(g+8|0)>>2]&1);HEAP32[b>>2]=HEAP32[b>>2]&-449|(t&7)<<6;b=22;break;case 22:b=23;break;case 23:b=(u|0)<(r|0)?24:33;break;case 24:r=r-1|0;b=0==(HEAP32[(i+20|0)>>2]|0)?25:26;break;case 25:l=0;b=26;break;case 26:b=0!=(l|0)?27:31;break;
case 27:b=1==(_EnvGetWatchItem(d,STRING_TABLE.__str3787|0)|0)?28:30;break;case 28:b=0!=(_GetPrintWhileLoading(d)|0)?29:30;break;case 29:_EnvPrintRouter(d,STRING_TABLE.__str13788|0,STRING_TABLE.__str23789|0);b=30;break;case 30:i=HEAP32[(i+20|0)>>2];b=32;break;case 31:i=_CreateNewJoin(d,0,HEAP32[(q+((r-1|0)<<2)|0)>>2],i,1,0);b=32;break;case 32:b=23;break;case 33:g=HEAP32[(g+68|0)>>2];o=o+1|0;k=0;b=3;break;case 34:b=1==(_EnvGetWatchItem(d,STRING_TABLE.__str3787|0)|0)?35:37;break;case 35:b=0!=(_GetPrintWhileLoading(d)|
0)?36:37;break;case 36:_EnvPrintRouter(d,STRING_TABLE.__str13788|0,STRING_TABLE.__str33790|0);b=37;break;case 37:return h=i,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_ConstructJoins.X=1;
function _AttachTestCEsToPatternCEs(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;c=3;break;case 3:c=0!=(b|0)?4:21;break;case 4:c=0!=(HEAP32[(b+8|0)>>2]&1|0)?5:6;break;case 5:e=0;c=7;break;case 6:d=b;e=HEAP32[(b+68|0)>>2];c=7;break;case 7:c=8;break;case 8:c=0!=(e|0)?9:20;break;case 9:c=(HEAP32[(e+44|0)>>2]|0)!=(HEAP32[(b+44|0)>>2]|0)?11:10;break;case 10:c=0!=(HEAP32[(e+8|0)>>2]&1|0)?11:12;break;case 11:d=e;e=HEAP32[(e+68|0)>>2];c=19;break;case 12:c=150==(HEAPU16[(e|0)>>1]&65535|0)?
13:14;break;case 13:e=0;c=18;break;case 14:c=154==(HEAPU16[(e|0)>>1]&65535|0)?15:16;break;case 15:c=_CombineExpressions(a,HEAP32[(b+52|0)>>2],HEAP32[(e+52|0)>>2]);HEAP32[(b+52|0)>>2]=c;HEAP32[(e+52|0)>>2]=0;c=HEAP32[(e+68|0)>>2];HEAP32[(e+68|0)>>2]=0;HEAP32[(d+68|0)>>2]=c;HEAP32[(d+48|0)>>2]=HEAP32[(e+48|0)>>2];_ReturnLHSParseNodes(a,e);e=c;c=17;break;case 16:_SystemError(a,STRING_TABLE.__str53792|0,1);_EnvExitRouter(a,1);c=17;break;case 17:c=18;break;case 18:c=19;break;case 19:c=8;break;case 20:b=
HEAP32[(b+68|0)>>2];c=3;break;case 21:return;default:assert(0,"bad label: "+c)}}_AttachTestCEsToPatternCEs.X=1;
function _FindShareableJoin(h,f,c,a,b,d,e,g,i,j){var k;for(k=2;;)switch(k){case 2:var l,m,n,o,p,q,r,s,t,u,v;m=h;n=f;o=c;p=a;q=b;r=d;s=e;t=g;u=i;v=j;k=3;break;case 3:k=0!=(m|0)?4:12;break;case 4:k=(HEAP32[(m+16|0)>>2]|0)==(n|0)?5:8;break;case 5:k=0!=(_TestJoinForReuse(m,o,p,q,r,s,t,u,v)|0)?6:7;break;case 6:l=m;k=13;break;case 7:k=8;break;case 8:k=0!=(o|0)?9:10;break;case 9:m=HEAP32[(m+32|0)>>2];k=11;break;case 10:m=HEAP32[(m+28|0)>>2];k=11;break;case 11:k=3;break;case 12:l=0;k=13;break;case 13:return l;
default:assert(0,"bad label: "+k)}}_FindShareableJoin.X=1;
function _CreateNewJoin(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;m=d;e=1==(_EnvGetWatchItem(g,STRING_TABLE.__str3787|0)|0)?3:5;break;case 3:e=0!=(_GetPrintWhileLoading(g)|0)?4:5;break;case 4:_EnvPrintRouter(g,STRING_TABLE.__str13788|0,STRING_TABLE.__str43791|0);e=5;break;case 5:e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]|0)?6:7;break;case 6:var o=_genalloc(g,40);e=8;break;case 7:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|
0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];o=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=8;break;case 8:n=o;HEAP32[(n+8|0)>>2]=0;HEAP32[(n+20|0)>>2]=0;e=n;HEAP32[e>>2]=HEAP32[e>>2]&-5|(l&1)<<2;e=n;HEAP32[e>>2]=HEAP32[e>>2]&-9|(m&1)<<3;e=_EnvGetIncrementalReset(g);var p=n;HEAP32[p>>2]=HEAP32[p>>
2]&-17|(e&1)<<4;e=n;HEAP32[e>>2]&=-3;HEAP32[(n+36|0)>>2]=0;e=_AddHashedExpression(g,i);HEAP32[(n+12|0)>>2]=e;HEAP32[(n+24|0)>>2]=j;e=0==(j|0)?9:10;break;case 9:e=n;HEAP32[e>>2]=HEAP32[e>>2]&-2|1;e=n;HEAP32[e>>2]=HEAP32[e>>2]&-65025|512;HEAP32[(n+28|0)>>2]=0;e=11;break;case 10:e=n;HEAP32[e>>2]&=-2;e=n;HEAP32[e>>2]=HEAP32[e>>2]&-65025|(HEAPU32[j>>2]>>>9&127)<<9;p=e=n;HEAP32[p>>2]=HEAP32[p>>2]&-65025|(((HEAPU32[e>>2]>>>9&127)+1|0)&127)<<9;HEAP32[(n+28|0)>>2]=HEAP32[(j+20|0)>>2];HEAP32[(j+20|0)>>2]=n;
e=11;break;case 11:HEAP32[(n+16|0)>>2]=k;e=0!=(l|0)?12:13;break;case 12:HEAP32[(n+32|0)>>2]=0;HEAP32[(k+20|0)>>2]=n;e=14;break;case 13:HEAP32[(n+32|0)>>2]=HEAP32[(k+8|0)>>2];HEAP32[(k+8|0)>>2]=n;e=14;break;case 14:return n;default:assert(0,"bad label: "+e)}}_CreateNewJoin.X=1;
function _TestJoinForReuse(h,f,c,a,b,d,e,g,i){var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s;l=h;j=f;m=c;n=a;o=b;p=d;q=e;r=g;s=i;j=(HEAP32[l>>2]&1|0)!=(j|0)?3:4;break;case 3:k=0;j=37;break;case 4:j=(HEAPU32[l>>2]>>>3&1|0)!=(m|0)?5:6;break;case 5:k=0;j=37;break;case 6:j=1==(n|0)?7:10;break;case 7:j=0==(HEAPU32[l>>2]>>>1&1|0)?8:10;break;case 8:j=0!=(HEAP32[(l+8|0)>>2]|0)?9:10;break;case 9:k=0;j=37;break;case 10:j=1!=(_IdenticalExpression(HEAP32[(l+12|0)>>2],o)|0)?11:12;break;case 11:k=0;j=37;
break;case 12:j=13;break;case 13:j=(p|0)<(q|0)?14:23;break;case 14:l=HEAP32[(l+20|0)>>2];j=0==(l|0)?15:16;break;case 15:k=0;j=37;break;case 16:j=0==(HEAPU32[l>>2]>>>2&1|0)?17:18;break;case 17:k=0;j=37;break;case 18:j=(HEAP32[(s+((q-2|0)<<2)|0)>>2]|0)!=(HEAP32[(l+24|0)>>2]|0)?19:20;break;case 19:k=0;j=37;break;case 20:j=21;break;case 21:j=22;break;case 22:q=q-1|0;j=13;break;case 23:j=0!=(r|0)?24:29;break;case 24:j=0!=(HEAP32[(l+36|0)>>2]|0)?25:26;break;case 25:k=0;j=37;break;case 26:j=0!=(HEAP32[(l+
8|0)>>2]|0)?27:28;break;case 27:k=0;j=37;break;case 28:j=29;break;case 29:j=0!=(r|0)?36:30;break;case 30:j=0!=(HEAP32[(l+20|0)>>2]|0)?31:36;break;case 31:j=1==(HEAPU32[HEAP32[(l+20|0)>>2]>>2]>>>2&1|0)?32:35;break;case 32:j=(HEAP32[(HEAP32[(l+20|0)>>2]+16|0)>>2]|0)==(l|0)?33:34;break;case 33:k=0;j=37;break;case 34:j=35;break;case 35:j=36;break;case 36:k=1;j=37;break;case 37:return k;default:assert(0,"bad label: "+j)}}_TestJoinForReuse.X=1;
function _DefruleBasicCommands(h){_EnvAddResetFunction(h,STRING_TABLE.__str3793|0,1470,70);_AddSaveFunction(h,STRING_TABLE.__str3793|0,1472,0);_AddClearReadyFunction(h,STRING_TABLE.__str3793|0,1474,0);_EnvAddClearFunction(h,STRING_TABLE.__str3793|0,1476,0);_AddWatchItem(h,STRING_TABLE.__str13794|0,0,HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+12|0,70,4,6);_EnvDefineFunction2(h,STRING_TABLE.__str23795|0,109,1478,STRING_TABLE.__str33796|0,STRING_TABLE.__str43797|0);_EnvDefineFunction2(h,STRING_TABLE.__str53798|
0,118,1480,STRING_TABLE.__str63799|0,STRING_TABLE.__str73800|0);_EnvDefineFunction2(h,STRING_TABLE.__str83801|0,119,1482,STRING_TABLE.__str93802|0,STRING_TABLE.__str73800|0);_EnvDefineFunction2(h,STRING_TABLE.__str13794|0,118,1484,STRING_TABLE.__str103803|0,STRING_TABLE.__str43797|0);_EnvDefineFunction2(h,STRING_TABLE.__str113804|0,118,1484,STRING_TABLE.__str103803|0,STRING_TABLE.__str43797|0);_EnvDefineFunction2(h,STRING_TABLE.__str123805|0,118,1486,STRING_TABLE.__str133806|0,STRING_TABLE.__str73800|
0);_DefruleBinarySetup(h);_DefruleCompilerSetup(h)}function _ResetDefrules(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+8|0)>>2]=0;_EnvClearFocusStack(h);var f=_EnvFindDefmodule(h,STRING_TABLE.__str143807|0);_EnvFocus(h,f)}function _SaveDefrules(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}
function _ClearDefrulesReady(h){var f;for(f=2;;)switch(f){case 2:var c,a;a=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]|0)>>2]|0)?3:4;break;case 3:c=0;f=7;break;case 4:_EnvClearFocusStack(a);f=0==(_EnvGetCurrentModule(a)|0)?5:6;break;case 5:c=0;f=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+64|0)>>2]+8|0)>>2]=0;c=1;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}function _ClearDefrules(h){var f=_EnvFindDefmodule(h,STRING_TABLE.__str143807|0);_EnvFocus(h,f)}
function _DefruleWatchAccess(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;b=f;g=c;i=a;b=0!=(b|0)?3:4;break;case 3:d=_ConstructSetWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+64|0)>>2]|0)>>2],g,i,1488,1490);b=5;break;case 4:d=_ConstructSetWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+64|0)>>2]|0)>>2],g,i,1492,1494);b=5;break;case 5:return d;default:assert(0,"bad label: "+b)}}
function _EnvGetDefruleWatchActivations(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=3;break;case 3:c=0!=(b|0)?4:8;break;case 4:c=0!=(HEAPU32[(b+32|0)>>2]>>>12&1|0)?5:6;break;case 5:a=1;c=9;break;case 6:c=7;break;case 7:b=HEAP32[(b+52|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvGetDefruleWatchFirings(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;b=f;c=3;break;case 3:c=0!=(b|0)?4:8;break;case 4:c=0!=(HEAPU32[(b+32|0)>>2]>>>13&1|0)?5:6;break;case 5:a=1;c=9;break;case 6:c=7;break;case 7:b=HEAP32[(b+52|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvSetDefruleWatchActivations(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=3;break;case 3:h=0!=(b|0)?4:6;break;case 4:h=b+32|0;HEAP32[h>>2]=HEAP32[h>>2]&-4097|(a&1)<<12;h=5;break;case 5:b=HEAP32[(b+52|0)>>2];h=3;break;case 6:return;default:assert(0,"bad label: "+h)}}
function _EnvSetDefruleWatchFirings(h,f,c){for(h=2;;)switch(h){case 2:var a,b;a=f;b=c;h=3;break;case 3:h=0!=(b|0)?4:6;break;case 4:h=b+32|0;HEAP32[h>>2]=HEAP32[h>>2]&-8193|(a&1)<<13;h=5;break;case 5:b=HEAP32[(b+52|0)>>2];h=3;break;case 6:return;default:assert(0,"bad label: "+h)}}
function _DefruleWatchPrint(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;b=c;i=a;b=0!=(b|0)?3:4;break;case 3:d=_ConstructPrintWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+64|0)>>2]|0)>>2],g,i,1488,1490);b=5;break;case 4:d=_ConstructPrintWatchAccess(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+64|0)>>2]|0)>>2],g,i,1488,1490);b=5;break;case 5:return d;default:assert(0,"bad label: "+b)}}
function _GetDefruleListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str23795|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _UndefruleCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str53798|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _DefruleModuleFunction(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str83801|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}
function _ListDefrulesCommand(h){_ListConstructCommand(h,STRING_TABLE.__str113804|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _PPDefruleCommand(h){_PPConstructCommand(h,STRING_TABLE.__str123805|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _EnvUndefrule(h,f){return _Undefconstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _EnvGetDefruleList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2],c)}
function _PPDefrule(h,f,c){return _PPConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _EnvListDefrules(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2],f,c)}function _DefruleCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str3812|0,0,1496,0,1498,3);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+20|0)>>2]=f}
function _BeforeDefrulesCode(h){var f=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_TagRuleNetwork(h,f,f+4,f+8);STACKTOP=f}
function _ConstructToCode3830(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t=e+4,u=e+8,v,w=e+12,x=e+16,y=e+20,A=e+24,z,B,C;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;HEAP32[t>>2]=0;HEAP32[u>>2]=1;v=0;HEAP32[w>>2]=0;HEAP32[x>>2]=1;HEAP32[y>>2]=0;HEAP32[A>>2]=1;C=B=z=0;_fprintf(m,STRING_TABLE.__str23814|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<
2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:27;break;case 4:_EnvSetCurrentModule(j,q);B=_OpenFileIfNeeded(j,B,k,l,n,p,HEAP32[x>>2],m,STRING_TABLE.__str33815|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(B|0)?5:6;break;case 5:_CloseDefruleFiles(j,B,C,z,o);i=0;g=28;break;case 6:_DefruleModuleToCode(j,B,q,n,o,v);B=_CloseFileIfNeeded(j,B,w,x,o,
0,0);r=_EnvGetNextDefrule(j,0);g=7;break;case 7:g=0!=(r|0)?8:25;break;case 8:C=_OpenFileIfNeeded(j,C,k,l,n,p,HEAP32[A>>2],m,STRING_TABLE.__str43816|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(C|0)?9:10;break;case 9:_CloseDefruleFiles(j,B,C,z,o);i=0;g=28;break;case 10:_DefruleToCode(j,C,r,n,o,v);HEAP32[y>>2]=HEAP32[y>>2]+1|0;C=_CloseFileIfNeeded(j,C,y,A,o,0,0);s=HEAP32[(r+48|0)>>2];g=11;break;case 11:g=0!=(s|0)?12:21;break;case 12:g=0!=(HEAPU32[s>>
2]>>>5&1|0)?13:16;break;case 13:z=_OpenFileIfNeeded(j,z,k,l,n,p,HEAP32[u>>2],m,STRING_TABLE.__str53817|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2],0,0);g=0==(z|0)?14:15;break;case 14:_CloseDefruleFiles(j,B,C,z,o);i=0;g=28;break;case 15:_JoinToCode(j,z,s,n,o);HEAP32[t>>2]=HEAP32[t>>2]+1|0;z=_CloseFileIfNeeded(j,z,t,u,o,0,0);g=16;break;case 16:g=17;break;case 17:g=0!=(HEAPU32[s>>2]>>>2&1|0)?18:19;break;case 18:var D=HEAP32[(s+16|0)>>2];g=20;break;case 19:D=
HEAP32[(s+24|0)>>2];g=20;break;case 20:s=D;g=11;break;case 21:g=0!=(HEAP32[(r+52|0)>>2]|0)?22:23;break;case 22:r=HEAP32[(r+52|0)>>2];g=24;break;case 23:r=_EnvGetNextDefrule(j,r);g=24;break;case 24:g=7;break;case 25:v=v+1|0;HEAP32[w>>2]=HEAP32[w>>2]+1|0;g=26;break;case 26:q=_EnvGetNextDefmodule(j,q);g=3;break;case 27:_CloseDefruleFiles(j,B,C,z,o);i=1;g=28;break;case 28:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstructToCode3830.X=1;
function _DefruleCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str13813|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,tempInt));
STACKTOP=d}
function _CloseDefruleFiles(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+4;g=h;i=f;j=c;k=a;l=b;HEAP32[m>>2]=l;HEAP32[n>>2]=0;e=0!=(k|0)?3:4;break;case 3:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,k,m,n,l,0,0);e=4;break;case 4:e=0!=(j|0)?5:6;break;case 5:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,j,m,n,l,0,0);e=6;break;case 6:e=0!=(i|0)?7:8;break;case 7:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,
i,m,n,l,0,0);e=8;break;case 8:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _DefruleModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str133825|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+4|0)>>
2]);_fprintf(f,STRING_TABLE.__str153827|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _DefruleToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m;i=h;j=f;k=c;l=a;m=b;g=d;_fprintf(j,STRING_TABLE.__str133825|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(i,j,k|0,l,m,g,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+64|0)>>2]+20|0)>>2]+
20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+4|0)>>2]);g=HEAP32[(k+24|0)>>2];var n=HEAP32[(k+28|0)>>2],o=HEAP32[(k+32|0)>>2]&2047,p=HEAPU32[(k+32|0)>>2]>>>11&1,q=HEAPU32[(k+32|0)>>2]>>>12&1,r=HEAPU32[(k+32|0)>>2]>>>13&1,s=HEAPU32[(k+32|0)>>2]>>>14&1,t=HEAPU32[(k+32|0)>>2]>>>15&1;_fprintf(j,STRING_TABLE.__str143826|0,(tempInt=STACKTOP,STACKTOP+=32,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=
n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,HEAP32[tempInt+16>>2]=q,HEAP32[tempInt+20>>2]=r,HEAP32[tempInt+24>>2]=s,HEAP32[tempInt+28>>2]=t,tempInt));_ExpressionToCode(i,j,HEAP32[(k+36|0)>>2]);_fprintf(j,STRING_TABLE.__str83820|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ExpressionToCode(i,j,HEAP32[(k+40|0)>>2]);_fprintf(j,STRING_TABLE.__str83820|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+
3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0!=(HEAP32[(k+44|0)>>2]|0)?3:4;break;case 3:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=l;o=((HEAP32[(HEAP32[(k+44|0)>>2]+4|0)>>2]|0)/(m|0)&-1)+1|0;p=(HEAP32[(HEAP32[(k+44|0)>>2]+4|0)>>2]|0)%(m|0);_fprintf(j,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+
4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));g=5;break;case 4:_fprintf(j,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=5;break;case 5:g=0!=(HEAP32[(k+48|0)>>2]|0)?6:7;break;case 6:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=l;o=((HEAP32[(HEAP32[(k+48|0)>>2]+4|0)>>2]|0)/(m|0)&-1)+1|0;p=(HEAP32[(HEAP32[(k+
48|0)>>2]+4|0)>>2]|0)%(m|0);_fprintf(j,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));g=8;break;case 7:_fprintf(j,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=8;break;case 8:g=0!=(HEAP32[(k+52|0)>>2]|0)?9:
10;break;case 9:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+4|0)>>2];n=l;o=((HEAP32[((HEAP32[(k+52|0)>>2]|0)+12|0)>>2]|0)/(m|0)&-1)+1|0;p=(HEAP32[((HEAP32[(k+52|0)>>2]|0)+12|0)>>2]|0)%(m|0);_fprintf(j,STRING_TABLE.__str123824|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));g=11;break;case 10:_fprintf(j,STRING_TABLE.__str113823|
0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=11;break;case 11:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_DefruleToCode.X=1;
function _JoinToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;e=j;HEAP32[e>>2]&=-33;e=HEAP32[j>>2]&1;var n=HEAPU32[j>>2]>>>1&1,o=HEAPU32[j>>2]>>>2&1,p=HEAPU32[j>>2]>>>3&1,q=HEAPU32[j>>2]>>>6&7,r=HEAPU32[j>>2]>>>9&127;_fprintf(i,STRING_TABLE.__str63818|0,(tempInt=STACKTOP,STACKTOP+=24,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,HEAP32[tempInt+16>>2]=q,HEAP32[tempInt+20>>2]=r,tempInt));_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintHashedExpressionReference(g,i,HEAP32[(j+12|0)>>2],k,l);_fprintf(i,STRING_TABLE.__str83820|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=0==(HEAP32[(j+16|0)>>2]|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=11;break;case 4:e=0==(HEAPU32[j>>2]>>>2&1|0)?5:9;break;case 5:m=_GetPatternParser(g,HEAPU32[j>>2]>>>6&7);e=0==(HEAP32[(m+84|0)>>2]|0)?6:7;break;case 6:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=8;break;case 7:_fprintf(i,STRING_TABLE.__str93821|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));FUNCTION_TABLE[HEAP32[(m+84|0)>>2]](g,HEAP32[(j+16|0)>>2],i,k,l);_fprintf(i,STRING_TABLE.__str83820|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));e=8;break;case 8:e=10;break;case 9:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((HEAP32[(HEAP32[(j+16|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+1|0;p=(HEAP32[(HEAP32[(j+16|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=10;
break;case 10:e=11;break;case 11:e=0==(HEAP32[(j+20|0)>>2]|0)?12:13;break;case 12:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=14;break;case 13:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((HEAP32[(HEAP32[(j+20|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+1|0;p=(HEAP32[(HEAP32[(j+20|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str103822|
0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=14;break;case 14:e=0==(HEAP32[(j+24|0)>>2]|0)?15:16;break;case 15:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=17;break;case 16:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((HEAP32[(HEAP32[(j+24|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+1|0;p=(HEAP32[(HEAP32[(j+24|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=17;break;case 17:e=0==(HEAP32[(j+28|0)>>2]|0)?18:19;break;case 18:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=
STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=20;break;case 19:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((HEAP32[(HEAP32[(j+28|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+1|0;p=(HEAP32[(HEAP32[(j+28|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=
e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=20;break;case 20:e=0==(HEAP32[(j+32|0)>>2]|0)?21:22;break;case 21:_fprintf(i,STRING_TABLE.__str73819|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=23;break;case 22:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((HEAP32[(HEAP32[(j+32|0)>>2]+4|0)>>2]|0)/(l|0)&-1)+
1|0;p=(HEAP32[(HEAP32[(j+32|0)>>2]+4|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str103822|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=23;break;case 23:e=0==(HEAP32[(j+36|0)>>2]|0)?24:25;break;case 24:_fprintf(i,STRING_TABLE.__str113823|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=0,tempInt));e=26;break;case 25:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+64|0)>>2]+20|0)>>2]+20|0)>>2]+4|0)>>2];n=k;o=((HEAP32[((HEAP32[(j+36|0)>>2]|0)+12|0)>>2]|0)/(l|0)&-1)+1|0;p=(HEAP32[((HEAP32[(j+36|0)>>2]|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str123824|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));e=26;break;case 26:STACKTOP=
d;return;default:assert(0,"bad label: "+e)}}_JoinToCode.X=1;
function _DefruleCommands(h){_EnvDefineFunction2(h,STRING_TABLE.__str3831|0,118,1500,STRING_TABLE.__str13832|0,STRING_TABLE.__str23833|0);_EnvDefineFunction2(h,STRING_TABLE.__str33834|0,118,1502,STRING_TABLE.__str43835|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str63837|0,98,1504,STRING_TABLE.__str73838|0,STRING_TABLE.__str83839|0);_EnvDefineFunction2(h,STRING_TABLE.__str93840|0,118,1506,STRING_TABLE.__str103841|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str113842|
0,109,1508,STRING_TABLE.__str123843|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str133844|0,119,1510,STRING_TABLE.__str143845|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str153846|0,119,1512,STRING_TABLE.__str163847|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str173848|0,118,1514,STRING_TABLE.__str183849|0,STRING_TABLE.__str193850|0);_EnvDefineFunction2(h,STRING_TABLE.__str203851|0,118,1516,STRING_TABLE.__str213852|0,STRING_TABLE.__str223853|
0);_EnvDefineFunction2(h,STRING_TABLE.__str233854|0,118,1518,STRING_TABLE.__str243855|0,STRING_TABLE.__str253856|0);_EnvDefineFunction2(h,STRING_TABLE.__str263857|0,118,1520,STRING_TABLE.__str273858|0,STRING_TABLE.__str193850|0);_EnvDefineFunction2(h,STRING_TABLE.__str283859|0,118,1522,STRING_TABLE.__str293860|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str303861|0,118,1524,STRING_TABLE.__str313862|0,STRING_TABLE.__str323863|0);_EnvDefineFunction2(h,STRING_TABLE.__str333864|
0,118,1526,STRING_TABLE.__str343865|0,STRING_TABLE.__str323863|0);_EnvDefineFunction2(h,STRING_TABLE.__str353866|0,98,1528,STRING_TABLE.__str363867|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str373868|0,98,1530,STRING_TABLE.__str383869|0,STRING_TABLE.__str393870|0);_EnvDefineFunction2(h,STRING_TABLE.__str403871|0,119,1532,STRING_TABLE.__str413872|0,STRING_TABLE.__str53836|0);_EnvDefineFunction2(h,STRING_TABLE.__str423873|0,119,1534,STRING_TABLE.__str433874|0,STRING_TABLE.__str193850|
0)}function _MatchesCommand(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;a=_GetConstructName(c,STRING_TABLE.__str263857|0,STRING_TABLE.__str443875|0);f=0==(a|0)?3:4;break;case 3:f=7;break;case 4:b=_EnvFindDefrule(c,a);f=0==(b|0)?5:6;break;case 5:_CantFindItemErrorMessage(c,STRING_TABLE.__str453876|0,a);f=7;break;case 6:_EnvMatches(c,b);f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}
function _EnvMatches(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n,o,p;b=h;e=d=f;c=3;break;case 3:c=0!=(d|0)?4:44;break;case 4:k=HEAP32[(d+48|0)>>2];m=_GetPatternNumberFromJoin(k);i=_genalloc(b,12*m|0);j=k;l=m-1|0;c=5;break;case 5:c=0!=(j|0)?6:10;break;case 6:c=0!=(HEAPU32[j>>2]>>>2&1|0)?7:8;break;case 7:j=HEAP32[(j+16|0)>>2];c=9;break;case 8:HEAP32[(i+(l<<2)|0)>>2]=HEAP32[(HEAP32[(j+16|0)>>2]|0)>>2];l=l-1|0;j=HEAP32[(j+24|0)>>2];c=9;break;case 9:c=5;break;case 10:l=0;c=11;break;
case 11:c=(l|0)<(m|0)?12:23;break;case 12:c=1==(_GetHaltExecution(b)|0)?13:14;break;case 13:_genfree(b,i,12*m|0);a=1;c=55;break;case 14:_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str473878|0);_PrintLongInteger(b,STRING_TABLE.__str463877|0,l+1|0);_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str483879|0);g=HEAP32[(i+(l<<2)|0)>>2];c=0==(g|0)?15:16;break;case 15:_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str493880|0);c=16;break;case 16:c=17;break;case 17:c=
0!=(g|0)?18:21;break;case 18:c=1==(_GetHaltExecution(b)|0)?19:20;break;case 19:_genfree(b,i,12*m|0);a=1;c=55;break;case 20:_PrintPartialMatch(b,STRING_TABLE.__str463877|0,g);_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str483879|0);g=HEAP32[(g+4|0)>>2];c=17;break;case 21:c=22;break;case 22:l=l+1|0;c=11;break;case 23:_genfree(b,i,12*m|0);m=HEAPU32[k>>2]>>>9&127;i=_genalloc(b,12*m|0);j=k;l=m-1|0;c=24;break;case 24:c=0<=(l|0)?25:27;break;case 25:HEAP32[(i+(l<<2)|0)>>2]=HEAP32[(j+8|0)>>
2];j=HEAP32[(j+24|0)>>2];c=26;break;case 26:l=l-1|0;c=24;break;case 27:l=1;c=28;break;case 28:c=(l|0)<(m|0)?29:42;break;case 29:c=1==(_GetHaltExecution(b)|0)?30:31;break;case 30:_genfree(b,i,12*m|0);a=1;c=55;break;case 31:p=0;_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str503881|0);_PrintLongInteger(b,STRING_TABLE.__str463877|0,l+1|0);_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str483879|0);g=HEAP32[(i+(l<<2)|0)>>2];c=32;break;case 32:c=0!=(g|0)?33:38;break;case 33:c=
1==(_GetHaltExecution(b)|0)?34:35;break;case 34:_genfree(b,i,12*m|0);a=1;c=55;break;case 35:c=0==(HEAPU32[g>>2]>>>5&1|0)?36:37;break;case 36:p=p+1|0;_PrintPartialMatch(b,STRING_TABLE.__str463877|0,g);_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str483879|0);c=37;break;case 37:g=HEAP32[(g+4|0)>>2];c=32;break;case 38:c=0==(p|0)?39:40;break;case 39:_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str493880|0);c=40;break;case 40:c=41;break;case 41:l=l+1|0;c=28;break;case 42:_genfree(b,
i,12*m|0);c=43;break;case 43:d=HEAP32[(d+52|0)>>2];c=3;break;case 44:d=e;_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str513882|0);o=1;n=_EnvGetNextActivation(b,0);c=45;break;case 45:c=0!=(n|0)?46:52;break;case 46:c=1==(_GetHaltExecution(b)|0)?47:48;break;case 47:a=1;c=55;break;case 48:c=(HEAP32[(HEAP32[(n|0)>>2]|0)>>2]|0)==(HEAP32[(d|0)>>2]|0)?49:50;break;case 49:o=0;_PrintPartialMatch(b,STRING_TABLE.__str463877|0,HEAP32[(n+4|0)>>2]);_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str483879|
0);c=50;break;case 50:c=51;break;case 51:n=_EnvGetNextActivation(b,n);c=45;break;case 52:c=0!=(o|0)?53:54;break;case 53:_EnvPrintRouter(b,STRING_TABLE.__str463877|0,STRING_TABLE.__str493880|0);c=54;break;case 54:a=1;c=55;break;case 55:return a;default:assert(0,"bad label: "+c)}}_EnvMatches.X=1;
function _ProcessConnectedConstraints(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p;e=h;g=f;i=c;j=a;k=0;n=HEAP32[(g+68|0)>>2];b=3;break;case 3:b=0!=(n|0)?4:29;break;case 4:l=0;o=n;b=5;break;case 5:b=0!=(o|0)?6:20;break;case 6:b=0!=(HEAP32[(o+8|0)>>2]&1|0)?18:7;break;case 7:b=164==(HEAPU16[(o|0)>>1]&65535|0)?8:11;break;case 8:b=30==(HEAPU16[(HEAP32[(o+56|0)>>2]|0)>>1]&65535|0)?9:10;break;case 9:m=_FunctionCallToConstraintRecord(e,HEAP32[(HEAP32[(o+56|0)>>2]+4|0)>>2]);b=l;l=_IntersectConstraints(e,
l,m);_RemoveConstraint(e,b);_RemoveConstraint(e,m);b=10;break;case 10:b=17;break;case 11:b=0!=(_ConstantType(HEAPU16[(o|0)>>1]&65535)|0)?12:13;break;case 12:p=_GenConstant(e,HEAP16[(o|0)>>1],HEAP32[(o+4|0)>>2]);m=_ExpressionToConstraintRecord(e,p);b=l;l=_IntersectConstraints(e,l,m);_RemoveConstraint(e,b);_RemoveConstraint(e,m);_ReturnExpression(e,p);b=16;break;case 13:b=0!=(HEAP32[(o+20|0)>>2]|0)?14:15;break;case 14:b=l;l=_IntersectConstraints(e,l,HEAP32[(o+20|0)>>2]);_RemoveConstraint(e,b);b=15;
break;case 15:b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:b=19;break;case 19:o=HEAP32[(o+64|0)>>2];b=5;break;case 20:b=l;l=_IntersectConstraints(e,l,HEAP32[(g+20|0)>>2]);_RemoveConstraint(e,b);o=n;b=21;break;case 21:b=0!=(o|0)?22:27;break;case 22:b=0!=(HEAP32[(o+8|0)>>2]&1|0)?23:25;break;case 23:b=0!=(_ConstantType(HEAPU16[(o|0)>>1]&65535)|0)?24:25;break;case 24:_RemoveConstantFromConstraint(e,HEAPU16[(o|0)>>1]&65535,HEAP32[(o+4|0)>>2],l);b=25;break;case 25:b=26;break;case 26:o=HEAP32[(o+
64|0)>>2];b=21;break;case 27:b=k;k=_UnionConstraints(e,k,l);_RemoveConstraint(e,b);_RemoveConstraint(e,l);b=28;break;case 28:n=HEAP32[(n+68|0)>>2];b=3;break;case 29:b=0!=(k|0)?30:33;break;case 30:b=0!=(HEAPU32[(g+8|0)>>2]>>>4&1|0)?31:32;break;case 31:_RemoveConstraint(e,HEAP32[(g+20|0)>>2]);b=32;break;case 32:HEAP32[(g+20|0)>>2]=k;b=g+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-17|16;b=33;break;case 33:b=0!=(_CheckForUnmatchableConstraints(e,g,HEAPU32[(j+8|0)>>2]>>>6&127)|0)?34:35;break;case 34:d=1;b=41;break;
case 35:b=0!=(i|0)?36:40;break;case 36:b=0==(HEAP32[(g+64|0)>>2]|0)?37:40;break;case 37:b=0!=(_MultifieldCardinalityViolation(e,i)|0)?38:39;break;case 38:_ConstraintViolationErrorMessage(e,STRING_TABLE.__str3883|0,0,0,HEAPU32[(j+8|0)>>2]>>>6&127,HEAP32[(i+36|0)>>2],HEAP16[(i+34|0)>>1]<<16>>16,5,HEAP32[(i+20|0)>>2],1);d=1;b=41;break;case 39:b=40;break;case 40:d=0;b=41;break;case 41:return d;default:assert(0,"bad label: "+b)}}_ProcessConnectedConstraints.X=1;
function _CheckForUnmatchableConstraints(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0==(_EnvGetStaticConstraintChecking(d)|0)?3:4;break;case 3:b=0;a=7;break;case 4:a=0!=(_UnmatchableConstraint(HEAP32[(e+20|0)>>2])|0)?5:6;break;case 5:_ConstraintConflictMessage(d,HEAP32[(e+4|0)>>2],g,HEAP16[(e+34|0)>>1]<<16>>16,HEAP32[(e+36|0)>>2]);b=1;a=7;break;case 6:b=0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}}
function _MultifieldCardinalityViolation(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m;b=h;d=f;k=j=i=0;c=0==(HEAPU32[(d+8|0)>>2]>>>2&1|0)?3:4;break;case 3:a=0;c=36;break;case 4:e=HEAP32[(d+68|0)>>2];c=5;break;case 5:c=0!=(e|0)?6:23;break;case 6:c=35==(HEAPU16[(e|0)>>1]&65535|0)?8:7;break;case 7:c=37==(HEAPU16[(e|0)>>1]&65535|0)?8:9;break;case 8:i=i+1|0;j=j+1|0;c=21;break;case 9:c=0!=(HEAP32[(e+20|0)>>2]|0)?10:19;break;case 10:c=(HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+24|0)>>2]+4|0)>>
2]|0)!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+12|0)>>2]|0)?11:12;break;case 11:i=i+HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+20|0)>>2]+24|0)>>2]+4|0)>>2]+16|0)>>2]|0;c=12;break;case 12:g=HEAP32[(HEAP32[(e+20|0)>>2]+28|0)>>2];c=13;break;case 13:c=0!=(HEAP32[(g+12|0)>>2]|0)?14:15;break;case 14:g=HEAP32[(g+12|0)>>2];c=13;break;case 15:c=(HEAP32[(g+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+8|0)>>2]|0)?16:17;break;case 16:k=1;c=18;break;case 17:j=j+HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>
2]|0;c=18;break;case 18:c=20;break;case 19:k=1;c=20;break;case 20:c=21;break;case 21:c=22;break;case 22:e=HEAP32[(e+64|0)>>2];c=5;break;case 23:c=0==(HEAP32[(d+20|0)>>2]|0)?24:25;break;case 24:m=_GetConstraintRecord(b);c=26;break;case 25:m=_CopyConstraintRecord(b,HEAP32[(d+20|0)>>2]);c=26;break;case 26:_ReturnExpression(b,HEAP32[(m+24|0)>>2]);_ReturnExpression(b,HEAP32[(m+28|0)>>2]);c=b;var n=_EnvAddLong(b,i);c=_GenConstant(c,1,n);HEAP32[(m+24|0)>>2]=c;c=0!=(k|0)?27:28;break;case 27:c=_GenConstant(b,
2,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+8|0)>>2]);HEAP32[(m+28|0)>>2]=c;c=29;break;case 28:c=b;n=_EnvAddLong(b,j);c=_GenConstant(c,1,n);HEAP32[(m+28|0)>>2]=c;c=29;break;case 29:l=_IntersectConstraints(b,HEAP32[(d+20|0)>>2],m);c=0!=(HEAPU32[(d+8|0)>>2]>>>4&1|0)?30:31;break;case 30:_RemoveConstraint(b,HEAP32[(d+20|0)>>2]);c=31;break;case 31:_RemoveConstraint(b,m);HEAP32[(d+20|0)>>2]=l;c=d+8|0;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=0==(_EnvGetStaticConstraintChecking(b)|0)?32:33;break;case 32:a=
0;c=36;break;case 33:c=0!=(_UnmatchableConstraint(l)|0)?34:35;break;case 34:a=1;c=36;break;case 35:a=0;c=36;break;case 36:return a;default:assert(0,"bad label: "+c)}}_MultifieldCardinalityViolation.X=1;
function _ConstraintReferenceErrorMessage(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n;i=h;j=f;k=c;l=a;g=b;m=d;n=e;_PrintErrorID(i,STRING_TABLE.__str13884|0,2,1);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str33886|0);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,HEAP32[(j+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str43887|0);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str53888|0);_PrintLongInteger(i,STRING_TABLE.__str23885|
0,l);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str63889|0);j=_LHSParseNodesToExpression(i,k);_ReturnExpression(i,HEAP32[(j+12|0)>>2]);HEAP32[(j+12|0)>>2]=0;_PrintExpression(i,STRING_TABLE.__str23885|0,j);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str73890|0);_ReturnExpression(i,j);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str83891|0);_PrintLongInteger(i,STRING_TABLE.__str23885|0,g);g=0==(m|0)?3:6;break;case 3:g=0<(n|0)?4:5;break;case 4:_EnvPrintRouter(i,
STRING_TABLE.__str23885|0,STRING_TABLE.__str93892|0);_PrintLongInteger(i,STRING_TABLE.__str23885|0,n);g=5;break;case 5:g=7;break;case 6:_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str103893|0);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,HEAP32[(m+16|0)>>2]);g=7;break;case 7:_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str113894|0);return;default:assert(0,"bad label: "+g)}}_ConstraintReferenceErrorMessage.X=1;
function _GetExpressionVarConstraints(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=0;c=3;break;case 3:c=0!=(b|0)?4:13;break;case 4:c=0!=(HEAP32[(b+64|0)>>2]|0)?5:6;break;case 5:e=_GetExpressionVarConstraints(a,HEAP32[(b+64|0)>>2]);d=_AddToVariableConstraints(a,e,d);c=6;break;case 6:c=35==(HEAPU16[(b|0)>>1]&65535|0)?7:11;break;case 7:e=_GetLHSParseNode(a);c=0!=(HEAP32[(b+24|0)>>2]|0)?8:9;break;case 8:HEAP16[(e|0)>>1]=HEAP16[(HEAP32[(b+24|0)>>2]|0)>>1];c=10;break;case 9:HEAP16[(e|0)>>
1]=35;c=10;break;case 10:HEAP32[(e+4|0)>>2]=HEAP32[(b+4|0)>>2];c=e+8|0;HEAP32[c>>2]=HEAP32[c>>2]&-17|16;c=_CopyConstraintRecord(a,HEAP32[(b+20|0)>>2]);HEAP32[(e+20|0)>>2]=c;d=_AddToVariableConstraints(a,e,d);c=11;break;case 11:c=12;break;case 12:b=HEAP32[(b+68|0)>>2];c=3;break;case 13:return d;default:assert(0,"bad label: "+c)}}_GetExpressionVarConstraints.X=1;
function _AddToVariableConstraints(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;a=3;break;case 3:a=0!=(e|0)?4:13;break;case 4:g=HEAP32[(e+64|0)>>2];HEAP32[(e+64|0)>>2]=0;i=d;a=5;break;case 5:a=0!=(i|0)?6:10;break;case 6:a=(HEAP32[(i+4|0)>>2]|0)==(HEAP32[(e+4|0)>>2]|0)?7:8;break;case 7:a=_IntersectConstraints(b,HEAP32[(i+20|0)>>2],HEAP32[(e+20|0)>>2]);_RemoveConstraint(b,HEAP32[(i+20|0)>>2]);HEAP32[(i+20|0)>>2]=a;_ReturnLHSParseNodes(b,e);a=10;break;case 8:a=9;break;case 9:i=HEAP32[(i+
64|0)>>2];a=5;break;case 10:a=0==(i|0)?11:12;break;case 11:HEAP32[(e+64|0)>>2]=d;d=e;a=12;break;case 12:e=g;a=3;break;case 13:return d;default:assert(0,"bad label: "+a)}}_AddToVariableConstraints.X=1;
function _DeriveVariableConstraints(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;a=h;b=f;g=0;i=1;b=HEAP32[(b+68|0)>>2];c=3;break;case 3:c=0!=(b|0)?4:16;break;case 4:e=0;d=b;c=5;break;case 5:c=0!=(d|0)?6:11;break;case 6:c=164==(HEAPU16[(d|0)>>1]&65535|0)?8:7;break;case 7:c=163==(HEAPU16[(d|0)>>1]&65535|0)?8:9;break;case 8:c=_GetExpressionVarConstraints(a,HEAP32[(d+56|0)>>2]);e=_AddToVariableConstraints(a,e,c);c=9;break;case 9:c=10;break;case 10:d=HEAP32[(d+64|0)>>2];c=5;break;case 11:c=0!=
(i|0)?12:13;break;case 12:g=e;i=0;c=14;break;case 13:g=_UnionVariableConstraints(a,g,e);c=14;break;case 14:c=15;break;case 15:b=HEAP32[(b+68|0)>>2];c=3;break;case 16:return g;default:assert(0,"bad label: "+c)}}_DeriveVariableConstraints.X=1;
function _UnionVariableConstraints(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;g=0;a=3;break;case 3:a=0!=(d|0)?4:11;break;case 4:i=e;a=5;break;case 5:a=0!=(i|0)?6:10;break;case 6:a=(HEAP32[(d+4|0)>>2]|0)==(HEAP32[(i+4|0)>>2]|0)?7:8;break;case 7:a=_GetLHSParseNode(b);var j=a+8|0;HEAP32[j>>2]=HEAP32[j>>2]&-17|16;HEAP32[(a+4|0)>>2]=HEAP32[(d+4|0)>>2];j=_UnionConstraints(b,HEAP32[(d+20|0)>>2],HEAP32[(i+20|0)>>2]);HEAP32[(a+20|0)>>2]=j;HEAP32[(a+64|0)>>2]=g;g=a;a=10;break;case 8:a=
9;break;case 9:i=HEAP32[(i+64|0)>>2];a=5;break;case 10:a=HEAP32[(d+64|0)>>2];HEAP32[(d+64|0)>>2]=0;_ReturnLHSParseNodes(b,d);d=a;a=3;break;case 11:return _ReturnLHSParseNodes(b,e),g;default:assert(0,"bad label: "+a)}}_UnionVariableConstraints.X=1;
function _CheckRHSForConstraintErrors(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m;d=h;e=f;g=c;k=0;a=0==(e|0)?3:4;break;case 3:b=0;a=19;break;case 4:l=e;a=5;break;case 5:a=0!=(l|0)?6:18;break;case 6:e=HEAP32[(l+8|0)>>2];j=1;a=30==(HEAPU16[(l|0)>>1]&65535|0)?7:8;break;case 7:k=l;i=HEAP32[(l+4|0)>>2];a=9;break;case 8:i=0;a=9;break;case 9:a=10;break;case 10:a=0!=(e|0)?11:16;break;case 11:a=0!=(_CheckArgumentForConstraintError(d,e,k,j,i,g)|0)?12:13;break;case 12:b=1;a=19;break;case 13:j=
j+1|0;m=HEAP32[(e+12|0)>>2];HEAP32[(e+12|0)>>2]=0;a=0!=(_CheckRHSForConstraintErrors(d,e,g)|0)?14:15;break;case 14:b=1;a=19;break;case 15:HEAP32[(e+12|0)>>2]=m;e=HEAP32[(e+12|0)>>2];a=10;break;case 16:a=17;break;case 17:l=HEAP32[(l+12|0)>>2];a=5;break;case 18:b=0;a=19;break;case 19:return b;default:assert(0,"bad label: "+a)}}_CheckRHSForConstraintErrors.X=1;
function _CheckArgumentForConstraintError(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r,s,t;i=h;j=f;k=c;l=a;m=b;n=d;t=0;e=35!=(HEAPU16[(j|0)>>1]&65535|0)?4:3;break;case 3:e=0==(m|0)?4:5;break;case 4:g=t;e=18;break;case 5:o=_GetNthRestriction(m,l);o=_ArgumentTypeToConstraintRecord(i,o);s=_FindVariable(HEAP32[(j+4|0)>>2],n);e=0!=(s|0)?6:13;break;case 6:e=36==(HEAPU16[(s|0)>>1]&65535|0)?7:8;break;case 7:p=_GetConstraintRecord(i);_SetConstraintType(4,p);e=12;break;case 8:e=0==
(HEAP32[(s+20|0)>>2]|0)?9:10;break;case 9:p=_GetConstraintRecord(i);e=11;break;case 10:p=_CopyConstraintRecord(i,HEAP32[(s+20|0)>>2]);e=11;break;case 11:e=12;break;case 12:e=14;break;case 13:p=0;e=14;break;case 14:q=_FindBindConstraints(i,HEAP32[(j+4|0)>>2]);q=_UnionConstraints(i,q,p);r=_IntersectConstraints(i,q,o);e=0!=(_UnmatchableConstraint(r)|0)?15:17;break;case 15:e=0!=(_EnvGetStaticConstraintChecking(i)|0)?16:17;break;case 16:_PrintErrorID(i,STRING_TABLE.__str13884|0,3,1);_EnvPrintRouter(i,
STRING_TABLE.__str23885|0,STRING_TABLE.__str33886|0);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2]);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str43887|0);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str53888|0);_PrintLongInteger(i,STRING_TABLE.__str23885|0,l);_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str63889|0);t=HEAP32[(k+12|0)>>2];HEAP32[(k+12|0)>>2]=0;_PrintExpression(i,STRING_TABLE.__str23885|0,k);HEAP32[(k+12|
0)>>2]=t;_EnvPrintRouter(i,STRING_TABLE.__str23885|0,STRING_TABLE.__str123895|0);t=1;e=17;break;case 17:_RemoveConstraint(i,o);_RemoveConstraint(i,p);_RemoveConstraint(i,q);_RemoveConstraint(i,r);g=t;e=18;break;case 18:return g;default:assert(0,"bad label: "+e)}}_CheckArgumentForConstraintError.X=1;
function _ConstraintConflictMessage(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;_PrintErrorID(e,STRING_TABLE.__str13884|0,1,1);d=0!=(g|0)?3:4;break;case 3:_EnvPrintRouter(e,STRING_TABLE.__str23885|0,STRING_TABLE.__str133896|0);_EnvPrintRouter(e,STRING_TABLE.__str23885|0,HEAP32[(g+16|0)>>2]);_EnvPrintRouter(e,STRING_TABLE.__str23885|0,STRING_TABLE.__str143897|0);_PrintLongInteger(e,STRING_TABLE.__str23885|0,i);d=5;break;case 4:_EnvPrintRouter(e,STRING_TABLE.__str23885|
0,STRING_TABLE.__str153898|0);_PrintLongInteger(e,STRING_TABLE.__str23885|0,i);d=5;break;case 5:d=0==(k|0)?6:7;break;case 6:_EnvPrintRouter(e,STRING_TABLE.__str23885|0,STRING_TABLE.__str93892|0);_PrintLongInteger(e,STRING_TABLE.__str23885|0,j);d=8;break;case 7:_EnvPrintRouter(e,STRING_TABLE.__str23885|0,STRING_TABLE.__str103893|0);_EnvPrintRouter(e,STRING_TABLE.__str23885|0,HEAP32[(k+16|0)>>2]);d=8;break;case 8:_EnvPrintRouter(e,STRING_TABLE.__str23885|0,STRING_TABLE.__str163899|0);return;default:assert(0,
"bad label: "+d)}}_ConstraintConflictMessage.X=1;
function _InitializeDefrules(h){_AllocateEnvironmentData(h,16,24,1536);_InitializeEngine(h);_InitializeAgenda(h);_InitializePatterns(h);_InitializeDefruleModules(h);_AddReservedPatternSymbol(h,STRING_TABLE.__str3908|0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str13909|0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str23910|0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str33911|0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str43912|0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str53913|
0,0);_AddReservedPatternSymbol(h,STRING_TABLE.__str63914|0,0);_DefruleBasicCommands(h);_DefruleCommands(h);var f=_AddConstruct(h,STRING_TABLE.__str73915|0,STRING_TABLE.__str83916|0,1538,1540,94,96,98,514,102,1542,1544,1546);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2]=f}
function _DeallocateDefruleData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=13;break;case 4:_DoForAllConstructs(c,1548,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+64|0)>>2]+4|0)>>2],0,0);b=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(b|0)?6:13;break;case 6:a=_GetModuleItem(c,b,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+64|0)>>2]+4|0)>>2]);d=HEAP32[(a+12|0)>>2];f=7;break;case 7:f=0!=(d|0)?8:11;break;case 8:e=HEAP32[(d+28|0)>>2];f=0!=(HEAP32[(d+16|0)>>2]|0)?9:
10;break;case 9:_DestroyPartialMatch(c,HEAP32[(d+16|0)>>2]);f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+128|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];d=e;f=7;break;case 11:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=12;break;case 12:b=_EnvGetNextDefmodule(c,b);f=5;break;case 13:return;default:assert(0,"bad label: "+f)}}_DeallocateDefruleData.X=1;
function _InitializeDefruleModules(h){var f=_RegisterModuleItem(h,STRING_TABLE.__str73915|0,1550,1552,1554,1556,1540);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+4|0)>>2]=f}function _EnvFindDefrule(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2])}function _EnvGetNextDefrule(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+4|0)>>2])}
function _EnvIsDefruleDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0!=(_ConstructsDeletable(b)|0)?4:3;break;case 3:a=0;c=13;break;case 4:e=d;c=5;break;case 5:c=0!=(e|0)?6:10;break;case 6:c=0!=(HEAPU32[(e+32|0)>>2]>>>15&1|0)?7:8;break;case 7:a=0;c=13;break;case 8:c=9;break;case 9:e=HEAP32[(e+52|0)>>2];c=5;break;case 10:c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?11:12;break;case 11:a=0;c=13;break;case 12:a=1;c=13;break;case 13:return a;default:assert(0,
"bad label: "+c)}}_EnvIsDefruleDeletable.X=1;function _GetDefruleModuleItem(h,f){return _GetConstructModuleItemByIndex(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]+4|0)>>2])}
function _AllocateModule3923(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,16);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return h=a,HEAP32[(h+12|0)>>2]=0,h;default:assert(0,"bad label: "+f)}}_AllocateModule3923.X=1;
function _ReturnModule3924(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+64|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+64|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule3924.X=1;
function _DestroyDefruleAction(h,f){_DestroyDefrule(h,f)}
function _ReturnDefrule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=1;c=0==(b|0)?3:4;break;case 3:c=25;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+64|0)>>2]+16|0)>>2]=0;c=0!=(HEAPU32[(b+32|0)>>2]>>>11&1|0)?5:6;break;case 5:c=HEAP32[(HEAP32[(a+16|0)>>2]+64|0)>>2]+16|0;HEAP32[c>>2]|=1;c=6;break;case 6:c=0!=(HEAPU32[(b+32|0)>>2]>>>12&1|0)?7:8;break;case 7:c=HEAP32[(HEAP32[(a+16|0)>>2]+64|0)>>2]+16|0;HEAP32[c>>2]|=2;c=8;break;case 8:c=0!=(HEAPU32[(b+32|0)>>2]>>>13&1|0)?9:10;break;case 9:c=
HEAP32[(HEAP32[(a+16|0)>>2]+64|0)>>2]+16|0;HEAP32[c>>2]|=4;c=10;break;case 10:_ClearRuleFromAgenda(a,b);c=11;break;case 11:c=0!=(b|0)?12:23;break;case 12:_DetachJoins(a,b,0);c=0!=(d|0)?13:18;break;case 13:c=0!=(HEAP32[(b+36|0)>>2]|0)?14:15;break;case 14:_ExpressionDeinstall(a,HEAP32[(b+36|0)>>2]);_ReturnPackedExpression(a,HEAP32[(b+36|0)>>2]);HEAP32[(b+36|0)>>2]=0;c=15;break;case 15:c=0!=(HEAP32[((b|0)+4|0)>>2]|0)?16:17;break;case 16:c=a;var e=HEAP32[((b|0)+4|0)>>2],g=_strlen(HEAP32[((b|0)+4|0)>>
2])+1|0;_rm(c,e,g);HEAP32[((b|0)+4|0)>>2]=0;c=17;break;case 17:d=0;c=18;break;case 18:c=0!=(HEAP32[((b|0)+20|0)>>2]|0)?19:20;break;case 19:_ClearUserDataList(a,HEAP32[((b|0)+20|0)>>2]);c=20;break;case 20:_DecrementSymbolCount(a,HEAP32[(b|0)>>2]);c=0!=(HEAP32[(b+40|0)>>2]|0)?21:22;break;case 21:_ExpressionDeinstall(a,HEAP32[(b+40|0)>>2]);_ReturnPackedExpression(a,HEAP32[(b+40|0)>>2]);c=22;break;case 22:c=HEAP32[(b+52|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=11;break;case 23:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+72|0)>>2]|0)>>2]|0)?24:25;break;case 24:_FlushGarbagePartialMatches(a);c=25;break;case 25:return;default:assert(0,"bad label: "+c)}}_ReturnDefrule.X=1;
function _DetachJoins(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;b=h;a=f;d=c;e=HEAP32[(a+48|0)>>2];HEAP32[(a+48|0)>>2]=0;a=0==(e|0)?3:4;break;case 3:a=41;break;case 4:HEAP32[(e+36|0)>>2]=0;a=0!=(HEAP32[(e+20|0)>>2]|0)?5:6;break;case 5:a=41;break;case 6:a=7;break;case 7:a=0!=(e|0)?8:41;break;case 8:g=HEAP32[(e+24|0)>>2];a=0!=(HEAPU32[e>>2]>>>2&1|0)?9:10;break;case 9:k=HEAP32[(e+16|0)>>2];a=11;break;case 10:k=0;a=11;break;case 11:a=0!=(d|0)?16:12;break;case 12:a=0!=(HEAP32[(e+16|0)>>
2]|0)?13:15;break;case 13:a=0==(HEAPU32[e>>2]>>>2&1|0)?14:15;break;case 14:_RemoveIntranetworkLink(b,e);a=15;break;case 15:a=16;break;case 16:a=0!=(d|0)?17:18;break;case 17:_DestroyAlphaBetaMemory(b,HEAP32[(e+8|0)>>2]);a=19;break;case 18:_FlushAlphaBetaMemory(b,HEAP32[(e+8|0)>>2]);a=19;break;case 19:HEAP32[(e+8|0)>>2]=0;a=0!=(d|0)?21:20;break;case 20:_RemoveHashedExpression(b,HEAP32[(e+12|0)>>2]);a=21;break;case 21:a=0==(g|0)?22:23;break;case 22:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>
2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=41;break;case 23:j=0;i=HEAP32[(g+20|0)>>2];a=24;break;case 24:a=0!=(i|0)?25:32;break;case 25:a=(i|0)==(e|0)?26:30;break;case 26:a=0==(j|0)?27:28;break;case 27:HEAP32[(g+20|0)>>2]=HEAP32[(i+28|0)>>2];a=29;break;case 28:HEAP32[(j+
28|0)>>2]=HEAP32[(i+28|0)>>2];a=29;break;case 29:i=0;a=31;break;case 30:j=i;i=HEAP32[(i+28|0)>>2];a=31;break;case 31:a=24;break;case 32:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+160|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=0!=(k|0)?33:34;break;case 33:HEAP32[(k+
20|0)>>2]=0;g=k;a=34;break;case 34:a=0!=(HEAP32[(g+36|0)>>2]|0)?35:36;break;case 35:e=0;a=40;break;case 36:a=0==(HEAP32[(g+20|0)>>2]|0)?37:38;break;case 37:e=g;a=39;break;case 38:e=0;a=39;break;case 39:a=40;break;case 40:a=7;break;case 41:return;default:assert(0,"bad label: "+a)}}_DetachJoins.X=1;
function _DestroyDefrule(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=1;c=0==(b|0)?3:4;break;case 3:c=17;break;case 4:c=5;break;case 5:c=0!=(b|0)?6:17;break;case 6:_DetachJoins(a,b,1);c=0!=(d|0)?7:12;break;case 7:c=0!=(HEAP32[(b+36|0)>>2]|0)?8:9;break;case 8:_ReturnPackedExpression(a,HEAP32[(b+36|0)>>2]);c=9;break;case 9:c=0!=(HEAP32[((b|0)+4|0)>>2]|0)?10:11;break;case 10:c=a;var e=HEAP32[((b|0)+4|0)>>2],g=_strlen(HEAP32[((b|0)+4|0)>>2])+1|0;_rm(c,e,g);c=11;break;case 11:d=0;c=12;break;
case 12:c=0!=(HEAP32[((b|0)+20|0)>>2]|0)?13:14;break;case 13:_ClearUserDataList(a,HEAP32[((b|0)+20|0)>>2]);c=14;break;case 14:c=0!=(HEAP32[(b+40|0)>>2]|0)?15:16;break;case 15:_ReturnPackedExpression(a,HEAP32[(b+40|0)>>2]);c=16;break;case 16:c=HEAP32[(b+52|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=5;break;case 17:return;default:assert(0,"bad label: "+c)}}_DestroyDefrule.X=1;
function _RemoveIntranetworkLink(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;d=HEAP32[(b+16|0)>>2];e=HEAP32[(d+8|0)>>2];g=0;c=3;break;case 3:c=0!=(e|0)?4:11;break;case 4:c=(e|0)==(b|0)?5:9;break;case 5:c=0==(g|0)?6:7;break;case 6:HEAP32[(d+8|0)>>2]=HEAP32[(e+32|0)>>2];c=8;break;case 7:HEAP32[(g+32|0)>>2]=HEAP32[(e+32|0)>>2];c=8;break;case 8:e=0;c=10;break;case 9:g=e;e=HEAP32[(e+32|0)>>2];c=10;break;case 10:c=3;break;case 11:c=0==(HEAP32[(d+8|0)>>2]|0)?12:13;break;case 12:_DetachPattern(a,
HEAPU32[b>>2]>>>6&7,d);c=13;break;case 13:return;default:assert(0,"bad label: "+c)}}_RemoveIntranetworkLink.X=1;
function _ParseRuleLHS(h,f,c,a){var b=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b;d=b+4;g=h;i=f;j=c;k=a;HEAP32[d>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+76|0)>>2]+48|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+76|0)>>2]+52|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;_SetIndentDepth(g,3);i=_RuleBodyParse(g,i,j,k,d);d=0!=(HEAP32[d>>2]|0)?3:4;break;case 3:e=0;
d=5;break;case 4:e=i=_ReorderPatterns(g,i,l);d=5;break;case 5:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ParseRuleLHS.X=1;
function _RuleBodyParse(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;g=h;i=f;j=c;k=a;l=b;HEAP32[l>>2]=0;d=2==(HEAPU16[(j|0)>>1]&65535|0)?3:4;break;case 3:d=0==(_strcmp(HEAP32[(HEAP32[(j+4|0)>>2]+16|0)>>2],STRING_TABLE.__str3929|0)|0)?5:6;break;case 4:d=6;break;case 5:e=0;d=14;break;case 6:m=_LHSPattern(g,i,2,STRING_TABLE.__str3929|0,l,1,j,k);d=1==(HEAP32[l>>2]|0)?7:8;break;case 7:_ReturnLHSParseNodes(g,m);e=0;d=14;break;case 8:_PPCRAndIndent(g);n=_GroupPatterns(g,i,2,STRING_TABLE.__str3929|
0,l);d=1==(HEAP32[l>>2]|0)?9:10;break;case 9:_ReturnLHSParseNodes(g,m);e=0;d=14;break;case 10:d=0==(m|0)?11:12;break;case 11:m=n;d=13;break;case 12:HEAP32[(m+68|0)>>2]=n;d=13;break;case 13:e=m;d=14;break;case 14:return e;default:assert(0,"bad label: "+d)}}_RuleBodyParse.X=1;
function _PropagatePatternType(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(a|0)?4:9;break;case 4:HEAP32[(a+28|0)>>2]=b;c=0!=(HEAP32[(a+64|0)>>2]|0)?5:6;break;case 5:_PropagatePatternType(HEAP32[(a+64|0)>>2],b);c=6;break;case 6:c=0!=(HEAP32[(a+56|0)>>2]|0)?7:8;break;case 7:_PropagatePatternType(HEAP32[(a+56|0)>>2],b);c=8;break;case 8:a=HEAP32[(a+68|0)>>2];c=3;break;case 9:return;default:assert(0,"bad label: "+c)}}
function _LHSPattern(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s,t=i,u;l=h;m=f;n=c;o=a;p=b;q=d;r=e;s=g;j=0==(r|0)?3:4;break;case 3:_GetToken(l,m,t);j=5;break;case 4:_CopyToken(t,r);j=5;break;case 5:j=170==(HEAPU16[(t|0)>>1]&65535|0)?6:26;break;case 6:_GetToken(l,m,t);j=2!=(HEAPU16[(t|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(l,STRING_TABLE.__str13930|
0);HEAP32[p>>2]=1;k=0;j=37;break;case 8:j=0!=(q|0)?9:13;break;case 9:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str23931|0)|0)?10:13;break;case 10:j=0==(s|0)?11:12;break;case 11:_SystemError(l,STRING_TABLE.__str33932|0,1);j=12;break;case 12:_DeclarationParse(l,m,s,p);u=0;j=25;break;case 13:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str43933|0)|0)?14:15;break;case 14:u=_TestPattern(l,m,p);j=24;break;case 15:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>
2],STRING_TABLE.__str53934|0)|0)?21:16;break;case 16:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str63935|0)|0)?21:17;break;case 17:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str73936|0)|0)?21:18;break;case 18:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str83937|0)|0)?21:19;break;case 19:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|0)>>2],STRING_TABLE.__str93938|0)|0)?21:20;break;case 20:j=0==(_strcmp(HEAP32[(HEAP32[(t+4|0)>>2]+16|
0)>>2],STRING_TABLE.__str103939|0)|0)?21:22;break;case 21:u=_ConnectedPatternParse(l,m,t,p);j=23;break;case 22:u=_SimplePatternParse(l,m,t,p);j=23;break;case 23:j=24;break;case 24:j=25;break;case 25:j=34;break;case 26:j=35==(HEAPU16[(t|0)>>1]&65535|0)?27:28;break;case 27:u=_AssignmentParse(l,m,HEAP32[(t+4|0)>>2],p);j=33;break;case 28:j=(HEAPU16[(t|0)>>1]&65535|0)==(n|0)?29:30;break;case 29:j=0==(_strcmp(HEAP32[(t+8|0)>>2],o)|0)?31:32;break;case 30:j=32;break;case 31:k=0;j=37;break;case 32:_SyntaxErrorMessage(l,
STRING_TABLE.__str113940|0);HEAP32[p>>2]=1;k=0;j=37;break;case 33:j=34;break;case 34:j=1==(HEAP32[p>>2]|0)?35:36;break;case 35:_ReturnLHSParseNodes(l,u);k=0;j=37;break;case 36:k=u;j=37;break;case 37:return h=k,STACKTOP=i,h;default:assert(0,"bad label: "+j)}}_LHSPattern.X=1;
function _GroupPatterns(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;g=h;i=f;j=c;k=a;l=b;m=o=0;d=3;break;case 3:n=_LHSPattern(g,i,j,k,l,0,0,0);d=0!=(HEAP32[l>>2]|0)?4:5;break;case 4:_ReturnLHSParseNodes(g,o);e=0;d=14;break;case 5:d=0==(n|0)?6:10;break;case 6:_PPBackup(g);_PPBackup(g);d=171==(j|0)?7:8;break;case 7:_SavePPBuffer(g,k);d=9;break;case 8:_PPCRAndIndent(g);_SavePPBuffer(g,k);d=9;break;case 9:e=o;d=14;break;case 10:d=0==(m|0)?11:12;break;case 11:o=n;d=13;break;case 12:HEAP32[(m+
68|0)>>2]=n;d=13;break;case 13:m=n;_PPCRAndIndent(g);d=3;break;case 14:return e;default:assert(0,"bad label: "+d)}}_GroupPatterns.X=1;
function _DeclarationParse(h,f,c,a){var b=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m,n;e=h;g=f;i=c;j=a;l=1;n=m=0;_SavePPBuffer(e,STRING_TABLE.__str143943|0);_GetToken(e,g,k);d=170!=(HEAPU16[(k|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(e,STRING_TABLE.__str303959|0);HEAP32[j>>2]=1;d=33;break;case 4:d=5;break;case 5:d=0!=(l|0)?6:32;break;case 6:_GetToken(e,g,k);d=2!=(HEAPU16[(k|
0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(e,STRING_TABLE.__str303959|0);HEAP32[j>>2]=1;d=21;break;case 8:d=0==(_strcmp(HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2],STRING_TABLE.__str313960|0)|0)?9:13;break;case 9:d=0!=(m|0)?10:11;break;case 10:_AlreadyParsedErrorMessage(e,STRING_TABLE.__str323961|0,0);HEAP32[j>>2]=1;d=12;break;case 11:_ParseSalience(e,g,i,j);m=1;d=12;break;case 12:d=20;break;case 13:d=0==(_strcmp(HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2],STRING_TABLE.__str333962|0)|0)?14:18;break;case 14:d=
0!=(n|0)?15:16;break;case 15:_AlreadyParsedErrorMessage(e,STRING_TABLE.__str343963|0,0);HEAP32[j>>2]=1;d=17;break;case 16:_ParseAutoFocus(e,g,j);n=1;d=17;break;case 17:d=19;break;case 18:_SyntaxErrorMessage(e,STRING_TABLE.__str303959|0);HEAP32[j>>2]=1;d=19;break;case 19:d=20;break;case 20:d=21;break;case 21:d=0!=(HEAP32[j>>2]|0)?22:23;break;case 22:_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;d=33;break;case 23:_GetToken(e,
g,k);d=171!=(HEAPU16[(k|0)>>1]&65535|0)?24:25;break;case 24:_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str143943|0);_SavePPBuffer(e,HEAP32[(k+8|0)>>2]);_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;_SyntaxErrorMessage(e,STRING_TABLE.__str303959|0);HEAP32[j>>2]=1;d=33;break;case 25:_GetToken(e,g,k);d=171==(HEAPU16[(k|0)>>1]&65535|0)?26:27;break;case 26:l=0;d=31;break;case 27:d=170!=(HEAPU16[(k|0)>>1]&65535|0)?
28:29;break;case 28:_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;_SyntaxErrorMessage(e,STRING_TABLE.__str303959|0);HEAP32[j>>2]=1;d=33;break;case 29:_PPBackup(e);_SavePPBuffer(e,STRING_TABLE.__str353964|0);d=30;break;case 30:d=31;break;case 31:d=5;break;case 32:d=_PackExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]);_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>
2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=d;d=33;break;case 33:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_DeclarationParse.X=1;
function _TestPattern(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k=a;e=h;g=f;i=c;_SavePPBuffer(e,STRING_TABLE.__str143943|0);j=_GetLHSParseNode(e);HEAP16[(j|0)>>1]=154;b=_Function0Parse(e,g);var l=_ExpressionToLHSParseNodes(e,b);HEAP32[(j+56|0)>>2]=l;_ReturnExpression(e,b);b=0==(HEAP32[(j+56|0)>>2]|0)?3:4;break;case 3:HEAP32[i>>2]=1;_ReturnLHSParseNodes(e,j);d=0;b=7;break;
case 4:_GetToken(e,g,k);b=171!=(HEAPU16[(k|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(e,STRING_TABLE.__str293958|0);HEAP32[i>>2]=1;_ReturnLHSParseNodes(e,j);d=0;b=7;break;case 6:d=j;b=7;break;case 7:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_TestPattern.X=1;
function _ConnectedPatternParse(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q;e=h;g=f;i=c;j=a;p=o=k=0;_IncrementIndentDepth(e,5);b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str103939|0)|0)?3:4;break;case 3:k=152;o=STRING_TABLE.__str203949|0;_SavePPBuffer(e,STRING_TABLE.__str213950|0);b=19;break;case 4:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str53934|0)|0)?5:6;break;case 5:k=151;o=STRING_TABLE.__str223951|0;_SavePPBuffer(e,STRING_TABLE.__str143943|
0);b=18;break;case 6:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str73936|0)|0)?7:8;break;case 7:k=153;o=STRING_TABLE.__str233952|0;_SavePPBuffer(e,STRING_TABLE.__str143943|0);b=17;break;case 8:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str83937|0)|0)?9:10;break;case 9:k=156;o=STRING_TABLE.__str243953|0;_PPCRAndIndent(e);b=16;break;case 10:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str93938|0)|0)?11:12;break;case 11:k=157;o=STRING_TABLE.__str253954|
0;_PPCRAndIndent(e);b=15;break;case 12:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str63935|0)|0)?13:14;break;case 13:k=151;o=STRING_TABLE.__str263955|0;p=1;_PPCRAndIndent(e);b=14;break;case 14:b=15;break;case 15:b=16;break;case 16:b=17;break;case 17:b=18;break;case 18:b=19;break;case 19:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+44|0)>>2]|0)?20:22;break;case 20:b=0!=(p|0)?21:22;break;case 21:_PrintErrorID(e,STRING_TABLE.__str33932|0,1,1);_EnvPrintRouter(e,STRING_TABLE.__str123941|
0,STRING_TABLE.__str273956|0);HEAP32[j>>2]=1;d=0;b=59;break;case 22:q=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+44|0)>>2];b=153==(k&65535|0)?25:23;break;case 23:b=156==(k&65535|0)?25:24;break;case 24:b=157==(k&65535|0)?25:26;break;case 25:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+44|0)>>2]=1;b=26;break;case 26:n=_GroupPatterns(e,g,171,STRING_TABLE.__str283957|0,j);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+44|0)>>2]=q;_DecrementIndentDepth(e,5);b=1==(HEAP32[j>>2]|0)?27:28;break;case 27:_ReturnLHSParseNodes(e,
n);d=0;b=59;break;case 28:b=0!=(p|0)?29:30;break;case 29:_TagLHSLogicalNodes(n);b=30;break;case 30:b=0==(n|0)?31:32;break;case 31:_SyntaxErrorMessage(e,o);HEAP32[j>>2]=1;d=0;b=59;break;case 32:b=153==(k&65535|0)?33:35;break;case 33:b=0!=(HEAP32[(n+68|0)>>2]|0)?34:35;break;case 34:_SyntaxErrorMessage(e,o);_ReturnLHSParseNodes(e,n);HEAP32[j>>2]=1;d=0;b=59;break;case 35:b=157==(k&65535|0)?36:38;break;case 36:b=0==(HEAP32[(n+68|0)>>2]|0)?37:38;break;case 37:_SyntaxErrorMessage(e,o);_ReturnLHSParseNodes(e,
n);HEAP32[j>>2]=1;d=0;b=59;break;case 38:b=151==(k&65535|0)?40:39;break;case 39:b=152==(k&65535|0)?40:42;break;case 40:b=0==(HEAP32[(n+68|0)>>2]|0)?41:42;break;case 41:d=n+8|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|(p&1)<<1;d=n;b=59;break;case 42:l=_GetLHSParseNode(e);b=l+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(p&1)<<1;b=151==(k&65535|0)?45:43;break;case 43:b=152==(k&65535|0)?45:44;break;case 44:b=153==(k&65535|0)?45:46;break;case 45:HEAP16[(l|0)>>1]=k;HEAP32[(l+64|0)>>2]=n;b=58;break;case 46:b=156==(k&65535|0)?
47:51;break;case 47:HEAP16[(l|0)>>1]=153;b=_GetLHSParseNode(e);HEAP32[(l+64|0)>>2]=b;HEAP16[(HEAP32[(l+64|0)>>2]|0)>>1]=153;b=HEAP32[(l+64|0)>>2]+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(p&1)<<1;b=0!=(HEAP32[(n+68|0)>>2]|0)?48:49;break;case 48:b=_GetLHSParseNode(e);HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]=b;HEAP16[(HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]|0)>>1]=151;b=HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(p&1)<<1;HEAP32[(HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]+64|0)>>2]=n;b=50;
break;case 49:HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]=n;b=50;break;case 50:b=57;break;case 51:b=157==(k&65535|0)?52:56;break;case 52:HEAP16[(l|0)>>1]=153;m=HEAP32[(n+68|0)>>2];HEAP32[(n+68|0)>>2]=0;b=_GetLHSParseNode(e);HEAP32[(l+64|0)>>2]=b;HEAP16[(HEAP32[(l+64|0)>>2]|0)>>1]=151;b=HEAP32[(l+64|0)>>2]+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(p&1)<<1;HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]=n;n=m;m=_GetLHSParseNode(e);HEAP32[(HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]+68|0)>>2]=m;HEAP16[(HEAP32[(HEAP32[(HEAP32[(l+
64|0)>>2]+64|0)>>2]+68|0)>>2]|0)>>1]=153;m=HEAP32[(HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]+68|0)>>2]+8|0;HEAP32[m>>2]=HEAP32[m>>2]&-3|(p&1)<<1;m=HEAP32[(HEAP32[(HEAP32[(l+64|0)>>2]+64|0)>>2]+68|0)>>2];b=0==(HEAP32[(n+68|0)>>2]|0)?53:54;break;case 53:HEAP32[(m+64|0)>>2]=n;b=55;break;case 54:b=_GetLHSParseNode(e);HEAP32[(m+64|0)>>2]=b;HEAP16[(HEAP32[(m+64|0)>>2]|0)>>1]=151;b=HEAP32[(m+64|0)>>2]+8|0;HEAP32[b>>2]=HEAP32[b>>2]&-3|(p&1)<<1;HEAP32[(HEAP32[(m+64|0)>>2]+64|0)>>2]=n;b=55;break;case 55:b=56;break;
case 56:b=57;break;case 57:b=58;break;case 58:d=l;b=59;break;case 59:return d;default:assert(0,"bad label: "+b)}}_ConnectedPatternParse.X=1;
function _SimplePatternParse(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=2!=(HEAPU16[(i|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(e,STRING_TABLE.__str13930|0);HEAP32[j>>2]=1;d=0;b=17;break;case 4:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str173946|0)|0)?6:5;break;case 5:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str183947|0)|0)?6:7;break;case 6:_SyntaxErrorMessage(e,STRING_TABLE.__str193948|0);HEAP32[j>>2]=
1;d=0;b=17;break;case 7:b=8;break;case 8:k=_GetLHSParseNode(e);HEAP16[(k|0)>>1]=150;l=k+8|0;HEAP32[l>>2]&=-2;l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]|0)>>2];b=9;break;case 9:b=0!=(l|0)?10:16;break;case 10:b=0!=(FUNCTION_TABLE[HEAP32[(l+12|0)>>2]](HEAP32[(i+4|0)>>2])|0)?11:14;break;case 11:HEAP32[(k+28|0)>>2]=l;b=FUNCTION_TABLE[HEAP32[(l+16|0)>>2]](e,g,i);HEAP32[(k+64|0)>>2]=b;b=0==(HEAP32[(k+64|0)>>2]|0)?12:13;break;case 12:HEAP32[j>>2]=1;_ReturnLHSParseNodes(e,k);d=0;b=17;break;case 13:_PropagatePatternType(k,
l);d=k;b=17;break;case 14:b=15;break;case 15:l=HEAP32[(l+92|0)>>2];b=9;break;case 16:HEAP32[j>>2]=1;_SyntaxErrorMessage(e,STRING_TABLE.__str193948|0);_ReturnLHSParseNodes(e,k);d=0;b=17;break;case 17:return d;default:assert(0,"bad label: "+b)}}_SimplePatternParse.X=1;
function _AssignmentParse(h,f,c,a){var b=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+76|0)>>2]+44|0)>>2]|0)?3:4;break;case 3:_PrintErrorID(g,STRING_TABLE.__str33932|0,2,1);_EnvPrintRouter(g,STRING_TABLE.__str123941|0,STRING_TABLE.__str133942|0);HEAP32[k>>2]=1;e=0;d=13;break;case 4:_SavePPBuffer(g,STRING_TABLE.__str143943|
0);_GetToken(g,i,m);d=2==(HEAPU16[(m|0)>>1]&65535|0)?5:6;break;case 5:d=0!=(_strcmp(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],STRING_TABLE.__str153944|0)|0)?7:8;break;case 6:d=7;break;case 7:_SyntaxErrorMessage(g,STRING_TABLE.__str163945|0);HEAP32[k>>2]=1;e=0;d=13;break;case 8:_SavePPBuffer(g,STRING_TABLE.__str143943|0);_GetToken(g,i,m);d=170!=(HEAPU16[(m|0)>>1]&65535|0)?9:10;break;case 9:_SyntaxErrorMessage(g,STRING_TABLE.__str163945|0);HEAP32[k>>2]=1;e=0;d=13;break;case 10:_GetToken(g,i,m);l=_SimplePatternParse(g,
i,m,k);d=1==(HEAP32[k>>2]|0)?11:12;break;case 11:_ReturnLHSParseNodes(g,l);e=0;d=13;break;case 12:HEAP32[(l+4|0)>>2]=j;e=l;d=13;break;case 13:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_AssignmentParse.X=1;
function _TagLHSLogicalNodes(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=3;break;case 3:f=0!=(c|0)?4:9;break;case 4:f=c+8|0;HEAP32[f>>2]=HEAP32[f>>2]&-3|2;f=151==(HEAPU16[(c|0)>>1]&65535|0)?7:5;break;case 5:f=152==(HEAPU16[(c|0)>>1]&65535|0)?7:6;break;case 6:f=153==(HEAPU16[(c|0)>>1]&65535|0)?7:8;break;case 7:_TagLHSLogicalNodes(HEAP32[(c+64|0)>>2]);f=8;break;case 8:c=HEAP32[(c+68|0)>>2];f=3;break;case 9:return;default:assert(0,"bad label: "+f)}}
function _ParseSalience(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b;e=h;d=f;g=c;i=a;_SavePPBuffer(e,STRING_TABLE.__str143943|0);d=_ParseAtomOrExpression(e,d,0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=d;d=0==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:HEAP32[i>>2]=1;d=14;break;case 4:_SetEvaluationError(e,0);d=0!=(_EvaluateExpression(e,
HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2],k)|0)?5:6;break;case 5:_SalienceInformationError(e,STRING_TABLE.__str113940|0,g);HEAP32[i>>2]=1;d=14;break;case 6:d=1!=(HEAPU16[(k+4|0)>>1]&65535|0)?7:8;break;case 7:_SalienceNonIntegerError(e);HEAP32[i>>2]=1;d=14;break;case 8:j=HEAP32[(HEAP32[(k+8|0)>>2]+16|0)>>2];d=1E4<(j|0)?10:9;break;case 9:d=-1E4>(j|0)?10:11;break;case 10:_SalienceRangeError(e,-1E4,1E4);HEAP32[i>>2]=1;d=14;break;case 11:d=1==(HEAPU16[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+
76|0)>>2]+56|0)>>2]|0)>>1]&65535|0)?12:13;break;case 12:_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;d=13;break;case 13:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+76|0)>>2]+48|0)>>2]=j;d=14;break;case 14:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_ParseSalience.X=1;
function _ParseAutoFocus(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g=a;d=h;b=f;e=c;_SavePPBuffer(d,STRING_TABLE.__str143943|0);_GetToken(d,b,g);b=2!=(HEAPU16[(g|0)>>1]&65535|0)?3:4;break;case 3:_SyntaxErrorMessage(d,STRING_TABLE.__str363965|0);HEAP32[e>>2]=1;b=10;break;case 4:b=0==(_strcmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2],STRING_TABLE.__str373966|0)|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+76|0)>>2]+52|0)>>2]=1;b=10;break;case 6:b=0==(_strcmp(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2],STRING_TABLE.__str383967|0)|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+52|0)>>2]=0;b=9;break;case 8:_SyntaxErrorMessage(d,STRING_TABLE.__str363965|0);HEAP32[e>>2]=1;b=9;break;case 9:b=10;break;case 10:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_ParseAutoFocus.X=1;
function _ParseDefrule(h,f){var c=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l,m,n,o=c+12;d=h;e=f;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SavePPBuffer(d,STRING_TABLE.__str3970|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,STRING_TABLE.__str13971|0);b=1;a=31;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+64|0)>>2]+16|0)>>2]=0;g=_GetConstructNameAndComment(d,e,k,STRING_TABLE.__str13971|0,1540,1544,STRING_TABLE.__str23972|0,0,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=31;break;case 7:i=_ParseRuleLHS(d,e,k,HEAP32[(g+16|0)>>2]);a=0==(i|0)?8:9;break;case 8:_ReturnPackedExpression(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;b=1;a=31;break;case 9:_ClearParsedBindNames(d);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+180|0)>>2]+40|0)>>2]=
1;j=_ParseRuleRHS(d,e);a=0==(j|0)?10:11;break;case 10:_ReturnPackedExpression(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;_ReturnLHSParseNodes(d,i);b=1;a=31;break;case 11:l=_ProcessRuleLHS(d,i,j,g,o);_ReturnExpression(d,j);_ClearParsedBindNames(d);_ReturnLHSParseNodes(d,i);a=0!=HEAP16[o>>1]<<16>>16?12:13;break;case 12:_ReturnPackedExpression(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+76|0)>>2]+56|0)>>2]=0;b=1;a=31;break;case 13:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?14:15;break;case 14:_ReturnPackedExpression(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]);b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;a=31;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+76|0)>>2]+56|0)>>2]=0;_SavePPBuffer(d,STRING_TABLE.__str33973|0);a=1==(_EnvGetConserveMemory(d)|0)?16:17;break;case 16:HEAP32[((l|0)+4|0)>>2]=0;a=18;break;case 17:a=
_CopyPPBuffer(d);HEAP32[((l|0)+4|0)>>2]=a;a=18;break;case 18:m=d;n=_FindModuleItem(d,STRING_TABLE.__str13971|0)+4|0;n=_GetModuleItem(m,0,HEAP32[n>>2]);m=l;a=19;break;case 19:a=0!=(m|0)?20:22;break;case 20:HEAP32[((m|0)+8|0)>>2]=n;a=21;break;case 21:m=HEAP32[(m+52|0)>>2];a=19;break;case 22:_AddToDefruleList(l);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+64|0)>>2]+16|0)>>2]&1|0)?23:24;break;case 23:_EnvSetBreak(d,l);a=24;break;case 24:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+64|0)>>2]+16|0)>>2]&2|0)?
26:25;break;case 25:a=0!=(_EnvGetWatchItem(d,STRING_TABLE.__str43974|0)|0)?26:27;break;case 26:_EnvSetDefruleWatchActivations(d,1,l);a=27;break;case 27:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+64|0)>>2]+16|0)>>2]&4|0)?29:28;break;case 28:a=0!=(_EnvGetWatchItem(d,STRING_TABLE.__str53975|0)|0)?29:30;break;case 29:_EnvSetDefruleWatchFirings(d,1,l);a=30;break;case 30:_IncrementalReset(d,l);b=0;a=31;break;case 31:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDefrule.X=1;
function _ParseRuleRHS(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;d=h;a=f;_SavePPBuffer(d,STRING_TABLE.__str63976|0);_SetIndentDepth(d,3);e=_GroupActions(d,a,g,1,0,0);a=0==(e|0)?3:4;break;case 3:b=0;a=7;break;case 4:_PPBackup(d);_PPBackup(d);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=171!=(HEAPU16[(g|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(d,STRING_TABLE.__str13971|
0);_ReturnExpression(d,e);b=0;a=7;break;case 6:b=e;a=7;break;case 7:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _ProcessRuleLHS(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r,s,t;g=h;i=f;j=c;k=a;l=b;p=n=m=0;HEAP16[l>>1]=0;d=152==(HEAPU16[(i|0)>>1]&65535|0)?3:4;break;case 3:i=HEAP32[(i+64|0)>>2];d=4;break;case 4:s=_CountParsedBindNames(g);d=5;break;case 5:d=0!=(i|0)?6:28;break;case 6:d=151==(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:m=HEAP32[(i+64|0)>>2];d=11;break;case 8:d=150==(HEAPU16[(i|0)>>1]&65535|0)?9:10;break;case 9:m=i;d=10;break;case 10:d=11;break;case 11:d=0!=(_VariableAnalysis(g,
m)|0)?12:13;break;case 12:HEAP16[l>>1]=1;_ReturnDefrule(g,n);e=0;d=29;break;case 13:d=0!=(_PostPatternAnalysis(g,m)|0)?14:15;break;case 14:HEAP16[l>>1]=1;_ReturnDefrule(g,n);e=0;d=29;break;case 15:r=d=_LogicalAnalysis(g,m);d=0>(d|0)?16:17;break;case 16:HEAP16[l>>1]=1;_ReturnDefrule(g,n);e=0;d=29;break;case 17:d=0!=(_CheckRHSForConstraintErrors(g,j,m)|0)?18:19;break;case 18:HEAP16[l>>1]=1;_ReturnDefrule(g,n);e=0;d=29;break;case 19:q=_CopyExpression(g,j);d=0!=(_ReplaceProcVars(g,STRING_TABLE.__str73977|
0,q,0,0,1558,m)|0)?20:21;break;case 20:HEAP16[l>>1]=1;_ReturnDefrule(g,n);_ReturnExpression(g,q);e=0;d=29;break;case 21:d=0!=(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?22:23;break;case 22:_ReturnExpression(g,q);d=27;break;case 23:_ExpressionInstall(g,q);o=_PackExpression(g,q);_ReturnExpression(g,q);t=_ConstructJoins(g,r,m);d=_RuleComplexity(g,m);o=_CreateNewDisjunct(g,k,s,o,d,r,t);d=0==(n|0)?24:25;break;case 24:n=o;_ExpressionInstall(g,HEAP32[(n+36|0)>>2]);d=26;break;case 25:HEAP32[(p+
52|0)>>2]=o;d=26;break;case 26:p=o;d=27;break;case 27:i=HEAP32[(i+68|0)>>2];d=5;break;case 28:e=n;d=29;break;case 29:return e;default:assert(0,"bad label: "+d)}}_ProcessRuleLHS.X=1;
function _AddToDefruleList(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=HEAP32[((c|0)+8|0)>>2];f=0==(HEAP32[((b|0)+8|0)>>2]|0)?3:4;break;case 3:HEAP32[((b|0)+4|0)>>2]=c;f=8;break;case 4:a=HEAP32[((b|0)+8|0)>>2];f=5;break;case 5:f=0!=(a|0)?6:7;break;case 6:HEAP32[((a|0)+16|0)>>2]=c;a=HEAP32[(a+52|0)>>2];f=5;break;case 7:f=8;break;case 8:HEAP32[((b|0)+8|0)>>2]=c;return;default:assert(0,"bad label: "+f)}}_AddToDefruleList.X=1;
function _FindVariable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=e=0;c=3;break;case 3:c=0!=(b|0)?4:30;break;case 4:c=150!=(HEAPU16[(b|0)>>1]&65535|0)?7:5;break;case 5:c=1==(HEAP32[(b+8|0)>>2]&1|0)?7:6;break;case 6:c=1<(HEAP32[(b+44|0)>>2]|0)?7:8;break;case 7:c=29;break;case 8:c=(HEAP32[(b+4|0)>>2]|0)==(a|0)?9:10;break;case 9:g=b;c=10;break;case 10:d=HEAP32[(b+64|0)>>2];c=11;break;case 11:c=0!=(d|0)?12:28;break;case 12:c=0!=(HEAPU32[(d+8|0)>>2]>>>2&1|0)?13:14;break;case 13:e=d;
d=HEAP32[(d+68|0)>>2];c=14;break;case 14:c=0==(d|0)?15:16;break;case 15:c=21;break;case 16:c=35==(HEAPU16[(d|0)>>1]&65535|0)?18:17;break;case 17:c=36==(HEAPU16[(d|0)>>1]&65535|0)?18:20;break;case 18:c=(HEAP32[(d+4|0)>>2]|0)==(a|0)?19:20;break;case 19:g=d;c=20;break;case 20:c=21;break;case 21:c=0==(d|0)?22:23;break;case 22:d=e;e=0;c=27;break;case 23:c=0==(HEAP32[(d+64|0)>>2]|0)?24:26;break;case 24:c=0!=(e|0)?25:26;break;case 25:d=e;e=0;c=26;break;case 26:c=27;break;case 27:d=HEAP32[(d+64|0)>>2];c=
11;break;case 28:c=29;break;case 29:b=HEAP32[(b+68|0)>>2];c=3;break;case 30:return g;default:assert(0,"bad label: "+c)}}_FindVariable.X=1;
function _LogicalAnalysis(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j;b=h;d=f;j=i=g=0;e=HEAPU32[(d+8|0)>>2]>>>1&1;c=3;break;case 3:c=0!=(d|0)?4:15;break;case 4:c=150!=(HEAPU16[(d|0)>>1]&65535|0)?6:5;break;case 5:c=1!=(HEAP32[(d+48|0)>>2]|0)?6:7;break;case 6:c=14;break;case 7:c=0==(HEAPU32[(d+8|0)>>2]>>>1&1|0)?8:9;break;case 8:j=1;c=14;break;case 9:c=0!=(e|0)?11:10;break;case 10:_PrintErrorID(b,STRING_TABLE.__str103980|0,1,1);_EnvPrintRouter(b,STRING_TABLE.__str113981|0,STRING_TABLE.__str123982|
0);a=-1;c=18;break;case 11:c=0!=(j|0)?12:13;break;case 12:_PrintErrorID(b,STRING_TABLE.__str103980|0,2,1);_EnvPrintRouter(b,STRING_TABLE.__str113981|0,STRING_TABLE.__str133983|0);a=-1;c=18;break;case 13:i=i+1|0;g=1;c=14;break;case 14:d=HEAP32[(d+68|0)>>2];c=3;break;case 15:c=0!=(g|0)?16:17;break;case 16:a=i;c=18;break;case 17:a=0;c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}_LogicalAnalysis.X=1;
function _ReplaceRHSVariable(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=30==(HEAPU16[(e|0)>>1]&65535|0)?3:13;break;case 3:a=HEAP32[(e+4|0)>>2];var j=_FindFunction(d,STRING_TABLE.__str83978|0);a=(a|0)==(j|0)?4:7;break;case 4:a=0==(_UpdateModifyDuplicate(d,e,STRING_TABLE.__str83978|0,g)|0)?5:6;break;case 5:b=-1;a=22;break;case 6:a=12;break;case 7:a=HEAP32[(e+4|0)>>2];j=_FindFunction(d,STRING_TABLE.__str93979|0);a=(a|0)==(j|0)?8:11;break;case 8:a=0==(_UpdateModifyDuplicate(d,
e,STRING_TABLE.__str93979|0,g)|0)?9:10;break;case 9:b=-1;a=22;break;case 10:a=11;break;case 11:a=12;break;case 12:b=0;a=22;break;case 13:a=35!=(HEAPU16[(e|0)>>1]&65535|0)?14:16;break;case 14:a=36!=(HEAPU16[(e|0)>>1]&65535|0)?15:16;break;case 15:b=0;a=22;break;case 16:i=_FindVariable(HEAP32[(e+4|0)>>2],g);a=0==(i|0)?17:18;break;case 17:b=0;a=22;break;case 18:a=0!=(HEAP32[(i+28|0)>>2]|0)?19:20;break;case 19:FUNCTION_TABLE[HEAP32[(HEAP32[(i+28|0)>>2]+36|0)>>2]](d,e,i);a=21;break;case 20:b=0;a=22;break;
case 21:b=1;a=22;break;case 22:return b;default:assert(0,"bad label: "+a)}}_ReplaceRHSVariable.X=1;
function _RuleComplexity(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;a=h;b=f;g=0;c=3;break;case 3:c=0!=(b|0)?4:14;break;case 4:g=g+1|0;d=_ExpressionComplexity(a,HEAP32[(b+52|0)>>2]);g=g+d|0;d=HEAP32[(b+64|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:13;break;case 6:c=0!=(HEAPU32[(d+8|0)>>2]>>>2&1|0)?7:11;break;case 7:e=HEAP32[(d+68|0)>>2];c=8;break;case 8:c=0!=(e|0)?9:10;break;case 9:c=_ExpressionComplexity(a,HEAP32[(e+52|0)>>2]);g=g+c|0;e=HEAP32[(e+64|0)>>2];c=8;break;case 10:c=12;break;case 11:c=
_ExpressionComplexity(a,HEAP32[(d+52|0)>>2]);g=g+c|0;c=12;break;case 12:d=HEAP32[(d+64|0)>>2];c=5;break;case 13:b=HEAP32[(b+68|0)>>2];c=3;break;case 14:return g;default:assert(0,"bad label: "+c)}}_RuleComplexity.X=1;
function _CreateNewDisjunct(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;o=e;g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2]|0)?3:4;break;case 3:var r=_genalloc(i,56);g=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+224|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];g=5;break;case 5:q=r;HEAP32[((q|0)+4|0)>>2]=0;HEAP32[((q|0)+16|0)>>2]=0;HEAP32[((q|0)+20|0)>>2]=0;HEAP32[(q+44|0)>>2]=0;HEAP32[(q+52|0)>>2]=0;HEAP32[(q|0)>>2]=j;p=HEAP32[(q|0)>>2]+4|0;HEAP32[p>>2]=HEAP32[p>>2]+1|0;HEAP32[(q+40|0)>>2]=l;HEAP32[(q+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+76|0)>>2]+48|0)>>2];p=q+32|0;HEAP32[p>>2]&=-2049;p=q+32|0;HEAP32[p>>2]&=-4097;p=q+32|0;HEAP32[p>>2]&=-8193;p=q+32|
0;HEAP32[p>>2]&=-32769;p=q+32|0;HEAP32[p>>2]=HEAP32[p>>2]&-2048|m&2047;p=q+32|0;HEAP32[p>>2]=HEAP32[p>>2]&-16385|(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+76|0)>>2]+52|0)>>2]&1)<<14;HEAP32[(q+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+76|0)>>2]+56|0)>>2];HEAP32[(q+28|0)>>2]=k;p=i;g=_FindModuleItem(i,STRING_TABLE.__str13971|0)+4|0;p=_GetModuleItem(p,0,HEAP32[g>>2]);HEAP32[((q|0)+8|0)>>2]=p;HEAP32[(o+36|0)>>2]=q;p=HEAP32[(q+48|0)>>2]=o;g=6;break;case 6:g=0!=(p|0)?7:10;break;case 7:g=(HEAPU32[p>>2]>>>
9&127|0)==(n|0)?8:9;break;case 8:g=HEAP32[(q+44|0)>>2]=p;HEAP32[g>>2]=HEAP32[g>>2]&-3|2;g=9;break;case 9:p=HEAP32[(p+24|0)>>2];g=6;break;case 10:return q;default:assert(0,"bad label: "+g)}}_CreateNewDisjunct.X=1;
function _ExpressionComplexity(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=0;c=3;break;case 3:c=0!=(b|0)?4:17;break;case 4:c=30==(HEAPU16[(b|0)>>1]&65535|0)?5:11;break;case 5:c=(HEAP32[(b+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]|0)>>2]|0)?8:6;break;case 6:c=(HEAP32[(b+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+16|0)>>2]|0)?8:7;break;case 7:c=(HEAP32[(b+4|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+180|0)>>2]+4|0)>>2]|0)?8:9;break;case 8:c=_ExpressionComplexity(a,
HEAP32[(b+8|0)>>2]);d=d+c|0;c=10;break;case 9:d=d+1|0;c=10;break;case 10:c=16;break;case 11:c=0!=(HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(b|0)>>1]&65535)<<2)|0)>>2]|0)?12:13;break;case 12:c=0!=(HEAPU32[(HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+16|0)+((HEAPU16[(b|0)>>1]&65535)<<2)|0)>>2]+4|0)>>2]>>>15&1|0)?14:15;break;case 13:c=15;break;case 14:d=d+1|0;c=15;break;case 15:c=16;break;case 16:b=HEAP32[(b+12|0)>>2];c=3;break;case 17:return d;default:assert(0,"bad label: "+
c)}}_ExpressionComplexity.X=1;function _InitializeScannerData(h){_AllocateEnvironmentData(h,57,20,1560)}function _DeallocateScannerData(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+228|0)>>2]+4|0)>>2]|0)?3:4;break;case 3:_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+228|0)>>2]+4|0)>>2]);f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}
function _GetToken(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;d=h;e=f;g=c;HEAP16[(g|0)>>1]=173;HEAP32[(g+4|0)>>2]=0;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str3988|0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]=0;i=_EnvGetcRouter(d,e);b=3;break;case 3:if(32==(i|0)){var k=1;b=9}else b=4;break;case 4:10==(i|0)?
(k=1,b=9):b=5;break;case 5:12==(i|0)?(k=1,b=9):b=6;break;case 6:13==(i|0)?(k=1,b=9):b=7;break;case 7:59==(i|0)?(k=1,b=9):b=8;break;case 8:k=9==(i|0);b=9;break;case 9:b=k?10:19;break;case 10:b=59==(i|0)?11:18;break;case 11:i=_EnvGetcRouter(d,e);b=12;break;case 12:if(10!=(i|0))b=13;else{var l=0;b=15}break;case 13:13!=(i|0)?b=14:(l=0,b=15);break;case 14:l=-1!=(i|0);b=15;break;case 15:b=l?16:17;break;case 16:i=_EnvGetcRouter(d,e);b=12;break;case 17:b=18;break;case 18:i=_EnvGetcRouter(d,e);b=3;break;case 19:b=
0!=(_isalpha(i)|0)?20:21;break;case 20:HEAP16[(g|0)>>1]=2;_EnvUngetcRouter(d,i,e);b=_ScanSymbol(d,e,0,j);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=62;break;case 21:b=0!=(_isdigit(i)|0)?22:23;break;case 22:_EnvUngetcRouter(d,i,e);_ScanNumber(d,e,g);b=61;break;case 23:b=i;b=34==(b|0)?24:45==(b|0)||46==(b|0)||43==(b|0)?25:63==(b|0)?26:36==(b|0)?36:60==(b|0)?49:40==(b|0)?50:41==(b|0)?51:126==(b|0)?52:124==(b|0)?53:38==(b|0)?54:-1==(b|0)||0==(b|0)||3==(b|0)?55:56;break;
case 24:b=_ScanString(d,e);HEAP32[(g+4|0)>>2]=b;HEAP16[(g|0)>>1]=3;b=_StringPrintForm(d,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=60;break;case 25:_EnvUngetcRouter(d,i,e);_ScanNumber(d,e,g);b=60;break;case 26:i=_EnvGetcRouter(d,e);b=0!=(_isalpha(i)|0)?28:27;break;case 27:b=42==(i|0)?28:34;break;case 28:_EnvUngetcRouter(d,i,e);b=_ScanSymbol(d,e,0,j);HEAP32[(g+4|0)>>2]=b;HEAP16[(g|0)>>1]=35;b=42==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]|0]<<24>>24|0)?29:32;break;case 29:b=1<(_strlen(HEAP32[(HEAP32[(g+
4|0)>>2]+16|0)>>2])|0)?30:32;break;case 30:b=_strlen(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2])-1|0;b=42==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+b|0]<<24>>24|0)?31:32;break;case 31:HEAP16[(g|0)>>1]=33;b=_AppendStrings(d,STRING_TABLE.__str13989|0,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]);HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(b-1|0)|0]=0;var m=_EnvAddSymbol(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+
228|0)>>2]|0)>>2]+1|0);HEAP32[(g+4|0)>>2]=m;HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(b-1|0)|0]=i&255;b=33;break;case 32:b=_AppendStrings(d,STRING_TABLE.__str13989|0,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=33;break;case 33:b=35;break;case 34:HEAP16[(g|0)>>1]=37;b=_EnvAddSymbol(d,STRING_TABLE.__str13989|0);HEAP32[(g+4|0)>>2]=b;_EnvUngetcRouter(d,i,e);HEAP32[(g+8|0)>>2]=STRING_TABLE.__str13989|0;b=35;break;case 35:b=60;break;case 36:i=b=_EnvGetcRouter(d,e);b=
63==(b|0)?37:47;break;case 37:i=_EnvGetcRouter(d,e);b=0!=(_isalpha(i)|0)?39:38;break;case 38:b=42==(i|0)?39:45;break;case 39:_EnvUngetcRouter(d,i,e);b=_ScanSymbol(d,e,0,j);HEAP32[(g+4|0)>>2]=b;HEAP16[(g|0)>>1]=36;b=42==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]|0]<<24>>24|0)?40:43;break;case 40:b=1<(_strlen(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2])|0)?41:43;break;case 41:b=_strlen(HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2])-1|0;b=42==(HEAP8[HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]+b|0]<<24>>24|0)?42:43;break;
case 42:HEAP16[(g|0)>>1]=34;b=_AppendStrings(d,STRING_TABLE.__str23990|0,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=_strlen(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]);HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(b-1|0)|0]=0;m=_EnvAddSymbol(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+1|0);HEAP32[(g+4|0)>>2]=m;HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(b-1|0)|0]=i&255;b=44;break;case 43:b=_AppendStrings(d,STRING_TABLE.__str23990|
0,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=44;break;case 44:b=46;break;case 45:HEAP16[(g|0)>>1]=38;b=_EnvAddSymbol(d,STRING_TABLE.__str23990|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str23990|0;_EnvUngetcRouter(d,i,e);b=46;break;case 46:b=48;break;case 47:HEAP16[(g|0)>>1]=2;b=_ExpandStringWithChar(d,36,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;_EnvUngetcRouter(d,i,e);b=_ScanSymbol(d,e,1,j);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=48;break;case 48:b=60;break;case 49:HEAP16[(g|0)>>1]=2;b=_ExpandStringWithChar(d,60,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|
0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;b=_ScanSymbol(d,e,1,j);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=60;break;case 50:HEAP16[(g|0)>>1]=170;b=_EnvAddSymbol(d,STRING_TABLE.__str33991|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str33991|0;b=60;break;case 51:HEAP16[(g|0)>>1]=171;b=_EnvAddSymbol(d,STRING_TABLE.__str43992|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str43992|0;b=60;break;case 52:HEAP16[(g|0)>>1]=160;
b=_EnvAddSymbol(d,STRING_TABLE.__str53993|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str53993|0;b=60;break;case 53:HEAP16[(g|0)>>1]=162;b=_EnvAddSymbol(d,STRING_TABLE.__str63994|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str63994|0;b=60;break;case 54:HEAP16[(g|0)>>1]=161;b=_EnvAddSymbol(d,STRING_TABLE.__str73995|0);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=STRING_TABLE.__str73995|0;b=60;break;case 55:HEAP16[(g|0)>>1]=172;b=_EnvAddSymbol(d,STRING_TABLE.__str83996|0);HEAP32[(g+
4|0)>>2]=b;HEAP32[(g+8|0)>>2]=__str93997|0;b=60;break;case 56:b=0!=(_isprint(i)|0)?57:58;break;case 57:_EnvUngetcRouter(d,i,e);b=_ScanSymbol(d,e,0,j);HEAP32[(g+4|0)>>2]=b;HEAP16[(g|0)>>1]=HEAP16[j>>1];HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=59;break;case 58:HEAP32[(g+8|0)>>2]=STRING_TABLE.__str103998|0;b=59;break;case 59:b=60;break;case 60:b=61;break;case 61:b=62;break;case 62:b=8==(HEAPU16[(g|0)>>1]&65535|0)?63:64;break;case 63:_SavePPBuffer(d,STRING_TABLE.__str113999|0);_SavePPBuffer(d,
HEAP32[(g+8|0)>>2]);_SavePPBuffer(d,STRING_TABLE.__str124000|0);b=65;break;case 64:_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);b=65;break;case 65:b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]|0)?66:67;break;case 66:_rm(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|
0)>>2]=0;b=67;break;case 67:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_GetToken.X=1;
function _ScanSymbol(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;k=_EnvGetcRouter(e,g);b=3;break;case 3:if(60!=(k|0))b=4;else{var l=0;b=13}break;case 4:34!=(k|0)?b=5:(l=0,b=13);break;case 5:40!=(k|0)?b=6:(l=0,b=13);break;case 6:41!=(k|0)?b=7:(l=0,b=13);break;case 7:38!=(k|0)?b=8:(l=0,b=13);break;case 8:124!=(k|0)?b=9:(l=0,b=13);break;case 9:126!=(k|0)?b=10:(l=0,b=13);break;case 10:32!=(k|0)?b=11:(l=0,b=13);break;case 11:59!=(k|0)?b=12:(l=0,b=13);break;case 12:l=0!=(_isprint(k)|
0);b=13;break;case 13:b=l?14:15;break;case 14:k=_ExpandStringWithChar(e,k,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=_EnvGetcRouter(e,g);b=3;break;case 15:_EnvUngetcRouter(e,k,g);b=2<(i|0)?16:22;break;case 16:b=91==(HEAP8[HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]|
0]<<24>>24|0)?17:18;break;case 17:b=93==(HEAP8[HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]+(i-1|0)|0]<<24>>24|0)?19:20;break;case 18:b=20;break;case 19:HEAP16[j>>1]=8;k=93;b=21;break;case 20:HEAP16[j>>1]=2;d=_EnvAddSymbol(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]);b=23;break;case 21:HEAP8[HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]+(i-1|0)|0]=0;d=_EnvAddSymbol(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]+1|0);HEAP8[HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|
0)>>2]|0)>>2]+(i-1|0)|0]=k&255;b=23;break;case 22:HEAP16[j>>1]=2;d=_EnvAddSymbol(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+228|0)>>2]|0)>>2]);b=23;break;case 23:return d;default:assert(0,"bad label: "+b)}}_ScanSymbol.X=1;
function _ScanNumber(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o=a;d=h;e=f;g=c;m=l=i=0;j=_EnvGetcRouter(d,e);k=-1;b=3;break;case 3:if(5!=(k|0))b=4;else{var p=0;b=5}break;case 4:p=9!=(k|0);b=5;break;case 5:b=p?6:128;break;case 6:b=-1==(k|0)?7:34;break;case 7:b=0!=(_isdigit(j)|0)?8:9;break;case 8:k=0;l=1;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>
2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=33;break;case 9:b=43==(j|0)?11:10;break;case 10:b=45==(j|0)?11:12;break;case 11:k=0;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=32;break;case 12:b=46==(j|0)?13:14;break;case 13:m=1;k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=1;b=31;break;case 14:b=69==(j|0)?16:15;break;case 15:b=
101==(j|0)?16:17;break;case 16:m=1;k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=2;b=30;break;case 17:b=60==(j|0)?27:18;break;case 18:b=34==(j|0)?27:19;break;case 19:b=40==(j|0)?27:20;break;case 20:b=41==(j|0)?27:21;break;case 21:b=38==(j|0)?27:22;break;
case 22:b=124==(j|0)?27:23;break;case 23:b=126==(j|0)?27:24;break;case 24:b=32==(j|0)?27:25;break;case 25:b=59==(j|0)?27:26;break;case 26:b=0==(_isprint(j)|0)?27:28;break;case 27:k=5;b=29;break;case 28:k=9;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=
29;break;case 29:b=30;break;case 30:b=31;break;case 31:b=32;break;case 32:b=33;break;case 33:b=124;break;case 34:b=0==(k|0)?35:58;break;case 35:b=0!=(_isdigit(j)|0)?36:37;break;case 36:l=1;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=57;break;case 37:b=
46==(j|0)?38:39;break;case 38:m=1;k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=1;b=56;break;case 39:b=69==(j|0)?41:40;break;case 40:b=101==(j|0)?41:42;break;case 41:m=1;k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],
HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=2;b=55;break;case 42:b=60==(j|0)?52:43;break;case 43:b=34==(j|0)?52:44;break;case 44:b=40==(j|0)?52:45;break;case 45:b=41==(j|0)?52:46;break;case 46:b=38==(j|0)?52:47;break;case 47:b=124==(j|0)?52:48;break;case 48:b=126==(j|0)?52:49;break;case 49:b=32==(j|0)?52:50;break;case 50:b=59==(j|
0)?52:51;break;case 51:b=0==(_isprint(j)|0)?52:53;break;case 52:k=5;b=54;break;case 53:k=9;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=54;break;case 54:b=55;break;case 55:b=56;break;case 56:b=57;break;case 57:b=123;break;case 58:b=1==(k|0)?59:79;break;
case 59:b=0!=(_isdigit(j)|0)?60:61;break;case 60:l=1;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=78;break;case 61:b=69==(j|0)?63:62;break;case 62:b=101==(j|0)?63:64;break;case 63:k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>
2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=2;b=77;break;case 64:b=60==(j|0)?74:65;break;case 65:b=34==(j|0)?74:66;break;case 66:b=40==(j|0)?74:67;break;case 67:b=41==(j|0)?74:68;break;case 68:b=38==(j|0)?74:69;break;case 69:b=124==(j|0)?74:70;break;case 70:b=126==(j|0)?74:71;break;case 71:b=32==(j|0)?74:72;break;case 72:b=
59==(j|0)?74:73;break;case 73:b=0==(_isprint(j)|0)?74:75;break;case 74:k=5;b=76;break;case 75:k=9;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=76;break;case 76:b=77;break;case 77:b=78;break;case 78:b=122;break;case 79:b=2==(k|0)?80:100;break;case 80:b=
0!=(_isdigit(j)|0)?81:82;break;case 81:k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=3;b=99;break;case 82:b=43==(j|0)?84:83;break;case 83:b=45==(j|0)?84:85;break;case 84:k=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],
HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=k;i=i+1|0;k=3;b=98;break;case 85:b=60==(j|0)?95:86;break;case 86:b=34==(j|0)?95:87;break;case 87:b=40==(j|0)?95:88;break;case 88:b=41==(j|0)?95:89;break;case 89:b=38==(j|0)?95:90;break;case 90:b=124==(j|0)?95:91;break;case 91:b=126==(j|0)?95:92;break;case 92:b=32==(j|0)?95:93;break;case 93:b=59==(j|
0)?95:94;break;case 94:b=0==(_isprint(j)|0)?95:96;break;case 95:l=0;k=5;b=97;break;case 96:k=9;b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=97;break;case 97:b=98;break;case 98:b=99;break;case 99:b=121;break;case 100:b=3==(k|0)?101:120;break;case 101:b=
0!=(_isdigit(j)|0)?102:103;break;case 102:b=_ExpandStringWithChar(d,j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=119;break;case 103:b=60==(j|0)?113:104;break;case 104:b=34==(j|0)?113:105;break;case 105:b=40==(j|0)?113:106;break;case 106:b=41==(j|0)?113:107;break;case 107:b=38==
(j|0)?113:108;break;case 108:b=124==(j|0)?113:109;break;case 109:b=126==(j|0)?113:110;break;case 110:b=32==(j|0)?113:111;break;case 111:b=59==(j|0)?113:112;break;case 112:b=0==(_isprint(j)|0)?113:117;break;case 113:b=43==(HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(i-1|0)|0]<<24>>24|0)?115:114;break;case 114:b=45==(HEAP8[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]+(i-1|0)|0]<<24>>24|0)?115:116;break;case 115:l=0;b=116;break;case 116:k=5;b=118;break;case 117:k=9;b=_ExpandStringWithChar(d,
j,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2],HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+8|0,HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]+4|0)>>2]+80|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]=b;i=i+1|0;b=118;break;case 118:b=119;break;case 119:b=120;break;case 120:b=121;break;case 121:b=122;break;case 122:b=123;break;case 123:b=124;break;case 124:b=5!=(k|0)?125:127;break;case 125:b=9!=(k|0)?126:127;break;case 126:j=_EnvGetcRouter(d,
e);b=127;break;case 127:b=3;break;case 128:b=9==(k|0)?129:130;break;case 129:b=_ScanSymbol(d,e,i,o);HEAP32[(g+4|0)>>2]=b;HEAP16[(g|0)>>1]=HEAP16[o>>1];HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=139;break;case 130:_EnvUngetcRouter(d,j,e);b=0!=(l|0)?132:131;break;case 131:HEAP16[(g|0)>>1]=2;b=_EnvAddSymbol(d,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]);HEAP32[(g+4|0)>>2]=b;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2];b=139;break;case 132:b=0!=(m|0)?133:134;break;
case 133:b=_atof(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]);HEAP16[(g|0)>>1]=0;b=_EnvAddDouble(d,b);HEAP32[(g+4|0)>>2]=b;b=d;var q=HEAP32[(g+4|0)>>2]+16|0,q=(tempDoubleI32[0]=HEAP32[q>>2],tempDoubleI32[1]=HEAP32[q+4>>2],tempDoubleF64[0]);b=_FloatToString(b,q);HEAP32[(g+8|0)>>2]=b;b=138;break;case 134:n=_atol(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+228|0)>>2]|0)>>2]);b=2147483647==(n|0)?136:135;break;case 135:b=-2147483648==(n|0)?136:137;break;case 136:_PrintWarningID(d,STRING_TABLE.__str134001|
0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str144002|0,STRING_TABLE.__str154003|0);b=137;break;case 137:HEAP16[(g|0)>>1]=1;b=_EnvAddLong(d,n);HEAP32[(g+4|0)>>2]=b;b=_LongIntegerToString(d,HEAP32[(HEAP32[(g+4|0)>>2]+16|0)>>2]);HEAP32[(g+8|0)>>2]=b;b=138;break;case 138:b=139;break;case 139:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_ScanNumber.X=1;function _CopyToken(h,f){HEAP16[(h|0)>>1]=HEAP16[(f|0)>>1];HEAP32[(h+4|0)>>2]=HEAP32[(f+4|0)>>2];HEAP32[(h+8|0)>>2]=HEAP32[(f+8|0)>>2]}
function _ResetLineCount(h){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+228|0)>>2]+12|0)>>2]=0}function _GetLineCount(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+228|0)>>2]+12|0)>>2]}function _IncrementLineCount(h){h=HEAP32[(HEAP32[(h+16|0)>>2]+228|0)>>2]+12|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0}function _DecrementLineCount(h){h=HEAP32[(HEAP32[(h+16|0)>>2]+228|0)>>2]+12|0;HEAP32[h>>2]=HEAP32[h>>2]-1|0}
function _ScanString(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+4,j,k;b=h;d=f;HEAP32[g>>2]=0;j=HEAP32[i>>2]=0;e=_EnvGetcRouter(b,d);a=3;break;case 3:if(34!=(e|0))a=4;else{var l=0;a=5}break;case 4:l=-1!=(e|0);a=5;break;case 5:a=l?6:9;break;case 6:a=92==(e|0)?7:8;break;case 7:e=_EnvGetcRouter(b,d);a=8;break;case 8:j=_ExpandStringWithChar(b,e,j,g,i,HEAP32[i>>2]+80|0);e=_EnvGetcRouter(b,
d);a=3;break;case 9:a=-1==(e|0)?10:12;break;case 10:a=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+228|0)>>2]+16|0)>>2]|0)?11:12;break;case 11:_EnvPrintRouter(b,STRING_TABLE.__str164004|0,STRING_TABLE.__str174005|0);a=12;break;case 12:a=0==(j|0)?13:14;break;case 13:k=_EnvAddSymbol(b,__str93997|0);a=15;break;case 14:k=_EnvAddSymbol(b,j);_rm(b,j,HEAP32[i>>2]);a=15;break;case 15:return a=k,STACKTOP=c,a;default:assert(0,"bad label: "+a)}}_ScanString.X=1;
function _SortFunctionDefinitions(h){_AllocateEnvironmentData(h,7,4,0);_EnvDefineFunction2(h,STRING_TABLE.__str4014|0,117,1562,STRING_TABLE.__str14015|0,STRING_TABLE.__str24016|0)}
function _SortFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m=c,n,o,p,q,r,s;b=h;d=f;q=j=0;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];e=a=_EnvArgCountCheck(b,STRING_TABLE.__str4014|0,1,1);a=-1==(a|0)?3:4;break;case 3:a=55;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str4014|0,1,2,m)|0)?5:6;break;case 5:a=
55;break;case 6:p=HEAP32[(HEAP32[(m+8|0)>>2]+16|0)>>2];p=_FunctionReferenceExpression(b,p);a=0==(p|0)?7:8;break;case 7:_ExpectedTypeError1(b,STRING_TABLE.__str4014|0,1,STRING_TABLE.__str34017|0);a=55;break;case 8:a=30==(HEAPU16[(p|0)>>1]&65535|0)?9:14;break;case 9:r=HEAP32[(p+4|0)>>2];a=2<(_GetMinimumArgs(r)|0)?12:10;break;case 10:a=0==(_GetMaximumArgs(r)|0)?12:11;break;case 11:a=1==(_GetMaximumArgs(r)|0)?12:13;break;case 12:_ExpectedTypeError1(b,STRING_TABLE.__str4014|0,1,STRING_TABLE.__str44018|
0);_ReturnExpression(b,p);a=55;break;case 13:a=14;break;case 14:a=32==(HEAPU16[(p|0)>>1]&65535|0)?15:20;break;case 15:s=HEAP32[(p+4|0)>>2];a=2<(HEAP32[(s+40|0)>>2]|0)?18:16;break;case 16:a=0==(HEAP32[(s+44|0)>>2]|0)?18:17;break;case 17:a=1==(HEAP32[(s+44|0)>>2]|0)?18:19;break;case 18:_ExpectedTypeError1(b,STRING_TABLE.__str4014|0,1,STRING_TABLE.__str54019|0);_ReturnExpression(b,p);a=55;break;case 19:a=20;break;case 20:a=1==(e|0)?21:22;break;case 21:_EnvSetMultifieldErrorValue(b,d);_ReturnExpression(b,
p);a=55;break;case 22:k=_genalloc(b,24*(e-1|0)|0);g=2;a=23;break;case 23:a=(g|0)<=(e|0)?24:29;break;case 24:_EnvRtnUnknown(b,g,k+24*(g-2|0)|0);a=4==(HEAPU16[((k+24*(g-2|0)|0)+4|0)>>1]&65535|0)?25:26;break;case 25:q=q+((HEAP32[((k+24*(g-2|0)|0)+16|0)>>2]-HEAP32[((k+24*(g-2|0)|0)+12|0)>>2]|0)+1|0)|0;a=27;break;case 26:q=q+1|0;a=27;break;case 27:a=28;break;case 28:g=g+1|0;a=23;break;case 29:a=0==(q|0)?30:31;break;case 30:_genfree(b,k,24*(e-1|0)|0);_EnvSetMultifieldErrorValue(b,d);_ReturnExpression(b,
p);a=55;break;case 31:l=_genalloc(b,24*q|0);g=2;a=32;break;case 32:a=(g|0)<=(e|0)?33:42;break;case 33:a=4==(HEAPU16[((k+24*(g-2|0)|0)+4|0)>>1]&65535|0)?34:39;break;case 34:o=HEAP32[((k+24*(g-2|0)|0)+8|0)>>2];i=HEAP32[((k+24*(g-2|0)|0)+12|0)>>2]+1|0;a=35;break;case 35:a=(i|0)<=(HEAP32[((k+24*(g-2|0)|0)+16|0)>>2]+1|0)?36:38;break;case 36:HEAP16[((l+24*j|0)+4|0)>>1]=HEAP16[((o+16|0)+((i-1|0)<<3)|0)>>1];HEAP32[((l+24*j|0)+8|0)>>2]=HEAP32[(((o+16|0)+((i-1|0)<<3)|0)+4|0)>>2];a=37;break;case 37:i=i+1|0;
j=j+1|0;a=35;break;case 38:a=40;break;case 39:HEAP16[((l+24*j|0)+4|0)>>1]=HEAP16[((k+24*(g-2|0)|0)+4|0)>>1];HEAP32[((l+24*j|0)+8|0)>>2]=HEAP32[((k+24*(g-2|0)|0)+8|0)>>2];j=j+1|0;a=40;break;case 40:a=41;break;case 41:g=g+1|0;a=32;break;case 42:_genfree(b,k,24*(e-1|0)|0);HEAP32[(p+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+28|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+28|0)>>2]|0)>>2]=p;g=0;a=43;break;case 43:a=(g|0)<(q|0)?44:46;break;case 44:_ValueInstall(b,l+24*g|0);a=45;break;case 45:g=
g+1|0;a=43;break;case 46:_MergeSort(b,q,l,1564);g=0;a=47;break;case 47:a=(g|0)<(q|0)?48:50;break;case 48:_ValueDeinstall(b,l+24*g|0);a=49;break;case 49:g=g+1|0;a=47;break;case 50:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+28|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+28|0)>>2]|0)>>2]+12|0)>>2];HEAP32[(p+12|0)>>2]=0;_ReturnExpression(b,p);n=_EnvCreateMultifield(b,q);g=0;a=51;break;case 51:a=(g|0)<(q|0)?52:54;break;case 52:HEAP16[((n+16|0)+(((g+1|0)-1|0)<<3)|0)>>1]=HEAP16[((l+24*g|0)+4|0)>>
1];HEAP32[(((n+16|0)+(((g+1|0)-1|0)<<3)|0)+4|0)>>2]=HEAP32[((l+24*g|0)+8|0)>>2];a=53;break;case 53:g=g+1|0;a=51;break;case 54:_genfree(b,l,24*q|0);HEAP16[(d+4|0)>>1]=4;HEAP32[(d+12|0)>>2]=0;HEAP32[(d+16|0)>>2]=q-1|0;HEAP32[(d+8|0)>>2]=n;a=55;break;case 55:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_SortFunction.X=1;
function _MergeSort(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=1>=e>>>0?3:4;break;case 3:b=5;break;case 4:b=_genalloc(d,24*e|0);j=Math.floor(((e+1|0)>>>0)/2);_DoMergeSort(d,g,b,0,j-1|0,j,e-1|0,i);_genfree(d,b,24*e|0);b=5;break;case 5:return;default:assert(0,"bad label: "+b)}}
function _DefaultCompareSwapFunction(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i=a;e=h;g=f;b=c;g=_GenConstant(e,HEAP16[(g+4|0)>>1],HEAP32[(g+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]+8|0)>>2]=g;b=_GenConstant(e,HEAP16[(b+4|0)>>1],HEAP32[(b+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]=b;_ExpressionInstall(e,
HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]);_EvaluateExpression(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2],i);_ExpressionDeinstall(e,HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]);_ReturnExpression(e,HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+28|0)>>2]|0)>>2]+8|0)>>2]=0;b=2==(HEAPU16[(i+4|0)>>1]&65535|0)?3:5;break;case 3:b=(HEAP32[(i+8|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>
2]|0)?4:5;break;case 4:d=0;b=6;break;case 5:d=1;b=6;break;case 6:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_DefaultCompareSwapFunction.X=1;
function _DoMergeSort(h,f,c,a,b,d,e,g){var i=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var j;for(j=2;;)switch(j){case 2:var k,l,m,n,o,p,q,r,s=i,t,u,v;k=h;l=f;m=c;n=a;o=b;p=d;q=e;r=g;j=(n|0)==(o|0)?3:4;break;case 3:j=10;break;case 4:j=(n+1|0)==(o|0)?5:8;break;case 5:j=0!=(FUNCTION_TABLE[r](k,l+24*n|0,l+24*o|0)|0)?6:7;break;case 6:_TransferDataObjectValues(s,l+24*n|0);_TransferDataObjectValues(l+24*n|0,l+24*o|0);_TransferDataObjectValues(l+
24*o|0,s);j=7;break;case 7:j=9;break;case 8:j=(o-n|0)+1|0;j=n+Math.floor(((j+1|0)>>>0)/2)|0;_DoMergeSort(k,l,m,n,j-1|0,j,o,r);j=9;break;case 9:j=10;break;case 10:j=(p|0)==(q|0)?11:12;break;case 11:j=18;break;case 12:j=(p+1|0)==(q|0)?13:16;break;case 13:j=0!=(FUNCTION_TABLE[r](k,l+24*p|0,l+24*q|0)|0)?14:15;break;case 14:_TransferDataObjectValues(s,l+24*p|0);_TransferDataObjectValues(l+24*p|0,l+24*q|0);_TransferDataObjectValues(l+24*q|0,s);j=15;break;case 15:j=17;break;case 16:j=(q-p|0)+1|0;j=p+Math.floor(((j+
1|0)>>>0)/2)|0;_DoMergeSort(k,l,m,p,j-1|0,j,q,r);j=17;break;case 17:j=18;break;case 18:t=v=n;u=p;j=19;break;case 19:j=v>>>0<=q>>>0?20:30;break;case 20:j=t>>>0>o>>>0?21:22;break;case 21:_TransferDataObjectValues(m+24*v|0,l+24*u|0);u=u+1|0;v=v+1|0;j=29;break;case 22:j=u>>>0>q>>>0?23:24;break;case 23:_TransferDataObjectValues(m+24*v|0,l+24*t|0);t=t+1|0;v=v+1|0;j=28;break;case 24:j=0!=(FUNCTION_TABLE[r](k,l+24*t|0,l+24*u|0)|0)?25:26;break;case 25:_TransferDataObjectValues(m+24*v|0,l+24*u|0);u=u+1|0;v=
v+1|0;j=27;break;case 26:_TransferDataObjectValues(m+24*v|0,l+24*t|0);t=t+1|0;v=v+1|0;j=27;break;case 27:j=28;break;case 28:j=29;break;case 29:j=19;break;case 30:t=n;j=31;break;case 31:j=t>>>0<=q>>>0?32:34;break;case 32:_TransferDataObjectValues(l+24*t|0,m+24*t|0);j=33;break;case 33:t=t+1|0;j=31;break;case 34:STACKTOP=i;return;default:assert(0,"bad label: "+j)}}_DoMergeSort.X=1;
function _StringFunctionDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str4020|0,107,1566,STRING_TABLE.__str14021|0,STRING_TABLE.__str24022|0);_EnvDefineFunction2(h,STRING_TABLE.__str34023|0,107,1568,STRING_TABLE.__str44024|0,STRING_TABLE.__str24022|0);_EnvDefineFunction2(h,STRING_TABLE.__str54025|0,108,1570,STRING_TABLE.__str64026|0,STRING_TABLE.__str74027|0);_EnvDefineFunction2(h,STRING_TABLE.__str84028|0,108,1572,STRING_TABLE.__str94029|0,STRING_TABLE.__str104030|0);_EnvDefineFunction2(h,
STRING_TABLE.__str114031|0,106,1574,STRING_TABLE.__str124032|0,STRING_TABLE.__str74027|0);_EnvDefineFunction2(h,STRING_TABLE.__str134033|0,106,1576,STRING_TABLE.__str144034|0,STRING_TABLE.__str74027|0);_EnvDefineFunction2(h,STRING_TABLE.__str154035|0,115,1578,STRING_TABLE.__str164036|0,STRING_TABLE.__str174037|0);_EnvDefineFunction2(h,STRING_TABLE.__str184038|0,117,1580,STRING_TABLE.__str194039|0,STRING_TABLE.__str204040|0);_EnvDefineFunction2(h,STRING_TABLE.__str214041|0,117,1582,STRING_TABLE.__str224042|
0,STRING_TABLE.__str234043|0);_EnvDefineFunction2(h,STRING_TABLE.__str244044|0,98,1584,STRING_TABLE.__str254045|0,STRING_TABLE.__str234043|0);_EnvDefineFunction2(h,STRING_TABLE.__str264046|0,117,1586,STRING_TABLE.__str274047|0,STRING_TABLE.__str74027|0)}function _StrCatFunction(h,f){_StrOrSymCatFunction(h,f,3)}function _SymCatFunction(h,f){_StrOrSymCatFunction(h,f,2)}
function _StrLengthFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str54025|0,0,1)|0)?3:4;break;case 3:a=-1;c=7;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str54025|0,1,181,d)|0)?5:6;break;case 5:a=-1;c=7;break;case 6:a=_strlen(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}
function _StrCompareFunction(h){var f=STACKTOP;STACKTOP+=72;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g=f,i=f+24,j=f+48;b=h;d=c=_EnvArgRangeCheck(b,STRING_TABLE.__str84028|0,2,3);c=-1==(c|0)?3:4;break;case 3:a=0;c=22;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str84028|0,1,181,g)|0)?5:6;break;case 5:a=0;c=22;break;case 6:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str84028|0,2,181,i)|0)?7:8;break;case 7:a=
0;c=22;break;case 8:c=3==(d|0)?9:15;break;case 9:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str84028|0,3,1,j)|0)?10:11;break;case 10:a=0;c=22;break;case 11:c=1==(HEAPU16[(j+4|0)>>1]&65535|0)?12:13;break;case 12:var k=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];c=14;break;case 13:k=HEAP32[(j+8|0)>>2]+16|0;k=(tempDoubleI32[0]=HEAP32[k>>2],tempDoubleI32[1]=HEAP32[k+4>>2],tempDoubleF64[0])&-1;c=14;break;case 14:e=k;e=_strncmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2],e);c=16;break;
case 15:e=_strcmp(HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(i+8|0)>>2]+16|0)>>2]);c=16;break;case 16:c=0>(e|0)?17:18;break;case 17:e=-1;c=21;break;case 18:c=0<(e|0)?19:20;break;case 19:e=1;c=20;break;case 20:c=21;break;case 21:a=e;c=22;break;case 22:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_StrCompareFunction.X=1;
function _UpcaseFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str114031|0,0,1)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,__str284048|0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str114031|0,1,181,e)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,__str284048|
0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 6:j=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];i=_strlen(j)+1|0;k=_gm2(b,i);g=0;a=7;break;case 7:a=g>>>0<i>>>0?8:13;break;case 8:a=0!=(_islower(HEAP8[j+g|0]<<24>>24)|0)?9:10;break;case 9:a=_toupper(HEAP8[j+g|0]<<24>>24)&255;HEAP8[k+g|0]=a;a=11;break;case 10:HEAP8[k+g|0]=HEAP8[j+g|0];a=11;break;case 11:a=12;break;case 12:g=g+1|0;a=7;break;case 13:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];a=_EnvAddSymbol(b,k);HEAP32[(d+8|0)>>2]=a;_rm(b,k,i);a=14;break;case 14:STACKTOP=
c;return;default:assert(0,"bad label: "+a)}}_UpcaseFunction.X=1;
function _LowcaseFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i,j,k;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str134033|0,0,1)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,__str284048|0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str134033|0,1,181,e)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,
__str284048|0);HEAP32[(d+8|0)>>2]=a;a=14;break;case 6:j=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];i=_strlen(j)+1|0;k=_gm2(b,i);g=0;a=7;break;case 7:a=g>>>0<i>>>0?8:13;break;case 8:a=0!=(_isupper(HEAP8[j+g|0]<<24>>24)|0)?9:10;break;case 9:a=_tolower(HEAP8[j+g|0]<<24>>24)&255;HEAP8[k+g|0]=a;a=11;break;case 10:HEAP8[k+g|0]=HEAP8[j+g|0];a=11;break;case 11:a=12;break;case 12:g=g+1|0;a=7;break;case 13:HEAP16[(d+4|0)>>1]=HEAP16[(e+4|0)>>1];a=_EnvAddSymbol(b,k);HEAP32[(d+8|0)>>2]=a;_rm(b,k,i);a=14;break;case 14:STACKTOP=
c;return;default:assert(0,"bad label: "+a)}}_LowcaseFunction.X=1;
function _SubStringFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g,i,j,k,l;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str154035|0,0,3)|0)?3:4;break;case 3:a=_EnvAddSymbol(b,__str284048|0);c=28;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str154035|0,1,1,d)|0)?5:6;break;case 5:a=_EnvAddSymbol(b,__str284048|0);c=28;break;case 6:c=1==(HEAPU16[(d+4|0)>>1]&65535|
0)?7:8;break;case 7:var m=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=9;break;case 8:m=HEAP32[(d+8|0)>>2]+16|0;m=(tempDoubleI32[0]=HEAP32[m>>2],tempDoubleI32[1]=HEAP32[m+4>>2],tempDoubleF64[0])&-1;c=9;break;case 9:i=m-1|0;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str154035|0,2,1,d)|0)?10:11;break;case 10:a=_EnvAddSymbol(b,__str284048|0);c=28;break;case 11:c=1==(HEAPU16[(d+4|0)>>1]&65535|0)?12:13;break;case 12:var n=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];c=14;break;case 13:n=HEAP32[(d+8|0)>>2]+16|0;n=(tempDoubleI32[0]=
HEAP32[n>>2],tempDoubleI32[1]=HEAP32[n+4>>2],tempDoubleF64[0])&-1;c=14;break;case 14:j=n-1|0;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str154035|0,3,181,d)|0)?15:16;break;case 15:a=_EnvAddSymbol(b,__str284048|0);c=28;break;case 16:c=0>(i|0)?17:18;break;case 17:i=0;c=18;break;case 18:c=j;var o=_strlen(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=(c|0)>(o|0)?19:20;break;case 19:j=_strlen(HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=20;break;case 20:c=(i|0)>(j|0)?21:22;break;case 21:a=_EnvAddSymbol(b,__str284048|
0);c=28;break;case 22:g=_gm2(b,(j-i|0)+2|0);e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];l=0;k=i;c=23;break;case 23:c=(k|0)<=(j|0)?24:26;break;case 24:HEAP8[g+l|0]=HEAP8[e+k|0];c=25;break;case 25:k=k+1|0;l=l+1|0;c=23;break;case 26:HEAP8[g+l|0]=0;c=27;break;case 27:a=_EnvAddSymbol(b,g);_rm(b,g,(j-i|0)+2|0);c=28;break;case 28:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_SubStringFunction.X=1;
function _StrIndexFunction(h,f){var c=STACKTOP;STACKTOP+=48;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g=c+24,i,j,k,l;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str184038|0,0,2)|0)?3:4;break;case 3:a=23;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str184038|0,1,181,e)|0)?5:6;break;case 5:a=23;break;
case 6:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str184038|0,2,181,g)|0)?7:8;break;case 7:a=23;break;case 8:i=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];j=HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2];a=0==(_strlen(i)|0)?9:10;break;case 9:HEAP16[(d+4|0)>>1]=1;a=b;var m=_strlen(j)+1|0;a=_EnvAddLong(a,m);HEAP32[(d+8|0)>>2]=a;a=23;break;case 10:k=1;a=11;break;case 11:a=0!=HEAP8[j]<<24>>24?12:22;break;case 12:l=0;a=13;break;case 13:if(0!=(HEAP8[i+l|0]<<24>>24|0))a=14;else{var n=0;a=15}break;case 14:n=(HEAP8[i+l|0]<<24>>
24|0)==(HEAP8[j+l|0]<<24>>24|0);a=15;break;case 15:a=n?16:18;break;case 16:a=17;break;case 17:l=l+1|0;a=13;break;case 18:a=0==(HEAP8[i+l|0]<<24>>24|0)?19:20;break;case 19:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,k);HEAP32[(d+8|0)>>2]=a;a=23;break;case 20:a=21;break;case 21:k=k+1|0;j=j+1|0;a=11;break;case 22:a=23;break;case 23:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_StrIndexFunction.X=1;
function _EvalFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str214041|0,0,1)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=7;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str214041|0,1,181,e)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+
8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=7;break;case 6:_EnvEval(b,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],d);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_EvalFunction.X=1;
function _BuildFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str244044|0,0,1)|0)?3:4;break;case 3:a=0;c=7;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str244044|0,1,181,d)|0)?5:6;break;case 5:a=0;c=7;break;case 6:a=_EnvBuild(b,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2]);c=7;break;case 7:return h=a,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}
function _StringToFieldFunction(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c;b=h;d=f;a=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str264046|0,0,1)|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,STRING_TABLE.__str294049|0);HEAP32[(d+8|0)>>2]=a;a=7;break;case 4:a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str264046|0,1,181,e)|0)?5:6;break;case 5:HEAP16[(d+4|0)>>1]=3;a=_EnvAddSymbol(b,
STRING_TABLE.__str294049|0);HEAP32[(d+8|0)>>2]=a;a=7;break;case 6:_StringToField(b,HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2],d);a=7;break;case 7:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _StrOrSymCatFunction(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g=a,i,j,k,l,m,n,o;d=h;e=f;b=c;HEAP16[(e+4|0)>>1]=b;b=3==(b&65535|0)?3:4;break;case 3:o=STRING_TABLE.__str4020|0;b=_EnvAddSymbol(d,__str284048|0);HEAP32[(e+8|0)>>2]=b;b=5;break;case 4:o=STRING_TABLE.__str34023|0;b=_EnvAddSymbol(d,STRING_TABLE.__str404060|0);HEAP32[(e+8|0)>>2]=b;b=5;break;case 5:i=_EnvRtnArgCount(d);
n=_gm1(d,i<<2|0);j=0;b=6;break;case 6:b=(j|0)<(i|0)?7:9;break;case 7:HEAP32[(n+(j<<2)|0)>>2]=0;b=8;break;case 8:j=j+1|0;b=6;break;case 9:j=k=1;b=10;break;case 10:b=(j|0)<=(i|0)?11:26;break;case 11:_EnvRtnUnknown(d,j,g);b=HEAPU16[(g+4|0)>>1]&65535;b=3==(b|0)||8==(b|0)||2==(b|0)?12:0==(b|0)?13:1==(b|0)?14:15;break;case 12:b=HEAP32[(g+8|0)>>2];HEAP32[(n+((j-1|0)<<2)|0)>>2]=b;b=b+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=16;break;case 13:var p=b=d,q=HEAP32[(g+8|0)>>2]+16|0,q=(tempDoubleI32[0]=HEAP32[q>>2],
tempDoubleI32[1]=HEAP32[q+4>>2],tempDoubleF64[0]),p=_FloatToString(p,q);b=_EnvAddSymbol(b,p);HEAP32[(n+((j-1|0)<<2)|0)>>2]=b;b=b+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=16;break;case 14:b=d;p=_LongIntegerToString(d,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);b=_EnvAddSymbol(b,p);HEAP32[(n+((j-1|0)<<2)|0)>>2]=b;b=b+4|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=16;break;case 15:_ExpectedTypeError1(d,o,j,STRING_TABLE.__str414061|0);_SetEvaluationError(d,1);b=16;break;case 16:b=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|
0)>>2]+4|0)>>2]|0)?17:24;break;case 17:j=0;b=18;break;case 18:b=(j|0)<(i|0)?19:23;break;case 19:b=0!=(HEAP32[(n+(j<<2)|0)>>2]|0)?20:21;break;case 20:_DecrementSymbolCount(d,HEAP32[(n+(j<<2)|0)>>2]);b=21;break;case 21:b=22;break;case 22:j=j+1|0;b=18;break;case 23:_rm(d,n,i<<2|0);b=37;break;case 24:b=_strlen(HEAP32[(HEAP32[(n+((j-1|0)<<2)|0)>>2]+16|0)>>2]);k=k+b|0;b=25;break;case 25:j=j+1|0;b=10;break;case 26:m=_gm2(d,k|0);j=l=0;b=27;break;case 27:b=(j|0)<(i|0)?28:30;break;case 28:b=HEAP32[(HEAP32[(n+
(j<<2)|0)>>2]+16|0)>>2];_sprintf(m+l|0,STRING_TABLE.__str424062|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));b=_strlen(HEAP32[(HEAP32[(n+(j<<2)|0)>>2]+16|0)>>2]);l=l+b|0;b=29;break;case 29:j=j+1|0;b=27;break;case 30:j=_EnvAddSymbol(d,m);HEAP32[(e+8|0)>>2]=j;_rm(d,m,k|0);j=0;b=31;break;case 31:b=(j|0)<(i|0)?32:36;break;case 32:b=0!=(HEAP32[(n+(j<<2)|0)>>2]|0)?33:34;break;case 33:_DecrementSymbolCount(d,HEAP32[(n+(j<<2)|0)>>
2]);b=34;break;case 34:b=35;break;case 35:j=j+1|0;b=31;break;case 36:_rm(d,n,i<<2|0);b=37;break;case 37:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_StrOrSymCatFunction.X=1;
function _StringToField(h,f,c){var a=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g=a;d=h;b=f;e=c;_OpenStringSource(d,STRING_TABLE.__str304050|0,b,0);_GetToken(d,STRING_TABLE.__str304050|0,g);_CloseStringSource(d,STRING_TABLE.__str304050|0);HEAP16[(e+4|0)>>1]=HEAP16[(g|0)>>1];b=0==(HEAPU16[(g|0)>>1]&65535|0)?7:3;break;case 3:b=3==(HEAPU16[(g|0)>>1]&65535|0)?7:4;break;case 4:b=8==(HEAPU16[(g|
0)>>1]&65535|0)?7:5;break;case 5:b=2==(HEAPU16[(g|0)>>1]&65535|0)?7:6;break;case 6:b=1==(HEAPU16[(g|0)>>1]&65535|0)?7:8;break;case 7:HEAP32[(e+8|0)>>2]=HEAP32[(g+4|0)>>2];b=15;break;case 8:b=172==(HEAPU16[(g|0)>>1]&65535|0)?9:10;break;case 9:HEAP16[(e+4|0)>>1]=2;b=_EnvAddSymbol(d,STRING_TABLE.__str314051|0);HEAP32[(e+8|0)>>2]=b;b=14;break;case 10:b=173==(HEAPU16[(g|0)>>1]&65535|0)?11:12;break;case 11:HEAP16[(e+4|0)>>1]=3;b=_EnvAddSymbol(d,STRING_TABLE.__str294049|0);HEAP32[(e+8|0)>>2]=b;b=13;break;
case 12:HEAP16[(e+4|0)>>1]=3;b=_EnvAddSymbol(d,HEAP32[(g+8|0)>>2]);HEAP32[(e+8|0)>>2]=b;b=13;break;case 13:b=14;break;case 14:b=15;break;case 15:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_StringToField.X=1;
function _EnvEval(h,f,c){var a=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;b=f;g=c;HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]+1|0;k=HEAP32[_EnvEval_depth>>2];_sprintf(j|0,STRING_TABLE.__str324052|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=k,tempInt));b=0==(_OpenStringSource(e,j|0,b,0)|0)?3:4;break;case 3:HEAP16[(g+
4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]-1|0;d=0;b=14;break;case 4:b=_GetPPBufferStatus(e);_SetPPBufferStatus(e,0);k=_GetParsedBindNames(e);_SetParsedBindNames(e,0);i=_ParseAtomOrExpression(e,j|0,0);_SetPPBufferStatus(e,b);_ClearParsedBindNames(e);_SetParsedBindNames(e,k);b=0==(i|0)?5:6;break;case 5:_SetEvaluationError(e,1);_CloseStringSource(e,j|0);HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+196|0)>>2]+4|0)>>2];HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]-1|0;d=0;b=14;break;case 6:b=34==(HEAPU16[(i|0)>>1]&65535|0)?8:7;break;case 7:b=36==(HEAPU16[(i|0)>>1]&65535|0)?8:9;break;case 8:_PrintErrorID(e,STRING_TABLE.__str334053|0,1,0);_EnvPrintRouter(e,STRING_TABLE.__str344054|0,STRING_TABLE.__str354055|0);_SetEvaluationError(e,1);_CloseStringSource(e,j|0);HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_ReturnExpression(e,i);
HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]-1|0;d=0;b=14;break;case 9:b=0!=(_ExpressionContainsVariables(i,0)|0)?10:11;break;case 10:_PrintErrorID(e,STRING_TABLE.__str364056|0,2,0);_EnvPrintRouter(e,STRING_TABLE.__str344054|0,STRING_TABLE.__str374057|0);_SetEvaluationError(e,1);_CloseStringSource(e,j|0);HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];_ReturnExpression(e,i);HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]-1|0;d=0;b=14;break;
case 11:_ExpressionInstall(e,i);_EvaluateExpression(e,i,g);_ExpressionDeinstall(e,i);HEAP32[_EnvEval_depth>>2]=HEAP32[_EnvEval_depth>>2]-1|0;_ReturnExpression(e,i);_CloseStringSource(e,j|0);b=0!=(_GetEvaluationError(e)|0)?12:13;break;case 12:d=0;b=14;break;case 13:d=1;b=14;break;case 14:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvEval.X=1;
function _EnvBuild(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;d=h;e=f;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+72|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:b=0;a=15;break;case 4:a=0==(_OpenStringSource(d,STRING_TABLE.__str244044|0,e,0)|0)?5:6;break;case 5:b=0;a=15;break;case 6:_GetToken(d,STRING_TABLE.__str244044|0,i);a=170!=(HEAPU16[(i|0)>>1]&65535|0)?7:8;break;case 7:_CloseStringSource(d,
STRING_TABLE.__str244044|0);b=0;a=15;break;case 8:_GetToken(d,STRING_TABLE.__str244044|0,i);a=2!=(HEAPU16[(i|0)>>1]&65535|0)?9:10;break;case 9:_CloseStringSource(d,STRING_TABLE.__str244044|0);b=0;a=15;break;case 10:g=HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2];g=_ParseConstruct(d,g,STRING_TABLE.__str244044|0);_CloseStringSource(d,STRING_TABLE.__str244044|0);a=1==(g|0)?11:12;break;case 11:_EnvPrintRouter(d,STRING_TABLE.__str344054|0,STRING_TABLE.__str384058|0);a=d;var j=_GetPPBuffer(d);_PrintInChunks(a,STRING_TABLE.__str344054|
0,j);_EnvPrintRouter(d,STRING_TABLE.__str344054|0,STRING_TABLE.__str394059|0);a=12;break;case 12:_DestroyPPBuffer(d);a=0==(g|0)?13:14;break;case 13:b=1;a=15;break;case 14:b=0;a=15;break;case 15:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_EnvBuild.X=1;function _InitializeStringRouter(h){_AllocateEnvironmentData(h,48,4,1588);_EnvAddRouter(h,STRING_TABLE.__str4067|0,0,1590,1592,1594,1596,0)}
function _DeallocateStringRouterData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+192|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+20|0)>>2];var b=c,d=HEAP32[(a|0)>>2],e=_strlen(HEAP32[(a|0)>>2])+1|0;_rm(b,d,e);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateStringRouterData.X=1;
function _FindString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+192|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:a=1;c=8;break;case 6:d=HEAP32[(d+20|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _PrintString(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;e=_FindStringRouter(d,e);a=0==(e|0)?3:4;break;case 3:_SystemError(d,STRING_TABLE.__str14068|0,3);_EnvExitRouter(d,1);a=4;break;case 4:a=1!=(HEAP32[(e+16|0)>>2]|0)?5:6;break;case 5:b=1;a=9;break;case 6:a=(HEAP32[(e+8|0)>>2]|0)>=(HEAP32[(e+12|0)>>2]-1|0)?7:8;break;case 7:b=1;a=9;break;case 8:_strncpy(HEAP32[(e+4|0)>>2]+HEAP32[(e+8|0)>>2]|0,g,(HEAP32[(e+12|0)>>2]-HEAP32[(e+8|0)>>2]|0)-1|0);b=_strlen(g);a=e+8|0;HEAP32[a>>
2]=HEAP32[a>>2]+b|0;b=1;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}_PrintString.X=1;
function _GetcString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=_FindStringRouter(b,f);c=0==(d|0)?3:4;break;case 3:_SystemError(b,STRING_TABLE.__str14068|0,1);_EnvExitRouter(b,1);c=4;break;case 4:c=0!=(HEAP32[(d+16|0)>>2]|0)?5:6;break;case 5:a=-1;c=9;break;case 6:c=(HEAP32[(d+8|0)>>2]|0)>=(HEAP32[(d+12|0)>>2]|0)?7:8;break;case 7:c=d+8|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;a=-1;c=9;break;case 8:c=HEAPU8[HEAP32[(d+4|0)>>2]+HEAP32[(d+8|0)>>2]|0]&255;a=d+8|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=c;c=9;
break;case 9:return a;default:assert(0,"bad label: "+c)}}_GetcString.X=1;
function _UngetcString(h,f,c){for(f=2;;)switch(f){case 2:var a,b,d;b=h;d=_FindStringRouter(b,c);f=0==(d|0)?3:4;break;case 3:_SystemError(b,STRING_TABLE.__str14068|0,2);_EnvExitRouter(b,1);f=4;break;case 4:f=0!=(HEAP32[(d+16|0)>>2]|0)?5:6;break;case 5:a=0;f=9;break;case 6:f=0<(HEAP32[(d+8|0)>>2]|0)?7:8;break;case 7:f=d+8|0;HEAP32[f>>2]=HEAP32[f>>2]-1|0;f=8;break;case 8:a=1;f=9;break;case 9:return a;default:assert(0,"bad label: "+f)}}
function _OpenStringSource(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;d=h;e=f;g=c;i=a;b=0==(g|0)?3:4;break;case 3:j=i=0;b=5;break;case 4:j=_strlen(g);b=5;break;case 5:return _CreateReadStringSource(d,e,g,i,j);default:assert(0,"bad label: "+b)}}
function _CreateReadStringSource(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;d=0!=(_FindStringRouter(g,i)|0)?3:4;break;case 3:e=0;d=8;break;case 4:d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?5:6;break;case 5:var m=_genalloc(g,24);d=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|
0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];d=7;break;case 7:d=m;e=g;var n=_strlen(i)+1|0;e=_gm1(e,n);HEAP32[(d|0)>>2]=e;_strcpy(HEAP32[(d|0)>>2],i);HEAP32[(d+4|0)>>2]=j;HEAP32[(d+8|0)>>2]=k;HEAP32[(d+16|0)>>2]=0;HEAP32[(d+12|0)>>2]=l;HEAP32[(d+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+192|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+192|0)>>2]|0)>>2]=d;e=1;d=8;break;case 8:return e;
default:assert(0,"bad label: "+d)}}_CreateReadStringSource.X=1;function _OpenTextSource(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;d=0==(i|0)?3:4;break;case 3:k=j=0;d=4;break;case 4:return _CreateReadStringSource(e,g,i,j,k);default:assert(0,"bad label: "+d)}}
function _CloseStringSource(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;g=0;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+192|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(e|0)?4:9;break;case 4:c=0==(_strcmp(HEAP32[(e|0)>>2],d)|0)?5:8;break;case 5:c=0==(g|0)?6:7;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+192|0)>>2]|0)>>2]=HEAP32[(e+20|0)>>2];c=b;a=HEAP32[(e|0)>>2];var i=_strlen(HEAP32[(e|0)>>2])+1|0;_rm(c,a,i);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=10;break;case 7:HEAP32[(g+20|0)>>2]=HEAP32[(e+20|0)>>2];c=b;a=HEAP32[(e|0)>>2];i=_strlen(HEAP32[(e|0)>>2])+1|0;_rm(c,a,i);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=1;c=10;break;case 8:g=e;e=HEAP32[(e+20|0)>>2];c=3;break;case 9:a=0;c=10;break;case 10:return a;default:assert(0,"bad label: "+c)}}_CloseStringSource.X=1;
function _OpenStringDestination(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j;e=h;g=f;i=c;j=a;b=0!=(_FindStringRouter(e,g)|0)?3:4;break;case 3:d=0;b=8;break;case 4:b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?5:6;break;case 5:var k=_genalloc(e,24);b=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+
20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];b=7;break;case 7:b=k;d=e;var l=_strlen(g)+1|0;d=_gm1(d,l);HEAP32[(b|0)>>2]=d;_strcpy(HEAP32[(b|0)>>2],g);HEAP32[(b+4|0)>>2]=i;HEAP32[(b+8|0)>>2]=0;HEAP32[(b+16|0)>>2]=1;HEAP32[(b+12|0)>>2]=j;HEAP32[(b+20|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+192|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+192|0)>>2]|0)>>2]=b;d=1;b=8;break;case 8:return d;
default:assert(0,"bad label: "+b)}}_OpenStringDestination.X=1;function _FindStringRouter(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+192|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=0==(_strcmp(HEAP32[(d|0)>>2],b)|0)?5:6;break;case 5:a=d;c=8;break;case 6:d=HEAP32[(d+20|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}function _CloseStringDestination(h,f){return _CloseStringSource(h,f)}
function _WriteNeededAtomicValues(h,f){_WriteNeededSymbols(h,f);_WriteNeededFloats(h,f);_WriteNeededIntegers(h,f);_WriteNeededBitMaps(h,f)}
function _WriteNeededSymbols(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j=c+4;b=h;d=f;HEAP32[i>>2]=0;HEAP32[j>>2]=0;e=_GetSymbolTable(b);b=0;a=3;break;case 3:a=63559>b>>>0?4:12;break;case 4:g=HEAP32[(e+(b<<2)|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?7:8;break;case 7:HEAP32[i>>2]=HEAP32[i>>2]+1|0;a=_strlen(HEAP32[(g+16|0)>>2])+
1|0;HEAP32[j>>2]=HEAP32[j>>2]+a|0;a=8;break;case 8:a=9;break;case 9:g=HEAP32[(g|0)>>2];a=5;break;case 10:a=11;break;case 11:b=b+1|0;a=3;break;case 12:_GenWrite(i,4,d);_GenWrite(j,4,d);b=0;a=13;break;case 13:a=63559>b>>>0?14:22;break;case 14:g=HEAP32[(e+(b<<2)|0)>>2];a=15;break;case 15:a=0!=(g|0)?16:20;break;case 16:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?17:18;break;case 17:a=_strlen(HEAP32[(g+16|0)>>2])+1|0;_GenWrite(HEAP32[(g+16|0)>>2],a,d);a=18;break;case 18:a=19;break;case 19:g=HEAP32[(g|0)>>2];a=
15;break;case 20:a=21;break;case 21:b=b+1|0;a=13;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteNeededSymbols.X=1;
function _WriteNeededFloats(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;a=h;b=f;HEAP32[i>>2]=0;e=_GetFloatTable(a);d=0;a=3;break;case 3:a=8191>(d|0)?4:12;break;case 4:g=HEAP32[(e+(d<<2)|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?7:8;break;case 7:HEAP32[i>>2]=HEAP32[i>>2]+1|0;a=8;break;case 8:a=9;break;case 9:g=HEAP32[(g|0)>>2];
a=5;break;case 10:a=11;break;case 11:d=d+1|0;a=3;break;case 12:_GenWrite(i,4,b);d=0;a=13;break;case 13:a=8191>(d|0)?14:22;break;case 14:g=HEAP32[(e+(d<<2)|0)>>2];a=15;break;case 15:a=0!=(g|0)?16:20;break;case 16:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?17:18;break;case 17:_GenWrite(g+16|0,8,b);a=18;break;case 18:a=19;break;case 19:g=HEAP32[(g|0)>>2];a=15;break;case 20:a=21;break;case 21:d=d+1|0;a=13;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteNeededFloats.X=1;
function _WriteNeededIntegers(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c;a=h;b=f;HEAP32[i>>2]=0;e=_GetIntegerTable(a);d=0;a=3;break;case 3:a=8191>(d|0)?4:12;break;case 4:g=HEAP32[(e+(d<<2)|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?7:8;break;case 7:HEAP32[i>>2]=HEAP32[i>>2]+1|0;a=8;break;case 8:a=9;break;case 9:g=HEAP32[(g|0)>>
2];a=5;break;case 10:a=11;break;case 11:d=d+1|0;a=3;break;case 12:_GenWrite(i,4,b);d=0;a=13;break;case 13:a=8191>(d|0)?14:22;break;case 14:g=HEAP32[(e+(d<<2)|0)>>2];a=15;break;case 15:a=0!=(g|0)?16:20;break;case 16:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?17:18;break;case 17:_GenWrite(g+16|0,4,b);a=18;break;case 18:a=19;break;case 19:g=HEAP32[(g|0)>>2];a=15;break;case 20:a=21;break;case 21:d=d+1|0;a=13;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteNeededIntegers.X=1;
function _WriteNeededBitMaps(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j=c+4,k=c+8;a=h;b=f;HEAP32[i>>2]=0;HEAP32[j>>2]=0;e=_GetBitMapTable(a);d=0;a=3;break;case 3:a=8191>(d|0)?4:12;break;case 4:g=HEAP32[(e+(d<<2)|0)>>2];a=5;break;case 5:a=0!=(g|0)?6:10;break;case 6:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?7:8;break;case 7:HEAP32[i>>2]=HEAP32[i>>2]+1|0;HEAP32[j>>2]=HEAP32[j>>
2]+((HEAPU16[(g+20|0)>>1]&65535)+1|0)|0;a=8;break;case 8:a=9;break;case 9:g=HEAP32[(g|0)>>2];a=5;break;case 10:a=11;break;case 11:d=d+1|0;a=3;break;case 12:_GenWrite(i,4,b);_GenWrite(j,4,b);d=0;a=13;break;case 13:a=8191>(d|0)?14:22;break;case 14:g=HEAP32[(e+(d<<2)|0)>>2];a=15;break;case 15:a=0!=(g|0)?16:20;break;case 16:a=0!=(HEAPU32[(g+12|0)>>2]>>>2&1|0)?17:18;break;case 17:HEAP8[k]=HEAP16[(g+20|0)>>1]&255;_GenWrite(k,1,b);_GenWrite(HEAP32[(g+16|0)>>2],HEAPU16[(g+20|0)>>1]&65535,b);a=18;break;case 18:a=
19;break;case 19:g=HEAP32[(g|0)>>2];a=15;break;case 20:a=21;break;case 21:d=d+1|0;a=13;break;case 22:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_WriteNeededBitMaps.X=1;
function _InitAtomicValueNeededFlags(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l;c=h;d=_GetSymbolTable(c);a=0;f=3;break;case 3:f=63559>a>>>0?4:9;break;case 4:b=HEAP32[(d+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:7;break;case 6:f=b+12|0;HEAP32[f>>2]&=-5;b=HEAP32[(b|0)>>2];f=5;break;case 7:f=8;break;case 8:a=a+1|0;f=3;break;case 9:g=_GetFloatTable(c);a=0;f=10;break;case 10:f=8191>a>>>0?11:16;break;case 11:e=HEAP32[(g+(a<<2)|0)>>2];f=12;break;case 12:f=0!=(e|0)?13:14;break;case 13:f=
e+12|0;HEAP32[f>>2]&=-5;e=HEAP32[(e|0)>>2];f=12;break;case 14:f=15;break;case 15:a=a+1|0;f=10;break;case 16:j=_GetIntegerTable(c);a=0;f=17;break;case 17:f=8191>a>>>0?18:23;break;case 18:i=HEAP32[(j+(a<<2)|0)>>2];f=19;break;case 19:f=0!=(i|0)?20:21;break;case 20:f=i+12|0;HEAP32[f>>2]&=-5;i=HEAP32[(i|0)>>2];f=19;break;case 21:f=22;break;case 22:a=a+1|0;f=17;break;case 23:l=_GetBitMapTable(c);a=0;f=24;break;case 24:f=8191>a>>>0?25:30;break;case 25:k=HEAP32[(l+(a<<2)|0)>>2];f=26;break;case 26:f=0!=(k|
0)?27:28;break;case 27:f=k+12|0;HEAP32[f>>2]&=-5;k=HEAP32[(k|0)>>2];f=26;break;case 28:f=29;break;case 29:a=a+1|0;f=24;break;case 30:return;default:assert(0,"bad label: "+f)}}_InitAtomicValueNeededFlags.X=1;function _ReadNeededAtomicValues(h){_ReadNeededSymbols(h);_ReadNeededFloats(h);_ReadNeededIntegers(h);_ReadNeededBitMaps(h)}
function _ReadNeededSymbols(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;a=h;_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+52|0,4);_GenReadBinary(a,e,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+52|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+68|0)>>2]=0;c=9;break;case 4:b=_gm3(a,HEAP32[e>>2]);_GenReadBinary(a,b,HEAP32[e>>2]);
d=_gm3(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+52|0)>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+68|0)>>2]=d;d=b;g=0;c=5;break;case 5:c=(g|0)<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+52|0)>>2]|0)?6:8;break;case 6:c=_EnvAddSymbol(a,d);HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+68|0)>>2]+(g<<2)|0)>>2]=c;c=_strlen(d)+1|0;d=d+c|0;c=7;break;case 7:g=g+1|0;c=5;break;case 8:_rm3(a,b,HEAP32[e>>2]);c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
_ReadNeededSymbols.X=1;
function _ReadNeededFloats(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_GenReadBinary(c,HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0,4);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]=0;f=9;break;case 4:a=_gm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]<<3|0);_GenReadBinary(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]<<3|0);b=_gm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|
0)>>2]+56|0)>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]=b;b=0;f=5;break;case 5:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]|0)?6:8;break;case 6:f=c;var d=a+(b<<3)|0,d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);f=_EnvAddDouble(f,d);HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]+(b<<2)|0)>>2]=f;f=7;break;case 7:b=b+1|0;f=5;break;case 8:_rm3(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]<<
3|0);f=9;break;case 9:return;default:assert(0,"bad label: "+f)}}_ReadNeededFloats.X=1;
function _ReadNeededIntegers(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;_GenReadBinary(c,HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0,4);f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]=0;f=9;break;case 4:a=_gm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]<<2|0);_GenReadBinary(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]<<2|0);b=_gm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+
196|0)>>2]+60|0)>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]=b;b=0;f=5;break;case 5:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]|0)?6:8;break;case 6:f=_EnvAddLong(c,HEAP32[(a+(b<<2)|0)>>2]);HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]+(b<<2)|0)>>2]=f;f=7;break;case 7:b=b+1|0;f=5;break;case 8:_rm3(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]<<2|0);f=9;break;case 9:return;default:assert(0,"bad label: "+f)}}
_ReadNeededIntegers.X=1;
function _ReadNeededBitMaps(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f,g;a=h;_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+64|0,4);_GenReadBinary(a,e,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+64|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+80|0)>>2]=0;c=9;break;case 4:b=_gm3(a,HEAP32[e>>2]);_GenReadBinary(a,b,HEAP32[e>>2]);
d=_gm3(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+64|0)>>2]<<2|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+80|0)>>2]=d;d=b;g=0;c=5;break;case 5:c=(g|0)<(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+64|0)>>2]|0)?6:8;break;case 6:c=_AddBitMap(a,d+1|0,HEAP8[d]<<24>>24);HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+80|0)>>2]+(g<<2)|0)>>2]=c;d=d+((HEAP8[d]<<24>>24)+1|0)|0;c=7;break;case 7:g=g+1|0;c=5;break;case 8:_rm3(a,b,HEAP32[e>>2]);c=9;break;case 9:STACKTOP=f;return;default:assert(0,
"bad label: "+c)}}_ReadNeededBitMaps.X=1;
function _FreeAtomicValueStorage(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+68|0)>>2]|0)?3:4;break;case 3:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+68|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+52|0)>>2]<<2|0);f=4;break;case 4:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]|0)?5:6;break;case 5:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|
0)>>2]<<2|0);f=6;break;case 6:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]|0)?7:8;break;case 7:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]<<2|0);f=8;break;case 8:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+80|0)>>2]|0)?9:10;break;case 9:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+80|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+64|0)>>2]<<2|0);f=10;break;case 10:HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+196|0)>>2]+68|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+80|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+52|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+64|0)>>2]=0;return;default:assert(0,"bad label: "+f)}}
_FreeAtomicValueStorage.X=1;function _AtomicValuesToCode(h,f){var c;_SetAtomicValueIndices(h,1);_HashTablesToCode(h,f);c=_SymbolHashNodesToCode(h,f,5);c=_FloatHashNodesToCode(h,f,c);c=_IntegerHashNodesToCode(h,f,c);c=_BitMapHashNodesToCode(h,f,c);_BitMapValuesToCode(h,f,c)}
function _HashTablesToCode(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m;d=h;e=f;j=_GetSymbolTable(d);i=a=_NewCFile(d,e,1,1,0);a=0==(a|0)?3:4;break;case 3:b=0;a=41;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str54094|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str64095|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=63559,tempInt));g=0;a=5;break;case 5:a=63559>g>>>0?6:10;break;case 6:_PrintSymbolReference(d,i,HEAP32[(j+(g<<2)|0)>>2]);a=63559!=(g+1|0)?7:8;break;case 7:_fprintf(i,STRING_TABLE.__str74096|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=
STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=8;break;case 8:a=9;break;case 9:g=g+1|0;a=5;break;case 10:_fprintf(i,STRING_TABLE.__str84097|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);k=_GetFloatTable(d);i=a=_NewCFile(d,e,1,2,0);a=0==(a|0)?11:12;break;case 11:b=0;a=41;break;case 12:g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|
0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str94098|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str104099|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=8191,tempInt));g=0;a=13;break;case 13:a=8191>g>>>0?14:21;
break;case 14:a=0==(HEAP32[(k+(g<<2)|0)>>2]|0)?15:16;break;case 15:_fprintf(i,STRING_TABLE.__str4089|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=17;break;case 16:_PrintFloatReference(d,i,HEAP32[(k+(g<<2)|0)>>2]);a=17;break;case 17:a=8191!=(g+1|0)?18:19;break;case 18:_fprintf(i,STRING_TABLE.__str74096|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=19;break;case 19:a=20;break;case 20:g=g+1|0;a=13;break;case 21:_fprintf(i,STRING_TABLE.__str84097|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);l=_GetIntegerTable(d);i=a=_NewCFile(d,e,1,3,0);a=0==(a|0)?22:23;break;case 22:b=0;a=41;break;case 23:g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str114100|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str124101|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=8191,tempInt));g=0;a=24;break;case 24:a=8191>g>>>0?25:32;break;case 25:a=0==(HEAP32[(l+(g<<2)|0)>>2]|0)?
26:27;break;case 26:_fprintf(i,STRING_TABLE.__str4089|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=28;break;case 27:_PrintIntegerReference(d,i,HEAP32[(l+(g<<2)|0)>>2]);a=28;break;case 28:a=8191!=(g+1|0)?29:30;break;case 29:_fprintf(i,STRING_TABLE.__str74096|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
a=30;break;case 30:a=31;break;case 31:g=g+1|0;a=24;break;case 32:_fprintf(i,STRING_TABLE.__str84097|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);m=_GetBitMapTable(d);i=a=_NewCFile(d,e,1,4,0);a=0==(a|0)?33:34;break;case 33:b=0;a=41;break;case 34:g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str134102|
0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,tempInt));g=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];_fprintf(i,STRING_TABLE.__str144103|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=8191,tempInt));g=0;a=35;break;case 35:a=8191>g>>>0?36:40;break;case 36:_PrintBitMapReference(d,i,HEAP32[(m+(g<<2)|0)>>2]);a=8191!=(g+1|0)?37:38;break;case 37:_fprintf(i,
STRING_TABLE.__str74096|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));a=38;break;case 38:a=39;break;case 39:g=g+1|0;a=35;break;case 40:_fprintf(i,STRING_TABLE.__str84097|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(d,i);b=1;a=41;break;case 41:return STACKTOP=c,b;default:assert(0,"bad label: "+
a)}}_HashTablesToCode.X=1;
function _SymbolHashNodesToCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r;e=h;g=f;i=c;q=p=1;o=_GetSymbolTable(e);j=m=n=0;b=3;break;case 3:b=63559>j>>>0?4:10;break;case 4:l=HEAP32[(o+(j<<2)|0)>>2];b=5;break;case 5:b=0!=(l|0)?6:8;break;case 6:n=n+1|0;b=7;break;case 7:l=HEAP32[(l|0)>>2];b=5;break;case 8:b=9;break;case 9:j=j+1|0;b=3;break;case 10:b=0==(n|0)?11:12;break;case 11:d=
i;b=43;break;case 12:j=1;b=13;break;case 13:b=j>>>0<=(((n|0)/(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0)>>>0?14:16;break;case 14:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str354124|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));b=15;break;case 15:j=j+1|0;b=13;break;case 16:r=b=
_NewCFile(e,g,1,i,0);b=0==(b|0)?17:18;break;case 17:d=-1;b=43;break;case 18:j=k=0;b=19;break;case 19:b=63559>j>>>0?20:42;break;case 20:l=HEAP32[(o+(j<<2)|0)>>2];b=21;break;case 21:b=0!=(l|0)?22:40;break;case 22:b=0!=(p|0)?23:24;break;case 23:p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];b=q;_fprintf(r,STRING_TABLE.__str364125|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=b,tempInt));p=0;b=24;break;case 24:b=
0==(HEAP32[(l|0)>>2]|0)?25:26;break;case 25:_fprintf(r,STRING_TABLE.__str174106|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=30;break;case 26:b=(k+1|0)>>>0>=HEAPU32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]>>>0?27:28;break;case 27:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];s=q+1|0;_fprintf(r,STRING_TABLE.__str374126|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=0,tempInt));b=29;break;case 28:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=q,t=k+1|0;_fprintf(r,STRING_TABLE.__str384127|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=t,tempInt));b=29;break;case 29:b=30;break;case 30:b=HEAP32[(l+4|0)>>2]+1|0;s=j;_fprintf(r,STRING_TABLE.__str394128|
0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));_PrintCString(r,HEAP32[(l+16|0)>>2]);m=m+1|0;k=k+1|0;b=(m|0)==(n|0)?32:31;break;case 31:b=k>>>0>=HEAPU32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]>>>0?32:37;break;case 32:_fprintf(r,STRING_TABLE.__str214110|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
_GenClose(e,r);k=0;q=q+1|0;i=i+1|0;b=(m|0)<(n|0)?33:36;break;case 33:r=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?34:35;break;case 34:d=0;b=43;break;case 35:p=1;b=36;break;case 36:b=38;break;case 37:_fprintf(r,STRING_TABLE.__str224111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=38;break;case 38:b=39;break;case 39:l=HEAP32[(l|0)>>2];b=21;break;case 40:b=41;break;case 41:j=j+1|0;b=19;break;case 42:d=i;b=43;
break;case 43:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_SymbolHashNodesToCode.X=1;
function _FloatHashNodesToCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r;e=h;g=f;i=c;r=p=1;o=_GetFloatTable(e);j=m=n=0;b=3;break;case 3:b=8191>(j|0)?4:10;break;case 4:l=HEAP32[(o+(j<<2)|0)>>2];b=5;break;case 5:b=0!=(l|0)?6:8;break;case 6:n=n+1|0;b=7;break;case 7:l=HEAP32[(l|0)>>2];b=5;break;case 8:b=9;break;case 9:j=j+1|0;b=3;break;case 10:b=0==(n|0)?11:12;break;case 11:d=
i;b=43;break;case 12:j=1;b=13;break;case 13:b=(j|0)<=(((n|0)/(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0)?14:16;break;case 14:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str234112|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));b=15;break;case 15:j=j+1|0;b=13;break;case 16:q=b=_NewCFile(e,
g,1,i,0);b=0==(b|0)?17:18;break;case 17:d=-1;b=43;break;case 18:j=k=0;b=19;break;case 19:b=8191>(j|0)?20:42;break;case 20:l=HEAP32[(o+(j<<2)|0)>>2];b=21;break;case 21:b=0!=(l|0)?22:40;break;case 22:b=0!=(p|0)?23:24;break;case 23:p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];b=r;_fprintf(q,STRING_TABLE.__str244113|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=b,tempInt));p=0;b=24;break;case 24:b=0==(HEAP32[(l|
0)>>2]|0)?25:26;break;case 25:_fprintf(q,STRING_TABLE.__str174106|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=30;break;case 26:b=(k+1|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?27:28;break;case 27:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];s=r+1|0;_fprintf(q,STRING_TABLE.__str254114|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=0,tempInt));b=29;break;case 28:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=r,t=k+1|0;_fprintf(q,STRING_TABLE.__str254114|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=t,tempInt));b=29;break;case 29:b=30;break;case 30:b=HEAP32[(l+4|0)>>2]+1|0;s=j;_fprintf(q,STRING_TABLE.__str194108|0,(tempInt=STACKTOP,STACKTOP+=
8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));b=q;s=e;t=l+16|0;t=(tempDoubleI32[0]=HEAP32[t>>2],tempDoubleI32[1]=HEAP32[t+4>>2],tempDoubleF64[0]);s=_FloatToString(s,t);_fprintf(b,STRING_TABLE.__str264115|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=s,tempInt));m=m+1|0;k=k+1|0;b=(m|0)==(n|0)?32:31;break;case 31:b=(k|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|
0)>>2]|0)?32:37;break;case 32:_fprintf(q,STRING_TABLE.__str214110|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(e,q);k=0;i=i+1|0;r=r+1|0;b=(m|0)<(n|0)?33:36;break;case 33:q=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?34:35;break;case 34:d=0;b=43;break;case 35:p=1;b=36;break;case 36:b=38;break;case 37:_fprintf(q,STRING_TABLE.__str224111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=38;break;case 38:b=39;break;case 39:l=HEAP32[(l|0)>>2];b=21;break;case 40:b=41;break;case 41:j=j+1|0;b=19;break;case 42:d=i;b=43;break;case 43:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_FloatHashNodesToCode.X=1;
function _IntegerHashNodesToCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r;e=h;g=f;i=c;r=p=1;o=_GetIntegerTable(e);j=m=n=0;b=3;break;case 3:b=8191>(j|0)?4:10;break;case 4:l=HEAP32[(o+(j<<2)|0)>>2];b=5;break;case 5:b=0!=(l|0)?6:8;break;case 6:n=n+1|0;b=7;break;case 7:l=HEAP32[(l|0)>>2];b=5;break;case 8:b=9;break;case 9:j=j+1|0;b=3;break;case 10:b=0==(n|0)?11:12;break;
case 11:d=i;b=43;break;case 12:j=1;b=13;break;case 13:b=(j|0)<=(((n|0)/(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0)?14:16;break;case 14:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str154104|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));b=15;break;case 15:j=j+1|0;b=13;break;case 16:q=
b=_NewCFile(e,g,1,i,0);b=0==(b|0)?17:18;break;case 17:d=-1;b=43;break;case 18:j=k=0;b=19;break;case 19:b=8191>(j|0)?20:42;break;case 20:l=HEAP32[(o+(j<<2)|0)>>2];b=21;break;case 21:b=0!=(l|0)?22:40;break;case 22:b=0!=(p|0)?23:24;break;case 23:p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];b=r;_fprintf(q,STRING_TABLE.__str164105|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=b,tempInt));p=0;b=24;break;case 24:b=
0==(HEAP32[(l|0)>>2]|0)?25:26;break;case 25:_fprintf(q,STRING_TABLE.__str174106|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=30;break;case 26:b=(k+1|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?27:28;break;case 27:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];s=r+1|0;_fprintf(q,STRING_TABLE.__str184107|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=0,tempInt));b=29;break;case 28:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var s=r,t=k+1|0;_fprintf(q,STRING_TABLE.__str184107|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,HEAP32[tempInt+8>>2]=t,tempInt));b=29;break;case 29:b=30;break;case 30:b=HEAP32[(l+4|0)>>2]+1|0;s=j;_fprintf(q,STRING_TABLE.__str194108|0,(tempInt=
STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=s,tempInt));b=HEAP32[(l+16|0)>>2];_fprintf(q,STRING_TABLE.__str204109|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));m=m+1|0;k=k+1|0;b=(m|0)==(n|0)?32:31;break;case 31:b=(k|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?32:37;break;case 32:_fprintf(q,STRING_TABLE.__str214110|0,(tempInt=STACKTOP,
STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(e,q);k=0;i=i+1|0;r=r+1|0;b=(m|0)<(n|0)?33:36;break;case 33:q=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?34:35;break;case 34:d=0;b=43;break;case 35:p=1;b=36;break;case 36:b=38;break;case 37:_fprintf(q,STRING_TABLE.__str224111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=38;
break;case 38:b=39;break;case 39:l=HEAP32[(l|0)>>2];b=21;break;case 40:b=41;break;case 41:j=j+1|0;b=19;break;case 42:d=i;b=43;break;case 43:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_IntegerHashNodesToCode.X=1;
function _BitMapHashNodesToCode(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s,t;e=h;g=f;i=c;s=q=p=1;t=0;o=_GetBitMapTable(e);j=m=n=0;b=3;break;case 3:b=8191>(j|0)?4:10;break;case 4:l=HEAP32[(o+(j<<2)|0)>>2];b=5;break;case 5:b=0!=(l|0)?6:8;break;case 6:n=n+1|0;b=7;break;case 7:l=HEAP32[(l|0)>>2];b=5;break;case 8:b=9;break;case 9:j=j+1|0;b=3;break;case 10:b=0==(n|0)?11:12;
break;case 11:d=i;b=47;break;case 12:j=1;b=13;break;case 13:b=(j|0)<=(((n|0)/(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0)?14:16;break;case 14:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var u=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str314120|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=u,tempInt));b=15;break;case 15:j=j+1|0;b=13;break;
case 16:r=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?17:18;break;case 17:d=-1;b=47;break;case 18:j=k=0;b=19;break;case 19:b=8191>(j|0)?20:46;break;case 20:l=HEAP32[(o+(j<<2)|0)>>2];b=21;break;case 21:b=0!=(l|0)?22:44;break;case 22:b=0!=(p|0)?23:24;break;case 23:p=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];b=q;_fprintf(r,STRING_TABLE.__str324121|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=b,tempInt));p=0;b=24;
break;case 24:b=0==(HEAP32[(l|0)>>2]|0)?25:26;break;case 25:_fprintf(r,STRING_TABLE.__str174106|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=30;break;case 26:b=(k+1|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?27:28;break;case 27:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];u=q+1|0;_fprintf(r,STRING_TABLE.__str334122|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=u,HEAP32[tempInt+8>>2]=0,tempInt));b=29;break;case 28:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var u=q,v=k+1|0;_fprintf(r,STRING_TABLE.__str334122|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=u,HEAP32[tempInt+8>>2]=v,tempInt));b=29;break;case 29:b=30;break;case 30:b=HEAP32[(l+4|0)>>2]+1|0;var u=j,v=HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+164|0)>>2]|0)>>2],w=s,x=t,y=HEAPU16[(l+20|0)>>1]&65535;_fprintf(r,STRING_TABLE.__str344123|0,(tempInt=STACKTOP,STACKTOP+=24,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=u,HEAP32[tempInt+8>>2]=v,HEAP32[tempInt+12>>2]=w,HEAP32[tempInt+16>>2]=x,HEAP32[tempInt+20>>2]=y,tempInt));t=t+Math.floor(((HEAPU16[(l+20|0)>>1]&65535)>>>0)/4)|0;b=0!=(((HEAPU16[(l+20|0)>>1]&65535)>>>0)%4|0)?31:32;break;case 31:t=t+1|0;b=32;break;case 32:b=(t|0)>=(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?33:34;break;case 33:t=0;s=s+1|0;b=34;break;case 34:m=m+1|0;k=k+1|0;b=(m|0)==(n|0)?36:35;break;case 35:b=(k|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?36:41;break;case 36:_fprintf(r,STRING_TABLE.__str214110|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(e,r);k=0;q=q+1|0;i=i+1|0;b=(m|0)<(n|0)?37:40;break;case 37:r=b=_NewCFile(e,g,1,i,0);b=
0==(b|0)?38:39;break;case 38:d=0;b=47;break;case 39:p=1;b=40;break;case 40:b=42;break;case 41:_fprintf(r,STRING_TABLE.__str224111|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=42;break;case 42:b=43;break;case 43:l=HEAP32[(l|0)>>2];b=21;break;case 44:b=45;break;case 45:j=j+1|0;b=19;break;case 46:d=i;b=47;break;case 47:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}
_BitMapHashNodesToCode.X=1;
function _BitMapValuesToCode(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u=a,v;e=h;g=f;i=c;s=r=1;q=_GetBitMapTable(e);j=o=p=0;b=3;break;case 3:b=8191>(j|0)?4:12;break;case 4:n=HEAP32[(q+(j<<2)|0)>>2];b=5;break;case 5:b=0!=(n|0)?6:10;break;case 6:p=p+Math.floor(((HEAPU16[(n+20|0)>>1]&65535)>>>0)/4)|0;b=0!=(((HEAPU16[(n+20|0)>>1]&65535)>>>0)%4|0)?7:8;break;
case 7:p=p+1|0;b=8;break;case 8:b=9;break;case 9:n=HEAP32[(n|0)>>2];b=5;break;case 10:b=11;break;case 11:j=j+1|0;b=3;break;case 12:b=0==(p|0)?13:14;break;case 13:d=i;b=53;break;case 14:j=1;b=15;break;case 15:b=(j|0)<=(((p|0)/(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0)?16:18;break;case 16:b=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];var w=j;_fprintf(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+4|0)>>2],STRING_TABLE.__str274116|0,(tempInt=STACKTOP,STACKTOP+=8,assert(STACKTOP<
STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=w,tempInt));b=17;break;case 17:j=j+1|0;b=15;break;case 18:t=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?19:20;break;case 19:d=-1;b=53;break;case 20:j=k=0;b=21;break;case 21:b=8191>(j|0)?22:52;break;case 22:n=HEAP32[(q+(j<<2)|0)>>2];b=23;break;case 23:b=0!=(n|0)?24:50;break;case 24:b=0!=(r|0)?25:26;break;case 25:r=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]|0)>>2];b=s;_fprintf(t,STRING_TABLE.__str284117|0,(tempInt=STACKTOP,
STACKTOP+=8,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=r,HEAP32[tempInt+4>>2]=b,tempInt));r=0;b=26;break;case 26:v=Math.floor(((HEAPU16[(n+20|0)>>1]&65535)>>>0)/4);b=0!=(((HEAPU16[(n+20|0)>>1]&65535)>>>0)%4|0)?27:28;break;case 27:v=v+1|0;b=28;break;case 28:l=0;b=29;break;case 29:b=(l|0)<(v|0)?30:40;break;case 30:b=0<(l|0)?31:32;break;case 31:_fprintf(t,STRING_TABLE.__str294118|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,
"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=32;break;case 32:m=HEAP32[u>>2]=0;b=33;break;case 33:if(4>m>>>0)b=34;else{var x=0;b=35}break;case 34:x=((l<<2|0)+m|0)>>>0<(HEAPU16[(n+20|0)>>1]&65535)>>>0;b=35;break;case 35:b=x?36:38;break;case 36:HEAP8[u+m|0]=HEAP8[HEAP32[(n+16|0)>>2]+((l<<2|0)+m|0)|0];b=37;break;case 37:m=m+1|0;b=33;break;case 38:b=HEAP32[u>>2];_fprintf(t,STRING_TABLE.__str304119|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>
2]=b,tempInt));b=39;break;case 39:l=l+1|0;b=29;break;case 40:o=o+v|0;k=k+v|0;b=(o|0)==(p|0)?42:41;break;case 41:b=(k|0)>=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)?42:47;break;case 42:_fprintf(t,STRING_TABLE.__str84097|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_GenClose(e,t);k=0;s=s+1|0;i=i+1|0;b=(o|0)<(p|0)?43:46;break;case 43:t=b=_NewCFile(e,g,1,i,0);b=0==(b|0)?44:45;break;case 44:d=
0;b=53;break;case 45:r=1;b=46;break;case 46:b=48;break;case 47:_fprintf(t,STRING_TABLE.__str74096|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=48;break;case 48:b=49;break;case 49:n=HEAP32[(n|0)>>2];b=23;break;case 50:b=51;break;case 51:j=j+1|0;b=21;break;case 52:d=i;b=53;break;case 53:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_BitMapValuesToCode.X=1;
function _PrintSymbolReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0==(g|0)?3:4;break;case 3:_fprintf(e,STRING_TABLE.__str4089|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];var i=((HEAPU32[(g+12|0)>>
2]>>>3&536870911|0)/(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,j=(HEAPU32[(g+12|0)>>2]>>>3&536870911|0)%(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(e,STRING_TABLE.__str14090|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=j,tempInt));b=5;break;case 5:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_PrintSymbolReference.X=1;
function _PrintFloatReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]|0)>>2],d=((HEAPU32[(c+12|0)>>2]>>>3&536870911|0)/(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,h=(HEAPU32[(c+12|0)>>2]>>>3&536870911|0)%(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(f,STRING_TABLE.__str24091|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=d,HEAP32[tempInt+8>>2]=h,tempInt));STACKTOP=a}_PrintFloatReference.X=1;
function _PrintIntegerReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]|0)>>2],d=((HEAPU32[(c+12|0)>>2]>>>3&536870911|0)/(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,h=(HEAPU32[(c+12|0)>>2]>>>3&536870911|0)%(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(f,STRING_TABLE.__str34092|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+
STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=d,HEAP32[tempInt+8>>2]=h,tempInt));STACKTOP=a}_PrintIntegerReference.X=1;
function _PrintBitMapReference(h,f,c){var a=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g;d=h;e=f;g=c;b=0==(g|0)?3:4;break;case 3:_fprintf(e,STRING_TABLE.__str4089|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));b=5;break;case 4:b=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]|0)>>2];var i=((HEAPU32[(g+12|0)>>
2]>>>3&536870911|0)/(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0)&-1)+1|0,j=(HEAPU32[(g+12|0)>>2]>>>3&536870911|0)%(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+164|0)>>2]+8|0)>>2]|0);_fprintf(e,STRING_TABLE.__str44093|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,HEAP32[tempInt+4>>2]=i,HEAP32[tempInt+8>>2]=j,tempInt));b=5;break;case 5:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_PrintBitMapReference.X=1;
function _PrintCString(h,f){var c=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;_fprintf(b,STRING_TABLE.__str404129|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=_strlen(d);e=0;a=3;break;case 3:a=e>>>0<g>>>0?4:13;break;case 4:a=34==(HEAP8[d+e|0]<<24>>24|0)?6:5;break;case 5:a=92==(HEAP8[d+e|0]<<
24>>24|0)?6:7;break;case 6:_fputc(92,b);_fputc(HEAP8[d+e|0]<<24>>24,b);a=11;break;case 7:a=10==(HEAP8[d+e|0]<<24>>24|0)?8:9;break;case 8:_fputc(92,b);_fputc(110,b);a=10;break;case 9:_fputc(HEAP8[d+e|0]<<24>>24,b);a=10;break;case 10:a=11;break;case 11:a=12;break;case 12:e=e+1|0;a=3;break;case 13:_fprintf(b,STRING_TABLE.__str404129|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=c;return;default:assert(0,
"bad label: "+a)}}_PrintCString.X=1;
function _InitializeAtomTables(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;_AllocateEnvironmentData(c,49,84,1598);f=_gm3(c,254236);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+20|0)>>2]=f;f=_gm2(c,32764);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+24|0)>>2]=f;f=_gm2(c,32764);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2]=f;f=_gm2(c,32764);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+32|0)>>2]=f;a=0;f=3;break;case 3:f=63559>a>>>0?4:6;break;case 4:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|
0)>>2]+196|0)>>2]+20|0)>>2]+(a<<2)|0)>>2]=0;f=5;break;case 5:a=a+1|0;f=3;break;case 6:a=0;f=7;break;case 7:f=8191>a>>>0?8:10;break;case 8:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+24|0)>>2]+(a<<2)|0)>>2]=0;f=9;break;case 9:a=a+1|0;f=7;break;case 10:a=0;f=11;break;case 11:f=8191>a>>>0?12:14;break;case 12:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2]+(a<<2)|0)>>2]=0;f=13;break;case 13:a=a+1|0;f=11;break;case 14:a=0;f=15;break;case 15:f=8191>a>>>0?16:18;break;case 16:HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+196|0)>>2]+32|0)>>2]+(a<<2)|0)>>2]=0;f=17;break;case 17:a=a+1|0;f=15;break;case 18:h=_EnvAddSymbol(c,STRING_TABLE.__str4140|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]|0)>>2]=h;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;h=_EnvAddSymbol(c,STRING_TABLE.__str14141|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+4|0)>>2]=h;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+4|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;h=_EnvAddSymbol(c,STRING_TABLE.__str24142|
0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+8|0)>>2]=h;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+8|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;h=_EnvAddSymbol(c,STRING_TABLE.__str34143|0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+12|0)>>2]=h;h=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+12|0)>>2]+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0;h=_EnvAddLong(c,0);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+16|0)>>2]=h;c=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+16|0)>>2]+4|0;HEAP32[c>>
2]=HEAP32[c>>2]+1|0;return;default:assert(0,"bad label: "+f)}}_InitializeAtomTables.X=1;
function _DeallocateSymbolData(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l,m;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+20|0)>>2]|0)?6:3;break;case 3:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+24|0)>>2]|0)?6:4;break;case 4:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2]|0)?6:5;break;case 5:f=0==(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+32|0)>>2]|0)?6:7;break;case 6:f=63;break;case 7:a=0;f=8;break;case 8:f=63559>(a|0)?9:16;break;case 9:b=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+20|0)>>2]+(a<<2)|0)>>2];f=10;break;case 10:f=0!=(b|0)?11:14;break;case 11:d=HEAP32[(b|0)>>2];f=0!=(HEAP32[(b+12|0)>>2]&1|0)?13:12;break;case 12:f=c;var n=HEAP32[(b+16|0)>>2],o=_strlen(HEAP32[(b+16|0)>>2])+1|0;_rm(f,n,o);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=13;break;case 13:b=d;f=10;break;case 14:f=15;break;case 15:a=a+1|0;f=8;break;case 16:a=0;f=17;break;case 17:f=8191>(a|0)?18:25;break;case 18:i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+24|0)>>2]+(a<<2)|0)>>2];f=19;break;case 19:f=0!=(i|0)?20:23;break;case 20:j=HEAP32[(i|0)>>2];f=0!=(HEAP32[(i+12|0)>>2]&1|0)?22:21;break;case 21:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;
HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=22;break;case 22:i=j;f=19;break;case 23:f=24;break;case 24:a=a+1|0;f=17;break;case 25:a=0;f=26;break;case 26:f=8191>(a|0)?27:34;break;case 27:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2]+(a<<2)|0)>>
2];f=28;break;case 28:f=0!=(e|0)?29:32;break;case 29:g=HEAP32[(e|0)>>2];f=0!=(HEAP32[(e+12|0)>>2]&1|0)?31:30;break;case 30:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=e;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=31;break;case 31:e=g;f=28;break;case 32:f=
33;break;case 33:a=a+1|0;f=26;break;case 34:a=0;f=35;break;case 35:f=8191>(a|0)?36:43;break;case 36:k=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+32|0)>>2]+(a<<2)|0)>>2];f=37;break;case 37:f=0!=(k|0)?38:41;break;case 38:l=HEAP32[(k|0)>>2];f=0!=(HEAP32[(k+12|0)>>2]&1|0)?40:39;break;case 39:_rm(c,HEAP32[(k+16|0)>>2],HEAPU16[(k+20|0)>>1]&65535);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=40;break;case 40:k=l;f=37;break;case 41:f=42;break;case 42:a=a+1|0;f=35;break;case 43:m=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+36|0)>>2];f=44;break;case 44:f=0!=(m|0)?45:46;break;case 45:f=HEAP32[(m+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>
2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];m=f;f=44;break;case 46:m=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+40|0)>>2];f=47;break;case 47:f=0!=(m|0)?48:49;break;case 48:f=HEAP32[(m+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>
2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];m=f;f=47;break;case 49:m=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+44|0)>>2];f=50;break;case 50:f=0!=(m|0)?51:52;break;case 51:f=HEAP32[(m+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=
HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];m=f;f=50;break;case 52:m=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+48|0)>>2];f=53;break;case 53:f=0!=(m|0)?54:55;break;case 54:f=HEAP32[(m+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=m;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];m=f;f=53;break;case 55:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+20|0)>>2],254236);_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+24|0)>>2],32764);_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2],32764);_genfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+32|0)>>2],32764);f=0!=(HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+196|0)>>2]+68|0)>>2]|0)?56:57;break;case 56:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+68|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+52|0)>>2]<<2|0);f=57;break;case 57:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2]|0)?58:59;break;case 58:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+72|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+56|0)>>2]<<2|0);f=59;break;case 59:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2]|0)?60:
61;break;case 60:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+76|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+60|0)>>2]<<2|0);f=61;break;case 61:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+80|0)>>2]|0)?62:63;break;case 62:_rm3(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+80|0)>>2],HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+64|0)>>2]<<2|0);f=63;break;case 63:return;default:assert(0,"bad label: "+f)}}_DeallocateSymbolData.X=1;
function _HashSymbol(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;d=e=0;c=3;break;case 3:c=0!=HEAP8[a+d|0]<<24>>24?4:6;break;case 4:e=(127*e|0)+(HEAP8[a+d|0]<<24>>24)|0;c=5;break;case 5:d=d+1|0;c=3;break;case 6:return(e>>>0)%(b>>>0);default:assert(0,"bad label: "+c)}}
function _EnvAddSymbol(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;g=0;c=0==(d|0)?3:4;break;case 3:_SystemError(b,STRING_TABLE.__str44144|0,1);_EnvExitRouter(b,1);c=4;break;case 4:e=_HashSymbol(d,63559);i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+20|0)>>2]+(e<<2)|0)>>2];c=5;break;case 5:c=0!=(i|0)?6:9;break;case 6:c=0==(_strcmp(d,HEAP32[(i+16|0)>>2])|0)?7:8;break;case 7:a=i;c=16;break;case 8:g=i;i=HEAP32[(i|0)>>2];c=5;break;case 9:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?10:11;break;case 10:var j=_genalloc(b,20);c=12;break;case 11:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=12;break;case 12:i=j;c=0==(g|0)?13:14;break;case 13:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+196|0)>>2]+20|0)>>2]+(e<<2)|0)>>2]=i;c=15;break;case 14:HEAP32[(g|0)>>2]=i;c=15;break;case 15:c=_strlen(d)+1|0;c=_gm2(b,c);HEAP32[(i+16|0)>>2]=c;HEAP32[(i|0)>>2]=0;c=i+12|0;HEAP32[c>>2]=HEAP32[c>>2]&7|(e&536870911)<<3;HEAP32[(i+4|0)>>2]=0;c=i+12|0;HEAP32[c>>2]&=-2;_strcpy(HEAP32[(i+16|0)>>2],d);_AddEphemeralHashNode(b,i,HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+36|0,20,10);HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=i;c=16;break;case 16:return a;default:assert(0,
"bad label: "+c)}}_EnvAddSymbol.X=1;
function _EnvAddLong(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;g=0;e=_HashInteger(d,8191);i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+28|0)>>2]+(e<<2)|0)>>2];c=3;break;case 3:c=0!=(i|0)?4:7;break;case 4:c=(d|0)==(HEAP32[(i+16|0)>>2]|0)?5:6;break;case 5:a=i;c=14;break;case 6:g=i;i=HEAP32[(i|0)>>2];c=3;break;case 7:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?8:9;break;case 8:var j=_genalloc(b,20);c=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:i=j;c=0==(g|0)?11:12;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+28|0)>>2]+(e<<2)|0)>>2]=i;c=13;break;case 12:HEAP32[(g|0)>>2]=i;c=13;break;case 13:HEAP32[(i+
16|0)>>2]=d;HEAP32[(i|0)>>2]=0;c=i+12|0;HEAP32[c>>2]=HEAP32[c>>2]&7|(e&536870911)<<3;HEAP32[(i+4|0)>>2]=0;c=i+12|0;HEAP32[c>>2]&=-2;_AddEphemeralHashNode(b,i,HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+44|0,20,0);HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=i;c=14;break;case 14:return a;default:assert(0,"bad label: "+c)}}_EnvAddLong.X=1;
function _AddEphemeralHashNode(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;d=0!=(HEAP32[(g+4|0)>>2]|0)?3:4;break;case 3:_SystemError(e,STRING_TABLE.__str44144|0,10);_EnvExitRouter(e,1);d=4;break;case 4:d=g+12|0;HEAP32[d>>2]=HEAP32[d>>2]&-3|2;d=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:var l=_genalloc(e,8);d=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=7;break;case 7:h=l;HEAP32[(h|0)>>2]=g;HEAP32[(h+4|0)>>2]=HEAP32[i>>2];HEAP32[i>>2]=h;g=HEAP32[(HEAP32[(e+16|0)>>2]+220|0)>>2]+16|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;e=HEAP32[(HEAP32[(e+16|0)>>2]+220|0)>>2]+20|0;HEAP32[e>>2]=HEAP32[e>>2]+((j+8|0)+k|0)|0;return;
default:assert(0,"bad label: "+d)}}_AddEphemeralHashNode.X=1;function _FindSymbolHN(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=_HashSymbol(b,63559);d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+20|0)>>2]+(d<<2)|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(b,HEAP32[(d+16|0)>>2])|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _EnvAddDouble(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;g=0;e=_HashFloat(d,8191);i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+24|0)>>2]+(e<<2)|0)>>2];c=3;break;case 3:c=0!=(i|0)?4:7;break;case 4:c=d;var j=i+16|0,j=(tempDoubleI32[0]=HEAP32[j>>2],tempDoubleI32[1]=HEAP32[j+4>>2],tempDoubleF64[0]);c=c==j?5:6;break;case 5:a=i;c=14;break;case 6:g=i;i=HEAP32[(i|0)>>2];c=3;break;case 7:c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|
0)?8:9;break;case 8:var k=_genalloc(b,24);c=10;break;case 9:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:i=k;c=0==(g|0)?11:12;break;case 11:HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>
2]+24|0)>>2]+(e<<2)|0)>>2]=i;c=13;break;case 12:HEAP32[(g|0)>>2]=i;c=13;break;case 13:a=i+16|0;tempDoubleF64[0]=d;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];HEAP32[(i|0)>>2]=0;a=i+12|0;HEAP32[a>>2]=HEAP32[a>>2]&7|(e&536870911)<<3;HEAP32[(i+4|0)>>2]=0;a=i+12|0;HEAP32[a>>2]&=-2;_AddEphemeralHashNode(b,i,HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+40|0,24,0);HEAP32[(i+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=i;c=14;break;case 14:return a;default:assert(0,"bad label: "+
c)}}_EnvAddDouble.X=1;
function _HashFloat(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:a=c;var b,d,e,g;tempDoubleF64[0]=h;HEAP32[a>>2]=tempDoubleI32[0];HEAP32[a+4>>2]=tempDoubleI32[1];b=f;d=0;e=a;g=0;a=3;break;case 3:a=8>g>>>0?4:6;break;case 4:d=(127*d|0)+(HEAP8[e+g|0]<<24>>24)|0;a=5;break;case 5:g=g+1|0;a=3;break;case 6:return b=(d>>>0)%(b>>>0),STACKTOP=c,b;default:assert(0,"bad label: "+a)}}
function _HashBitMap(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n=a,o;d=h;e=f;g=c;m=0;o=n;l=Math.floor((g>>>0)/4);j=k=0;b=3;break;case 3:b=k>>>0<l>>>0?4:10;break;case 4:i=0;b=5;break;case 5:b=4>i>>>0?6:8;break;case 6:HEAP8[o+i|0]=HEAP8[d+j|0];b=7;break;case 7:i=i+1|0;j=j+1|0;b=5;break;case 8:m=m+HEAP32[n>>2]|0;b=9;break;case 9:k=k+1|0;b=3;break;case 10:b=11;break;case 11:b=
j>>>0<g>>>0?12:14;break;case 12:m=m+(HEAP8[d+j|0]<<24>>24)|0;b=13;break;case 13:j=j+1|0;b=11;break;case 14:return h=(m>>>0)%(e>>>0),STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_HashBitMap.X=1;function _HashInteger(h,f){return(_labs(h)>>>0)%(f>>>0)}
function _FindLongHN(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=_HashInteger(b,8191);d=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+196|0)>>2]+28|0)>>2]+(d<<2)|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=(HEAP32[(d+16|0)>>2]|0)==(b|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _AddBitMap(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;k=0;a=0==(e|0)?3:4;break;case 3:_SystemError(d,STRING_TABLE.__str44144|0,2);_EnvExitRouter(d,1);a=4;break;case 4:i=_HashBitMap(e,8191,g);l=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+32|0)>>2]+(i<<2)|0)>>2];a=5;break;case 5:a=0!=(l|0)?6:17;break;case 6:a=(HEAPU16[(l+20|0)>>1]&65535|0)==(g|0)?7:16;break;case 7:j=0;a=8;break;case 8:a=j>>>0<g>>>0?9:13;break;case 9:a=(HEAP8[HEAP32[(l+16|0)>>2]+j|0]<<
24>>24|0)!=(HEAP8[e+j|0]<<24>>24|0)?10:11;break;case 10:a=13;break;case 11:a=12;break;case 12:j=j+1|0;a=8;break;case 13:a=(j|0)==(g|0)?14:15;break;case 14:b=l;a=28;break;case 15:a=16;break;case 16:k=l;l=HEAP32[(l|0)>>2];a=5;break;case 17:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]|0)?18:19;break;case 18:var m=_genalloc(d,24);a=20;break;case 19:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>
2]+96|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=20;break;case 20:l=m;a=0==(k|0)?21:22;break;case 21:HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+32|0)>>2]+(i<<2)|0)>>2]=l;a=23;break;case 22:HEAP32[(k|0)>>2]=l;a=23;break;case 23:j=_gm2(d,g);HEAP32[(l+16|0)>>2]=j;HEAP32[(l|0)>>2]=0;j=l+12|0;HEAP32[j>>2]=HEAP32[j>>2]&7|
(i&536870911)<<3;HEAP32[(l+4|0)>>2]=0;j=l+12|0;HEAP32[j>>2]&=-2;HEAP16[(l+20|0)>>1]=g&65535;j=0;a=24;break;case 24:a=j>>>0<g>>>0?25:27;break;case 25:HEAP8[HEAP32[(l+16|0)>>2]+j|0]=HEAP8[e+j|0];a=26;break;case 26:j=j+1|0;a=24;break;case 27:_AddEphemeralHashNode(d,l,HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+48|0,24,4);HEAP32[(l+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]+12|0)>>2];b=l;a=28;break;case 28:return b;default:assert(0,"bad label: "+a)}}_AddBitMap.X=1;
function _DecrementSymbolCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0>(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:_SystemError(a,STRING_TABLE.__str44144|0,3);_EnvExitRouter(a,1);c=4;break;case 4:c=0==(HEAP32[(b+4|0)>>2]|0)?5:6;break;case 5:_SystemError(a,STRING_TABLE.__str44144|0,4);_EnvExitRouter(a,1);c=6;break;case 6:c=b+4|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(HEAP32[(b+4|0)>>2]|0)?7:8;break;case 7:c=11;break;case 8:c=0==(HEAPU32[(b+12|0)>>2]>>>1&1|0)?9:10;break;case 9:_AddEphemeralHashNode(a,
b,HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+36|0,20,10);c=10;break;case 10:c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_DecrementSymbolCount.X=1;
function _DecrementFloatCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0>=(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:_SystemError(a,STRING_TABLE.__str44144|0,5);_EnvExitRouter(a,1);c=4;break;case 4:c=b+4|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(HEAP32[(b+4|0)>>2]|0)?5:6;break;case 5:c=9;break;case 6:c=0==(HEAPU32[(b+12|0)>>2]>>>1&1|0)?7:8;break;case 7:_AddEphemeralHashNode(a,b,HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+40|0,24,0);c=8;break;case 8:c=9;break;case 9:return;default:assert(0,"bad label: "+
c)}}
function _DecrementIntegerCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0>=(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:_SystemError(a,STRING_TABLE.__str44144|0,6);_EnvExitRouter(a,1);c=4;break;case 4:c=b+4|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(HEAP32[(b+4|0)>>2]|0)?5:6;break;case 5:c=9;break;case 6:c=0==(HEAPU32[(b+12|0)>>2]>>>1&1|0)?7:8;break;case 7:_AddEphemeralHashNode(a,b,HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+44|0,20,0);c=8;break;case 8:c=9;break;case 9:return;default:assert(0,"bad label: "+
c)}}
function _DecrementBitMapCount(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0>(HEAP32[(b+4|0)>>2]|0)?3:4;break;case 3:_SystemError(a,STRING_TABLE.__str44144|0,7);_EnvExitRouter(a,1);c=4;break;case 4:c=0==(HEAP32[(b+4|0)>>2]|0)?5:6;break;case 5:_SystemError(a,STRING_TABLE.__str44144|0,8);_EnvExitRouter(a,1);c=6;break;case 6:c=b+4|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(HEAP32[(b+4|0)>>2]|0)?7:8;break;case 7:c=11;break;case 8:c=0==(HEAPU32[(b+12|0)>>2]>>>1&1|0)?9:10;break;case 9:_AddEphemeralHashNode(a,b,
HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+48|0,24,4);c=10;break;case 10:c=11;break;case 11:return;default:assert(0,"bad label: "+c)}}_DecrementBitMapCount.X=1;
function _RemoveEphemeralAtoms(h){_RemoveEphemeralHashNodes(h,HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+36|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+20|0)>>2],20,2,10);_RemoveEphemeralHashNodes(h,HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+40|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+24|0)>>2],24,0,0);_RemoveEphemeralHashNodes(h,HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+44|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+28|0)>>2],20,1,0);_RemoveEphemeralHashNodes(h,HEAP32[(HEAP32[(h+16|0)>>2]+
196|0)>>2]+48|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+32|0)>>2],24,39,4)}_RemoveEphemeralAtoms.X=1;function _GetSymbolTable(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+20|0)>>2]}function _SetSymbolTable(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+20|0)>>2]=f}function _GetFloatTable(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+24|0)>>2]}function _SetFloatTable(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+24|0)>>2]=f}
function _GetIntegerTable(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+28|0)>>2]}function _SetIntegerTable(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+28|0)>>2]=f}function _GetBitMapTable(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+32|0)>>2]}function _SetBitMapTable(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+32|0)>>2]=f}
function _ReturnSymbolMatches(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=3;break;
case 5:return;default:assert(0,"bad label: "+c)}}_ReturnSymbolMatches.X=1;function _ClearBitString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;a=f;b=c;d=0;c=3;break;case 3:c=d>>>0<a>>>0?4:6;break;case 4:HEAP8[b+d|0]=0;c=5;break;case 5:d=d+1|0;c=3;break;case 6:return;default:assert(0,"bad label: "+c)}}
function _RemoveEphemeralHashNodes(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;g=h;i=f;j=c;k=a;l=b;m=d;o=0;n=HEAP32[i>>2];e=3;break;case 3:e=0!=(n|0)?4:18;break;case 4:p=HEAP32[(n+4|0)>>2];e=0==(HEAP32[(HEAP32[(n|0)>>2]+4|0)>>2]|0)?5:10;break;case 5:e=(HEAP32[(HEAP32[(n|0)>>2]+8|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?6:10;break;case 6:_RemoveHashNode(g,HEAP32[(n|0)>>2],j,k,l);HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=n;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=0==(o|0)?7:8;break;case 7:HEAP32[i>>2]=p;e=9;break;case 8:HEAP32[(o+4|0)>>2]=p;e=9;break;case 9:e=HEAP32[(HEAP32[(g+16|0)>>2]+220|0)>>2]+16|0;HEAP32[e>>2]=HEAP32[e>>2]-1|0;e=HEAP32[(HEAP32[(g+16|0)>>2]+220|0)>>2]+20|0;HEAP32[e>>2]=HEAP32[e>>2]-((k+8|0)+m|
0)|0;e=17;break;case 10:e=0<(HEAP32[(HEAP32[(n|0)>>2]+4|0)>>2]|0)?11:15;break;case 11:e=HEAP32[(n|0)>>2]+12|0;HEAP32[e>>2]&=-3;HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]=n;HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+236|0)>>2]+16|0)>>2];e=0==(o|0)?12:13;break;case 12:HEAP32[i>>
2]=p;e=14;break;case 13:HEAP32[(o+4|0)>>2]=p;e=14;break;case 14:e=HEAP32[(HEAP32[(g+16|0)>>2]+220|0)>>2]+16|0;HEAP32[e>>2]=HEAP32[e>>2]-1|0;e=HEAP32[(HEAP32[(g+16|0)>>2]+220|0)>>2]+20|0;HEAP32[e>>2]=HEAP32[e>>2]-((k+8|0)+m|0)|0;e=16;break;case 15:o=n;e=16;break;case 16:e=17;break;case 17:n=p;e=3;break;case 18:return;default:assert(0,"bad label: "+e)}}_RemoveEphemeralHashNodes.X=1;
function _RefreshSpecialSymbols(h){var f=_FindSymbolHN(h,STRING_TABLE.__str4140|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]|0)>>2]=f;f=_FindSymbolHN(h,STRING_TABLE.__str14141|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+4|0)>>2]=f;f=_FindSymbolHN(h,STRING_TABLE.__str24142|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+8|0)>>2]=f;f=_FindSymbolHN(h,STRING_TABLE.__str34143|0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+196|0)>>2]+12|0)>>2]=f;f=_FindLongHN(h,0);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>
2]+196|0)>>2]+16|0)>>2]=f}_RefreshSpecialSymbols.X=1;
function _FindSymbolMatches(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;d=h;e=f;g=c;i=a;k=j=0;l=_strlen(e);HEAP32[g>>2]=0;b=3;break;case 3:k=b=_GetNextSymbolMatch(d,e,l,k,0,i);b=0!=(b|0)?4:8;break;case 4:HEAP32[g>>2]=HEAP32[g>>2]+1|0;b=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]|0)?5:6;break;case 5:var m=_genalloc(d,8);b=7;break;case 6:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+
20|0)>>2]+32|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+32|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=7;break;case 7:b=m;HEAP32[(b|0)>>2]=k;HEAP32[(b+4|0)>>2]=j;j=b;b=3;break;case 8:return j;default:assert(0,"bad label: "+b)}}_FindSymbolMatches.X=1;
function _GetNextSymbolMatch(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r;i=h;j=f;k=c;l=a;m=b;n=d;q=1;e=0!=(m|0)?3:5;break;case 3:e=0!=(n|0)?4:5;break;case 4:HEAP32[n>>2]=0;e=5;break;case 5:e=0==(l|0)?6:7;break;case 6:o=0;p=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+20|0)>>2]|0)>>2];e=8;break;case 7:o=HEAPU32[(l+12|0)>>2]>>>3&536870911;p=HEAP32[(l|0)>>2];e=8;break;case 8:e=9;break;case 9:e=0!=(q|0)?10:38;break;case 10:e=11;break;case 11:e=0!=(p|0)?12:34;break;
case 12:e=40==(HEAP8[HEAP32[(p+16|0)>>2]|0]<<24>>24|0)?14:13;break;case 13:e=0!=(HEAPU32[(p+12|0)>>2]>>>1&1|0)?14:15;break;case 14:e=33;break;case 15:e=0!=(m|0)?29:16;break;case 16:e=0!=(l|0)?17:18;break;case 17:r=_CommonPrefixLength(HEAP32[(l+16|0)>>2],HEAP32[(p+16|0)>>2]);e=19;break;case 18:r=_CommonPrefixLength(j,HEAP32[(p+16|0)>>2]);e=19;break;case 19:e=r>>>0>=k>>>0?20:28;break;case 20:e=0!=(n|0)?21:27;break;case 21:e=0==(l|0)?22:23;break;case 22:e=_strlen(HEAP32[(p+16|0)>>2]);HEAP32[n>>2]=e;
e=26;break;case 23:e=r>>>0<HEAPU32[n>>2]>>>0?24:25;break;case 24:HEAP32[n>>2]=r;e=25;break;case 25:e=26;break;case 26:e=27;break;case 27:g=p;e=39;break;case 28:e=32;break;case 29:e=0!=(_StringWithinString(HEAP32[(p+16|0)>>2],j)|0)?30:31;break;case 30:g=p;e=39;break;case 31:e=32;break;case 32:e=33;break;case 33:p=HEAP32[(p|0)>>2];e=11;break;case 34:o=e=o+1|0;e=63559<=e>>>0?35:36;break;case 35:q=0;e=37;break;case 36:p=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+196|0)>>2]+20|0)>>2]+(o<<2)|0)>>2];e=
37;break;case 37:e=9;break;case 38:g=0;e=39;break;case 39:return g;default:assert(0,"bad label: "+e)}}_GetNextSymbolMatch.X=1;
function _CommonPrefixLength(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;d=0;c=3;break;case 3:if(0!=(HEAP8[a+d|0]<<24>>24|0))c=4;else{var e=0;c=5}break;case 4:e=0!=(HEAP8[b+d|0]<<24>>24|0);c=5;break;case 5:c=e?6:10;break;case 6:c=(HEAP8[a+d|0]<<24>>24|0)!=(HEAP8[b+d|0]<<24>>24|0)?7:8;break;case 7:c=10;break;case 8:c=9;break;case 9:d=d+1|0;c=3;break;case 10:return d;default:assert(0,"bad label: "+c)}}
function _StringWithinString(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=0;c=3;break;case 3:c=0!=(HEAP8[b+e|0]<<24>>24|0)?4:15;break;case 4:g=e;i=0;c=5;break;case 5:if(0!=(HEAP8[d+i|0]<<24>>24|0))c=6;else{var j=0;c=7}break;case 6:j=(HEAP8[b+g|0]<<24>>24|0)==(HEAP8[d+i|0]<<24>>24|0);c=7;break;case 7:c=j?8:10;break;case 8:c=9;break;case 9:g=g+1|0;i=i+1|0;c=5;break;case 10:c=0==(HEAP8[d+i|0]<<24>>24|0)?11:13;break;case 11:c=0!=(i|0)?12:13;break;case 12:a=b+e|0;c=16;break;case 13:c=
14;break;case 14:e=e+1|0;c=3;break;case 15:a=0;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_StringWithinString.X=1;
function _SetAtomicValueIndices(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n,o;a=h;b=f;d=0;i=_GetSymbolTable(a);e=0;c=3;break;case 3:c=63559>e>>>0?4:15;break;case 4:g=HEAP32[(i+(e<<2)|0)>>2];c=5;break;case 5:c=0!=(g|0)?6:13;break;case 6:c=1==(HEAPU32[(g+12|0)>>2]>>>2&1|0)?8:7;break;case 7:c=0!=(b|0)?8:11;break;case 8:c=d;d=c+1|0;var p=g+12|0;HEAP32[p>>2]=HEAP32[p>>2]&7|(c&536870911)<<3;c=(HEAPU32[(g+12|0)>>2]>>>3&536870911|0)!=(d-1|0)?9:10;break;case 9:_SystemError(a,STRING_TABLE.__str44144|
0,667);c=10;break;case 10:c=11;break;case 11:c=12;break;case 12:g=HEAP32[(g|0)>>2];c=5;break;case 13:c=14;break;case 14:e=e+1|0;c=3;break;case 15:d=0;k=_GetFloatTable(a);e=0;c=16;break;case 16:c=8191>e>>>0?17:28;break;case 17:j=HEAP32[(k+(e<<2)|0)>>2];c=18;break;case 18:c=0!=(j|0)?19:26;break;case 19:c=1==(HEAPU32[(j+12|0)>>2]>>>2&1|0)?21:20;break;case 20:c=0!=(b|0)?21:24;break;case 21:c=d;d=c+1|0;p=j+12|0;HEAP32[p>>2]=HEAP32[p>>2]&7|(c&536870911)<<3;c=(HEAPU32[(j+12|0)>>2]>>>3&536870911|0)!=(d-1|
0)?22:23;break;case 22:_SystemError(a,STRING_TABLE.__str44144|0,668);c=23;break;case 23:c=24;break;case 24:c=25;break;case 25:j=HEAP32[(j|0)>>2];c=18;break;case 26:c=27;break;case 27:e=e+1|0;c=16;break;case 28:d=0;m=_GetIntegerTable(a);e=0;c=29;break;case 29:c=8191>e>>>0?30:41;break;case 30:l=HEAP32[(m+(e<<2)|0)>>2];c=31;break;case 31:c=0!=(l|0)?32:39;break;case 32:c=1==(HEAPU32[(l+12|0)>>2]>>>2&1|0)?34:33;break;case 33:c=0!=(b|0)?34:37;break;case 34:c=d;d=c+1|0;p=l+12|0;HEAP32[p>>2]=HEAP32[p>>2]&
7|(c&536870911)<<3;c=(HEAPU32[(l+12|0)>>2]>>>3&536870911|0)!=(d-1|0)?35:36;break;case 35:_SystemError(a,STRING_TABLE.__str44144|0,669);c=36;break;case 36:c=37;break;case 37:c=38;break;case 38:l=HEAP32[(l|0)>>2];c=31;break;case 39:c=40;break;case 40:e=e+1|0;c=29;break;case 41:d=0;o=_GetBitMapTable(a);e=0;c=42;break;case 42:c=8191>e>>>0?43:54;break;case 43:n=HEAP32[(o+(e<<2)|0)>>2];c=44;break;case 44:c=0!=(n|0)?45:52;break;case 45:c=1==(HEAPU32[(n+12|0)>>2]>>>2&1|0)?47:46;break;case 46:c=0!=(b|0)?47:
50;break;case 47:c=d;d=c+1|0;p=n+12|0;HEAP32[p>>2]=HEAP32[p>>2]&7|(c&536870911)<<3;c=(HEAPU32[(n+12|0)>>2]>>>3&536870911|0)!=(d-1|0)?48:49;break;case 48:_SystemError(a,STRING_TABLE.__str44144|0,670);c=49;break;case 49:c=50;break;case 50:c=51;break;case 51:n=HEAP32[(n|0)>>2];c=44;break;case 52:c=53;break;case 53:e=e+1|0;c=42;break;case 54:return;default:assert(0,"bad label: "+c)}}_SetAtomicValueIndices.X=1;
function _RestoreAtomicValueBuckets(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l;c=h;d=_GetSymbolTable(c);a=0;f=3;break;case 3:f=63559>a>>>0?4:10;break;case 4:b=HEAP32[(d+(a<<2)|0)>>2];f=5;break;case 5:f=0!=(b|0)?6:8;break;case 6:f=b+12|0;HEAP32[f>>2]=HEAP32[f>>2]&7|(a&536870911)<<3;f=7;break;case 7:b=HEAP32[(b|0)>>2];f=5;break;case 8:f=9;break;case 9:a=a+1|0;f=3;break;case 10:g=_GetFloatTable(c);a=0;f=11;break;case 11:f=8191>a>>>0?12:18;break;case 12:e=HEAP32[(g+(a<<2)|0)>>2];f=13;
break;case 13:f=0!=(e|0)?14:16;break;case 14:f=e+12|0;HEAP32[f>>2]=HEAP32[f>>2]&7|(a&536870911)<<3;f=15;break;case 15:e=HEAP32[(e|0)>>2];f=13;break;case 16:f=17;break;case 17:a=a+1|0;f=11;break;case 18:j=_GetIntegerTable(c);a=0;f=19;break;case 19:f=8191>a>>>0?20:26;break;case 20:i=HEAP32[(j+(a<<2)|0)>>2];f=21;break;case 21:f=0!=(i|0)?22:24;break;case 22:f=i+12|0;HEAP32[f>>2]=HEAP32[f>>2]&7|(a&536870911)<<3;f=23;break;case 23:i=HEAP32[(i|0)>>2];f=21;break;case 24:f=25;break;case 25:a=a+1|0;f=19;break;
case 26:l=_GetBitMapTable(c);a=0;f=27;break;case 27:f=8191>a>>>0?28:34;break;case 28:k=HEAP32[(l+(a<<2)|0)>>2];f=29;break;case 29:f=0!=(k|0)?30:32;break;case 30:f=k+12|0;HEAP32[f>>2]=HEAP32[f>>2]&7|(a&536870911)<<3;f=31;break;case 31:k=HEAP32[(k|0)>>2];f=29;break;case 32:f=33;break;case 33:a=a+1|0;f=27;break;case 34:return;default:assert(0,"bad label: "+f)}}_RestoreAtomicValueBuckets.X=1;
function _RemoveHashNode(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;k=b;l=0;m=HEAP32[(i+((HEAPU32[(g+12|0)>>2]>>>3&536870911)<<2)|0)>>2];d=3;break;case 3:d=(m|0)!=(g|0)?4:7;break;case 4:l=m;m=HEAP32[(m|0)>>2];d=0==(m|0)?5:6;break;case 5:_SystemError(e,STRING_TABLE.__str44144|0,9);_EnvExitRouter(e,1);d=6;break;case 6:d=3;break;case 7:d=0==(l|0)?8:9;break;case 8:HEAP32[(i+((HEAPU32[(g+12|0)>>2]>>>3&536870911)<<2)|0)>>2]=HEAP32[(g|0)>>2];d=10;break;case 9:HEAP32[(l|
0)>>2]=HEAP32[(m|0)>>2];d=10;break;case 10:d=2==(k|0)?11:12;break;case 11:d=e;var n=HEAP32[(g+16|0)>>2],o=_strlen(HEAP32[(g+16|0)>>2])+1|0;_rm(d,n,o);d=15;break;case 12:d=39==(k|0)?13:14;break;case 13:_rm(e,HEAP32[(g+16|0)>>2],HEAPU16[(g+20|0)>>1]&65535);d=14;break;case 14:d=15;break;case 15:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=g;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+(j<<2)|0)>>2];
HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+(j<<2)|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];return;default:assert(0,"bad label: "+d)}}_RemoveHashNode.X=1;function _InitializeEnvironment(){var h;for(h=2;;)switch(h){case 2:h=0==(_GetCurrentEnvironment()|0)?3:4;break;case 3:_CreateEnvironment();h=4;break;case 4:return;default:assert(0,"bad label: "+h)}}function _InitializeNonportableFeatures(){}
function _EnvInitializeEnvironment(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k;e=h;g=f;i=c;j=a;k=b;d=0!=(HEAP32[e>>2]&1|0)?3:4;break;case 3:d=5;break;case 4:_InitializeMemory(e);_InitializeCommandLineData(e);_InitializeConstructCompilerData(e);_InitializeConstructData(e);_InitializeEvaluationData(e);_InitializeExternalFunctionData(e);_InitializeMultifieldData(e);_InitializePrettyPrintData(e);_InitializePrintUtilityData(e);_InitializeScannerData(e);_InitializeSystemDependentData(e);_InitializeUserDataData(e);
_InitializeUtilityData(e);_InitializeWatchData(e);_InitializeAtomTables(e,g,i,j,k);_InitializeDefaultRouters(e);_InitializeNonportableFeatures(e);_SystemFunctionDefinitions(e);_UserFunctions();_EnvUserFunctions(e);_InitializeConstraints(e);_InitExpressionData(e);_InitializeConstructs(e);_AllocateDefmoduleGlobals(e);_InitializeDefrules(e);_InitializeDeffacts(e);_SetupGenericFunctions(e);_SetupDeffunctions(e);_InitializeDefglobals(e);_InitializeDeftemplates(e);_SetupObjectSystem(e);_InitializeDefmodules(e);
_InstallProcedurePrimitives(e);_InitializeKeywords(e);_EnvClear(e);d=e;HEAP32[d>>2]=HEAP32[d>>2]&-2|1;d=5;break;case 5:return;default:assert(0,"bad label: "+d)}}_EnvInitializeEnvironment.X=1;function _InitializeSystemDependentData(h){_AllocateEnvironmentData(h,58,24,0)}
function _SystemFunctionDefinitions(h){_ProceduralFunctionDefinitions(h);_MiscFunctionDefinitions(h);_IOFunctionDefinitions(h);_PredicateFunctionDefinitions(h);_BasicMathFunctionDefinitions(h);_FileCommandDefinitions(h);_SortFunctionDefinitions(h);_WatchFunctionDefinitions(h);_MultifieldFunctionDefinitions(h);_StringFunctionDefinitions(h);_ExtendedMathFunctionDefinitions(h);_HelpFunctionDefinitions(h);_ConstructsToCCommandDefinition(h);_ConstructProfilingFunctionDefinitions(h);_ParseFunctionDefinitions(h)}
function _SetRedrawFunction(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]|0)>>2]=f}function _SetPauseEnvFunction(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+4|0)>>2]=f}function _SetContinueEnvFunction(h,f){HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+8|0)>>2]=f}function _GetRedrawFunction(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]|0)>>2]}function _GetPauseEnvFunction(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+4|0)>>2]}
function _GetContinueEnvFunction(h){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+8|0)>>2]}
function _InitializeKeywords(h){var f;f=_EnvAddSymbol(h,STRING_TABLE.__str124194|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str134195|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str144196|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str154197|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str164198|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str174199|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str184200|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str194201|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str204202|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str214203|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str224204|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str234205|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str244206|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str254207|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str264208|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str274209|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str284210|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str294211|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str304212|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str314213|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str324214|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str334215|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str344216|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str354217|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str364218|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str374219|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str384220|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str394221|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str404222|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str414223|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str424224|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str434225|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str444226|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str454227|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str464228|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str474229|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str484230|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str494231|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str504232|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str514233|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str524234|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str534235|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str544236|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str554237|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str564238|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str574239|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str584240|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str594241|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str604242|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str324214|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str614243|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str624244|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str634245|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str644246|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str654247|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str664248|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str674249|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str684250|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str694251|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str704252|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str714253|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str724254|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str734255|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str744256|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str754257|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str764258|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str774259|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str784260|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str794261|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str804262|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str814263|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str824264|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str834265|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str844266|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str854267|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str864268|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str874269|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str884270|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str894271|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str904272|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str914273|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str924274|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str934275|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str944276|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str954277|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str964278|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str974279|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str984280|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str994281|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str1004282|
0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str1014283|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str1024284|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str1034285|0);f=f+4|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=_EnvAddSymbol(h,STRING_TABLE.__str1044286|0);h=f+4|0;HEAP32[h>>2]=HEAP32[h>>2]+1|0}_InitializeKeywords.X=1;
function _gengetcwd(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(c|0)?3:4;break;case 3:HEAP8[c|0]=0;f=4;break;case 4:return c;default:assert(0,"bad label: "+f)}}function _EnvSetBeforeOpenFunction(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+16|0)>>2]=f;return c}
function _EnvSetAfterOpenFunction(h,f){var c;c=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+20|0)>>2];HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+20|0)>>2]=f;return c}
function _RerouteStdin(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;e=c;i=0;a=3>(d|0)?3:4;break;case 3:a=31;break;case 4:a=0==(e|0)?5:6;break;case 5:a=31;break;case 6:g=1;a=7;break;case 7:a=(g|0)<(d|0)?8:31;break;case 8:a=0==(_strcmp(HEAP32[(e+(g<<2)|0)>>2],STRING_TABLE.__str4181|0)|0)?9:10;break;case 9:i=1;a=19;break;case 10:a=0==(_strcmp(HEAP32[(e+(g<<2)|0)>>2],STRING_TABLE.__str14182|0)|0)?11:12;break;case 11:i=2;a=18;break;case 12:a=0==(_strcmp(HEAP32[(e+(g<<2)|0)>>2],STRING_TABLE.__str24184|
0)|0)?13:14;break;case 13:i=3;a=17;break;case 14:a=0==(i|0)?15:16;break;case 15:_PrintErrorID(b,STRING_TABLE.__str34185|0,2,0);_EnvPrintRouter(b,STRING_TABLE.__str44186|0,STRING_TABLE.__str54187|0);a=16;break;case 16:a=17;break;case 17:a=18;break;case 18:a=19;break;case 19:a=(g|0)>(d-1|0)?20:25;break;case 20:_PrintErrorID(b,STRING_TABLE.__str34185|0,1,0);_EnvPrintRouter(b,STRING_TABLE.__str44186|0,STRING_TABLE.__str64188|0);a=i;a=1==(a|0)?21:2==(a|0)?22:3==(a|0)?23:24;break;case 21:_EnvPrintRouter(b,
STRING_TABLE.__str44186|0,STRING_TABLE.__str4181|0);a=24;break;case 22:_EnvPrintRouter(b,STRING_TABLE.__str44186|0,STRING_TABLE.__str14182|0);a=24;break;case 23:_EnvPrintRouter(b,STRING_TABLE.__str44186|0,STRING_TABLE.__str24184|0);a=24;break;case 24:_EnvPrintRouter(b,STRING_TABLE.__str44186|0,STRING_TABLE.__str74189|0);a=31;break;case 25:a=i;a=1==(a|0)?26:2==(a|0)?27:3==(a|0)?28:29;break;case 26:a=b;var j=g+1|0;g=j;_OpenBatch(a,HEAP32[(e+(j<<2)|0)>>2],1);a=29;break;case 27:a=b;g=j=g+1|0;_EnvBatchStar(a,
HEAP32[(e+(j<<2)|0)>>2]);a=29;break;case 28:a=b;g=j=g+1|0;_EnvLoad(a,HEAP32[(e+(j<<2)|0)>>2]);a=29;break;case 29:a=30;break;case 30:g=g+1|0;a=7;break;case 31:return;default:assert(0,"bad label: "+a)}}_RerouteStdin.X=1;function _gentime(){return(_clock()>>>0)/1E3}
function _gensystem(h){var f=STACKTOP;STACKTOP+=32;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+4,g,i,j=f+8;a=h;b=0;HEAP32[d>>2]=0;HEAP32[e>>2]=0;g=c=_EnvArgCountCheck(a,STRING_TABLE.__str84190|0,1,1);c=-1==(c|0)?3:4;break;case 3:c=14;break;case 4:i=1;c=5;break;case 5:c=(i|0)<=(g|0)?6:11;break;case 6:_EnvRtnUnknown(a,i,j);c=3!=(HEAPU16[(j+4|0)>>1]&65535|0)?7:9;break;case 7:c=2!=(HEAPU16[(j+4|0)>>1]&65535|
0)?8:9;break;case 8:_SetHaltExecution(a,1);_SetEvaluationError(a,1);_ExpectedTypeError2(a,STRING_TABLE.__str84190|0,i);c=14;break;case 9:c=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];b=_AppendToString(a,c,b,d,e);c=10;break;case 10:i=i+1|0;c=5;break;case 11:c=0==(b|0)?12:13;break;case 12:c=14;break;case 13:_EnvPrintRouter(a,STRING_TABLE.__str94191|0,STRING_TABLE.__str104192|0);_rm(a,b,HEAP32[e>>2]);c=14;break;case 14:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_gensystem.X=1;
function _genrand(){return _rand()}function _genseed(h){_srand(h)}function _genremove(h){var f;for(f=2;;)switch(f){case 2:var c;f=0!=(_remove(h)|0)?3:4;break;case 3:c=0;f=5;break;case 4:c=1;f=5;break;case 5:return c;default:assert(0,"bad label: "+f)}}function _genrename(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=0!=(_rename(h,f)|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=1;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _GenOpen(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;a=1024<_strlen(e)>>>0?3:4;break;case 3:b=0;a=9;break;case 4:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+16|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+16|0)>>2]](d);a=6;break;case 6:i=_fopen(e,g);a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+20|0)>>2]|0)?7:8;break;case 7:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+20|0)>>2]](d);a=8;break;
case 8:b=i;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}_GenOpen.X=1;
function _GenClose(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+232|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+232|0)>>2]+16|0)>>2]](a);c=4;break;case 4:d=_fclose(b);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+232|0)>>2]+20|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+232|0)>>2]+20|0)>>2]](a);c=6;break;case 6:return d;default:assert(0,"bad label: "+c)}}_GenClose.X=1;
function _GenOpenReadBinary(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+16|0)>>2]](d);a=4;break;case 4:a=_fopen(g,STRING_TABLE.__str114193|0);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+12|0)>>2]=a;a=0==(a|0)?5:8;break;case 5:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+20|0)>>2]|0)?6:7;break;case 6:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+232|0)>>2]+20|0)>>2]](d);a=7;break;case 7:_OpenErrorMessage(d,e,g);b=0;a=11;break;case 8:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+20|0)>>2]|0)?9:10;break;case 9:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+232|0)>>2]+20|0)>>2]](d);a=10;break;case 10:b=1;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_GenOpenReadBinary.X=1;
function _GenReadBinary(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;b=h;d=f;i=a=c;g=Math.floor((a>>>0)/(i>>>0));e=a-(g*i|0)|0;a=3;break;case 3:a=0<g>>>0?4:5;break;case 4:_fread(d,i,1,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+232|0)>>2]+12|0)>>2]);d=d+i|0;g=g-1|0;a=3;break;case 5:_fread(d,e,1,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+232|0)>>2]+12|0)>>2]);return;default:assert(0,"bad label: "+a)}}_GenReadBinary.X=1;
function _GetSeekCurBinary(h,f){_fseek(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+12|0)>>2],f,1)}function _GetSeekSetBinary(h,f){_fseek(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+12|0)>>2],f,0)}function _GenTellBinary(h,f){var c=_ftell(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+232|0)>>2]+12|0)>>2]);HEAP32[f>>2]=c}
function _GenCloseBinary(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+232|0)>>2]+16|0)>>2]|0)?3:4;break;case 3:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+232|0)>>2]+16|0)>>2]](c);f=4;break;case 4:_fclose(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+232|0)>>2]+12|0)>>2]);f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+232|0)>>2]+20|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+232|0)>>2]+20|0)>>2]](c);f=6;break;case 6:return;default:assert(0,
"bad label: "+f)}}_GenCloseBinary.X=1;function _GenWrite(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==(d|0)?3:4;break;case 3:a=5;break;case 4:_fwrite(b,d,1,e);a=5;break;case 5:return;default:assert(0,"bad label: "+a)}}function _genexit(h){_exit(h);throw"Reached an unreachable!";}
function _findstr(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=0;c=3;break;case 3:c=0!=(HEAP8[b+e|0]<<24>>24|0)?4:15;break;case 4:g=e;i=0;c=5;break;case 5:if(0!=(HEAP8[d+i|0]<<24>>24|0))c=6;else{var j=0;c=7}break;case 6:j=(HEAP8[b+g|0]<<24>>24|0)==(HEAP8[d+i|0]<<24>>24|0);c=7;break;case 7:c=j?8:10;break;case 8:c=9;break;case 9:g=g+1|0;i=i+1|0;c=5;break;case 10:c=0==(HEAP8[d+i|0]<<24>>24|0)?11:13;break;case 11:c=0!=(i|0)?12:13;break;case 12:a=e;c=16;break;case 13:c=14;break;case 14:e=
e+1|0;c=3;break;case 15:a=-1;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}_findstr.X=1;
function _TextLookupFetch(h,f){var c=STACKTOP;STACKTOP+=256;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i=c,j,k,l,m,n,o;d=h;e=f;g=_GenOpen(d,e,STRING_TABLE.__str4319|0);a=0==(g|0)?3:4;break;case 3:_PrintErrorID(d,STRING_TABLE.__str14320|0,1,0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str34322|0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,e);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str44323|
0);b=-1;a=32;break;case 4:l=a=_NewFetchFile(d,e);a=0==(a|0)?5:6;break;case 5:_GenClose(d,g);_PrintErrorID(d,STRING_TABLE.__str14320|0,2,0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str54324|0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,e);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str64325|0);b=-1;a=32;break;case 6:j=o=n=0;k=1;a=7;break;case 7:a=0!=(_fgets(i|0,256,g)|0)?8:27;break;case 8:n=n+1|0;a=36!=(HEAP8[i|0]<<24>>24|0)?10:9;break;case 9:a=36!=(HEAP8[i+1|0]<<
24>>24|0)?10:26;break;case 10:a=0<=(_findstr(i|0,STRING_TABLE.__str74326|0)|0)?11:15;break;case 11:a=1==(j|0)?12:13;break;case 12:j=0;k=1;o=o+1|0;a=14;break;case 13:_GenClose(d,g);_TextLookupToss(d,e);_PrintErrorID(d,STRING_TABLE.__str14320|0,8,0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(d,STRING_TABLE.__str24321|0,n);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str94328|0);b=-1;a=32;break;case 14:a=25;break;case 15:a=0<=(_findstr(i|0,
STRING_TABLE.__str104329|0)|0)?16:24;break;case 16:a=1==(k|0)?17:18;break;case 17:k=0;j=1;a=19;break;case 18:_GenClose(d,g);_TextLookupToss(d,e);_PrintErrorID(d,STRING_TABLE.__str14320|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(d,STRING_TABLE.__str24321|0,n);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str114330|0);b=-1;a=32;break;case 19:m=a=_AllocateEntryNode(d,g,e,i|0,n);a=0==(a|0)?20:21;break;case 20:b=-1;a=32;break;case 21:a=
0==(_AttachLeaf(d,l,m,g,e,n)|0)?22:23;break;case 22:b=-1;a=32;break;case 23:a=24;break;case 24:a=25;break;case 25:a=26;break;case 26:a=7;break;case 27:_GenClose(d,g);a=0==(k|0)?28:29;break;case 28:_TextLookupToss(d,e);_PrintErrorID(d,STRING_TABLE.__str14320|0,4,0);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(d,STRING_TABLE.__str24321|0,n);_EnvPrintRouter(d,STRING_TABLE.__str24321|0,STRING_TABLE.__str114330|0);b=-1;a=32;break;case 29:a=0==(o|0)?30:31;break;
case 30:_TextLookupToss(d,e);a=31;break;case 31:b=o;a=32;break;case 32:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_TextLookupFetch.X=1;
function _NewFetchFile(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g;b=h;d=f;e=0;c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2]|0)?3:11;break;case 3:e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2];c=4;break;case 4:c=0!=(HEAP32[(e+88|0)>>2]|0)?5:8;break;case 5:c=0==(_strcmp(e|0,d)|0)?6:7;break;case 6:a=0;c=15;break;case 7:e=HEAP32[(e+88|0)>>2];c=4;break;case 8:c=0==(_strcmp(e|0,d)|0)?9:10;break;case 9:a=0;c=15;break;case 10:c=11;break;case 11:g=_gm2(b,92);_strcpy(g|0,d);HEAP32[(g+
80|0)>>2]=0;HEAP32[(g+84|0)>>2]=0;HEAP32[(g+88|0)>>2]=0;c=0==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2]|0)?12:13;break;case 12:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2]=g;c=14;break;case 13:HEAP32[(e+88|0)>>2]=g;c=14;break;case 14:a=g;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_NewFetchFile.X=1;
function _TextLookupToss(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;d=f;e=g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2];c=0!=(g|0)?3:7;break;case 3:c=0!=(_strcmp(g|0,d)|0)?4:5;break;case 4:i=1;c=6;break;case 5:i=0;c=6;break;case 6:c=8;break;case 7:i=0;c=8;break;case 8:c=9;break;case 9:c=0<(i|0)?10:17;break;case 10:e=g;g=HEAP32[(g+88|0)>>2];c=0!=(g|0)?11:15;break;case 11:c=0!=(_strcmp(g|0,d)|0)?12:13;break;case 12:i=1;c=14;break;case 13:i=0;c=14;break;case 14:c=16;break;case 15:i=
0;c=16;break;case 16:c=9;break;case 17:c=0==(g|0)?18:19;break;case 18:a=0;c=23;break;case 19:_TossFunction(b,HEAP32[(g+80|0)>>2]);c=(e|0)==(g|0)?20:21;break;case 20:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]|0)>>2]=HEAP32[(g+88|0)>>2];c=22;break;case 21:HEAP32[(e+88|0)>>2]=HEAP32[(g+88|0)>>2];c=22;break;case 22:_rm(b,g,92);a=1;c=23;break;case 23:return a;default:assert(0,"bad label: "+c)}}_TextLookupToss.X=1;
function _AllocateEntryNode(h,f,c,a,b){var d=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n=d,o=d+16;i=h;j=f;k=c;e=a;l=b;m=_gm2(i,104);var p=m|0,q=o|0,r=n|0,s=m+8|0;e=4!=(_sscanf(e,STRING_TABLE.__str534372|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=p,HEAP32[tempInt+4>>2]=q,HEAP32[tempInt+8>>2]=r,HEAP32[tempInt+12>>2]=s,
tempInt))|0)?3:4;break;case 3:_rm(i,m,104);_GenClose(i,j);_TextLookupToss(i,k);_PrintErrorID(i,STRING_TABLE.__str14320|0,5,0);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(i,STRING_TABLE.__str24321|0,l);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str544373|0);g=0;e=13;break;case 4:e=77==(HEAP8[o|0]<<24>>24|0)?5:6;break;case 5:HEAP32[(m+4|0)>>2]=-45;e=10;break;case 6:e=73==(HEAP8[o|0]<<24>>24|0)?7:8;break;case 7:HEAP32[(m+4|0)>>2]=-50;e=9;break;
case 8:_rm(i,m,104);_GenClose(i,j);_TextLookupToss(i,k);_PrintErrorID(i,STRING_TABLE.__str14320|0,6,0);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(i,STRING_TABLE.__str24321|0,l);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str554374|0);g=0;e=13;break;case 9:e=10;break;case 10:e=0!=(_strcmp(n|0,STRING_TABLE.__str104329|0)|0)?11:12;break;case 11:_rm(i,m,104);_GenClose(i,j);_TextLookupToss(i,k);_PrintErrorID(i,STRING_TABLE.__str14320|0,5,0);
_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(i,STRING_TABLE.__str24321|0,l);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str544373|0);g=0;e=13;break;case 12:g=_getc(j);_ungetc(g,j);g=_ftell(j);HEAP32[(m+88|0)>>2]=g;HEAP32[(m+96|0)>>2]=0;HEAP32[(m+92|0)>>2]=0;HEAP32[(m+100|0)>>2]=0;_upper(m+8|0);g=m;e=13;break;case 13:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_AllocateEntryNode.X=1;
function _AttachLeaf(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;e=0==(HEAP32[(j+80|0)>>2]|0)?3:4;break;case 3:HEAP32[(j+80|0)>>2]=k;e=32;break;case 4:e=(HEAP32[(k|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)>>2]|0)?5:9;break;case 5:e=-45==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+4|0)>>2]|0)?6:7;break;case 6:HEAP32[(k+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+32|0)>>2]+4|0)>>2]+92|0)>>2]=k;e=8;break;case 7:_rm(i,k,104);_GenClose(i,l);_TextLookupToss(i,m);_PrintErrorID(i,STRING_TABLE.__str14320|0,7,0);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str84327|0);_PrintLongInteger(i,STRING_TABLE.__str24321|0,n);_EnvPrintRouter(i,STRING_TABLE.__str24321|0,STRING_TABLE.__str524371|0);g=0;e=33;break;case 8:e=31;break;case 9:e=(HEAP32[(k|0)>>2]|0)==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)>>2]|0)?10:11;break;case 10:HEAP32[(k+
96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+96|0)>>2];HEAP32[(k+100|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+100|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+100|0)>>2]=k;e=30;break;case 11:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)?12:13;break;case 12:o=1;e=14;break;case 13:o=0;e=14;break;case 14:e=15;break;case 15:e=0<(o|0)?16:23;break;case 16:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+96|0)>>2];e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)?17:21;break;case 17:e=(HEAP32[(k|0)>>2]|0)<(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)>>2]|0)?18:19;break;case 18:o=1;e=20;break;case 19:o=0;e=20;break;case 20:e=22;break;case 21:o=0;e=22;break;case 22:e=15;break;case 23:e=0!=(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]|0)?24:28;break;case 24:e=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+32|0)>>2]+4|0)>>2]|0)>>2]|0)<(HEAP32[(k|0)>>2]|0)?25:26;break;case 25:HEAP32[(k+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2];HEAP32[(k+100|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+92|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+92|0)>>2]=k;e=27;break;case 26:HEAP32[(k+96|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+96|0)>>2];HEAP32[(k+100|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+
32|0)>>2]+4|0)>>2]+100|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]+100|0)>>2]=k;e=27;break;case 27:e=29;break;case 28:HEAP32[(k+96|0)>>2]=0;HEAP32[(k+100|0)>>2]=HEAP32[(j+80|0)>>2];HEAP32[(j+80|0)>>2]=k;e=29;break;case 29:e=30;break;case 30:e=31;break;case 31:e=32;break;case 32:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+32|0)>>2]+4|0)>>2]=k;g=1;e=33;break;case 33:return g;default:assert(0,"bad label: "+e)}}_AttachLeaf.X=1;
function _TossFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:7;break;case 4:c=0!=(HEAP32[(b+92|0)>>2]|0)?5:6;break;case 5:_TossFunction(a,HEAP32[(b+92|0)>>2]);c=6;break;case 6:c=b;b=HEAP32[(b+100|0)>>2];_rm(a,c,104);c=3;break;case 7:return;default:assert(0,"bad label: "+c)}}
function _HelpFunction(h){var f=STACKTOP;STACKTOP+=264;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e,g=f+4,i=f+260;a=h;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+8|0)>>2]|0)?3:9;break;case 3:c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:c=_gm2(a,10);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]=c;_strcpy(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>
2],STRING_TABLE.__str124331|0);c=5;break;case 5:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str144333|0);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str154334|0);c=_TextLookupFetch(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]);HEAP32[b>>2]=c;c=0>=(HEAP32[b>>2]|0)?6:7;break;case 6:c=38;break;case 7:_EnvAddRouter(a,STRING_TABLE.__str164335|0,10,1600,1602,
1604,1606,0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+8|0)>>2]=1;c=8;break;case 8:c=9;break;case 9:_EnvActivateRouter(a,STRING_TABLE.__str164335|0);e=_gm2(a,88);_strcpy(e|0,STRING_TABLE.__str174336|0);c=_GetCommandLineTopics(a);HEAP32[(e+84|0)>>2]=c;HEAP32[(e+80|0)>>2]=0;_EnvPrintRouter(a,STRING_TABLE.__str164335|0,STRING_TABLE.__str184337|0);c=10;break;case 10:d=_FindTopicInEntries(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2],e,i|0,b);c=-10==(HEAP32[b>>2]|0)?11:12;break;case 11:_PrintErrorID(a,
STRING_TABLE.__str14320|0,1,0);_EnvPrintRouter(a,STRING_TABLE.__str24321|0,STRING_TABLE.__str194338|0);c=35;break;case 12:c=-30==(HEAP32[b>>2]|0)?13:14;break;case 13:c=35;break;case 14:c=-25==(HEAP32[b>>2]|0)?15:18;break;case 15:c=0==(d|0)?16:17;break;case 16:_EnvPrintRouter(a,STRING_TABLE.__str164335|0,STRING_TABLE.__str204339|0);_EnvPrintRouter(a,STRING_TABLE.__str164335|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str164335|0,STRING_TABLE.__str214340|
0);c=35;break;case 17:_EnvPrintRouter(a,STRING_TABLE.__str164335|0,STRING_TABLE.__str224341|0);c=18;break;case 18:c=-35!=(HEAP32[b>>2]|0)?19:23;break;case 19:c=20;break;case 20:c=0!=(_grab_string(a,d,g|0,256)|0)?21:22;break;case 21:_EnvPrintRouter(a,STRING_TABLE.__str164335|0,g|0);c=20;break;case 22:c=26;break;case 23:c=0!=(d|0)?24:25;break;case 24:_GenClose(a,d);c=25;break;case 25:c=26;break;case 26:e=_AskForNewHelpTopic(a,e,i|0);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?27:
33;break;case 27:c=28;break;case 28:c=-30!=(HEAP32[b>>2]|0)?29:32;break;case 29:d=c=_GetEntries(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2],i|0,0,b);c=0!=(c|0)?30:31;break;case 30:_GenClose(a,d);c=31;break;case 31:c=28;break;case 32:c=33;break;case 33:c=34;break;case 34:c=-30!=(HEAP32[b>>2]|0)?10:35;break;case 35:_EnvDeactivateRouter(a,STRING_TABLE.__str164335|0);c=36;break;case 36:c=0!=(e|0)?37:38;break;case 37:c=e;e=HEAP32[(e+84|0)>>2];_rm(a,c,88);c=36;break;case 38:STACKTOP=f;return;
default:assert(0,"bad label: "+c)}}_HelpFunction.X=1;function _RecognizeHelpRouters(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=0==(_strcmp(f,STRING_TABLE.__str164335|0)|0)?3:4;break;case 3:a=1;c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}function _HelpPrint(h,f,c){_EnvPrintRouter(h,STRING_TABLE.__str314350|0,c);return 1}function _HelpGetc(h){return _EnvGetcRouter(h,STRING_TABLE.__str514370|0)}
function _HelpUngetc(h,f){return _EnvUngetcRouter(h,f,STRING_TABLE.__str514370|0)}
function _GetCommandLineTopics(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j=f;a=h;e=0;b=_EnvRtnArgCount(a);d=1;c=3;break;case 3:c=(d|0)<=(b|0)?4:22;break;case 4:g=_gm2(a,88);_EnvRtnUnknown(a,d,j);c=2==(HEAPU16[(j+4|0)>>1]&65535|0)?6:5;break;case 5:c=3==(HEAPU16[(j+4|0)>>1]&65535|0)?6:7;break;case 6:_strncpy(g|0,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2],79);c=14;break;case 7:c=0==
(HEAPU16[(j+4|0)>>1]&65535|0)?8:9;break;case 8:c=g|0;var k=a,l=HEAP32[(j+8|0)>>2]+16|0,l=(tempDoubleI32[0]=HEAP32[l>>2],tempDoubleI32[1]=HEAP32[l+4>>2],tempDoubleF64[0]),k=_FloatToString(k,l);_strncpy(c,k,79);c=13;break;case 9:c=1==(HEAPU16[(j+4|0)>>1]&65535|0)?10:11;break;case 10:c=g|0;k=_LongIntegerToString(a,HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2]);_strncpy(c,k,79);c=12;break;case 11:_strncpy(g|0,STRING_TABLE.__str504369|0,79);c=12;break;case 12:c=13;break;case 13:c=14;break;case 14:HEAP32[(g+84|
0)>>2]=0;HEAP32[(g+80|0)>>2]=0;c=0==(e|0)?15:16;break;case 15:e=g;c=20;break;case 16:i=e;c=17;break;case 17:c=0!=(HEAP32[(i+84|0)>>2]|0)?18:19;break;case 18:i=HEAP32[(i+84|0)>>2];c=17;break;case 19:HEAP32[(i+84|0)>>2]=g;c=20;break;case 20:c=21;break;case 21:d=d+1|0;c=3;break;case 22:return h=e,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GetCommandLineTopics.X=1;
function _FindTopicInEntries(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n;e=h;g=f;i=c;j=a;k=b;l=0;d=0!=(i|0)?3:4;break;case 3:n=HEAP32[(i+80|0)>>2];d=5;break;case 4:n=0;d=5;break;case 5:m=i;d=(m|0)!=(n|0)?6:22;break;case 6:d=7;break;case 7:d=0!=(l|0)?8:9;break;case 8:_GenClose(e,l);d=9;break;case 9:d=0==(_strcmp(m|0,STRING_TABLE.__str474366|0)|0)?10:11;break;case 10:l=_GetEntries(e,g,j,0,k);d=16;break;case 11:d=0==(_strcmp(m|0,STRING_TABLE.__str484367|0)|0)?12:14;break;case 12:d=
(HEAP32[(m+84|0)>>2]|0)==(n|0)?13:14;break;case 13:l=_GetCurrentMenu(e,g,k);d=15;break;case 14:l=_GetEntries(e,g,j,m|0,k);d=15;break;case 15:d=16;break;case 16:d=-10==(HEAP32[k>>2]|0)?18:17;break;case 17:d=-25==(HEAP32[k>>2]|0)?18:19;break;case 18:d=21;break;case 19:m=HEAP32[(m+84|0)>>2];d=20;break;case 20:d=(m|0)!=(n|0)?7:21;break;case 21:d=23;break;case 22:l=_GetEntries(e,g,j,0,k);d=23;break;case 23:return l;default:assert(0,"bad label: "+d)}}_FindTopicInEntries.X=1;
function _grab_string(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;g=f;i=c;b=0==(_fgets(i,a,g)|0)?3:4;break;case 3:_GenClose(e,g);d=0;b=11;break;case 4:b=36==(HEAP8[i|0]<<24>>24|0)?5:7;break;case 5:b=36==(HEAP8[i+1|0]<<24>>24|0)?6:7;break;case 6:HEAP8[i|0]=32;HEAP8[i+1|0]=32;b=10;break;case 7:b=0<=(_findstr(i,STRING_TABLE.__str74326|0)|0)?8:9;break;case 8:i=0;_GenClose(e,g);b=9;break;case 9:b=10;break;case 10:d=i;b=11;break;case 11:return d;default:assert(0,"bad label: "+b)}}
_grab_string.X=1;
function _AskForNewHelpTopic(h,f,c){var a=STACKTOP;STACKTOP+=336;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n=a,o=a+256;e=h;g=f;_EnvPrintRouter(e,STRING_TABLE.__str164335|0,HEAP32[c>>2]);_EnvPrintRouter(e,STRING_TABLE.__str164335|0,STRING_TABLE.__str494368|0);i=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0)>>2]=0;b=3;break;case 3:b=_EnvGetcRouter(e,STRING_TABLE.__str164335|0)&255;HEAP8[n+i|0]=b;if(10!=
(b<<24>>24|0))b=4;else{var p=0;b=5}break;case 4:p=254>(i|0);b=5;break;case 5:b=p?6:16;break;case 6:b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:b=16;break;case 8:b=9==(HEAP8[n+i|0]<<24>>24|0)?9:10;break;case 9:HEAP8[n+i|0]=32;b=14;break;case 10:b=8==(HEAP8[n+i|0]<<24>>24|0)?11:13;break;case 11:b=0!=(i|0)?12:13;break;case 12:i=i-2|0;b=HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0;HEAP32[b>>2]=HEAP32[b>>2]-2|0;b=13;break;case 13:b=14;break;case 14:b=15;break;case 15:i=
i+1|0;b=HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=3;break;case 16:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+184|0)>>2]|0)>>2]=-1;b=0!=(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+176|0)>>2]+8|0)>>2]|0)?17:18;break;case 17:_EnvPrintRouter(e,STRING_TABLE.__str164335|0,STRING_TABLE.__str184337|0);d=HEAP32[(g+80|0)>>2]=g;b=43;break;case 18:HEAP8[n+i|0]=32;HEAP8[n+(i+1|0)|0]=0;k=g;j=i=0;b=19;break;case 19:b=0!=(HEAP8[n+i|0]<<24>>24|0)?20:42;break;case 20:b=32!=(HEAP8[n+i|0]<<24>>24|0)?
21:23;break;case 21:b=80>(j|0)?22:23;break;case 22:b=i;i=b+1|0;b=HEAP8[n+b|0];var q=j;j=q+1|0;HEAP8[o+q|0]=b;b=41;break;case 23:b=0<(j|0)?24:39;break;case 24:b=25;break;case 25:if(32!=(HEAP8[n+i|0]<<24>>24|0))b=26;else{var r=0;b=27}break;case 26:r=0!=(HEAP8[n+i|0]<<24>>24|0);b=27;break;case 27:b=r?28:29;break;case 28:i=i+1|0;b=25;break;case 29:j=HEAP8[o+j|0]=0;b=0!=(g|0)?30:31;break;case 30:_strcpy(g|0,o|0);g=HEAP32[(g+84|0)>>2];b=38;break;case 31:l=_gm2(e,88);_strcpy(l|0,o|0);HEAP32[(l+84|0)>>2]=
0;HEAP32[(l+80|0)>>2]=0;b=0==(k|0)?32:33;break;case 32:k=l;b=37;break;case 33:m=k;b=34;break;case 34:b=0!=(HEAP32[(m+84|0)>>2]|0)?35:36;break;case 35:m=HEAP32[(m+84|0)>>2];b=34;break;case 36:HEAP32[(m+84|0)>>2]=l;b=37;break;case 37:b=38;break;case 38:b=40;break;case 39:i=i+1|0;b=40;break;case 40:b=41;break;case 41:b=19;break;case 42:HEAP32[(k+80|0)>>2]=g;d=k;b=43;break;case 43:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_AskForNewHelpTopic.X=1;
function _GetEntries(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l;g=h;i=f;d=c;j=a;k=b;j=_LookupEntry(g,i,d,j,k);d=0>(j|0)?3:4;break;case 3:e=0;d=9;break;case 4:l=_GenOpen(g,i,STRING_TABLE.__str4319|0);d=0==(l|0)?5:6;break;case 5:HEAP32[k>>2]=-10;e=0;d=9;break;case 6:d=0>(_fseek(l,j,0)|0)?7:8;break;case 7:_GenClose(g,l);HEAP32[k>>2]=-10;e=0;d=9;break;case 8:e=l;d=9;break;case 9:return e;default:assert(0,"bad label: "+d)}}_GetEntries.X=1;
function _HelpPathFunction(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;c=0==(_EnvRtnArgCount(a)|0)?3:7;break;case 3:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str234342|0);c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]|0)?4:5;break;case 4:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]);c=6;break;
case 5:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str124331|0);c=6;break;case 6:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str184337|0);c=14;break;case 7:c=0!=(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]|0)?8:11;break;case 8:c=1==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+8|0)>>2]|0)?9:10;break;case 9:_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str244343|0);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+32|0)>>2]+12|0)>>2]);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str254344|0);_TextLookupToss(a,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]);_EnvDeleteRouter(a,STRING_TABLE.__str164335|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+8|0)>>2]=0;c=10;break;case 10:c=a;var d=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2],e=_strlen(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2])+1|0;_rm(c,d,e);c=11;break;case 11:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str264345|
0,1,181,b)|0)?12:13;break;case 12:c=14;break;case 13:c=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];d=a;e=_strlen(c)+1|0;d=_gm2(d,e);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2]=d;_strcpy(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+32|0)>>2]+12|0)>>2],c);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str274346|0);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,c);_EnvPrintRouter(a,STRING_TABLE.__str134332|0,STRING_TABLE.__str184337|0);c=14;break;case 14:STACKTOP=f;return;default:assert(0,"bad label: "+
c)}}_HelpPathFunction.X=1;
function _FetchCommand(h,f){var c=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c;b=h;d=f;HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str284347|0,1,181,g)|0)?3:4;break;case 3:a=9;break;case 4:e=_TextLookupFetch(b,HEAP32[(HEAP32[(g+8|0)>>2]+16|0)>>2]);a=0>=(e|0)?5:8;break;case 5:a=0==(e|0)?6:7;break;
case 6:_PrintErrorID(b,STRING_TABLE.__str14320|0,3,0);_EnvPrintRouter(b,STRING_TABLE.__str24321|0,STRING_TABLE.__str294348|0);a=7;break;case 7:a=9;break;case 8:HEAP16[(d+4|0)>>1]=1;a=_EnvAddLong(b,e);HEAP32[(d+8|0)>>2]=a;a=9;break;case 9:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_FetchCommand.X=1;
function _PrintRegionCommand(h){var f=STACKTOP;STACKTOP+=264;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;e=f+256;var g=f+260,i;a=h;b=_GetCommandLineTopics(a);e=_FindTopicInEntries(a,HEAP32[(b+84|0)>>2]|0,HEAP32[(HEAP32[(b+84|0)>>2]+84|0)>>2],e|0,g);c=-10!=(HEAP32[g>>2]|0)?3:11;break;case 3:c=-25!=(HEAP32[g>>2]|0)?4:11;break;case 4:c=-30!=(HEAP32[g>>2]|0)?5:11;break;case 5:c=0==(_strcmp(b|0,STRING_TABLE.__str304349|
0)|0)?6:7;break;case 6:_strcpy(b|0,STRING_TABLE.__str314350|0);c=7;break;case 7:_EnvPrintRouter(a,b|0,STRING_TABLE.__str184337|0);c=8;break;case 8:c=0!=(_grab_string(a,e,d|0,256)|0)?9:10;break;case 9:_EnvPrintRouter(a,b|0,d|0);c=8;break;case 10:i=1;c=14;break;case 11:c=0!=(e|0)?12:13;break;case 12:_GenClose(a,e);c=13;break;case 13:i=0;c=14;break;case 14:c=15;break;case 15:c=0!=(b|0)?16:17;break;case 16:c=b;b=HEAP32[(b+84|0)>>2];_rm(a,c,88);c=15;break;case 17:return h=i,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}_PrintRegionCommand.X=1;
function _GetRegionCommand(h){var f=STACKTOP;STACKTOP+=272;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;e=f+256;var g=f+260,i,j,k=f+264,l=f+268,m;a=h;i=0;HEAP32[k>>2]=0;HEAP32[l>>2]=0;b=_GetCommandLineTopics(a);e=_FindTopicInEntries(a,b|0,HEAP32[(b+84|0)>>2],e|0,g);c=-10!=(HEAP32[g>>2]|0)?3:9;break;case 3:c=-25!=(HEAP32[g>>2]|0)?4:9;break;case 4:c=-30!=(HEAP32[g>>2]|0)?5:9;break;case 5:c=6;break;case 6:c=0!=
(_grab_string(a,e,d|0,256)|0)?7:8;break;case 7:i=_AppendToString(a,d|0,i,k,l);c=6;break;case 8:c=12;break;case 9:c=0!=(e|0)?10:11;break;case 10:_GenClose(a,e);c=11;break;case 11:c=12;break;case 12:c=13;break;case 13:c=0!=(b|0)?14:15;break;case 14:c=b;b=HEAP32[(b+84|0)>>2];_rm(a,c,88);c=13;break;case 15:c=0==(i|0)?16:17;break;case 16:j=_EnvAddSymbol(a,__str324351|0);c=24;break;case 17:m=_strlen(i);c=0<m>>>0?18:23;break;case 18:c=13==(HEAP8[i+(m-1|0)|0]<<24>>24|0)?19:20;break;case 19:c=10==(HEAP8[i+
(m-2|0)|0]<<24>>24|0)?22:20;break;case 20:c=10==(HEAP8[i+(m-1|0)|0]<<24>>24|0)?21:23;break;case 21:c=13==(HEAP8[i+(m-2|0)|0]<<24>>24|0)?22:23;break;case 22:HEAP8[i+(m-2|0)|0]=0;c=23;break;case 23:j=_EnvAddSymbol(a,i);c=24;break;case 24:c=0!=(i|0)?25:26;break;case 25:_genfree(a,i,HEAP32[l>>2]);c=26;break;case 26:return h=j,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_GetRegionCommand.X=1;
function _TossCommand(h){var f=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e=f;b=h;c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str334352|0,1,181,e)|0)?3:4;break;case 3:a=0;c=10;break;case 4:d=HEAP32[(HEAP32[(e+8|0)>>2]+16|0)>>2];c=0!=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+12|0)>>2]|0)?5:9;break;case 5:c=0==(_strcmp(d,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+12|0)>>2])|0)?6:8;break;
case 6:c=1==(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:c=b;var g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+12|0)>>2],i=_strlen(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+12|0)>>2])+1|0;_rm(c,g,i);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+12|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+32|0)>>2]+8|0)>>2]=0;_EnvDeleteRouter(b,STRING_TABLE.__str164335|0);c=8;break;case 8:c=9;break;case 9:a=_TextLookupToss(b,d);c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,
"bad label: "+c)}}_TossCommand.X=1;
function _HelpFunctionDefinitions(h){_AllocateEnvironmentData(h,8,16,1608);_EnvDefineFunction2(h,STRING_TABLE.__str344353|0,118,1610,STRING_TABLE.__str354354|0,0);_EnvDefineFunction2(h,STRING_TABLE.__str264345|0,118,1612,STRING_TABLE.__str364355|0,STRING_TABLE.__str374356|0);_EnvDefineFunction2(h,STRING_TABLE.__str284347|0,117,1614,STRING_TABLE.__str384357|0,STRING_TABLE.__str394358|0);_EnvDefineFunction2(h,STRING_TABLE.__str334352|0,98,1616,STRING_TABLE.__str404359|0,STRING_TABLE.__str394358|0);
_EnvDefineFunction2(h,STRING_TABLE.__str414360|0,98,1618,STRING_TABLE.__str424361|0,STRING_TABLE.__str434362|0);_EnvDefineFunction2(h,STRING_TABLE.__str444363|0,115,1620,STRING_TABLE.__str454364|0,STRING_TABLE.__str464365|0)}
function _DeallocateTextProcessingData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+32|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+88|0)>>2];_TossFunction(c,HEAP32[(a+80|0)>>2]);_rm(c,a,92);a=f;f=3;break;case 5:f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+32|0)>>2]+12|0)>>2]|0)?6:7;break;case 6:f=c;var b=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+32|0)>>2]+12|0)>>2],d=_strlen(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+32|0)>>2]+12|0)>>2])+1|0;_rm(f,
b,d);f=7;break;case 7:return;default:assert(0,"bad label: "+f)}}_DeallocateTextProcessingData.X=1;
function _GetCurrentMenu(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k;d=h;e=f;g=c;i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+32|0)>>2]|0)>>2];a=0!=(i|0)?3:7;break;case 3:a=0!=(_strcmp(i|0,e)|0)?4:5;break;case 4:k=1;a=6;break;case 5:k=0;a=6;break;case 6:a=8;break;case 7:k=0;a=8;break;case 8:a=9;break;case 9:a=0<(k|0)?10:17;break;case 10:i=HEAP32[(i+88|0)>>2];a=0!=(i|0)?11:15;break;case 11:a=0!=(_strcmp(i|0,e)|0)?12:13;break;case 12:k=1;a=14;break;case 13:k=0;a=14;break;case 14:a=16;break;case 15:k=
0;a=16;break;case 16:a=9;break;case 17:a=0==(i|0)?18:19;break;case 18:HEAP32[g>>2]=-10;b=0;a=26;break;case 19:a=0==(HEAP32[(i+84|0)>>2]|0)?20:21;break;case 20:HEAP32[g>>2]=-25;b=0;a=26;break;case 21:j=a=_GenOpen(d,e,STRING_TABLE.__str4319|0);a=0==(a|0)?22:23;break;case 22:HEAP32[g>>2]=-10;b=0;a=26;break;case 23:a=0>(_fseek(j,HEAP32[(HEAP32[(i+84|0)>>2]+88|0)>>2],0)|0)?24:25;break;case 24:_GenClose(d,j);HEAP32[g>>2]=-10;b=0;a=26;break;case 25:HEAP32[g>>2]=0;b=j;a=26;break;case 26:return b;default:assert(0,
"bad label: "+a)}}_GetCurrentMenu.X=1;
function _LookupEntry(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o;d=h;g=f;i=c;j=a;k=b;l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+32|0)>>2]|0)>>2];d=0!=(l|0)?3:7;break;case 3:d=0!=(_strcmp(l|0,g)|0)?4:5;break;case 4:n=1;d=6;break;case 5:n=0;d=6;break;case 6:d=8;break;case 7:n=0;d=8;break;case 8:d=9;break;case 9:d=0<(n|0)?10:17;break;case 10:l=HEAP32[(l+88|0)>>2];d=0!=(l|0)?11:15;break;case 11:d=0!=(_strcmp(l|0,g)|0)?12:13;break;case 12:n=1;d=14;break;case 13:n=0;d=14;break;case 14:d=
16;break;case 15:n=0;d=16;break;case 16:d=9;break;case 17:d=0==(l|0)?18:19;break;case 18:HEAP32[k>>2]=-10;e=-1;d=53;break;case 19:d=0==(j|0)?20:25;break;case 20:d=0==(HEAP32[(l+84|0)>>2]|0)?21:22;break;case 21:HEAP32[k>>2]=-30;e=-1;d=53;break;case 22:d=0==(HEAP32[(HEAP32[(l+84|0)>>2]+96|0)>>2]|0)?23:24;break;case 23:HEAP32[k>>2]=-30;HEAP32[(l+84|0)>>2]=0;HEAP32[i>>2]=0;e=-1;d=53;break;case 24:HEAP32[(l+84|0)>>2]=HEAP32[(HEAP32[(l+84|0)>>2]+96|0)>>2];HEAP32[k>>2]=-35;HEAP32[i>>2]=HEAP32[(l+84|0)>>
2]+8|0;e=HEAP32[(HEAP32[(l+84|0)>>2]+88|0)>>2];d=53;break;case 25:_upper(j);d=0!=(HEAP32[(l+84|0)>>2]|0)?26:27;break;case 26:m=HEAP32[(HEAP32[(l+84|0)>>2]+92|0)>>2];d=28;break;case 27:m=HEAP32[(l+80|0)>>2];d=28;break;case 28:d=0!=(m|0)?29:33;break;case 29:d=0==(_findstr(m+8|0,j)|0)?30:31;break;case 30:o=0;d=32;break;case 31:o=1;d=32;break;case 32:d=34;break;case 33:o=0;d=34;break;case 34:d=35;break;case 35:d=0<(o|0)?36:43;break;case 36:m=HEAP32[(m+100|0)>>2];d=0!=(m|0)?37:41;break;case 37:d=0==(_findstr(m+
8|0,j)|0)?38:39;break;case 38:o=0;d=40;break;case 39:o=1;d=40;break;case 40:d=42;break;case 41:o=0;d=42;break;case 42:d=35;break;case 43:d=0==(m|0)?44:47;break;case 44:HEAP32[k>>2]=-25;d=0!=(HEAP32[(l+84|0)>>2]|0)?45:46;break;case 45:HEAP32[i>>2]=HEAP32[(l+84|0)>>2]+8|0;e=HEAP32[(HEAP32[(l+84|0)>>2]+88|0)>>2];d=53;break;case 46:e=-1;d=53;break;case 47:d=-45==(HEAP32[(m+4|0)>>2]|0)?48:49;break;case 48:HEAP32[k>>2]=-40;HEAP32[(l+84|0)>>2]=m;d=50;break;case 49:HEAP32[k>>2]=0;d=50;break;case 50:d=0!=
(HEAP32[(l+84|0)>>2]|0)?51:52;break;case 51:HEAP32[i>>2]=HEAP32[(l+84|0)>>2]+8|0;d=52;break;case 52:e=HEAP32[(m+88|0)>>2];d=53;break;case 53:return e;default:assert(0,"bad label: "+d)}}_LookupEntry.X=1;
function _upper(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=0!=(HEAP8[c+a|0]<<24>>24|0)?4:8;break;case 4:f=0!=(_islower(HEAP8[c+a|0]<<24>>24)|0)?5:6;break;case 5:f=_toupper(HEAP8[c+a|0]<<24>>24)&255;HEAP8[c+a|0]=f;f=6;break;case 6:f=7;break;case 7:a=a+1|0;f=3;break;case 8:return;default:assert(0,"bad label: "+f)}}function _DeftemplateBinarySetup(h){_AllocateEnvironmentData(h,61,24,1622);_AddBinaryItem(h,STRING_TABLE.__str4377|0,0,1624,0,1626,1628,1630,1632,1634)}
function _DeallocateDeftemplateBloadData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0)>>2]|0;f=0!=(a|0)?3:4;break;case 3:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+20|0)>>2],a);f=4;break;case 4:a=48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?5:6;break;case 5:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]|0)>>2],a);f=6;break;case 6:a=20*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>
2]+8|0)>>2]|0;f=0!=(a|0)?7:8;break;case 7:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+16|0)>>2],a);f=8;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDeftemplateBloadData.X=1;
function _BsaveFind4379(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d;c=h;_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0)>>2]);_SaveBloadCount(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0)>>2]=0;d=_EnvGetNextDefmodule(c,
0);f=3;break;case 3:f=0!=(d|0)?4:14;break;case 4:_EnvSetCurrentModule(c,d);a=HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=_EnvGetNextDeftemplate(c,0);f=5;break;case 5:f=0!=(a|0)?6:12;break;case 6:b=a|0;f=HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0;var e=HEAP32[f>>2];HEAP32[f>>2]=e+1|0;_MarkConstructHeaderNeededItems(b,e);b=HEAP32[(a+24|0)>>2];f=7;break;case 7:f=0!=(b|0)?8:10;break;case 8:f=HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0;HEAP32[f>>2]=HEAP32[f>>2]+1|0;f=HEAP32[(b|
0)>>2]+12|0;HEAP32[f>>2]=HEAP32[f>>2]&-5|4;f=9;break;case 9:b=HEAP32[(b+16|0)>>2];f=7;break;case 10:f=11;break;case 11:a=_EnvGetNextDeftemplate(c,a);f=5;break;case 12:f=13;break;case 13:d=_EnvGetNextDefmodule(c,d);f=3;break;case 14:return;default:assert(0,"bad label: "+f)}}_BsaveFind4379.X=1;
function _BsaveStorage4380(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[c>>2]=12;_GenWrite(c,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+4|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+8|0,4,f);_GenWrite(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+12|0,4,f);STACKTOP=c}function _BloadDeftemplateModuleReference(h,f){return HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+20|0)>>2]+12*f|0}
function _BsaveBinaryItem4381(h,f){var c=STACKTOP;STACKTOP+=60;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g,i=c+4,j,k=c+28,l=c+48;b=h;d=f;HEAP32[e>>2]=((24*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+4|0)>>2]|0)+(20*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+8|0)>>2]|0)|0)+(12*HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+12|0)>>2]|0)|0;_GenWrite(e,4,d);HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+
4|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=3;break;case 3:a=0!=(e|0)?4:6;break;case 4:_EnvSetCurrentModule(b,e);a=b;var m=_FindModuleItem(b,STRING_TABLE.__str4377|0)+4|0;a=_GetModuleItem(a,0,HEAP32[m>>2]);_AssignBsaveDefmdlItemHdrVals(l|0,a|0);_GenWrite(l,12,d);a=5;break;case 5:e=_EnvGetNextDefmodule(b,e);a=3;break;case 6:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+8|0)>>2]=0;e=_EnvGetNextDefmodule(b,0);a=7;break;case 7:a=0!=(e|0)?8:20;break;case 8:_EnvSetCurrentModule(b,e);g=_EnvGetNextDeftemplate(b,
0);a=9;break;case 9:a=0!=(g|0)?10:18;break;case 10:_AssignBsaveConstructHeaderVals(i|0,g|0);a=i+16|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(g+28|0)>>2]&1;a=i+16|0;HEAP32[a>>2]=HEAP32[a>>2]&-65535|(HEAPU16[(g+30|0)>>1]&32767)<<1;a=0==(HEAP32[(g+36|0)>>2]|0)?11:12;break;case 11:var n=-1;a=13;break;case 12:n=HEAP32[(HEAP32[(g+36|0)>>2]+16|0)>>2];a=13;break;case 13:HEAP32[(i+20|0)>>2]=n;a=0!=(HEAP32[(g+24|0)>>2]|0)?14:15;break;case 14:HEAP32[(i+12|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+8|
0)>>2];a=16;break;case 15:HEAP32[(i+12|0)>>2]=-1;a=16;break;case 16:_GenWrite(i,24,d);a=HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+8|0;HEAP32[a>>2]=HEAP32[a>>2]+(HEAPU16[(g+30|0)>>1]&65535)|0;a=17;break;case 17:g=_EnvGetNextDeftemplate(b,g);a=9;break;case 18:a=19;break;case 19:e=_EnvGetNextDefmodule(b,e);a=7;break;case 20:e=_EnvGetNextDefmodule(b,0);a=21;break;case 21:a=0!=(e|0)?22:39;break;case 22:_EnvSetCurrentModule(b,e);g=_EnvGetNextDeftemplate(b,0);a=23;break;case 23:a=0!=(g|0)?24:37;break;case 24:j=
HEAP32[(g+24|0)>>2];a=25;break;case 25:a=0!=(j|0)?26:35;break;case 26:a=0!=(_EnvGetDynamicConstraintChecking(b)|0)?27:28;break;case 27:a=0==(HEAP32[(j+8|0)>>2]|0)?28:29;break;case 28:var o=-1;a=30;break;case 29:o=HEAPU16[(HEAP32[(j+8|0)>>2]+4|0)>>1]&65535;a=30;break;case 30:HEAP32[(k+8|0)>>2]=o;HEAP32[(k|0)>>2]=HEAPU32[(HEAP32[(j|0)>>2]+12|0)>>2]>>>3&536870911;a=k+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(j+4|0)>>2]&1;a=k+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(j+4|0)>>2]>>>1&1)<<1;a=k+4|0;HEAP32[a>>
2]=HEAP32[a>>2]&-5|(HEAPU32[(j+4|0)>>2]>>>2&1)<<2;a=k+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[(j+4|0)>>2]>>>3&1)<<3;a=_HashedExpressionIndex(b,HEAP32[(j+12|0)>>2]);HEAP32[(k+12|0)>>2]=a;a=0!=(HEAP32[(j+16|0)>>2]|0)?31:32;break;case 31:HEAP32[(k+16|0)>>2]=0;a=33;break;case 32:HEAP32[(k+16|0)>>2]=-1;a=33;break;case 33:_GenWrite(k,20,d);a=34;break;case 34:j=HEAP32[(j+16|0)>>2];a=25;break;case 35:a=36;break;case 36:g=_EnvGetNextDeftemplate(b,g);a=23;break;case 37:a=38;break;case 38:e=_EnvGetNextDefmodule(b,
e);a=21;break;case 39:_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+4|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+8|0);_RestoreBloadCount(b,HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+12|0);STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_BsaveBinaryItem4381.X=1;
function _BloadStorage4382(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f;a=h;_GenReadBinary(a,b,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+4|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+8|0,4);_GenReadBinary(a,HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+12|0,4);c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+244|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+16|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+20|0)>>2]=0;c=9;break;case 4:HEAP32[b>>2]=12*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+12|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+20|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+4|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]|0)>>2]=0;HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+244|0)>>2]+16|0)>>2]=0;c=9;break;case 6:HEAP32[b>>2]=48*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+4|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]|0)>>2]=c;c=0==(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+8|0)>>2]|0)?7:8;break;case 7:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+16|0)>>2]=0;c=9;break;case 8:HEAP32[b>>2]=20*HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+244|0)>>2]+8|0)>>2]|0;c=_genlongalloc(a,HEAP32[b>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>
2]+244|0)>>2]+16|0)>>2]=c;c=9;break;case 9:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_BloadStorage4382.X=1;
function _BloadBinaryItem4383(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_GenReadBinary(h,f,4);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+12|0)>>2],12,1636);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+4|0)>>2],24,1638);_BloadandRefresh(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+8|0)>>2],20,1640);STACKTOP=f}
function _ClearBload4384(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;c=h;b=0;f=3;break;case 3:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0)>>2]|0)?4:6;break;case 4:_UnmarkConstructHeader(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]|0)>>2]+48*b|0);f=5;break;case 5:b=b+1|0;f=3;break;case 6:b=0;f=7;break;case 7:f=(b|0)<(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0)>>2]|0)?8:10;break;case 8:_DecrementSymbolCount(c,HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+16|0)>>
2]+20*b|0)>>2]);f=9;break;case 9:b=b+1|0;f=7;break;case 10:a=12*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0)>>2]|0;f=0!=(a|0)?11:12;break;case 11:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+20|0)>>2],a);f=12;break;case 12:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+12|0)>>2]=0;a=48*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+4|0)>>2]|0;f=0!=(a|0)?13:14;break;case 13:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]|0)>>2],a);f=14;break;case 14:HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+244|0)>>2]+4|0)>>2]=0;a=20*HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0)>>2]|0;f=0!=(a|0)?15:16;break;case 15:_genlongfree(c,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+16|0)>>2],a);f=16;break;case 16:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+244|0)>>2]+8|0)>>2]=0;h=c;c=_EnvAddSymbol(c,STRING_TABLE.__str14378|0);_CreateImpliedDeftemplate(h,c,0);return;default:assert(0,"bad label: "+f)}}_ClearBload4384.X=1;
function _UpdateDeftemplateSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;g=d;d=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+16|0)>>2]+20*e|0;HEAP32[(d|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+68|0)>>2]+(HEAP32[(g|0)>>2]<<2)|0)>>2];a=HEAP32[(d|0)>>2]+4|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=-1==(HEAP32[(g+12|0)>>2]|0)?3:4;break;case 3:var i=0;a=5;break;case 4:i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+180|0)>>2]+28|0)>>2]+(HEAP32[(g+12|0)>>2]<<4)|0;a=5;break;case 5:HEAP32[(d+
12|0)>>2]=i;a=-1==(HEAP32[(g+8|0)>>2]|0)?6:7;break;case 6:var j=0;a=8;break;case 7:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+172|0)>>2]+12|0)>>2]+48*HEAP32[(g+8|0)>>2]|0;a=8;break;case 8:HEAP32[(d+8|0)>>2]=j;a=d+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|HEAP32[(g+4|0)>>2]&1;a=d+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-3|(HEAPU32[(g+4|0)>>2]>>>1&1)<<1;a=d+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|(HEAPU32[(g+4|0)>>2]>>>2&1)<<2;a=d+4|0;HEAP32[a>>2]=HEAP32[a>>2]&-9|(HEAPU32[(g+4|0)>>2]>>>3&1)<<3;a=-1!=(HEAP32[(g+16|0)>>2]|0)?9:10;
break;case 9:HEAP32[(d+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+16|0)>>2]+20*(e+1|0)|0;a=11;break;case 10:HEAP32[(d+16|0)>>2]=0;a=11;break;case 11:return;default:assert(0,"bad label: "+a)}}_UpdateDeftemplateSlot.X=1;function _EnvGetDeftemplateWatch(h,f){return HEAPU32[(f+28|0)>>2]>>>1&1}function _EnvSetDeftemplateWatch(h,f,c){h=c+28|0;HEAP32[h>>2]=HEAP32[h>>2]&-3|(f&1)<<1}
function _UpdateDeftemplateModule(h,f,c){_UpdateDefmoduleItemHeader(h,f|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]+20|0)>>2]+12*c|0,48,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+244|0)>>2]|0)>>2])}
function _UpdateDeftemplate(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;e=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]|0)>>2]+48*e|0;_UpdateConstructHeader(b,d|0,e|0,12,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+20|0)>>2],48,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]|0)>>2]);a=-1!=(HEAP32[(d+12|0)>>2]|0)?3:4;break;case 3:HEAP32[(e+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+244|0)>>2]+16|0)>>2]+20*HEAP32[(d+12|0)>>2]|0;a=5;break;case 4:HEAP32[(e+24|0)>>2]=0;a=5;break;
case 5:a=-1!=(HEAP32[(d+20|0)>>2]|0)?6:10;break;case 6:a=-1==(HEAP32[(d+20|0)>>2]|0)?7:8;break;case 7:var g=0;a=9;break;case 8:g=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+248|0)>>2]|0)>>2]+48*HEAP32[(d+20|0)>>2]|0;a=9;break;case 9:HEAP32[(e+36|0)>>2]=g;a=11;break;case 10:HEAP32[(e+36|0)>>2]=0;a=11;break;case 11:h=e+28|0;HEAP32[h>>2]=HEAP32[h>>2]&-2|HEAP32[(d+16|0)>>2]&1;h=e+28|0;HEAP32[h>>2]=HEAP32[h>>2]&-3|(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+12|0)>>2]+4|0)>>2]&1)<<1;b=e+28|0;HEAP32[b>>2]&=-5;HEAP16[(e+
30|0)>>1]=HEAPU32[(d+16|0)>>2]>>>1&32767;HEAP32[(e+40|0)>>2]=0;HEAP32[(e+44|0)>>2]=0;return;default:assert(0,"bad label: "+a)}}_UpdateDeftemplate.X=1;
function _DeftemplateBasicCommands(h){_EnvAddClearFunction(h,STRING_TABLE.__str4385|0,1642,0);_AddSaveFunction(h,STRING_TABLE.__str4385|0,1644,10);_EnvDefineFunction2(h,STRING_TABLE.__str14386|0,109,1646,STRING_TABLE.__str24387|0,STRING_TABLE.__str34388|0);_EnvDefineFunction2(h,STRING_TABLE.__str44389|0,118,1648,STRING_TABLE.__str54390|0,STRING_TABLE.__str64391|0);_EnvDefineFunction2(h,STRING_TABLE.__str74392|0,119,1650,STRING_TABLE.__str84393|0,STRING_TABLE.__str64391|0);_EnvDefineFunction2(h,STRING_TABLE.__str94394|
0,118,1652,STRING_TABLE.__str104395|0,STRING_TABLE.__str34388|0);_EnvDefineFunction2(h,STRING_TABLE.__str114396|0,118,1654,STRING_TABLE.__str124397|0,STRING_TABLE.__str64391|0);_DeftemplateBinarySetup(h);_DeftemplateCompilerSetup(h)}function _ClearDeftemplates(h){var f=_EnvAddSymbol(h,STRING_TABLE.__str134398|0);_CreateImpliedDeftemplate(h,f,0)}function _SaveDeftemplates(h,f,c){_SaveConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}
function _GetDeftemplateListFunction(h,f){_GetConstructListFunction(h,STRING_TABLE.__str14386|0,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}function _UndeftemplateCommand(h){_UndefconstructCommand(h,STRING_TABLE.__str44389|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}function _DeftemplateModuleFunction(h){return _GetConstructModuleCommand(h,STRING_TABLE.__str74392|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}
function _ListDeftemplatesCommand(h){_ListConstructCommand(h,STRING_TABLE.__str94394|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}function _PPDeftemplateCommand(h){_PPConstructCommand(h,STRING_TABLE.__str114396|0,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}function _EnvUndeftemplate(h,f){return _Undefconstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}
function _EnvGetDeftemplateList(h,f,c){_GetConstructList(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2],c)}function _PPDeftemplate(h,f,c){return _PPConstruct(h,f,c,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}function _EnvListDeftemplates(h,f,c){_ListConstruct(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2],f,c)}function _DeftemplateWatchAccess(h,f,c,a){return _ConstructSetWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2],c,a,1656,1658)}
function _DeftemplateWatchPrint(h,f,c,a){return _ConstructPrintWatchAccess(h,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2],f,a,1656,1658)}function _DeftemplateCompilerSetup(h){var f=_AddCodeGeneratorItem(h,STRING_TABLE.__str4403|0,0,0,0,1660,3);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+68|0)>>2]=f}
function _DecrementDeftemplateBusyCount(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=h;a=f;c=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+168|0)>>2]+4|0)>>2]|0)?4:3;break;case 3:c=a+32|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}function _IncrementDeftemplateBusyCount(h,f){var c=f+32|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0}
function _ConstructToCode4423(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e,q,r,s,t,u=e+4,v=e+8,w,x=e+12,y=e+16,A=e+20,z=e+24,B,C,D;j=h;k=f;l=c;m=a;n=b;o=d;HEAP32[p>>2]=1;t=0;HEAP32[u>>2]=0;HEAP32[v>>2]=1;w=0;HEAP32[x>>2]=0;HEAP32[y>>2]=1;HEAP32[A>>2]=0;HEAP32[z>>2]=1;D=C=B=0;_fprintf(m,STRING_TABLE.__str44407|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+
3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));q=_EnvGetNextDefmodule(j,0);g=3;break;case 3:g=0!=(q|0)?4:17;break;case 4:_EnvSetCurrentModule(j,q);C=_OpenFileIfNeeded(j,C,k,l,n,p,HEAP32[y>>2],m,STRING_TABLE.__str54408|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]|0)>>2],0,0);g=0==(C|0)?5:6;break;case 5:_CloseDeftemplateFiles(j,C,D,B,o);i=0;g=18;break;case 6:_DeftemplateModuleToCode(j,C,q,n,o,w);C=_CloseFileIfNeeded(j,
C,x,y,o,0,0);r=_EnvGetNextDeftemplate(j,0);g=7;break;case 7:g=0!=(r|0)?8:16;break;case 8:D=_OpenFileIfNeeded(j,D,k,l,n,p,HEAP32[z>>2],m,STRING_TABLE.__str64409|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+4|0)>>2],0,0);g=0==(D|0)?9:10;break;case 9:_CloseDeftemplateFiles(j,C,D,B,o);i=0;g=18;break;case 10:_DeftemplateToCode(j,D,r,n,o,w,t);HEAP32[A>>2]=HEAP32[A>>2]+1|0;D=_CloseFileIfNeeded(j,D,A,z,o,0,0);s=HEAP32[(r+24|0)>>2];g=11;break;case 11:g=0!=(s|0)?12:15;
break;case 12:B=_OpenFileIfNeeded(j,B,k,l,n,p,HEAP32[v>>2],m,STRING_TABLE.__str74410|0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+8|0)>>2],0,0);g=0==(B|0)?13:14;break;case 13:_CloseDeftemplateFiles(j,C,D,B,o);i=0;g=18;break;case 14:_SlotToCode(j,B,s,n,o,t);t=t+1|0;HEAP32[u>>2]=HEAP32[u>>2]+1|0;B=_CloseFileIfNeeded(j,B,u,v,o,0,0);s=HEAP32[(s+16|0)>>2];g=11;break;case 15:r=_EnvGetNextDeftemplate(j,r);g=7;break;case 16:q=_EnvGetNextDefmodule(j,q);w=w+1|0;HEAP32[x>>
2]=HEAP32[x>>2]+1|0;g=3;break;case 17:_CloseDeftemplateFiles(j,C,D,B,o);i=1;g=18;break;case 18:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ConstructToCode4423.X=1;
function _DeftemplateCModuleReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var h=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]|0)>>2],e=((c|0)/(b|0)&-1)+1|0,c=(c|0)%(b|0);_fprintf(f,STRING_TABLE.__str14404|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,HEAP32[tempInt+4>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+12>>2]=c,
tempInt));STACKTOP=d}
function _DeftemplateCConstructReference(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l;g=h;i=f;j=c;k=a;l=b;e=0==(j|0)?3:4;break;case 3:_fprintf(i,STRING_TABLE.__str24405|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));e=5;break;case 4:e=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
20|0)>>2]+68|0)>>2]+20|0)>>2]+4|0)>>2];var m=k,n=((HEAP32[((j|0)+12|0)>>2]|0)/(l|0)&-1)+1|0,o=(HEAP32[((j|0)+12|0)>>2]|0)%(l|0);_fprintf(i,STRING_TABLE.__str34406|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,HEAP32[tempInt+4>>2]=m,HEAP32[tempInt+8>>2]=n,HEAP32[tempInt+12>>2]=o,tempInt));e=5;break;case 5:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_DeftemplateCConstructReference.X=1;
function _CloseDeftemplateFiles(h,f,c,a,b){var d=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m=d,n=d+4;g=h;i=f;j=c;k=a;l=b;HEAP32[m>>2]=l;HEAP32[n>>2]=0;e=0!=(k|0)?3:4;break;case 3:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,k,m,n,l,0,0);e=4;break;case 4:e=0!=(j|0)?5:6;break;case 5:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,j,m,n,l,0,0);e=6;break;case 6:e=0!=(i|0)?7:8;break;case 7:HEAP32[m>>2]=l;_CloseFileIfNeeded(g,
i,m,n,l,0,0);e=8;break;case 8:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}
function _DeftemplateModuleToCode(h,f,c,a,b){var d=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");_fprintf(f,STRING_TABLE.__str84411|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructModuleToCode(h,f,c,a,b,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+4|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+4|
0)>>2]);_fprintf(f,STRING_TABLE.__str174420|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=d}
function _DeftemplateToCode(h,f,c,a,b,d,e){var g=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var i;for(i=2;;)switch(i){case 2:var j,k,l,m,n,o;j=h;k=f;l=c;m=a;n=b;i=d;o=e;_fprintf(k,STRING_TABLE.__str84411|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_ConstructHeaderToCode(j,k,l|0,m,n,i,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>
2]+68|0)>>2]+20|0)>>2]|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+4|0)>>2]);_fprintf(k,STRING_TABLE.__str104413|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=0==(HEAP32[(l+24|0)>>2]|0)?3:4;break;case 3:_fprintf(k,STRING_TABLE.__str134416|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),
HEAP32[tempInt>>2]=0,tempInt));i=5;break;case 4:i=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+8|0)>>2];var p=m,q=((o|0)/(n|0)&-1)+1|0,r=(o|0)%(n|0);_fprintf(k,STRING_TABLE.__str144417|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=p,HEAP32[tempInt+8>>2]=q,HEAP32[tempInt+12>>2]=r,tempInt));i=5;break;case 5:i=HEAP32[(l+28|0)>>2]&1;p=HEAPU16[(l+30|0)>>1]&65535;q=HEAP32[(l+32|0)>>
2];_fprintf(k,STRING_TABLE.__str154418|0,(tempInt=STACKTOP,STACKTOP+=12,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=i,HEAP32[tempInt+4>>2]=p,HEAP32[tempInt+8>>2]=q,tempInt));i=0==(HEAP32[(l+36|0)>>2]|0)?6:7;break;case 6:_fprintf(k,STRING_TABLE.__str24405|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));i=8;break;case 7:_FactPatternNodeReference(j,HEAP32[(l+36|0)>>2],k,m,
n);i=8;break;case 8:_fprintf(k,STRING_TABLE.__str164419|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));STACKTOP=g;return;default:assert(0,"bad label: "+i)}}_DeftemplateToCode.X=1;
function _SlotToCode(h,f,c,a,b,d){var e=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m;i=h;j=f;g=c;k=a;l=b;m=d;_fprintf(j,STRING_TABLE.__str84411|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));_PrintSymbolReference(i,j,HEAP32[(g|0)>>2]);var n=HEAP32[(g+4|0)>>2]&1,o=HEAPU32[(g+4|0)>>2]>>>1&1,p=HEAPU32[(g+
4|0)>>2]>>>2&1,q=HEAPU32[(g+4|0)>>2]>>>3&1;_fprintf(j,STRING_TABLE.__str94412|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=n,HEAP32[tempInt+4>>2]=o,HEAP32[tempInt+8>>2]=p,HEAP32[tempInt+12>>2]=q,tempInt));_PrintConstraintReference(i,j,HEAP32[(g+8|0)>>2],k,l);_fprintf(j,STRING_TABLE.__str104413|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));
_PrintHashedExpressionReference(i,j,HEAP32[(g+12|0)>>2],k,l);_fprintf(j,STRING_TABLE.__str104413|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=0==(HEAP32[(g+16|0)>>2]|0)?3:4;break;case 3:_fprintf(j,STRING_TABLE.__str114414|0,(tempInt=STACKTOP,STACKTOP+=1,STACKTOP=STACKTOP+3>>2<<2,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=0,tempInt));g=5;break;case 4:g=HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+20|0)>>2]+68|0)>>2]+20|0)>>2]+8|0)>>2];n=k;o=((m+1|0)/(l|0)&-1)+1|0;p=(m+1|0)%(l|0);_fprintf(j,STRING_TABLE.__str124415|0,(tempInt=STACKTOP,STACKTOP+=16,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=g,HEAP32[tempInt+4>>2]=n,HEAP32[tempInt+8>>2]=o,HEAP32[tempInt+12>>2]=p,tempInt));g=5;break;case 5:STACKTOP=e;return;default:assert(0,"bad label: "+g)}}_SlotToCode.X=1;
function _InitializeDeftemplates(h){var f=STACKTOP;STACKTOP+=56;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");for(var c=_InitializeDeftemplates_deftemplatePtrRecord>>2,a=f>>2,b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_AllocateEnvironmentData(h,5,76,1662);a=HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+8|0;assert(!0,"memcpy given 56 bytes to copy. Problem with quantum=1 corrections perhaps?");
c=f>>2;a>>=2;for(b=c+14;c<b;c++,a++)HEAP32[a]=HEAP32[c];_InitializeFacts(h);_InitializeDeftemplateModules(h);_DeftemplateBasicCommands(h);_DeftemplateFunctions(h);c=_AddConstruct(h,STRING_TABLE.__str14427|0,STRING_TABLE.__str24428|0,1664,1666,94,96,98,1668,102,1670,1672,1674);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2]=c;_InstallPrimitive(h,HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+8|0,63);STACKTOP=f}
function _DeallocateDeftemplateData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;f=0!=(_Bloaded(c)|0)?3:4;break;case 3:f=8;break;case 4:_DoForAllConstructs(c,1676,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+20|0)>>2]+4|0)>>2],0,0);a=_EnvGetNextDefmodule(c,0);f=5;break;case 5:f=0!=(a|0)?6:8;break;case 6:f=_GetModuleItem(c,a,HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+20|0)>>2]+4|0)>>2]);HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2];f=7;break;case 7:a=_EnvGetNextDefmodule(c,a);f=5;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateDeftemplateData.X=1;
function _InitializeDeftemplateModules(h){var f=_RegisterModuleItem(h,STRING_TABLE.__str14427|0,1678,1680,1682,1684,1666);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+4|0)>>2]=f;_AddPortConstructItem(h,STRING_TABLE.__str14427|0,2)}function _EnvFindDeftemplate(h,f){return _FindNamedConstruct(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2])}
function _EnvGetNextFactInTemplate(h,f,c){for(h=2;;)switch(h){case 2:var a,b,d;b=f;d=c;h=0==(d|0)?3:4;break;case 3:a=HEAP32[(b+40|0)>>2];h=7;break;case 4:h=0!=(HEAPU32[(d+28|0)>>2]>>>15&1|0)?5:6;break;case 5:a=0;h=7;break;case 6:a=HEAP32[(d+44|0)>>2];h=7;break;case 7:return a;default:assert(0,"bad label: "+h)}}function _EnvGetNextDeftemplate(h,f){return _GetNextConstructItem(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+4|0)>>2])}
function _EnvIsDeftemplateDeletable(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;c=h;b=f;c=0!=(_ConstructsDeletable(c)|0)?4:3;break;case 3:a=0;c=9;break;case 4:c=0<(HEAP32[(b+32|0)>>2]|0)?5:6;break;case 5:a=0;c=9;break;case 6:c=0!=(HEAP32[(b+36|0)>>2]|0)?7:8;break;case 7:a=0;c=9;break;case 8:a=1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _ReturnDeftemplate(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=10;break;case 4:HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+20|0)>>2]+64|0)>>2]=0;c=0!=(HEAPU32[(b+28|0)>>2]>>>1&1|0)?5:6;break;case 5:c=HEAP32[(HEAP32[(a+16|0)>>2]+20|0)>>2]+64|0;HEAP32[c>>2]|=1;c=6;break;case 6:d=HEAP32[(b+24|0)>>2];c=7;break;case 7:c=0!=(d|0)?8:9;break;case 8:_DecrementSymbolCount(a,HEAP32[(d|0)>>2]);_RemoveHashedExpression(a,HEAP32[(d+12|0)>>2]);HEAP32[(d+12|0)>>2]=0;_RemoveConstraint(a,
HEAP32[(d+8|0)>>2]);HEAP32[(d+8|0)>>2]=0;d=HEAP32[(d+16|0)>>2];c=7;break;case 9:_ReturnSlots(a,HEAP32[(b+24|0)>>2]);_DeinstallConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=10;break;case 10:return;
default:assert(0,"bad label: "+c)}}_ReturnDeftemplate.X=1;function _GetDeftemplateModuleItem(h,f){return _GetConstructModuleItemByIndex(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]+4|0)>>2])}
function _ReturnSlots(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+16|0)>>2];_ReturnExpression(a,HEAP32[(b+12|0)>>2]);_RemoveConstraint(a,HEAP32[(b+8|0)>>2]);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}_ReturnSlots.X=1;
function _AllocateModule4439(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]|0)?3:4;break;case 3:var a=_genalloc(c,12);f=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];a=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];f=5;break;case 5:return a;default:assert(0,"bad label: "+f)}}_AllocateModule4439.X=1;
function _ReturnModule4440(h,f){_FreeConstructHeaderModule(h,f,HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+20|0)>>2]|0)>>2]);HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]=f;HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+20|0)>>2]+48|0)>>2]=HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+236|0)>>2]+16|0)>>2]}_ReturnModule4440.X=1;
function _DestroyDeftemplateAction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=5;break;case 4:_DestroyDeftemplate(a,b);c=5;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _DestroyDeftemplate(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;a=h;b=f;c=0==(b|0)?3:4;break;case 3:c=8;break;case 4:d=HEAP32[(b+24|0)>>2];c=5;break;case 5:c=0!=(d|0)?6:7;break;case 6:c=HEAP32[(d+16|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=d;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+
16|0)>>2]+236|0)>>2]+16|0)>>2];d=c;c=5;break;case 7:_DestroyFactPatternNetwork(a,HEAP32[(b+36|0)>>2]);_DeinstallConstructHeader(a,b|0);HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];c=8;break;case 8:return;default:assert(0,
"bad label: "+c)}}_DestroyDeftemplate.X=1;
function _DeftemplateFunctions(h){_EnvDefineFunction(h,STRING_TABLE.__str4441|0,117,1686,STRING_TABLE.__str14442|0);_EnvDefineFunction(h,STRING_TABLE.__str24443|0,117,1688,STRING_TABLE.__str34444|0);_EnvDefineFunction2(h,STRING_TABLE.__str44445|0,117,1690,STRING_TABLE.__str54446|0,STRING_TABLE.__str64447|0);_EnvDefineFunction2(h,STRING_TABLE.__str74448|0,117,1692,STRING_TABLE.__str84449|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str104451|0,117,1694,STRING_TABLE.__str114452|
0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str124453|0,117,1696,STRING_TABLE.__str134454|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str144455|0,117,1698,STRING_TABLE.__str154456|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str164457|0,117,1700,STRING_TABLE.__str174458|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str184459|0,98,1702,STRING_TABLE.__str194460|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str204461|
0,98,1704,STRING_TABLE.__str214462|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str224463|0,98,1706,STRING_TABLE.__str234464|0,STRING_TABLE.__str94450|0);_EnvDefineFunction2(h,STRING_TABLE.__str244465|0,119,1708,STRING_TABLE.__str254466|0,STRING_TABLE.__str94450|0);_AddFunctionParser(h,STRING_TABLE.__str4441|0,1710);_AddFunctionParser(h,STRING_TABLE.__str24443|0,1712);_FuncSeqOvlFlags(h,STRING_TABLE.__str4441|0,0,0);_FuncSeqOvlFlags(h,STRING_TABLE.__str24443|0,0,0)}
function _ModifyCommand(h,f){_DuplicateModifyCommand(h,1,f)}function _DuplicateCommand(h,f){_DuplicateModifyCommand(h,0,f)}
function _DeftemplateSlotNamesFunction(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;HEAP16[(b+4|0)>>1]=2;HEAP32[(b+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+196|0)>>2]+4|0)>>2];c=-1==(_EnvArgCountCheck(a,STRING_TABLE.__str44445|0,0,1)|0)?3:4;break;case 3:c=9;break;case 4:d=_GetConstructName(a,STRING_TABLE.__str44445|0,STRING_TABLE.__str264467|0);c=0==(d|0)?5:6;break;case 5:c=9;break;case 6:e=_EnvFindDeftemplate(a,d);c=0==(e|0)?7:8;break;case 7:_CantFindItemErrorMessage(a,STRING_TABLE.__str274468|
0,d);c=9;break;case 8:_EnvDeftemplateSlotNames(a,e,b);c=9;break;case 9:return;default:assert(0,"bad label: "+c)}}_DeftemplateSlotNamesFunction.X=1;
function _DeftemplateSlotDefaultValueFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str74448|0,e);a=0==(g|0)?3:4;break;case 3:HEAP16[(d+4|0)>>1]=2;HEAP32[(d+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];a=5;break;case 4:_EnvDeftemplateSlotDefaultValue(b,HEAP32[e>>2],HEAP32[(g+16|0)>>2],d);a=
5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _DeftemplateSlotCardinalityFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str104451|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvDeftemplateSlotCardinality(b,HEAP32[e>>2],HEAP32[(g+16|0)>>2],d);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+
a)}}
function _DeftemplateSlotAllowedValuesFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str124453|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvDeftemplateSlotAllowedValues(b,HEAP32[e>>2],HEAP32[(g+16|0)>>2],d);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _DeftemplateSlotRangeFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str144455|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvDeftemplateSlotRange(b,HEAP32[e>>2],HEAP32[(g+16|0)>>2],d);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _DeftemplateSlotTypesFunction(h,f){var c=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e=c,g;b=h;d=f;g=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str164457|0,e);a=0==(g|0)?3:4;break;case 3:_EnvSetMultifieldErrorValue(b,d);a=5;break;case 4:_EnvDeftemplateSlotTypes(b,HEAP32[e>>2],HEAP32[(g+16|0)>>2],d);a=5;break;case 5:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}
function _DeftemplateSlotMultiPFunction(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;e=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str184459|0,d);c=0==(e|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvDeftemplateSlotMultiP(b,HEAP32[d>>2],HEAP32[(e+16|0)>>2]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _DeftemplateSlotSinglePFunction(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;e=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str204461|0,d);c=0==(e|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvDeftemplateSlotSingleP(b,HEAP32[d>>2],HEAP32[(e+16|0)>>2]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _DeftemplateSlotExistPFunction(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;b=h;e=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str224463|0,d);c=0==(e|0)?3:4;break;case 3:a=0;c=5;break;case 4:a=_EnvDeftemplateSlotExistP(b,HEAP32[d>>2],HEAP32[(e+16|0)>>2]);c=5;break;case 5:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _DeftemplateSlotDefaultPFunction(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g;b=h;e=_CheckDeftemplateAndSlotArguments(b,STRING_TABLE.__str224463|0,d);c=0==(e|0)?3:4;break;case 3:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];c=10;break;case 4:g=_EnvDeftemplateSlotDefaultP(b,HEAP32[d>>2],HEAP32[(e+16|0)>>2]);c=1==(g|0)?5:6;break;case 5:a=_EnvAddSymbol(b,STRING_TABLE.__str294470|
0);c=10;break;case 6:c=2==(g|0)?7:8;break;case 7:a=_EnvAddSymbol(b,STRING_TABLE.__str304471|0);c=10;break;case 8:c=9;break;case 9:a=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+196|0)>>2]+4|0)>>2];c=10;break;case 10:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}_DeftemplateSlotDefaultPFunction.X=1;function _ModifyParse(h,f,c){return _ModAndDupParse(h,f,c,STRING_TABLE.__str4441|0)}function _DuplicateParse(h,f,c){return _ModAndDupParse(h,f,c,STRING_TABLE.__str24443|0)}
function _DuplicateModifyCommand(h,f,c){var a=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n=a,o,p,q,r,s,t=a+24;d=h;e=f;g=c;HEAP16[(g+4|0)>>1]=2;HEAP32[(g+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+196|0)>>2]+4|0)>>2];m=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2];_EvaluateExpression(d,m,n);b=1==(HEAPU16[(n+4|0)>>1]&65535|0)?3:17;break;case 3:i=HEAP32[(HEAP32[(n+
8|0)>>2]+16|0)>>2];b=0>(i|0)?4:8;break;case 4:b=0!=(e|0)?5:6;break;case 5:_ExpectedTypeError2(d,STRING_TABLE.__str4441|0,1);b=7;break;case 6:_ExpectedTypeError2(d,STRING_TABLE.__str24443|0,1);b=7;break;case 7:_SetEvaluationError(d,1);b=68;break;case 8:j=_EnvGetNextFact(d,0);b=9;break;case 9:b=0!=(j|0)?10:14;break;case 10:b=(HEAP32[(j+24|0)>>2]|0)==(i|0)?11:12;break;case 11:b=14;break;case 12:j=HEAP32[(j+36|0)>>2];b=13;break;case 13:b=9;break;case 14:b=0==(j|0)?15:16;break;case 15:b=i;_sprintf(t|0,
STRING_TABLE.__str494490|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=b,tempInt));_CantFindItemErrorMessage(d,STRING_TABLE.__str504491|0,t|0);b=68;break;case 16:b=24;break;case 17:b=6==(HEAPU16[(n+4|0)>>1]&65535|0)?18:19;break;case 18:j=HEAP32[(n+8|0)>>2];b=23;break;case 19:b=0!=(e|0)?20:21;break;case 20:_ExpectedTypeError2(d,STRING_TABLE.__str4441|0,1);b=22;break;case 21:_ExpectedTypeError2(d,STRING_TABLE.__str24443|0,1);b=22;break;case 22:_SetEvaluationError(d,
1);b=68;break;case 23:b=24;break;case 24:o=HEAP32[(j+16|0)>>2];b=0!=(HEAP32[(o+28|0)>>2]&1|0)?25:26;break;case 25:b=68;break;case 26:k=_CreateFactBySize(d,HEAP32[((j+48|0)+8|0)>>2]);HEAP32[(k+16|0)>>2]=o;q=0;b=27;break;case 27:b=(q|0)<(HEAP32[((j+48|0)+8|0)>>2]|0)?28:33;break;case 28:HEAP16[(((k+48|0)+16|0)+(q<<3)|0)>>1]=HEAP16[(((j+48|0)+16|0)+(q<<3)|0)>>1];b=4!=(HEAPU16[(((k+48|0)+16|0)+(q<<3)|0)>>1]&65535|0)?29:30;break;case 29:HEAP32[((((k+48|0)+16|0)+(q<<3)|0)+4|0)>>2]=HEAP32[((((j+48|0)+16|
0)+(q<<3)|0)+4|0)>>2];b=31;break;case 30:HEAP32[((((k+48|0)+16|0)+(q<<3)|0)+4|0)>>2]=0;b=31;break;case 31:b=32;break;case 32:q=q+1|0;b=27;break;case 33:m=HEAP32[(m+12|0)>>2];b=34;break;case 34:b=0!=(m|0)?35:56;break;case 35:b=1==(HEAPU16[(m|0)>>1]&65535|0)?36:37;break;case 36:r=HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2];b=46;break;case 37:r=s=0;p=HEAP32[(o+24|0)>>2];b=38;break;case 38:b=0!=(p|0)?39:43;break;case 39:b=(HEAP32[(p|0)>>2]|0)==(HEAP32[(m+4|0)>>2]|0)?40:41;break;case 40:s=1;p=0;b=42;break;case 41:p=
HEAP32[(p+16|0)>>2];r=r+1|0;b=42;break;case 42:b=38;break;case 43:b=0!=(s|0)?45:44;break;case 44:_InvalidDeftemplateSlotMessage(d,HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(o|0)>>2]+16|0)>>2],1);_SetEvaluationError(d,1);_ReturnFact(d,k);b=68;break;case 45:b=46;break;case 46:b=4!=(HEAPU16[(((k+48|0)+16|0)+(r<<3)|0)>>1]&65535|0)?47:54;break;case 47:b=0==(HEAP32[(m+8|0)>>2]|0)?48:49;break;case 48:b=50;break;case 49:b=0!=(HEAP32[(HEAP32[(m+8|0)>>2]+12|0)>>2]|0)?50:51;break;case 50:b=d;var u=
_GetNthSlot(o,r);_MultiIntoSingleFieldSlotError(b,u,o);_ReturnFact(d,k);b=68;break;case 51:_EvaluateExpression(d,HEAP32[(m+8|0)>>2],n);_SetEvaluationError(d,0);b=4==(HEAPU16[(n+4|0)>>1]&65535|0)?52:53;break;case 52:_ReturnFact(d,k);b=d;u=_GetNthSlot(o,r);_MultiIntoSingleFieldSlotError(b,u,o);b=68;break;case 53:HEAP16[(((k+48|0)+16|0)+(r<<3)|0)>>1]=HEAP16[(n+4|0)>>1];HEAP32[((((k+48|0)+16|0)+(r<<3)|0)+4|0)>>2]=HEAP32[(n+8|0)>>2];b=55;break;case 54:_StoreInMultifield(d,n,HEAP32[(m+8|0)>>2],0);_SetEvaluationError(d,
0);HEAP16[(((k+48|0)+16|0)+(r<<3)|0)>>1]=HEAP16[(n+4|0)>>1];HEAP32[((((k+48|0)+16|0)+(r<<3)|0)+4|0)>>2]=HEAP32[(n+8|0)>>2];b=55;break;case 55:m=HEAP32[(m+12|0)>>2];b=34;break;case 56:q=0;b=57;break;case 57:b=(q|0)<(HEAP32[((j+48|0)+8|0)>>2]|0)?58:63;break;case 58:b=4==(HEAPU16[(((k+48|0)+16|0)+(q<<3)|0)>>1]&65535|0)?59:61;break;case 59:b=0==(HEAP32[((((k+48|0)+16|0)+(q<<3)|0)+4|0)>>2]|0)?60:61;break;case 60:b=_CopyMultifield(d,HEAP32[((((j+48|0)+16|0)+(q<<3)|0)+4|0)>>2]);HEAP32[((((k+48|0)+16|0)+
(q<<3)|0)+4|0)>>2]=b;b=61;break;case 61:b=62;break;case 62:q=q+1|0;b=57;break;case 63:b=0!=(e|0)?64:65;break;case 64:_EnvRetract(d,j);b=65;break;case 65:l=_EnvAssert(d,k);b=0!=(l|0)?66:67;break;case 66:HEAP32[(g+12|0)>>2]=0;HEAP32[(g+16|0)>>2]=HEAP32[((l+48|0)+8|0)>>2]-1|0;HEAP16[(g+4|0)>>1]=6;HEAP32[(g+8|0)>>2]=l;b=67;break;case 67:b=68;break;case 68:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}_DuplicateModifyCommand.X=1;
function _EnvDeftemplateSlotNames(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;a=0!=(HEAP32[(d+28|0)>>2]&1|0)?3:4;break;case 3:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=0;g=_EnvCreateMultifield(b,1);HEAP16[(g+16|0)>>1]=2;a=_EnvAddSymbol(b,STRING_TABLE.__str284469|0);HEAP32[((g+16|0)+4|0)>>2]=a;HEAP32[(e+8|0)>>2]=g;a=12;break;case 4:j=0;i=HEAP32[(d+24|0)>>2];a=5;break;case 5:a=0!=(i|0)?6:8;break;case 6:a=7;break;case 7:j=j+1|0;i=HEAP32[(i+16|0)>>2];a=5;break;
case 8:HEAP16[(e+4|0)>>1]=4;HEAP32[(e+12|0)>>2]=0;HEAP32[(e+16|0)>>2]=j-1|0;g=_EnvCreateMultifield(b,j);HEAP32[(e+8|0)>>2]=g;j=1;i=HEAP32[(d+24|0)>>2];a=9;break;case 9:a=0!=(i|0)?10:12;break;case 10:HEAP16[((g+16|0)+((j-1|0)<<3)|0)>>1]=2;HEAP32[(((g+16|0)+((j-1|0)<<3)|0)+4|0)>>2]=HEAP32[(i|0)>>2];a=11;break;case 11:j=j+1|0;i=HEAP32[(i+16|0)>>2];a=9;break;case 12:return;default:assert(0,"bad label: "+a)}}_EnvDeftemplateSlotNames.X=1;
function _CheckDeftemplateAndSlotArguments(h,f,c){var a=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;b=-1==(_EnvArgCountCheck(e,g,0,2)|0)?3:4;break;case 3:d=0;b=11;break;case 4:_EnvRtnUnknown(e,1,j);b=2!=(HEAPU16[(j+4|0)>>1]&65535|0)?5:6;break;case 5:_ExpectedTypeError1(e,g,1,STRING_TABLE.__str264467|0);d=0;b=11;break;case 6:k=HEAP32[(HEAP32[(j+8|0)>>2]+16|0)>>2];b=_EnvFindDeftemplate(e,
k);HEAP32[i>>2]=b;b=0==(HEAP32[i>>2]|0)?7:8;break;case 7:_CantFindItemErrorMessage(e,STRING_TABLE.__str274468|0,k);d=0;b=11;break;case 8:b=0==(_EnvArgTypeCheck(e,g,2,2,j)|0)?9:10;break;case 9:d=0;b=11;break;case 10:d=HEAP32[(j+8|0)>>2];b=11;break;case 11:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_CheckDeftemplateAndSlotArguments.X=1;
function _EnvDeftemplateSlotDefaultP(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;b=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:b=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:d=1;b=15;break;case 5:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=15;break;case 6:k=g;b=_EnvAddSymbol(e,i);
k=b=_FindSlot(k,b,j);b=0==(b|0)?7:8;break;case 7:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=15;break;case 8:b=9;break;case 9:b=0!=(HEAPU32[(k+4|0)>>2]>>>1&1|0)?10:11;break;case 10:d=0;b=15;break;case 11:b=0!=(HEAPU32[(k+4|0)>>2]>>>3&1|0)?12:13;break;case 12:d=2;b=15;break;case 13:b=14;break;case 14:d=1;b=15;break;case 15:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvDeftemplateSlotDefaultP.X=1;
function _EnvDeftemplateSlotDefaultValue(h,f,c,a){var b=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m,n=b+4;g=h;i=f;j=c;k=a;HEAP16[(k+4|0)>>1]=2;HEAP32[(k+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+196|0)>>2]+4|0)>>2];d=0!=(HEAP32[(i+28|0)>>2]&1|0)?3:6;break;case 3:d=0==(_strcmp(j,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:HEAP16[(k+4|0)>>1]=4;e=_EnvCreateMultifield(g,0);HEAP32[(k+
8|0)>>2]=e;HEAP32[(k+12|0)>>2]=1;HEAP32[(k+16|0)>>2]=0;e=1;d=16;break;case 5:_SetEvaluationError(g,1);_InvalidDeftemplateSlotMessage(g,j,HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2],0);e=0;d=16;break;case 6:m=i;d=_EnvAddSymbol(g,j);m=d=_FindSlot(m,d,l);d=0==(d|0)?7:8;break;case 7:_SetEvaluationError(g,1);_InvalidDeftemplateSlotMessage(g,j,HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2],0);e=0;d=16;break;case 8:d=9;break;case 9:d=0!=(HEAPU32[(m+4|0)>>2]>>>1&1|0)?10:11;break;case 10:HEAP16[(k+4|0)>>1]=2;d=_EnvAddSymbol(g,
STRING_TABLE.__str314472|0);HEAP32[(k+8|0)>>2]=d;d=15;break;case 11:d=0!=(_DeftemplateSlotDefault(g,i,m,n,1)|0)?12:13;break;case 12:HEAP32[(k+12|0)>>2]=(HEAP32[(n+12|0)>>2]+1|0)-1|0;HEAP32[(k+16|0)>>2]=(HEAP32[(n+16|0)>>2]+1|0)-1|0;HEAP16[(k+4|0)>>1]=HEAP16[(n+4|0)>>1];HEAP32[(k+8|0)>>2]=HEAP32[(n+8|0)>>2];d=14;break;case 13:e=0;d=16;break;case 14:d=15;break;case 15:e=1;d=16;break;case 16:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_EnvDeftemplateSlotDefaultValue.X=1;
function _EnvDeftemplateSlotCardinality(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l;e=h;g=f;i=c;j=a;d=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:d=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=1;d=_EnvCreateMultifield(e,2);HEAP32[(j+8|0)>>2]=d;HEAP16[(HEAP32[(j+8|0)>>2]+16|0)>>1]=1;HEAP32[((HEAP32[(j+
8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+16|0)>>2];HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+8|0)>>1]=2;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+8|0)>>2];d=14;break;case 5:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=14;break;case 6:l=g;d=_EnvAddSymbol(e,i);l=d=_FindSlot(l,d,k);d=0==(d|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(e,
j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=14;break;case 8:d=9;break;case 9:d=0==(HEAP32[(l+4|0)>>2]&1|0)?10:11;break;case 10:_EnvSetMultifieldErrorValue(e,j);d=14;break;case 11:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=1;d=_EnvCreateMultifield(e,2);HEAP32[(j+8|0)>>2]=d;d=0!=(HEAP32[(l+8|0)>>2]|0)?12:13;break;case 12:HEAP16[(HEAP32[(j+8|0)>>2]+16|0)>>1]=HEAP16[(HEAP32[(HEAP32[(l+8|0)>>2]+24|0)>>2]|0)>>1];HEAP32[((HEAP32[(j+
8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(l+8|0)>>2]+24|0)>>2]+4|0)>>2];HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+8|0)>>1]=HEAP16[(HEAP32[(HEAP32[(l+8|0)>>2]+28|0)>>2]|0)>>1];HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(l+8|0)>>2]+28|0)>>2]+4|0)>>2];d=14;break;case 13:HEAP16[(HEAP32[(j+8|0)>>2]+16|0)>>1]=1;HEAP32[((HEAP32[(j+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+16|0)>>2];HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+8|0)>>1]=2;HEAP32[(((HEAP32[(j+8|
0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+8|0)>>2];d=14;break;case 14:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvDeftemplateSlotCardinality.X=1;
function _EnvDeftemplateSlotAllowedValues(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m,n;e=h;g=f;i=c;j=a;d=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:d=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:HEAP16[(j+4|0)>>1]=2;HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];d=16;break;case 5:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,
1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=16;break;case 6:l=g;d=_EnvAddSymbol(e,i);l=d=_FindSlot(l,d,k);d=0==(d|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=16;break;case 8:d=9;break;case 9:d=0!=(HEAP32[(l+8|0)>>2]|0)?10:11;break;case 10:d=0==(HEAP32[(HEAP32[(l+8|0)>>2]+12|0)>>2]|0)?12:13;break;case 11:d=12;break;case 12:HEAP16[(j+4|0)>>1]=2;HEAP32[(j+8|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|0)>>2];d=16;break;case 13:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;m=_ExpressionSize(HEAP32[(HEAP32[(l+8|0)>>2]+12|0)>>2])-1|0;HEAP32[(j+16|0)>>2]=m;m=_EnvCreateMultifield(e,HEAP32[(j+16|0)>>2]+1|0);HEAP32[(j+8|0)>>2]=m;m=1;n=HEAP32[(HEAP32[(l+8|0)>>2]+12|0)>>2];d=14;break;case 14:d=0!=(n|0)?15:16;break;case 15:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((m-1|0)<<3)|0)>>1]=HEAP16[(n|0)>>1];HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((m-1|0)<<3)|0)+4|0)>>2]=HEAP32[(n+
4|0)>>2];n=HEAP32[(n+12|0)>>2];m=m+1|0;d=14;break;case 16:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvDeftemplateSlotAllowedValues.X=1;
function _EnvDeftemplateSlotRange(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l;e=h;g=f;i=c;j=a;d=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:d=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=1;d=_EnvCreateMultifield(e,2);HEAP32[(j+8|0)>>2]=d;HEAP16[(HEAP32[(j+8|0)>>2]+16|0)>>1]=2;HEAP32[((HEAP32[(j+
8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+12|0)>>2];HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+8|0)>>1]=2;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+8|0)>>2];d=16;break;case 5:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=16;break;case 6:l=g;d=_EnvAddSymbol(e,i);l=d=_FindSlot(l,d,k);d=0==(d|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(e,
j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=16;break;case 8:d=9;break;case 9:d=0==(HEAP32[(l+8|0)>>2]|0)?10:11;break;case 10:d=15;break;case 11:d=0!=(HEAP32[HEAP32[(l+8|0)>>2]>>2]&1|0)?14:12;break;case 12:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>3&1|0)?14:13;break;case 13:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>4&1|0)?14:15;break;case 14:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=1;d=_EnvCreateMultifield(e,2);HEAP32[(j+8|
0)>>2]=d;HEAP16[(HEAP32[(j+8|0)>>2]+16|0)>>1]=HEAP16[(HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]|0)>>1];HEAP32[((HEAP32[(j+8|0)>>2]+16|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(l+8|0)>>2]+16|0)>>2]+4|0)>>2];HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+8|0)>>1]=HEAP16[(HEAP32[(HEAP32[(l+8|0)>>2]+20|0)>>2]|0)>>1];HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+8|0)+4|0)>>2]=HEAP32[(HEAP32[(HEAP32[(l+8|0)>>2]+20|0)>>2]+4|0)>>2];d=16;break;case 15:HEAP16[(j+4|0)>>1]=2;HEAP32[(j+8|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+196|0)>>2]+4|
0)>>2];d=16;break;case 16:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvDeftemplateSlotRange.X=1;
function _EnvDeftemplateSlotTypes(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k=b,l,m,n,o;e=h;g=f;i=c;j=a;o=l=0;d=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:d=0!=(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=39;break;case 5:d=
9;break;case 6:l=g;d=_EnvAddSymbol(e,i);l=d=_FindSlot(l,d,k);d=0==(d|0)?7:8;break;case 7:_EnvSetMultifieldErrorValue(e,j);_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=39;break;case 8:d=9;break;case 9:d=0!=(HEAP32[(g+28|0)>>2]&1|0)?13:10;break;case 10:d=0!=(HEAP32[(l+8|0)>>2]|0)?11:12;break;case 11:d=0!=(HEAP32[HEAP32[(l+8|0)>>2]>>2]&1|0)?13:14;break;case 12:d=13;break;case 13:m=8;o=1;d=15;break;case 14:m=(((((((HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>
1&1)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>2&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>3&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>4&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>5&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>6&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>7&1)|0)+(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>8&1)|0;d=15;break;case 15:HEAP16[(j+4|0)>>1]=4;HEAP32[(j+12|0)>>2]=0;HEAP32[(j+16|0)>>2]=m-1|0;n=_EnvCreateMultifield(e,m);HEAP32[(j+8|0)>>2]=n;n=1;d=0!=(o|0)?17:16;break;case 16:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>
2]>>>3&1|0)?17:18;break;case 17:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str324473|0);var p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=18;break;case 18:d=0!=(o|0)?20:19;break;case 19:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>4&1|0)?20:21;break;case 20:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str334474|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=
d;d=21;break;case 21:d=0!=(o|0)?23:22;break;case 22:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>1&1|0)?23:24;break;case 23:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str344475|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=24;break;case 24:d=0!=(o|0)?26:25;break;case 25:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>2&1|0)?26:27;break;case 26:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str354476|
0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=27;break;case 27:d=0!=(o|0)?29:28;break;case 28:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>7&1|0)?29:30;break;case 29:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str364477|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=30;break;case 30:d=0!=(o|0)?32:31;break;case 31:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>8&1|0)?32:33;break;case 32:HEAP16[((HEAP32[(j+
8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str374478|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=33;break;case 33:d=0!=(o|0)?35:34;break;case 34:d=0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>6&1|0)?35:36;break;case 35:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str384479|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=36;break;case 36:d=0!=(o|0)?38:37;break;case 37:d=
0!=(HEAPU32[HEAP32[(l+8|0)>>2]>>2]>>>5&1|0)?38:39;break;case 38:HEAP16[((HEAP32[(j+8|0)>>2]+16|0)+((n-1|0)<<3)|0)>>1]=2;d=_EnvAddSymbol(e,STRING_TABLE.__str394480|0);p=n;n=p+1|0;HEAP32[(((HEAP32[(j+8|0)>>2]+16|0)+((p-1|0)<<3)|0)+4|0)>>2]=d;d=39;break;case 39:STACKTOP=b;return;default:assert(0,"bad label: "+d)}}_EnvDeftemplateSlotTypes.X=1;
function _EnvDeftemplateSlotMultiP(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;b=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:b=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:d=1;b=10;break;case 5:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=10;break;case 6:k=g;b=_EnvAddSymbol(e,i);k=
b=_FindSlot(k,b,j);b=0==(b|0)?7:8;break;case 7:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=10;break;case 8:b=9;break;case 9:d=HEAP32[(k+4|0)>>2]&1;b=10;break;case 10:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvDeftemplateSlotMultiP.X=1;
function _EnvDeftemplateSlotSingleP(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a,k;e=h;g=f;i=c;b=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:b=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:d=0;b=10;break;case 5:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=10;break;case 6:k=g;b=_EnvAddSymbol(e,i);
k=b=_FindSlot(k,b,j);b=0==(b|0)?7:8;break;case 7:_SetEvaluationError(e,1);_InvalidDeftemplateSlotMessage(e,i,HEAP32[(HEAP32[(g|0)>>2]+16|0)>>2],0);d=0;b=10;break;case 8:b=9;break;case 9:d=(0!=(HEAP32[(k+4|0)>>2]&1|0)^1)&1;b=10;break;case 10:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_EnvDeftemplateSlotSingleP.X=1;
function _EnvDeftemplateSlotExistP(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j=a;e=h;g=f;i=c;b=0!=(HEAP32[(g+28|0)>>2]&1|0)?3:6;break;case 3:b=0==(_strcmp(i,STRING_TABLE.__str284469|0)|0)?4:5;break;case 4:d=1;b=10;break;case 5:d=0;b=10;break;case 6:b=g;var k=_EnvAddSymbol(e,i);b=0==(_FindSlot(b,k,j)|0)?7:8;break;case 7:d=0;b=10;break;case 8:b=9;break;case 9:d=1;b=10;break;
case 10:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}
function _FindTemplateForFactAddress(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;e=0;c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=(HEAP32[(d+4|0)>>2]|0)==(b|0)?5:6;break;case 5:e=d;d=0;c=7;break;case 6:d=HEAP32[(d+68|0)>>2];c=7;break;case 7:c=3;break;case 8:c=0==(e|0)?9:10;break;case 9:a=0;c=18;break;case 10:e=HEAP32[(e+64|0)>>2];c=37!=(HEAPU16[(e|0)>>1]&65535|0)?12:11;break;case 11:c=0==(HEAP32[(e+68|0)>>2]|0)?12:13;break;case 12:a=0;c=18;break;case 13:e=HEAP32[(e+68|0)>>2];c=2!=
(HEAPU16[(e|0)>>1]&65535|0)?16:14;break;case 14:c=0!=(HEAP32[(e+64|0)>>2]|0)?16:15;break;case 15:c=0!=(HEAP32[(e+68|0)>>2]|0)?16:17;break;case 16:a=0;c=18;break;case 17:a=HEAP32[(e+4|0)>>2];c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}_FindTemplateForFactAddress.X=1;
function _UpdateModifyDuplicate(h,f,c,a){var b=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p=b;g=h;i=f;j=c;k=a;i=HEAP32[(i+8|0)>>2];d=35==(HEAPU16[(i|0)>>1]&65535|0)?3:6;break;case 3:m=_FindTemplateForFactAddress(HEAP32[(i+4|0)>>2],k);d=0==(m|0)?4:5;break;case 4:e=1;d=32;break;case 5:d=7;break;case 6:e=1;d=32;break;case 7:n=_LookupConstruct(g,HEAP32[(HEAP32[(HEAP32[(g+16|0)>>2]+
20|0)>>2]|0)>>2],HEAP32[(m+16|0)>>2],0);d=0==(n|0)?8:9;break;case 8:e=1;d=32;break;case 9:d=0!=(HEAP32[(n+28|0)>>2]&1|0)?10:11;break;case 10:e=1;d=32;break;case 11:l=HEAP32[(i+12|0)>>2];d=12;break;case 12:d=0!=(l|0)?13:31;break;case 13:o=d=_FindSlot(n,HEAP32[(l+4|0)>>2],p);d=0==(d|0)?14:15;break;case 14:_InvalidDeftemplateSlotMessage(g,HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(n|0)>>2]+16|0)>>2],1);e=0;d=32;break;case 15:d=0==(HEAP32[(o+4|0)>>2]&1|0)?16:28;break;case 16:d=0==(HEAP32[(l+
8|0)>>2]|0)?17:18;break;case 17:_SingleFieldSlotCardinalityError(g,HEAP32[(HEAP32[(o|0)>>2]+16|0)>>2]);e=0;d=32;break;case 18:d=0!=(HEAP32[(HEAP32[(l+8|0)>>2]+12|0)>>2]|0)?19:20;break;case 19:_SingleFieldSlotCardinalityError(g,HEAP32[(HEAP32[(o|0)>>2]+16|0)>>2]);e=0;d=32;break;case 20:d=36==(HEAPU16[(HEAP32[(l+8|0)>>2]|0)>>1]&65535|0)?24:21;break;case 21:d=30==(HEAPU16[(HEAP32[(l+8|0)>>2]|0)>>1]&65535|0)?22:23;break;case 22:d=109==(HEAP8[HEAP32[(HEAP32[(l+8|0)>>2]+4|0)>>2]+8|0]<<24>>24|0)?24:25;break;
case 23:d=25;break;case 24:_SingleFieldSlotCardinalityError(g,HEAP32[(HEAP32[(o|0)>>2]+16|0)>>2]);e=0;d=32;break;case 25:d=26;break;case 26:d=27;break;case 27:d=28;break;case 28:d=0==(_CheckRHSSlotTypes(g,HEAP32[(l+8|0)>>2],o,j)|0)?29:30;break;case 29:e=0;d=32;break;case 30:HEAP16[(l|0)>>1]=1;d=g;var q=_FindSlotPosition(n,HEAP32[(l+4|0)>>2])-1|0;d=_EnvAddLong(d,q);HEAP32[(l+4|0)>>2]=d;l=HEAP32[(l+12|0)>>2];d=12;break;case 31:e=1;d=32;break;case 32:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+
d)}}_UpdateModifyDuplicate.X=1;
function _ModAndDupParse(h,f,c,a){var b=STACKTOP;STACKTOP+=20;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l=b,m=b+4,n,o,p,q,r,s=b+16,t;g=h;i=f;j=c;k=a;HEAP32[l>>2]=0;_SavePPBuffer(g,STRING_TABLE.__str404481|0);_GetToken(g,j,m);d=35==(HEAPU16[(m|0)>>1]&65535|0)?4:3;break;case 3:d=33==(HEAPU16[(m|0)>>1]&65535|0)?4:5;break;case 4:n=_GenConstant(g,HEAP16[(m|0)>>1],HEAP32[(m+4|0)>>2]);d=11;break;case 5:d=1==(HEAPU16[(m|
0)>>1]&65535|0)?6:9;break;case 6:d=0!=(_TopLevelCommand(g)|0)?8:7;break;case 7:_PrintErrorID(g,STRING_TABLE.__str414482|0,1,1);_EnvPrintRouter(g,STRING_TABLE.__str424483|0,STRING_TABLE.__str434484|0);_EnvPrintRouter(g,STRING_TABLE.__str424483|0,k);_EnvPrintRouter(g,STRING_TABLE.__str424483|0,STRING_TABLE.__str444485|0);_ReturnExpression(g,i);e=0;d=40;break;case 8:n=_GenConstant(g,1,HEAP32[(m+4|0)>>2]);d=10;break;case 9:_ExpectedTypeError2(g,k,1);_ReturnExpression(g,i);e=0;d=40;break;case 10:d=11;
break;case 11:HEAP32[(n+12|0)>>2]=0;HEAP32[(n+8|0)>>2]=0;HEAP32[(i+8|0)>>2]=n;n=HEAP32[(i+8|0)>>2];_GetToken(g,j,m);d=12;break;case 12:d=171!=(HEAPU16[(m|0)>>1]&65535|0)?13:39;break;case 13:_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str404481|0);_SavePPBuffer(g,HEAP32[(m+8|0)>>2]);d=170!=(HEAPU16[(m|0)>>1]&65535|0)?14:15;break;case 14:_SyntaxErrorMessage(g,STRING_TABLE.__str454486|0);_ReturnExpression(g,i);e=0;d=40;break;case 15:_GetToken(g,j,m);d=2!=(HEAPU16[(m|0)>>1]&65535|0)?16:17;break;case 16:_SyntaxErrorMessage(g,
STRING_TABLE.__str454486|0);_ReturnExpression(g,i);e=0;d=40;break;case 17:o=HEAP32[(HEAP32[(i+8|0)>>2]+12|0)>>2];d=18;break;case 18:d=0!=(o|0)?19:23;break;case 19:d=(HEAP32[(o+4|0)>>2]|0)==(HEAP32[(m+4|0)>>2]|0)?20:21;break;case 20:_AlreadyParsedErrorMessage(g,STRING_TABLE.__str464487|0,HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2]);_ReturnExpression(g,i);e=0;d=40;break;case 21:d=22;break;case 22:o=HEAP32[(o+12|0)>>2];d=18;break;case 23:d=_GenConstant(g,2,HEAP32[(m+4|0)>>2]);HEAP32[(n+12|0)>>2]=d;n=HEAP32[(n+
12|0)>>2];t=r=q=0;d=24;break;case 24:d=0!=t<<16>>16^1?25:35;break;case 25:_SavePPBuffer(g,STRING_TABLE.__str404481|0);p=_GetAssertArgument(g,j,m,l,171,0,s);d=0!=(HEAP32[l>>2]|0)?26:29;break;case 26:d=0!=(HEAP32[s>>2]|0)?27:28;break;case 27:_SyntaxErrorMessage(g,STRING_TABLE.__str474488|0);d=28;break;case 28:_ReturnExpression(g,i);e=0;d=40;break;case 29:d=0==(p|0)?30:31;break;case 30:t=1;d=31;break;case 31:d=0==(r|0)?32:33;break;case 32:q=p;d=34;break;case 33:HEAP32[(r+12|0)>>2]=p;d=34;break;case 34:r=
p;d=24;break;case 35:d=171!=(HEAPU16[(m|0)>>1]&65535|0)?36:37;break;case 36:_SyntaxErrorMessage(g,STRING_TABLE.__str454486|0);_ReturnExpression(g,i);_ReturnExpression(g,q);e=0;d=40;break;case 37:_PPBackup(g);_PPBackup(g);_SavePPBuffer(g,STRING_TABLE.__str484489|0);d=38;break;case 38:HEAP32[(n+8|0)>>2]=q;_GetToken(g,j,m);d=12;break;case 39:e=i;d=40;break;case 40:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_ModAndDupParse.X=1;
function _DeftemplateLHSParse(h,f,c){var a=STACKTOP;STACKTOP+=16;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l=a,m=a+12;e=h;g=f;i=c;_GetToken(e,g,l);b=162==(HEAPU16[(l|0)>>1]&65535|0)?4:3;break;case 3:b=161==(HEAPU16[(l|0)>>1]&65535|0)?4:5;break;case 4:_SyntaxErrorMessage(e,STRING_TABLE.__str4496|0);d=0;b=8;break;case 5:j=_GetLHSParseNode(e);HEAP16[(j|0)>>1]=37;b=j+8|0;HEAP32[b>>2]&=-2;HEAP16[(j+34|0)>>1]=
0;HEAP16[(j+40|0)>>1]=1;b=_GetLHSParseNode(e);HEAP32[(j+68|0)>>2]=b;HEAP16[(HEAP32[(j+68|0)>>2]|0)>>1]=2;b=HEAP32[(j+68|0)>>2]+8|0;HEAP32[b>>2]&=-2;HEAP32[(HEAP32[(j+68|0)>>2]+4|0)>>2]=HEAP32[(i|0)>>2];HEAP32[m>>2]=0;k=_GetLHSSlots(e,g,l,i,m);b=0!=(HEAP32[m>>2]|0)?6:7;break;case 6:_ReturnLHSParseNodes(e,k);_ReturnLHSParseNodes(e,j);d=0;b=8;break;case 7:HEAP32[(j+64|0)>>2]=k;d=j;b=8;break;case 8:return h=d,STACKTOP=a,h;default:assert(0,"bad label: "+b)}}_DeftemplateLHSParse.X=1;
function _GetLHSSlots(h,f,c,a,b){var d=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q,r=d;i=h;j=f;k=c;l=a;m=b;p=n=0;e=3;break;case 3:e=171!=(HEAPU16[(k|0)>>1]&65535|0)?4:21;break;case 4:_PPBackup(i);_SavePPBuffer(i,STRING_TABLE.__str14497|0);_SavePPBuffer(i,HEAP32[(k+8|0)>>2]);e=170!=(HEAPU16[(k|0)>>1]&65535|0)?5:6;break;case 5:HEAP32[m>>2]=1;_SyntaxErrorMessage(i,STRING_TABLE.__str4496|
0);_ReturnLHSParseNodes(i,n);g=0;e=22;break;case 6:_GetToken(i,j,k);e=2!=(HEAPU16[(k|0)>>1]&65535|0)?7:8;break;case 7:HEAP32[m>>2]=1;_SyntaxErrorMessage(i,STRING_TABLE.__str4496|0);_ReturnLHSParseNodes(i,n);g=0;e=22;break;case 8:q=e=_FindSlot(l,HEAP32[(k+4|0)>>2],r);e=0==(e|0)?9:10;break;case 9:HEAP32[m>>2]=1;_InvalidDeftemplateSlotMessage(i,HEAP32[(HEAP32[(k+4|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(l|0)>>2]+16|0)>>2],1);_ReturnLHSParseNodes(i,n);g=0;e=22;break;case 10:e=1==(_MultiplyDefinedLHSSlots(i,
n,HEAP32[(k+4|0)>>2])|0)?11:12;break;case 11:HEAP32[m>>2]=1;_ReturnLHSParseNodes(i,n);g=0;e=22;break;case 12:o=_GetSingleLHSSlot(i,j,k,q,m,((HEAP16[r>>1]<<16>>16)+1|0)&65535);e=0!=(HEAP32[m>>2]|0)?13:14;break;case 13:_ReturnLHSParseNodes(i,n);_ReturnLHSParseNodes(i,o);g=0;e=22;break;case 14:e=0==(p|0)?15:16;break;case 15:n=o;e=17;break;case 16:HEAP32[(p+64|0)>>2]=o;e=17;break;case 17:e=18;break;case 18:e=0!=(HEAP32[(o+64|0)>>2]|0)?19:20;break;case 19:o=HEAP32[(o+64|0)>>2];e=18;break;case 20:p=o;_GetToken(i,
j,k);e=3;break;case 21:g=n;e=22;break;case 22:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_GetLHSSlots.X=1;
function _MultiplyDefinedLHSSlots(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;a=3;break;case 3:a=0!=(e|0)?4:8;break;case 4:a=(HEAP32[(e+36|0)>>2]|0)==(g|0)?5:6;break;case 5:_AlreadyParsedErrorMessage(d,STRING_TABLE.__str34499|0,HEAP32[(g+16|0)>>2]);b=1;a=9;break;case 6:a=7;break;case 7:e=HEAP32[(e+64|0)>>2];a=3;break;case 8:b=0;a=9;break;case 9:return b;default:assert(0,"bad label: "+a)}}
function _GetSingleLHSSlot(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p;i=h;j=f;k=c;l=a;m=b;n=d;p=HEAP32[(k+4|0)>>2];_SavePPBuffer(i,STRING_TABLE.__str14497|0);_GetToken(i,j,k);e=0==(HEAP32[(l+4|0)>>2]&1|0)?3:9;break;case 3:o=_RestrictionParse(i,j,k,0,HEAP32[(l|0)>>2],((n<<16>>16)-1|0)&65535,HEAP32[(l+8|0)>>2],0);e=0==(o|0)?4:5;break;case 4:HEAP32[m>>2]=1;g=0;e=18;break;case 5:e=36==(HEAPU16[(o|0)>>1]&65535|0)?7:6;break;case 6:e=4==(HEAPU16[(o|0)>>1]&65535|0)?7:8;break;case 7:_SingleFieldSlotCardinalityError(i,
HEAP32[(HEAP32[(l|0)>>2]+16|0)>>2]);HEAP32[m>>2]=1;_ReturnLHSParseNodes(i,o);g=0;e=18;break;case 8:e=12;break;case 9:o=_RestrictionParse(i,j,k,1,p,((n<<16>>16)-1|0)&65535,HEAP32[(l+8|0)>>2],1);e=0==(o|0)?10:11;break;case 10:HEAP32[m>>2]=1;g=0;e=18;break;case 11:e=12;break;case 12:e=171!=(HEAPU16[(k|0)>>1]&65535|0)?13:14;break;case 13:_PPBackup(i);_SavePPBuffer(i,STRING_TABLE.__str14497|0);_SavePPBuffer(i,HEAP32[(k+8|0)>>2]);_SyntaxErrorMessage(i,STRING_TABLE.__str4496|0);HEAP32[m>>2]=1;_ReturnLHSParseNodes(i,
o);g=0;e=18;break;case 14:e=0==(HEAP32[(o+68|0)>>2]|0)?15:17;break;case 15:e=0!=(HEAP32[(l+4|0)>>2]&1|0)?16:17;break;case 16:_PPBackup(i);_PPBackup(i);_SavePPBuffer(i,STRING_TABLE.__str24498|0);e=17;break;case 17:g=o;e=18;break;case 18:return g;default:assert(0,"bad label: "+e)}}_GetSingleLHSSlot.X=1;
function _ParseDeftemplate(h,f){var c=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c;d=h;e=f;HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+72|0)>>2]=0;_SetPPBufferStatus(d,1);_FlushPPBuffer(d);_SavePPBuffer(d,STRING_TABLE.__str4502|0);a=1==(_Bloaded(d)|0)?3:5;break;case 3:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?5:4;break;case 4:_CannotLoadWithBloadMessage(d,
STRING_TABLE.__str14503|0);b=1;a=26;break;case 5:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+64|0)>>2]=0;g=_GetConstructNameAndComment(d,e,k,STRING_TABLE.__str14503|0,1666,1672,STRING_TABLE.__str24504|0,1,1,1);a=0==(g|0)?6:7;break;case 6:b=1;a=26;break;case 7:a=0!=(_ReservedPatternSymbol(d,HEAP32[(g+16|0)>>2],STRING_TABLE.__str14503|0)|0)?8:9;break;case 8:_ReservedPatternSymbolErrorMsg(d,HEAP32[(g+16|0)>>2],STRING_TABLE.__str34505|0);b=1;a=26;break;case 9:j=_SlotDeclarations(d,e,k);a=1==(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+20|0)>>2]+72|0)>>2]|0)?10:11;break;case 10:b=1;a=26;break;case 11:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+168|0)>>2]+52|0)>>2]|0)?12:13;break;case 12:_ReturnSlots(d,j);b=0;a=26;break;case 13:a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]|0)?14:15;break;case 14:var l=_genalloc(d,48);a=16;break;case 15:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];l=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];a=16;break;case 16:i=l;HEAP32[(i|0)>>2]=g;HEAP32[((i|0)+16|0)>>2]=0;HEAP32[((i|0)+20|0)>>2]=0;HEAP32[(i+24|0)>>2]=j;a=i+28|0;HEAP32[a>>2]&=-2;HEAP16[(i+30|0)>>1]=0;HEAP32[(i+32|0)>>2]=0;a=i+28|0;HEAP32[a>>2]&=-3;a=i+28|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;HEAP32[(i+36|0)>>2]=0;HEAP32[(i+40|0)>>2]=0;HEAP32[(i+44|0)>>2]=0;a=_GetModuleItem(d,
0,HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+4|0)>>2]);HEAP32[((i|0)+8|0)>>2]=a;a=17;break;case 17:a=0!=(j|0)?18:19;break;case 18:a=i+30|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;j=HEAP32[(j+16|0)>>2];a=17;break;case 19:a=1==(_EnvGetConserveMemory(d)|0)?20:21;break;case 20:HEAP32[((i|0)+4|0)>>2]=0;a=22;break;case 21:a=_CopyPPBuffer(d);HEAP32[((i|0)+4|0)>>2]=a;a=22;break;case 22:a=0!=(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+64|0)>>2]&1|0)?24:23;break;case 23:a=0!=(_EnvGetWatchItem(d,STRING_TABLE.__str44506|
0)|0)?24:25;break;case 24:_EnvSetDeftemplateWatch(d,1,i);a=25;break;case 25:_AddConstructToModule(i|0);_InstallDeftemplate(d,i);b=0;a=26;break;case 26:return STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_ParseDeftemplate.X=1;
function _SlotDeclarations(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l;d=h;e=f;g=c;l=k=j=0;a=3;break;case 3:a=171!=(HEAPU16[(g|0)>>1]&65535|0)?4:18;break;case 4:a=170!=(HEAPU16[(g|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(d,STRING_TABLE.__str14503|0);_ReturnSlots(d,j);_ReturnSlots(d,l);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;b=0;a=19;break;case 6:_GetToken(d,e,g);a=2!=(HEAPU16[(g|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(d,STRING_TABLE.__str14503|
0);_ReturnSlots(d,j);_ReturnSlots(d,l);HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;b=0;a=19;break;case 8:i=_ParseSlot4524(d,e,g,j);a=1==(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+20|0)>>2]+72|0)>>2]|0)?9:10;break;case 9:_ReturnSlots(d,i);_ReturnSlots(d,j);_ReturnSlots(d,l);b=0;a=19;break;case 10:a=0!=(i|0)?11:15;break;case 11:a=0==(k|0)?12:13;break;case 12:j=i;a=14;break;case 13:HEAP32[(k+16|0)>>2]=i;a=14;break;case 14:k=i;a=15;break;case 15:_GetToken(d,e,g);a=171!=(HEAPU16[(g|0)>>1]&65535|
0)?16:17;break;case 16:_PPBackup(d);_SavePPBuffer(d,STRING_TABLE.__str54507|0);_SavePPBuffer(d,HEAP32[(g+8|0)>>2]);a=17;break;case 17:a=3;break;case 18:_SavePPBuffer(d,STRING_TABLE.__str64508|0);b=j;a=19;break;case 19:return b;default:assert(0,"bad label: "+a)}}_SlotDeclarations.X=1;
function _InstallDeftemplate(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=HEAP32[(b|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;b=HEAP32[(b+24|0)>>2];c=3;break;case 3:c=0!=(b|0)?4:6;break;case 4:c=HEAP32[(b|0)>>2]+4|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=_AddHashedExpression(a,HEAP32[(b+12|0)>>2]);_ReturnExpression(a,HEAP32[(b+12|0)>>2]);HEAP32[(b+12|0)>>2]=c;c=_AddConstraint(a,HEAP32[(b+8|0)>>2]);HEAP32[(b+8|0)>>2]=c;c=5;break;case 5:b=HEAP32[(b+16|0)>>2];c=3;break;case 6:return;default:assert(0,
"bad label: "+c)}}_InstallDeftemplate.X=1;
function _ParseSlot4524(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o;e=h;g=f;i=c;j=a;b=0!=(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str74509|0)|0)?3:7;break;case 3:b=0!=(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str84510|0)|0)?4:7;break;case 4:b=0!=(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str94511|0)|0)?5:7;break;case 5:b=0!=(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str104512|0)|0)?6:7;break;case 6:_SyntaxErrorMessage(e,
STRING_TABLE.__str14503|0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 7:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str84510|0)|0)?9:8;break;case 8:b=0==(_strcmp(HEAP32[(HEAP32[(i+4|0)>>2]+16|0)>>2],STRING_TABLE.__str104512|0)|0)?9:10;break;case 9:k=1;b=11;break;case 10:k=0;b=11;break;case 11:_SavePPBuffer(e,STRING_TABLE.__str114513|0);_GetToken(e,g,i);b=2!=(HEAPU16[(i|0)>>1]&65535|0)?12:13;break;case 12:_SyntaxErrorMessage(e,STRING_TABLE.__str14503|
0);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 13:l=HEAP32[(i+4|0)>>2];b=14;break;case 14:b=0!=(j|0)?15:18;break;case 15:b=(HEAP32[(j|0)>>2]|0)==(l|0)?16:17;break;case 16:_AlreadyParsedErrorMessage(e,STRING_TABLE.__str124514|0,HEAP32[(HEAP32[(j|0)>>2]+16|0)>>2]);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 17:j=HEAP32[(j+16|0)>>2];b=14;break;case 18:m=_DefinedSlots(e,g,l,k,i);b=0==(m|0)?19:20;break;case 19:HEAP32[(HEAP32[(HEAP32[(e+
16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 20:b=0==(_CheckConstraintParseConflicts(e,HEAP32[(m+8|0)>>2])|0)?21:22;break;case 21:_ReturnSlots(e,m);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 22:b=0!=(HEAPU32[(m+4|0)>>2]>>>2&1|0)?24:23;break;case 23:b=0!=(HEAPU32[(m+4|0)>>2]>>>3&1|0)?24:25;break;case 24:n=_ConstraintCheckExpressionChain(e,HEAP32[(m+12|0)>>2],HEAP32[(m+8|0)>>2]);b=26;break;case 25:n=0;b=26;break;case 26:b=0!=(n|0)?27:32;break;case 27:b=0!=(_EnvGetStaticConstraintChecking(e)|
0)?28:32;break;case 28:b=0!=(HEAPU32[(m+4|0)>>2]>>>3&1|0)?29:30;break;case 29:o=STRING_TABLE.__str134515|0;b=31;break;case 30:o=STRING_TABLE.__str144516|0;b=31;break;case 31:_ConstraintViolationErrorMessage(e,STRING_TABLE.__str154517|0,o,0,0,HEAP32[(m|0)>>2],0,n,HEAP32[(m+8|0)>>2],1);_ReturnSlots(e,m);HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;d=0;b=33;break;case 32:d=m;b=33;break;case 33:return d;default:assert(0,"bad label: "+b)}}_ParseSlot4524.X=1;
function _DefinedSlots(h,f,c,a,b){var d=STACKTOP;STACKTOP+=12;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q=d,r=d+4,s=d+8;i=h;j=f;k=c;l=a;m=b;p=0;e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?3:4;break;case 3:var t=_genalloc(i,20);e=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|
0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];e=5;break;case 5:n=t;HEAP32[(n|0)>>2]=k;HEAP32[(n+12|0)>>2]=0;e=_GetConstraintRecord(i);HEAP32[(n+8|0)>>2]=e;e=0!=(l|0)?6:7;break;case 6:e=HEAP32[(n+8|0)>>2];HEAP32[e>>2]=HEAP32[e>>2]&-131073|131072;e=7;break;case 7:e=n+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-2|l&1;e=n+4|0;HEAP32[e>>2]&=
-3;e=n+4|0;HEAP32[e>>2]&=-5;e=n+4|0;HEAP32[e>>2]&=-9;HEAP32[(n+16|0)>>2]=0;_InitializeConstraintParseRecord(s);_GetToken(i,j,m);e=8;break;case 8:e=171!=(HEAPU16[(m|0)>>1]&65535|0)?9:35;break;case 9:_PPBackup(i);_SavePPBuffer(i,STRING_TABLE.__str114513|0);_SavePPBuffer(i,HEAP32[(m+8|0)>>2]);e=170!=(HEAPU16[(m|0)>>1]&65535|0)?10:11;break;case 10:_SyntaxErrorMessage(i,STRING_TABLE.__str14503|0);_ReturnSlots(i,n);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;g=0;e=36;break;case 11:_GetToken(i,
j,m);e=2!=(HEAPU16[(m|0)>>1]&65535|0)?12:13;break;case 12:_SyntaxErrorMessage(i,STRING_TABLE.__str14503|0);_ReturnSlots(i,n);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;g=0;e=36;break;case 13:e=0!=(_StandardConstraint(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2])|0)?14:17;break;case 14:e=0==(_ParseStandardConstraint(i,j,HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],HEAP32[(n+8|0)>>2],s,l)|0)?15:16;break;case 15:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;_ReturnSlots(i,n);g=0;e=36;break;
case 16:e=34;break;case 17:e=0==(_strcmp(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],STRING_TABLE.__str164518|0)|0)?19:18;break;case 18:e=0==(_strcmp(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],STRING_TABLE.__str174519|0)|0)?19:32;break;case 19:e=0!=(p|0)?20:21;break;case 20:_AlreadyParsedErrorMessage(i,STRING_TABLE.__str184520|0,0);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;_ReturnSlots(i,n);g=0;e=36;break;case 21:e=n+4|0;HEAP32[e>>2]&=-3;e=0==(_strcmp(HEAP32[(HEAP32[(m+4|0)>>2]+16|0)>>2],STRING_TABLE.__str164518|
0)|0)?22:23;break;case 22:e=n+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-5|4;e=n+4|0;HEAP32[e>>2]&=-9;e=24;break;case 23:e=n+4|0;HEAP32[e>>2]&=-5;e=n+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-9|8;e=24;break;case 24:o=_ParseDefault(i,j,l,HEAPU32[(n+4|0)>>2]>>>3&1,1,q,r,HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0);e=1==(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]|0)?25:26;break;case 25:_ReturnSlots(i,n);g=0;e=36;break;case 26:p=1;e=0!=(HEAP32[r>>2]|0)?27:28;break;case 27:e=n+4|0;HEAP32[e>>2]&=-5;e=31;break;case 28:e=
0!=(HEAP32[q>>2]|0)?29:30;break;case 29:e=n+4|0;HEAP32[e>>2]=HEAP32[e>>2]&-3|2;e=n+4|0;HEAP32[e>>2]&=-5;e=30;break;case 30:e=31;break;case 31:HEAP32[(n+12|0)>>2]=o;e=33;break;case 32:_SyntaxErrorMessage(i,STRING_TABLE.__str194521|0);_ReturnSlots(i,n);HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+20|0)>>2]+72|0)>>2]=1;g=0;e=36;break;case 33:e=34;break;case 34:_GetToken(i,j,m);e=8;break;case 35:g=n;e=36;break;case 36:return h=g,STACKTOP=d,h;default:assert(0,"bad label: "+e)}}_DefinedSlots.X=1;
function _FindAssertSlotItem(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=(HEAP32[(d+4|0)>>2]|0)==(HEAP32[(b|0)>>2]|0)?5:6;break;case 5:a=d;c=8;break;case 6:d=HEAP32[(d+12|0)>>2];c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _ParseAssertTemplate(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s,t,u;j=h;k=f;l=c;m=a;n=b;o=d;p=e;r=q=0;g=3;break;case 3:u=g=_ParseSlotLabel(j,k,l,p,m,n);g=0!=(g|0)?4:18;break;case 4:t=q;g=5;break;case 5:g=0!=(t|0)?6:10;break;case 6:g=(HEAP32[(t+4|0)>>2]|0)==(HEAP32[(u|0)>>2]|0)?7:8;break;case 7:_AlreadyParsedErrorMessage(j,STRING_TABLE.__str4525|0,HEAP32[(HEAP32[(u|0)>>2]+16|0)>>2]);HEAP32[m>>2]=1;_ReturnExpression(j,q);i=0;g=21;break;case 8:g=9;break;case 9:t=
HEAP32[(t+12|0)>>2];g=5;break;case 10:s=_ParseAssertSlotValues(j,k,l,u,m,o);g=0!=(HEAP32[m>>2]|0)?11:12;break;case 11:_ReturnExpression(j,q);i=0;g=21;break;case 12:g=0==(_CheckRHSSlotTypes(j,HEAP32[(s+8|0)>>2],u,STRING_TABLE.__str14526|0)|0)?13:14;break;case 13:HEAP32[m>>2]=1;_ReturnExpression(j,q);_ReturnExpression(j,s);i=0;g=21;break;case 14:g=0==(r|0)?15:16;break;case 15:q=s;g=17;break;case 16:HEAP32[(r+12|0)>>2]=s;g=17;break;case 17:r=s;g=3;break;case 18:g=0!=(HEAP32[m>>2]|0)?19:20;break;case 19:_ReturnExpression(j,
q);i=0;g=21;break;case 20:i=_ReorderAssertSlotValues(j,HEAP32[(p+24|0)>>2],q,m);_ReturnExpression(j,q);g=21;break;case 21:return i;default:assert(0,"bad label: "+g)}}_ParseAssertTemplate.X=1;
function _ParseSlotLabel(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p=e;j=h;k=f;l=c;m=a;n=b;g=d;HEAP32[n>>2]=0;_GetToken(j,k,l);g=(HEAPU16[(l|0)>>1]&65535|0)==(g|0)?3:4;break;case 3:i=0;g=11;break;case 4:_PPBackup(j);_SavePPBuffer(j,STRING_TABLE.__str74532|0);_SavePPBuffer(j,HEAP32[(l+8|0)>>2]);g=170!=(HEAPU16[(l|0)>>1]&65535|0)?5:6;break;case 5:_SyntaxErrorMessage(j,
STRING_TABLE.__str84533|0);HEAP32[n>>2]=1;i=0;g=11;break;case 6:_GetToken(j,k,l);g=2!=(HEAPU16[(l|0)>>1]&65535|0)?7:8;break;case 7:_SyntaxErrorMessage(j,STRING_TABLE.__str84533|0);HEAP32[n>>2]=1;i=0;g=11;break;case 8:o=g=_FindSlot(m,HEAP32[(l+4|0)>>2],p);g=0==(g|0)?9:10;break;case 9:_InvalidDeftemplateSlotMessage(j,HEAP32[(HEAP32[(l+4|0)>>2]+16|0)>>2],HEAP32[(HEAP32[(m|0)>>2]+16|0)>>2],1);HEAP32[n>>2]=1;i=0;g=11;break;case 10:i=o;g=11;break;case 11:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+
g)}}_ParseSlotLabel.X=1;
function _ParseAssertSlotValues(h,f,c,a,b,d){var e=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s=e;j=h;k=f;l=c;m=a;n=b;o=d;g=0==(HEAP32[(m+4|0)>>2]&1|0)?3:14;break;case 3:_SavePPBuffer(j,STRING_TABLE.__str74532|0);p=_GetAssertArgument(j,k,l,n,171,o,s);g=0!=(HEAP32[n>>2]|0)?4:7;break;case 4:g=0!=(HEAP32[s>>2]|0)?5:6;break;case 5:_SyntaxErrorMessage(j,STRING_TABLE.__str84533|0);
g=6;break;case 6:i=0;g=36;break;case 7:g=0==(p|0)?8:9;break;case 8:HEAP32[n>>2]=1;_SingleFieldSlotCardinalityError(j,HEAP32[(HEAP32[(m|0)>>2]+16|0)>>2]);i=0;g=36;break;case 9:g=30==(HEAPU16[(p|0)>>1]&65535|0)?10:11;break;case 10:g=109==(HEAP8[HEAP32[(p+4|0)>>2]+8|0]<<24>>24|0)?12:13;break;case 11:g=36==(HEAPU16[(p|0)>>1]&65535|0)?12:13;break;case 12:HEAP32[n>>2]=1;_SingleFieldSlotCardinalityError(j,HEAP32[(HEAP32[(m|0)>>2]+16|0)>>2]);_ReturnExpression(j,p);i=0;g=36;break;case 13:_GetToken(j,k,l);
g=33;break;case 14:_SavePPBuffer(j,STRING_TABLE.__str74532|0);q=_GetAssertArgument(j,k,l,n,171,o,s);g=0!=(HEAP32[n>>2]|0)?15:18;break;case 15:g=0!=(HEAP32[s>>2]|0)?16:17;break;case 16:_SyntaxErrorMessage(j,STRING_TABLE.__str84533|0);g=17;break;case 17:i=0;g=36;break;case 18:g=0==(q|0)?19:20;break;case 19:_PPBackup(j);_PPBackup(j);_SavePPBuffer(j,STRING_TABLE.__str94534|0);g=20;break;case 20:r=q;g=21;break;case 21:g=0!=(r|0)?22:32;break;case 22:g=171==(HEAPU16[(l|0)>>1]&65535|0)?23:24;break;case 23:_SavePPBuffer(j,
STRING_TABLE.__str74532|0);g=25;break;case 24:_SavePPBuffer(j,STRING_TABLE.__str74532|0);g=25;break;case 25:p=_GetAssertArgument(j,k,l,n,171,o,s);g=0!=(HEAP32[n>>2]|0)?26:29;break;case 26:g=0!=(HEAP32[s>>2]|0)?27:28;break;case 27:_SyntaxErrorMessage(j,STRING_TABLE.__str84533|0);g=28;break;case 28:_ReturnExpression(j,q);i=0;g=36;break;case 29:g=0==(p|0)?30:31;break;case 30:_PPBackup(j);_PPBackup(j);_SavePPBuffer(j,STRING_TABLE.__str94534|0);g=31;break;case 31:r=HEAP32[(r+12|0)>>2]=p;g=21;break;case 32:p=
q;g=33;break;case 33:g=171!=(HEAPU16[(l|0)>>1]&65535|0)?34:35;break;case 34:_SingleFieldSlotCardinalityError(j,HEAP32[(HEAP32[(m|0)>>2]+16|0)>>2]);HEAP32[n>>2]=1;_ReturnExpression(j,p);i=0;g=36;break;case 35:g=_GenConstant(j,2,HEAP32[(m|0)>>2]);HEAP32[(g+8|0)>>2]=p;i=g;g=36;break;case 36:return h=i,STACKTOP=e,h;default:assert(0,"bad label: "+g)}}_ParseAssertSlotValues.X=1;
function _ReorderAssertSlotValues(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m;e=h;g=f;i=c;j=a;l=k=0;b=3;break;case 3:b=0!=(g|0)?4:13;break;case 4:m=_GetSlotAssertValues(e,g,i,j);b=0!=(HEAP32[j>>2]|0)?5:6;break;case 5:_ReturnExpression(e,k);d=0;b=14;break;case 6:b=0!=(m|0)?7:11;break;case 7:b=0==(l|0)?8:9;break;case 8:k=m;b=10;break;case 9:HEAP32[(l+12|0)>>2]=m;b=10;break;case 10:l=m;b=11;break;case 11:b=12;break;case 12:g=HEAP32[(g+16|0)>>2];b=3;break;case 13:d=k;b=14;break;case 14:return d;
default:assert(0,"bad label: "+b)}}_ReorderAssertSlotValues.X=1;
function _GetSlotAssertValues(h,f,c,a){var b=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m=b;g=h;i=f;j=c;k=a;j=_FindAssertSlotItem(i,j);d=0!=(j|0)?3:4;break;case 3:l=HEAP32[(j+8|0)>>2];HEAP32[(j+8|0)>>2]=0;d=12;break;case 4:d=0!=(HEAPU32[(i+4|0)>>2]>>>1&1|0)?5:6;break;case 5:_PrintErrorID(g,STRING_TABLE.__str24527|0,1,1);_EnvPrintRouter(g,STRING_TABLE.__str34528|0,STRING_TABLE.__str44529|
0);_EnvPrintRouter(g,STRING_TABLE.__str34528|0,HEAP32[(HEAP32[(i|0)>>2]+16|0)>>2]);_EnvPrintRouter(g,STRING_TABLE.__str34528|0,STRING_TABLE.__str54530|0);HEAP32[k>>2]=1;e=0;d=15;break;case 6:d=0==(HEAPU32[(i+4|0)>>2]>>>2&1|0)?7:9;break;case 7:d=0==(HEAPU32[(i+4|0)>>2]>>>3&1|0)?8:9;break;case 8:_DeriveDefaultFromConstraints(g,HEAP32[(i+8|0)>>2],m,HEAP32[(i+4|0)>>2]&1,1);l=_ConvertValueToExpression(g,m);d=10;break;case 9:l=_CopyExpression(g,HEAP32[(i+12|0)>>2]);d=10;break;case 10:d=11;break;case 11:d=
12;break;case 12:d=0!=(HEAP32[(i+4|0)>>2]&1|0)?13:14;break;case 13:d=g;var n=_AddBitMap(g,__str64531|0,1);d=_GenConstant(d,62,n);HEAP32[(d+8|0)>>2]=l;l=d;d=14;break;case 14:e=l;d=15;break;case 15:return h=e,STACKTOP=b,h;default:assert(0,"bad label: "+d)}}_GetSlotAssertValues.X=1;
function _InvalidDeftemplateSlotMessage(h,f,c,a){_PrintErrorID(h,STRING_TABLE.__str4537|0,1,a);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,STRING_TABLE.__str24539|0);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,f);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,STRING_TABLE.__str34540|0);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,c);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,STRING_TABLE.__str44541|0)}
function _SingleFieldSlotCardinalityError(h,f){_PrintErrorID(h,STRING_TABLE.__str4537|0,2,1);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,STRING_TABLE.__str54542|0);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,f);_EnvPrintRouter(h,STRING_TABLE.__str14538|0,STRING_TABLE.__str64543|0)}
function _MultiIntoSingleFieldSlotError(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;_PrintErrorID(b,STRING_TABLE.__str74544|0,2,1);_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str84545|0);_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str94546|0);a=0!=(d|0)?3:4;break;case 3:_EnvPrintRouter(b,STRING_TABLE.__str14538|0,HEAP32[(HEAP32[(d|0)>>2]+16|0)>>2]);a=5;break;case 4:_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str104547|0);a=5;break;case 5:_EnvPrintRouter(b,
STRING_TABLE.__str14538|0,STRING_TABLE.__str114548|0);a=0!=(e|0)?6:7;break;case 6:_EnvPrintRouter(b,STRING_TABLE.__str14538|0,HEAP32[(HEAP32[(e|0)>>2]+16|0)>>2]);a=8;break;case 7:_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str104547|0);a=8;break;case 8:_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str44541|0);_SetEvaluationError(b,1);return;default:assert(0,"bad label: "+a)}}
function _GetNthSlot(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=f;e=0;d=HEAP32[(c+24|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:7;break;case 4:c=(e|0)==(b|0)?5:6;break;case 5:a=d;c=8;break;case 6:d=HEAP32[(d+16|0)>>2];e=e+1|0;c=3;break;case 7:a=0;c=8;break;case 8:return a;default:assert(0,"bad label: "+c)}}
function _FindSlotPosition(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=f;d=HEAP32[(c+24|0)>>2];e=1;c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=(HEAP32[(d|0)>>2]|0)==(b|0)?5:6;break;case 5:a=e;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+16|0)>>2];e=e+1|0;c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _FindSlot(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;d=h;e=f;g=c;HEAP16[g>>1]=1;d=HEAP32[(d+24|0)>>2];a=3;break;case 3:a=0!=(d|0)?4:7;break;case 4:a=(HEAP32[(d|0)>>2]|0)==(e|0)?5:6;break;case 5:b=d;a=8;break;case 6:a=g;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;d=HEAP32[(d+16|0)>>2];a=3;break;case 7:HEAP16[g>>1]=-1;b=0;a=8;break;case 8:return b;default:assert(0,"bad label: "+a)}}
function _CheckTemplateFact(h,f){var c=STACKTOP;STACKTOP+=44;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k=c,l=c+24,m;b=h;d=f;a=0!=(_EnvGetDynamicConstraintChecking(b)|0)?4:3;break;case 3:a=18;break;case 4:e=(d+48|0)+16|0;i=HEAP32[(d+16|0)>>2];a=0==(i|0)?5:6;break;case 5:a=18;break;case 6:a=0!=(HEAP32[(i+28|0)>>2]&1|0)?7:8;break;case 7:a=18;break;case 8:g=0;j=HEAP32[(i+24|0)>>2];a=9;break;case 9:a=0!=(j|
0)?10:17;break;case 10:a=0==(HEAP32[(j+4|0)>>2]&1|0)?11:12;break;case 11:HEAP16[(k+4|0)>>1]=HEAP16[(e+(g<<3)|0)>>1];HEAP32[(k+8|0)>>2]=HEAP32[((e+(g<<3)|0)+4|0)>>2];g=g+1|0;a=13;break;case 12:HEAP16[(k+4|0)>>1]=4;HEAP32[(k+8|0)>>2]=HEAP32[((e+(g<<3)|0)+4|0)>>2];HEAP32[(k+12|0)>>2]=0;HEAP32[(k+16|0)>>2]=HEAP32[(HEAP32[((e+(g<<3)|0)+4|0)>>2]+8|0)>>2]-1|0;g=g+1|0;a=13;break;case 13:m=_ConstraintCheckDataObject(b,k,HEAP32[(j+8|0)>>2]);a=0!=(m|0)?14:15;break;case 14:a=HEAP32[(d+24|0)>>2];_sprintf(l|0,
STRING_TABLE.__str124549|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=a,tempInt));_PrintErrorID(b,STRING_TABLE.__str134550|0,1,1);_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str144551|0);_PrintDataObject(b,STRING_TABLE.__str14538|0,k);_EnvPrintRouter(b,STRING_TABLE.__str14538|0,STRING_TABLE.__str154552|0);_ConstraintViolationErrorMessage(b,0,l|0,0,0,HEAP32[(j|0)>>2],0,m,HEAP32[(j+8|0)>>2],1);_SetHaltExecution(b,1);a=18;
break;case 15:a=16;break;case 16:j=HEAP32[(j+16|0)>>2];a=9;break;case 17:a=18;break;case 18:STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_CheckTemplateFact.X=1;
function _CheckRHSSlotTypes(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;b=0==(_EnvGetStaticConstraintChecking(e)|0)?3:4;break;case 3:d=1;b=10;break;case 4:k=_ConstraintCheckExpressionChain(e,g,HEAP32[(i+8|0)>>2]);b=0!=(k|0)?5:9;break;case 5:b=5!=(k|0)?6:7;break;case 6:l=STRING_TABLE.__str164553|0;b=8;break;case 7:l=STRING_TABLE.__str174554|0;b=8;break;case 8:_ConstraintViolationErrorMessage(e,l,j,1,0,HEAP32[(i|0)>>2],0,k,HEAP32[(i+8|0)>>2],1);d=0;b=10;break;case 9:d=
1;b=10;break;case 10:return d;default:assert(0,"bad label: "+b)}}_CheckRHSSlotTypes.X=1;
function _PrintTemplateFact(h,f,c,a,b){var d=STACKTOP;STACKTOP+=24;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p=d,q,r;g=h;i=f;e=c;j=a;k=b;q=0;n=HEAP32[(e+16|0)>>2];l=(e+48|0)+16|0;_EnvPrintRouter(g,i,STRING_TABLE.__str184555|0);_EnvPrintRouter(g,i,HEAP32[(HEAP32[(n|0)>>2]+16|0)>>2]);o=HEAP32[(n+24|0)>>2];m=0;e=3;break;case 3:e=0!=(o|0)?4:27;break;case 4:e=0!=(k|0)?5:15;break;case 5:e=0==(HEAPU32[(o+
4|0)>>2]>>>3&1|0)?6:15;break;case 6:_DeftemplateSlotDefault(g,n,o,p,1);e=0==(HEAP32[(o+4|0)>>2]&1|0)?7:11;break;case 7:e=(HEAPU16[(p+4|0)>>1]&65535|0)==(HEAPU16[(l+(m<<3)|0)>>1]&65535|0)?8:10;break;case 8:e=(HEAP32[(p+8|0)>>2]|0)==(HEAP32[((l+(m<<3)|0)+4|0)>>2]|0)?9:10;break;case 9:m=m+1|0;o=HEAP32[(o+16|0)>>2];e=3;break;case 10:e=14;break;case 11:e=0!=(_MultifieldsEqual(HEAP32[(p+8|0)>>2],HEAP32[((l+(m<<3)|0)+4|0)>>2])|0)?12:13;break;case 12:m=m+1|0;o=HEAP32[(o+16|0)>>2];e=3;break;case 13:e=14;break;
case 14:e=15;break;case 15:e=0!=(q|0)?17:16;break;case 16:q=1;_EnvPrintRouter(g,i,STRING_TABLE.__str154552|0);e=17;break;case 17:e=0!=(j|0)?18:19;break;case 18:_EnvPrintRouter(g,i,STRING_TABLE.__str194556|0);e=19;break;case 19:_EnvPrintRouter(g,i,STRING_TABLE.__str184555|0);_EnvPrintRouter(g,i,HEAP32[(HEAP32[(o|0)>>2]+16|0)>>2]);e=0==(HEAP32[(o+4|0)>>2]&1|0)?20:21;break;case 20:_EnvPrintRouter(g,i,STRING_TABLE.__str154552|0);_PrintAtom(g,i,HEAPU16[(l+(m<<3)|0)>>1]&65535,HEAP32[((l+(m<<3)|0)+4|0)>>
2]);e=24;break;case 21:r=HEAP32[((l+(m<<3)|0)+4|0)>>2];e=0<HEAPU32[(r+8|0)>>2]>>>0?22:23;break;case 22:_EnvPrintRouter(g,i,STRING_TABLE.__str154552|0);_PrintMultifield(g,i,HEAP32[((l+(m<<3)|0)+4|0)>>2],0,HEAP32[(r+8|0)>>2]-1|0,0);e=23;break;case 23:e=24;break;case 24:m=m+1|0;_EnvPrintRouter(g,i,STRING_TABLE.__str204557|0);o=HEAP32[(o+16|0)>>2];e=0!=(o|0)?25:26;break;case 25:_EnvPrintRouter(g,i,STRING_TABLE.__str154552|0);e=26;break;case 26:e=3;break;case 27:_EnvPrintRouter(g,i,STRING_TABLE.__str204557|
0);STACKTOP=d;return;default:assert(0,"bad label: "+e)}}_PrintTemplateFact.X=1;
function _UpdateDeftemplateScope(h){var f=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e;a=h;e=_EnvGetNextDefmodule(a,0);c=3;break;case 3:c=0!=(e|0)?4:13;break;case 4:b=_GetModuleItem(a,e,HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+20|0)>>2]+4|0)>>2]);b=HEAP32[(b+4|0)>>2];c=5;break;case 5:c=0!=(b|0)?6:11;break;case 6:c=0!=(_FindImportedConstruct(a,STRING_TABLE.__str214558|0,e,HEAP32[(HEAP32[(b|0)>>
2]+16|0)>>2],d,1,0)|0)?7:8;break;case 7:c=b+28|0;HEAP32[c>>2]=HEAP32[c>>2]&-5|4;c=9;break;case 8:c=b+28|0;HEAP32[c>>2]&=-5;c=9;break;case 9:c=10;break;case 10:b=_EnvGetNextDeftemplate(a,b);c=5;break;case 11:c=12;break;case 12:e=_EnvGetNextDefmodule(a,e);c=3;break;case 13:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_UpdateDeftemplateScope.X=1;
function _CreateImpliedDeftemplate(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g;b=h;d=f;e=c;a=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]|0)?3:4;break;case 3:var i=_genalloc(b,48);a=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+20|0)>>2]+192|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>
2]+16|0)>>2]|0)>>2];i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+236|0)>>2]+16|0)>>2];a=5;break;case 5:g=i;HEAP32[(g|0)>>2]=d;HEAP32[((g|0)+4|0)>>2]=0;HEAP32[((g|0)+20|0)>>2]=0;HEAP32[(g+24|0)>>2]=0;a=g+28|0;HEAP32[a>>2]=HEAP32[a>>2]&-2|e&1;HEAP16[(g+30|0)>>1]=0;a=g+28|0;HEAP32[a>>2]=HEAP32[a>>2]&-5|4;HEAP32[(g+36|0)>>2]=0;HEAP32[(g+40|0)>>2]=0;HEAP32[(g+44|0)>>2]=0;HEAP32[(g+32|0)>>2]=0;a=g+28|0;HEAP32[a>>2]&=-3;HEAP32[((g|0)+16|0)>>2]=0;a=0!=(_EnvGetWatchItem(b,STRING_TABLE.__str224559|0)|0)?6:7;break;
case 6:_EnvSetDeftemplateWatch(b,1,g);a=7;break;case 7:return h=_GetModuleItem(b,0,HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+20|0)>>2]+4|0)>>2]),HEAP32[((g|0)+8|0)>>2]=h,_AddConstructToModule(g|0),_InstallDeftemplate(b,g),g;default:assert(0,"bad label: "+a)}}_CreateImpliedDeftemplate.X=1;function _InitializeUserDataData(h){_AllocateEnvironmentData(h,56,404,0)}function _UserFunctions(){}function _EnvUserFunctions(){}
function _InstallUserDataRecord(h,f){HEAP8[f|0]=HEAP8[HEAP32[(HEAP32[(h+16|0)>>2]+224|0)>>2]+400|0];HEAP32[((HEAP32[(HEAP32[(h+16|0)>>2]+224|0)>>2]|0)+((HEAPU8[HEAP32[(HEAP32[(h+16|0)>>2]+224|0)>>2]+400|0]&255)<<2)|0)>>2]=f;var c=HEAP32[(HEAP32[(h+16|0)>>2]+224|0)>>2]+400|0,a=HEAP8[c];HEAP8[c]=a+1&255;return a}
function _TestUserData(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=(HEAPU8[d|0]&255|0)==(b&255|0)?5:6;break;case 5:a=d;c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+4|0)>>2];c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _DeallocateUtilityData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+4|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]|0)>>2];f=6;break;case 6:f=0!=(a|0)?7:8;break;case 7:f=HEAP32[(a+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+
16|0)>>2];a=f;f=6;break;case 8:return;default:assert(0,"bad label: "+f)}}_DeallocateUtilityData.X=1;
function _FetchUserData(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;i=HEAP32[g>>2];a=3;break;case 3:a=0!=(i|0)?4:8;break;case 4:a=(HEAPU8[i|0]&255|0)==(e&255|0)?5:6;break;case 5:b=i;a=9;break;case 6:a=7;break;case 7:i=HEAP32[(i+4|0)>>2];a=3;break;case 8:i=FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+224|0)>>2]|0)+((e&255)<<2)|0)>>2]+4|0)>>2]](d);HEAP8[i|0]=e;HEAP32[(i+4|0)>>2]=HEAP32[g>>2];b=HEAP32[g>>2]=i;a=9;break;case 9:return b;default:assert(0,"bad label: "+
a)}}_FetchUserData.X=1;function _ClearUserDataList(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+4|0)>>2];FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(a+16|0)>>2]+224|0)>>2]|0)+((HEAPU8[b|0]&255)<<2)|0)>>2]+8|0)>>2]](a,b);b=c;c=3;break;case 5:return;default:assert(0,"bad label: "+c)}}
function _DeleteUserData(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;j=0;i=g;a=3;break;case 3:a=0!=(i|0)?4:11;break;case 4:a=(HEAPU8[i|0]&255|0)==(e&255|0)?5:9;break;case 5:a=0==(j|0)?6:7;break;case 6:g=HEAP32[(i+4|0)>>2];a=8;break;case 7:HEAP32[(j+4|0)>>2]=HEAP32[(i+4|0)>>2];a=8;break;case 8:FUNCTION_TABLE[HEAP32[(HEAP32[((HEAP32[(HEAP32[(d+16|0)>>2]+224|0)>>2]|0)+((e&255)<<2)|0)>>2]+8|0)>>2]](d,i);b=g;a=12;break;case 9:j=i;a=10;break;case 10:i=HEAP32[(i+4|0)>>2];a=3;break;
case 11:b=g;a=12;break;case 12:return b;default:assert(0,"bad label: "+a)}}_DeleteUserData.X=1;
function _InitializeUtilityData(h){_AllocateEnvironmentData(h,55,40,1714);HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+8|0)>>1]=0;HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+10|0)>>1]=1;HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+12|0)>>1]=1;HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+14|0)>>1]=1;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+24|0)>>2]=1E3;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+28|0)>>2]=10240;HEAP32[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+36|0)>>2]=-1}
_InitializeUtilityData.X=1;
function _PeriodicCleanup(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;b=h;d=f;e=c;g=-1;a=0!=HEAP16[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+10|0)>>1]<<16>>16?4:3;break;case 3:e=0;a=4;break;case 4:a=0!=HEAP16[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+12|0)>>1]<<16>>16?5:13;break;case 5:j=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+4|0)>>2];a=6;break;case 6:a=0!=(j|0)?7:12;break;case 7:a=0!=HEAP16[(j+16|0)>>1]<<16>>16?8:9;break;case 8:FUNCTION_TABLE[HEAP32[(j+4|0)>>2]](b);a=10;break;case 9:FUNCTION_TABLE[HEAP32[(j+
4|0)>>2]]();a=10;break;case 10:a=11;break;case 11:j=HEAP32[(j+12|0)>>2];a=6;break;case 12:a=13;break;case 13:a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+36|0)>>2]|0)>(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]|0)?14:15;break;case 14:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+24|0)>>2]=1E3;HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+28|0)>>2]=10240;a=15;break;
case 15:a=0<(HEAP16[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+8|0)>>1]<<16>>16|0)?16:17;break;case 16:a=37;break;case 17:a=0!=(e|0)?18:21;break;case 18:a=HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+16|0)>>2]>>>0<HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+24|0)>>2]>>>0?19:21;break;case 19:a=HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+20|0)>>2]>>>0<HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+28|0)>>2]>>>0?20:21;break;case 20:a=37;break;case 21:a=0!=(d|0)?22:23;break;case 22:g=HEAP32[(HEAP32[(HEAP32[(b+
16|0)>>2]+176|0)>>2]+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]=-1;a=23;break;case 23:_FlushMultifields(b);i=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]|0)>>2];a=24;break;case 24:a=0!=(i|0)?25:30;break;case 25:a=0!=HEAP16[(i+16|0)>>1]<<16>>16?26:27;break;case 26:FUNCTION_TABLE[HEAP32[(i+4|0)>>2]](b);a=28;break;case 27:FUNCTION_TABLE[HEAP32[(i+4|0)>>2]]();a=28;break;case 28:a=29;break;case 29:i=HEAP32[(i+12|0)>>2];a=24;break;case 30:_RemoveEphemeralAtoms(b);a=0!=(d|0)?31:
32;break;case 31:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2]=g;a=32;break;case 32:a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+16|0)>>2]+1E3|0)>>>0>HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+24|0)>>2]>>>0?33:34;break;case 33:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+16|0)>>2]+1E3|0;a=34;break;case 34:a=(HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+20|0)>>2]+10240|0)>>>0>HEAPU32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|
0)>>2]+28|0)>>2]>>>0?35:36;break;case 35:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+28|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+20|0)>>2]+10240|0;a=36;break;case 36:HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+220|0)>>2]+36|0)>>2]=HEAP32[(HEAP32[(HEAP32[(b+16|0)>>2]+176|0)>>2]+12|0)>>2];a=37;break;case 37:return;default:assert(0,"bad label: "+a)}}_PeriodicCleanup.X=1;function _AddCleanupFunction(h,f,c,a){return _AddCPFunction(h,f,c,a,HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]|0,1)}
function _AddCPFunction(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=0;e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?3:4;break;case 3:var r=_genalloc(i,20);e=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];e=5;break;case 5:o=r;HEAP32[(o|0)>>2]=j;HEAP32[(o+4|0)>>2]=k;HEAP32[(o+8|0)>>2]=l;HEAP16[(o+16|0)>>1]=n&65535;e=0==(HEAP32[m>>2]|0)?6:7;break;case 6:HEAP32[(o+12|0)>>2]=0;HEAP32[m>>2]=o;g=1;e=17;break;case 7:p=HEAP32[m>>2];e=8;break;case 8:e=0!=(p|0)?9:10;break;case 9:var s=(l|0)<(HEAP32[(p+8|0)>>2]|0)&1;e=11;break;case 10:s=0;e=11;break;case 11:e=0!=(s|0)?12:13;break;case 12:q=p;p=HEAP32[(p+12|0)>>2];
e=8;break;case 13:e=0==(q|0)?14:15;break;case 14:HEAP32[(o+12|0)>>2]=HEAP32[m>>2];HEAP32[m>>2]=o;e=16;break;case 15:HEAP32[(o+12|0)>>2]=p;HEAP32[(q+12|0)>>2]=o;e=16;break;case 16:g=1;e=17;break;case 17:return g;default:assert(0,"bad label: "+e)}}_AddCPFunction.X=1;function _AddPeriodicFunction(h,f,c){var a;a=_GetCurrentEnvironment();return _AddCPFunction(a,h,f,c,HEAP32[(HEAP32[(a+16|0)>>2]+220|0)>>2]+4|0,0)}
function _EnvAddPeriodicFunction(h,f,c,a){return _AddCPFunction(h,f,c,a,HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+4|0,1)}function _RemoveCleanupFunction(h,f){return _RemoveCPFunction(h,f,HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]|0)}
function _RemoveCPFunction(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j;d=h;e=f;g=c;j=0;i=HEAP32[g>>2];a=3;break;case 3:a=0!=(i|0)?4:10;break;case 4:a=0==(_strcmp(e,HEAP32[(i|0)>>2])|0)?5:9;break;case 5:a=0==(j|0)?6:7;break;case 6:HEAP32[g>>2]=HEAP32[(i+12|0)>>2];a=8;break;case 7:HEAP32[(j+12|0)>>2]=HEAP32[(i+12|0)>>2];a=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]=i;HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+
16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+236|0)>>2]+16|0)>>2];b=1;a=11;break;case 9:j=i;i=HEAP32[(i+12|0)>>2];a=3;break;case 10:b=0;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}_RemoveCPFunction.X=1;function _EnvRemovePeriodicFunction(h,f){return _RemoveCPFunction(h,f,HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+4|0)}
function _StringPrintForm(h,f){var c=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d,e,g=c,i=c+4,j;b=h;d=f;e=0;HEAP32[g>>2]=0;j=HEAP32[i>>2]=0;j=_ExpandStringWithChar(b,34,j,g,i,HEAP32[i>>2]+80|0);a=3;break;case 3:a=0!=(HEAP8[d+e|0]<<24>>24|0)?4:9;break;case 4:a=34==(HEAP8[d+e|0]<<24>>24|0)?6:5;break;case 5:a=92==(HEAP8[d+e|0]<<24>>24|0)?6:7;break;case 6:j=_ExpandStringWithChar(b,92,j,g,i,HEAP32[i>>
2]+80|0);j=_ExpandStringWithChar(b,HEAP8[d+e|0]<<24>>24,j,g,i,HEAP32[i>>2]+80|0);a=8;break;case 7:j=_ExpandStringWithChar(b,HEAP8[d+e|0]<<24>>24,j,g,i,HEAP32[i>>2]+80|0);a=8;break;case 8:e=e+1|0;a=3;break;case 9:return j=_ExpandStringWithChar(b,34,j,g,i,HEAP32[i>>2]+80|0),a=_EnvAddSymbol(b,j),_rm(b,j,HEAP32[i>>2]),b=HEAP32[(a+16|0)>>2],STACKTOP=c,b;default:assert(0,"bad label: "+a)}}_StringPrintForm.X=1;
function _DeallocateCallList(h,f){var c;for(c=2;;)switch(c){case 2:var a,b;a=h;b=f;c=3;break;case 3:c=0!=(b|0)?4:5;break;case 4:c=HEAP32[(b+12|0)>>2];HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]=b;HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+236|0)>>2]+16|0)>>2];b=c;c=3;break;
case 5:return;default:assert(0,"bad label: "+c)}}_DeallocateCallList.X=1;function _SetGarbageCollectionHeuristics(h,f){var c;c=HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+10|0)>>1];HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+10|0)>>1]=f;return c}function _EnvIncrementGCLocks(h){h=HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+8|0;HEAP16[h>>1]=HEAP16[h>>1]+1&65535}
function _EnvDecrementGCLocks(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0<(HEAP16[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+8|0)>>1]<<16>>16|0)?3:4;break;case 3:f=HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+8|0;HEAP16[f>>1]=HEAP16[f>>1]-1&65535;f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}function _EnablePeriodicFunctions(h,f){var c;c=HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+12|0)>>1];HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+12|0)>>1]=f;return c}
function _EnableYieldFunction(h,f){var c;c=HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+14|0)>>1];HEAP16[(HEAP32[(HEAP32[(h+16|0)>>2]+220|0)>>2]+14|0)>>1]=f;return c}
function _ExpandStringWithChar(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;m=d;e=(HEAP32[k>>2]+1|0)>=(HEAP32[l>>2]|0)?3:4;break;case 3:j=_genrealloc(g,j,HEAP32[l>>2],m);HEAP32[l>>2]=m;e=4;break;case 4:e=8!=(i|0)?5:6;break;case 5:HEAP8[j+HEAP32[k>>2]|0]=i&255;e=k;HEAP32[e>>2]=HEAP32[e>>2]+1|0;HEAP8[j+HEAP32[k>>2]|0]=0;e=9;break;case 6:e=0<(HEAP32[k>>2]|0)?7:8;break;case 7:e=k;HEAP32[e>>2]=HEAP32[e>>2]-1|0;e=8;break;case 8:HEAP8[j+HEAP32[k>>2]|0]=0;e=9;break;case 9:return j;
default:assert(0,"bad label: "+e)}}_ExpandStringWithChar.X=1;function _AppendStrings(h,f,c){var a=STACKTOP;STACKTOP+=8;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var b=a+4;HEAP32[a>>2]=0;HEAP32[b>>2]=0;f=_AppendToString(h,f,0,a,b);f=_AppendToString(h,c,f,a,b);c=_EnvAddSymbol(h,f);_rm(h,f,HEAP32[b>>2]);h=HEAP32[(c+16|0)>>2];STACKTOP=a;return h}
function _AppendToString(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m;g=h;i=f;j=c;k=a;l=b;m=_strlen(i);d=((m+HEAP32[k>>2]|0)+1|0)>>>0>HEAPU32[l>>2]>>>0?3:4;break;case 3:j=_genrealloc(g,j,HEAP32[l>>2],(m+HEAP32[k>>2]|0)+1|0);HEAP32[l>>2]=(m+HEAP32[k>>2]|0)+1|0;d=4;break;case 4:d=0==(j|0)?5:6;break;case 5:e=0;d=7;break;case 6:_strcpy(j+HEAP32[k>>2]|0,i);d=k;HEAP32[d>>2]=HEAP32[d>>2]+m|0;e=j;d=7;break;case 7:return e;default:assert(0,"bad label: "+d)}}_AppendToString.X=1;
function _AppendNToString(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o;i=h;j=f;k=c;l=a;m=b;n=d;e=0!=(HEAP8[j+(l-1|0)|0]<<24>>24|0)?3:4;break;case 3:o=l+1|0;e=5;break;case 4:o=l;e=5;break;case 5:e=(o+HEAP32[m>>2]|0)>>>0>HEAPU32[n>>2]>>>0?6:7;break;case 6:k=_genrealloc(i,k,HEAP32[n>>2],HEAP32[m>>2]+o|0);HEAP32[n>>2]=HEAP32[m>>2]+o|0;e=7;break;case 7:e=0==(k|0)?8:9;break;case 8:g=0;e=10;break;case 9:_strncpy(k+HEAP32[m>>2]|0,j,l);e=m;HEAP32[e>>2]=HEAP32[e>>2]+(o-1|0)|0;HEAP8[k+HEAP32[m>>
2]|0]=0;g=k;e=10;break;case 10:return g;default:assert(0,"bad label: "+e)}}_AppendNToString.X=1;
function _AddFunctionToCallList(h,f,c,a,b,d){var e;for(e=2;;)switch(e){case 2:var g,i,j,k,l,m,n,o,p,q;i=h;j=f;k=c;l=a;m=b;n=d;q=0;e=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]|0)?3:4;break;case 3:var r=_genalloc(i,20);e=5;break;case 4:HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(i+
16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];r=HEAP32[(HEAP32[(HEAP32[(i+16|0)>>2]+236|0)>>2]+16|0)>>2];e=5;break;case 5:o=r;HEAP32[(o|0)>>2]=j;HEAP32[(o+4|0)>>2]=l;HEAP32[(o+8|0)>>2]=k;HEAP16[(o+16|0)>>1]=n&65535;e=0==(m|0)?6:7;break;case 6:HEAP32[(o+12|0)>>2]=0;g=o;e=17;break;case 7:p=m;e=8;break;case 8:e=0!=(p|0)?9:10;break;case 9:var s=(k|0)<(HEAP32[(p+8|0)>>2]|0)&1;e=11;break;case 10:s=0;e=11;break;case 11:e=0!=(s|0)?12:13;break;case 12:q=p;p=HEAP32[(p+12|0)>>2];e=8;break;case 13:e=0==(q|0)?14:15;break;
case 14:HEAP32[(o+12|0)>>2]=m;m=o;e=16;break;case 15:HEAP32[(o+12|0)>>2]=p;HEAP32[(q+12|0)>>2]=o;e=16;break;case 16:g=m;e=17;break;case 17:return g;default:assert(0,"bad label: "+e)}}_AddFunctionToCallList.X=1;
function _RemoveFunctionFromCallList(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l;e=h;g=f;i=c;j=a;l=HEAP32[j>>2]=0;k=i;b=3;break;case 3:b=0!=(k|0)?4:10;break;case 4:b=0==(_strcmp(g,HEAP32[(k|0)>>2])|0)?5:9;break;case 5:HEAP32[j>>2]=1;b=0==(l|0)?6:7;break;case 6:i=HEAP32[(k+12|0)>>2];b=8;break;case 7:HEAP32[(l+12|0)>>2]=HEAP32[(k+12|0)>>2];b=8;break;case 8:HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]=k;HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>
2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+20|0)>>2]+80|0)>>2]=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+236|0)>>2]+16|0)>>2];d=i;b=11;break;case 9:l=k;k=HEAP32[(k+12|0)>>2];b=3;break;case 10:d=i;b=11;break;case 11:return d;default:assert(0,"bad label: "+b)}}_RemoveFunctionFromCallList.X=1;
function _ItemHashValue(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i;e=h;b=f;g=c;i=a;b&=65535;b=0==(b|0)?3:1==(b|0)?4:2==(b|0)||3==(b|0)||8==(b|0)?5:4==(b|0)?6:6==(b|0)?7:5==(b|0)||7==(b|0)?8:9;break;case 3:d=g+16|0;d=(tempDoubleI32[0]=HEAP32[d>>2],tempDoubleI32[1]=HEAP32[d+4>>2],tempDoubleF64[0]);d=_HashFloat(d,i);b=10;break;case 4:d=_HashInteger(HEAP32[(g+16|0)>>2],i);b=10;break;case 5:d=_HashSymbol(HEAP32[(g+16|0)>>2],i);b=10;break;case 6:d=_HashMultifield(g,i);b=10;break;case 7:d=(_HashFact(g)>>>
0)%(i>>>0);b=10;break;case 8:d=(g>>>0)%(i>>>0);b=10;break;case 9:_SystemError(e,STRING_TABLE.__str4598|0,1);d=0;b=10;break;case 10:return d;default:assert(0,"bad label: "+b)}}_ItemHashValue.X=1;
function _YieldTime(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+32|0)>>2]|0)?3:5;break;case 3:f=0!=(HEAP16[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+14|0)>>1]<<16>>16|0)?4:5;break;case 4:FUNCTION_TABLE[HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+220|0)>>2]+32|0)>>2]]();f=5;break;case 5:return;default:assert(0,"bad label: "+f)}}function _InitializeWatchData(h){_AllocateEnvironmentData(h,54,4,1716)}
function _DeallocateWatchData(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+216|0)>>2]|0)>>2];f=3;break;case 3:f=0!=(a|0)?4:5;break;case 4:f=HEAP32[(a+24|0)>>2];HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]=a;HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(c+
16|0)>>2]+236|0)>>2]+16|0)>>2];a=f;f=3;break;case 5:return;default:assert(0,"bad label: "+f)}}_DeallocateWatchData.X=1;
function _GetNthWatchName(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=f;e=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+216|0)>>2]|0)>>2];d=1;c=3;break;case 3:c=0!=(e|0)?4:8;break;case 4:c=(d|0)==(b|0)?5:6;break;case 5:a=HEAP32[(e|0)>>2];c=9;break;case 6:c=7;break;case 7:e=HEAP32[(e+24|0)>>2];d=d+1|0;c=3;break;case 8:a=0;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _GetNthWatchValue(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;c=h;b=f;e=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+216|0)>>2]|0)>>2];d=1;c=3;break;case 3:c=0!=(e|0)?4:8;break;case 4:c=(d|0)==(b|0)?5:6;break;case 5:a=HEAP32[HEAP32[(e+4|0)>>2]>>2];c=9;break;case 6:c=7;break;case 7:e=HEAP32[(e+24|0)>>2];d=d+1|0;c=3;break;case 8:a=-1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _AddWatchItem(h,f,c,a,b,d,e){var g;for(g=2;;)switch(g){case 2:var i,j,k,l,m,n,o,p,q,r,s;j=h;k=f;l=c;m=a;n=b;o=d;p=e;r=HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+216|0)>>2]|0)>>2];s=0;g=3;break;case 3:g=0!=(r|0)?4:10;break;case 4:g=0==(_strcmp(HEAP32[(r|0)>>2],k)|0)?5:6;break;case 5:i=0;g=17;break;case 6:g=(n|0)<(HEAP32[(r+12|0)>>2]|0)?7:8;break;case 7:s=r;g=8;break;case 8:g=9;break;case 9:r=HEAP32[(r+24|0)>>2];g=3;break;case 10:g=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>
2]+112|0)>>2]|0)?11:12;break;case 11:var t=_genalloc(j,28);g=13;break;case 12:HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2];HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+20|0)>>2]+112|0)>>2]=HEAP32[(HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2]|0)>>2];t=HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+236|0)>>2]+16|0)>>2];g=13;break;case 13:q=t;HEAP32[(q|0)>>2]=k;HEAP32[(q+4|0)>>2]=m;HEAP32[(q+8|0)>>2]=l;
HEAP32[(q+12|0)>>2]=n;HEAP32[(q+16|0)>>2]=o;HEAP32[(q+20|0)>>2]=p;g=0==(s|0)?14:15;break;case 14:HEAP32[(q+24|0)>>2]=HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+216|0)>>2]|0)>>2];HEAP32[(HEAP32[(HEAP32[(j+16|0)>>2]+216|0)>>2]|0)>>2]=q;g=16;break;case 15:HEAP32[(q+24|0)>>2]=HEAP32[(s+24|0)>>2];HEAP32[(s+24|0)>>2]=q;g=16;break;case 16:i=1;g=17;break;case 17:return i;default:assert(0,"bad label: "+g)}}_AddWatchItem.X=1;function _EnvWatch(h,f){return _EnvSetWatchItem(h,f,1,0)}
function _EnvSetWatchItem(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k;e=h;g=f;i=c;j=a;b=1!=(i|0)?3:5;break;case 3:b=0!=(i|0)?4:5;break;case 4:d=0;b=30;break;case 5:b=0==(_strcmp(g,STRING_TABLE.__str4627|0)|0)?6:17;break;case 6:k=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+216|0)>>2]|0)>>2];b=7;break;case 7:b=0!=(k|0)?8:16;break;case 8:b=0==(j|0)?9:10;break;case 9:HEAP32[HEAP32[(k+4|0)>>2]>>2]=i;b=10;break;case 10:b=0==(HEAP32[(k+16|0)>>2]|0)?11:12;break;case 11:b=14;break;case 12:b=0==(FUNCTION_TABLE[HEAP32[(k+
16|0)>>2]](e,HEAP32[(k+8|0)>>2],i,j)|0)?13:14;break;case 13:_SetEvaluationError(e,1);d=0;b=30;break;case 14:b=15;break;case 15:k=HEAP32[(k+24|0)>>2];b=7;break;case 16:d=1;b=30;break;case 17:k=HEAP32[(HEAP32[(HEAP32[(e+16|0)>>2]+216|0)>>2]|0)>>2];b=18;break;case 18:b=0!=(k|0)?19:29;break;case 19:b=0==(_strcmp(g,HEAP32[(k|0)>>2])|0)?20:27;break;case 20:b=0==(j|0)?21:22;break;case 21:HEAP32[HEAP32[(k+4|0)>>2]>>2]=i;b=22;break;case 22:b=0==(HEAP32[(k+16|0)>>2]|0)?23:24;break;case 23:b=26;break;case 24:b=
0==(FUNCTION_TABLE[HEAP32[(k+16|0)>>2]](e,HEAP32[(k+8|0)>>2],i,j)|0)?25:26;break;case 25:_SetEvaluationError(e,1);d=0;b=30;break;case 26:d=1;b=30;break;case 27:b=28;break;case 28:k=HEAP32[(k+24|0)>>2];b=18;break;case 29:d=0;b=30;break;case 30:return d;default:assert(0,"bad label: "+b)}}_EnvSetWatchItem.X=1;function _EnvUnwatch(h,f){return _EnvSetWatchItem(h,f,0,0)}
function _EnvGetWatchItem(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;c=h;b=f;d=HEAP32[(HEAP32[(HEAP32[(c+16|0)>>2]+216|0)>>2]|0)>>2];c=3;break;case 3:c=0!=(d|0)?4:8;break;case 4:c=0==(_strcmp(b,HEAP32[(d|0)>>2])|0)?5:6;break;case 5:a=HEAP32[HEAP32[(d+4|0)>>2]>>2];c=9;break;case 6:c=7;break;case 7:d=HEAP32[(d+24|0)>>2];c=3;break;case 8:a=-1;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _WatchCommand(h){var f=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e=f+24,g;a=h;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str14628|0,1,2,b)|0)?3:4;break;case 3:c=13;break;case 4:d=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];g=_ValidWatchItem(a,d,e);c=0==(HEAP32[e>>2]|0)?5:6;break;case 5:_SetEvaluationError(a,1);_ExpectedTypeError1(a,STRING_TABLE.__str14628|0,1,STRING_TABLE.__str24629|0);
c=13;break;case 6:c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?7:12;break;case 7:c=0==(g|0)?8:9;break;case 8:c=10;break;case 9:c=0==(HEAP32[(g+16|0)>>2]|0)?10:11;break;case 10:_SetEvaluationError(a,1);_ExpectedCountError(a,STRING_TABLE.__str14628|0,0,1);c=13;break;case 11:c=12;break;case 12:_EnvSetWatchItem(a,d,1,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]);c=13;break;case 13:STACKTOP=f;return;default:assert(0,
"bad label: "+c)}}_WatchCommand.X=1;
function _ValidWatchItem(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i;d=h;e=f;g=c;HEAP32[g>>2]=1;a=0==(_strcmp(e,STRING_TABLE.__str4627|0)|0)?3:4;break;case 3:b=0;a=11;break;case 4:i=HEAP32[(HEAP32[(HEAP32[(d+16|0)>>2]+216|0)>>2]|0)>>2];a=5;break;case 5:a=0!=(i|0)?6:10;break;case 6:a=0==(_strcmp(e,HEAP32[(i|0)>>2])|0)?7:8;break;case 7:b=i;a=11;break;case 8:a=9;break;case 9:i=HEAP32[(i+24|0)>>2];a=5;break;case 10:b=HEAP32[g>>2]=0;a=11;break;case 11:return b;default:assert(0,"bad label: "+
a)}}_ValidWatchItem.X=1;
function _UnwatchCommand(h){var f=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b=f,d,e=f+24,g;a=h;c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str34630|0,1,2,b)|0)?3:4;break;case 3:c=13;break;case 4:d=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];g=_ValidWatchItem(a,d,e);c=0==(HEAP32[e>>2]|0)?5:6;break;case 5:_SetEvaluationError(a,1);_ExpectedTypeError1(a,STRING_TABLE.__str34630|0,1,STRING_TABLE.__str24629|
0);c=13;break;case 6:c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?7:12;break;case 7:c=0==(g|0)?8:9;break;case 8:c=10;break;case 9:c=0==(HEAP32[(g+16|0)>>2]|0)?10:11;break;case 10:_SetEvaluationError(a,1);_ExpectedCountError(a,STRING_TABLE.__str34630|0,0,1);c=13;break;case 11:c=12;break;case 12:_EnvSetWatchItem(a,d,0,HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]);c=13;break;case 13:STACKTOP=f;return;default:assert(0,
"bad label: "+c)}}_UnwatchCommand.X=1;function _CaptureWatchPrints(){return 1}
function _ListWatchItemsCommand(h){var f=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e=f+24;a=h;c=0==(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]|0)?3:11;break;case 3:b=HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+216|0)>>2]|0)>>2];c=4;break;case 4:c=0!=(b|0)?5:10;break;case 5:_EnvPrintRouter(a,STRING_TABLE.__str44631|0,HEAP32[(b|0)>>2]);c=0!=(HEAP32[HEAP32[(b+4|0)>>2]>>
2]|0)?6:7;break;case 6:_EnvPrintRouter(a,STRING_TABLE.__str44631|0,STRING_TABLE.__str54632|0);c=8;break;case 7:_EnvPrintRouter(a,STRING_TABLE.__str44631|0,STRING_TABLE.__str64633|0);c=8;break;case 8:c=9;break;case 9:b=HEAP32[(b+24|0)>>2];c=4;break;case 10:c=26;break;case 11:c=0==(_EnvArgTypeCheck(a,STRING_TABLE.__str74634|0,1,2,d)|0)?12:13;break;case 12:c=26;break;case 13:b=_ValidWatchItem(a,HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2],e);c=0==(HEAP32[e>>2]|0)?15:14;break;case 14:c=0==(b|0)?15:16;break;case 15:_SetEvaluationError(a,
1);_ExpectedTypeError1(a,STRING_TABLE.__str74634|0,1,STRING_TABLE.__str24629|0);c=26;break;case 16:c=0==(HEAP32[(b+20|0)>>2]|0)?17:19;break;case 17:c=0!=(HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2]|0)?18:19;break;case 18:_SetEvaluationError(a,1);_ExpectedCountError(a,STRING_TABLE.__str74634|0,0,1);c=26;break;case 19:_EnvPrintRouter(a,STRING_TABLE.__str44631|0,HEAP32[(b|0)>>2]);c=0!=(HEAP32[HEAP32[(b+4|0)>>2]>>2]|0)?20:21;break;case 20:_EnvPrintRouter(a,
STRING_TABLE.__str44631|0,STRING_TABLE.__str54632|0);c=22;break;case 21:_EnvPrintRouter(a,STRING_TABLE.__str44631|0,STRING_TABLE.__str64633|0);c=22;break;case 22:c=0!=(HEAP32[(b+20|0)>>2]|0)?23:26;break;case 23:c=0==(FUNCTION_TABLE[HEAP32[(b+20|0)>>2]](a,STRING_TABLE.__str44631|0,HEAP32[(b+8|0)>>2],HEAP32[(HEAP32[(HEAP32[(HEAP32[(HEAP32[(a+16|0)>>2]+176|0)>>2]|0)>>2]+8|0)>>2]+12|0)>>2])|0)?24:25;break;case 24:_SetEvaluationError(a,1);c=25;break;case 25:c=26;break;case 26:STACKTOP=f;return;default:assert(0,
"bad label: "+c)}}_ListWatchItemsCommand.X=1;
function _GetWatchItemCommand(h){var f=STACKTOP;STACKTOP+=28;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d=f,e,g=f+24;b=h;c=-1==(_EnvArgCountCheck(b,STRING_TABLE.__str84635|0,0,1)|0)?3:4;break;case 3:a=0;c=11;break;case 4:c=0==(_EnvArgTypeCheck(b,STRING_TABLE.__str84635|0,1,2,d)|0)?5:6;break;case 5:a=0;c=11;break;case 6:e=HEAP32[(HEAP32[(d+8|0)>>2]+16|0)>>2];_ValidWatchItem(b,e,g);c=0==(HEAP32[g>>2]|0)?7:8;break;
case 7:_SetEvaluationError(b,1);_ExpectedTypeError1(b,STRING_TABLE.__str84635|0,1,STRING_TABLE.__str24629|0);a=0;c=11;break;case 8:c=1==(_EnvGetWatchItem(b,e)|0)?9:10;break;case 9:a=1;c=11;break;case 10:a=0;c=11;break;case 11:return h=a,STACKTOP=f,h;default:assert(0,"bad label: "+c)}}
function _WatchFunctionDefinitions(h){_EnvDefineFunction2(h,STRING_TABLE.__str14628|0,118,1718,STRING_TABLE.__str94636|0,STRING_TABLE.__str104637|0);_EnvDefineFunction2(h,STRING_TABLE.__str34630|0,118,1720,STRING_TABLE.__str114638|0,STRING_TABLE.__str104637|0);_EnvDefineFunction2(h,STRING_TABLE.__str84635|0,98,1722,STRING_TABLE.__str124639|0,STRING_TABLE.__str134640|0);_EnvDefineFunction2(h,STRING_TABLE.__str74634|0,118,1724,STRING_TABLE.__str144641|0,STRING_TABLE.__str154642|0);_EnvAddRouter(h,STRING_TABLE.__str164643|
0,1E3,1726,1728,0,0,0);_EnvDeactivateRouter(h,STRING_TABLE.__str164643|0)}function _RecognizeWatchRouters(h,f){var c;for(c=2;;)switch(c){case 2:var a;c=0==(_strcmp(f,STRING_TABLE.__str164643|0)|0)?3:4;break;case 3:a=1;c=5;break;case 4:a=0;c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _malloc(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;c=h;f=244>=c>>>0?3:38;break;case 3:f=11>c>>>0?4:5;break;case 4:var y=16;f=6;break;case 5:y=((c+4|0)+7|0)&-8;f=6;break;case 6:b=y;d=b>>>3;e=HEAPU32[(__gm_|0)>>2]>>>(d>>>0);f=0!=(e&3|0)?7:14;break;case 7:d=d+((e^-1)&1)|0;g=(__gm_+40|0)+(d<<1<<2)|0;i=HEAP32[(g+8|0)>>2];j=HEAP32[(i+8|0)>>2];f=(g|0)==(j|0)?8:9;break;case 8:HEAP32[(__gm_|0)>>2]&=1<<d^-1;f=13;break;case 9:f=0!=(1==(j>>>0>=HEAPU32[(__gm_+
16|0)>>2]>>>0&1)|0)?10:11;break;case 10:HEAP32[(g+8|0)>>2]=j;HEAP32[(j+12|0)>>2]=g;f=12;break;case 11:throw _abort(),"Reached an unreachable!";case 12:f=13;break;case 13:HEAP32[(i+4|0)>>2]=d<<3|3;a=(i+(d<<3)|0)+4|0;HEAP32[a>>2]|=1;a=i+8|0;f=54;break;case 14:f=b>>>0>HEAPU32[(__gm_+8|0)>>2]>>>0?15:36;break;case 15:f=0!=(e|0)?16:31;break;case 16:k=e<<d&(1<<d<<1|-(1<<d<<1)|0);k&=-k|0;k=k-1|0;o=l=k>>>12&16;k>>>=l>>>0;l=p=k>>>5&8;o=o+p|0;k>>>=l>>>0;l=p=k>>>2&4;o=o+p|0;k>>>=l>>>0;l=p=k>>>1&2;o=o+p|0;k>>>=
l>>>0;l=p=k>>>1&1;o=o+p|0;k>>>=l>>>0;o=o+k|0;k=(__gm_+40|0)+(o<<1<<2)|0;l=HEAP32[(k+8|0)>>2];p=HEAP32[(l+8|0)>>2];f=(k|0)==(p|0)?17:18;break;case 17:HEAP32[(__gm_|0)>>2]&=1<<o^-1;f=22;break;case 18:f=0!=(1==(p>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?19:20;break;case 19:HEAP32[(k+8|0)>>2]=p;HEAP32[(p+12|0)>>2]=k;f=21;break;case 20:throw _abort(),"Reached an unreachable!";case 21:f=22;break;case 22:n=(o<<3)-b|0;HEAP32[(l+4|0)>>2]=b|3;m=l+b|0;HEAP32[(m+4|0)>>2]=n|1;HEAP32[(m+n|0)>>2]=n;q=HEAP32[(__gm_+
8|0)>>2];f=0!=(q|0)?23:30;break;case 23:r=HEAP32[(__gm_+20|0)>>2];s=q>>>3;u=t=(__gm_+40|0)+(s<<1<<2)|0;f=0!=(HEAP32[(__gm_|0)>>2]&1<<s|0)?25:24;break;case 24:HEAP32[(__gm_|0)>>2]|=1<<s;f=29;break;case 25:f=0!=(1==(HEAP32[(t+8|0)>>2]>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?26:27;break;case 26:u=HEAP32[(t+8|0)>>2];f=28;break;case 27:throw _abort(),"Reached an unreachable!";case 28:f=29;break;case 29:HEAP32[(t+8|0)>>2]=r;HEAP32[(u+12|0)>>2]=r;HEAP32[(r+8|0)>>2]=u;HEAP32[(r+12|0)>>2]=t;f=30;break;case 30:HEAP32[(__gm_+
8|0)>>2]=n;HEAP32[(__gm_+20|0)>>2]=m;a=l+8|0;f=54;break;case 31:f=0!=(HEAP32[(__gm_+4|0)>>2]|0)?32:34;break;case 32:a=f=_tmalloc_small(__gm_,b);f=0!=(f|0)?33:34;break;case 33:f=54;break;case 34:f=35;break;case 35:f=36;break;case 36:f=37;break;case 37:f=45;break;case 38:f=4294967232<=c>>>0?39:40;break;case 39:b=-1;f=44;break;case 40:b=((c+4|0)+7|0)&-8;f=0!=(HEAP32[(__gm_+4|0)>>2]|0)?41:43;break;case 41:a=f=_tmalloc_large(__gm_,b);f=0!=(f|0)?42:43;break;case 42:f=54;break;case 43:f=44;break;case 44:f=
45;break;case 45:f=b>>>0<=HEAPU32[(__gm_+8|0)>>2]>>>0?46:50;break;case 46:v=HEAP32[(__gm_+8|0)>>2]-b|0;w=HEAP32[(__gm_+20|0)>>2];f=16<=v>>>0?47:48;break;case 47:f=w+b|0;HEAP32[(__gm_+20|0)>>2]=f;HEAP32[(__gm_+8|0)>>2]=v;HEAP32[(f+4|0)>>2]=v|1;HEAP32[(f+v|0)>>2]=v;HEAP32[(w+4|0)>>2]=b|3;f=49;break;case 48:f=HEAP32[(__gm_+8|0)>>2];HEAP32[(__gm_+8|0)>>2]=0;HEAP32[(__gm_+20|0)>>2]=0;HEAP32[(w+4|0)>>2]=f|3;f=(w+f|0)+4|0;HEAP32[f>>2]|=1;f=49;break;case 49:a=w+8|0;f=54;break;case 50:f=b>>>0<HEAPU32[(__gm_+
12|0)>>2]>>>0?51:52;break;case 51:a=HEAP32[(__gm_+12|0)>>2]-b|0;HEAP32[(__gm_+12|0)>>2]=a;f=HEAP32[(__gm_+24|0)>>2];x=f+b|0;HEAP32[(__gm_+24|0)>>2]=x;HEAP32[(x+4|0)>>2]=a|1;HEAP32[(f+4|0)>>2]=b|3;a=f+8|0;f=54;break;case 52:f=53;break;case 53:a=_sys_alloc(__gm_,b);f=54;break;case 54:return a;default:assert(0,"bad label: "+f)}}Module._malloc=_malloc;_malloc.X=1;
function _tmalloc_small(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;a=h;b=f;d=(HEAP32[(a+4|0)>>2]&(-HEAP32[(a+4|0)>>2]|0))-1|0;g=e=d>>>12&16;d>>>=e>>>0;e=c=d>>>5&8;g=g+c|0;d>>>=e>>>0;e=c=d>>>2&4;g=g+c|0;d>>>=e>>>0;e=c=d>>>1&2;g=g+c|0;d>>>=e>>>0;e=c=d>>>1&1;g=g+c|0;d>>>=e>>>0;d=e=HEAP32[((a+304|0)+((g+d|0)<<2)|0)>>2];g=(HEAP32[(d+4|0)>>2]&-8)-b|0;c=3;break;case 3:c=0!=(HEAP32[(d+16|0)>>2]|0)?4:5;break;case 4:var x=HEAP32[(d+16|0)>>2];c=6;break;case 5:x=HEAP32[((d+
16|0)+4|0)>>2];c=6;break;case 6:d=x;c=0!=(x|0)?7:10;break;case 7:i=(HEAP32[(d+4|0)>>2]&-8)-b|0;c=i>>>0<g>>>0?8:9;break;case 8:g=i;e=d;c=9;break;case 9:c=3;break;case 10:c=0!=(1==(e>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?11:70;break;case 11:j=e+b|0;c=0!=(1==(e>>>0<j>>>0&1)|0)?12:69;break;case 12:k=HEAP32[(e+24|0)>>2];c=(HEAP32[(e+12|0)>>2]|0)!=(e|0)?13:17;break;case 13:m=HEAP32[(e+8|0)>>2];l=HEAP32[(e+12|0)>>2];c=0!=(1==(m>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?14:15;break;case 14:HEAP32[(m+12|0)>>2]=l;
HEAP32[(l+8|0)>>2]=m;c=16;break;case 15:throw _abort(),"Reached an unreachable!";case 16:c=29;break;case 17:n=l=(e+16|0)+4|0;l=c=HEAP32[l>>2];c=0!=(c|0)?19:18;break;case 18:n=l=e+16|0;l=c=HEAP32[l>>2];c=0!=(c|0)?19:28;break;case 19:c=20;break;case 20:o=c=(l+16|0)+4|0;if(0!=(HEAP32[c>>2]|0)){var y=1;c=22}else c=21;break;case 21:o=y=l+16|0;y=0!=(HEAP32[y>>2]|0);c=22;break;case 22:c=y?23:24;break;case 23:n=l=o;l=HEAP32[l>>2];c=20;break;case 24:c=0!=(1==(n>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?25:26;break;
case 25:HEAP32[n>>2]=0;c=27;break;case 26:throw _abort(),"Reached an unreachable!";case 27:c=28;break;case 28:c=29;break;case 29:c=0!=(k|0)?30:57;break;case 30:p=(a+304|0)+(HEAP32[(e+28|0)>>2]<<2)|0;c=(e|0)==(HEAP32[p>>2]|0)?31:34;break;case 31:c=l;HEAP32[p>>2]=c;c=0==(c|0)?32:33;break;case 32:c=a+4|0;HEAP32[c>>2]&=1<<HEAP32[(e+28|0)>>2]^-1;c=33;break;case 33:c=41;break;case 34:c=0!=(1==(k>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?35:39;break;case 35:c=(HEAP32[(k+16|0)>>2]|0)==(e|0)?36:37;break;case 36:HEAP32[(k+
16|0)>>2]=l;c=38;break;case 37:HEAP32[((k+16|0)+4|0)>>2]=l;c=38;break;case 38:c=40;break;case 39:throw _abort(),"Reached an unreachable!";case 40:c=41;break;case 41:c=0!=(l|0)?42:56;break;case 42:c=0!=(1==(l>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?43:54;break;case 43:HEAP32[(l+24|0)>>2]=k;q=c=HEAP32[(e+16|0)>>2];c=0!=(c|0)?44:48;break;case 44:c=0!=(1==(q>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?45:46;break;case 45:HEAP32[(l+16|0)>>2]=q;HEAP32[(q+24|0)>>2]=l;c=47;break;case 46:throw _abort(),"Reached an unreachable!";
case 47:c=48;break;case 48:r=c=HEAP32[((e+16|0)+4|0)>>2];c=0!=(c|0)?49:53;break;case 49:c=0!=(1==(r>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?50:51;break;case 50:HEAP32[((l+16|0)+4|0)>>2]=r;HEAP32[(r+24|0)>>2]=l;c=52;break;case 51:throw _abort(),"Reached an unreachable!";case 52:c=53;break;case 53:c=55;break;case 54:throw _abort(),"Reached an unreachable!";case 55:c=56;break;case 56:c=57;break;case 57:c=16>g>>>0?58:59;break;case 58:HEAP32[(e+4|0)>>2]=g+b|3;c=(e+(g+b|0)|0)+4|0;HEAP32[c>>2]|=1;c=68;break;
case 59:HEAP32[(e+4|0)>>2]=b|3;HEAP32[(j+4|0)>>2]=g|1;HEAP32[(j+g|0)>>2]=g;s=HEAP32[(a+8|0)>>2];c=0!=(s|0)?60:67;break;case 60:t=HEAP32[(a+20|0)>>2];u=s>>>3;w=v=(a+40|0)+(u<<1<<2)|0;c=0!=(HEAP32[(a|0)>>2]&1<<u|0)?62:61;break;case 61:c=a|0;HEAP32[c>>2]|=1<<u;c=66;break;case 62:c=0!=(1==(HEAP32[(v+8|0)>>2]>>>0>=HEAPU32[(a+16|0)>>2]>>>0&1)|0)?63:64;break;case 63:w=HEAP32[(v+8|0)>>2];c=65;break;case 64:throw _abort(),"Reached an unreachable!";case 65:c=66;break;case 66:HEAP32[(v+8|0)>>2]=t;HEAP32[(w+
12|0)>>2]=t;HEAP32[(t+8|0)>>2]=w;HEAP32[(t+12|0)>>2]=v;c=67;break;case 67:HEAP32[(a+8|0)>>2]=g;HEAP32[(a+20|0)>>2]=j;c=68;break;case 68:return e+8|0;case 69:c=70;break;case 70:throw _abort(),"Reached an unreachable!";default:assert(0,"bad label: "+c)}}_tmalloc_small.X=1;
function _tmalloc_large(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F,G,H,J,O,K,L;b=h;d=f;e=0;g=-d|0;k=d>>>8;c=0==(k|0)?3:4;break;case 3:j=0;c=8;break;case 4:c=65535<k>>>0?5:6;break;case 5:j=31;c=7;break;case 6:j=k;c=(j-256|0)>>>16&8;j=l=j<<c;l=(l-4096|0)>>>16&4;c=c+l|0;j=l=j<<l;var I=(l-16384|0)>>>16&2;l=I;c=c+I|0;l=(14-c|0)+(j<<l>>>15)|0;j=(l<<1)+(d>>>((l+7|0)>>>0)&1)|0;c=7;break;case 7:c=8;break;case 8:i=c=HEAP32[((b+304|0)+(j<<2)|0)>>2];c=
0!=(c|0)?9:24;break;case 9:var M=d;c=31==(j|0)?10:11;break;case 10:var N=0;c=12;break;case 11:N=31-(((j>>>1)+8|0)-2|0)|0;c=12;break;case 12:m=M<<N;n=0;c=13;break;case 13:p=(HEAP32[(i+4|0)>>2]&-8)-d|0;c=p>>>0<g>>>0?14:17;break;case 14:e=i;g=c=p;c=0==(c|0)?15:16;break;case 15:c=23;break;case 16:c=17;break;case 17:o=HEAP32[((i+16|0)+4|0)>>2];i=HEAP32[((i+16|0)+((m>>>31&1)<<2)|0)>>2];c=0!=(o|0)?18:20;break;case 18:c=(o|0)!=(i|0)?19:20;break;case 19:n=o;c=20;break;case 20:c=0==(i|0)?21:22;break;case 21:i=
n;c=23;break;case 22:m<<=1;c=13;break;case 23:c=24;break;case 24:c=0==(i|0)?25:29;break;case 25:c=0==(e|0)?26:29;break;case 26:q=(1<<j<<1|-(1<<j<<1)|0)&HEAP32[(b+4|0)>>2];c=0!=(q|0)?27:28;break;case 27:i=q&(-q|0);i=i-1|0;l=c=i>>>12&16;i>>>=c>>>0;c=I=i>>>5&8;l=l+I|0;i>>>=c>>>0;c=I=i>>>2&4;l=l+I|0;i>>>=c>>>0;c=I=i>>>1&2;l=l+I|0;i>>>=c>>>0;c=I=i>>>1&1;l=l+I|0;i>>>=c>>>0;i=l+i|0;i=HEAP32[((b+304|0)+(i<<2)|0)>>2];c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=0!=(i|0)?31:37;break;case 31:r=
(HEAP32[(i+4|0)>>2]&-8)-d|0;c=r>>>0<g>>>0?32:33;break;case 32:g=r;e=i;c=33;break;case 33:c=0!=(HEAP32[(i+16|0)>>2]|0)?34:35;break;case 34:var P=HEAP32[(i+16|0)>>2];c=36;break;case 35:P=HEAP32[((i+16|0)+4|0)>>2];c=36;break;case 36:i=P;c=30;break;case 37:c=0!=(e|0)?38:127;break;case 38:c=g>>>0<(HEAP32[(b+8|0)>>2]-d|0)>>>0?39:127;break;case 39:c=0!=(1==(e>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?40:126;break;case 40:s=e+d|0;c=0!=(1==(e>>>0<s>>>0&1)|0)?41:125;break;case 41:t=HEAP32[(e+24|0)>>2];c=(HEAP32[(e+
12|0)>>2]|0)!=(e|0)?42:46;break;case 42:v=HEAP32[(e+8|0)>>2];u=HEAP32[(e+12|0)>>2];c=0!=(1==(v>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?43:44;break;case 43:HEAP32[(v+12|0)>>2]=u;HEAP32[(u+8|0)>>2]=v;c=45;break;case 44:throw _abort(),"Reached an unreachable!";case 45:c=58;break;case 46:w=u=(e+16|0)+4|0;u=c=HEAP32[u>>2];c=0!=(c|0)?48:47;break;case 47:w=u=e+16|0;u=c=HEAP32[u>>2];c=0!=(c|0)?48:57;break;case 48:c=49;break;case 49:x=c=(u+16|0)+4|0;if(0!=(HEAP32[c>>2]|0)){var Q=1;c=51}else c=50;break;case 50:x=
Q=u+16|0;Q=0!=(HEAP32[Q>>2]|0);c=51;break;case 51:c=Q?52:53;break;case 52:w=u=x;u=HEAP32[u>>2];c=49;break;case 53:c=0!=(1==(w>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?54:55;break;case 54:HEAP32[w>>2]=0;c=56;break;case 55:throw _abort(),"Reached an unreachable!";case 56:c=57;break;case 57:c=58;break;case 58:c=0!=(t|0)?59:86;break;case 59:y=(b+304|0)+(HEAP32[(e+28|0)>>2]<<2)|0;c=(e|0)==(HEAP32[y>>2]|0)?60:63;break;case 60:c=u;HEAP32[y>>2]=c;c=0==(c|0)?61:62;break;case 61:c=b+4|0;HEAP32[c>>2]&=1<<HEAP32[(e+
28|0)>>2]^-1;c=62;break;case 62:c=70;break;case 63:c=0!=(1==(t>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?64:68;break;case 64:c=(HEAP32[(t+16|0)>>2]|0)==(e|0)?65:66;break;case 65:HEAP32[(t+16|0)>>2]=u;c=67;break;case 66:HEAP32[((t+16|0)+4|0)>>2]=u;c=67;break;case 67:c=69;break;case 68:throw _abort(),"Reached an unreachable!";case 69:c=70;break;case 70:c=0!=(u|0)?71:85;break;case 71:c=0!=(1==(u>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?72:83;break;case 72:HEAP32[(u+24|0)>>2]=t;A=c=HEAP32[(e+16|0)>>2];c=0!=(c|0)?
73:77;break;case 73:c=0!=(1==(A>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?74:75;break;case 74:HEAP32[(u+16|0)>>2]=A;HEAP32[(A+24|0)>>2]=u;c=76;break;case 75:throw _abort(),"Reached an unreachable!";case 76:c=77;break;case 77:z=c=HEAP32[((e+16|0)+4|0)>>2];c=0!=(c|0)?78:82;break;case 78:c=0!=(1==(z>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?79:80;break;case 79:HEAP32[((u+16|0)+4|0)>>2]=z;HEAP32[(z+24|0)>>2]=u;c=81;break;case 80:throw _abort(),"Reached an unreachable!";case 81:c=82;break;case 82:c=84;break;case 83:throw _abort(),
"Reached an unreachable!";case 84:c=85;break;case 85:c=86;break;case 86:c=16>g>>>0?87:88;break;case 87:HEAP32[(e+4|0)>>2]=g+d|3;c=(e+(g+d|0)|0)+4|0;HEAP32[c>>2]|=1;c=124;break;case 88:HEAP32[(e+4|0)>>2]=d|3;HEAP32[(s+4|0)>>2]=g|1;HEAP32[(s+g|0)>>2]=g;c=32>g>>>3>>>0?89:96;break;case 89:B=g>>>3;D=C=(b+40|0)+(B<<1<<2)|0;c=0!=(HEAP32[(b|0)>>2]&1<<B|0)?91:90;break;case 90:c=b|0;HEAP32[c>>2]|=1<<B;c=95;break;case 91:c=0!=(1==(HEAP32[(C+8|0)>>2]>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?92:93;break;case 92:D=
HEAP32[(C+8|0)>>2];c=94;break;case 93:throw _abort(),"Reached an unreachable!";case 94:c=95;break;case 95:HEAP32[(C+8|0)>>2]=s;HEAP32[(D+12|0)>>2]=s;HEAP32[(s+8|0)>>2]=D;HEAP32[(s+12|0)>>2]=C;c=123;break;case 96:E=s;H=g>>>8;c=0==(H|0)?97:98;break;case 97:G=0;c=102;break;case 98:c=65535<H>>>0?99:100;break;case 99:G=31;c=101;break;case 100:G=H;c=(G-256|0)>>>16&8;G=l=G<<c;l=(l-4096|0)>>>16&4;c=c+l|0;G=l=G<<l;l=I=(l-16384|0)>>>16&2;c=c+I|0;l=(14-c|0)+(G<<l>>>15)|0;G=(l<<1)+(g>>>((l+7|0)>>>0)&1)|0;c=101;
break;case 101:c=102;break;case 102:F=(b+304|0)+(G<<2)|0;HEAP32[(E+28|0)>>2]=G;HEAP32[((E+16|0)+4|0)>>2]=0;HEAP32[(E+16|0)>>2]=0;c=0!=(HEAP32[(b+4|0)>>2]&1<<G|0)?104:103;break;case 103:c=b+4|0;HEAP32[c>>2]|=1<<G;HEAP32[F>>2]=E;HEAP32[(E+24|0)>>2]=F;c=E;HEAP32[(E+12|0)>>2]=c;HEAP32[(E+8|0)>>2]=c;c=122;break;case 104:J=HEAP32[F>>2];var S=g;c=31==(G|0)?105:106;break;case 105:var R=0;c=107;break;case 106:R=31-(((G>>>1)+8|0)-2|0)|0;c=107;break;case 107:O=S<<R;c=108;break;case 108:c=(HEAP32[(J+4|0)>>2]&
-8|0)!=(g|0)?109:115;break;case 109:K=(J+16|0)+((O>>>31&1)<<2)|0;O<<=1;c=0!=(HEAP32[K>>2]|0)?110:111;break;case 110:J=HEAP32[K>>2];c=114;break;case 111:c=0!=(1==(K>>>0>=HEAPU32[(b+16|0)>>2]>>>0&1)|0)?112:113;break;case 112:HEAP32[K>>2]=E;HEAP32[(E+24|0)>>2]=J;c=E;HEAP32[(E+12|0)>>2]=c;HEAP32[(E+8|0)>>2]=c;c=121;break;case 113:throw _abort(),"Reached an unreachable!";case 114:c=120;break;case 115:L=HEAP32[(J+8|0)>>2];if(J>>>0>=HEAPU32[(b+16|0)>>2]>>>0)c=116;else{var T=0;c=117}break;case 116:T=L>>>
0>=HEAPU32[(b+16|0)>>2]>>>0;c=117;break;case 117:c=0!=(1==(T&1)|0)?118:119;break;case 118:c=E;HEAP32[(L+12|0)>>2]=c;HEAP32[(J+8|0)>>2]=c;HEAP32[(E+8|0)>>2]=L;HEAP32[(E+12|0)>>2]=J;HEAP32[(E+24|0)>>2]=0;c=121;break;case 119:throw _abort(),"Reached an unreachable!";case 120:c=108;break;case 121:c=122;break;case 122:c=123;break;case 123:c=124;break;case 124:a=e+8|0;c=128;break;case 125:c=126;break;case 126:throw _abort(),"Reached an unreachable!";case 127:a=0;c=128;break;case 128:return a;default:assert(0,
"bad label: "+c)}}_tmalloc_large.X=1;
function _sys_alloc(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u;b=h;d=f;e=-1;i=g=0;c=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();c=4;break;case 4:c=0!=(HEAP32[(b+440|0)>>2]&0|0)?5:10;break;case 5:c=d>>>0>=HEAPU32[(_mparams+12|0)>>2]>>>0?6:10;break;case 6:c=0!=(HEAP32[(b+12|0)>>2]|0)?7:10;break;case 7:j=_mmap_alloc(b,d);c=0!=(j|0)?8:9;break;case 8:a=j;c=93;break;case 9:c=10;break;case 10:c=0!=(HEAP32[(b+440|0)>>2]&4|0)?43:11;break;case 11:k=-1;
c=0==(HEAP32[(b+24|0)>>2]|0)?12:13;break;case 12:var v=0;c=14;break;case 13:v=_segment_holding(b,HEAP32[(b+24|0)>>2]);c=14;break;case 14:l=v;m=0;c=0==(l|0)?15:23;break;case 15:n=_sbrk(0);c=-1!=(n|0)?16:22;break;case 16:m=((d+48|0)+(HEAP32[(_mparams+8|0)>>2]-1|0)|0)&((HEAP32[(_mparams+8|0)>>2]-1|0)^-1);c=0==(n&(HEAP32[(_mparams+4|0)>>2]-1|0)|0)?18:17;break;case 17:m=m+(((n+(HEAP32[(_mparams+4|0)>>2]-1|0)|0)&((HEAP32[(_mparams+4|0)>>2]-1|0)^-1))-n|0)|0;c=18;break;case 18:c=2147483647>m>>>0?19:21;break;
case 19:k=c=_sbrk(m);c=(c|0)==(n|0)?20:21;break;case 20:e=n;g=m;c=21;break;case 21:c=22;break;case 22:c=27;break;case 23:m=(((d-HEAP32[(b+12|0)>>2]|0)+48|0)+(HEAP32[(_mparams+8|0)>>2]-1|0)|0)&((HEAP32[(_mparams+8|0)>>2]-1|0)^-1);c=2147483647>m>>>0?24:26;break;case 24:k=c=_sbrk(m);c=(c|0)==(HEAP32[(l|0)>>2]+HEAP32[(l+4|0)>>2]|0)?25:26;break;case 25:e=k;g=m;c=26;break;case 26:c=27;break;case 27:c=-1==(e|0)?28:42;break;case 28:c=-1!=(k|0)?29:38;break;case 29:c=2147483647>m>>>0?30:37;break;case 30:c=
m>>>0<(d+48|0)>>>0?31:37;break;case 31:o=(((d+48|0)-m|0)+(HEAP32[(_mparams+8|0)>>2]-1|0)|0)&((HEAP32[(_mparams+8|0)>>2]-1|0)^-1);c=2147483647>o>>>0?32:36;break;case 32:c=_sbrk(o);c=-1!=(c|0)?33:34;break;case 33:m=m+o|0;c=35;break;case 34:_sbrk(-m|0);k=-1;c=35;break;case 35:c=36;break;case 36:c=37;break;case 37:c=38;break;case 38:c=-1!=(k|0)?39:40;break;case 39:e=k;g=m;c=41;break;case 40:c=b+440|0;HEAP32[c>>2]|=4;c=41;break;case 41:c=42;break;case 42:c=43;break;case 43:c=-1==(e|0)?44:53;break;case 44:p=
((d+48|0)+(HEAP32[(_mparams+8|0)>>2]-1|0)|0)&((HEAP32[(_mparams+8|0)>>2]-1|0)^-1);c=2147483647>p>>>0?45:52;break;case 45:q=_sbrk(p);r=_sbrk(0);c=-1!=(q|0)?46:51;break;case 46:c=-1!=(r|0)?47:51;break;case 47:c=q>>>0<r>>>0?48:51;break;case 48:s=r-q|0;c=s>>>0>(d+40|0)>>>0?49:50;break;case 49:e=q;g=s;c=50;break;case 50:c=51;break;case 51:c=52;break;case 52:c=53;break;case 53:c=-1!=(e|0)?54:92;break;case 54:c=b+432|0;u=HEAP32[c>>2]+g|0;HEAP32[c>>2]=u;c=u>>>0>HEAPU32[(b+436|0)>>2]>>>0?55:56;break;case 55:HEAP32[(b+
436|0)>>2]=HEAP32[(b+432|0)>>2];c=56;break;case 56:c=0!=(HEAP32[(b+24|0)>>2]|0)?64:57;break;case 57:c=0==(HEAP32[(b+16|0)>>2]|0)?59:58;break;case 58:c=e>>>0<HEAPU32[(b+16|0)>>2]>>>0?59:60;break;case 59:HEAP32[(b+16|0)>>2]=e;c=60;break;case 60:HEAP32[(b+444|0)>>2]=e;HEAP32[((b+444|0)+4|0)>>2]=g;HEAP32[((b+444|0)+12|0)>>2]=i;HEAP32[(b+36|0)>>2]=HEAP32[(_mparams|0)>>2];HEAP32[(b+32|0)>>2]=-1;_init_bins(b);c=(b|0)==(__gm_|0)?61:62;break;case 61:_init_top(b,e,g-40|0);c=63;break;case 62:c=(b-8|0)+(HEAP32[((b-
8|0)+4|0)>>2]&-8)|0;_init_top(b,c,((e+g|0)-c|0)-40|0);c=63;break;case 63:c=89;break;case 64:t=b+444|0;c=65;break;case 65:if(0!=(t|0))c=66;else{var w=0;c=67}break;case 66:w=(e|0)!=(HEAP32[(t|0)>>2]+HEAP32[(t+4|0)>>2]|0);c=67;break;case 67:c=w?68:69;break;case 68:t=HEAP32[(t+8|0)>>2];c=65;break;case 69:c=0!=(t|0)?70:75;break;case 70:c=0!=(HEAP32[(t+12|0)>>2]&8|0)?75:71;break;case 71:c=(HEAP32[(t+12|0)>>2]&0|0)==(i|0)?72:75;break;case 72:c=HEAP32[(b+24|0)>>2]>>>0>=HEAPU32[(t|0)>>2]>>>0?73:75;break;case 73:c=
HEAP32[(b+24|0)>>2]>>>0<(HEAP32[(t|0)>>2]+HEAP32[(t+4|0)>>2]|0)>>>0?74:75;break;case 74:c=t+4|0;HEAP32[c>>2]=HEAP32[c>>2]+g|0;_init_top(b,HEAP32[(b+24|0)>>2],HEAP32[(b+12|0)>>2]+g|0);c=88;break;case 75:c=e>>>0<HEAPU32[(b+16|0)>>2]>>>0?76:77;break;case 76:HEAP32[(b+16|0)>>2]=e;c=77;break;case 77:t=b+444|0;c=78;break;case 78:if(0!=(t|0))c=79;else{var x=0;c=80}break;case 79:x=(HEAP32[(t|0)>>2]|0)!=(e+g|0);c=80;break;case 80:c=x?81:82;break;case 81:t=HEAP32[(t+8|0)>>2];c=78;break;case 82:c=0!=(t|0)?83:
86;break;case 83:c=0!=(HEAP32[(t+12|0)>>2]&8|0)?86:84;break;case 84:c=(HEAP32[(t+12|0)>>2]&0|0)==(i|0)?85:86;break;case 85:a=HEAP32[(t|0)>>2];HEAP32[(t|0)>>2]=e;c=t+4|0;HEAP32[c>>2]=HEAP32[c>>2]+g|0;a=_prepend_alloc(b,e,a,d);c=93;break;case 86:_add_segment(b,e,g,i);c=87;break;case 87:c=88;break;case 88:c=89;break;case 89:c=d>>>0<HEAPU32[(b+12|0)>>2]>>>0?90:91;break;case 90:a=b+12|0;c=HEAP32[a>>2]-d|0;a=HEAP32[a>>2]=c;c=HEAP32[(b+24|0)>>2];u=c+d|0;HEAP32[(b+24|0)>>2]=u;HEAP32[(u+4|0)>>2]=a|1;HEAP32[(c+
4|0)>>2]=d|3;a=c+8|0;c=93;break;case 91:c=92;break;case 92:a=___errno();HEAP32[a>>2]=12;a=0;c=93;break;case 93:return a;default:assert(0,"bad label: "+c)}}_sys_alloc.X=1;
function _free(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F,G,H,J,O,K,L,I,M,N,P,Q,S,R;c=h;f=0!=(c|0)?3:197;break;case 3:a=c-8|0;if(a>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0)f=4;else{var T=0;f=5}break;case 4:T=1!=(HEAP32[(a+4|0)>>2]&3|0);f=5;break;case 5:f=0!=(1==(T&1)|0)?6:194;break;case 6:b=HEAP32[(a+4|0)>>2]&-8;d=a+b|0;f=0!=(HEAP32[(a+4|0)>>2]&1|0)?78:7;break;case 7:e=HEAP32[(a|0)>>2];f=0==(HEAP32[(a+4|0)>>2]&3|0)?8:9;break;case 8:b=b+(e+16|0)|0;
f=196;break;case 9:f=a+(-e|0)|0;b=b+e|0;a=f;f=0!=(1==(f>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?10:75;break;case 10:f=(a|0)!=(HEAP32[(__gm_+20|0)>>2]|0)?11:71;break;case 11:f=32>e>>>3>>>0?12:24;break;case 12:g=HEAP32[(a+8|0)>>2];i=HEAP32[(a+12|0)>>2];j=e>>>3;f=(g|0)==(i|0)?13:14;break;case 13:HEAP32[(__gm_|0)>>2]&=1<<j^-1;f=23;break;case 14:f=(g|0)==((__gm_+40|0)+(j<<1<<2)|0)?16:15;break;case 15:if(g>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0)f=16;else{var W=0;f=19}break;case 16:if((i|0)==((__gm_+40|0)+(j<<
1<<2)|0)){var V=1;f=18}else f=17;break;case 17:V=i>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0;f=18;break;case 18:W=V;f=19;break;case 19:f=0!=(1==(W&1)|0)?20:21;break;case 20:HEAP32[(g+12|0)>>2]=i;HEAP32[(i+8|0)>>2]=g;f=22;break;case 21:throw _abort(),"Reached an unreachable!";case 22:f=23;break;case 23:f=70;break;case 24:k=a;l=HEAP32[(k+24|0)>>2];f=(HEAP32[(k+12|0)>>2]|0)!=(k|0)?25:29;break;case 25:n=HEAP32[(k+8|0)>>2];m=HEAP32[(k+12|0)>>2];f=0!=(1==(n>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?26:27;break;case 26:HEAP32[(n+
12|0)>>2]=m;HEAP32[(m+8|0)>>2]=n;f=28;break;case 27:throw _abort(),"Reached an unreachable!";case 28:f=41;break;case 29:o=m=(k+16|0)+4|0;m=f=HEAP32[m>>2];f=0!=(f|0)?31:30;break;case 30:o=m=k+16|0;m=f=HEAP32[m>>2];f=0!=(f|0)?31:40;break;case 31:f=32;break;case 32:p=f=(m+16|0)+4|0;if(0!=(HEAP32[f>>2]|0)){var U=1;f=34}else f=33;break;case 33:p=U=m+16|0;U=0!=(HEAP32[U>>2]|0);f=34;break;case 34:f=U?35:36;break;case 35:o=m=p;m=HEAP32[m>>2];f=32;break;case 36:f=0!=(1==(o>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>
0&1)|0)?37:38;break;case 37:HEAP32[o>>2]=0;f=39;break;case 38:throw _abort(),"Reached an unreachable!";case 39:f=40;break;case 40:f=41;break;case 41:f=0!=(l|0)?42:69;break;case 42:q=(__gm_+304|0)+(HEAP32[(k+28|0)>>2]<<2)|0;f=(k|0)==(HEAP32[q>>2]|0)?43:46;break;case 43:f=m;HEAP32[q>>2]=f;f=0==(f|0)?44:45;break;case 44:HEAP32[(__gm_+4|0)>>2]&=1<<HEAP32[(k+28|0)>>2]^-1;f=45;break;case 45:f=53;break;case 46:f=0!=(1==(l>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?47:51;break;case 47:f=(HEAP32[(l+16|0)>>2]|
0)==(k|0)?48:49;break;case 48:HEAP32[(l+16|0)>>2]=m;f=50;break;case 49:HEAP32[((l+16|0)+4|0)>>2]=m;f=50;break;case 50:f=52;break;case 51:throw _abort(),"Reached an unreachable!";case 52:f=53;break;case 53:f=0!=(m|0)?54:68;break;case 54:f=0!=(1==(m>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?55:66;break;case 55:HEAP32[(m+24|0)>>2]=l;r=f=HEAP32[(k+16|0)>>2];f=0!=(f|0)?56:60;break;case 56:f=0!=(1==(r>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?57:58;break;case 57:HEAP32[(m+16|0)>>2]=r;HEAP32[(r+24|0)>>2]=m;
f=59;break;case 58:throw _abort(),"Reached an unreachable!";case 59:f=60;break;case 60:s=f=HEAP32[((k+16|0)+4|0)>>2];f=0!=(f|0)?61:65;break;case 61:f=0!=(1==(s>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?62:63;break;case 62:HEAP32[((m+16|0)+4|0)>>2]=s;HEAP32[(s+24|0)>>2]=m;f=64;break;case 63:throw _abort(),"Reached an unreachable!";case 64:f=65;break;case 65:f=67;break;case 66:throw _abort(),"Reached an unreachable!";case 67:f=68;break;case 68:f=69;break;case 69:f=70;break;case 70:f=74;break;case 71:f=
3==(HEAP32[(d+4|0)>>2]&3|0)?72:73;break;case 72:HEAP32[(__gm_+8|0)>>2]=b;f=d+4|0;HEAP32[f>>2]&=-2;HEAP32[(a+4|0)>>2]=b|1;HEAP32[(a+b|0)>>2]=b;f=196;break;case 73:f=74;break;case 74:f=76;break;case 75:f=195;break;case 76:f=77;break;case 77:f=78;break;case 78:if(a>>>0<d>>>0)f=79;else{var Y=0;f=80}break;case 79:Y=0!=(HEAP32[(d+4|0)>>2]&1|0);f=80;break;case 80:f=0!=(1==(Y&1)|0)?81:193;break;case 81:f=0!=(HEAP32[(d+4|0)>>2]&2|0)?154:82;break;case 82:f=(d|0)==(HEAP32[(__gm_+24|0)>>2]|0)?83:88;break;case 83:t=
HEAP32[(__gm_+12|0)>>2]+b|0;HEAP32[(__gm_+12|0)>>2]=t;HEAP32[(__gm_+24|0)>>2]=a;HEAP32[(a+4|0)>>2]=t|1;f=(a|0)==(HEAP32[(__gm_+20|0)>>2]|0)?84:85;break;case 84:HEAP32[(__gm_+20|0)>>2]=0;HEAP32[(__gm_+8|0)>>2]=0;f=85;break;case 85:f=t>>>0>HEAPU32[(__gm_+28|0)>>2]>>>0?86:87;break;case 86:_sys_trim(__gm_,0);f=87;break;case 87:f=196;break;case 88:f=(d|0)==(HEAP32[(__gm_+20|0)>>2]|0)?89:90;break;case 89:f=HEAP32[(__gm_+8|0)>>2]+b|0;HEAP32[(__gm_+8|0)>>2]=f;HEAP32[(__gm_+20|0)>>2]=a;HEAP32[(a+4|0)>>2]=
f|1;HEAP32[(a+f|0)>>2]=f;f=196;break;case 90:u=HEAP32[(d+4|0)>>2]&-8;b=b+u|0;f=32>u>>>3>>>0?91:103;break;case 91:v=HEAP32[(d+8|0)>>2];w=HEAP32[(d+12|0)>>2];x=u>>>3;f=(v|0)==(w|0)?92:93;break;case 92:HEAP32[(__gm_|0)>>2]&=1<<x^-1;f=102;break;case 93:f=(v|0)==((__gm_+40|0)+(x<<1<<2)|0)?95:94;break;case 94:if(v>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0)f=95;else{var Z=0;f=98}break;case 95:if((w|0)==((__gm_+40|0)+(x<<1<<2)|0)){var $=1;f=97}else f=96;break;case 96:$=w>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0;f=97;break;
case 97:Z=$;f=98;break;case 98:f=0!=(1==(Z&1)|0)?99:100;break;case 99:HEAP32[(v+12|0)>>2]=w;HEAP32[(w+8|0)>>2]=v;f=101;break;case 100:throw _abort(),"Reached an unreachable!";case 101:f=102;break;case 102:f=149;break;case 103:y=d;A=HEAP32[(y+24|0)>>2];f=(HEAP32[(y+12|0)>>2]|0)!=(y|0)?104:108;break;case 104:B=HEAP32[(y+8|0)>>2];z=HEAP32[(y+12|0)>>2];f=0!=(1==(B>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?105:106;break;case 105:HEAP32[(B+12|0)>>2]=z;HEAP32[(z+8|0)>>2]=B;f=107;break;case 106:throw _abort(),
"Reached an unreachable!";case 107:f=120;break;case 108:C=z=(y+16|0)+4|0;z=f=HEAP32[z>>2];f=0!=(f|0)?110:109;break;case 109:C=z=y+16|0;z=f=HEAP32[z>>2];f=0!=(f|0)?110:119;break;case 110:f=111;break;case 111:D=f=(z+16|0)+4|0;if(0!=(HEAP32[f>>2]|0)){var X=1;f=113}else f=112;break;case 112:D=X=z+16|0;X=0!=(HEAP32[X>>2]|0);f=113;break;case 113:f=X?114:115;break;case 114:C=z=D;z=HEAP32[z>>2];f=111;break;case 115:f=0!=(1==(C>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?116:117;break;case 116:HEAP32[C>>2]=0;
f=118;break;case 117:throw _abort(),"Reached an unreachable!";case 118:f=119;break;case 119:f=120;break;case 120:f=0!=(A|0)?121:148;break;case 121:E=(__gm_+304|0)+(HEAP32[(y+28|0)>>2]<<2)|0;f=(y|0)==(HEAP32[E>>2]|0)?122:125;break;case 122:f=z;HEAP32[E>>2]=f;f=0==(f|0)?123:124;break;case 123:HEAP32[(__gm_+4|0)>>2]&=1<<HEAP32[(y+28|0)>>2]^-1;f=124;break;case 124:f=132;break;case 125:f=0!=(1==(A>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?126:130;break;case 126:f=(HEAP32[(A+16|0)>>2]|0)==(y|0)?127:128;break;
case 127:HEAP32[(A+16|0)>>2]=z;f=129;break;case 128:HEAP32[((A+16|0)+4|0)>>2]=z;f=129;break;case 129:f=131;break;case 130:throw _abort(),"Reached an unreachable!";case 131:f=132;break;case 132:f=0!=(z|0)?133:147;break;case 133:f=0!=(1==(z>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?134:145;break;case 134:HEAP32[(z+24|0)>>2]=A;F=f=HEAP32[(y+16|0)>>2];f=0!=(f|0)?135:139;break;case 135:f=0!=(1==(F>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?136:137;break;case 136:HEAP32[(z+16|0)>>2]=F;HEAP32[(F+24|0)>>2]=z;
f=138;break;case 137:throw _abort(),"Reached an unreachable!";case 138:f=139;break;case 139:G=f=HEAP32[((y+16|0)+4|0)>>2];f=0!=(f|0)?140:144;break;case 140:f=0!=(1==(G>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?141:142;break;case 141:HEAP32[((z+16|0)+4|0)>>2]=G;HEAP32[(G+24|0)>>2]=z;f=143;break;case 142:throw _abort(),"Reached an unreachable!";case 143:f=144;break;case 144:f=146;break;case 145:throw _abort(),"Reached an unreachable!";case 146:f=147;break;case 147:f=148;break;case 148:f=149;break;case 149:HEAP32[(a+
4|0)>>2]=b|1;HEAP32[(a+b|0)>>2]=b;f=(a|0)==(HEAP32[(__gm_+20|0)>>2]|0)?150:151;break;case 150:HEAP32[(__gm_+8|0)>>2]=b;f=196;break;case 151:f=152;break;case 152:f=153;break;case 153:f=155;break;case 154:f=d+4|0;HEAP32[f>>2]&=-2;HEAP32[(a+4|0)>>2]=b|1;HEAP32[(a+b|0)>>2]=b;f=155;break;case 155:f=32>b>>>3>>>0?156:163;break;case 156:H=b>>>3;O=J=(__gm_+40|0)+(H<<1<<2)|0;f=0!=(HEAP32[(__gm_|0)>>2]&1<<H|0)?158:157;break;case 157:HEAP32[(__gm_|0)>>2]|=1<<H;f=162;break;case 158:f=0!=(1==(HEAP32[(J+8|0)>>2]>>>
0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?159:160;break;case 159:O=HEAP32[(J+8|0)>>2];f=161;break;case 160:throw _abort(),"Reached an unreachable!";case 161:f=162;break;case 162:HEAP32[(J+8|0)>>2]=a;HEAP32[(O+12|0)>>2]=a;HEAP32[(a+8|0)>>2]=O;HEAP32[(a+12|0)>>2]=J;f=192;break;case 163:K=a;M=b>>>8;f=0==(M|0)?164:165;break;case 164:I=0;f=169;break;case 165:f=65535<M>>>0?166:167;break;case 166:I=31;f=168;break;case 167:I=M;f=(I-256|0)>>>16&8;I=N=I<<f;N=(N-4096|0)>>>16&4;f=f+N|0;I=N=I<<N;var aa=(N-16384|0)>>>
16&2;N=aa;f=f+aa|0;N=(14-f|0)+(I<<N>>>15)|0;I=(N<<1)+(b>>>((N+7|0)>>>0)&1)|0;f=168;break;case 168:f=169;break;case 169:L=(__gm_+304|0)+(I<<2)|0;HEAP32[(K+28|0)>>2]=I;HEAP32[((K+16|0)+4|0)>>2]=0;HEAP32[(K+16|0)>>2]=0;f=0!=(HEAP32[(__gm_+4|0)>>2]&1<<I|0)?171:170;break;case 170:HEAP32[(__gm_+4|0)>>2]|=1<<I;HEAP32[L>>2]=K;HEAP32[(K+24|0)>>2]=L;f=K;HEAP32[(K+12|0)>>2]=f;HEAP32[(K+8|0)>>2]=f;f=189;break;case 171:P=HEAP32[L>>2];var da=b;f=31==(I|0)?172:173;break;case 172:var ba=0;f=174;break;case 173:ba=
31-(((I>>>1)+8|0)-2|0)|0;f=174;break;case 174:Q=da<<ba;f=175;break;case 175:f=(HEAP32[(P+4|0)>>2]&-8|0)!=(b|0)?176:182;break;case 176:S=(P+16|0)+((Q>>>31&1)<<2)|0;Q<<=1;f=0!=(HEAP32[S>>2]|0)?177:178;break;case 177:P=HEAP32[S>>2];f=181;break;case 178:f=0!=(1==(S>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0&1)|0)?179:180;break;case 179:HEAP32[S>>2]=K;HEAP32[(K+24|0)>>2]=P;f=K;HEAP32[(K+12|0)>>2]=f;HEAP32[(K+8|0)>>2]=f;f=188;break;case 180:throw _abort(),"Reached an unreachable!";case 181:f=187;break;case 182:R=
HEAP32[(P+8|0)>>2];if(P>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0)f=183;else{var ca=0;f=184}break;case 183:ca=R>>>0>=HEAPU32[(__gm_+16|0)>>2]>>>0;f=184;break;case 184:f=0!=(1==(ca&1)|0)?185:186;break;case 185:f=K;HEAP32[(R+12|0)>>2]=f;HEAP32[(P+8|0)>>2]=f;HEAP32[(K+8|0)>>2]=R;HEAP32[(K+12|0)>>2]=P;HEAP32[(K+24|0)>>2]=0;f=188;break;case 186:throw _abort(),"Reached an unreachable!";case 187:f=175;break;case 188:f=189;break;case 189:f=HEAP32[(__gm_+32|0)>>2]-1|0;HEAP32[(__gm_+32|0)>>2]=f;f=0==(f|0)?190:191;
break;case 190:_release_unused_segments(__gm_);f=191;break;case 191:f=192;break;case 192:f=196;break;case 193:f=194;break;case 194:f=195;break;case 195:throw _abort(),"Reached an unreachable!";case 196:f=197;break;case 197:return;default:assert(0,"bad label: "+f)}}Module._free=_free;_free.X=1;
function _sys_trim(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i,j,k;a=h;b=f;d=0;c=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();c=4;break;case 4:c=4294967232>b>>>0?5:26;break;case 5:c=0!=(HEAP32[(a+24|0)>>2]|0)?6:26;break;case 6:b=b+40|0;c=HEAPU32[(a+12|0)>>2]>>>0>b>>>0?7:22;break;case 7:e=HEAP32[(_mparams+8|0)>>2];g=(Math.floor((((HEAP32[(a+12|0)>>2]-b|0)+(e-1|0)|0)>>>0)/(e>>>0))-1|0)*e|0;i=_segment_holding(a,HEAP32[(a+24|0)>>2]);c=0!=(HEAP32[(i+12|0)>>2]&8|0)?19:8;break;
case 8:c=0!=(HEAP32[(i+12|0)>>2]&0|0)?9:10;break;case 9:c=18;break;case 10:c=2147483647<=g>>>0?11:12;break;case 11:g=-2147483648-e|0;c=12;break;case 12:j=_sbrk(0);c=(j|0)==(HEAP32[(i|0)>>2]+HEAP32[(i+4|0)>>2]|0)?13:17;break;case 13:c=_sbrk(-g|0);k=_sbrk(0);c=-1!=(c|0)?14:16;break;case 14:c=k>>>0<j>>>0?15:16;break;case 15:d=j-k|0;c=16;break;case 16:c=17;break;case 17:c=18;break;case 18:c=19;break;case 19:c=0!=(d|0)?20:21;break;case 20:c=i+4|0;HEAP32[c>>2]=HEAP32[c>>2]-d|0;c=a+432|0;HEAP32[c>>2]=HEAP32[c>>
2]-d|0;_init_top(a,HEAP32[(a+24|0)>>2],HEAP32[(a+12|0)>>2]-d|0);c=21;break;case 21:c=22;break;case 22:c=0==(d|0)?23:25;break;case 23:c=HEAPU32[(a+12|0)>>2]>>>0>HEAPU32[(a+28|0)>>2]>>>0?24:25;break;case 24:HEAP32[(a+28|0)>>2]=-1;c=25;break;case 25:c=26;break;case 26:return 0!=(d|0)?1:0;default:assert(0,"bad label: "+c)}}_sys_trim.X=1;
function _calloc(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;a=h;b=f;e=0;c=0!=(a|0)?3:7;break;case 3:e=a*b|0;c=0!=((a|b)&-65536|0)?4:6;break;case 4:c=(Math.floor((e>>>0)/(a>>>0))|0)!=(b|0)?5:6;break;case 5:e=-1;c=6;break;case 6:c=7;break;case 7:d=_malloc(e);c=0!=(d|0)?8:10;break;case 8:c=0==(HEAP32[((d-8|0)+4|0)>>2]&3|0)?10:9;break;case 9:_memset(d,0,e,1);c=10;break;case 10:return d;default:assert(0,"bad label: "+c)}}
function _realloc(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;c=0==(b|0)?3:4;break;case 3:a=_malloc(d);c=5;break;case 4:c=__gm_;a=_internal_realloc(c,b,d);c=5;break;case 5:return a;default:assert(0,"bad label: "+c)}}
function _release_unused_segments(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B;c=h;b=a=0;d=HEAP32[((c+444|0)+8|0)>>2];f=3;break;case 3:f=0!=(d|0)?4:88;break;case 4:e=HEAP32[(d|0)>>2];g=HEAP32[(d+4|0)>>2];i=HEAP32[(d+8|0)>>2];b=b+1|0;f=0!=(HEAP32[(d+12|0)>>2]&0|0)?5:87;break;case 5:f=0!=(HEAP32[(d+12|0)>>2]&8|0)?87:6;break;case 6:var C=e;f=0==((e+8|0)&7|0)?7:8;break;case 7:var D=0;f=9;break;case 8:D=(8-((e+8|0)&7)|0)&7;f=9;break;case 9:j=C+D|0;k=HEAP32[(j+
4|0)>>2]&-8;f=1!=(HEAP32[(j+4|0)>>2]&3|0)?86:10;break;case 10:f=(j+k|0)>>>0>=((e+g|0)-40|0)>>>0?11:86;break;case 11:l=j;f=(j|0)==(HEAP32[(c+20|0)>>2]|0)?12:13;break;case 12:HEAP32[(c+20|0)>>2]=0;HEAP32[(c+8|0)>>2]=0;f=59;break;case 13:m=HEAP32[(l+24|0)>>2];f=(HEAP32[(l+12|0)>>2]|0)!=(l|0)?14:18;break;case 14:o=HEAP32[(l+8|0)>>2];n=HEAP32[(l+12|0)>>2];f=0!=(1==(o>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?15:16;break;case 15:HEAP32[(o+12|0)>>2]=n;HEAP32[(n+8|0)>>2]=o;f=17;break;case 16:throw _abort(),"Reached an unreachable!";
case 17:f=30;break;case 18:p=n=(l+16|0)+4|0;n=f=HEAP32[n>>2];f=0!=(f|0)?20:19;break;case 19:p=n=l+16|0;n=f=HEAP32[n>>2];f=0!=(f|0)?20:29;break;case 20:f=21;break;case 21:q=f=(n+16|0)+4|0;if(0!=(HEAP32[f>>2]|0)){var E=1;f=23}else f=22;break;case 22:q=E=n+16|0;E=0!=(HEAP32[E>>2]|0);f=23;break;case 23:f=E?24:25;break;case 24:p=n=q;n=HEAP32[n>>2];f=21;break;case 25:f=0!=(1==(p>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?26:27;break;case 26:HEAP32[p>>2]=0;f=28;break;case 27:throw _abort(),"Reached an unreachable!";
case 28:f=29;break;case 29:f=30;break;case 30:f=0!=(m|0)?31:58;break;case 31:r=(c+304|0)+(HEAP32[(l+28|0)>>2]<<2)|0;f=(l|0)==(HEAP32[r>>2]|0)?32:35;break;case 32:f=n;HEAP32[r>>2]=f;f=0==(f|0)?33:34;break;case 33:f=c+4|0;HEAP32[f>>2]&=1<<HEAP32[(l+28|0)>>2]^-1;f=34;break;case 34:f=42;break;case 35:f=0!=(1==(m>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?36:40;break;case 36:f=(HEAP32[(m+16|0)>>2]|0)==(l|0)?37:38;break;case 37:HEAP32[(m+16|0)>>2]=n;f=39;break;case 38:HEAP32[((m+16|0)+4|0)>>2]=n;f=39;break;case 39:f=
41;break;case 40:throw _abort(),"Reached an unreachable!";case 41:f=42;break;case 42:f=0!=(n|0)?43:57;break;case 43:f=0!=(1==(n>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?44:55;break;case 44:HEAP32[(n+24|0)>>2]=m;s=f=HEAP32[(l+16|0)>>2];f=0!=(f|0)?45:49;break;case 45:f=0!=(1==(s>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?46:47;break;case 46:HEAP32[(n+16|0)>>2]=s;HEAP32[(s+24|0)>>2]=n;f=48;break;case 47:throw _abort(),"Reached an unreachable!";case 48:f=49;break;case 49:t=f=HEAP32[((l+16|0)+4|0)>>2];f=0!=(f|0)?
50:54;break;case 50:f=0!=(1==(t>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?51:52;break;case 51:HEAP32[((n+16|0)+4|0)>>2]=t;HEAP32[(t+24|0)>>2]=n;f=53;break;case 52:throw _abort(),"Reached an unreachable!";case 53:f=54;break;case 54:f=56;break;case 55:throw _abort(),"Reached an unreachable!";case 56:f=57;break;case 57:f=58;break;case 58:f=59;break;case 59:w=k>>>8;f=0==(w|0)?60:61;break;case 60:v=0;f=65;break;case 61:f=65535<w>>>0?62:63;break;case 62:v=31;f=64;break;case 63:v=w;f=(v-256|0)>>>16&8;v=x=v<<f;
x=(x-4096|0)>>>16&4;f=f+x|0;v=x=v<<x;var F=(x-16384|0)>>>16&2;x=F;f=f+F|0;x=(14-f|0)+(v<<x>>>15)|0;v=(x<<1)+(k>>>((x+7|0)>>>0)&1)|0;f=64;break;case 64:f=65;break;case 65:u=(c+304|0)+(v<<2)|0;HEAP32[(l+28|0)>>2]=v;HEAP32[((l+16|0)+4|0)>>2]=0;HEAP32[(l+16|0)>>2]=0;f=0!=(HEAP32[(c+4|0)>>2]&1<<v|0)?67:66;break;case 66:f=c+4|0;HEAP32[f>>2]|=1<<v;HEAP32[u>>2]=l;HEAP32[(l+24|0)>>2]=u;f=l;HEAP32[(l+12|0)>>2]=f;HEAP32[(l+8|0)>>2]=f;f=85;break;case 67:y=HEAP32[u>>2];var G=k;f=31==(v|0)?68:69;break;case 68:var H=
0;f=70;break;case 69:H=31-(((v>>>1)+8|0)-2|0)|0;f=70;break;case 70:A=G<<H;f=71;break;case 71:f=(HEAP32[(y+4|0)>>2]&-8|0)!=(k|0)?72:78;break;case 72:z=(y+16|0)+((A>>>31&1)<<2)|0;A<<=1;f=0!=(HEAP32[z>>2]|0)?73:74;break;case 73:y=HEAP32[z>>2];f=77;break;case 74:f=0!=(1==(z>>>0>=HEAPU32[(c+16|0)>>2]>>>0&1)|0)?75:76;break;case 75:HEAP32[z>>2]=l;HEAP32[(l+24|0)>>2]=y;f=l;HEAP32[(l+12|0)>>2]=f;HEAP32[(l+8|0)>>2]=f;f=84;break;case 76:throw _abort(),"Reached an unreachable!";case 77:f=83;break;case 78:B=HEAP32[(y+
8|0)>>2];if(y>>>0>=HEAPU32[(c+16|0)>>2]>>>0)f=79;else{var J=0;f=80}break;case 79:J=B>>>0>=HEAPU32[(c+16|0)>>2]>>>0;f=80;break;case 80:f=0!=(1==(J&1)|0)?81:82;break;case 81:f=l;HEAP32[(B+12|0)>>2]=f;HEAP32[(y+8|0)>>2]=f;HEAP32[(l+8|0)>>2]=B;HEAP32[(l+12|0)>>2]=y;HEAP32[(l+24|0)>>2]=0;f=84;break;case 82:throw _abort(),"Reached an unreachable!";case 83:f=71;break;case 84:f=85;break;case 85:f=86;break;case 86:f=87;break;case 87:d=i;f=3;break;case 88:f=4294967295<b>>>0?89:90;break;case 89:var O=b;f=91;
break;case 90:O=-1;f=91;break;case 91:return HEAP32[(c+32|0)>>2]=O,a;default:assert(0,"bad label: "+f)}}_release_unused_segments.X=1;function _memalign(h,f){return _internal_memalign(__gm_,h,f)}
function _internal_memalign(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o,p,q,r,s;d=h;e=f;g=c;a=8>=e>>>0?3:4;break;case 3:b=_malloc(g);a=38;break;case 4:a=16>e>>>0?5:6;break;case 5:e=16;a=6;break;case 6:a=0!=(e&(e-1|0)|0)?7:11;break;case 7:i=16;a=8;break;case 8:a=i>>>0<e>>>0?9:10;break;case 9:i<<=1;a=8;break;case 10:e=i;a=11;break;case 11:a=g>>>0>=(-64-e|0)>>>0?12:15;break;case 12:a=0!=(d|0)?13:14;break;case 13:a=___errno();HEAP32[a>>2]=12;a=14;break;case 14:a=37;break;case 15:a=
11>g>>>0?16:17;break;case 16:var t=16;a=18;break;case 17:t=((g+4|0)+7|0)&-8;a=18;break;case 18:j=t;k=((j+e|0)+16|0)-4|0;k=_malloc(k);a=0!=(k|0)?19:36;break;case 19:m=l=0;n=k-8|0;a=0!=((k>>>0)%(e>>>0)|0)?20:27;break;case 20:o=(((k+e|0)-1|0)&(-e|0))-8|0;a=16<=(o-n|0)>>>0?21:22;break;case 21:var u=o;a=23;break;case 22:u=o+e|0;a=23;break;case 23:q=p=u;p=p-n|0;r=(HEAP32[(n+4|0)>>2]&-8)-p|0;a=0==(HEAP32[(n+4|0)>>2]&3|0)?24:25;break;case 24:HEAP32[(q|0)>>2]=HEAP32[(n|0)>>2]+p|0;HEAP32[(q+4|0)>>2]=r;a=26;
break;case 25:HEAP32[(q+4|0)>>2]=HEAP32[(q+4|0)>>2]&1|r|2;l=(q+r|0)+4|0;HEAP32[l>>2]|=1;HEAP32[(n+4|0)>>2]=HEAP32[(n+4|0)>>2]&1|p|2;l=(n+p|0)+4|0;HEAP32[l>>2]|=1;l=n+8|0;a=26;break;case 26:n=q;a=27;break;case 27:a=0==(HEAP32[(n+4|0)>>2]&3|0)?31:28;break;case 28:s=HEAP32[(n+4|0)>>2]&-8;a=s>>>0>(j+16|0)>>>0?29:30;break;case 29:a=s-j|0;m=n+j|0;HEAP32[(n+4|0)>>2]=HEAP32[(n+4|0)>>2]&1|j|2;var v=(n+j|0)+4|0;HEAP32[v>>2]|=1;HEAP32[(m+4|0)>>2]=HEAP32[(m+4|0)>>2]&1|a|2;a=(m+a|0)+4|0;HEAP32[a>>2]|=1;m=m+8|
0;a=30;break;case 30:a=31;break;case 31:a=0!=(l|0)?32:33;break;case 32:_free(l);a=33;break;case 33:a=0!=(m|0)?34:35;break;case 34:_free(m);a=35;break;case 35:b=n+8|0;a=38;break;case 36:a=37;break;case 37:b=0;a=38;break;case 38:return b;default:assert(0,"bad label: "+a)}}_internal_memalign.X=1;
function _independent_calloc(h,f,c){var a=STACKTOP;STACKTOP+=4;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");HEAP32[a>>2]=f;h=_ialloc(__gm_,h,a,3,c);STACKTOP=a;return h}
function _internal_realloc(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n,o,p,q;d=h;e=f;g=c;a=4294967232<=g>>>0?3:4;break;case 3:b=___errno();HEAP32[b>>2]=12;b=0;a=35;break;case 4:i=e-8|0;j=HEAP32[(i+4|0)>>2]&-8;k=i+j|0;m=l=0;if(i>>>0>=HEAPU32[(d+16|0)>>2]>>>0)a=5;else{var r=0;a=8}break;case 5:1!=(HEAP32[(i+4|0)>>2]&3|0)?a=6:(r=0,a=8);break;case 6:i>>>0<k>>>0?a=7:(r=0,a=8);break;case 7:r=0!=(HEAP32[(k+4|0)>>2]&1|0);a=8;break;case 8:a=0!=(1==(r&1)|0)?9:24;break;case 9:a=11>g>>>0?10:
11;break;case 10:var s=16;a=12;break;case 11:s=((g+4|0)+7|0)&-8;a=12;break;case 12:n=s;a=0==(HEAP32[(i+4|0)>>2]&3|0)?13:14;break;case 13:l=_mmap_resize(d,i,n);a=23;break;case 14:a=j>>>0>=n>>>0?15:18;break;case 15:o=j-n|0;l=i;a=16<=o>>>0?16:17;break;case 16:m=l+n|0;HEAP32[(l+4|0)>>2]=HEAP32[(l+4|0)>>2]&1|n|2;a=(l+n|0)+4|0;HEAP32[a>>2]|=1;HEAP32[(m+4|0)>>2]=o|3;a=(m+o|0)+4|0;HEAP32[a>>2]|=1;m=m+8|0;a=17;break;case 17:a=22;break;case 18:a=(k|0)==(HEAP32[(d+24|0)>>2]|0)?19:21;break;case 19:a=(j+HEAP32[(d+
12|0)>>2]|0)>>>0>n>>>0?20:21;break;case 20:l=j+HEAP32[(d+12|0)>>2]|0;l=l-n|0;a=i+n|0;HEAP32[(i+4|0)>>2]=HEAP32[(i+4|0)>>2]&1|n|2;var t=(i+n|0)+4|0;HEAP32[t>>2]|=1;HEAP32[(a+4|0)>>2]=l|1;HEAP32[(d+24|0)>>2]=a;HEAP32[(d+12|0)>>2]=l;l=i;a=21;break;case 21:a=22;break;case 22:a=23;break;case 23:a=25;break;case 24:throw _abort(),"Reached an unreachable!";case 25:a=0!=(l|0)?26:29;break;case 26:a=0!=(m|0)?27:28;break;case 27:_free(m);a=28;break;case 28:b=l+8|0;a=35;break;case 29:p=_malloc(g);a=0!=(p|0)?30:
34;break;case 30:q=j-(0==(HEAP32[(i+4|0)>>2]&3|0)?8:4)|0;var u=p,v=e;a=q>>>0<g>>>0?31:32;break;case 31:var w=q;a=33;break;case 32:w=g;a=33;break;case 33:assert(0===w%1,"memcpy given "+w+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy(u,v,w,1);_free(e);a=34;break;case 34:b=p;a=35;break;case 35:return b;default:assert(0,"bad label: "+a)}}_internal_realloc.X=1;function _malloc_footprint(){return HEAP32[(__gm_+432|0)>>2]}
function _malloc_max_footprint(){return HEAP32[(__gm_+436|0)>>2]}
function _ialloc(h,f,c,a,b){var d;for(d=2;;)switch(d){case 2:var e,g,i,j,k,l,m,n,o,p,q,r,s,t,u;g=h;i=f;j=c;k=a;l=b;d=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();d=4;break;case 4:d=0!=(l|0)?5:8;break;case 5:d=0==(i|0)?6:7;break;case 6:e=l;d=48;break;case 7:s=l;o=0;d=14;break;case 8:d=0==(i|0)?9:10;break;case 9:e=_malloc(0);d=48;break;case 10:s=0;d=11>(i<<2|0)>>>0?11:12;break;case 11:var v=16;d=13;break;case 12:v=(((i<<2|0)+4|0)+7|0)&-8;d=13;break;case 13:o=v;d=14;break;case 14:d=
0!=(k&1|0)?15:19;break;case 15:d=11>HEAPU32[j>>2]>>>0?16:17;break;case 16:var w=16;d=18;break;case 17:w=((HEAP32[j>>2]+4|0)+7|0)&-8;d=18;break;case 18:m=w;n=i*m|0;d=27;break;case 19:u=n=m=0;d=20;break;case 20:d=(u|0)!=(i|0)?21:26;break;case 21:d=11>HEAPU32[(j+(u<<2)|0)>>2]>>>0?22:23;break;case 22:var x=16;d=24;break;case 23:x=((HEAP32[(j+(u<<2)|0)>>2]+4|0)+7|0)&-8;d=24;break;case 24:n=n+x|0;d=25;break;case 25:u=u+1|0;d=20;break;case 26:d=27;break;case 27:t=n+o|0;d=HEAP32[(g+440|0)>>2]&0;p=g+440|0;
HEAP32[p>>2]=HEAP32[p>>2];p=_malloc(t-4|0);d=0!=(d|0)?28:29;break;case 28:d=g+440|0;HEAP32[d>>2]=HEAP32[d>>2];d=29;break;case 29:d=0==(p|0)?30:31;break;case 30:e=0;d=48;break;case 31:q=p-8|0;r=HEAP32[(q+4|0)>>2]&-8;d=0!=(k&2|0)?32:33;break;case 32:_memset(p,0,(r-4|0)-o|0,4);d=33;break;case 33:d=0==(s|0)?34:35;break;case 34:d=q+n|0;r=r-n|0;s=d+8|0;HEAP32[(d+4|0)>>2]=r|3;r=n;d=35;break;case 35:u=0;d=36;break;case 36:HEAP32[(s+(u<<2)|0)>>2]=q+8|0;d=(u|0)!=(i-1|0)?37:44;break;case 37:d=0!=(m|0)?38:39;
break;case 38:t=m;d=43;break;case 39:d=11>HEAPU32[(j+(u<<2)|0)>>2]>>>0?40:41;break;case 40:var y=16;d=42;break;case 41:y=((HEAP32[(j+(u<<2)|0)>>2]+4|0)+7|0)&-8;d=42;break;case 42:t=y;d=43;break;case 43:r=r-t|0;HEAP32[(q+4|0)>>2]=t|3;q=q+t|0;d=45;break;case 44:HEAP32[(q+4|0)>>2]=r|3;d=47;break;case 45:d=46;break;case 46:u=u+1|0;d=36;break;case 47:e=s;d=48;break;case 48:return e;default:assert(0,"bad label: "+d)}}_ialloc.X=1;function _independent_comalloc(h,f,c){return _ialloc(__gm_,h,f,0,c)}
function _valloc(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();f=4;break;case 4:return h=HEAP32[(_mparams+4|0)>>2],_memalign(h,c);default:assert(0,"bad label: "+f)}}function _pvalloc(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();f=4;break;case 4:return h=HEAP32[(_mparams+4|0)>>2],_memalign(h,((c+h|0)-1|0)&((h-1|0)^-1));default:assert(0,"bad label: "+f)}}
function _malloc_trim(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();f=4;break;case 4:return h=_sys_trim(__gm_,c);default:assert(0,"bad label: "+f)}}function _mallinfo(h){_internal_mallinfo(h,__gm_)}
function _internal_mallinfo(h,f){var c=STACKTOP;STACKTOP+=40;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var a;for(a=2;;)switch(a){case 2:var b,d=c,e,g,i,j,k,l;b=f;a=d>>2;for(var m=a+10;a<m;a++)HEAP32[a]=0;a=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();a=4;break;case 4:a=0!=(HEAP32[(b+24|0)>>2]|0)?5:21;break;case 5:e=1;i=g=HEAP32[(b+12|0)>>2]+40|0;j=b+444|0;a=6;break;case 6:a=0!=(j|0)?7:20;break;case 7:var n=HEAP32[(j|0)>>2];a=0==((HEAP32[(j|
0)>>2]+8|0)&7|0)?8:9;break;case 8:var o=0;a=10;break;case 9:o=(8-((HEAP32[(j|0)>>2]+8|0)&7)|0)&7;a=10;break;case 10:k=n+o|0;a=11;break;case 11:if(k>>>0>=HEAPU32[(j|0)>>2]>>>0)a=12;else{var p=0;a=15}break;case 12:k>>>0<(HEAP32[(j|0)>>2]+HEAP32[(j+4|0)>>2]|0)>>>0?a=13:(p=0,a=15);break;case 13:(k|0)!=(HEAP32[(b+24|0)>>2]|0)?a=14:(p=0,a=15);break;case 14:p=7!=(HEAP32[(k+4|0)>>2]|0);a=15;break;case 15:a=p?16:19;break;case 16:l=HEAP32[(k+4|0)>>2]&-8;i=i+l|0;a=1!=(HEAP32[(k+4|0)>>2]&3|0)?18:17;break;case 17:g=
g+l|0;e=e+1|0;a=18;break;case 18:k=k+(HEAP32[(k+4|0)>>2]&-8)|0;a=11;break;case 19:j=HEAP32[(j+8|0)>>2];a=6;break;case 20:HEAP32[(d|0)>>2]=i;HEAP32[(d+4|0)>>2]=e;HEAP32[(d+16|0)>>2]=HEAP32[(b+432|0)>>2]-i|0;HEAP32[(d+20|0)>>2]=HEAP32[(b+436|0)>>2];HEAP32[(d+28|0)>>2]=HEAP32[(b+432|0)>>2]-g|0;HEAP32[(d+32|0)>>2]=g;HEAP32[(d+36|0)>>2]=HEAP32[(b+12|0)>>2];a=21;break;case 21:b=h;assert(!0,"memcpy given 40 bytes to copy. Problem with quantum=1 corrections perhaps?");d>>=2;a=b>>2;for(m=d+10;d<m;d++,a++)HEAP32[a]=
HEAP32[d];STACKTOP=c;return;default:assert(0,"bad label: "+a)}}_internal_mallinfo.X=1;function _malloc_stats(){_internal_malloc_stats(__gm_)}
function _internal_malloc_stats(h){var f=STACKTOP;assert(0==STACKTOP%4,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;a=h;c=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();c=4;break;case 4:e=d=b=0;c=0!=(HEAP32[(a+24|0)>>2]|0)?5:21;break;case 5:g=a+444|0;b=HEAP32[(a+436|0)>>2];d=HEAP32[(a+432|0)>>2];e=d-(HEAP32[(a+12|0)>>2]+40|0)|0;c=6;break;case 6:c=0!=(g|0)?7:20;break;case 7:var j=HEAP32[(g|0)>>2];c=0==((HEAP32[(g|
0)>>2]+8|0)&7|0)?8:9;break;case 8:var k=0;c=10;break;case 9:k=(8-((HEAP32[(g|0)>>2]+8|0)&7)|0)&7;c=10;break;case 10:i=j+k|0;c=11;break;case 11:if(i>>>0>=HEAPU32[(g|0)>>2]>>>0)c=12;else{var l=0;c=15}break;case 12:i>>>0<(HEAP32[(g|0)>>2]+HEAP32[(g+4|0)>>2]|0)>>>0?c=13:(l=0,c=15);break;case 13:(i|0)!=(HEAP32[(a+24|0)>>2]|0)?c=14:(l=0,c=15);break;case 14:l=7!=(HEAP32[(i+4|0)>>2]|0);c=15;break;case 15:c=l?16:19;break;case 16:c=1!=(HEAP32[(i+4|0)>>2]&3|0)?18:17;break;case 17:e=e-(HEAP32[(i+4|0)>>2]&-8)|
0;c=18;break;case 18:i=i+(HEAP32[(i+4|0)>>2]&-8)|0;c=11;break;case 19:g=HEAP32[(g+8|0)>>2];c=6;break;case 20:c=21;break;case 21:h=b;_fprintf(HEAP32[_stderr>>2],STRING_TABLE.__str4652|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=h,tempInt));_fprintf(HEAP32[_stderr>>2],STRING_TABLE.__str14653|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=d,tempInt));_fprintf(HEAP32[_stderr>>2],
STRING_TABLE.__str24654|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=e,tempInt));STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_internal_malloc_stats.X=1;function _mallopt(h,f){return _change_mparam(h,f)}
function _init_mparams(){var h;for(h=2;;)switch(h){case 2:var f,c;h=0==(HEAP32[(_mparams|0)>>2]|0)?3:7;break;case 3:c=f=_sysconf(8);h=0!=(c&(c-1|0)|0)?5:4;break;case 4:h=0!=(f&(f-1|0)|0)?5:6;break;case 5:throw _abort(),"Reached an unreachable!";case 6:HEAP32[(_mparams+8|0)>>2]=c;HEAP32[(_mparams+4|0)>>2]=f;HEAP32[(_mparams+12|0)>>2]=-1;HEAP32[(_mparams+16|0)>>2]=2097152;HEAP32[(_mparams+20|0)>>2]=0;HEAP32[(__gm_+440|0)>>2]=HEAP32[(_mparams+20|0)>>2];h=_time(0)^1431655765;h|=8;h&=-8;HEAP32[(_mparams|
0)>>2]=h;h=7;break;case 7:return 1;default:assert(0,"bad label: "+h)}}function _malloc_usable_size(h){var f;for(f=2;;)switch(f){case 2:var c,a,b;a=h;f=0!=(a|0)?3:6;break;case 3:b=a-8|0;f=1!=(HEAP32[(b+4|0)>>2]&3|0)?4:5;break;case 4:c=(HEAP32[(b+4|0)>>2]&-8)-(0==(HEAP32[(b+4|0)>>2]&3|0)?8:4)|0;f=7;break;case 5:f=6;break;case 6:c=0;f=7;break;case 7:return c;default:assert(0,"bad label: "+f)}}
function _mmap_resize(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e,g,i,j,k,l,m,n;d=h;e=f;g=c;i=HEAP32[(e+4|0)>>2]&-8;a=32>g>>>3>>>0?3:4;break;case 3:b=0;a=15;break;case 4:a=i>>>0>=(g+4|0)>>>0?5:7;break;case 5:a=(i-g|0)>>>0<=HEAP32[(_mparams+8|0)>>2]<<1>>>0?6:7;break;case 6:b=e;a=15;break;case 7:j=HEAP32[(e|0)>>2];k=(i+j|0)+16|0;l=(((g+24|0)+7|0)+(HEAP32[(_mparams+4|0)>>2]-1|0)|0)&((HEAP32[(_mparams+4|0)>>2]-1|0)^-1);m=-1;a=-1!=(m|0)?8:13;break;case 8:n=m+j|0;a=(l-j|0)-16|0;HEAP32[(n+4|0)>>2]=
a;HEAP32[((n+a|0)+4|0)>>2]=7;HEAP32[((n+(a+4|0)|0)+4|0)>>2]=0;a=m>>>0<HEAPU32[(d+16|0)>>2]>>>0?9:10;break;case 9:HEAP32[(d+16|0)>>2]=m;a=10;break;case 10:a=d+432|0;var o=HEAP32[a>>2]+(l-k|0)|0;HEAP32[a>>2]=o;a=o>>>0>HEAPU32[(d+436|0)>>2]>>>0?11:12;break;case 11:HEAP32[(d+436|0)>>2]=HEAP32[(d+432|0)>>2];a=12;break;case 12:b=n;a=15;break;case 13:a=14;break;case 14:b=0;a=15;break;case 15:return b;default:assert(0,"bad label: "+a)}}_mmap_resize.X=1;
function _segment_holding(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d;b=h;d=f;b=b+444|0;c=3;break;case 3:c=d>>>0>=HEAPU32[(b|0)>>2]>>>0?4:6;break;case 4:c=d>>>0<(HEAP32[(b|0)>>2]+HEAP32[(b+4|0)>>2]|0)>>>0?5:6;break;case 5:a=b;c=9;break;case 6:b=c=HEAP32[(b+8|0)>>2];c=0==(c|0)?7:8;break;case 7:a=0;c=9;break;case 8:c=3;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _init_top(h,f,c){var a;for(a=2;;)switch(a){case 2:var b,d,e;b=h;d=f;e=c;a=0==((d+8|0)&7|0)?3:4;break;case 3:var g=0;a=5;break;case 4:g=(8-((d+8|0)&7)|0)&7;a=5;break;case 5:h=g;d=d+h|0;e=e-h|0;HEAP32[(b+24|0)>>2]=d;HEAP32[(b+12|0)>>2]=e;HEAP32[(d+4|0)>>2]=e|1;HEAP32[((d+e|0)+4|0)>>2]=40;HEAP32[(b+28|0)>>2]=HEAP32[(_mparams+16|0)>>2];return;default:assert(0,"bad label: "+a)}}_init_top.X=1;
function _mmap_alloc(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e,g,i;b=h;c=f;d=(((c+24|0)+7|0)+(HEAP32[(_mparams+4|0)>>2]-1|0)|0)&((HEAP32[(_mparams+4|0)>>2]-1|0)^-1);c=d>>>0>c>>>0?3:14;break;case 3:e=-1;c=-1!=(e|0)?4:13;break;case 4:c=0==((e+8|0)&7|0)?5:6;break;case 5:var j=0;c=7;break;case 6:j=(8-((e+8|0)&7)|0)&7;c=7;break;case 7:c=j;g=(d-c|0)-16|0;i=e+c|0;HEAP32[(i|0)>>2]=c;HEAP32[(i+4|0)>>2]=g;HEAP32[((i+g|0)+4|0)>>2]=7;HEAP32[((i+(g+4|0)|0)+4|0)>>2]=0;c=0==(HEAP32[(b+16|0)>>2]|0)?9:8;break;
case 8:c=e>>>0<HEAPU32[(b+16|0)>>2]>>>0?9:10;break;case 9:HEAP32[(b+16|0)>>2]=e;c=10;break;case 10:c=b+432|0;g=HEAP32[c>>2]+d|0;HEAP32[c>>2]=g;c=g>>>0>HEAPU32[(b+436|0)>>2]>>>0?11:12;break;case 11:HEAP32[(b+436|0)>>2]=HEAP32[(b+432|0)>>2];c=12;break;case 12:a=i+8|0;c=15;break;case 13:c=14;break;case 14:a=0;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_mmap_alloc.X=1;
function _init_bins(h){var f;for(f=2;;)switch(f){case 2:var c,a;c=h;a=0;f=3;break;case 3:f=32>a>>>0?4:6;break;case 4:var b=f=(c+40|0)+(a<<1<<2)|0;HEAP32[(f+12|0)>>2]=b;HEAP32[(f+8|0)>>2]=b;f=5;break;case 5:a=a+1|0;f=3;break;case 6:return;default:assert(0,"bad label: "+f)}}
function _change_mparam(h,f){var c;for(c=2;;)switch(c){case 2:var a,b,d,e;b=h;d=f;c=0!=(HEAP32[(_mparams|0)>>2]|0)?4:3;break;case 3:_init_mparams();c=4;break;case 4:c=-1==(d|0)?5:6;break;case 5:var g=-1;c=7;break;case 6:g=d;c=7;break;case 7:e=g;c=b;c=-1==(c|0)?8:-2==(c|0)?9:-3==(c|0)?13:14;break;case 8:HEAP32[(_mparams+16|0)>>2]=e;a=1;c=15;break;case 9:c=e>>>0>=HEAPU32[(_mparams+4|0)>>2]>>>0?10:12;break;case 10:c=0==(e&(e-1|0)|0)?11:12;break;case 11:HEAP32[(_mparams+8|0)>>2]=e;a=1;c=15;break;case 12:a=
0;c=15;break;case 13:HEAP32[(_mparams+12|0)>>2]=e;a=1;c=15;break;case 14:a=0;c=15;break;case 15:return a;default:assert(0,"bad label: "+c)}}_change_mparam.X=1;
function _prepend_alloc(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E,F,G,H,J,O,K,L;d=h;e=f;g=c;i=a;var I=e;b=0==((e+8|0)&7|0)?3:4;break;case 3:var M=0;b=5;break;case 4:M=(8-((e+8|0)&7)|0)&7;b=5;break;case 5:j=I+M|0;var N=g;b=0==((g+8|0)&7|0)?6:7;break;case 6:var P=0;b=8;break;case 7:P=(8-((g+8|0)&7)|0)&7;b=8;break;case 8:k=N+P|0;l=k-j|0;m=j+i|0;l=l-i|0;HEAP32[(j+4|0)>>2]=i|3;b=(k|0)==(HEAP32[(d+24|0)>>2]|0)?9:10;break;case 9:b=d+12|0;H=HEAP32[b>>
2]+l|0;b=HEAP32[b>>2]=H;HEAP32[(d+24|0)>>2]=m;HEAP32[(m+4|0)>>2]=b|1;b=110;break;case 10:b=(k|0)==(HEAP32[(d+20|0)>>2]|0)?11:12;break;case 11:b=d+8|0;H=HEAP32[b>>2]+l|0;b=HEAP32[b>>2]=H;HEAP32[(d+20|0)>>2]=m;HEAP32[(m+4|0)>>2]=b|1;HEAP32[(m+b|0)>>2]=b;b=109;break;case 12:b=1!=(HEAP32[(k+4|0)>>2]&3|0)?73:13;break;case 13:n=HEAP32[(k+4|0)>>2]&-8;b=32>n>>>3>>>0?14:26;break;case 14:o=HEAP32[(k+8|0)>>2];p=HEAP32[(k+12|0)>>2];q=n>>>3;b=(o|0)==(p|0)?15:16;break;case 15:b=d|0;HEAP32[b>>2]&=1<<q^-1;b=25;break;
case 16:b=(o|0)==((d+40|0)+(q<<1<<2)|0)?18:17;break;case 17:if(o>>>0>=HEAPU32[(d+16|0)>>2]>>>0)b=18;else{var Q=0;b=21}break;case 18:if((p|0)==((d+40|0)+(q<<1<<2)|0)){var S=1;b=20}else b=19;break;case 19:S=p>>>0>=HEAPU32[(d+16|0)>>2]>>>0;b=20;break;case 20:Q=S;b=21;break;case 21:b=0!=(1==(Q&1)|0)?22:23;break;case 22:HEAP32[(o+12|0)>>2]=p;HEAP32[(p+8|0)>>2]=o;b=24;break;case 23:throw _abort(),"Reached an unreachable!";case 24:b=25;break;case 25:b=72;break;case 26:r=k;s=HEAP32[(r+24|0)>>2];b=(HEAP32[(r+
12|0)>>2]|0)!=(r|0)?27:31;break;case 27:u=HEAP32[(r+8|0)>>2];t=HEAP32[(r+12|0)>>2];b=0!=(1==(u>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?28:29;break;case 28:HEAP32[(u+12|0)>>2]=t;HEAP32[(t+8|0)>>2]=u;b=30;break;case 29:throw _abort(),"Reached an unreachable!";case 30:b=43;break;case 31:v=t=(r+16|0)+4|0;t=b=HEAP32[t>>2];b=0!=(b|0)?33:32;break;case 32:v=t=r+16|0;t=b=HEAP32[t>>2];b=0!=(b|0)?33:42;break;case 33:b=34;break;case 34:w=b=(t+16|0)+4|0;if(0!=(HEAP32[b>>2]|0)){var R=1;b=36}else b=35;break;case 35:w=
R=t+16|0;R=0!=(HEAP32[R>>2]|0);b=36;break;case 36:b=R?37:38;break;case 37:v=t=w;t=HEAP32[t>>2];b=34;break;case 38:b=0!=(1==(v>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?39:40;break;case 39:HEAP32[v>>2]=0;b=41;break;case 40:throw _abort(),"Reached an unreachable!";case 41:b=42;break;case 42:b=43;break;case 43:b=0!=(s|0)?44:71;break;case 44:x=(d+304|0)+(HEAP32[(r+28|0)>>2]<<2)|0;b=(r|0)==(HEAP32[x>>2]|0)?45:48;break;case 45:b=t;HEAP32[x>>2]=b;b=0==(b|0)?46:47;break;case 46:b=d+4|0;HEAP32[b>>2]&=1<<HEAP32[(r+
28|0)>>2]^-1;b=47;break;case 47:b=55;break;case 48:b=0!=(1==(s>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?49:53;break;case 49:b=(HEAP32[(s+16|0)>>2]|0)==(r|0)?50:51;break;case 50:HEAP32[(s+16|0)>>2]=t;b=52;break;case 51:HEAP32[((s+16|0)+4|0)>>2]=t;b=52;break;case 52:b=54;break;case 53:throw _abort(),"Reached an unreachable!";case 54:b=55;break;case 55:b=0!=(t|0)?56:70;break;case 56:b=0!=(1==(t>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?57:68;break;case 57:HEAP32[(t+24|0)>>2]=s;y=b=HEAP32[(r+16|0)>>2];b=0!=(b|0)?
58:62;break;case 58:b=0!=(1==(y>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?59:60;break;case 59:HEAP32[(t+16|0)>>2]=y;HEAP32[(y+24|0)>>2]=t;b=61;break;case 60:throw _abort(),"Reached an unreachable!";case 61:b=62;break;case 62:A=b=HEAP32[((r+16|0)+4|0)>>2];b=0!=(b|0)?63:67;break;case 63:b=0!=(1==(A>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?64:65;break;case 64:HEAP32[((t+16|0)+4|0)>>2]=A;HEAP32[(A+24|0)>>2]=t;b=66;break;case 65:throw _abort(),"Reached an unreachable!";case 66:b=67;break;case 67:b=69;break;case 68:throw _abort(),
"Reached an unreachable!";case 69:b=70;break;case 70:b=71;break;case 71:b=72;break;case 72:k=k+n|0;l=l+n|0;b=73;break;case 73:b=k+4|0;HEAP32[b>>2]&=-2;HEAP32[(m+4|0)>>2]=l|1;HEAP32[(m+l|0)>>2]=l;b=32>l>>>3>>>0?74:81;break;case 74:z=l>>>3;C=B=(d+40|0)+(z<<1<<2)|0;b=0!=(HEAP32[(d|0)>>2]&1<<z|0)?76:75;break;case 75:b=d|0;HEAP32[b>>2]|=1<<z;b=80;break;case 76:b=0!=(1==(HEAP32[(B+8|0)>>2]>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?77:78;break;case 77:C=HEAP32[(B+8|0)>>2];b=79;break;case 78:throw _abort(),"Reached an unreachable!";
case 79:b=80;break;case 80:HEAP32[(B+8|0)>>2]=m;HEAP32[(C+12|0)>>2]=m;HEAP32[(m+8|0)>>2]=C;HEAP32[(m+12|0)>>2]=B;b=108;break;case 81:D=m;G=l>>>8;b=0==(G|0)?82:83;break;case 82:F=0;b=87;break;case 83:b=65535<G>>>0?84:85;break;case 84:F=31;b=86;break;case 85:F=G;b=(F-256|0)>>>16&8;F=H=F<<b;H=(H-4096|0)>>>16&4;b=b+H|0;F=H=F<<H;var T=(H-16384|0)>>>16&2;H=T;b=b+T|0;H=(14-b|0)+(F<<H>>>15)|0;F=(H<<1)+(l>>>((H+7|0)>>>0)&1)|0;b=86;break;case 86:b=87;break;case 87:E=(d+304|0)+(F<<2)|0;HEAP32[(D+28|0)>>2]=F;
HEAP32[((D+16|0)+4|0)>>2]=0;HEAP32[(D+16|0)>>2]=0;b=0!=(HEAP32[(d+4|0)>>2]&1<<F|0)?89:88;break;case 88:b=d+4|0;HEAP32[b>>2]|=1<<F;HEAP32[E>>2]=D;HEAP32[(D+24|0)>>2]=E;b=D;HEAP32[(D+12|0)>>2]=b;HEAP32[(D+8|0)>>2]=b;b=107;break;case 89:J=HEAP32[E>>2];var W=l;b=31==(F|0)?90:91;break;case 90:var V=0;b=92;break;case 91:V=31-(((F>>>1)+8|0)-2|0)|0;b=92;break;case 92:O=W<<V;b=93;break;case 93:b=(HEAP32[(J+4|0)>>2]&-8|0)!=(l|0)?94:100;break;case 94:K=(J+16|0)+((O>>>31&1)<<2)|0;O<<=1;b=0!=(HEAP32[K>>2]|0)?
95:96;break;case 95:J=HEAP32[K>>2];b=99;break;case 96:b=0!=(1==(K>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?97:98;break;case 97:HEAP32[K>>2]=D;HEAP32[(D+24|0)>>2]=J;b=D;HEAP32[(D+12|0)>>2]=b;HEAP32[(D+8|0)>>2]=b;b=106;break;case 98:throw _abort(),"Reached an unreachable!";case 99:b=105;break;case 100:L=HEAP32[(J+8|0)>>2];if(J>>>0>=HEAPU32[(d+16|0)>>2]>>>0)b=101;else{var U=0;b=102}break;case 101:U=L>>>0>=HEAPU32[(d+16|0)>>2]>>>0;b=102;break;case 102:b=0!=(1==(U&1)|0)?103:104;break;case 103:b=D;HEAP32[(L+
12|0)>>2]=b;HEAP32[(J+8|0)>>2]=b;HEAP32[(D+8|0)>>2]=L;HEAP32[(D+12|0)>>2]=J;HEAP32[(D+24|0)>>2]=0;b=106;break;case 104:throw _abort(),"Reached an unreachable!";case 105:b=93;break;case 106:b=107;break;case 107:b=108;break;case 108:b=109;break;case 109:b=110;break;case 110:return j+8|0;default:assert(0,"bad label: "+b)}}_prepend_alloc.X=1;function __ZNKSt9bad_alloc4whatEv(){return STRING_TABLE.__str34655|0}
function __ZSt15get_new_handlerv(){return tempValue=HEAP32[__ZL13__new_handler>>2],HEAP32[__ZL13__new_handler>>2]=tempValue+0,tempValue}function __ZSt15set_new_handlerPFvvE(h){return tempValue=HEAP32[__ZL13__new_handler>>2],HEAP32[__ZL13__new_handler>>2]=h,tempValue}function __ZNSt9bad_allocC2Ev(h){HEAP32[h>>2]=__ZTVSt9exception+8|0;HEAP32[h>>2]=__ZTVSt9bad_alloc+8|0}
function __ZdlPv(h){var f;for(f=2;;)switch(f){case 2:var c;c=h;f=0!=(c|0)?3:4;break;case 3:_free(c);f=4;break;case 4:return;default:assert(0,"bad label: "+f)}}function __ZdlPvRKSt9nothrow_t(h){__ZdlPv(h)}function __ZdaPv(h){__ZdlPv(h)}function __ZdaPvRKSt9nothrow_t(h){__ZdaPv(h)}function __ZNSt9bad_allocD0Ev(h){FUNCTION_TABLE[__ZNSt9bad_allocD1Ev](h);__ZdlPv(h)}function __ZNSt9bad_allocD2Ev(h){__ZNSt9exceptionD2Ev(h)}
function __ZNSt20bad_array_new_lengthC2Ev(h){__ZNSt9bad_allocC2Ev(h);HEAP32[h>>2]=__ZTVSt20bad_array_new_length+8|0}
function _add_segment(h,f,c,a){var b;for(b=2;;)switch(b){case 2:var d,e,g,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,A,z,B,C,D,E;d=h;e=f;g=c;i=a;j=HEAP32[(d+24|0)>>2];k=_segment_holding(d,j);k=HEAP32[(k|0)>>2]+HEAP32[(k+4|0)>>2]|0;l=24;m=k+(-((l+16|0)+7|0)|0)|0;b=0==((m+8|0)&7|0)?3:4;break;case 3:var F=0;b=5;break;case 4:F=(8-((m+8|0)&7)|0)&7;b=5;break;case 5:n=F;n=m+n|0;b=n>>>0<(j+16|0)>>>0?6:7;break;case 6:var G=j;b=8;break;case 7:G=n;b=8;break;case 8:p=o=G;b=p+8|0;q=p+l|0;_init_top(d,e,g-40|0);HEAP32[(p+
4|0)>>2]=l|3;p=b;var H=d+444|0;assert(!0,"memcpy given 16 bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[p>>2]=HEAP32[H>>2];HEAP32[p+4>>2]=HEAP32[H+4>>2];HEAP32[p+8>>2]=HEAP32[H+8>>2];HEAP32[p+12>>2]=HEAP32[H+12>>2];HEAP32[(d+444|0)>>2]=e;HEAP32[((d+444|0)+4|0)>>2]=g;HEAP32[((d+444|0)+12|0)>>2]=i;HEAP32[((d+444|0)+8|0)>>2]=b;b=9;break;case 9:r=q+4|0;HEAP32[(q+4|0)>>2]=7;b=(r+4|0)>>>0<k>>>0?10:11;break;case 10:q=r;b=12;break;case 11:b=13;break;case 12:b=9;break;case 13:b=(o|0)!=
(j|0)?14:50;break;case 14:s=j;t=o-j|0;b=s+t|0;b=b+4|0;HEAP32[b>>2]&=-2;HEAP32[(s+4|0)>>2]=t|1;HEAP32[(s+t|0)>>2]=t;b=32>t>>>3>>>0?15:22;break;case 15:u=t>>>3;w=v=(d+40|0)+(u<<1<<2)|0;b=0!=(HEAP32[(d|0)>>2]&1<<u|0)?17:16;break;case 16:b=d|0;HEAP32[b>>2]|=1<<u;b=21;break;case 17:b=0!=(1==(HEAP32[(v+8|0)>>2]>>>0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?18:19;break;case 18:w=HEAP32[(v+8|0)>>2];b=20;break;case 19:throw _abort(),"Reached an unreachable!";case 20:b=21;break;case 21:HEAP32[(v+8|0)>>2]=s;HEAP32[(w+
12|0)>>2]=s;HEAP32[(s+8|0)>>2]=w;HEAP32[(s+12|0)>>2]=v;b=49;break;case 22:x=s;z=t>>>8;b=0==(z|0)?23:24;break;case 23:A=0;b=28;break;case 24:b=65535<z>>>0?25:26;break;case 25:A=31;b=27;break;case 26:A=z;b=(A-256|0)>>>16&8;A=p=A<<b;p=(p-4096|0)>>>16&4;b=b+p|0;A=p=A<<p;p=H=(p-16384|0)>>>16&2;b=b+H|0;p=(14-b|0)+(A<<p>>>15)|0;A=(p<<1)+(t>>>((p+7|0)>>>0)&1)|0;b=27;break;case 27:b=28;break;case 28:y=(d+304|0)+(A<<2)|0;HEAP32[(x+28|0)>>2]=A;HEAP32[((x+16|0)+4|0)>>2]=0;HEAP32[(x+16|0)>>2]=0;b=0!=(HEAP32[(d+
4|0)>>2]&1<<A|0)?30:29;break;case 29:b=d+4|0;HEAP32[b>>2]|=1<<A;HEAP32[y>>2]=x;HEAP32[(x+24|0)>>2]=y;b=x;HEAP32[(x+12|0)>>2]=b;HEAP32[(x+8|0)>>2]=b;b=48;break;case 30:B=HEAP32[y>>2];var J=t;b=31==(A|0)?31:32;break;case 31:var O=0;b=33;break;case 32:O=31-(((A>>>1)+8|0)-2|0)|0;b=33;break;case 33:C=J<<O;b=34;break;case 34:b=(HEAP32[(B+4|0)>>2]&-8|0)!=(t|0)?35:41;break;case 35:D=(B+16|0)+((C>>>31&1)<<2)|0;C<<=1;b=0!=(HEAP32[D>>2]|0)?36:37;break;case 36:B=HEAP32[D>>2];b=40;break;case 37:b=0!=(1==(D>>>
0>=HEAPU32[(d+16|0)>>2]>>>0&1)|0)?38:39;break;case 38:HEAP32[D>>2]=x;HEAP32[(x+24|0)>>2]=B;b=x;HEAP32[(x+12|0)>>2]=b;HEAP32[(x+8|0)>>2]=b;b=47;break;case 39:throw _abort(),"Reached an unreachable!";case 40:b=46;break;case 41:E=HEAP32[(B+8|0)>>2];if(B>>>0>=HEAPU32[(d+16|0)>>2]>>>0)b=42;else{var K=0;b=43}break;case 42:K=E>>>0>=HEAPU32[(d+16|0)>>2]>>>0;b=43;break;case 43:b=0!=(1==(K&1)|0)?44:45;break;case 44:b=x;HEAP32[(E+12|0)>>2]=b;HEAP32[(B+8|0)>>2]=b;HEAP32[(x+8|0)>>2]=E;HEAP32[(x+12|0)>>2]=B;HEAP32[(x+
24|0)>>2]=0;b=47;break;case 45:throw _abort(),"Reached an unreachable!";case 46:b=34;break;case 47:b=48;break;case 48:b=49;break;case 49:b=50;break;case 50:return;default:assert(0,"bad label: "+b)}}_add_segment.X=1;
function __Znwj(h){var f;for(f=2;;)switch(f){case 2:var c,a,b,d,e;c=h;f=0==(c|0)?3:4;break;case 3:c=1;f=4;break;case 4:f=5;break;case 5:a=f=_malloc(c);f=0==(f|0)?6:14;break;case 6:b=__ZSt15get_new_handlerv();f=0!=(b|0)?7:12;break;case 7:f=b;try{__THREW__=!1,FUNCTION_TABLE[f]()}catch(g){if("number"!=typeof g)throw g;if(ABORT)throw g;__THREW__=!0;Module.print("Exception: "+g+", currently at: "+Error().stack)}f=__THREW__?9:8;break;case 8:f=13;break;case 9:e=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>
2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);d=e.f0;e=e.f1;f=10;break;case 10:f=0>(e|0)?11:15;break;case 11:throw ___cxa_call_unexpected(d),"Reached an unreachable!";case 12:f=___cxa_allocate_exception(4);FUNCTION_TABLE[__ZNSt9bad_allocC1Ev](f);try{__THREW__=!1,___cxa_throw(f,__ZTISt9bad_alloc,1730)}catch(i){if("number"!=typeof i)throw i;if(ABORT)throw i;__THREW__=!0;Module.print("Exception: "+i+", currently at: "+Error().stack)}f=__THREW__?9:16;break;case 13:f=5;break;case 14:return a;case 15:throw h=
d,c=e,(tempValue=[0,0,0,0,0,0,0,0],tempValue.f0=h,tempValue).f1=c,Module.print("Resuming exception"),HEAP32[_llvm_eh_exception.buf>>2];case 16:throw"Reached an unreachable!";default:assert(0,"bad label: "+f)}}__Znwj.X=1;
function __ZnwjRKSt9nothrow_t(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;c=0;var b;try{__THREW__=!1,b=__Znwj(f)}catch(d){if("number"!=typeof d)throw d;if(ABORT)throw d;__THREW__=!0;Module.print("Exception: "+d+", currently at: "+Error().stack);b=null}f=__THREW__?4:3;break;case 3:c=b;f=7;break;case 4:a=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[0]).f0;f=5;break;case 5:___cxa_begin_catch(a);try{__THREW__=!1,___cxa_end_catch()}catch(e){if("number"!=
typeof e)throw e;if(ABORT)throw e;__THREW__=!0;Module.print("Exception: "+e+", currently at: "+Error().stack)}f=__THREW__?8:6;break;case 6:f=7;break;case 7:return c;case 8:a=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]).f0;f=9;break;case 9:throw ___cxa_call_unexpected(a),"Reached an unreachable!";default:assert(0,"bad label: "+f)}}
function __Znaj(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;var b;try{__THREW__=!1,b=__Znwj(f)}catch(d){if("number"!=typeof d)throw d;if(ABORT)throw d;__THREW__=!0;Module.print("Exception: "+d+", currently at: "+Error().stack);b=null}f=__THREW__?4:3;break;case 3:return b;case 4:a=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);c=a.f0;a=a.f1;f=5;break;case 5:f=0>(a|0)?6:7;break;case 6:throw ___cxa_call_unexpected(c),"Reached an unreachable!";
case 7:throw h=c,c=a,(tempValue=[0,0,0,0,0,0,0,0],tempValue.f0=h,tempValue).f1=c,Module.print("Resuming exception"),HEAP32[_llvm_eh_exception.buf>>2];default:assert(0,"bad label: "+f)}}
function __ZnajRKSt9nothrow_t(h){var f;for(f=2;;)switch(f){case 2:var c,a;f=h;c=0;var b;try{__THREW__=!1,b=__Znaj(f)}catch(d){if("number"!=typeof d)throw d;if(ABORT)throw d;__THREW__=!0;Module.print("Exception: "+d+", currently at: "+Error().stack);b=null}f=__THREW__?4:3;break;case 3:c=b;f=7;break;case 4:a=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[0]).f0;f=5;break;case 5:___cxa_begin_catch(a);try{__THREW__=!1,___cxa_end_catch()}catch(e){if("number"!=
typeof e)throw e;if(ABORT)throw e;__THREW__=!0;Module.print("Exception: "+e+", currently at: "+Error().stack)}f=__THREW__?8:6;break;case 6:f=7;break;case 7:return c;case 8:a=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]).f0;f=9;break;case 9:throw ___cxa_call_unexpected(a),"Reached an unreachable!";default:assert(0,"bad label: "+f)}}function __ZNKSt20bad_array_new_length4whatEv(){return STRING_TABLE.__str144656|0}
function __ZNSt20bad_array_new_lengthD0Ev(h){FUNCTION_TABLE[__ZNSt20bad_array_new_lengthD1Ev](h);__ZdlPv(h)}function __ZSt17__throw_bad_allocv(){var h=___cxa_allocate_exception(4);FUNCTION_TABLE[__ZNSt9bad_allocC1Ev](h);___cxa_throw(h,__ZTISt9bad_alloc,1730);throw"Reached an unreachable!";}var i64Math=null;function _strncmp(h,f,c){for(var a=0;a<c;){var b=HEAPU8[h+a],d=HEAPU8[f+a];if(b==d&&0==b)break;if(0==b)return-1;if(0==d)return 1;if(b==d)a++;else return b>d?1:-1}return 0}
function _strcmp(h,f){return _strncmp(h,f,TOTAL_MEMORY)}
function __formatString(h,f){function c(a){var c;"double"===a?c=(tempDoubleI32[0]=HEAP32[f+b>>2],tempDoubleI32[1]=HEAP32[f+(b+4)>>2],tempDoubleF64[0]):"i64"==a?c=[HEAP32[f+b>>2],HEAP32[f+(b+4)>>2]]:(a="i32",c=HEAP32[f+b>>2]);b+=Runtime.getNativeFieldSize(a);return c}for(var a=h,b=0,d=[],e,g;;){var i=a;e=HEAP8[a];if(0===e)break;g=HEAP8[a+1];if(37==e){var j=!1,k=!1,l=!1,m=!1;a:for(;;){switch(g){case 43:j=!0;break;case 45:k=!0;break;case 35:l=!0;break;case 48:if(m)break a;else{m=!0;break}default:break a}a++;
g=HEAP8[a+1]}var n=0;if(42==g)n=c("i32"),a++,g=HEAP8[a+1];else for(;48<=g&&57>=g;)n=10*n+(g-48),a++,g=HEAP8[a+1];var o=!1;if(46==g){var p=0,o=!0;a++;g=HEAP8[a+1];if(42==g)p=c("i32"),a++;else for(;;){g=HEAP8[a+1];if(48>g||57<g)break;p=10*p+(g-48);a++}g=HEAP8[a+1]}else p=6;var q;switch(String.fromCharCode(g)){case "h":g=HEAP8[a+2];104==g?(a++,q=1):q=2;break;case "l":g=HEAP8[a+2];108==g?(a++,q=8):q=4;break;case "L":case "q":case "j":q=8;break;case "z":case "t":case "I":q=4;break;default:q=null}q&&a++;
g=HEAP8[a+1];if(-1!="diuoxXp".split("").indexOf(String.fromCharCode(g))){var r=100==g||105==g;q=q||4;var i=e=c("i"+8*q),s;8==q&&(e=Runtime.makeBigInt(e[0],e[1],117==g));if(4>=q){var t=Math.pow(256,q)-1;e=(r?reSign:unSign)(e&t,8*q)}t=Math.abs(e);r="";if(100==g||105==g)s=8==q&&i64Math?i64Math.stringify(i[0],i[1]):reSign(e,8*q,1).toString(10);else if(117==g)s=8==q&&i64Math?i64Math.stringify(i[0],i[1],!0):unSign(e,8*q,1).toString(10),e=Math.abs(e);else if(111==g)s=(l?"0":"")+t.toString(8);else if(120==
g||88==g){r=l?"0x":"";if(0>e){e=-e;s=(t-1).toString(16);i=[];for(l=0;l<s.length;l++)i.push((15-parseInt(s[l],16)).toString(16));for(s=i.join("");s.length<2*q;)s="f"+s}else s=t.toString(16);88==g&&(r=r.toUpperCase(),s=s.toUpperCase())}else 112==g&&(0===t?s="(nil)":(r="0x",s=t.toString(16)));if(o)for(;s.length<p;)s="0"+s;for(j&&(r=0>e?"-"+r:"+"+r);r.length+s.length<n;)k?s+=" ":m?s="0"+s:r=" "+r;s=r+s;s.split("").forEach(function(a){d.push(a.charCodeAt(0))})}else if(-1!="fFeEgG".split("").indexOf(String.fromCharCode(g))){e=
c("double");if(isNaN(e))s="nan",m=!1;else if(isFinite(e)){o=!1;q=Math.min(p,20);if(103==g||71==g)o=!0,p=p||1,q=parseInt(e.toExponential(q).split("e")[1],10),p>q&&-4<=q?(g=(103==g?"f":"F").charCodeAt(0),p-=q+1):(g=(103==g?"e":"E").charCodeAt(0),p--),q=Math.min(p,20);if(101==g||69==g)s=e.toExponential(q),/[eE][-+]\d$/.test(s)&&(s=s.slice(0,-1)+"0"+s.slice(-1));else if(102==g||70==g)s=e.toFixed(q);i=s.split("e");if(o&&!l)for(;1<i[0].length&&-1!=i[0].indexOf(".")&&("0"==i[0].slice(-1)||"."==i[0].slice(-1));)i[0]=
i[0].slice(0,-1);else for(l&&-1==s.indexOf(".")&&(i[0]+=".");p>q++;)i[0]+="0";s=i[0]+(1<i.length?"e"+i[1]:"");69==g&&(s=s.toUpperCase());j&&0<=e&&(s="+"+s)}else s=(0>e?"-":"")+"inf",m=!1;for(;s.length<n;)s=k?s+" ":m&&("-"==s[0]||"+"==s[0])?s[0]+"0"+s.slice(1):(m?"0":" ")+s;97>g&&(s=s.toUpperCase());s.split("").forEach(function(a){d.push(a.charCodeAt(0))})}else if(115==g){j=c("i8*")||nullString;m=String_len(j);o&&(m=Math.min(m,p));if(!k)for(;m<n--;)d.push(32);for(l=0;l<m;l++)d.push(HEAPU8[j++]);if(k)for(;m<
n--;)d.push(32)}else if(99==g){for(k&&d.push(c("i8"));0<--n;)d.push(32);k||d.push(c("i8"))}else if(110==g)k=c("i32*"),HEAP32[k>>2]=d.length;else if(37==g)d.push(e);else for(l=i;l<a+2;l++)d.push(HEAP8[l]);a+=2}else d.push(e),a+=1}return d}function _snprintf(h,f,c,a){c=__formatString(c,a);f=void 0===f?c.length:Math.min(c.length,f-1);for(a=0;a<f;a++)HEAP8[h+a]=c[a];HEAP8[h+a]=0;return c.length}function _sprintf(h,f,c){return _snprintf(h,void 0,f,c)}function _isdigit(h){return 48<=h&&57>=h}
function _isspace(h){return h in{32:0,9:0,10:0,11:0,12:0,13:0}}function ___setErrNo(h){___setErrNo.ret||(___setErrNo.ret=allocate([0],"i32",ALLOC_STATIC));return HEAP32[___setErrNo.ret>>2]=h}
var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,
ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
function __parseInt(h,f,c,a,b,d,e){for(;_isspace(HEAP8[h]);)h++;var g=1;45==HEAP8[h]?(g=-1,h++):43==HEAP8[h]&&h++;!c&&48==HEAP8[h]&&(120==HEAP8[h+1]||88==HEAP8[h+1]?(c=16,h+=2):(c=8,h++));c||(c=10);for(var i,j=0;0!=(i=HEAP8[h])&&!(i=parseInt(String.fromCharCode(i),c),isNaN(i));)j=j*c+i,h++;j*=g;f&&(HEAP32[f>>2]=h);e&&(Math.abs(j)>b?(j=b,___setErrNo(ERRNO_CODES.ERANGE)):j=unSign(j,d));if(j>b||j<a)j=j>b?b:a,___setErrNo(ERRNO_CODES.ERANGE);64==d&&(j=[j>>>0,Math.min(Math.floor(j/4294967296),4294967295)]);
return j}function _strtol(h,f,c){return __parseInt(h,f,c,-2147483648,2147483647,32)}function _atoi(h){return _strtol(h,null,10)}function _strlen(h){return String_len(h)}function _strncpy(h,f,c){for(var a=!1,b,d=0;d<c;d++)b=a?0:HEAP8[f+d],HEAP8[h+d]=b,a=a||0==HEAP8[f+d];return h}
function _memcpy(h,f,c){assert(0===c%1,"memcpy given "+c+" bytes to copy. Problem with quantum=1 corrections perhaps?");if(20<=c&&f%2==h%2)if(f%4==h%4){for(c=f+c;f%4;)HEAP8[h++]=HEAP8[f++];for(var f=f>>2,h=h>>2,a=c>>2;f<a;)HEAP32[h++]=HEAP32[f++];f<<=2;for(h<<=2;f<c;)HEAP8[h++]=HEAP8[f++]}else{c=f+c;f%2&&(HEAP8[h++]=HEAP8[f++]);f>>=1;h>>=1;for(a=c>>1;f<a;)HEAP16[h++]=HEAP16[f++];f<<=1;h<<=1;f<c&&(HEAP8[h++]=HEAP8[f++])}else for(;c--;)HEAP8[h++]=HEAP8[f++]}var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
function _strcat(h,f){var c=_strlen(h),a=0;do HEAP8[h+c+a]=HEAP8[f+a],a++;while(0!=HEAP8[f+(a-1)]);return h}function _strcpy(h,f){var c=0;do HEAP8[h+c]=HEAP8[f+c],c++;while(0!=HEAP8[f+(c-1)]);return h}function _isprint(h){return 31<h&&127>h}
var _stdin=0,_stdout=0,_stderr=0,__impure_ptr=0,FS={currentPath:"/",nextInode:2,streams:[null],checkStreams:function(){for(var h in FS.streams)assert(0<=h&&h<FS.streams.length);for(h=0;h<FS.streams.length;h++)assert("object"==typeof FS.streams[h])},ignorePermissions:!0,joinPath:function(h,f){for(var c=h[0],a=1;a<h.length;a++)"/"!=c[c.length-1]&&(c+="/"),c+=h[a];f&&"/"==c[0]&&(c=c.substr(1));return c},absolutePath:function(h,f){if("string"!==typeof h)return null;void 0===f&&(f=FS.currentPath);h&&"/"==
h[0]&&(f="");for(var c=(f+"/"+h).split("/").reverse(),a=[""];c.length;){var b=c.pop();""==b||"."==b||(".."==b?1<a.length&&a.pop():a.push(b))}return 1==a.length?"/":a.join("/")},analyzePath:function(h,f,c){var a={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null},h=FS.absolutePath(h);if("/"==h)a.isRoot=!0,a.exists=a.parentExists=!0,a.name="/",a.path=a.parentPath="/",a.object=a.parentObject=FS.root;else if(null!==h)for(var c=c||0,h=h.slice(1).split("/"),
b=FS.root,d=[""];h.length;){1==h.length&&b.isFolder&&(a.parentExists=!0,a.parentPath=1==d.length?"/":d.join("/"),a.parentObject=b,a.name=h[0]);var e=h.shift();if(b.isFolder)if(b.read){if(!b.contents.hasOwnProperty(e)){a.error=ERRNO_CODES.ENOENT;break}}else{a.error=ERRNO_CODES.EACCES;break}else{a.error=ERRNO_CODES.ENOTDIR;break}b=b.contents[e];if(b.link&&!(f&&0==h.length)){if(40<c){a.error=ERRNO_CODES.ELOOP;break}a=FS.absolutePath(b.link,d.join("/"));a=FS.analyzePath([a].concat(h).join("/"),f,c+1);
break}d.push(e);0==h.length&&(a.exists=!0,a.path=d.join("/"),a.object=b)}return a},findObject:function(h,f){FS.ensureRoot();var c=FS.analyzePath(h,f);if(c.exists)return c.object;___setErrNo(c.error);return null},createObject:function(h,f,c,a,b){h||(h="/");"string"===typeof h&&(h=FS.findObject(h));if(!h)throw ___setErrNo(ERRNO_CODES.EACCES),Error("Parent path must exist.");if(!h.isFolder)throw ___setErrNo(ERRNO_CODES.ENOTDIR),Error("Parent must be a folder.");if(!h.write&&!FS.ignorePermissions)throw ___setErrNo(ERRNO_CODES.EACCES),
Error("Parent folder must be writeable.");if(!f||"."==f||".."==f)throw ___setErrNo(ERRNO_CODES.ENOENT),Error("Name must not be empty.");if(h.contents.hasOwnProperty(f))throw ___setErrNo(ERRNO_CODES.EEXIST),Error("Can't overwrite object.");h.contents[f]={read:void 0===a?!0:a,write:void 0===b?!1:b,timestamp:Date.now(),inodeNumber:FS.nextInode++};for(var d in c)c.hasOwnProperty(d)&&(h.contents[f][d]=c[d]);return h.contents[f]},createFolder:function(h,f,c,a){return FS.createObject(h,f,{isFolder:!0,isDevice:!1,
contents:{}},c,a)},createPath:function(h,f,c,a){h=FS.findObject(h);if(null===h)throw Error("Invalid parent.");for(f=f.split("/").reverse();f.length;){var b=f.pop();b&&(h.contents.hasOwnProperty(b)||FS.createFolder(h,b,c,a),h=h.contents[b])}return h},createFile:function(h,f,c,a,b){c.isFolder=!1;return FS.createObject(h,f,c,a,b)},createDataFile:function(h,f,c,a,b){if("string"===typeof c){for(var d=Array(c.length),e=0,g=c.length;e<g;++e)d[e]=c.charCodeAt(e);c=d}c={isDevice:!1,contents:c.subarray?c.subarray(0):
c};return FS.createFile(h,f,c,a,b)},createLazyFile:function(h,f,c,a,b){return FS.createFile(h,f,{isDevice:!1,url:c},a,b)},createPreloadedFile:function(h,f,c,a,b,d,e){function g(c){function g(c){FS.createDataFile(h,f,c,a,b);d&&d();removeRunDependency("cp "+i)}var l=!1;Module.preloadPlugins.forEach(function(a){!l&&a.canHandle(i)&&(a.handle(c,i,g,function(){e&&e();removeRunDependency("cp "+i)}),l=!0)});l||g(c)}Browser.ensureObjects();var i=FS.joinPath([h,f],!0);addRunDependency("cp "+i);"string"==typeof c?
Browser.asyncLoad(c,function(a){g(a)},e):g(c)},createLink:function(h,f,c,a,b){return FS.createFile(h,f,{isDevice:!1,link:c},a,b)},createDevice:function(h,f,c,a){if(!c&&!a)throw Error("A device must have at least one callback defined.");return FS.createFile(h,f,{isDevice:!0,input:c,output:a},Boolean(c),Boolean(a))},forceLoadFile:function(h){if(h.isDevice||h.isFolder||h.link||h.contents)return!0;var f=!0;if("undefined"!==typeof XMLHttpRequest)throw"Cannot do synchronous binary XHRs in modern browsers. Use --embed-file or --preload-file in emcc";
if(Module.read)try{h.contents=intArrayFromString(Module.read(h.url),!0)}catch(c){f=!1}else throw Error("Cannot load without read() or XMLHttpRequest.");f||___setErrNo(ERRNO_CODES.EIO);return f},ensureRoot:function(){FS.root||(FS.root={read:!0,write:!0,isFolder:!0,isDevice:!1,timestamp:Date.now(),inodeNumber:1,contents:{}})},init:function(h,f,c){function a(a){null===a||10===a?(f.printer(f.buffer.join("")),f.buffer=[]):f.buffer.push(g.processCChar(a))}assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
FS.init.initialized=!0;FS.ensureRoot();var h=h||Module.stdin,f=f||Module.stdout,c=c||Module.stderr,b=!0,d=!0,e=!0;h||(b=!1,h=function(){if(!h.cache||!h.cache.length){var a;"undefined"!=typeof window&&"function"==typeof window.prompt?(a=window.prompt("Input: "),null===a&&(a=String.fromCharCode(0))):"function"==typeof readline&&(a=readline());a||(a="");h.cache=intArrayFromString(a+"\n",!0)}return h.cache.shift()});var g=new Runtime.UTF8Processor;f||(d=!1,f=a);f.printer||(f.printer=Module.print);f.buffer||
(f.buffer=[]);c||(e=!1,c=a);c.printer||(c.printer=Module.print);c.buffer||(c.buffer=[]);try{FS.createFolder("/","tmp",!0,!0)}catch(i){}var j=FS.createFolder("/","dev",!0,!0),k=FS.createDevice(j,"stdin",h),l=FS.createDevice(j,"stdout",null,f),c=FS.createDevice(j,"stderr",null,c);FS.createDevice(j,"tty",h,f);FS.streams[1]={path:"/dev/stdin",object:k,position:0,isRead:!0,isWrite:!1,isAppend:!1,isTerminal:!b,error:!1,eof:!1,ungotten:[]};FS.streams[2]={path:"/dev/stdout",object:l,position:0,isRead:!1,
isWrite:!0,isAppend:!1,isTerminal:!d,error:!1,eof:!1,ungotten:[]};FS.streams[3]={path:"/dev/stderr",object:c,position:0,isRead:!1,isWrite:!0,isAppend:!1,isTerminal:!e,error:!1,eof:!1,ungotten:[]};_stdin=allocate([1],"void*",ALLOC_STACK);_stdout=allocate([2],"void*",ALLOC_STACK);_stderr=allocate([3],"void*",ALLOC_STACK);FS.createPath("/","dev/shm/tmp",!0,!0);for(b=FS.streams.length;b<Math.max(_stdin,_stdout,_stderr)+4;b++)FS.streams[b]=null;FS.streams[_stdin]=FS.streams[1];FS.streams[_stdout]=FS.streams[2];
FS.streams[_stderr]=FS.streams[3];FS.checkStreams();assert(1024>FS.streams.length);__impure_ptr=allocate([allocate([0,0,0,0,_stdin,0,0,0,_stdout,0,0,0,_stderr,0,0,0],"void*",ALLOC_STATIC)],"void*",ALLOC_STATIC)},quit:function(){FS.init.initialized&&(FS.streams[2]&&0<FS.streams[2].object.output.buffer.length&&FS.streams[2].object.output(10),FS.streams[3]&&0<FS.streams[3].object.output.buffer.length&&FS.streams[3].object.output(10))},standardizePath:function(h){"./"==h.substr(0,2)&&(h=h.substr(2));
return h},deleteFile:function(h){h=FS.analyzePath(h);if(!h.parentExists||!h.exists)throw"Invalid path "+h;delete h.parentObject.contents[h.name]}};
function _pwrite(h,f,c,a){h=FS.streams[h];if(!h||h.object.isDevice)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(h.isWrite){if(h.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(0>c||0>a)return ___setErrNo(ERRNO_CODES.EINVAL),-1;for(var b=h.object.contents;b.length<a;)b.push(0);for(var d=0;d<c;d++)b[a+d]=HEAPU8[f+d];h.object.timestamp=Date.now();return d}___setErrNo(ERRNO_CODES.EACCES);return-1}
function _write(h,f,c){var a=FS.streams[h];if(a){if(a.isWrite){if(0>c)return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a.object.isDevice){if(a.object.output){for(h=0;h<c;h++)try{a.object.output(HEAP8[f+h])}catch(b){return ___setErrNo(ERRNO_CODES.EIO),-1}a.object.timestamp=Date.now();return h}___setErrNo(ERRNO_CODES.ENXIO);return-1}f=_pwrite(h,f,c,a.position);-1!=f&&(a.position+=f);return f}___setErrNo(ERRNO_CODES.EACCES);return-1}___setErrNo(ERRNO_CODES.EBADF);return-1}
function _fwrite(h,f,c,a){c*=f;if(0==c)return 0;h=_write(a,h,c);return-1==h?(FS.streams[a]&&(FS.streams[a].error=!0),-1):Math.floor(h/f)}function _fprintf(h,f,c){c=__formatString(f,c);f=Runtime.stackSave();h=_fwrite(allocate(c,"i8",ALLOC_STACK),1,c.length,h);Runtime.stackRestore(f);return h}var _cos=Math.cos,_sin=Math.sin,_acos=Math.acos,_asin=Math.asin,_atan=Math.atan;function _cosh(h){h=Math.pow(Math.E,h);return(h+1/h)/2}function _sinh(h){h=Math.pow(Math.E,h);return(h-1/h)/2}
function _tanh(h){return _sinh(h)/_cosh(h)}var _exp=Math.exp,_log=Math.log;function _log10(h){return Math.log(h)/Math.LN10}var _sqrt=Math.sqrt,_ceil=Math.ceil,_floor=Math.floor,_llvm_pow_f64=Math.pow;function _printf(h,f){return _fprintf(HEAP32[_stdout>>2],h,f)}function _memset(h,f,c){if(20<=c){for(c=h+c;h%4;)HEAP8[h++]=f;0>f&&(f+=256);for(var h=h>>2,a=c>>2,b=f|f<<8|f<<16|f<<24;h<a;)HEAP32[h++]=b;for(h<<=2;h<c;)HEAP8[h++]=f}else for(;c--;)HEAP8[h++]=f}var _llvm_memset_p0i8_i32=_memset;
function _pread(h,f,c,a){var b=FS.streams[h];if(!b||b.object.isDevice)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(b.isRead){if(b.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(0>c||0>a)return ___setErrNo(ERRNO_CODES.EINVAL),-1;for(h=0;b.ungotten.length&&0<c;)HEAP8[f++]=b.ungotten.pop(),c--,h++;for(var b=b.object.contents,c=Math.min(b.length-a,c),d=0;d<c;d++)HEAP8[f+d]=b[a+d];return h+c}___setErrNo(ERRNO_CODES.EACCES);return-1}
function _read(h,f,c){var a=FS.streams[h];if(a){if(a.isRead){if(0>c)return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a.object.isDevice){if(a.object.input){for(h=0;a.ungotten.length&&0<c;)HEAP8[f++]=a.ungotten.pop(),c--,h++;for(var b=0;b<c;b++){try{var d=a.object.input()}catch(e){return ___setErrNo(ERRNO_CODES.EIO),-1}if(null===d||void 0===d)break;h++;HEAP8[f+b]=d}return h}___setErrNo(ERRNO_CODES.ENXIO);return-1}d=a.ungotten.length;h=_pread(h,f,c,a.position);-1!=h&&(a.position+=a.ungotten.length-d+h);
return h}___setErrNo(ERRNO_CODES.EACCES);return-1}___setErrNo(ERRNO_CODES.EBADF);return-1}function _fgetc(h){if(!FS.streams[h])return-1;var f=FS.streams[h];if(f.eof||f.error)return-1;h=_read(h,_fgetc.ret,1);return 0==h?(f.eof=!0,-1):-1==h?(f.error=!0,-1):HEAPU8[_fgetc.ret]}var _getc=_fgetc;function _ungetc(h,f){return FS.streams[f]?(h=unSign(h&255),FS.streams[f].ungotten.push(h),h):-1}
function _fputc(h,f){var c=unSign(h&255);HEAP8[_fputc.ret]=c;return-1==_write(f,_fputc.ret,1)?(FS.streams[f]&&(FS.streams[f].error=!0),-1):c}function _clearerr(h){FS.streams[h]&&(FS.streams[h].error=!1)}function _fflush(h){var f=function(a){FS.streams[a]&&FS.streams[a].object.output&&(FS.streams[a].isTerminal||FS.streams[a].object.output(null))};try{if(0===h)for(h=0;h<FS.streams.length;h++)FS.streams[h]&&f(h);else f(h);return 0}catch(c){return ___setErrNo(ERRNO_CODES.EIO),-1}}
function _strncat(h,f,c){for(var a=_strlen(h),b=0;;){HEAP8[h+a+b]=HEAP8[f+b];if(0==HEAP8[h+(a+b)])break;b++;if(b==c){HEAP8[h+(a+b)]=0;break}}return h}function _setlocale(){_setlocale.ret||(_setlocale.ret=allocate([0],"i8",ALLOC_NORMAL));return _setlocale.ret}
function _strtod(h,f){for(var c=h;_isspace(HEAP8[h]);)h++;var a=1;45==HEAP8[h]?(a=-1,h++):43==HEAP8[h]&&h++;for(var b,d=0,e=!1;;){b=HEAP8[h];if(!_isdigit(b))break;e=!0;d=10*d+b-48;h++}var g=!1;if(46==HEAP8[h]){h++;for(var i=0.1;;){b=HEAP8[h];if(!_isdigit(b))break;g=!0;d+=i*(b-48);i/=10;h++}}if(!e&&!g)return f&&(HEAP32[f>>2]=c),0;b=HEAP8[h];if(101==b||69==b){h++;c=0;e=!1;b=HEAP8[h];45==b?(e=!0,h++):43==b&&h++;for(b=HEAP8[h];_isdigit(b);)c=10*c+b-48,h++,b=HEAP8[h];e&&(c=-c);d*=Math.pow(10,c)}f&&(HEAP32[f>>
2]=h);return d*a}function _isalpha(h){return 97<=h&&122>=h||65<=h&&90>=h}function _atof(h){return _strtod(h,null)}var _atol=_atoi;function _islower(h){return 97<=h&&122>=h}function _toupper(h){return 97<=h&&122>=h?h-97+65:h}function _isupper(h){return 65<=h&&90>=h}function _tolower(h){return 65<=h&&90>=h?h-65+97:h}var _labs=Math.abs;function _clock(){void 0===_clock.start&&(_clock.start=Date.now());return Math.floor(1*(Date.now()-_clock.start))}
function __exit(h){exitRuntime();ABORT=!0;throw"exit("+h+") called, at "+Error().stack;}function _exit(h){__exit(h)}function _rand(){return Math.floor(2147483648*Math.random())}function _srand(){}function _unlink(h){h=FS.analyzePath(Pointer_stringify(h));if(!h.parentExists||!h.exists)return ___setErrNo(h.error),-1;if(h.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(h.object.write)return delete h.parentObject.contents[h.name],0;___setErrNo(ERRNO_CODES.EACCES);return-1}
function _rmdir(h){h=FS.analyzePath(Pointer_stringify(h));if(!h.parentExists||!h.exists)return ___setErrNo(h.error),-1;if(!h.object.write||h.isRoot)return ___setErrNo(ERRNO_CODES.EACCES),-1;if(h.object.isFolder){for(var f in h.object.contents)return ___setErrNo(ERRNO_CODES.ENOTEMPTY),-1;if(h.path==FS.currentPath)return ___setErrNo(ERRNO_CODES.EBUSY),-1;delete h.parentObject.contents[h.name];return 0}___setErrNo(ERRNO_CODES.ENOTDIR);return-1}
function _remove(h){var f=_unlink(h);-1==f&&(f=_rmdir(h));return f}
function _rename(h,f){var c=FS.analyzePath(Pointer_stringify(h)),a=FS.analyzePath(Pointer_stringify(f));if(a.path==c.path)return 0;if(c.exists){if(c.isRoot||c.path==FS.currentPath)return ___setErrNo(ERRNO_CODES.EBUSY),-1;if(a.path&&0==a.path.indexOf(c.path))return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a.exists&&a.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;delete c.parentObject.contents[c.name];a.parentObject.contents[a.name]=c.object;return 0}___setErrNo(c.error);return-1}
var ___dirent_struct_layout=null;
function _open(h,f,c){var a=HEAP32[c>>2],b=f&3,c=0!=b,b=1!=b,d=Boolean(f&512),e=Boolean(f&2048),g=Boolean(f&1024),i=Boolean(f&8),h=FS.analyzePath(Pointer_stringify(h));if(!h.parentExists)return ___setErrNo(h.error),-1;if(f=h.object||null){if(d&&e)return ___setErrNo(ERRNO_CODES.EEXIST),-1;if((c||d||g)&&f.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(b&&!f.read||c&&!f.write)return ___setErrNo(ERRNO_CODES.EACCES),-1;if(g&&!f.isDevice)f.contents=[];else if(!FS.forceLoadFile(f))return ___setErrNo(ERRNO_CODES.EIO),-1;
h=h.path}else{if(!d)return ___setErrNo(ERRNO_CODES.ENOENT),-1;if(!h.parentObject.write)return ___setErrNo(ERRNO_CODES.EACCES),-1;f=FS.createDataFile(h.parentObject,h.name,[],a&256,a&128);h=h.parentPath+"/"+h.name}a=FS.streams.length;if(f.isFolder){c=0;___dirent_struct_layout&&(c=_malloc(___dirent_struct_layout.__size__));var b=[],j;for(j in f.contents)b.push(j);FS.streams[a]={path:h,object:f,position:-2,isRead:!0,isWrite:!1,isAppend:!1,error:!1,eof:!1,ungotten:[],contents:b,currentEntry:c}}else FS.streams[a]=
{path:h,object:f,position:0,isRead:b,isWrite:c,isAppend:i,error:!1,eof:!1,ungotten:[]};FS.checkStreams();return a}function _fopen(h,f){var c,f=Pointer_stringify(f);if("r"==f[0])c=-1!=f.indexOf("+")?2:0;else if("w"==f[0])c=-1!=f.indexOf("+")?2:1,c|=1536;else if("a"==f[0])c=-1!=f.indexOf("+")?2:1,c|=520;else return ___setErrNo(ERRNO_CODES.EINVAL),0;c=_open(h,c,allocate([511,0,0,0],"i32",ALLOC_STACK));return-1==c?0:c}
function _close(h){if(FS.streams[h])return FS.streams[h].currentEntry&&_free(FS.streams[h].currentEntry),FS.streams[h]=null,0;___setErrNo(ERRNO_CODES.EBADF);return-1}function _fsync(h){if(FS.streams[h])return 0;___setErrNo(ERRNO_CODES.EBADF);return-1}function _fclose(h){_fsync(h);return _close(h)}function _fread(h,f,c,a){c*=f;if(0==c)return 0;h=_read(a,h,c);a=FS.streams[a];if(-1==h)return a&&(a.error=!0),-1;h<c&&(a.eof=!0);return Math.floor(h/f)}
function _lseek(h,f,c){if(FS.streams[h]&&!FS.streams[h].object.isDevice){h=FS.streams[h];1===c?f+=h.position:2===c&&(f+=h.object.contents.length);if(0>f)return ___setErrNo(ERRNO_CODES.EINVAL),-1;h.ungotten=[];return h.position=f}___setErrNo(ERRNO_CODES.EBADF);return-1}function _fseek(h,f,c){if(-1==_lseek(h,f,c))return-1;FS.streams[h].eof=!1;return 0}
function _ftell(h){if(FS.streams[h])return h=FS.streams[h],h.object.isDevice?(___setErrNo(ERRNO_CODES.ESPIPE),-1):h.position;___setErrNo(ERRNO_CODES.EBADF);return-1}function _fgets(h,f,c){if(!FS.streams[c])return 0;var a=FS.streams[c];if(a.error||a.eof)return 0;for(var b,d=0;d<f-1&&10!=b;d++){b=_fgetc(c);if(-1==b){if(a.error)return 0;if(a.eof)break}HEAP8[h+d]=b}HEAP8[h+d]=0;return h}function __isFloat(h){return!!/^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?$/.exec(h)}
function __scanString(h,f,c,a){__scanString.whiteSpace||(__scanString.whiteSpace={},__scanString.whiteSpace[32]=1,__scanString.whiteSpace[9]=1,__scanString.whiteSpace[10]=1,__scanString.whiteSpace[" "]=1,__scanString.whiteSpace["\t"]=1,__scanString.whiteSpace["\n"]=1);for(var h=Pointer_stringify(h),b=0,d=0,e=0,g;;){g=f();if(0==g)return 0;if(!(g in __scanString.whiteSpace))break}c(g);g=1;for(b=0;b<h.length&&!(0>=g);b++){g=f();if(0>=g)break;if("%"===h[b]){b++;for(var i=b;48<=h[b].charCodeAt(0)&&57>=
h[b].charCodeAt(0);)b++;var j;b!=i&&(j=parseInt(h.slice(i,b),10));var k=i=!1;"l"==h[b]?(i=!0,b++):"h"==h[b]&&(k=!0,b++);var l=h[b];b++;var m=0,n=[];if("f"==l){for(m=-1;0<g;)n.push(String.fromCharCode(g)),__isFloat(n.join(""))&&(m=n.length),g=f();for(c(g);n.length>m;)c(n.pop().charCodeAt(0));g=f()}else for(var o=!0;(m<j||isNaN(j))&&0<g;){if(!(g in __scanString.whiteSpace)&&("s"==l||("d"===l||"u"==l)&&(48<=g&&57>=g||o&&45==g)||"x"===l&&(48<=g&&57>=g||97<=g&&102>=g||65<=g&&70>=g))&&(b>=h.length||g!==
h[b].charCodeAt(0)))n.push(String.fromCharCode(g)),g=f(),m++;else break;o=!1}if(0===n.length)return 0;m=n.join("");n=HEAP32[a+e>>2];e+=Runtime.getNativeFieldSize("void*");switch(l){case "d":case "u":k?HEAP16[n>>1]=parseInt(m,10):HEAP32[n>>2]=parseInt(m,10);break;case "x":HEAP32[n>>2]=parseInt(m,16);break;case "f":i?(tempDoubleF64[0]=parseFloat(m),HEAP32[n>>2]=tempDoubleI32[0],HEAP32[n+4>>2]=tempDoubleI32[1]):HEAPF32[n>>2]=parseFloat(m);break;case "s":i=intArrayFromString(m);for(k=0;k<i.length;k++)HEAP8[n+
k]=i[k]}d++}else if(h[b]in __scanString.whiteSpace){for(;g in __scanString.whiteSpace;)if(g=f(),0>=g)return d;c(g)}else if(h[b].charCodeAt(0)!==g){c(g);break}}return d}function _sscanf(h,f,c){var a=0;return __scanString(f,function(){return HEAP8[h+a++]},function(){a--},c)}var _llvm_dbg_declare,_llvm_expect_i32;function _abort(){ABORT=!0;throw"abort() at "+Error().stack;}
function _sysconf(h){switch(h){case 8:return PAGE_SIZE;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;
case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1E3;case 106:return 700;case 52:return 256;
case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4}___setErrNo(ERRNO_CODES.EINVAL);return-1}function _time(h){var f=Math.floor(Date.now()/1E3);h&&(HEAP32[h>>2]=f);return f}function ___errno_location(){return ___setErrNo.ret}var ___errno=___errno_location;
function _sbrk(h){var f=_sbrk;f.called||(STATICTOP=alignMemoryPage(STATICTOP),f.called=!0,_sbrk.DYNAMIC_START=STATICTOP);f=STATICTOP;0!=h&&Runtime.staticAlloc(h);return f}function ___gxx_personality_v0(){}function ___cxa_allocate_exception(h){return _malloc(h)}function _llvm_eh_exception(){return HEAP32[_llvm_eh_exception.buf>>2]}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}
function ___cxa_is_number_type(h){var f=!1;try{h==__ZTIi&&(f=!0)}catch(c){}try{h==__ZTIj&&(f=!0)}catch(a){}try{h==__ZTIl&&(f=!0)}catch(b){}try{h==__ZTIm&&(f=!0)}catch(d){}try{h==__ZTIx&&(f=!0)}catch(e){}try{h==__ZTIy&&(f=!0)}catch(g){}try{h==__ZTIf&&(f=!0)}catch(i){}try{h==__ZTId&&(f=!0)}catch(j){}try{h==__ZTIe&&(f=!0)}catch(k){}try{h==__ZTIc&&(f=!0)}catch(l){}try{h==__ZTIa&&(f=!0)}catch(m){}try{h==__ZTIh&&(f=!0)}catch(n){}try{h==__ZTIs&&(f=!0)}catch(o){}try{h==__ZTIt&&(f=!0)}catch(p){}return f}
function ___cxa_does_inherit(h,f,c){if(0==c)return!1;if(0==f||f==h)return!0;switch(___cxa_is_number_type(f)?f:HEAP32[HEAP32[f>>2]-8>>2]){case 0:return 0==HEAP32[HEAP32[h>>2]-8>>2]?___cxa_does_inherit(HEAP32[h+8>>2],HEAP32[f+8>>2],c):!1;case 1:return!1;case 2:return ___cxa_does_inherit(h,HEAP32[f+8>>2],c);default:return!1}}
function ___cxa_find_matching_catch(h,f,c){0!=f&&!___cxa_is_number_type(f)&&0==HEAP32[HEAP32[f>>2]-8>>2]&&(h=HEAP32[h>>2]);for(var a=0;a<c.length;a++)if(___cxa_does_inherit(c[a],f,h))return{f0:h,f1:c[a]};return{f0:h,f1:f}}
function ___cxa_throw(h,f,c){if(!___cxa_throw.initialized){try{HEAP32[__ZTVN10__cxxabiv119__pointer_type_infoE>>2]=0}catch(a){}try{HEAP32[__ZTVN10__cxxabiv117__class_type_infoE>>2]=1}catch(b){}try{HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE>>2]=2}catch(d){}___cxa_throw.initialized=!0}Module.printErr("Compiled code throwing an exception, "+[h,f,c]+", at "+Error().stack);HEAP32[_llvm_eh_exception.buf>>2]=h;HEAP32[_llvm_eh_exception.buf+4>>2]=f;HEAP32[_llvm_eh_exception.buf+8>>2]=c;"uncaught_exception"in
__ZSt18uncaught_exceptionv?__ZSt18uncaught_exceptionv.uncaught_exception++:__ZSt18uncaught_exceptionv.uncaught_exception=1;throw h;}function ___cxa_call_unexpected(h){ABORT=!0;throw h;}function ___cxa_begin_catch(h){__ZSt18uncaught_exceptionv.uncaught_exception--;return h}function ___cxa_free_exception(h){return _free(h)}
function ___cxa_end_catch(){if(___cxa_end_catch.rethrown)___cxa_end_catch.rethrown=!1;else{__THREW__=!1;HEAP32[_llvm_eh_exception.buf+4>>2]=0;var h=HEAP32[_llvm_eh_exception.buf>>2],f=HEAP32[_llvm_eh_exception.buf+8>>2];f&&(FUNCTION_TABLE[f](h),HEAP32[_llvm_eh_exception.buf+8>>2]=0);h&&(___cxa_free_exception(h),HEAP32[_llvm_eh_exception.buf>>2]=0)}}
var __ZNSt9exceptionD2Ev,Browser={mainLoop:{scheduler:null,shouldPause:!1,paused:!1,queue:[],pause:function(){Browser.mainLoop.shouldPause=!0},resume:function(){Browser.mainLoop.paused&&(Browser.mainLoop.paused=!1,Browser.mainLoop.scheduler());Browser.mainLoop.shouldPause=!1},updateStatus:function(){if(Module.setStatus){var h=Module.statusMessage||"Please wait...",f=Browser.mainLoop.remainingBlockers,c=Browser.mainLoop.expectedBlockers;f?f<c?Module.setStatus(h+" ("+(c-f)+"/"+c+")"):Module.setStatus(h):
Module.setStatus("")}}},pointerLock:!1,moduleContextCreatedCallbacks:[],ensureObjects:function(){function h(c){return{jpg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[c.substr(-3)]}if(!Browser.ensured){Browser.ensured=!0;try{new Blob,Browser.hasBlobConstructor=!0}catch(f){Browser.hasBlobConstructor=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:
"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:console.log("warning: cannot create object URLs");Module.preloadPlugins||(Module.preloadPlugins=[]);Module.preloadPlugins.push({canHandle:function(c){return c.substr(-4)in{".jpg":1,".png":1,".bmp":1}},handle:function(c,a,b,d){var e=null;if(Browser.hasBlobConstructor)try{e=new Blob([c],{type:h(a)})}catch(f){Runtime.warnOnce("Blob constructor present but fails: "+
f+"; falling back to blob builder")}e||(e=new Browser.BlobBuilder,e.append((new Uint8Array(c)).buffer),e=e.getBlob());var i=Browser.URLObject.createObjectURL(e),j=new Image;j.onload=function(){assert(j.complete,"Image "+a+" could not be decoded");var d=document.createElement("canvas");d.width=j.width;d.height=j.height;d.getContext("2d").drawImage(j,0,0);Module.preloadedImages[a]=d;Browser.URLObject.revokeObjectURL(i);b&&b(c)};j.onerror=function(){console.log("Image "+i+" could not be decoded");d&&
d()};j.src=i}});Module.preloadPlugins.push({canHandle:function(c){return c.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(c,a,b,d){function e(d){i||(i=!0,Module.preloadedAudios[a]=d,b&&b(c))}function f(){i||(i=!0,Module.preloadedAudios[a]=new Audio,d&&d())}var i=!1;if(Browser.hasBlobConstructor){try{var j=new Blob([c],{type:h(a)})}catch(k){return f()}var j=Browser.URLObject.createObjectURL(j),l=new Audio;l.addEventListener("canplaythrough",function(){e(l)},!1);l.onerror=function(){if(!i){console.log("warning: browser could not fully decode audio "+
a+", trying slower base64 approach");for(var b="data:audio/x-"+a.substr(-3)+";base64,",d="",f=0,g=0,h=0;h<c.length;h++){f=f<<8|c[h];for(g+=8;6<=g;)var j=f>>g-6&63,g=g-6,d=d+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[j]}2==g?(d+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(f&3)<<4],d+="=="):4==g&&(d+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(f&15)<<2],d+="=");l.src=b+d;e(l)}};l.src=j;setTimeout(function(){e(l)},1E4)}else return f()}})}},
createContext:function(h,f,c){try{var a=h.getContext(f?"experimental-webgl":"2d");if(!a)throw":(";}catch(b){return Module.print("Could not create canvas - "+b),null}f&&(h.style.backgroundColor="black",h.addEventListener("webglcontextlost",function(){alert("WebGL context lost. You will need to reload the page.")},!1));c&&(Module.ctx=a,Module.useWebGL=f,Browser.moduleContextCreatedCallbacks.forEach(function(a){a()}));return a},requestFullScreen:function(){function h(){var a=!1;if((document.webkitFullScreenElement||
document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement)===c)c.requestPointerLock=c.requestPointerLock||c.mozRequestPointerLock||c.webkitRequestPointerLock,c.requestPointerLock(),a=!0;if(Module.onFullScreen)Module.onFullScreen(a)}function f(){Browser.pointerLock=document.pointerLockElement===c||document.mozPointerLockElement===c||document.webkitPointerLockElement===c}var c=Module.canvas;document.addEventListener("fullscreenchange",
h,!1);document.addEventListener("mozfullscreenchange",h,!1);document.addEventListener("webkitfullscreenchange",h,!1);document.addEventListener("pointerlockchange",f,!1);document.addEventListener("mozpointerlockchange",f,!1);document.addEventListener("webkitpointerlockchange",f,!1);c.requestFullScreen=c.requestFullScreen||c.mozRequestFullScreen||(c.webkitRequestFullScreen?function(){c.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);c.requestFullScreen()},requestAnimationFrame:function(h){window.requestAnimationFrame||
(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||window.setTimeout);window.requestAnimationFrame(h)},getMovementX:function(h){return h.movementX||h.mozMovementX||h.webkitMovementX||0},getMovementY:function(h){return h.movementY||h.mozMovementY||h.webkitMovementY||0},xhrLoad:function(h,f,c){var a=new XMLHttpRequest;a.open("GET",h,!0);a.responseType="arraybuffer";
a.onload=function(){200==a.status?f(a.response):c()};a.onerror=c;a.send(null)},asyncLoad:function(h,f,c){Browser.xhrLoad(h,function(a){assert(a,'Loading data file "'+h+'" failed (no arrayBuffer).');f(new Uint8Array(a));removeRunDependency("al "+h)},function(){if(c)c();else throw'Loading data file "'+h+'" failed.';});addRunDependency("al "+h)},setCanvasSize:function(h,f){var c=Module.canvas;c.width=h;c.height=f}};___setErrNo(0);
__ATINIT__.unshift({func:function(){!Module.noFSInit&&!FS.init.initialized&&FS.init()}});__ATMAIN__.push({func:function(){FS.ignorePermissions=!1}});__ATEXIT__.push({func:function(){FS.quit()}});Module.FS_createFolder=FS.createFolder;Module.FS_createPath=FS.createPath;Module.FS_createDataFile=FS.createDataFile;Module.FS_createPreloadedFile=FS.createPreloadedFile;Module.FS_createLazyFile=FS.createLazyFile;Module.FS_createLink=FS.createLink;Module.FS_createDevice=FS.createDevice;
_fgetc.ret=allocate([0],"i8",ALLOC_STATIC);_fputc.ret=allocate([0],"i8",ALLOC_STATIC);_llvm_eh_exception.buf=allocate(12,"void*",ALLOC_STATIC);Module.requestFullScreen=function(){Browser.requestFullScreen()};Module.requestAnimationFrame=function(h){Browser.requestAnimationFrame(h)};Module.pauseMainLoop=function(){Browser.mainLoop.pause()};Module.resumeMainLoop=function(){Browser.mainLoop.resume()};
Module.callMain=function(h){function f(){for(var b=0;3>b;b++)a.push(0)}var c=h.length+1,a=[allocate(intArrayFromString("/bin/this.program"),"i8",ALLOC_STATIC)];f();for(var b=0;b<c-1;b+=1)a.push(allocate(intArrayFromString(h[b]),"i8",ALLOC_STATIC)),f();a.push(0);a=allocate(a,"i32",ALLOC_STATIC);return _main(c,a,0)};
var _SetupObjectSystem_defclassEntityRecord,__str415,__str1803,_SetupDeffunctions_deffunctionEntityRecord,_EnvironmentHashTable,_CurrentEnvironment,_NextEnvironmentIndex,_InitializeFactReteFunctions_factJNGV1Info,_InitializeFactReteFunctions_factJNGV2Info,_InitializeFactReteFunctions_factJNGV3Info,_InitializeFactReteFunctions_factPNGV1Info,_InitializeFactReteFunctions_factPNGV2Info,_InitializeFactReteFunctions_factPNGV3Info,_InitializeFactReteFunctions_factJNCV1Info,_InitializeFactReteFunctions_factJNCV2Info,
_InitializeFactReteFunctions_factPNCV1Info,_InitializeFactReteFunctions_factStoreMFInfo,_InitializeFactReteFunctions_factSlotLengthInfo,_InitializeFactReteFunctions_factPNConstant1Info,_InitializeFactReteFunctions_factPNConstant2Info,_InitializeFacts_factInfo,__str111604,_SetupGenericFunctions_genericEntityRecord,_WatchGlobals,_InitializeDefglobals_globalInfo,_InitializeDefglobals_defglobalPtrRecord,_SetupInstances_instanceInfo,__str522513,__str1042669,_SetupMessageHandlers_handlerGetInfo,_SetupMessageHandlers_handlerPutInfo,
__str43061,__str563146,_InstallObjectPrimitives_objectGVInfo1,_InstallObjectPrimitives_objectGVInfo2,_InstallObjectPrimitives_objectGVPNInfo1,_InstallObjectPrimitives_objectGVPNInfo2,_InstallObjectPrimitives_objectCmpConstantInfo,_InstallObjectPrimitives_lengthTestInfo,_InstallObjectPrimitives_pNSimpleCompareInfo1,_InstallObjectPrimitives_pNSimpleCompareInfo2,_InstallObjectPrimitives_pNSimpleCompareInfo3,_InstallObjectPrimitives_jNSimpleCompareInfo1,_InstallObjectPrimitives_jNSimpleCompareInfo2,_InstallObjectPrimitives_jNSimpleCompareInfo3,
_InstallProcedurePrimitives_procParameterInfo,_InstallProcedurePrimitives_procWildInfo,_InstallProcedurePrimitives_procGetInfo,_InstallProcedurePrimitives_procBindInfo,__str383598,_ConstructProfilingFunctionDefinitions_profileDataInfo,__str333686,__str93997,__str284048,_EnvEval_depth,__str324351,_InitializeDeftemplates_deftemplatePtrRecord,__str64531,__gm_,_mparams,__ZSt7nothrow,__ZL13__new_handler,__ZTVSt9bad_alloc,__ZTVSt20bad_array_new_length,__ZTVN10__cxxabiv120__si_class_type_infoE,__ZTISt9exception,
__ZTISt9bad_alloc,__ZTISt20bad_array_new_length,__ZTVSt9exception,__ZNSt9bad_allocC1Ev,__ZNSt9bad_allocD1Ev,__ZNSt20bad_array_new_lengthC1Ev,__ZNSt20bad_array_new_lengthD1Ev,__ZNSt20bad_array_new_lengthD2Ev;STRING_TABLE.__str=allocate([97,103,101,110,100,97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1=allocate([97,99,116,105,118,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2=allocate([114,101,102,114,101,115,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3=allocate([82,101,102,114,101,115,104,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5=allocate([114,101,102,114,101,115,104,45,97,103,101,110,100,97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6=allocate([82,101,102,114,101,115,104,65,103,101,110,100,97,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7=allocate([48,49,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8=allocate([103,101,116,45,115,97,108,105,101,110,99,101,45,101,118,97,108,117,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9=allocate([71,101,116,83,97,108,105,101,110,99,101,69,118,97,108,117,97,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11=allocate([115,101,116,45,115,97,108,105,101,110,99,101,45,101,118,97,108,117,97,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12=allocate([83,101,116,83,97,108,105,101,110,99,101,69,118,97,108,117,97,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13=allocate([65,103,101,110,100,97,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15=allocate([61,61,62,32,65,99,116,105,118,97,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str17=allocate([65,99,116,80,80,70,111,114,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18=allocate([65,71,69,78,68,65,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19=allocate([97,99,116,105,118,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20=allocate([60,61,61,32,65,99,116,105,118,97,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21=allocate([114,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str22=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23=allocate([119,104,101,110,45,100,101,102,105,110,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24=allocate([119,104,101,110,45,97,99,116,105,118,97,116,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25=allocate([101,118,101,114,121,45,99,121,99,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str26=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,119,104,101,110,45,100,101,102,105,110,101,100,44,32,119,104,101,110,45,97,99,116,105,118,97,116,101,100,44,32,111,114,32,101,118,101,114,121,45,99,121,99,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28=allocate([117,110,107,110,111,119,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str29=allocate([37,45,54,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str30=allocate([58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31=allocate([65,78,65,76,89,83,73,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233=allocate([68,117,112,108,105,99,97,116,101,32,112,97,116,116,101,114,110,45,97,100,100,114,101,115,115,32,63,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str334=allocate([32,102,111,117,110,100,32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str435=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str536=allocate([80,97,116,116,101,114,110,45,97,100,100,114,101,115,115,32,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str637=allocate([32,117,115,101,100,32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str738=allocate([32,119,97,115,32,112,114,101,118,105,111,117,115,108,121,32,98,111,117,110,100,32,119,105,116,104,105,110,32,97,32,112,97,116,116,101,114,110,32,67,69,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str839=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str940=allocate([86,97,114,105,97,98,108,101,32,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1041=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1142=allocate([102,111,117,110,100,32,105,110,32,116,104,101,32,101,120,112,114,101,115,115,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1243=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1344=allocate([119,97,115,32,114,101,102,101,114,101,110,99,101,100,32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1445=allocate([32,102,105,101,108,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1546=allocate([32,115,108,111,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1647=allocate([32,98,101,102,111,114,101,32,98,101,105,110,103,32,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1748=allocate([32,105,115,32,117,115,101,100,32,97,115,32,98,111,116,104,32,97,32,115,105,110,103,108,101,32,97,110,100,32,109,117,108,116,105,102,105,101,108,100,32,118,97,114,105,97,98,108,101,32,105,110,32,116,104,101,32,76,72,83,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1849=allocate([65,32,108,105,116,101,114,97,108,32,114,101,115,116,114,105,99,116,105,111,110,32,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str50=allocate([82,116,110,76,101,120,101,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151=allocate([115,121,109,98,111,108,44,32,115,116,114,105,110,103,44,32,111,114,32,105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252=allocate([82,116,110,68,111,117,98,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str353=allocate([110,117,109,98,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str454=allocate([82,116,110,76,111,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str555=allocate([82,116,110,85,110,107,110,111,119,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str656=allocate([65,82,71,65,67,67,69,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str757=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str858=allocate([70,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str959=allocate([32,101,120,112,101,99,116,101,100,32,97,116,32,108,101,97,115,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1060=allocate([32,97,110,100,32,110,111,32,109,111,114,101,32,116,104,97,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1161=allocate([32,97,114,103,117,109,101,110,116,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1262=allocate([102,108,111,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1363=allocate([105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1464=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1565=allocate([115,116,114,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1666=allocate([109,117,108,116,105,102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1767=allocate([105,110,116,101,103,101,114,32,111,114,32,102,108,111,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1868=allocate([115,121,109,98,111,108,32,111,114,32,115,116,114,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1969=allocate([105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2070=allocate([105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2171=allocate([105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,32,111,114,32,105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2272=allocate([116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2373=allocate([84,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2474=allocate([102,105,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2575=allocate([32,119,97,115,32,117,110,97,98,108,101,32,116,111,32,111,112,101,110,32,102,105,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2676=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2777=allocate([100,101,102,109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2878=allocate([42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2979=allocate([32,101,120,112,101,99,116,101,100,32,101,120,97,99,116,108,121,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3080=allocate([32,101,120,112,101,99,116,101,100,32,110,111,32,109,111,114,101,32,116,104,97,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3181=allocate([32,103,101,110,101,114,97,116,101,100,32,97,110,32,105,108,108,101,103,97,108,32,97,114,103,117,109,101,110,116,32,99,104,101,99,107,32,102,111,114,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str32=allocate([32,97,114,103,117,109,101,110,116,40,115,41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33=allocate([32,101,120,112,101,99,116,101,100,32,97,114,103,117,109,101,110,116,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34=allocate([32,116,111,32,98,101,32,111,102,32,116,121,112,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str35=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str36=allocate([102,45,37,108,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str37=allocate([102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str38=allocate([105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str39=allocate([73,79,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str40=allocate([73,108,108,101,103,97,108,32,108,111,103,105,99,97,108,32,110,97,109,101,32,117,115,101,100,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41=allocate([32,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42=allocate([32,114,101,99,101,105,118,101,100,32,97,32,114,101,113,117,101,115,116,32,102,114,111,109,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43=allocate([32,102,111,114,32,97,114,103,117,109,101,110,116,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44=allocate([32,119,104,105,99,104,32,105,115,32,110,111,116,32,111,102,32,116,121,112,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str45=allocate([32,119,104,105,99,104,32,105,115,32,110,111,110,45,101,120,105,115,116,101,110,116,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92=allocate([98,108,111,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193=allocate([1,2,3,4,67,76,73,80,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str294=allocate([86,54,46,50,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str395=allocate([66,76,79,65,68,0],"i8",ALLOC_STATIC);STRING_TABLE.__str496=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str597=allocate([70,105,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str698=allocate([32,105,115,32,110,111,116,32,97,32,98,105,110,97,114,121,32,99,111,110,115,116,114,117,99,116,32,102,105,108,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str799=allocate([32,105,115,32,97,110,32,105,110,99,111,109,112,97,116,105,98,108,101,32,98,105,110,97,114,121,32,99,111,110,115,116,114,117,99,116,32,102,105,108,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8100=allocate([84,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9101=allocate([67,76,73,80,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10102=allocate([32,101,110,118,105,114,111,110,109,101,110,116,32,99,111,117,108,100,32,110,111,116,32,98,101,32,99,108,101,97,114,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11103=allocate([66,105,110,97,114,121,32,108,111,97,100,32,99,97,110,110,111,116,32,99,111,110,116,105,110,117,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12104=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13105=allocate([10,83,107,105,112,112,105,110,103,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14106=allocate([32,99,111,110,115,116,114,117,99,116,115,32,98,101,99,97,117,115,101,32,111,102,32,117,110,97,118,97,105,108,105,98,105,108,105,116,121,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15107=allocate([67,97,110,110,111,116,32,108,111,97,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str16108=allocate([32,99,111,110,115,116,114,117,99,116,32,119,105,116,104,32,98,105,110,97,114,121,32,108,111,97,100,32,105,110,32,101,102,102,101,99,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17109=allocate([83,111,109,101,32,99,111,110,115,116,114,117,99,116,115,32,97,114,101,32,115,116,105,108,108,32,105,110,32,117,115,101,32,98,121,32,116,104,101,32,99,117,114,114,101,110,116,32,98,105,110,97,114,121,32,105,109,97,103,101,58,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str18110=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19111=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20112=allocate([66,105,110,97,114,121,32,99,108,101,97,114,32,99,97,110,110,111,116,32,99,111,110,116,105,110,117,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21113=allocate([84,104,101,32,102,111,108,108,111,119,105,110,103,32,117,110,100,101,102,105,110,101,100,32,102,117,110,99,116,105,111,110,115,32,97,114,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str22114=allocate([114,101,102,101,114,101,110,99,101,100,32,98,121,32,116,104,105,115,32,98,105,110,97,114,121,32,105,109,97,103,101,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str115=allocate([43,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1116=allocate([65,100,100,105,116,105,111,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2117=allocate([50,42,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3118=allocate([42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4119=allocate([77,117,108,116,105,112,108,105,99,97,116,105,111,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5120=allocate([45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6121=allocate([83,117,98,116,114,97,99,116,105,111,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7122=allocate([47,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8123=allocate([68,105,118,105,115,105,111,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9124=allocate([100,105,118,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10125=allocate([68,105,118,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11126=allocate([115,101,116,45,97,117,116,111,45,102,108,111,97,116,45,100,105,118,105,100,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12127=allocate([83,101,116,65,117,116,111,70,108,111,97,116,68,105,118,105,100,101,110,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13128=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14129=allocate([103,101,116,45,97,117,116,111,45,102,108,111,97,116,45,100,105,118,105,100,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15130=allocate([71,101,116,65,117,116,111,70,108,111,97,116,68,105,118,105,100,101,110,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16131=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17132=allocate([105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str18133=allocate([73,110,116,101,103,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19134=allocate([49,49,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20135=allocate([102,108,111,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21136=allocate([70,108,111,97,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22137=allocate([97,98,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str23138=allocate([65,98,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24139=allocate([109,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25140=allocate([77,105,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26141=allocate([109,97,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27142=allocate([77,97,120,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143=allocate([98,115,97,118,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1144=allocate([66,83,65,86,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2145=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3146=allocate([67,97,110,110,111,116,32,112,101,114,102,111,114,109,32,97,32,98,105,110,97,114,121,32,115,97,118,101,32,119,104,105,108,101,32,97,32,98,105,110,97,114,121,32,108,111,97,100,32,105,115,32,105,110,32,101,102,102,101,99,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4147=allocate([119,98,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str148=allocate([117,110,100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1149=allocate([112,112,100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2150=allocate([108,105,115,116,45,100,101,102,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3151=allocate([103,101,116,45,100,101,102,99,108,97,115,115,45,108,105,115,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4152=allocate([103,101,116,45,99,108,97,115,115,45,100,101,102,97,117,108,116,115,45,109,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5153=allocate([115,101,116,45,99,108,97,115,115,45,100,101,102,97,117,108,116,115,45,109,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6154=allocate([99,111,110,115,101,114,118,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7155=allocate([99,111,110,118,101,110,105,101,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8156=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,99,111,110,115,101,114,118,97,116,105,111,110,32,111,114,32,99,111,110,118,101,110,105,101,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9157=allocate([117,110,107,110,111,119,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10158=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str159=allocate([79,66,74,69,67,84,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1160=allocate([98,114,111,119,115,101,45,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2161=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3162=allocate([100,101,115,99,114,105,98,101,45,99,108,97,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4163=allocate([65,98,115,116,114,97,99,116,58,32,100,105,114,101,99,116,32,105,110,115,116,97,110,99,101,115,32,111,102,32,116,104,105,115,32,99,108,97,115,115,32,99,97,110,110,111,116,32,98,101,32,99,114,101,97,116,101,100,46,10,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str5164=allocate([67,111,110,99,114,101,116,101,58,32,100,105,114,101,99,116,32,105,110,115,116,97,110,99,101,115,32,111,102,32,116,104,105,115,32,99,108,97,115,115,32,99,97,110,32,98,101,32,99,114,101,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6165=allocate([82,101,97,99,116,105,118,101,58,32,100,105,114,101,99,116,32,105,110,115,116,97,110,99,101,115,32,111,102,32,116,104,105,115,32,99,108,97,115,115,32,99,97,110,32,109,97,116,99,104,32,100,101,102,114,117,108,101,32,112,97,116,116,101,114,110,115,46,10,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str7166=allocate([78,111,110,45,114,101,97,99,116,105,118,101,58,32,100,105,114,101,99,116,32,105,110,115,116,97,110,99,101,115,32,111,102,32,116,104,105,115,32,99,108,97,115,115,32,99,97,110,110,111,116,32,109,97,116,99,104,32,100,101,102,114,117,108,101,32,112,97,116,116,101,114,110,115,46,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8167=allocate([68,105,114,101,99,116,32,83,117,112,101,114,99,108,97,115,115,101,115,58,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9168=allocate([73,110,104,101,114,105,116,97,110,99,101,32,80,114,101,99,101,100,101,110,99,101,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10169=allocate([68,105,114,101,99,116,32,83,117,98,99,108,97,115,115,101,115,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11170=allocate([37,37,45,37,108,100,46,37,108,100,115,32,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12171=allocate([37,37,45,37,108,100,46,37,108,100,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13172=allocate([10,67,111,110,115,116,114,97,105,110,116,32,105,110,102,111,114,109,97,116,105,111,110,32,102,111,114,32,115,108,111,116,115,58,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14173=allocate([82,101,99,111,103,110,105,122,101,100,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15174=allocate([82,87,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16175=allocate([78,73,76,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str17176=allocate([82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18177=allocate([87,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19178=allocate([100,101,102,99,108,97,115,115,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20179=allocate([115,117,112,101,114,99,108,97,115,115,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21180=allocate([115,117,98,99,108,97,115,115,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str22181=allocate([115,108,111,116,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23182=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24183=allocate([107,101,121,119,111,114,100,32,34,105,110,104,101,114,105,116,34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25184=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str26185=allocate([115,108,111,116,45,119,114,105,116,97,98,108,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27186=allocate([115,108,111,116,45,105,110,105,116,97,98,108,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28187=allocate([115,108,111,116,45,112,117,98,108,105,99,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29188=allocate([115,108,111,116,45,100,105,114,101,99,116,45,97,99,99,101,115,115,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str30189=allocate([115,108,111,116,45,100,101,102,97,117,108,116,45,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31190=allocate([63,78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32191=allocate([99,108,97,115,115,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33192=allocate([42,42,42,100,101,115,99,114,105,98,101,45,99,108,97,115,115,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34193=allocate([83,76,79,84,83,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str35194=allocate([83,89,77,32,83,84,82,32,73,78,78,32,73,78,65,32,69,88,65,32,70,84,65,32,73,78,84,32,70,76,84,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str36195=allocate([82,78,71,58,91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str37196=allocate([46,46,0],"i8",ALLOC_STATIC);STRING_TABLE.__str38197=allocate([93,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str39198=allocate([67,82,68,58,91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str40199=allocate([93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41200=allocate([32,43,32,32,32,43,32,32,32,43,32,32,32,43,32,32,32,43,32,32,32,43,32,32,32,43,32,32,32,43,32,32,82,78,71,58,91,45,111,111,46,46,43,111,111,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42201=allocate([32,67,82,68,58,91,48,46,46,43,111,111,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43202=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44203=allocate([32,35,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str45204=allocate([32,43,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str46=allocate([32,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str47=allocate([70,76,68,32,68,69,70,32,80,82,80,32,65,67,67,32,83,84,79,32,77,67,72,32,83,82,67,32,86,73,83,32,67,82,84,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str48=allocate([79,86,82,68,45,77,83,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str49=allocate([83,79,85,82,67,69,40,83,41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str50205=allocate([77,76,84,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51=allocate([83,71,76,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52=allocate([78,73,76,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53=allocate([68,89,78,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54=allocate([83,84,67,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str55=allocate([73,78,72,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str56=allocate([73,78,84,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str57=allocate([32,82,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str58=allocate([82,87,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str59=allocate([83,72,82,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str60=allocate([76,67,76,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61=allocate([82,67,84,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62=allocate([67,77,80,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63=allocate([69,88,67,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64=allocate([80,85,66,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str65=allocate([80,82,86,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str66=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str67=allocate([32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str68=allocate([32,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str69=allocate([67,76,65,83,83,69,88,77,0],"i8",ALLOC_STATIC);STRING_TABLE.__str70=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71=allocate([73,110,104,101,114,105,116,101,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72=allocate([32,102,114,111,109,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73=allocate([32,105,115,32,110,111,116,32,118,97,108,105,100,32,102,111,114,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str206=allocate([67,76,65,83,83,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1207=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2208=allocate([85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3209=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4210=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5211=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6212=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7213=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8214=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9215=allocate([112,117,116,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10216=allocate([77,97,120,105,109,117,109,32,110,117,109,98,101,114,32,111,102,32,115,105,109,117,108,116,97,110,101,111,117,115,32,99,108,97,115,115,32,104,105,101,114,97,114,99,104,121,10,32,32,116,114,97,118,101,114,115,97,108,115,32,101,120,99,101,101,100,101,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str234=allocate([99,108,97,115,115,45,97,98,115,116,114,97,99,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1235=allocate([99,108,97,115,115,45,114,101,97,99,116,105,118,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2236=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3237=allocate([99,108,97,115,115,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4238=allocate([99,108,97,115,115,45,115,117,112,101,114,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5239=allocate([99,108,97,115,115,45,115,117,98,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6240=allocate([103,101,116,45,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7241=allocate([115,108,111,116,45,102,97,99,101,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8242=allocate([115,108,111,116,45,115,111,117,114,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9243=allocate([115,108,111,116,45,116,121,112,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10244=allocate([115,108,111,116,45,97,108,108,111,119,101,100,45,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11245=allocate([115,108,111,116,45,97,108,108,111,119,101,100,45,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12246=allocate([115,108,111,116,45,114,97,110,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13247=allocate([115,108,111,116,45,99,97,114,100,105,110,97,108,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14248=allocate([77,76,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15249=allocate([83,71,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16250=allocate([78,73,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17251=allocate([68,89,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str18252=allocate([83,84,67,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19253=allocate([73,78,72,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20254=allocate([73,78,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21255=allocate([82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22256=allocate([82,87,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23257=allocate([83,72,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24258=allocate([76,67,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25259=allocate([82,67,84,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str26260=allocate([67,77,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27261=allocate([69,88,67,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28262=allocate([80,85,66,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29263=allocate([80,82,86,0],"i8",ALLOC_STATIC);STRING_TABLE.__str264=allocate([68,69,70,67,76,65,83,83,95,80,84,82,0],"i8",ALLOC_STATIC);
_SetupObjectSystem_defclassEntityRecord=allocate([0,0,0,0,82,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1732,0,0,0,1734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str1265=allocate([100,101,102,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2266=allocate([105,115,45,97,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3267=allocate([110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4268=allocate([105,110,105,116,105,97,108,45,111,98,106,101,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5269=allocate([79,66,74,69,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6270=allocate([80,82,73,77,73,84,73,86,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7271=allocate([85,83,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8272=allocate([78,85,77,66,69,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9273=allocate([73,78,84,69,71,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10274=allocate([70,76,79,65,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11275=allocate([76,69,88,69,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12276=allocate([83,89,77,66,79,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13277=allocate([83,84,82,73,78,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14278=allocate([77,85,76,84,73,70,73,69,76,68,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str15279=allocate([65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16280=allocate([69,88,84,69,82,78,65,76,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17281=allocate([70,65,67,84,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18282=allocate([73,78,83,84,65,78,67,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19283=allocate([73,78,83,84,65,78,67,69,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str20284=allocate([73,78,83,84,65,78,67,69,45,78,65,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21285=allocate([73,78,73,84,73,65,76,45,79,66,74,69,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22286=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23287=allocate([117,110,100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24288=allocate([85,110,100,101,102,99,108,97,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str25289=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26290=allocate([108,105,115,116,45,100,101,102,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27291=allocate([76,105,115,116,68,101,102,99,108,97,115,115,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28292=allocate([48,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29293=allocate([112,112,100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str30294=allocate([80,80,68,101,102,99,108,97,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31295=allocate([100,101,115,99,114,105,98,101,45,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32296=allocate([68,101,115,99,114,105,98,101,67,108,97,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33297=allocate([98,114,111,119,115,101,45,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str34298=allocate([66,114,111,119,115,101,67,108,97,115,115,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str35299=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str36300=allocate([103,101,116,45,100,101,102,99,108,97,115,115,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str37301=allocate([71,101,116,68,101,102,99,108,97,115,115,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str38302=allocate([115,117,112,101,114,99,108,97,115,115,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str39303=allocate([83,117,112,101,114,99,108,97,115,115,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str40304=allocate([50,50,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41305=allocate([115,117,98,99,108,97,115,115,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42306=allocate([83,117,98,99,108,97,115,115,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43307=allocate([99,108,97,115,115,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44308=allocate([67,108,97,115,115,69,120,105,115,116,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str45309=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str46310=allocate([77,101,115,115,97,103,101,72,97,110,100,108,101,114,69,120,105,115,116,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str47311=allocate([50,51,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str48312=allocate([99,108,97,115,115,45,97,98,115,116,114,97,99,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str49313=allocate([67,108,97,115,115,65,98,115,116,114,97,99,116,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str50314=allocate([99,108,97,115,115,45,114,101,97,99,116,105,118,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51315=allocate([67,108,97,115,115,82,101,97,99,116,105,118,101,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52316=allocate([99,108,97,115,115,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53317=allocate([67,108,97,115,115,83,108,111,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54318=allocate([49,50,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str55319=allocate([99,108,97,115,115,45,115,117,112,101,114,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str56320=allocate([67,108,97,115,115,83,117,112,101,114,99,108,97,115,115,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str57321=allocate([99,108,97,115,115,45,115,117,98,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str58322=allocate([67,108,97,115,115,83,117,98,99,108,97,115,115,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str59323=allocate([103,101,116,45,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str60324=allocate([71,101,116,68,101,102,109,101,115,115,97,103,101,72,97,110,100,108,101,114,115,76,105,115,116,67,109,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61325=allocate([48,50,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62326=allocate([115,108,111,116,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63327=allocate([83,108,111,116,69,120,105,115,116,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64328=allocate([115,108,111,116,45,102,97,99,101,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str65329=allocate([83,108,111,116,70,97,99,101,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str66330=allocate([115,108,111,116,45,115,111,117,114,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str67331=allocate([83,108,111,116,83,111,117,114,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str68332=allocate([115,108,111,116,45,116,121,112,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str69333=allocate([83,108,111,116,84,121,112,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str70334=allocate([115,108,111,116,45,97,108,108,111,119,101,100,45,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71335=allocate([83,108,111,116,65,108,108,111,119,101,100,86,97,108,117,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72336=allocate([115,108,111,116,45,97,108,108,111,119,101,100,45,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73337=allocate([83,108,111,116,65,108,108,111,119,101,100,67,108,97,115,115,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74=allocate([115,108,111,116,45,114,97,110,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str75=allocate([83,108,111,116,82,97,110,103,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str76=allocate([115,108,111,116,45,99,97,114,100,105,110,97,108,105,116,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str77=allocate([83,108,111,116,67,97,114,100,105,110,97,108,105,116,121,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str78=allocate([115,108,111,116,45,119,114,105,116,97,98,108,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str79=allocate([83,108,111,116,87,114,105,116,97,98,108,101,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str80=allocate([115,108,111,116,45,105,110,105,116,97,98,108,101,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81=allocate([83,108,111,116,73,110,105,116,97,98,108,101,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82=allocate([115,108,111,116,45,112,117,98,108,105,99,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83=allocate([83,108,111,116,80,117,98,108,105,99,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84=allocate([115,108,111,116,45,100,105,114,101,99,116,45,97,99,99,101,115,115,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str85=allocate([83,108,111,116,68,105,114,101,99,116,65,99,99,101,115,115,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str86=allocate([115,108,111,116,45,100,101,102,97,117,108,116,45,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str87=allocate([83,108,111,116,68,101,102,97,117,108,116,86,97,108,117,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str88=allocate([100,101,102,99,108,97,115,115,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str89=allocate([71,101,116,68,101,102,99,108,97,115,115,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str90=allocate([103,101,116,45,99,108,97,115,115,45,100,101,102,97,117,108,116,115,45,109,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91=allocate([71,101,116,67,108,97,115,115,68,101,102,97,117,108,116,115,77,111,100,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92338=allocate([48,48,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93=allocate([115,101,116,45,99,108,97,115,115,45,100,101,102,97,117,108,116,115,45,109,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94=allocate([83,101,116,67,108,97,115,115,68,101,102,97,117,108,116,115,77,111,100,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str95=allocate([105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str96=allocate([115,108,111,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str339=allocate([40,100,101,102,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1340=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2341=allocate([35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3342=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4343=allocate([114,111,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5344=allocate([99,111,110,99,114,101,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6345=allocate([97,98,115,116,114,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7346=allocate([112,97,116,116,101,114,110,45,109,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8347=allocate([110,111,110,45,114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9348=allocate([114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10349=allocate([115,108,111,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11350=allocate([115,105,110,103,108,101,45,115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12351=allocate([109,117,108,116,105,115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13352=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14353=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15354=allocate([67,76,65,83,83,80,83,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str16355=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17356=allocate([65,110,32,97,98,115,116,114,97,99,116,32,99,108,97,115,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,99,116,105,118,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18357=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19358=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,100,101,99,108,97,114,97,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str20359=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21360=allocate([67,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22361=allocate([32,97,108,114,101,97,100,121,32,100,101,99,108,97,114,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23362=allocate([67,97,110,110,111,116,32,114,101,100,101,102,105,110,101,32,97,32,112,114,101,100,101,102,105,110,101,100,32,115,121,115,116,101,109,32,99,108,97,115,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str24363=allocate([32,99,108,97,115,115,32,99,97,110,110,111,116,32,98,101,32,114,101,100,101,102,105,110,101,100,32,119,104,105,108,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25364=allocate([32,32,32,32,111,117,116,115,116,97,110,100,105,110,103,32,114,101,102,101,114,101,110,99,101,115,32,116,111,32,105,116,32,115,116,105,108,108,32,101,120,105,115,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str367=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1368=allocate([100,101,102,99,108,97,115,115,32,115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2369=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3370=allocate([100,101,102,97,117,108,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4371=allocate([100,101,102,97,117,108,116,45,100,121,110,97,109,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5372=allocate([97,99,99,101,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6373=allocate([114,101,97,100,45,119,114,105,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7374=allocate([114,101,97,100,45,111,110,108,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8375=allocate([105,110,105,116,105,97,108,105,122,101,45,111,110,108,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9376=allocate([115,116,111,114,97,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10377=allocate([108,111,99,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11378=allocate([115,104,97,114,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12379=allocate([112,114,111,112,97,103,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13380=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14381=allocate([110,111,45,105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15382=allocate([115,111,117,114,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str16383=allocate([101,120,99,108,117,115,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17384=allocate([99,111,109,112,111,115,105,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18385=allocate([112,97,116,116,101,114,110,45,109,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19386=allocate([110,111,110,45,114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20387=allocate([114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21388=allocate([118,105,115,105,98,105,108,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22389=allocate([112,114,105,118,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23390=allocate([112,117,98,108,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24391=allocate([99,114,101,97,116,101,45,97,99,99,101,115,115,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str25392=allocate([114,101,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26393=allocate([119,114,105,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str27394=allocate([78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28395=allocate([111,118,101,114,114,105,100,101,45,109,101,115,115,97,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29396=allocate([68,69,70,65,85,76,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str30397=allocate([115,108,111,116,32,100,101,102,97,117,108,116,32,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31398=allocate([67,83,84,82,78,67,72,75,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str32399=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33400=allocate([69,120,112,114,101,115,115,105,111,110,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34401=allocate([100,121,110,97,109,105,99,32,100,101,102,97,117,108,116,32,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str35402=allocate([67,76,83,76,84,80,83,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str36403=allocate([67,97,114,100,105,110,97,108,105,116,121,32,102,97,99,101,116,32,99,97,110,32,111,110,108,121,32,98,101,32,117,115,101,100,32,119,105,116,104,32,109,117,108,116,105,102,105,101,108,100,32,115,108,111,116,115,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str37404=allocate([114,101,97,100,45,111,110,108,121,32,115,108,111,116,115,32,109,117,115,116,32,104,97,118,101,32,97,32,100,101,102,97,117,108,116,32,118,97,108,117,101,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str38405=allocate([114,101,97,100,45,111,110,108,121,32,115,108,111,116,115,32,99,97,110,110,111,116,32,104,97,118,101,32,97,32,119,114,105,116,101,32,97,99,99,101,115,115,111,114,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str39406=allocate([110,111,45,105,110,104,101,114,105,116,32,115,108,111,116,115,32,99,97,110,110,111,116,32,97,108,115,111,32,98,101,32,112,117,98,108,105,99,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str40407=allocate([100,101,102,97,117,108,116,32,102,97,99,101,116,32,97,108,114,101,97,100,121,32,115,112,101,99,105,102,105,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41408=allocate([32,102,97,99,101,116,32,97,108,114,101,97,100,121,32,115,112,101,99,105,102,105,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42409=allocate([115,108,111,116,32,102,97,99,101,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43410=allocate([68,117,112,108,105,99,97,116,101,32,115,108,111,116,115,32,110,111,116,32,97,108,108,111,119,101,100,46,10,0],"i8",ALLOC_STATIC);__str415=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str1416=allocate([119,99,108,105,112,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2417=allocate([115,116,100,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3418=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4419=allocate([99,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str5420=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6421=allocate([67,79,77,77,76,73,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7422=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8423=allocate([69,120,112,101,99,116,101,100,32,97,32,39,40,39,44,32,99,111,110,115,116,97,110,116,44,32,111,114,32,103,108,111,98,97,108,32,118,97,114,105,97,98,108,101,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9424=allocate([69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,110,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10425=allocate([10,69,82,82,79,82,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11426=allocate([67,111,109,109,97,110,100,67,111,109,112,108,101,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str427=allocate([99,111,110,115,116,114,117,99,116,115,45,116,111,45,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1428=allocate([67,79,78,83,67,79,77,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2429=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3430=allocate([65,98,111,114,116,105,110,103,32,98,101,99,97,117,115,101,32,116,104,101,32,98,97,115,101,32,102,105,108,101,32,110,97,109,101,32,109,97,121,32,99,97,117,115,101,32,116,104,101,32,102,111,112,101,110,32,109,97,120,105,109,117,109,32,111,102,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4431=allocate([32,116,111,32,98,101,32,118,105,111,108,97,116,101,100,32,119,104,101,110,32,102,105,108,101,32,110,97,109,101,115,32,97,114,101,32,103,101,110,101,114,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5432=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6433=allocate([66,97,115,101,32,102,105,108,101,32,110,97,109,101,32,101,120,99,101,101,100,115,32,51,32,99,104,97,114,97,99,116,101,114,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str7434=allocate([32,32,84,104,105,115,32,109,97,121,32,99,97,117,115,101,32,102,105,108,101,115,32,116,111,32,98,101,32,111,118,101,114,119,114,105,116,116,101,110,32,105,102,32,102,105,108,101,32,110,97,109,101,32,108,101,110,103,116,104,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8435=allocate([32,32,105,115,32,108,105,109,105,116,101,100,32,111,110,32,121,111,117,114,32,112,108,97,116,102,111,114,109,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9436=allocate([112,111,115,105,116,105,118,101,32,105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10437=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11438=allocate([38,80,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12439=allocate([37,115,37,100,95,37,100,46,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13440=allocate([97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14441=allocate([119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str15442=allocate([35,105,110,99,108,117,100,101,32,34,37,115,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16443=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17444=allocate([38,69,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18445=allocate([38,69,37,100,95,37,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19446=allocate([115,116,114,117,99,116,32,101,120,112,114,32,69,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str20447=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,101,120,112,114,32,69,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21448=allocate([44,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22449=allocate([125,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23450=allocate([67,111,110,115,116,114,117,99,116,115,84,111,67,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24451=allocate([50,51,42,107,105,105,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str25452=allocate([37,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26453=allocate([65,68,71,72,74,75,77,78,79,81,82,84,85,86,87,88,89,90,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27454=allocate([37,99,95,0],"i8",ALLOC_STATIC);STRING_TABLE.__str28455=allocate([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29456=allocate([37,115,37,100,95,37,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str30457=allocate([37,115,32,37,115,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31458=allocate([101,120,116,101,114,110,32,37,115,32,37,115,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32459=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33460=allocate([44,78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34461=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str35462=allocate([48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str36463=allocate([78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str37464=allocate([67,72,83,32,38,37,115,37,100,95,37,108,100,91,37,108,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str38465=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str39466=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str40467=allocate([67,72,83,32,38,37,115,37,100,95,37,108,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41468=allocate([67,72,83,32,38,37,115,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42469=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43470=allocate([37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44471=allocate([86,83,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str45472=allocate([32,32,32,69,37,100,95,37,100,91,37,108,100,93,46,118,97,108,117,101,32,61,32,38,70,97,99,116,68,97,116,97,40,116,104,101,69,110,118,41,45,62,68,117,109,109,121,70,97,99,116,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str46473=allocate([32,32,32,69,37,100,95,37,100,91,37,108,100,93,46,118,97,108,117,101,32,61,32,38,73,110,115,116,97,110,99,101,68,97,116,97,40,116,104,101,69,110,118,41,45,62,68,117,109,109,121,73,110,115,116,97,110,99,101,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str47474=allocate([38,69,37,100,95,37,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str48475=allocate([38,69,37,100,95,37,100,91,37,108,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str49476=allocate([37,115,46,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str50477=allocate([35,105,102,110,100,101,102,32,95,67,79,78,83,84,82,85,67,84,95,67,79,77,80,73,76,69,82,95,72,69,65,68,69,82,95,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51478=allocate([35,100,101,102,105,110,101,32,95,67,79,78,83,84,82,85,67,84,95,67,79,77,80,73,76,69,82,95,72,69,65,68,69,82,95,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52479=allocate([35,105,110,99,108,117,100,101,32,60,115,116,100,105,111,46,104,62,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53480=allocate([35,105,110,99,108,117,100,101,32,34,115,101,116,117,112,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54481=allocate([35,105,110,99,108,117,100,101,32,34,101,120,112,114,101,115,115,110,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str55482=allocate([35,105,110,99,108,117,100,101,32,34,101,120,116,110,102,117,110,99,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str56483=allocate([35,105,110,99,108,117,100,101,32,34,37,115,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str57484=allocate([99,108,105,112,115,46,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str58485=allocate([10,35,100,101,102,105,110,101,32,86,83,32,40,118,111,105,100,32,42,41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str59486=allocate([10,35,101,110,100,105,102,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str60487=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61488=allocate([47,42,32,69,88,84,69,82,78,32,65,82,82,65,89,32,68,69,70,73,78,73,84,73,79,78,83,32,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62489=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63490=allocate([37,115,95,105,110,105,116,46,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str64491=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str65492=allocate([47,42,32,67,79,78,83,84,82,85,67,84,32,73,77,65,71,69,32,70,73,88,85,80,32,70,85,78,67,84,73,79,78,32,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str66493=allocate([10,118,111,105,100,32,70,105,120,117,112,67,73,109,97,103,101,95,37,100,40,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str67494=allocate([32,32,118,111,105,100,32,42,116,104,101,69,110,118,41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str68495=allocate([32,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str69496=allocate([32,32,125,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str70497=allocate([37,115,46,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71498=allocate([35,105,110,99,108,117,100,101,32,34,117,116,105,108,105,116,121,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72499=allocate([35,105,110,99,108,117,100,101,32,34,103,101,110,101,114,97,116,101,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73500=allocate([35,105,110,99,108,117,100,101,32,34,101,110,118,114,110,109,110,116,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74501=allocate([35,105,110,99,108,117,100,101,32,34,111,98,106,114,116,109,99,104,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str75502=allocate([35,105,110,99,108,117,100,101,32,34,114,117,108,101,98,108,100,46,104,34,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str76503=allocate([32,32,32,118,111,105,100,32,42,73,110,105,116,67,73,109,97,103,101,95,37,100,40,118,111,105,100,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str77504=allocate([32,32,32,118,111,105,100,32,70,105,120,117,112,67,73,109,97,103,101,95,37,100,40,118,111,105,100,32,42,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str78505=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str79506=allocate([47,42,32,67,79,78,83,84,82,85,67,84,32,73,77,65,71,69,32,73,78,73,84,73,65,76,73,90,65,84,73,79,78,32,70,85,78,67,84,73,79,78,32,42,47,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str80507=allocate([10,118,111,105,100,32,42,73,110,105,116,67,73,109,97,103,101,95,37,100,40,41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81508=allocate([32,32,32,115,116,97,116,105,99,32,118,111,105,100,32,42,116,104,101,69,110,118,32,61,32,78,85,76,76,59,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82509=allocate([32,32,32,105,102,32,40,116,104,101,69,110,118,32,33,61,32,78,85,76,76,41,32,114,101,116,117,114,110,40,78,85,76,76,41,59,10,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str83510=allocate([32,32,32,116,104,101,69,110,118,32,61,32,67,114,101,97,116,101,82,117,110,116,105,109,101,69,110,118,105,114,111,110,109,101,110,116,40,115,104,116,37,100,44,102,104,116,37,100,44,105,104,116,37,100,44,98,109,104,116,37,100,41,59,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84511=allocate([32,32,32,69,110,118,67,108,101,97,114,40,116,104,101,69,110,118,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str85512=allocate([32,32,32,80,101,114,105,111,100,105,99,67,108,101,97,110,117,112,40,116,104,101,69,110,118,44,84,82,85,69,44,70,65,76,83,69,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str86513=allocate([32,32,32,82,101,102,114,101,115,104,83,112,101,99,105,97,108,83,121,109,98,111,108,115,40,116,104,101,69,110,118,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str87514=allocate([32,32,32,73,110,115,116,97,108,108,70,117,110,99,116,105,111,110,76,105,115,116,40,116,104,101,69,110,118,44,80,37,100,95,49,41,59,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str88515=allocate([32,32,32,73,110,105,116,69,120,112,114,101,115,115,105,111,110,80,111,105,110,116,101,114,115,40,116,104,101,69,110,118,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str89516=allocate([32,32,32,70,105,120,117,112,67,73,109,97,103,101,95,37,100,40,116,104,101,69,110,118,41,59,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str90517=allocate([32,32,32,114,101,116,117,114,110,40,116,104,101,69,110,118,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91518=allocate([10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92519=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93520=allocate([47,42,32,70,85,78,67,84,73,79,78,32,76,73,83,84,32,68,69,70,73,78,73,84,73,79,78,32,32,32,32,32,32,32,32,32,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94521=allocate([47,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,47,10,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str95522=allocate([115,116,114,117,99,116,32,70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110,32,80,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str96523=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110,32,80,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str97=allocate([44,34,37,115,34,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str98=allocate([39,37,99,39,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str99=allocate([80,84,73,70,32,37,115,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str100=allocate([34,37,115,34,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101=allocate([48,44,48,44,37,100,44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102=allocate([125,125,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103=allocate([125,44,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str104=allocate([47,42,32,69,88,84,69,82,78,65,76,32,70,85,78,67,84,73,79,78,32,68,69,70,73,78,73,84,73,79,78,83,32,32,32,32,42,47,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str105=allocate([101,120,116,101,114,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str106=allocate([105,110,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str107=allocate([108,111,110,103,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str108=allocate([102,108,111,97,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str109=allocate([100,111,117,98,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str110=allocate([118,111,105,100,32,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111=allocate([99,104,97,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112=allocate([118,111,105,100,32,42,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113=allocate([118,111,105,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114=allocate([37,115,40,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str115524=allocate([118,111,105,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str116=allocate([118,111,105,100,32,42,44,68,65,84,65,95,79,66,74,69,67,84,95,80,84,82,95,65,82,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str117=allocate([68,65,84,65,95,79,66,74,69,67,84,95,80,84,82,95,65,82,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str118=allocate([41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str525=allocate([119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1526=allocate([99,108,101,97,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2527=allocate([67,108,101,97,114,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3528=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4529=allocate([114,101,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5530=allocate([82,101,115,101,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6531=allocate([99,111,109,112,105,108,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7532=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8533=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9534=allocate([67,79,78,83,84,82,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10535=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11536=allocate([83,111,109,101,32,99,111,110,115,116,114,117,99,116,115,32,97,114,101,32,115,116,105,108,108,32,105,110,32,117,115,101,46,32,67,108,101,97,114,32,99,97,110,110,111,116,32,99,111,110,116,105,110,117,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str556=allocate([103,101,116,45,100,121,110,97,109,105,99,45,99,111,110,115,116,114,97,105,110,116,45,99,104,101,99,107,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1557=allocate([71,68,67,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2558=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3559=allocate([115,101,116,45,100,121,110,97,109,105,99,45,99,111,110,115,116,114,97,105,110,116,45,99,104,101,99,107,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4560=allocate([83,68,67,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5561=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6562=allocate([103,101,116,45,115,116,97,116,105,99,45,99,111,110,115,116,114,97,105,110,116,45,99,104,101,99,107,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7563=allocate([71,83,67,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8564=allocate([115,101,116,45,115,116,97,116,105,99,45,99,111,110,115,116,114,97,105,110,116,45,99,104,101,99,107,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9565=allocate([83,83,67,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str574=allocate([103,101,116,45,115,116,114,97,116,101,103,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1575=allocate([115,101,116,45,115,116,114,97,116,101,103,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2576=allocate([100,101,112,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3577=allocate([98,114,101,97,100,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4578=allocate([108,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5579=allocate([109,101,97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6580=allocate([99,111,109,112,108,101,120,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7581=allocate([115,105,109,112,108,105,99,105,116,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8582=allocate([114,97,110,100,111,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9583=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,100,101,112,116,104,44,32,98,114,101,97,100,116,104,44,32,108,101,120,44,32,109,101,97,44,32,99,111,109,112,108,101,120,105,116,121,44,32,115,105,109,112,108,105,99,105,116,121,44,32,111,114,32,114,97,110,100,111,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10584=allocate([117,110,107,110,111,119,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str587=allocate([42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1588=allocate([37,115,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2589=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3590=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4591=allocate([100,101,102,109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5592=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6593=allocate([58,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str7594=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8595=allocate([108,105,115,116,45,119,97,116,99,104,45,105,116,101,109,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9596=allocate([119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10597=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11598=allocate([32,61,32,111,110,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12599=allocate([32,61,32,111,102,102,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str644=allocate([114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1645=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2646=allocate([10,69,82,82,79,82,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3647=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4648=allocate([99,111,109,112,105,108,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5649=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6650=allocate([67,83,84,82,67,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7651=allocate([77,105,115,115,105,110,103,32,110,97,109,101,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8652=allocate([32,99,111,110,115,116,114,117,99,116,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9653=allocate([109,111,100,117,108,101,32,115,112,101,99,105,102,105,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str10654=allocate([99,111,110,115,116,114,117,99,116,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11655=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12656=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13657=allocate([67,97,110,110,111,116,32,114,101,100,101,102,105,110,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14658=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str15659=allocate([32,119,104,105,108,101,32,105,116,32,105,115,32,105,110,32,117,115,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16660=allocate([82,101,100,101,102,105,110,105,110,103,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17661=allocate([68,101,102,105,110,105,110,103,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18662=allocate([58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19663=allocate([10,32,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str20664=allocate([67,97,110,110,111,116,32,100,101,102,105,110,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21665=allocate([32,98,101,99,97,117,115,101,32,111,102,32,97,110,32,105,109,112,111,114,116,47,101,120,112,111,114,116,32,99,111,110,102,108,105,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22666=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23667=allocate([32,99,97,117,115,101,100,32,98,121,32,116,104,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str24668=allocate([69,120,112,101,99,116,101,100,32,116,104,101,32,98,101,103,105,110,110,105,110,103,32,111,102,32,97,32,99,111,110,115,116,114,117,99,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str675=allocate([67,83,84,82,78,66,73,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1676=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2677=allocate([67,111,110,115,116,114,97,105,110,116,115,32,97,114,101,32,110,111,116,32,115,97,118,101,100,32,119,105,116,104,32,97,32,98,105,110,97,114,121,32,105,109,97,103,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3678=allocate([32,32,119,104,101,110,32,100,121,110,97,109,105,99,32,99,111,110,115,116,114,97,105,110,116,32,99,104,101,99,107,105,110,103,32,105,115,32,100,105,115,97,98,108,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str685=allocate([67,83,84,82,78,67,72,75,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1686=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2687=allocate([84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,116,117,114,110,32,118,97,108,117,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3688=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4689=allocate([102,111,117,110,100,32,105,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str5690=allocate([116,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6691=allocate([32,99,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7692=allocate([102,111,117,110,100,32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8693=allocate([10,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,104,101,32,97,108,108,111,119,101,100,32,116,121,112,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9694=allocate([10,100,111,101,115,32,110,111,116,32,102,97,108,108,32,105,110,32,116,104,101,32,97,108,108,111,119,101,100,32,114,97,110,103,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10695=allocate([10,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,104,101,32,97,108,108,111,119,101,100,32,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11696=allocate([10,100,111,101,115,32,110,111,116,32,115,97,116,105,115,102,121,32,116,104,101,32,99,97,114,100,105,110,97,108,105,116,121,32,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12697=allocate([10,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,104,101,32,97,108,108,111,119,101,100,32,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13698=allocate([32,102,111,114,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14699=allocate([32,102,111,114,32,102,105,101,108,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15700=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16701=allocate([32,116,111,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str710=allocate([67,83,84,82,78,67,77,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1711=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2712=allocate([67,111,110,115,116,114,97,105,110,116,115,32,97,114,101,32,110,111,116,32,115,97,118,101,100,32,119,105,116,104,32,97,32,99,111,110,115,116,114,117,99,116,115,45,116,111,45,99,32,105,109,97,103,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3713=allocate([32,32,119,104,101,110,32,100,121,110,97,109,105,99,32,99,111,110,115,116,114,97,105,110,116,32,99,104,101,99,107,105,110,103,32,105,115,32,100,105,115,97,98,108,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4714=allocate([101,120,116,101,114,110,32,67,79,78,83,84,82,65,73,78,84,95,82,69,67,79,82,68,32,67,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5715=allocate([67,79,78,83,84,82,65,73,78,84,95,82,69,67,79,82,68,32,67,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6716=allocate([123,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7717=allocate([44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8718=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9719=allocate([44,78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10720=allocate([44,78,85,76,76,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11721=allocate([44,38,67,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12722=allocate([37,100,44,37,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13723=allocate([125,125,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14724=allocate([125,44,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15725=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16726=allocate([38,67,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str731=allocate([116,121,112,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1732=allocate([97,108,108,111,119,101,100,45,115,121,109,98,111,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2733=allocate([97,108,108,111,119,101,100,45,115,116,114,105,110,103,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3734=allocate([97,108,108,111,119,101,100,45,105,110,116,101,103,101,114,115,47,110,117,109,98,101,114,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4735=allocate([97,108,108,111,119,101,100,45,102,108,111,97,116,115,47,110,117,109,98,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5736=allocate([97,108,108,111,119,101,100,45,99,108,97,115,115,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6737=allocate([97,108,108,111,119,101,100,45,105,110,115,116,97,110,99,101,45,110,97,109,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7738=allocate([97,108,108,111,119,101,100,45,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8739=allocate([114,97,110,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9740=allocate([97,108,108,111,119,101,100,45,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10741=allocate([67,83,84,82,78,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11742=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12743=allocate([84,104,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13744=allocate([32,97,116,116,114,105,98,117,116,101,32,99,111,110,102,108,105,99,116,115,32,119,105,116,104,32,116,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14745=allocate([32,97,116,116,114,105,98,117,116,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15746=allocate([99,97,114,100,105,110,97,108,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16747=allocate([97,108,108,111,119,101,100,45,108,101,120,101,109,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str17748=allocate([97,108,108,111,119,101,100,45,105,110,116,101,103,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18749=allocate([97,108,108,111,119,101,100,45,102,108,111,97,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19750=allocate([97,108,108,111,119,101,100,45,110,117,109,98,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20751=allocate([32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21752=allocate([84,104,101,32,99,97,114,100,105,110,97,108,105,116,121,32,97,116,116,114,105,98,117,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22753=allocate([99,97,110,32,111,110,108,121,32,98,101,32,117,115,101,100,32,119,105,116,104,32,109,117,108,116,105,102,105,101,108,100,32,115,108,111,116,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23754=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24755=allocate([63,86,65,82,73,65,66,76,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str25756=allocate([37,115,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26757=allocate([114,97,110,103,101,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str27758=allocate([77,105,110,105,109,117,109,32,114,97,110,103,101,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,108,101,115,115,32,116,104,97,110,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str28759=allocate([111,114,32,101,113,117,97,108,32,116,111,32,116,104,101,32,109,97,120,105,109,117,109,32,114,97,110,103,101,32,118,97,108,117,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str29760=allocate([77,105,110,105,109,117,109,32,99,97,114,100,105,110,97,108,105,116,121,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,108,101,115,115,32,116,104,97,110,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str30761=allocate([111,114,32,101,113,117,97,108,32,116,111,32,116,104,101,32,109,97,120,105,109,117,109,32,99,97,114,100,105,110,97,108,105,116,121,32,118,97,108,117,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31762=allocate([32,97,116,116,114,105,98,117,116,101,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32763=allocate([105,110,32,99,111,110,106,117,110,99,116,105,111,110,32,119,105,116,104,32,116,104,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33764=allocate([116,121,112,101,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34765=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str35766=allocate([83,89,77,66,79,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str36767=allocate([83,84,82,73,78,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str37768=allocate([76,69,88,69,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str38769=allocate([73,78,84,69,71,69,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str39770=allocate([70,76,79,65,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str40771=allocate([78,85,77,66,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41772=allocate([73,78,83,84,65,78,67,69,45,78,65,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42773=allocate([73,78,83,84,65,78,67,69,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43774=allocate([73,78,83,84,65,78,67,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str44775=allocate([69,88,84,69,82,78,65,76,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str45776=allocate([70,65,67,84,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str46777=allocate([97,108,108,111,119,101,100,45,110,117,109,98,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str47778=allocate([86,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,104,101,32,101,120,112,101,99,116,101,100,32,116,121,112,101,32,102,111,114,32,116,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str48779=allocate([32,97,116,116,114,105,98,117,116,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str802=allocate([110,105,108,0],"i8",ALLOC_STATIC);__str1803=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str2804=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3805=allocate([78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4806=allocate([68,69,82,73,86,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5807=allocate([100,101,102,97,117,108,116,45,100,121,110,97,109,105,99,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6808=allocate([100,101,102,97,117,108,116,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7809=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8810=allocate([68,69,70,65,85,76,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9811=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10812=allocate([84,104,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,102,111,114,32,97,32,115,105,110,103,108,101,32,102,105,101,108,100,32,115,108,111,116,32,109,117,115,116,32,98,101,32,97,32,115,105,110,103,108,101,32,102,105,101,108,100,32,118,97,108,117,101,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str817=allocate([100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1818=allocate([117,110,100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2819=allocate([85,110,100,101,102,105,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3820=allocate([49,49,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4821=allocate([112,112,100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5822=allocate([80,80,68,101,102,105,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6823=allocate([108,105,115,116,45,100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7824=allocate([76,105,115,116,68,101,102,105,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8825=allocate([48,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9826=allocate([103,101,116,45,100,101,102,105,110,115,116,97,110,99,101,115,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10827=allocate([71,101,116,68,101,102,105,110,115,116,97,110,99,101,115,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11828=allocate([100,101,102,105,110,115,116,97,110,99,101,115,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12829=allocate([71,101,116,68,101,102,105,110,115,116,97,110,99,101,115,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13830=allocate([109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14831=allocate([73,78,73,84,73,65,76,45,79,66,74,69,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15832=allocate([40,100,101,102,105,110,115,116,97,110,99,101,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str16833=allocate([97,99,116,105,118,101,45,109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17834=allocate([41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18835=allocate([64,0],"i8",ALLOC_STATIC);STRING_TABLE.__str19836=allocate([97,99,116,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20837=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str842=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str844=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1845=allocate([103,101,116,45,100,101,102,102,97,99,116,115,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2846=allocate([71,101,116,68,101,102,102,97,99,116,115,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3847=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4848=allocate([117,110,100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str5849=allocate([85,110,100,101,102,102,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6850=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7851=allocate([100,101,102,102,97,99,116,115,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8852=allocate([68,101,102,102,97,99,116,115,77,111,100,117,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str9853=allocate([108,105,115,116,45,100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10854=allocate([76,105,115,116,68,101,102,102,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11855=allocate([112,112,100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12856=allocate([80,80,68,101,102,102,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13857=allocate([97,115,115,101,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14858=allocate([105,110,105,116,105,97,108,45,102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str859=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1860=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2861=allocate([35,105,110,99,108,117,100,101,32,34,100,102,102,99,116,100,101,102,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3862=allocate([115,116,114,117,99,116,32,100,101,102,102,97,99,116,115,77,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4863=allocate([115,116,114,117,99,116,32,100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5864=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6865=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7866=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str869=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str876=allocate([40,100,101,102,102,97,99,116,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1877=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2879=allocate([36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3880=allocate([97,32,100,101,102,102,97,99,116,115,32,99,111,110,115,116,114,117,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4881=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str884=allocate([100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1885=allocate([100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str886=allocate([100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1887=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2888=allocate([38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3889=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4890=allocate([35,105,110,99,108,117,100,101,32,34,100,102,102,110,120,102,117,110,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5891=allocate([68,69,70,70,85,78,67,84,73,79,78,95,77,79,68,85,76,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6892=allocate([68,69,70,70,85,78,67,84,73,79,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7893=allocate([123,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8894=allocate([44,48,44,48,44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9895=allocate([44,37,100,44,37,100,44,37,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10896=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str899=allocate([100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1900=allocate([62,62,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2901=allocate([60,60,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3902=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4903=allocate([68,70,78,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5904=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6905=allocate([32,69,68,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7906=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8907=allocate([100,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9908=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str909=allocate([80,67,65,76,76,0],"i8",ALLOC_STATIC);_SetupDeffunctions_deffunctionEntityRecord=allocate([0,0,0,0,32,-128,0,0,1736,0,0,0,1736,0,0,0,0,0,0,0,1738,0,0,0,0,0,0,0,1740,0,0,0,1742,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str1910=allocate([100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2911=allocate([100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3912=allocate([100,101,102,102,117,110,99,116,105,111,110,45,104,101,97,100,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4913=allocate([117,110,100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5914=allocate([85,110,100,101,102,102,117,110,99,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6915=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7916=allocate([108,105,115,116,45,100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8917=allocate([76,105,115,116,68,101,102,102,117,110,99,116,105,111,110,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9918=allocate([48,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10919=allocate([112,112,100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11920=allocate([80,80,68,101,102,102,117,110,99,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12921=allocate([103,101,116,45,100,101,102,102,117,110,99,116,105,111,110,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13922=allocate([71,101,116,68,101,102,102,117,110,99,116,105,111,110,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14923=allocate([100,101,102,102,117,110,99,116,105,111,110,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15924=allocate([71,101,116,68,101,102,102,117,110,99,116,105,111,110,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str16925=allocate([40,100,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str17926=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str18927=allocate([32,40,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str19928=allocate([63,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str20929=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21930=allocate([36,63,119,105,108,100,97,114,103,115,41,41,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22931=allocate([41,41,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23932=allocate([68,70,70,78,88,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24933=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str25934=allocate([68,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str26935=allocate([32,111,110,108,121,32,112,97,114,116,105,97,108,108,121,32,100,101,108,101,116,101,100,32,100,117,101,32,116,111,32,117,115,97,103,101,32,98,121,32,111,116,104,101,114,32,99,111,110,115,116,114,117,99,116,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str941=allocate([40,100,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1942=allocate([100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2943=allocate([100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3944=allocate([33,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4945=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5946=allocate([68,70,70,78,88,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6947=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str7948=allocate([68,101,102,102,117,110,99,116,105,111,110,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,114,101,112,108,97,99,101,32,99,111,110,115,116,114,117,99,116,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str8949=allocate([68,101,102,102,117,110,99,116,105,111,110,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,114,101,112,108,97,99,101,32,101,120,116,101,114,110,97,108,32,102,117,110,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9950=allocate([68,101,102,103,101,110,101,114,105,99,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10951=allocate([32,105,109,112,111,114,116,101,100,32,102,114,111,109,32,109,111,100,117,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11952=allocate([32,99,111,110,102,108,105,99,116,115,32,119,105,116,104,32,116,104,105,115,32,100,101,102,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12953=allocate([68,101,102,102,117,110,99,116,105,111,110,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,114,101,112,108,97,99,101,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13954=allocate([68,70,78,88,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14955=allocate([68,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15956=allocate([32,109,97,121,32,110,111,116,32,98,101,32,114,101,100,101,102,105,110,101,100,32,119,104,105,108,101,32,105,116,32,105,115,32,101,120,101,99,117,116,105,110,103,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str960=allocate([100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str965=allocate([100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1966=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2967=allocate([35,105,110,99,108,117,100,101,32,34,100,101,102,105,110,115,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3968=allocate([68,69,70,73,78,83,84,65,78,67,69,83,95,77,79,68,85,76,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4969=allocate([68,69,70,73,78,83,84,65,78,67,69,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5970=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str6971=allocate([44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7972=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str977=allocate([68,82,73,86,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1978=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2980=allocate([84,104,105,115,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,105,110,32,116,104,101,32,106,111,105,110,32,110,101,116,119,111,114,107,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3981=allocate([32,32,32,80,114,111,98,108,101,109,32,114,101,115,105,100,101,115,32,105,110,32,106,111,105,110,32,35,37,100,32,105,110,32,114,117,108,101,40,115,41,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4982=allocate([32,32,32,32,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str5983=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str984=allocate([99,111,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1985=allocate([67,111,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2986=allocate([49,49,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3987=allocate([115,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4988=allocate([83,105,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str5989=allocate([116,97,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str6990=allocate([84,97,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str7991=allocate([115,101,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str8992=allocate([83,101,99,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str9993=allocate([99,115,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str10994=allocate([67,115,99,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11995=allocate([99,111,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12996=allocate([67,111,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13997=allocate([97,99,111,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14998=allocate([65,99,111,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str15999=allocate([97,115,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161000=allocate([65,115,105,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171001=allocate([97,116,97,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str181002=allocate([65,116,97,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191003=allocate([97,115,101,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201004=allocate([65,115,101,99,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211005=allocate([97,99,115,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221006=allocate([65,99,115,99,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231007=allocate([97,99,111,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str241008=allocate([65,99,111,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251009=allocate([99,111,115,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str261010=allocate([67,111,115,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str271011=allocate([115,105,110,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str281012=allocate([83,105,110,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str291013=allocate([116,97,110,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str301014=allocate([84,97,110,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str311015=allocate([115,101,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str321016=allocate([83,101,99,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str331017=allocate([99,115,99,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str341018=allocate([67,115,99,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str351019=allocate([99,111,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str361020=allocate([67,111,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str371021=allocate([97,99,111,115,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str381022=allocate([65,99,111,115,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str391023=allocate([97,115,105,110,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str401024=allocate([65,115,105,110,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str411025=allocate([97,116,97,110,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str421026=allocate([65,116,97,110,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str431027=allocate([97,115,101,99,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str441028=allocate([65,115,101,99,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str451029=allocate([97,99,115,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str461030=allocate([65,99,115,99,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str471031=allocate([97,99,111,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str481032=allocate([65,99,111,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str491033=allocate([109,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str501034=allocate([77,111,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str511035=allocate([50,50,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str521036=allocate([101,120,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str531037=allocate([69,120,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str541038=allocate([108,111,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str551039=allocate([76,111,103,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str561040=allocate([108,111,103,49,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str571041=allocate([76,111,103,49,48,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str581042=allocate([115,113,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str591043=allocate([83,113,114,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str601044=allocate([112,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str611045=allocate([80,105,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str621046=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str631047=allocate([100,101,103,45,114,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str641048=allocate([68,101,103,82,97,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str651049=allocate([114,97,100,45,100,101,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str661050=allocate([82,97,100,68,101,103,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str671051=allocate([100,101,103,45,103,114,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str681052=allocate([68,101,103,71,114,97,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str691053=allocate([103,114,97,100,45,100,101,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str701054=allocate([71,114,97,100,68,101,103,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str711055=allocate([42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str721056=allocate([80,111,119,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str731057=allocate([114,111,117,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str741058=allocate([82,111,117,110,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str751059=allocate([69,77,65,84,72,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str761060=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str771061=allocate([65,114,103,117,109,101,110,116,32,111,118,101,114,102,108,111,119,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str781062=allocate([32,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str791063=allocate([68,111,109,97,105,110,32,101,114,114,111,114,32,102,111,114,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str801064=allocate([83,105,110,103,117,108,97,114,105,116,121,32,97,116,32,97,115,121,109,112,116,111,116,101,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1065=allocate([115,116,97,116,105,115,116,105,99,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11066=allocate([102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21067=allocate([70,73,82,69,32,37,52,108,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31068=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41069=allocate([58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51070=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61071=allocate([80,82,67,67,79,68,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71072=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81073=allocate([69,120,101,99,117,116,105,111,110,32,104,97,108,116,101,100,32,100,117,114,105,110,103,32,116,104,101,32,97,99,116,105,111,110,115,32,111,102,32,100,101,102,114,117,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91074=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101075=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111076=allocate([66,114,101,97,107,105,110,103,32,111,110,32,114,117,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121077=allocate([114,117,108,101,32,102,105,114,105,110,103,32,108,105,109,105,116,32,114,101,97,99,104,101,100,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131078=allocate([32,114,117,108,101,115,32,102,105,114,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141079=allocate([37,108,100,32,109,101,97,110,32,110,117,109,98,101,114,32,111,102,32,102,97,99,116,115,32,40,37,108,100,32,109,97,120,105,109,117,109,41,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str151080=allocate([37,108,100,32,109,101,97,110,32,110,117,109,98,101,114,32,111,102,32,105,110,115,116,97,110,99,101,115,32,40,37,108,100,32,109,97,120,105,109,117,109,41,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161081=allocate([37,108,100,32,109,101,97,110,32,110,117,109,98,101,114,32,111,102,32,97,99,116,105,118,97,116,105,111,110,115,32,40,37,108,100,32,109,97,120,105,109,117,109,41,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str171082=allocate([61,61,62,32,70,111,99,117,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181083=allocate([32,102,114,111,109,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191084=allocate([108,105,115,116,45,102,111,99,117,115,45,115,116,97,99,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201085=allocate([114,117,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211086=allocate([104,97,108,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str221087=allocate([115,101,116,45,98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231088=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str241089=allocate([114,101,109,111,118,101,45,98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251090=allocate([82,117,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str261091=allocate([32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,97,32,98,114,101,97,107,112,111,105,110,116,32,115,101,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str271092=allocate([115,104,111,119,45,98,114,101,97,107,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str281093=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str291094=allocate([103,101,116,45,102,111,99,117,115,45,115,116,97,99,107,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str301095=allocate([112,111,112,45,102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str311096=allocate([103,101,116,45,102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str321097=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str331098=allocate([60,61,61,32,70,111,99,117,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str341099=allocate([32,116,111,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str351100=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1103=allocate([10,91,69,78,86,82,78,77,78,84,49,93,32,69,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,32,112,111,115,105,116,105,111,110,32,37,100,32,97,108,108,111,99,97,116,101,100,32,119,105,116,104,32,115,105,122,101,32,111,102,32,48,32,111,114,32,108,101,115,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11104=allocate([10,91,69,78,86,82,78,77,78,84,50,93,32,69,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,32,112,111,115,105,116,105,111,110,32,37,100,32,101,120,99,101,101,100,115,32,116,104,101,32,109,97,120,105,109,117,109,32,97,108,108,111,119,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21105=allocate([10,91,69,78,86,82,78,77,78,84,51,93,32,69,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,32,112,111,115,105,116,105,111,110,32,37,100,32,97,108,114,101,97,100,121,32,97,108,108,111,99,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31106=allocate([10,91,69,78,86,82,78,77,78,84,52,93,32,69,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,32,112,111,115,105,116,105,111,110,32,37,100,32,99,111,117,108,100,32,110,111,116,32,98,101,32,97,108,108,111,99,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);_EnvironmentHashTable=allocate(4,"i8",ALLOC_STATIC);_CurrentEnvironment=allocate(4,"i8",ALLOC_STATIC);
STRING_TABLE.__str41107=allocate([10,91,69,78,86,82,78,77,78,84,56,93,32,69,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,32,110,111,116,32,102,117,108,108,121,32,100,101,97,108,108,111,99,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51108=allocate([10,91,69,78,86,82,78,77,78,84,53,93,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,110,101,119,32,101,110,118,105,114,111,110,109,101,110,116,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61109=allocate([10,91,69,78,86,82,78,77,78,84,54,93,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,101,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,46,10,0],"i8",ALLOC_STATIC);_NextEnvironmentIndex=allocate(4,"i8",ALLOC_STATIC);STRING_TABLE.__str71110=allocate([10,91,69,78,86,82,78,77,78,84,55,93,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,101,110,118,105,114,111,110,109,101,110,116,32,100,97,116,97,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81111=allocate([10,91,69,78,86,82,78,77,78,84,52,93,32,85,110,97,98,108,101,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,101,110,118,105,114,111,110,109,101,110,116,32,104,97,115,104,32,116,97,98,108,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1118=allocate([69,86,65,76,85,65,84,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11119=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21120=allocate([86,97,114,105,97,98,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31121=allocate([32,105,115,32,117,110,98,111,117,110,100,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41122=allocate([60,85,110,107,110,111,119,110,80,114,105,110,116,84,121,112,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51123=allocate([62,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61124=allocate([78,111,32,102,117,110,99,116,105,111,110,44,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,111,114,32,100,101,102,102,117,110,99,116,105,111,110,32,111,102,32,110,97,109,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71125=allocate([32,101,120,105,115,116,115,32,102,111,114,32,101,120,116,101,114,110,97,108,32,99,97,108,108,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81126=allocate([99,114,101,97,116,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1153=allocate([97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11154=allocate([111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21155=allocate([101,113,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31156=allocate([110,101,113,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41157=allocate([110,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51158=allocate([69,88,80,82,69,83,83,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1189=allocate([63,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11190=allocate([36,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21191=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31192=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41193=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1212=allocate([102,117,110,99,116,105,111,110,32,99,97,108,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11213=allocate([69,88,80,82,78,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21214=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31215=allocate([65,32,102,117,110,99,116,105,111,110,32,110,97,109,101,32,109,117,115,116,32,98,101,32,97,32,115,121,109,98,111,108,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41216=allocate([77,105,115,115,105,110,103,32,102,117,110,99,116,105,111,110,32,100,101,99,108,97,114,97,116,105,111,110,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51217=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61218=allocate([40,101,120,112,97,110,115,105,111,110,45,99,97,108,108,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71219=allocate([101,120,112,97,110,100,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81220=allocate([36,32,83,101,113,117,101,110,99,101,32,111,112,101,114,97,116,111,114,32,110,111,116,32,97,32,118,97,108,105,100,32,97,114,103,117,109,101,110,116,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91221=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str101222=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111223=allocate([69,120,112,101,99,116,101,100,32,97,32,99,111,110,115,116,97,110,116,44,32,118,97,114,105,97,98,108,101,44,32,111,114,32,101,120,112,114,101,115,115,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121224=allocate([112,114,111,103,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131225=allocate([42,42,42,70,78,88,65,82,71,83,42,42,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str141226=allocate([67,97,110,110,111,116,32,114,101,97,100,32,97,114,103,117,109,101,110,116,115,32,102,111,114,32,101,120,116,101,114,110,97,108,32,99,97,108,108,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151227=allocate([79,110,108,121,32,99,111,110,115,116,97,110,116,32,97,114,103,117,109,101,110,116,115,32,97,108,108,111,119,101,100,32,102,111,114,32,101,120,116,101,114,110,97,108,32,102,117,110,99,116,105,111,110,32,99,97,108,108,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1238=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11239=allocate([70,117,110,99,116,105,111,110,32,112,97,114,115,101,114,115,32,99,97,110,32,111,110,108,121,32,98,101,32,97,100,100,101,100,32,102,111,114,32,101,120,105,115,116,105,110,103,32,102,117,110,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21240=allocate([70,117,110,99,116,105,111,110,32,112,97,114,115,101,114,115,32,99,97,110,32,111,110,108,121,32,98,101,32,114,101,109,111,118,101,100,32,102,114,111,109,32,101,120,105,115,116,105,110,103,32,102,117,110,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31241=allocate([79,110,108,121,32,101,120,105,115,116,105,110,103,32,102,117,110,99,116,105,111,110,115,32,99,97,110,32,98,101,32,109,97,114,107,101,100,32,97,115,32,117,115,105,110,103,32,115,101,113,117,101,110,99,101,32,101,120,112,97,110,115,105,111,110,32,97,114,103,117,109,101,110,116,115,47,111,118,101,114,108,111,97,100,97,98,108,101,32,111,114,32,110,111,116,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41242=allocate([101,120,116,101,114,110,97,108,32,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51243=allocate([105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,44,32,105,110,115,116,97,110,99,101,32,110,97,109,101,44,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61244=allocate([102,108,111,97,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str71245=allocate([105,110,116,101,103,101,114,44,32,102,108,111,97,116,44,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81246=allocate([105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,44,32,105,110,115,116,97,110,99,101,32,110,97,109,101,44,32,102,97,99,116,32,97,100,100,114,101,115,115,44,32,105,110,116,101,103,101,114,44,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91247=allocate([115,121,109,98,111,108,44,32,115,116,114,105,110,103,44,32,111,114,32,105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101248=allocate([115,121,109,98,111,108,32,111,114,32,115,116,114,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111249=allocate([105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121250=allocate([109,117,108,116,105,102,105,101,108,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131251=allocate([105,110,116,101,103,101,114,32,111,114,32,102,108,111,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141252=allocate([105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151253=allocate([105,110,115,116,97,110,99,101,32,110,97,109,101,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str161254=allocate([109,117,108,116,105,102,105,101,108,100,44,32,115,121,109,98,111,108,44,32,111,114,32,115,116,114,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171255=allocate([115,116,114,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181256=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191257=allocate([105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str201258=allocate([102,97,99,116,45,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211259=allocate([102,97,99,116,45,97,100,100,114,101,115,115,44,32,105,110,116,101,103,101,114,44,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221260=allocate([110,111,110,45,118,111,105,100,32,114,101,116,117,114,110,32,118,97,108,117,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str231261=allocate([117,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32,116,121,112,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1272=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1278=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11279=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1280=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11281=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21282=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31283=allocate([35,105,110,99,108,117,100,101,32,34,102,97,99,116,98,108,100,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41284=allocate([115,116,114,117,99,116,32,102,97,99,116,80,97,116,116,101,114,110,78,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51285=allocate([123,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61286=allocate([44,48,44,37,100,44,37,100,44,37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71287=allocate([44,78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81288=allocate([44,38,37,115,37,100,95,37,108,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91289=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101290=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111291=allocate([78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121292=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1295=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11296=allocate([70,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21297=allocate([42,52,105,117,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31298=allocate([97,115,115,101,114,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41299=allocate([65,115,115,101,114,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51300=allocate([114,101,116,114,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61301=allocate([82,101,116,114,97,99,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71302=allocate([49,42,122,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81303=allocate([97,115,115,101,114,116,45,115,116,114,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91304=allocate([65,115,115,101,114,116,83,116,114,105,110,103,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101305=allocate([49,49,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111306=allocate([115,116,114,45,97,115,115,101,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121307=allocate([103,101,116,45,102,97,99,116,45,100,117,112,108,105,99,97,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131308=allocate([71,101,116,70,97,99,116,68,117,112,108,105,99,97,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141309=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151310=allocate([115,101,116,45,102,97,99,116,45,100,117,112,108,105,99,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161311=allocate([83,101,116,70,97,99,116,68,117,112,108,105,99,97,116,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str171312=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181313=allocate([115,97,118,101,45,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191314=allocate([83,97,118,101,70,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201315=allocate([49,42,119,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211316=allocate([108,111,97,100,45,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str221317=allocate([76,111,97,100,70,97,99,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231318=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str241319=allocate([102,97,99,116,45,105,110,100,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251320=allocate([70,97,99,116,73,110,100,101,120,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str261321=allocate([49,49,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str271322=allocate([102,97,99,116,45,97,100,100,114,101,115,115,44,32,102,97,99,116,45,105,110,100,101,120,44,32,111,114,32,116,104,101,32,115,121,109,98,111,108,32,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str281323=allocate([102,45,37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str291324=allocate([102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str301325=allocate([42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str311326=allocate([102,97,99,116,45,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str321327=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str331328=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str341329=allocate([115,121,109,98,111,108,32,111,114,32,112,111,115,105,116,105,118,101,32,110,117,109,98,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str351330=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str361331=allocate([108,111,99,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str371332=allocate([118,105,115,105,98,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str381333=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,108,111,99,97,108,32,111,114,32,118,105,115,105,98,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str391334=allocate([119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str401335=allocate([114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str411336=allocate([42,42,42,32,108,111,97,100,45,102,97,99,116,115,45,102,114,111,109,45,115,116,114,105,110,103,32,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str421337=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str431338=allocate([97,115,115,101,114,116,32,99,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str441339=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str451340=allocate([70,117,110,99,116,105,111,110,32,108,111,97,100,45,102,97,99,116,115,32,101,110,99,111,117,110,116,101,114,101,100,32,97,110,32,101,114,114,111,114,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str461341=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str471342=allocate([108,111,99,97,108,32,100,101,102,116,101,109,112,108,97,116,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str481343=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str491344=allocate([118,105,115,105,98,108,101,32,100,101,102,116,101,109,112,108,97,116,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str501345=allocate([112,111,115,105,116,105,118,101,32,110,117,109,98,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1346=allocate([102,97,99,116,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11347=allocate([70,97,99,116,69,120,105,115,116,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21348=allocate([49,49,122,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31349=allocate([102,97,99,116,45,114,101,108,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41350=allocate([70,97,99,116,82,101,108,97,116,105,111,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51351=allocate([102,97,99,116,45,115,108,111,116,45,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61352=allocate([70,97,99,116,83,108,111,116,86,97,108,117,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71353=allocate([50,50,42,122,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81354=allocate([102,97,99,116,45,115,108,111,116,45,110,97,109,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91355=allocate([70,97,99,116,83,108,111,116,78,97,109,101,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101356=allocate([103,101,116,45,102,97,99,116,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111357=allocate([71,101,116,70,97,99,116,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121358=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131359=allocate([112,112,102,97,99,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str141360=allocate([80,80,70,97,99,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151361=allocate([49,51,42,122,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161362=allocate([105,109,112,108,105,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171363=allocate([100,101,102,109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181364=allocate([42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191365=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str201366=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211367=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221368=allocate([102,97,99,116,45,97,100,100,114,101,115,115,32,111,114,32,102,97,99,116,45,105,110,100,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231369=allocate([102,45,37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str241370=allocate([102,97,99,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1371=allocate([70,65,67,84,95,74,78,95,86,65,82,49,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factJNGV1Info=allocate([0,0,0,0,57,64,0,0,1744,0,0,0,1744,0,0,0,0,0,0,0,1746,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str11372=allocate([70,65,67,84,95,74,78,95,86,65,82,50,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factJNGV2Info=allocate([0,0,0,0,58,64,0,0,1748,0,0,0,1748,0,0,0,0,0,0,0,1750,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str21373=allocate([70,65,67,84,95,74,78,95,86,65,82,51,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factJNGV3Info=allocate([0,0,0,0,59,64,0,0,1752,0,0,0,1752,0,0,0,0,0,0,0,1754,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str31374=allocate([70,65,67,84,95,80,78,95,86,65,82,49,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNGV1Info=allocate([0,0,0,0,54,64,0,0,1756,0,0,0,1756,0,0,0,0,0,0,0,1758,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str41375=allocate([70,65,67,84,95,80,78,95,86,65,82,50,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNGV2Info=allocate([0,0,0,0,55,64,0,0,1760,0,0,0,1760,0,0,0,0,0,0,0,1762,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str51376=allocate([70,65,67,84,95,80,78,95,86,65,82,51,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNGV3Info=allocate([0,0,0,0,56,64,0,0,1764,0,0,0,1764,0,0,0,0,0,0,0,1766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str61377=allocate([70,65,67,84,95,74,78,95,67,77,80,49,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factJNCV1Info=allocate([0,0,0,0,51,-64,0,0,1768,0,0,0,1768,0,0,0,0,0,0,0,1770,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str71378=allocate([70,65,67,84,95,74,78,95,67,77,80,50,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factJNCV2Info=allocate([0,0,0,0,52,-64,0,0,1772,0,0,0,1772,0,0,0,0,0,0,0,1774,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str81379=allocate([70,65,67,84,95,80,78,95,67,77,80,49,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNCV1Info=allocate([0,0,0,0,50,-64,0,0,1776,0,0,0,1776,0,0,0,0,0,0,0,1778,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str91380=allocate([70,65,67,84,95,83,84,79,82,69,95,77,85,76,84,73,70,73,69,76,68,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factStoreMFInfo=allocate([0,0,0,0,62,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1780,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str101381=allocate([70,65,67,84,95,83,76,79,84,95,76,69,78,71,84,72,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factSlotLengthInfo=allocate([0,0,0,0,53,64,0,0,1782,0,0,0,1782,0,0,0,0,0,0,0,1784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str111382=allocate([70,65,67,84,95,80,78,95,67,79,78,83,84,65,78,84,49,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNConstant1Info=allocate([0,0,0,0,60,-64,0,0,1786,0,0,0,1786,0,0,0,0,0,0,0,1788,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str121383=allocate([70,65,67,84,95,80,78,95,67,79,78,83,84,65,78,84,50,0],"i8",ALLOC_STATIC);_InitializeFactReteFunctions_factPNConstant2Info=allocate([0,0,0,0,61,-64,0,0,1790,0,0,0,1790,0,0,0,0,0,0,0,1792,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str1408=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11409=allocate([116,104,101,32,102,105,114,115,116,32,102,105,101,108,100,32,111,102,32,97,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21410=allocate([102,97,99,116,32,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31411=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41412=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51413=allocate([105,110,105,116,105,97,108,45,102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61414=allocate([70,65,67,84,76,72,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71415=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81416=allocate([67,114,101,97,116,105,110,103,32,105,109,112,108,105,101,100,32,105,110,105,116,105,97,108,45,102,97,99,116,32,100,101,102,116,101,109,112,108,97,116,101,32,105,110,32,109,111,100,117,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91417=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str101418=allocate([32,32,89,111,117,32,112,114,111,98,97,98,108,121,32,119,97,110,116,32,116,111,32,105,109,112,111,114,116,32,116,104,105,115,32,100,101,102,116,101,109,112,108,97,116,101,32,102,114,111,109,32,116,104,101,32,77,65,73,78,32,109,111,100,117,108,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111419=allocate([105,109,112,108,105,101,100,32,100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1426=allocate([70,65,67,84,77,67,72,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11427=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21428=allocate([84,104,105,115,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,105,110,32,116,104,101,32,102,97,99,116,32,112,97,116,116,101,114,110,32,110,101,116,119,111,114,107,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31429=allocate([32,32,32,67,117,114,114,101,110,116,108,121,32,97,99,116,105,118,101,32,102,97,99,116,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41430=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51431=allocate([32,32,32,80,114,111,98,108,101,109,32,114,101,115,105,100,101,115,32,105,110,32,102,105,101,108,100,32,35,37,100,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61432=allocate([32,32,32,80,114,111,98,108,101,109,32,114,101,115,105,100,101,115,32,105,110,32,115,108,111,116,32,37,115,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71433=allocate([32,32,32,32,32,32,79,102,32,112,97,116,116,101,114,110,32,35,37,100,32,105,110,32,114,117,108,101,40,115,41,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81434=allocate([32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1439=allocate([70,65,67,84,95,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);
_InitializeFacts_factInfo=allocate([0,0,0,0,6,32,0,0,1794,0,0,0,1796,0,0,0,1798,0,0,0,0,0,0,0,1800,0,0,0,1802,0,0,0,1804,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1806,0,0,0,1808,0,0,0,1810,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str11440=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21441=allocate([102,45,37,45,53,108,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31442=allocate([102,45,37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41443=allocate([34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51444=allocate([60,70,97,99,116,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61445=allocate([62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71446=allocate([60,68,117,109,109,121,32,70,97,99,116,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81447=allocate([40,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91448=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101449=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111450=allocate([70,65,67,84,77,78,71,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121451=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131452=allocate([70,97,99,116,115,32,109,97,121,32,110,111,116,32,98,101,32,114,101,116,114,97,99,116,101,100,32,100,117,114,105,110,103,32,112,97,116,116,101,114,110,45,109,97,116,99,104,105,110,103,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141453=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151454=allocate([60,61,61,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161455=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str171456=allocate([70,97,99,116,115,32,109,97,121,32,110,111,116,32,98,101,32,97,115,115,101,114,116,101,100,32,100,117,114,105,110,103,32,112,97,116,116,101,114,110,45,109,97,116,99,104,105,110,103,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181457=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191458=allocate([61,61,62,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201459=allocate([70,97,99,116,80,80,70,111,114,109,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1516=allocate([102,97,99,116,45,115,101,116,32,113,117,101,114,121,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11517=allocate([40,113,117,101,114,121,45,102,97,99,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21518=allocate([40,113,117,101,114,121,45,102,97,99,116,45,115,108,111,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31519=allocate([113,117,101,114,121,45,118,97,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41520=allocate([70,65,67,84,81,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51521=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61522=allocate([67,97,110,110,111,116,32,114,101,98,105,110,100,32,102,97,99,116,45,115,101,116,32,109,101,109,98,101,114,32,118,97,114,105,97,98,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71523=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81524=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91525=allocate([66,105,110,100,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,102,97,99,116,45,115,101,116,32,113,117,101,114,121,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101526=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111527=allocate([68,117,112,108,105,99,97,116,101,32,102,97,99,116,32,109,101,109,98,101,114,32,118,97,114,105,97,98,108,101,32,110,97,109,101,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121528=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131529=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1530=allocate([40,81,68,83,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11531=allocate([40,113,117,101,114,121,45,102,97,99,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21532=allocate([71,101,116,81,117,101,114,121,70,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31533=allocate([40,113,117,101,114,121,45,102,97,99,116,45,115,108,111,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41534=allocate([71,101,116,81,117,101,114,121,70,97,99,116,83,108,111,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51535=allocate([97,110,121,45,102,97,99,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61536=allocate([65,110,121,70,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71537=allocate([102,105,110,100,45,102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81538=allocate([81,117,101,114,121,70,105,110,100,70,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91539=allocate([102,105,110,100,45,97,108,108,45,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str101540=allocate([81,117,101,114,121,70,105,110,100,65,108,108,70,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111541=allocate([100,111,45,102,111,114,45,102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121542=allocate([81,117,101,114,121,68,111,70,111,114,70,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131543=allocate([100,111,45,102,111,114,45,97,108,108,45,102,97,99,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str141544=allocate([81,117,101,114,121,68,111,70,111,114,65,108,108,70,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151545=allocate([100,101,108,97,121,101,100,45,100,111,45,102,111,114,45,97,108,108,45,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161546=allocate([68,101,108,97,121,101,100,81,117,101,114,121,68,111,70,111,114,65,108,108,70,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171547=allocate([103,101,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str181548=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191549=allocate([105,109,112,108,105,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201550=allocate([102,97,99,116,45,115,101,116,32,113,117,101,114,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211551=allocate([102,97,99,116,45,115,101,116,32,113,117,101,114,121,32,99,108,97,115,115,32,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str221552=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1593=allocate([97,115,115,101,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11594=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21595=allocate([112,114,111,103,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31596=allocate([82,72,83,32,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41597=allocate([102,105,114,115,116,32,102,105,101,108,100,32,111,102,32,97,32,82,72,83,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51598=allocate([61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61599=allocate([58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71600=allocate([97,32,114,101,108,97,116,105,111,110,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81601=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91602=allocate([105,109,112,108,105,101,100,32,100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101603=allocate([32,0],"i8",ALLOC_STATIC);__str111604=allocate(2,"i8",ALLOC_STATIC);STRING_TABLE.__str121605=allocate([97,115,115,101,114,116,95,115,116,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131606=allocate([116,104,101,32,97,115,115,101,114,116,45,115,116,114,105,110,103,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str141607=allocate([70,65,67,84,82,72,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151608=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161609=allocate([84,101,109,112,108,97,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171610=allocate([32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,32,102,111,114,32,97,115,115,101,114,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1617=allocate([98,97,116,99,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11618=allocate([66,97,116,99,104,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21619=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31620=allocate([98,97,116,99,104,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41621=allocate([66,97,116,99,104,83,116,97,114,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51622=allocate([100,114,105,98,98,108,101,45,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61623=allocate([68,114,105,98,98,108,101,79,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71624=allocate([100,114,105,98,98,108,101,45,111,102,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81625=allocate([68,114,105,98,98,108,101,79,102,102,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91626=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101627=allocate([115,97,118,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111628=allocate([83,97,118,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121629=allocate([108,111,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131630=allocate([76,111,97,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141631=allocate([108,111,97,100,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151632=allocate([76,111,97,100,83,116,97,114,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str161633=allocate([98,115,97,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171634=allocate([66,115,97,118,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181635=allocate([98,108,111,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191636=allocate([66,108,111,97,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201637=allocate([119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211638=allocate([100,114,105,98,98,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str221639=allocate([37,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231640=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str241641=allocate([114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251642=allocate([115,116,100,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str261643=allocate([119,99,108,105,112,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str271644=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str281645=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str291646=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str301647=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str311648=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1655=allocate([102,105,108,101,105,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11656=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21657=allocate([115,116,100,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31658=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41659=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51660=allocate([119,99,108,105,112,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61661=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71662=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81663=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91664=allocate([37,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1665=allocate([65,78,65,76,89,83,73,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1670=allocate([103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11671=allocate([100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1672=allocate([103,101,110,101,114,105,99,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11673=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21674=allocate([38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31675=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41676=allocate([35,105,110,99,108,117,100,101,32,34,103,101,110,114,99,102,117,110,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51677=allocate([68,69,70,71,69,78,69,82,73,67,95,77,79,68,85,76,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61678=allocate([68,69,70,71,69,78,69,82,73,67,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71679=allocate([68,69,70,77,69,84,72,79,68,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81680=allocate([44,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91681=allocate([82,69,83,84,82,73,67,84,73,79,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101682=allocate([118,111,105,100,32,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111683=allocate([86,83,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121684=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131685=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141686=allocate([38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151687=allocate([44,37,117,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161688=allocate([123,37,117,44,48,44,37,100,44,37,100,44,37,100,44,37,100,44,37,117,44,48,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str171689=allocate([44,78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181690=allocate([44,48,44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191691=allocate([44,37,117,44,48,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201692=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1695=allocate([71,67,65,76,76,0],"i8",ALLOC_STATIC);
_SetupGenericFunctions_genericEntityRecord=allocate([0,0,0,0,31,-128,0,0,1812,0,0,0,1812,0,0,0,0,0,0,0,1814,0,0,0,0,0,0,0,1816,0,0,0,1818,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str11697=allocate([100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21698=allocate([100,101,102,103,101,110,101,114,105,99,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31699=allocate([100,101,102,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41700=allocate([100,101,102,109,101,116,104,111,100,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51701=allocate([117,110,100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61702=allocate([85,110,100,101,102,103,101,110,101,114,105,99,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71703=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81704=allocate([117,110,100,101,102,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91705=allocate([85,110,100,101,102,109,101,116,104,111,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101706=allocate([50,50,42,119,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111707=allocate([99,97,108,108,45,110,101,120,116,45,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121708=allocate([67,97,108,108,78,101,120,116,77,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131709=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141710=allocate([99,97,108,108,45,115,112,101,99,105,102,105,99,45,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str151711=allocate([67,97,108,108,83,112,101,99,105,102,105,99,77,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161712=allocate([50,42,42,119,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171713=allocate([111,118,101,114,114,105,100,101,45,110,101,120,116,45,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181714=allocate([79,118,101,114,114,105,100,101,78,101,120,116,77,101,116,104,111,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str191715=allocate([110,101,120,116,45,109,101,116,104,111,100,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201716=allocate([78,101,120,116,77,101,116,104,111,100,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211717=allocate([40,103,110,114,99,45,99,117,114,114,101,110,116,45,97,114,103,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221718=allocate([71,101,116,71,101,110,101,114,105,99,67,117,114,114,101,110,116,65,114,103,117,109,101,110,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str231719=allocate([112,112,100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str241720=allocate([80,80,68,101,102,103,101,110,101,114,105,99,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251721=allocate([108,105,115,116,45,100,101,102,103,101,110,101,114,105,99,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str261722=allocate([76,105,115,116,68,101,102,103,101,110,101,114,105,99,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str271723=allocate([48,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str281724=allocate([112,112,100,101,102,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str291725=allocate([80,80,68,101,102,109,101,116,104,111,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str301726=allocate([50,50,42,119,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str311727=allocate([108,105,115,116,45,100,101,102,109,101,116,104,111,100,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str321728=allocate([76,105,115,116,68,101,102,109,101,116,104,111,100,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str331729=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str341730=allocate([112,114,101,118,105,101,119,45,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str351731=allocate([80,114,101,118,105,101,119,71,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str361732=allocate([49,42,42,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str371733=allocate([103,101,116,45,100,101,102,103,101,110,101,114,105,99,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str381734=allocate([71,101,116,68,101,102,103,101,110,101,114,105,99,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str391735=allocate([103,101,116,45,100,101,102,109,101,116,104,111,100,45,108,105,115,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str401736=allocate([71,101,116,68,101,102,109,101,116,104,111,100,76,105,115,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str411737=allocate([103,101,116,45,109,101,116,104,111,100,45,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str421738=allocate([71,101,116,77,101,116,104,111,100,82,101,115,116,114,105,99,116,105,111,110,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str431739=allocate([50,50,105,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str441740=allocate([100,101,102,103,101,110,101,114,105,99,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str451741=allocate([71,101,116,68,101,102,103,101,110,101,114,105,99,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str461742=allocate([116,121,112,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str471743=allocate([67,108,97,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str481744=allocate([49,49,117,0],"i8",ALLOC_STATIC);STRING_TABLE.__str491745=allocate([103,101,110,101,114,105,99,45,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str501746=allocate([109,101,116,104,111,100,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str511747=allocate([42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str521748=allocate([71,69,78,82,67,67,79,77,0],"i8",ALLOC_STATIC);STRING_TABLE.__str531749=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str541750=allocate([78,111,32,115,117,99,104,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str551751=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,117,110,100,101,102,109,101,116,104,111,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str561752=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,109,101,116,104,111,100,32,105,110,100,101,120,32,105,110,32,102,117,110,99,116,105,111,110,32,117,110,100,101,102,109,101,116,104,111,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str571753=allocate([80,82,78,84,85,84,73,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str581754=allocate([85,110,97,98,108,101,32,116,111,32,100,101,108,101,116,101,32,109,101,116,104,111,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str591755=allocate([32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str601756=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str611757=allocate([73,110,99,111,109,112,108,101,116,101,32,109,101,116,104,111,100,32,115,112,101,99,105,102,105,99,97,116,105,111,110,32,102,111,114,32,100,101,108,101,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str621758=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str631759=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str641760=allocate([109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str651761=allocate([108,105,115,116,45,119,97,116,99,104,45,105,116,101,109,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str661762=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str671763=allocate([32,61,32,111,110,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str681764=allocate([32,61,32,111,102,102,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str691765=allocate([58,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str701766=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str711767=allocate([103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str721768=allocate([109,101,116,104,111,100,32,105,110,100,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str731769=allocate([119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str741770=allocate([117,110,119,97,116,99,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str751771=allocate([67,97,110,110,111,116,32,114,101,109,111,118,101,32,105,109,112,108,105,99,105,116,32,115,121,115,116,101,109,32,102,117,110,99,116,105,111,110,32,109,101,116,104,111,100,32,102,111,114,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1776=allocate([103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11777=allocate([71,69,78,82,67,69,88,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str21778=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31779=allocate([71,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41780=allocate([32,109,101,116,104,111,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51781=allocate([32,105,115,32,110,111,116,32,97,112,112,108,105,99,97,98,108,101,32,116,111,32,116,104,101,32,103,105,118,101,110,32,97,114,103,117,109,101,110,116,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61782=allocate([62,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71783=allocate([60,60,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81784=allocate([78,111,32,97,112,112,108,105,99,97,98,108,101,32,109,101,116,104,111,100,115,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91785=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101786=allocate([103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str111787=allocate([83,104,97,100,111,119,101,100,32,109,101,116,104,111,100,115,32,110,111,116,32,97,112,112,108,105,99,97,98,108,101,32,105,110,32,99,117,114,114,101,110,116,32,99,111,110,116,101,120,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121788=allocate([99,97,108,108,45,115,112,101,99,105,102,105,99,45,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131789=allocate([85,110,97,98,108,101,32,116,111,32,100,101,116,101,114,109,105,110,101,32,99,108,97,115,115,32,111,102,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141790=allocate([32,105,110,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151791=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161792=allocate([77,84,72,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171793=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str181794=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191795=allocate([58,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201796=allocate([83,89,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211797=allocate([32,69,68,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221798=allocate([71,78,67,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1811=allocate([103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11812=allocate([71,69,78,82,67,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21813=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31814=allocate([68,101,102,103,101,110,101,114,105,99,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41815=allocate([32,99,97,110,110,111,116,32,98,101,32,109,111,100,105,102,105,101,100,32,119,104,105,108,101,32,111,110,101,32,111,102,32,105,116,115,32,109,101,116,104,111,100,115,32,105,115,32,101,120,101,99,117,116,105,110,103,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51816=allocate([112,114,101,118,105,101,119,45,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str61817=allocate([85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71818=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,112,114,101,118,105,101,119,45,103,101,110,101,114,105,99,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81819=allocate([83,89,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91820=allocate([37,45,50,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str101821=allocate([36,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111822=allocate([40,36,63,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121823=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131824=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141825=allocate([60,113,114,121,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151826=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str161827=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str171828=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181829=allocate([85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,109,101,116,104,111,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191830=allocate([32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str201831=allocate([58,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211832=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str221833=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str231834=allocate([78,111,32,97,112,112,108,105,99,97,98,108,101,32,109,101,116,104,111,100,115,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1867=allocate([40,100,101,102,103,101,110,101,114,105,99,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11868=allocate([100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21869=allocate([94,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31870=allocate([71,69,78,82,67,80,83,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41871=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51872=allocate([69,120,112,101,99,116,101,100,32,39,41,39,32,116,111,32,99,111,109,112,108,101,116,101,32,100,101,102,103,101,110,101,114,105,99,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61873=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71874=allocate([40,100,101,102,109,101,116,104,111,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str81875=allocate([100,101,102,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91876=allocate([109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101877=allocate([67,97,110,110,111,116,32,114,101,112,108,97,99,101,32,116,104,101,32,105,109,112,108,105,99,105,116,32,115,121,115,116,101,109,32,109,101,116,104,111,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111878=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str121879=allocate([78,101,119,32,109,101,116,104,111,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131880=allocate([32,119,111,117,108,100,32,98,101,32,105,110,100,105,115,116,105,110,103,117,105,115,104,97,98,108,101,32,102,114,111,109,32,109,101,116,104,111,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141881=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151882=allocate([32,32,32,77,101,116,104,111,100,32,35,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str161883=allocate([32,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str171884=allocate([32,114,101,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str181885=allocate([99,117,114,114,101,110,116,45,97,114,103,117,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str191886=allocate([40,103,110,114,99,45,99,117,114,114,101,110,116,45,97,114,103,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str201887=allocate([69,120,112,101,99,116,101,100,32,97,32,39,40,39,32,116,111,32,98,101,103,105,110,32,109,101,116,104,111,100,32,112,97,114,97,109,101,116,101,114,32,114,101,115,116,114,105,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str211888=allocate([80,82,67,67,79,68,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str221889=allocate([78,111,32,112,97,114,97,109,101,116,101,114,115,32,97,108,108,111,119,101,100,32,97,102,116,101,114,32,119,105,108,100,99,97,114,100,32,112,97,114,97,109,101,116,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str231890=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,114,105,97,98,108,101,32,102,111,114,32,112,97,114,97,109,101,116,101,114,32,115,112,101,99,105,102,105,99,97,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str241891=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str251892=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,114,105,97,98,108,101,32,111,114,32,39,40,39,32,102,111,114,32,112,97,114,97,109,101,116,101,114,32,115,112,101,99,105,102,105,99,97,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str261893=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str271894=allocate([81,117,101,114,121,32,109,117,115,116,32,98,101,32,108,97,115,116,32,105,110,32,112,97,114,97,109,101,116,101,114,32,114,101,115,116,114,105,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str281895=allocate([68,117,112,108,105,99,97,116,101,32,99,108,97,115,115,101,115,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,112,97,114,97,109,101,116,101,114,32,114,101,115,116,114,105,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str291896=allocate([66,105,110,100,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,113,117,101,114,121,32,101,120,112,114,101,115,115,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str301897=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,99,108,97,115,115,32,110,97,109,101,32,111,114,32,113,117,101,114,121,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str311898=allocate([32,99,108,97,115,115,32,105,115,32,114,101,100,117,110,100,97,110,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str321899=allocate([85,110,107,110,111,119,110,32,99,108,97,115,115,32,105,110,32,109,101,116,104,111,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str331900=allocate([68,117,112,108,105,99,97,116,101,32,112,97,114,97,109,101,116,101,114,32,110,97,109,101,115,32,110,111,116,32,97,108,108,111,119,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str341901=allocate([38,0],"i8",ALLOC_STATIC);STRING_TABLE.__str351902=allocate([77,101,116,104,111,100,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str361903=allocate([40,100,101,102,103,101,110,101,114,105,99,32,37,115,58,58,37,115,41,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str371904=allocate([68,101,102,103,101,110,101,114,105,99,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,114,101,112,108,97,99,101,32,99,111,110,115,116,114,117,99,116,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str381905=allocate([68,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str391906=allocate([32,105,109,112,111,114,116,101,100,32,102,114,111,109,32,109,111,100,117,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str401907=allocate([32,99,111,110,102,108,105,99,116,115,32,119,105,116,104,32,116,104,105,115,32,100,101,102,103,101,110,101,114,105,99,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str411908=allocate([68,101,102,103,101,110,101,114,105,99,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,114,101,112,108,97,99,101,32,100,101,102,102,117,110,99,116,105,111,110,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str421909=allocate([84,104,101,32,115,121,115,116,101,109,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str431910=allocate([32,99,97,110,110,111,116,32,98,101,32,111,118,101,114,108,111,97,100,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1915=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);_WatchGlobals=allocate(4,"i8",ALLOC_STATIC);STRING_TABLE.__str1923=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11924=allocate([103,101,116,45,100,101,102,103,108,111,98,97,108,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21925=allocate([71,101,116,68,101,102,103,108,111,98,97,108,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31926=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41927=allocate([117,110,100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51928=allocate([85,110,100,101,102,103,108,111,98,97,108,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61929=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71930=allocate([100,101,102,103,108,111,98,97,108,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81931=allocate([68,101,102,103,108,111,98,97,108,77,111,100,117,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91932=allocate([108,105,115,116,45,100,101,102,103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101933=allocate([76,105,115,116,68,101,102,103,108,111,98,97,108,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111934=allocate([112,112,100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121935=allocate([80,80,68,101,102,103,108,111,98,97,108,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str131936=allocate([103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1939=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11940=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21941=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31942=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str41943=allocate([35,105,110,99,108,117,100,101,32,34,103,108,111,98,108,100,101,102,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51944=allocate([115,116,114,117,99,116,32,100,101,102,103,108,111,98,97,108,77,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61945=allocate([115,116,114,117,99,116,32,100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71946=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81947=allocate([44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91948=allocate([48,44,48,44,37,108,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101949=allocate([123,78,85,76,76,44,82,86,79,73,68,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111950=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121951=allocate([32,32,32,82,101,115,101,116,68,101,102,103,108,111,98,97,108,115,40,116,104,101,69,110,118,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1957=allocate([115,101,116,45,114,101,115,101,116,45,103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str11958=allocate([83,101,116,82,101,115,101,116,71,108,111,98,97,108,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21959=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str31960=allocate([103,101,116,45,114,101,115,101,116,45,103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41961=allocate([71,101,116,82,101,115,101,116,71,108,111,98,97,108,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str51962=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61963=allocate([115,104,111,119,45,100,101,102,103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71964=allocate([83,104,111,119,68,101,102,103,108,111,98,97,108,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81965=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str91966=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str101967=allocate([58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111968=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121969=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131970=allocate([63,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str141971=allocate([42,32,61,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1974=allocate([71,66,76,95,86,65,82,73,65,66,76,69,0],"i8",ALLOC_STATIC);
_InitializeDefglobals_globalInfo=allocate([0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1820,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str11975=allocate([68,69,70,71,76,79,66,65,76,95,80,84,82,0],"i8",ALLOC_STATIC);
_InitializeDefglobals_defglobalPtrRecord=allocate([0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1822,0,0,0,0,0,0,0,1824,0,0,0,1826,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str21976=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31977=allocate([100,101,102,103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str41978=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str51979=allocate([58,61,61,32,63,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str61980=allocate([42,32,61,61,62,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str71981=allocate([32,60,61,61,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str81982=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str91983=allocate([71,108,111,98,97,108,86,97,108,117,101,70,111,114,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str101984=allocate([63,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str111985=allocate([42,32,61,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str121986=allocate([71,76,79,66,76,68,69,70,0],"i8",ALLOC_STATIC);STRING_TABLE.__str131987=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str141988=allocate([71,108,111,98,97,108,32,118,97,114,105,97,98,108,101,32,63,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str151989=allocate([42,32,105,115,32,117,110,98,111,117,110,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1996=allocate([40,100,101,102,103,108,111,98,97,108,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str11997=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str21998=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str31999=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42000=allocate([71,76,79,66,76,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52001=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62002=allocate([10,71,108,111,98,97,108,32,118,97,114,105,97,98,108,101,32,63,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72003=allocate([42,32,119,97,115,32,114,101,102,101,114,101,110,99,101,100,44,32,98,117,116,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82004=allocate([99,111,109,112,105,108,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92005=allocate([67,83,84,82,67,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102006=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str112007=allocate([82,101,100,101,102,105,110,105,110,103,32,100,101,102,103,108,111,98,97,108,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122008=allocate([68,101,102,105,110,105,110,103,32,100,101,102,103,108,111,98,97,108,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132009=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142010=allocate([58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152011=allocate([61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162012=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2017=allocate([60,61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12018=allocate([108,101,110,103,116,104,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22019=allocate([76,69,88,69,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32020=allocate([78,85,77,66,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42021=allocate([73,78,83,84,65,78,67,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52022=allocate([65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2025=allocate([115,101,116,45,105,110,99,114,101,109,101,110,116,97,108,45,114,101,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12026=allocate([73,78,67,82,82,83,69,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22027=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str32028=allocate([84,104,101,32,105,110,99,114,101,109,101,110,116,97,108,32,114,101,115,101,116,32,98,101,104,97,118,105,111,114,32,99,97,110,110,111,116,32,98,101,32,99,104,97,110,103,101,100,32,119,105,116,104,32,114,117,108,101,115,32,108,111,97,100,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42029=allocate([103,101,116,45,105,110,99,114,101,109,101,110,116,97,108,45,114,101,115,101,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2030=allocate([100,101,102,99,108,97,115,115,32,105,110,104,101,114,105,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12031=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22032=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32033=allocate([73,78,72,69,82,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42034=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52035=allocate([65,32,99,108,97,115,115,32,109,97,121,32,110,111,116,32,104,97,118,101,32,105,116,115,101,108,102,32,97,115,32,97,32,115,117,112,101,114,99,108,97,115,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62036=allocate([65,32,99,108,97,115,115,32,109,97,121,32,105,110,104,101,114,105,116,32,102,114,111,109,32,97,32,115,117,112,101,114,99,108,97,115,115,32,111,110,108,121,32,111,110,99,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72037=allocate([65,32,99,108,97,115,115,32,109,117,115,116,32,98,101,32,100,101,102,105,110,101,100,32,97,102,116,101,114,32,97,108,108,32,105,116,115,32,115,117,112,101,114,99,108,97,115,115,101,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82038=allocate([65,32,117,115,101,114,45,100,101,102,105,110,101,100,32,99,108,97,115,115,32,99,97,110,110,111,116,32,98,101,32,97,32,115,117,98,99,108,97,115,115,32,111,102,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str92039=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102040=allocate([77,117,115,116,32,104,97,118,101,32,97,116,32,108,101,97,115,116,32,111,110,101,32,115,117,112,101,114,99,108,97,115,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112041=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122042=allocate([80,97,114,116,105,97,108,32,112,114,101,99,101,100,101,110,99,101,32,108,105,115,116,32,102,111,114,109,101,100,58,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132043=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142044=allocate([80,114,101,99,101,100,101,110,99,101,32,108,111,111,112,32,105,110,32,115,117,112,101,114,99,108,97,115,115,101,115,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2049=allocate([73,78,83,84,65,78,67,69,95,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);
_SetupInstances_instanceInfo=allocate([0,0,0,0,7,0,0,0,1828,0,0,0,1830,0,0,0,1832,0,0,0,0,0,0,0,1834,0,0,0,1836,0,0,0,1838,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1840,0,0,0,1842,0,0,0,1844,0,0,0,1846,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str12050=allocate([105,110,105,116,105,97,108,105,122,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22051=allocate([73,110,97,99,116,105,118,101,73,110,105,116,105,97,108,105,122,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32052=allocate([97,99,116,105,118,101,45,105,110,105,116,105,97,108,105,122,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42053=allocate([73,110,105,116,105,97,108,105,122,101,73,110,115,116,97,110,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52054=allocate([109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62055=allocate([73,110,97,99,116,105,118,101,77,97,107,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72056=allocate([97,99,116,105,118,101,45,109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str82057=allocate([77,97,107,101,73,110,115,116,97,110,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92058=allocate([105,110,105,116,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102059=allocate([73,110,105,116,83,108,111,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112060=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122061=allocate([100,101,108,101,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132062=allocate([68,101,108,101,116,101,73,110,115,116,97,110,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142063=allocate([40,99,114,101,97,116,101,45,105,110,115,116,97,110,99,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152064=allocate([67,114,101,97,116,101,73,110,115,116,97,110,99,101,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162065=allocate([117,110,109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172066=allocate([85,110,109,97,107,101,73,110,115,116,97,110,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182067=allocate([49,42,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192068=allocate([105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202069=allocate([73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212070=allocate([42,51,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str222071=allocate([112,112,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str232072=allocate([80,80,73,110,115,116,97,110,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242073=allocate([115,121,109,98,111,108,45,116,111,45,105,110,115,116,97,110,99,101,45,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252074=allocate([83,121,109,98,111,108,84,111,73,110,115,116,97,110,99,101,78,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str262075=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272076=allocate([105,110,115,116,97,110,99,101,45,110,97,109,101,45,116,111,45,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282077=allocate([73,110,115,116,97,110,99,101,78,97,109,101,84,111,83,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292078=allocate([49,49,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str302079=allocate([105,110,115,116,97,110,99,101,45,97,100,100,114,101,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312080=allocate([73,110,115,116,97,110,99,101,65,100,100,114,101,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322081=allocate([49,50,101,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332082=allocate([105,110,115,116,97,110,99,101,45,97,100,100,114,101,115,115,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str342083=allocate([73,110,115,116,97,110,99,101,65,100,100,114,101,115,115,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352084=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362085=allocate([105,110,115,116,97,110,99,101,45,110,97,109,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372086=allocate([73,110,115,116,97,110,99,101,78,97,109,101,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str382087=allocate([105,110,115,116,97,110,99,101,45,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str392088=allocate([73,110,115,116,97,110,99,101,78,97,109,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str402089=allocate([49,49,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str412090=allocate([105,110,115,116,97,110,99,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str422091=allocate([73,110,115,116,97,110,99,101,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str432092=allocate([105,110,115,116,97,110,99,101,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str442093=allocate([73,110,115,116,97,110,99,101,69,120,105,115,116,80,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str452094=allocate([99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str462095=allocate([67,108,97,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str472096=allocate([42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str482097=allocate([100,101,102,109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str492098=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str502099=allocate([107,101,121,119,111,114,100,32,34,105,110,104,101,114,105,116,34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str512100=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str522101=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str532102=allocate([58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str542103=allocate([105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str552104=allocate([42,42,42,77,75,73,78,83,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str562105=allocate([105,110,115,116,97,110,99,101,32,100,101,102,105,110,105,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str572106=allocate([101,120,116,101,114,110,97,108,32,112,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str582107=allocate([42,42,42,73,110,115,116,97,110,99,101,80,80,70,111,114,109,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str592108=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str602109=allocate([73,78,83,67,79,77,0],"i8",ALLOC_STATIC);STRING_TABLE.__str612110=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str622111=allocate([85,110,100,101,102,105,110,101,100,32,116,121,112,101,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str632112=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str642113=allocate([114,101,116,114,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str652114=allocate([105,110,115,116,97,110,99,101,45,97,100,100,114,101,115,115,44,32,105,110,115,116,97,110,99,101,45,110,97,109,101,44,32,111,114,32,116,104,101,32,115,121,109,98,111,108,32,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str662115=allocate([109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str672116=allocate([105,110,115,116,97,110,99,101,32,110,97,109,101,44,32,105,110,115,116,97,110,99,101,32,97,100,100,114,101,115,115,32,111,114,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str682117=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str692118=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str702119=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2128=allocate([5,6,7,67,76,73,80,83,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12129=allocate([86,54,46,48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22130=allocate([115,97,118,101,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32131=allocate([83,97,118,101,73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42132=allocate([49,42,119,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52133=allocate([108,111,97,100,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str62134=allocate([76,111,97,100,73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72135=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82136=allocate([114,101,115,116,111,114,101,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92137=allocate([82,101,115,116,111,114,101,73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102138=allocate([98,115,97,118,101,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112139=allocate([66,105,110,97,114,121,83,97,118,101,73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122140=allocate([98,108,111,97,100,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132141=allocate([66,105,110,97,114,121,76,111,97,100,73,110,115,116,97,110,99,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142142=allocate([42,42,42,32,108,111,97,100,45,105,110,115,116,97,110,99,101,115,45,102,114,111,109,45,115,116,114,105,110,103,32,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152143=allocate([119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162144=allocate([119,98,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172145=allocate([73,78,83,70,73,76,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182146=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192147=allocate([70,117,110,99,116,105,111,110,32,98,108,111,97,100,45,105,110,115,116,97,110,99,101,115,32,117,110,97,98,108,101,32,116,111,32,108,111,97,100,32,105,110,115,116,97,110,99,101,32,91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202148=allocate([93,32,111,102,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str212149=allocate([32,102,105,108,101,32,105,115,32,110,111,116,32,97,32,98,105,110,97,114,121,32,105,110,115,116,97,110,99,101,115,32,102,105,108,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222150=allocate([32,102,105,108,101,32,105,115,32,110,111,116,32,97,32,99,111,109,112,97,116,105,98,108,101,32,98,105,110,97,114,121,32,105,110,115,116,97,110,99,101,115,32,102,105,108,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str232151=allocate([70,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242152=allocate([32,99,111,117,108,100,32,110,111,116,32,99,111,109,112,108,101,116,101,108,121,32,112,114,111,99,101,115,115,32,102,105,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252153=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str262154=allocate([114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272155=allocate([109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str282156=allocate([105,110,115,116,97,110,99,101,32,100,101,102,105,110,105,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292157=allocate([40,91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302158=allocate([93,32,111,102,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312159=allocate([10,32,32,32,40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322160=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332161=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str342162=allocate([41,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352163=allocate([118,97,108,105,100,32,99,108,97,115,115,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362164=allocate([118,97,108,105,100,32,99,111,110,99,114,101,116,101,32,99,108,97,115,115,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372165=allocate([115,121,109,98,111,108,32,34,108,111,99,97,108,34,32,111,114,32,34,118,105,115,105,98,108,101,34,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str382166=allocate([108,111,99,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str392167=allocate([118,105,115,105,98,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str402168=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2172=allocate([73,78,83,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12173=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str22174=allocate([67,97,110,110,111,116,32,109,111,100,105,102,121,32,114,101,97,99,116,105,118,101,32,105,110,115,116,97,110,99,101,32,115,108,111,116,115,32,119,104,105,108,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32175=allocate([32,32,112,97,116,116,101,114,110,45,109,97,116,99,104,105,110,103,32,105,115,32,105,110,32,112,114,111,99,101,115,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42176=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52177=allocate([58,58,61,32,115,104,97,114,101,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62178=allocate([58,58,61,32,108,111,99,97,108,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72179=allocate([32,105,110,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82180=allocate([32,60,45,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92181=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102182=allocate([85,110,97,98,108,101,32,116,111,32,112,97,116,116,101,114,110,45,109,97,116,99,104,32,111,110,32,115,104,97,114,101,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112183=allocate([32,105,110,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122184=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132185=allocate([32,105,108,108,101,103,97,108,32,102,111,114,32,115,105,110,103,108,101,45,102,105,101,108,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str142186=allocate([86,111,105,100,32,102,117,110,99,116,105,111,110,32,105,108,108,101,103,97,108,32,118,97,108,117,101,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152187=allocate([67,83,84,82,78,67,72,75,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162188=allocate([32,102,111,114,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172189=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,105,110,115,116,97,110,99,101,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182190=allocate([78,111,32,115,117,99,104,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192191=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str202192=allocate([73,110,118,97,108,105,100,32,105,110,115,116,97,110,99,101,45,97,100,100,114,101,115,115,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212193=allocate([44,32,97,114,103,117,109,101,110,116,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222194=allocate([115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str232195=allocate([32,111,102,32,105,110,115,116,97,110,99,101,32,91,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str242196=allocate([93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252197=allocate([32,111,102,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str262198=allocate([32,102,111,117,110,100,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272199=allocate([91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282200=allocate([93,32,111,102,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292201=allocate([60,115,116,97,108,101,32,105,110,115,116,97,110,99,101,32,91,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str302202=allocate([93,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312203=allocate([34,60,68,117,109,109,121,32,73,110,115,116,97,110,99,101,62,34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322204=allocate([34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332205=allocate([60,68,117,109,109,121,32,73,110,115,116,97,110,99,101,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str342206=allocate([60,83,116,97,108,101,32,73,110,115,116,97,110,99,101,45,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str352207=allocate([62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362208=allocate([60,73,110,115,116,97,110,99,101,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2251=allocate([105,110,105,116,105,97,108,105,122,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12252=allocate([73,78,83,77,78,71,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22253=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str32254=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,110,97,109,101,32,102,111,114,32,110,101,119,32,105,110,115,116,97,110,99,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42255=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,99,108,97,115,115,32,110,97,109,101,32,102,111,114,32,110,101,119,32,105,110,115,116,97,110,99,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52256=allocate([68,117,109,109,121,32,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62257=allocate([37,115,58,58,37,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72258=allocate([67,97,110,110,111,116,32,99,114,101,97,116,101,32,105,110,115,116,97,110,99,101,115,32,111,102,32,114,101,97,99,116,105,118,101,32,99,108,97,115,115,101,115,32,119,104,105,108,101,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str82259=allocate([32,32,112,97,116,116,101,114,110,45,109,97,116,99,104,105,110,103,32,105,115,32,105,110,32,112,114,111,99,101,115,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92260=allocate([67,97,110,110,111,116,32,99,114,101,97,116,101,32,105,110,115,116,97,110,99,101,115,32,111,102,32,97,98,115,116,114,97,99,116,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102261=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str112262=allocate([73,110,118,97,108,105,100,32,109,111,100,117,108,101,32,115,112,101,99,105,102,105,101,114,32,105,110,32,110,101,119,32,105,110,115,116,97,110,99,101,32,110,97,109,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122263=allocate([84,104,101,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132264=allocate([32,104,97,115,32,97,32,115,108,111,116,45,118,97,108,117,101,32,119,104,105,99,104,32,100,101,112,101,110,100,115,32,111,110,32,116,104,101,32,105,110,115,116,97,110,99,101,32,100,101,102,105,110,105,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142265=allocate([85,110,97,98,108,101,32,116,111,32,100,101,108,101,116,101,32,111,108,100,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str152266=allocate([105,110,105,116,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162267=allocate([67,97,110,110,111,116,32,100,101,108,101,116,101,32,105,110,115,116,97,110,99,101,115,32,111,102,32,114,101,97,99,116,105,118,101,32,99,108,97,115,115,101,115,32,119,104,105,108,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172268=allocate([67,97,110,110,111,116,32,100,101,108,101,116,101,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182269=allocate([32,100,117,114,105,110,103,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192270=allocate([60,61,61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202271=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212272=allocate([32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str222273=allocate([105,110,105,116,45,115,108,111,116,115,32,110,111,116,32,118,97,108,105,100,32,105,110,32,116,104,105,115,32,99,111,110,116,101,120,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str232274=allocate([102,117,110,99,116,105,111,110,32,105,110,105,116,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242275=allocate([79,118,101,114,114,105,100,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str252276=allocate([32,105,110,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str262277=allocate([32,105,110,115,116,97,110,99,101,32,100,101,108,101,116,101,100,32,98,121,32,115,108,111,116,45,111,118,101,114,114,105,100,101,32,101,118,97,108,117,97,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272278=allocate([73,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str282279=allocate([32,105,115,32,97,108,114,101,97,100,121,32,98,101,105,110,103,32,105,110,105,116,105,97,108,105,122,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292280=allocate([65,110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,100,117,114,105,110,103,32,116,104,101,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,111,102,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str302281=allocate([69,120,112,101,99,116,101,100,32,97,32,118,97,108,105,100,32,115,108,111,116,32,110,97,109,101,32,102,111,114,32,115,108,111,116,45,111,118,101,114,114,105,100,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312282=allocate([83,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322283=allocate([32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,32,105,110,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str332284=allocate([102,117,110,99,116,105,111,110,32,109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str342285=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352286=allocate([61,61,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2303=allocate([109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12304=allocate([73,110,97,99,116,105,118,101,77,111,100,105,102,121,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22305=allocate([97,99,116,105,118,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32306=allocate([77,111,100,105,102,121,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42307=allocate([109,101,115,115,97,103,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52308=allocate([73,110,97,99,116,105,118,101,77,115,103,77,111,100,105,102,121,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62309=allocate([97,99,116,105,118,101,45,109,101,115,115,97,103,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72310=allocate([77,115,103,77,111,100,105,102,121,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82311=allocate([100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92312=allocate([73,110,97,99,116,105,118,101,68,117,112,108,105,99,97,116,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102313=allocate([97,99,116,105,118,101,45,100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112314=allocate([68,117,112,108,105,99,97,116,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122315=allocate([109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132316=allocate([73,110,97,99,116,105,118,101,77,115,103,68,117,112,108,105,99,97,116,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142317=allocate([97,99,116,105,118,101,45,109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152318=allocate([77,115,103,68,117,112,108,105,99,97,116,101,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str162319=allocate([40,100,105,114,101,99,116,45,109,111,100,105,102,121,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172320=allocate([68,105,114,101,99,116,77,111,100,105,102,121,77,115,103,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182321=allocate([40,109,101,115,115,97,103,101,45,109,111,100,105,102,121,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192322=allocate([77,115,103,77,111,100,105,102,121,77,115,103,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str202323=allocate([40,100,105,114,101,99,116,45,100,117,112,108,105,99,97,116,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212324=allocate([68,105,114,101,99,116,68,117,112,108,105,99,97,116,101,77,115,103,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222325=allocate([40,109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str232326=allocate([77,115,103,68,117,112,108,105,99,97,116,101,77,115,103,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242327=allocate([100,105,114,101,99,116,45,109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252328=allocate([109,101,115,115,97,103,101,45,109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str262329=allocate([100,105,114,101,99,116,45,100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str272330=allocate([109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282331=allocate([73,78,83,77,79,68,68,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292332=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str302333=allocate([68,105,114,101,99,116,47,109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,32,109,101,115,115,97,103,101,32,118,97,108,105,100,32,111,110,108,121,32,105,110,32,100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str312334=allocate([73,110,115,116,97,110,99,101,32,99,111,112,121,32,109,117,115,116,32,104,97,118,101,32,97,32,100,105,102,102,101,114,101,110,116,32,110,97,109,101,32,105,110,32,100,117,112,108,105,99,97,116,101,45,105,110,115,116,97,110,99,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str322335=allocate([68,105,114,101,99,116,47,109,101,115,115,97,103,101,45,109,111,100,105,102,121,32,109,101,115,115,97,103,101,32,118,97,108,105,100,32,111,110,108,121,32,105,110,32,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332336=allocate([115,108,111,116,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2339=allocate([100,105,114,101,99,116,45,109,118,45,114,101,112,108,97,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12340=allocate([68,105,114,101,99,116,77,86,82,101,112,108,97,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22341=allocate([52,42,42,119,105,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32342=allocate([100,105,114,101,99,116,45,109,118,45,105,110,115,101,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42343=allocate([68,105,114,101,99,116,77,86,73,110,115,101,114,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52344=allocate([51,42,42,119,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62345=allocate([100,105,114,101,99,116,45,109,118,45,100,101,108,101,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72346=allocate([68,105,114,101,99,116,77,86,68,101,108,101,116,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82347=allocate([51,51,105,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92348=allocate([109,118,45,115,108,111,116,45,114,101,112,108,97,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102349=allocate([77,86,83,108,111,116,82,101,112,108,97,99,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112350=allocate([53,42,117,101,119,105,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122351=allocate([109,118,45,115,108,111,116,45,105,110,115,101,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132352=allocate([77,86,83,108,111,116,73,110,115,101,114,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str142353=allocate([52,42,117,101,119,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152354=allocate([109,118,45,115,108,111,116,45,100,101,108,101,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162355=allocate([77,86,83,108,111,116,68,101,108,101,116,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172356=allocate([52,52,105,101,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182357=allocate([115,108,111,116,45,100,105,114,101,99,116,45,114,101,112,108,97,99,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192358=allocate([115,108,111,116,45,100,105,114,101,99,116,45,105,110,115,101,114,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202359=allocate([115,108,111,116,45,100,105,114,101,99,116,45,100,101,108,101,116,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212360=allocate([115,108,111,116,45,114,101,112,108,97,99,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str222361=allocate([115,108,111,116,45,105,110,115,101,114,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str232362=allocate([115,108,111,116,45,100,101,108,101,116,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242363=allocate([100,105,114,101,99,116,45,115,108,111,116,45,114,101,112,108,97,99,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252364=allocate([102,117,110,99,116,105,111,110,32,100,105,114,101,99,116,45,115,108,111,116,45,114,101,112,108,97,99,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str262365=allocate([100,105,114,101,99,116,45,115,108,111,116,45,105,110,115,101,114,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272366=allocate([102,117,110,99,116,105,111,110,32,100,105,114,101,99,116,45,115,108,111,116,45,105,110,115,101,114,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282367=allocate([100,105,114,101,99,116,45,115,108,111,116,45,100,101,108,101,116,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str292368=allocate([102,117,110,99,116,105,111,110,32,100,105,114,101,99,116,45,115,108,111,116,45,100,101,108,101,116,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302369=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312370=allocate([73,78,83,77,85,76,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322371=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332372=allocate([70,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str342373=allocate([32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,110,32,115,105,110,103,108,101,45,102,105,101,108,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352374=allocate([32,105,110,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362375=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372376=allocate([105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2379=allocate([109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12380=allocate([97,99,116,105,118,101,45,109,97,107,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22381=allocate([105,110,105,116,105,97,108,105,122,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32382=allocate([97,99,116,105,118,101,45,105,110,105,116,105,97,108,105,122,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42383=allocate([109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52384=allocate([97,99,116,105,118,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62385=allocate([109,101,115,115,97,103,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72386=allocate([97,99,116,105,118,101,45,109,101,115,115,97,103,101,45,109,111,100,105,102,121,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82387=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92388=allocate([105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102389=allocate([111,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112390=allocate([105,110,115,116,97,110,99,101,32,99,108,97,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str122391=allocate([103,101,110,115,121,109,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132392=allocate([116,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142393=allocate([105,110,115,116,97,110,99,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152394=allocate([115,108,111,116,45,111,118,101,114,114,105,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162395=allocate([99,114,101,97,116,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172396=allocate([99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182397=allocate([73,78,83,77,78,71,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192398=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202399=allocate([67,97,110,110,111,116,32,99,114,101,97,116,101,32,105,110,115,116,97,110,99,101,115,32,111,102,32,97,98,115,116,114,97,99,116,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212400=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2405=allocate([40,81,68,83,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12406=allocate([40,113,117,101,114,121,45,105,110,115,116,97,110,99,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22407=allocate([71,101,116,81,117,101,114,121,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32408=allocate([40,113,117,101,114,121,45,105,110,115,116,97,110,99,101,45,115,108,111,116,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42410=allocate([71,101,116,81,117,101,114,121,73,110,115,116,97,110,99,101,83,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52411=allocate([97,110,121,45,105,110,115,116,97,110,99,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62412=allocate([65,110,121,73,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72413=allocate([102,105,110,100,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str82414=allocate([81,117,101,114,121,70,105,110,100,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92415=allocate([102,105,110,100,45,97,108,108,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102416=allocate([81,117,101,114,121,70,105,110,100,65,108,108,73,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112417=allocate([100,111,45,102,111,114,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str122418=allocate([81,117,101,114,121,68,111,70,111,114,73,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132419=allocate([100,111,45,102,111,114,45,97,108,108,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142420=allocate([81,117,101,114,121,68,111,70,111,114,65,108,108,73,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str152421=allocate([100,101,108,97,121,101,100,45,100,111,45,102,111,114,45,97,108,108,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162422=allocate([68,101,108,97,121,101,100,81,117,101,114,121,68,111,70,111,114,65,108,108,73,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172423=allocate([103,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182424=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str192425=allocate([105,110,115,116,97,110,99,101,45,115,101,116,32,113,117,101,114,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202426=allocate([105,110,115,116,97,110,99,101,45,115,101,116,32,113,117,101,114,121,32,99,108,97,115,115,32,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2437=allocate([105,110,115,116,97,110,99,101,45,115,101,116,32,113,117,101,114,121,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12438=allocate([40,113,117,101,114,121,45,105,110,115,116,97,110,99,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22439=allocate([40,113,117,101,114,121,45,105,110,115,116,97,110,99,101,45,115,108,111,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32440=allocate([113,117,101,114,121,45,118,97,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42441=allocate([73,78,83,81,89,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52442=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str62443=allocate([67,97,110,110,111,116,32,114,101,98,105,110,100,32,105,110,115,116,97,110,99,101,45,115,101,116,32,109,101,109,98,101,114,32,118,97,114,105,97,98,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72444=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82445=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str92446=allocate([66,105,110,100,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,105,110,115,116,97,110,99,101,45,115,101,116,32,113,117,101,114,121,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102447=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str112448=allocate([68,117,112,108,105,99,97,116,101,32,105,110,115,116,97,110,99,101,32,109,101,109,98,101,114,32,118,97,114,105,97,98,108,101,32,110,97,109,101,32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122449=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132450=allocate([99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2461=allocate([112,114,105,110,116,111,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12462=allocate([80,114,105,110,116,111,117,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22463=allocate([49,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32464=allocate([114,101,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42465=allocate([82,101,97,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52466=allocate([42,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62467=allocate([111,112,101,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72468=allocate([79,112,101,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82469=allocate([50,51,42,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92470=allocate([99,108,111,115,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102471=allocate([67,108,111,115,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112472=allocate([103,101,116,45,99,104,97,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str122473=allocate([71,101,116,67,104,97,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132474=allocate([114,101,109,111,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142475=allocate([82,101,109,111,118,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152476=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162477=allocate([114,101,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172478=allocate([82,101,110,97,109,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182479=allocate([50,50,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192480=allocate([102,111,114,109,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202481=allocate([70,111,114,109,97,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212482=allocate([50,42,42,117,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str222483=allocate([114,101,97,100,108,105,110,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str232484=allocate([82,101,97,100,108,105,110,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242485=allocate([115,101,116,45,108,111,99,97,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252486=allocate([83,101,116,76,111,99,97,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str262487=allocate([114,101,97,100,45,110,117,109,98,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272488=allocate([82,101,97,100,78,117,109,98,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282489=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292490=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302491=allocate([99,114,108,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312492=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str322493=allocate([116,97,98,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332494=allocate([9,0],"i8",ALLOC_STATIC);STRING_TABLE.__str342495=allocate([118,116,97,98,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352496=allocate([11,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362497=allocate([102,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372498=allocate([12,0],"i8",ALLOC_STATIC);STRING_TABLE.__str382499=allocate([116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str392500=allocate([42,42,42,32,82,69,65,68,32,69,82,82,79,82,32,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str402501=allocate([115,116,100,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str412502=allocate([69,79,70,0],"i8",ALLOC_STATIC);STRING_TABLE.__str422503=allocate([73,79,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str432504=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str442505=allocate([76,111,103,105,99,97,108,32,110,97,109,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str452506=allocate([32,97,108,114,101,97,100,121,32,105,110,32,117,115,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str462507=allocate([114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str472508=allocate([114,43,0],"i8",ALLOC_STATIC);STRING_TABLE.__str482509=allocate([119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str492510=allocate([97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str502511=allocate([119,98,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str512512=allocate([115,116,114,105,110,103,32,119,105,116,104,32,118,97,108,117,101,32,34,114,34,44,32,34,114,43,34,44,32,34,119,34,44,32,34,119,98,34,44,32,111,114,32,34,97,34,0],"i8",ALLOC_STATIC);__str522513=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str532514=allocate([115,121,109,98,111,108,44,32,115,116,114,105,110,103,44,32,111,114,32,105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str542515=allocate([32,69,114,114,111,114,32,105,110,32,102,111,114,109,97,116,44,32,116,104,101,32,99,111,110,118,101,114,115,105,111,110,32,99,104,97,114,97,99,116,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str552516=allocate([32,102,111,114,32,102,111,114,109,97,116,116,101,100,32,111,117,116,112,117,116,32,105,115,32,110,111,116,32,118,97,108,105,100,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str562517=allocate([13,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str572518=allocate([37,37,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2519=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12520=allocate([78,111,110,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22521=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32522=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42523=allocate([100,101,112,101,110,100,101,110,99,105,101,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52524=allocate([100,101,112,101,110,100,101,110,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2535=allocate([77,69,77,79,82,89,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12536=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22537=allocate([79,117,116,32,111,102,32,109,101,109,111,114,121,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32538=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42539=allocate([10,42,42,42,32,68,69,65,76,76,79,67,65,84,73,78,71,32,77,69,77,79,82,89,32,42,42,42,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52540=allocate([42,42,42,32,77,69,77,79,82,89,32,32,68,69,65,76,76,79,67,65,84,69,68,32,42,42,42,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2565=allocate([103,101,110,115,121,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12566=allocate([71,101,110,115,121,109,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str22567=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32568=allocate([103,101,110,115,121,109,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42569=allocate([71,101,110,115,121,109,83,116,97,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52570=allocate([115,101,116,103,101,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62571=allocate([83,101,116,103,101,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str72572=allocate([49,49,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82573=allocate([115,121,115,116,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92574=allocate([103,101,110,115,121,115,116,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102575=allocate([49,42,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112576=allocate([108,101,110,103,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122577=allocate([76,101,110,103,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str132578=allocate([49,49,113,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142579=allocate([108,101,110,103,116,104,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152580=allocate([116,105,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162581=allocate([84,105,109,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172582=allocate([114,97,110,100,111,109,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182583=allocate([82,97,110,100,111,109,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192584=allocate([48,50,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202585=allocate([115,101,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212586=allocate([83,101,101,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222587=allocate([99,111,110,115,101,114,118,101,45,109,101,109,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str232588=allocate([67,111,110,115,101,114,118,101,77,101,109,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242589=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252590=allocate([114,101,108,101,97,115,101,45,109,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str262591=allocate([82,101,108,101,97,115,101,77,101,109,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272592=allocate([109,101,109,45,117,115,101,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str282593=allocate([77,101,109,85,115,101,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292594=allocate([109,101,109,45,114,101,113,117,101,115,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302595=allocate([77,101,109,82,101,113,117,101,115,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312596=allocate([111,112,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str322597=allocate([79,112,116,105,111,110,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332598=allocate([40,101,120,112,97,110,115,105,111,110,45,99,97,108,108,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str342599=allocate([69,120,112,97,110,100,70,117,110,99,67,97,108,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str352600=allocate([101,120,112,97,110,100,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str362601=allocate([68,117,109,109,121,69,120,112,97,110,100,70,117,110,99,77,117,108,116,105,102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372602=allocate([49,49,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str382603=allocate([40,115,101,116,45,101,118,97,108,117,97,116,105,111,110,45,101,114,114,111,114,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str392604=allocate([67,97,117,115,101,69,118,97,108,117,97,116,105,111,110,69,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str402605=allocate([115,101,116,45,115,101,113,117,101,110,99,101,45,111,112,101,114,97,116,111,114,45,114,101,99,111,103,110,105,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str412606=allocate([83,101,116,83,79,82,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str422607=allocate([103,101,116,45,115,101,113,117,101,110,99,101,45,111,112,101,114,97,116,111,114,45,114,101,99,111,103,110,105,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str432608=allocate([69,110,118,71,101,116,83,101,113,117,101,110,99,101,79,112,101,114,97,116,111,114,82,101,99,111,103,110,105,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str442609=allocate([103,101,116,45,102,117,110,99,116,105,111,110,45,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str452610=allocate([71,101,116,70,117,110,99,116,105,111,110,82,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str462611=allocate([99,114,101,97,116,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str472612=allocate([67,114,101,97,116,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str482613=allocate([109,118,45,97,112,112,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str492614=allocate([97,112,114,111,112,111,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str502615=allocate([65,112,114,111,112,111,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str512616=allocate([103,101,116,45,102,117,110,99,116,105,111,110,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str522617=allocate([71,101,116,70,117,110,99,116,105,111,110,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str532618=allocate([102,117,110,99,97,108,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str542619=allocate([70,117,110,99,97,108,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str552620=allocate([49,42,42,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str562621=allocate([116,105,109,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str572622=allocate([84,105,109,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str582623=allocate([42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str592624=allocate([110,117,109,98,101,114,32,40,103,114,101,97,116,101,114,32,116,104,97,110,32,111,114,32,101,113,117,97,108,32,116,111,32,49,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str602625=allocate([103,101,110,37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str612626=allocate([77,73,83,67,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str622627=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str632628=allocate([70,117,110,99,116,105,111,110,32,114,97,110,100,111,109,32,101,120,112,101,99,116,101,100,32,101,105,116,104,101,114,32,48,32,111,114,32,50,32,97,114,103,117,109,101,110,116,115,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str642629=allocate([70,117,110,99,116,105,111,110,32,114,97,110,100,111,109,32,101,120,112,101,99,116,101,100,32,97,114,103,117,109,101,110,116,32,35,49,32,116,111,32,98,101,32,108,101,115,115,32,116,104,97,110,32,97,114,103,117,109,101,110,116,32,35,50,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str652630=allocate([111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str662631=allocate([111,102,102,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str672632=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,111,110,32,111,114,32,111,102,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str682633=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str692634=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str702635=allocate([77,97,99,104,105,110,101,32,116,121,112,101,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str712636=allocate([71,101,110,101,114,105,99,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str722637=allocate([68,101,102,114,117,108,101,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str732638=allocate([79,78,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str742639=allocate([68,101,102,109,111,100,117,108,101,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str752640=allocate([68,101,102,116,101,109,112,108,97,116,101,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str762641=allocate([32,32,70,97,99,116,45,115,101,116,32,113,117,101,114,105,101,115,32,97,114,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str772642=allocate([32,32,68,101,102,102,97,99,116,115,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str782643=allocate([68,101,102,103,108,111,98,97,108,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str792644=allocate([68,101,102,102,117,110,99,116,105,111,110,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str802645=allocate([68,101,102,103,101,110,101,114,105,99,47,68,101,102,109,101,116,104,111,100,32,99,111,110,115,116,114,117,99,116,115,32,97,114,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str812646=allocate([79,98,106,101,99,116,32,83,121,115,116,101,109,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str822647=allocate([32,32,68,101,102,105,110,115,116,97,110,99,101,115,32,99,111,110,115,116,114,117,99,116,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str832648=allocate([32,32,73,110,115,116,97,110,99,101,45,115,101,116,32,113,117,101,114,105,101,115,32,97,114,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str842649=allocate([32,32,66,105,110,97,114,121,32,108,111,97,100,105,110,103,32,111,102,32,105,110,115,116,97,110,99,101,115,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str852650=allocate([32,32,66,105,110,97,114,121,32,115,97,118,105,110,103,32,111,102,32,105,110,115,116,97,110,99,101,115,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str862651=allocate([69,120,116,101,110,100,101,100,32,109,97,116,104,32,112,97,99,107,97,103,101,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str872652=allocate([84,101,120,116,32,112,114,111,99,101,115,115,105,110,103,32,112,97,99,107,97,103,101,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str882653=allocate([72,101,108,112,32,115,121,115,116,101,109,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str892654=allocate([66,108,111,97,100,32,99,97,112,97,98,105,108,105,116,121,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str902655=allocate([66,76,79,65,68,32,65,78,68,32,66,83,65,86,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str912656=allocate([69,77,65,67,83,32,69,100,105,116,111,114,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str922657=allocate([79,70,70,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str932658=allocate([67,111,110,115,116,114,117,99,116,32,99,111,109,112,105,108,101,114,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str942659=allocate([66,97,115,105,99,32,73,47,79,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str952660=allocate([69,120,116,101,110,100,101,100,32,73,47,79,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str962661=allocate([83,116,114,105,110,103,32,102,117,110,99,116,105,111,110,32,112,97,99,107,97,103,101,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str972662=allocate([77,117,108,116,105,102,105,101,108,100,32,102,117,110,99,116,105,111,110,32,112,97,99,107,97,103,101,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str982663=allocate([68,101,98,117,103,103,105,110,103,32,102,117,110,99,116,105,111,110,115,32,97,114,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str992664=allocate([66,108,111,99,107,32,109,101,109,111,114,121,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1002665=allocate([87,105,110,100,111,119,32,73,110,116,101,114,102,97,99,101,32,102,108,97,103,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1012666=allocate([68,101,118,101,108,111,112,101,114,32,102,108,97,103,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1022667=allocate([82,117,110,32,116,105,109,101,32,109,111,100,117,108,101,32,105,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1032668=allocate([101,120,112,97,110,100,36,32,109,117,115,116,32,98,101,32,117,115,101,100,32,105,110,32,116,104,101,32,97,114,103,117,109,101,110,116,32,108,105,115,116,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,99,97,108,108,46,10,0],"i8",ALLOC_STATIC);__str1042669=allocate(1,"i8",ALLOC_STATIC);
STRING_TABLE.__str1052670=allocate([102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1062671=allocate([48,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1072672=allocate([102,117,110,99,116,105,111,110,44,32,100,101,102,102,117,110,99,116,105,111,110,44,32,111,114,32,103,101,110,101,114,105,99,32,102,117,110,99,116,105,111,110,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1082673=allocate([70,117,110,99,116,105,111,110,32,102,117,110,99,97,108,108,32,99,97,108,108,101,100,32,119,105,116,104,32,116,104,101,32,119,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,102,111,114,32,100,101,102,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2674=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2685=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12686=allocate([103,101,116,45,100,101,102,109,111,100,117,108,101,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22687=allocate([69,110,118,71,101,116,68,101,102,109,111,100,117,108,101,76,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32688=allocate([48,48,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42689=allocate([108,105,115,116,45,100,101,102,109,111,100,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52690=allocate([76,105,115,116,68,101,102,109,111,100,117,108,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62691=allocate([112,112,100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72692=allocate([80,80,68,101,102,109,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str82693=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92694=allocate([100,101,102,109,111,100,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102695=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112696=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122697=allocate([100,101,102,109,111,100,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2698=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12699=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22700=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32701=allocate([35,105,110,99,108,117,100,101,32,34,109,111,100,117,108,100,101,102,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42702=allocate([115,116,114,117,99,116,32,100,101,102,109,111,100,117,108,101,73,116,101,109,72,101,97,100,101,114,32,42,37,115,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52703=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,100,101,102,109,111,100,117,108,101,73,116,101,109,72,101,97,100,101,114,32,42,37,115,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str62704=allocate([115,116,114,117,99,116,32,100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72705=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82706=allocate([44,78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92707=allocate([38,37,115,37,100,95,49,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102708=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112709=allocate([44,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str122710=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132711=allocate([38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142712=allocate([48,44,37,108,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152713=allocate([78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162714=allocate([38,37,115,37,100,95,37,100,91,37,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172715=allocate([125,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182716=allocate([115,116,114,117,99,116,32,112,111,114,116,73,116,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192717=allocate([32,32,32,83,101,116,76,105,115,116,79,102,68,101,102,109,111,100,117,108,101,115,40,116,104,101,69,110,118,44,40,118,111,105,100,32,42,41,32,37,115,37,100,95,49,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str202718=allocate([32,32,32,83,101,116,76,105,115,116,79,102,68,101,102,109,111,100,117,108,101,115,40,116,104,101,69,110,118,44,78,85,76,76,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212719=allocate([32,32,32,69,110,118,83,101,116,67,117,114,114,101,110,116,77,111,100,117,108,101,40,116,104,101,69,110,118,44,40,118,111,105,100,32,42,41,32,69,110,118,71,101,116,78,101,120,116,68,101,102,109,111,100,117,108,101,40,116,104,101,69,110,118,44,78,85,76,76,41,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2725=allocate([100,101,102,109,111,100,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12726=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22727=allocate([103,101,116,45,99,117,114,114,101,110,116,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32728=allocate([71,101,116,67,117,114,114,101,110,116,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42729=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52730=allocate([115,101,116,45,99,117,114,114,101,110,116,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62731=allocate([83,101,116,67,117,114,114,101,110,116,77,111,100,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72732=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82733=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str92734=allocate([77,79,68,85,76,68,69,70,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102735=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112736=allocate([73,108,108,101,103,97,108,32,117,115,101,32,111,102,32,116,104,101,32,109,111,100,117,108,101,32,115,112,101,99,105,102,105,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2771=allocate([40,100,101,102,109,111,100,117,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12772=allocate([100,101,102,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22773=allocate([43,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32774=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42775=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52776=allocate([105,109,112,111,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62777=allocate([101,120,112,111,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72778=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str82779=allocate([100,101,102,109,111,100,117,108,101,32,105,109,112,111,114,116,32,115,112,101,99,105,102,105,99,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92780=allocate([100,101,102,109,111,100,117,108,101,32,101,120,112,111,114,116,32,115,112,101,99,105,102,105,99,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102781=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112782=allocate([65,76,76,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str122783=allocate([78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132784=allocate([77,79,68,85,76,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142785=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152786=allocate([77,111,100,117,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162787=allocate([32,100,111,101,115,32,110,111,116,32,101,120,112,111,114,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str172788=allocate([97,110,121,32,99,111,110,115,116,114,117,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182789=allocate([97,110,121,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192790=allocate([32,99,111,110,115,116,114,117,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202791=allocate([116,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212792=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2805=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str12806=allocate([65,109,98,105,103,117,111,117,115,32,114,101,102,101,114,101,110,99,101,32,116,111,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22807=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32808=allocate([46,10,73,116,32,105,115,32,105,109,112,111,114,116,101,100,32,102,114,111,109,32,109,111,114,101,32,116,104,97,110,32,111,110,101,32,109,111,100,117,108,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str42809=allocate([58,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str52810=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62811=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2828=allocate([72,65,78,68,76,69,82,95,71,69,84,0],"i8",ALLOC_STATIC);
_SetupMessageHandlers_handlerGetInfo=allocate([0,0,0,0,83,-64,0,0,1848,0,0,0,1848,0,0,0,0,0,0,0,1850,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str12830=allocate([72,65,78,68,76,69,82,95,80,85,84,0],"i8",ALLOC_STATIC);
_SetupMessageHandlers_handlerPutInfo=allocate([0,0,0,0,84,-64,0,0,1852,0,0,0,1852,0,0,0,0,0,0,0,1854,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str22831=allocate([97,114,111,117,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32832=allocate([98,101,102,111,114,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42833=allocate([112,114,105,109,97,114,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52834=allocate([97,102,116,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62835=allocate([105,110,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72836=allocate([100,101,108,101,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82837=allocate([99,114,101,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92838=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102839=allocate([115,101,108,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112840=allocate([100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122841=allocate([100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132842=allocate([117,110,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str142843=allocate([85,110,100,101,102,109,101,115,115,97,103,101,72,97,110,100,108,101,114,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152844=allocate([50,51,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162845=allocate([115,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172846=allocate([83,101,110,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str182847=allocate([50,42,117,117,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str192848=allocate([112,114,101,118,105,101,119,45,115,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202849=allocate([80,114,101,118,105,101,119,83,101,110,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str212850=allocate([50,50,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222851=allocate([112,112,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str232852=allocate([80,80,68,101,102,109,101,115,115,97,103,101,72,97,110,100,108,101,114,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242853=allocate([108,105,115,116,45,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252854=allocate([76,105,115,116,68,101,102,109,101,115,115,97,103,101,72,97,110,100,108,101,114,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str262855=allocate([48,50,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272856=allocate([110,101,120,116,45,104,97,110,100,108,101,114,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282857=allocate([78,101,120,116,72,97,110,100,108,101,114,65,118,97,105,108,97,98,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292858=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302859=allocate([99,97,108,108,45,110,101,120,116,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str312860=allocate([67,97,108,108,78,101,120,116,72,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322861=allocate([111,118,101,114,114,105,100,101,45,110,101,120,116,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str332862=allocate([100,121,110,97,109,105,99,45,103,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str342863=allocate([68,121,110,97,109,105,99,72,97,110,100,108,101,114,71,101,116,83,108,111,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str352864=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str362865=allocate([100,121,110,97,109,105,99,45,112,117,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str372866=allocate([68,121,110,97,109,105,99,72,97,110,100,108,101,114,80,117,116,83,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str382867=allocate([49,42,42,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str392868=allocate([103,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str402869=allocate([112,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str412870=allocate([109,101,115,115,97,103,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str422871=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str432872=allocate([104,97,110,100,108,101,114,45,108,111,111,107,117,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str442873=allocate([77,83,71,67,79,77,0],"i8",ALLOC_STATIC);STRING_TABLE.__str452874=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str462875=allocate([85,110,97,98,108,101,32,116,111,32,100,101,108,101,116,101,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str472876=allocate([42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str482877=allocate([73,110,99,111,109,112,108,101,116,101,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,115,112,101,99,105,102,105,99,97,116,105,111,110,32,102,111,114,32,100,101,108,101,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str492878=allocate([85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str502879=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str512880=allocate([32,102,111,114,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str522881=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,112,112,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str532882=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str542883=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str552884=allocate([108,105,115,116,45,119,97,116,99,104,45,105,116,101,109,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str562885=allocate([32,61,32,111,110,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str572886=allocate([32,61,32,111,102,102,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str582887=allocate([58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str592888=allocate([99,108,97,115,115,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str602889=allocate([104,97,110,100,108,101,114,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str612890=allocate([104,97,110,100,108,101,114,32,116,121,112,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str622891=allocate([104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str632892=allocate([32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str642893=allocate([119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str652894=allocate([117,110,119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str662895=allocate([85,83,69,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str672896=allocate([105,110,105,116,45,115,108,111,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str682897=allocate([100,101,108,101,116,101,45,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str692898=allocate([40,99,114,101,97,116,101,45,105,110,115,116,97,110,99,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str702899=allocate([112,114,105,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str712900=allocate([112,112,105,110,115,116,97,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str722901=allocate([100,105,114,101,99,116,45,109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str732902=allocate([40,100,105,114,101,99,116,45,109,111,100,105,102,121,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str742903=allocate([109,101,115,115,97,103,101,45,109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str752904=allocate([40,109,101,115,115,97,103,101,45,109,111,100,105,102,121,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str762905=allocate([100,105,114,101,99,116,45,100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str772906=allocate([40,100,105,114,101,99,116,45,100,117,112,108,105,99,97,116,101,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str782907=allocate([109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str792908=allocate([40,109,101,115,115,97,103,101,45,100,117,112,108,105,99,97,116,101,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2917=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12918=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22919=allocate([77,83,71,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32920=allocate([78,111,32,97,112,112,108,105,99,97,98,108,101,32,112,114,105,109,97,114,121,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,102,111,117,110,100,32,102,111,114,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42921=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52922=allocate([77,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62923=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72924=allocate([32,105,110,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82925=allocate([32,101,120,112,101,99,116,101,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str92926=allocate([97,116,32,108,101,97,115,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str102927=allocate([101,120,97,99,116,108,121,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112928=allocate([32,97,114,103,117,109,101,110,116,40,115,41,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122929=allocate([32,115,108,111,116,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132930=allocate([99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str142931=allocate([58,32,119,114,105,116,101,32,97,99,99,101,115,115,32,100,101,110,105,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str152932=allocate([80,114,105,118,97,116,101,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162933=allocate([32,111,102,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172934=allocate([32,99,97,110,110,111,116,32,98,101,32,97,99,99,101,115,115,101,100,32,100,105,114,101,99,116,108,121,10,32,32,32,98,121,32,104,97,110,100,108,101,114,115,32,97,116,116,97,99,104,101,100,32,116,111,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182935=allocate([77,83,71,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str192936=allocate([83,121,115,116,101,109,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,109,97,121,32,110,111,116,32,98,101,32,109,111,100,105,102,105,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str202937=allocate([42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str212938=allocate([85,110,114,101,99,111,103,110,105,122,101,100,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,116,121,112,101,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str222939=allocate([32,109,97,121,32,111,110,108,121,32,98,101,32,99,97,108,108,101,100,32,102,114,111,109,32,119,105,116,104,105,110,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str232940=allocate([32,111,112,101,114,97,116,101,115,32,111,110,108,121,32,111,110,32,105,110,115,116,97,110,99,101,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str242941=allocate([85,110,97,98,108,101,32,116,111,32,100,101,108,101,116,101,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,40,115,41,32,102,114,111,109,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str252942=allocate([62,62,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str262943=allocate([60,60,0],"i8",ALLOC_STATIC);STRING_TABLE.__str272944=allocate([77,83,71,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str282945=allocate([32,69,68,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str292946=allocate([72,78,68,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str302947=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str312948=allocate([32,32,32,32,32,32,32,69,68,58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str322949=allocate([124,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str2974=allocate([115,101,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12975=allocate([77,83,71,80,65,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str22976=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str32977=allocate([83,104,97,100,111,119,101,100,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,110,111,116,32,97,112,112,108,105,99,97,98,108,101,32,105,110,32,99,117,114,114,101,110,116,32,99,111,110,116,101,120,116,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str42978=allocate([111,118,101,114,114,105,100,101,45,110,101,120,116,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str52979=allocate([109,101,115,115,97,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str62980=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str72981=allocate([62,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str82982=allocate([60,60,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str92983=allocate([102,111,114,32,115,108,111,116,32,103,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str102984=allocate([102,111,114,32,115,108,111,116,32,112,117,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str112985=allocate([100,121,110,97,109,105,99,45,103,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str122986=allocate([115,121,109,98,111,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str132987=allocate([100,121,110,97,109,105,99,45,112,117,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str142988=allocate([83,116,97,116,105,99,32,114,101,102,101,114,101,110,99,101,32,116,111,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str152989=allocate([32,111,102,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str162990=allocate([32,100,111,101,115,32,110,111,116,32,97,112,112,108,121,32,116,111,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str172991=allocate([78,111,32,115,117,99,104,32,105,110,115,116,97,110,99,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str182992=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,115,101,110,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3021=allocate([40,100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13022=allocate([100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23023=allocate([126,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33024=allocate([77,83,71,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43025=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53026=allocate([65,32,99,108,97,115,115,32,109,117,115,116,32,98,101,32,100,101,102,105,110,101,100,32,98,101,102,111,114,101,32,105,116,115,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str63027=allocate([77,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,99,97,110,110,111,116,32,98,101,32,97,116,116,97,99,104,101,100,32,116,111,32,116,104,101,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73028=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str83029=allocate([67,97,110,110,111,116,32,40,114,101,41,100,101,102,105,110,101,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,100,117,114,105,110,103,32,101,120,101,99,117,116,105,111,110,32,111,102,32,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93030=allocate([32,32,111,116,104,101,114,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,102,111,114,32,116,104,101,32,115,97,109,101,32,99,108,97,115,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str103031=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113032=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123033=allocate([32,32,32,72,97,110,100,108,101,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133034=allocate([32,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143035=allocate([32,114,101,100,101,102,105,110,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str153036=allocate([83,121,115,116,101,109,32,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,32,109,97,121,32,110,111,116,32,98,101,32,109,111,100,105,102,105,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163037=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173038=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str183039=allocate([42,42,42,32,68,101,102,97,117,108,116,32,80,117,98,108,105,99,32,72,97,110,100,108,101,114,115,32,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193040=allocate([37,115,32,103,101,116,45,37,115,32,40,41,32,63,115,101,108,102,58,37,115,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203041=allocate([37,115,32,112,117,116,45,37,115,32,40,36,63,118,97,108,117,101,41,32,40,98,105,110,100,32,63,115,101,108,102,58,37,115,32,63,118,97,108,117,101,41,41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str213042=allocate([115,101,108,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223043=allocate([65,99,116,105,118,101,32,105,110,115,116,97,110,99,101,32,112,97,114,97,109,101,116,101,114,32,99,97,110,110,111,116,32,98,101,32,99,104,97,110,103,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233044=allocate([104,110,100,45,118,97,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str243045=allocate([73,108,108,101,103,97,108,32,118,97,108,117,101,32,102,111,114,32,63,115,101,108,102,32,114,101,102,101,114,101,110,99,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str253046=allocate([78,111,32,115,117,99,104,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263047=allocate([32,105,110,32,99,108,97,115,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str273048=allocate([32,102,111,114,32,63,115,101,108,102,32,114,101,102,101,114,101,110,99,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283049=allocate([67,83,84,82,78,67,72,75,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293050=allocate([69,120,112,114,101,115,115,105,111,110,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str303051=allocate([100,105,114,101,99,116,32,115,108,111,116,32,119,114,105,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str313052=allocate([73,108,108,101,103,97,108,32,115,108,111,116,32,114,101,102,101,114,101,110,99,101,32,105,110,32,112,97,114,97,109,101,116,101,114,32,108,105,115,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3057=allocate([109,117,108,116,105,102,105,101,108,100,45,115,116,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13058=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23059=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33060=allocate([41,0],"i8",ALLOC_STATIC);
__str43061=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str3090=allocate([102,105,114,115,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13091=allocate([70,105,114,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23092=allocate([49,49,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33093=allocate([114,101,115,116,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43094=allocate([82,101,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53095=allocate([115,117,98,115,101,113,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63096=allocate([83,117,98,115,101,113,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73097=allocate([51,51,105,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83098=allocate([100,101,108,101,116,101,45,109,101,109,98,101,114,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93099=allocate([68,101,108,101,116,101,77,101,109,98,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str103100=allocate([50,42,117,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113101=allocate([114,101,112,108,97,99,101,45,109,101,109,98,101,114,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123102=allocate([82,101,112,108,97,99,101,77,101,109,98,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133103=allocate([51,42,117,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143104=allocate([100,101,108,101,116,101,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str153105=allocate([68,101,108,101,116,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163106=allocate([114,101,112,108,97,99,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173107=allocate([82,101,112,108,97,99,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183108=allocate([52,42,42,109,105,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193109=allocate([105,110,115,101,114,116,36,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str203110=allocate([73,110,115,101,114,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213111=allocate([51,42,42,109,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223112=allocate([101,120,112,108,111,100,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233113=allocate([69,120,112,108,111,100,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243114=allocate([49,49,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str253115=allocate([105,109,112,108,111,100,101,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263116=allocate([73,109,112,108,111,100,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273117=allocate([110,116,104,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283118=allocate([78,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293119=allocate([50,50,42,105,109,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str303120=allocate([109,101,109,98,101,114,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str313121=allocate([77,101,109,98,101,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323122=allocate([50,50,42,117,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str333123=allocate([115,117,98,115,101,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str343124=allocate([83,117,98,115,101,116,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str353125=allocate([50,50,42,109,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str363126=allocate([112,114,111,103,110,36,0],"i8",ALLOC_STATIC);STRING_TABLE.__str373127=allocate([77,117,108,116,105,102,105,101,108,100,80,114,111,103,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str383128=allocate([115,116,114,45,105,109,112,108,111,100,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str393129=allocate([115,116,114,45,101,120,112,108,111,100,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str403130=allocate([115,117,98,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str413131=allocate([110,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str423132=allocate([109,118,45,114,101,112,108,97,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str433133=allocate([77,86,82,101,112,108,97,99,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str443134=allocate([51,51,42,105,109,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str453135=allocate([109,101,109,98,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str463136=allocate([109,118,45,115,117,98,115,101,113,0],"i8",ALLOC_STATIC);STRING_TABLE.__str473137=allocate([77,86,83,117,98,115,101,113,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str483138=allocate([51,51,42,105,105,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str493139=allocate([109,118,45,100,101,108,101,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str503140=allocate([77,86,68,101,108,101,116,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str513141=allocate([40,103,101,116,45,112,114,111,103,110,36,45,102,105,101,108,100,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str523142=allocate([71,101,116,77,118,80,114,111,103,110,70,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str533143=allocate([48,48,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str543144=allocate([40,103,101,116,45,112,114,111,103,110,36,45,105,110,100,101,120,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str553145=allocate([71,101,116,77,118,80,114,111,103,110,73,110,100,101,120,0],"i8",ALLOC_STATIC);__str563146=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str573147=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str583148=allocate([77,85,76,84,73,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str593149=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str603150=allocate([77,117,108,116,105,102,105,101,108,100,32,105,110,100,101,120,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str613151=allocate([114,97,110,103,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str623152=allocate([46,46,0],"i8",ALLOC_STATIC);STRING_TABLE.__str633153=allocate([32,111,117,116,32,111,102,32,114,97,110,103,101,32,49,46,46,0],"i8",ALLOC_STATIC);STRING_TABLE.__str643154=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str653155=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str663156=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str673157=allocate([67,97,110,110,111,116,32,114,101,98,105,110,100,32,102,105,101,108,100,32,118,97,114,105,97,98,108,101,32,105,110,32,102,117,110,99,116,105,111,110,32,112,114,111,103,110,36,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str683158=allocate([45,105,110,100,101,120,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3165=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13166=allocate([79,66,74,66,73,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3171=allocate([111,98,106,101,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13173=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23174=allocate([38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33175=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43176=allocate([35,105,110,99,108,117,100,101,32,34,99,108,97,115,115,99,111,109,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53177=allocate([35,105,110,99,108,117,100,101,32,34,99,108,97,115,115,105,110,105,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63178=allocate([68,69,70,67,76,65,83,83,95,77,79,68,85,76,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73179=allocate([68,69,70,67,76,65,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83180=allocate([117,110,115,105,103,110,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93181=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103182=allocate([37,117,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113183=allocate([72,65,78,68,76,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123184=allocate([44,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str133185=allocate([123,32,37,117,44,37,117,44,48,44,48,44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143186=allocate([44,37,100,44,37,100,44,37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153187=allocate([44,78,85,76,76,32,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163188=allocate([83,76,79,84,95,68,69,83,67,32,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173189=allocate([38,37,115,37,100,95,37,117,91,37,117,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str183190=allocate([83,76,79,84,95,68,69,83,67,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193191=allocate([123,32,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,37,117,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203192=allocate([44,10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213193=allocate([44,40,118,111,105,100,32,42,41,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str223194=allocate([44,78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233195=allocate([44,48,44,48,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243196=allocate([123,32,38,37,115,37,100,95,37,117,91,37,117,93,44,48,44,48,44,48,44,78,85,76,76,32,125,32,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str253197=allocate([123,32,78,85,76,76,44,48,44,48,44,48,44,78,85,76,76,32,125,32,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263198=allocate([68,69,70,67,76,65,83,83,32,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str273199=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283200=allocate([44,49,44,37,117,44,37,117,44,37,117,44,48,44,48,44,37,117,44,48,44,37,117,44,10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293201=allocate([123,32,37,117,44,38,37,115,37,100,95,37,100,91,37,100,93,32,125,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str303202=allocate([123,32,48,44,78,85,76,76,32,125,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str313203=allocate([123,32,48,44,78,85,76,76,32,125,44,10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323204=allocate([38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str333205=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str343206=allocate([37,117,44,37,117,44,37,117,44,37,117,44,78,85,76,76,44,78,85,76,76,44,10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str353207=allocate([37,117,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str363208=allocate([44,34,34,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str373209=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str383210=allocate([83,76,79,84,95,78,65,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str393211=allocate([123,32,37,117,44,49,44,37,117,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str403212=allocate([44,48,76,32,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str413213=allocate([83,76,79,84,95,78,65,77,69,32,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str423214=allocate([125,59,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str433215=allocate([117,110,115,105,103,110,101,100,32,37,115,37,100,32,61,32,37,117,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str443216=allocate([101,120,116,101,114,110,32,117,110,115,105,103,110,101,100,32,37,115,37,100,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str453217=allocate([32,32,32,79,98,106,101,99,116,115,82,117,110,84,105,109,101,73,110,105,116,105,97,108,105,122,101,40,116,104,101,69,110,118,44,37,115,37,100,95,49,44,37,115,37,100,95,49,44,37,115,37,100,95,49,44,37,115,37,100,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3224=allocate([111,98,106,101,99,116,32,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3225=allocate([111,98,106,101,99,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13226=allocate([79,66,74,82,84,66,76,68,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23227=allocate([111,98,106,101,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33228=allocate([111,98,106,101,99,116,45,112,97,116,116,101,114,110,45,109,97,116,99,104,45,100,101,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43229=allocate([79,98,106,101,99,116,77,97,116,99,104,68,101,108,97,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53230=allocate([73,78,73,84,73,65,76,45,79,66,74,69,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63231=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73232=allocate([78,111,32,111,98,106,101,99,116,115,32,111,102,32,101,120,105,115,116,105,110,103,32,99,108,97,115,115,101,115,32,99,97,110,32,115,97,116,105,115,102,121,32,112,97,116,116,101,114,110,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83233=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93234=allocate([78,111,32,111,98,106,101,99,116,115,32,111,102,32,101,120,105,115,116,105,110,103,32,99,108,97,115,115,101,115,32,99,97,110,32,115,97,116,105,115,102,121,32,112,97,116,116,101,114,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103235=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113236=allocate([111,98,106,101,99,116,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str123237=allocate([78,111,32,111,98,106,101,99,116,115,32,111,102,32,101,120,105,115,116,105,110,103,32,99,108,97,115,115,101,115,32,99,97,110,32,115,97,116,105,115,102,121,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133238=allocate([32,114,101,115,116,114,105,99,116,105,111,110,32,105,110,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143239=allocate([111,98,106,101,99,116,32,115,108,111,116,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153240=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163241=allocate([110,97,109,101,32,114,101,115,116,114,105,99,116,105,111,110,32,105,110,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str173242=allocate([85,110,100,101,102,105,110,101,100,32,99,108,97,115,115,32,105,110,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183243=allocate([105,115,45,97,32,114,101,115,116,114,105,99,116,105,111,110,32,105,110,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str193244=allocate([99,108,97,115,115,32,114,101,115,116,114,105,99,116,105,111,110,32,105,110,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203245=allocate([77,117,108,116,105,112,108,101,32,114,101,115,116,114,105,99,116,105,111,110,115,32,111,110,32,97,116,116,114,105,98,117,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213246=allocate([32,110,111,116,32,97,108,108,111,119,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3249=allocate([111,98,106,101,99,116,45,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13250=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23251=allocate([38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33252=allocate([79,66,74,69,67,84,95,65,76,80,72,65,95,78,79,68,69,32,37,115,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43253=allocate([101,120,116,101,114,110,32,79,66,74,69,67,84,95,65,76,80,72,65,95,78,79,68,69,32,37,115,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53254=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63255=allocate([44,48,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73256=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83257=allocate([44,48,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93258=allocate([125,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str103259=allocate([44,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113260=allocate([35,105,110,99,108,117,100,101,32,34,111,98,106,114,116,109,99,104,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123261=allocate([79,66,74,69,67,84,95,80,65,84,84,69,82,78,95,78,79,68,69,32,37,115,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str133262=allocate([101,120,116,101,114,110,32,79,66,74,69,67,84,95,80,65,84,84,69,82,78,95,78,79,68,69,32,37,115,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143263=allocate([123,48,44,37,117,44,37,117,44,37,117,44,37,117,44,48,76,44,37,117,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str153264=allocate([32,32,32,83,101,116,79,98,106,101,99,116,78,101,116,119,111,114,107,80,111,105,110,116,101,114,40,116,104,101,69,110,118,44,38,37,115,37,100,95,37,100,91,37,100,93,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163265=allocate([32,32,32,83,101,116,79,98,106,101,99,116,78,101,116,119,111,114,107,84,101,114,109,105,110,97,108,80,111,105,110,116,101,114,40,116,104,101,69,110,118,44,38,37,115,37,100,95,37,100,91,37,100,93,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str173266=allocate([32,32,32,83,101,116,79,98,106,101,99,116,78,101,116,119,111,114,107,80,111,105,110,116,101,114,40,116,104,101,69,110,118,44,78,85,76,76,41,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183267=allocate([32,32,32,83,101,116,79,98,106,101,99,116,78,101,116,119,111,114,107,84,101,114,109,105,110,97,108,80,111,105,110,116,101,114,40,116,104,101,69,110,118,44,78,85,76,76,41,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3272=allocate([79,66,74,95,71,69,84,95,83,76,79,84,95,74,78,86,65,82,49,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_objectGVInfo1=allocate([0,0,0,0,72,64,0,0,1856,0,0,0,1856,0,0,0,0,0,0,0,1858,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str13273=allocate([79,66,74,95,71,69,84,95,83,76,79,84,95,74,78,86,65,82,50,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_objectGVInfo2=allocate([0,0,0,0,73,64,0,0,1860,0,0,0,1860,0,0,0,0,0,0,0,1862,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str23274=allocate([79,66,74,95,71,69,84,95,83,76,79,84,95,80,78,86,65,82,49,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_objectGVPNInfo1=allocate([0,0,0,0,70,64,0,0,1864,0,0,0,1864,0,0,0,0,0,0,0,1866,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str33275=allocate([79,66,74,95,71,69,84,95,83,76,79,84,95,80,78,86,65,82,50,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_objectGVPNInfo2=allocate([0,0,0,0,71,64,0,0,1868,0,0,0,1868,0,0,0,0,0,0,0,1870,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str43276=allocate([79,66,74,95,80,78,95,67,79,78,83,84,65,78,84,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_objectCmpConstantInfo=allocate([0,0,0,0,75,-64,0,0,1872,0,0,0,1872,0,0,0,0,0,0,0,1874,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str53277=allocate([79,66,74,95,83,76,79,84,95,76,69,78,71,84,72,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_lengthTestInfo=allocate([0,0,0,0,74,64,0,0,1876,0,0,0,1876,0,0,0,0,0,0,0,1878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str63278=allocate([79,66,74,95,80,78,95,67,77,80,49,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_pNSimpleCompareInfo1=allocate([0,0,0,0,76,-64,0,0,1880,0,0,0,1880,0,0,0,0,0,0,0,1882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str73279=allocate([79,66,74,95,80,78,95,67,77,80,50,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_pNSimpleCompareInfo2=allocate([0,0,0,0,78,-64,0,0,1884,0,0,0,1884,0,0,0,0,0,0,0,1886,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str83280=allocate([79,66,74,95,80,78,95,67,77,80,51,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_pNSimpleCompareInfo3=allocate([0,0,0,0,80,-64,0,0,1888,0,0,0,1888,0,0,0,0,0,0,0,1890,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str93281=allocate([79,66,74,95,74,78,95,67,77,80,49,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_jNSimpleCompareInfo1=allocate([0,0,0,0,77,-64,0,0,1892,0,0,0,1892,0,0,0,0,0,0,0,1894,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str103282=allocate([79,66,74,95,74,78,95,67,77,80,50,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_jNSimpleCompareInfo2=allocate([0,0,0,0,79,-64,0,0,1896,0,0,0,1896,0,0,0,0,0,0,0,1898,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
STRING_TABLE.__str113283=allocate([79,66,74,95,74,78,95,67,77,80,51,0],"i8",ALLOC_STATIC);_InstallObjectPrimitives_jNSimpleCompareInfo3=allocate([0,0,0,0,81,-64,0,0,1900,0,0,0,1900,0,0,0,0,0,0,0,1902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str3304=allocate([79,66,74,82,84,77,67,72,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13305=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23306=allocate([84,104,105,115,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,105,110,32,116,104,101,32,111,98,106,101,99,116,32,112,97,116,116,101,114,110,32,110,101,116,119,111,114,107,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33307=allocate([32,32,32,67,117,114,114,101,110,116,108,121,32,97,99,116,105,118,101,32,105,110,115,116,97,110,99,101,58,32,91,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43308=allocate([93,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53309=allocate([32,32,32,80,114,111,98,108,101,109,32,114,101,115,105,100,101,115,32,105,110,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63310=allocate([32,102,105,101,108,100,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73311=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83312=allocate([32,32,32,32,32,32,79,102,32,112,97,116,116,101,114,110,32,35,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93313=allocate([32,105,110,32,114,117,108,101,40,115,41,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103314=allocate([32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3329=allocate([99,104,101,99,107,45,115,121,110,116,97,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13330=allocate([67,104,101,99,107,83,121,110,116,97,120,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23331=allocate([49,49,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33332=allocate([77,73,83,83,73,78,71,45,76,69,70,84,45,80,65,82,69,78,84,72,69,83,73,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43333=allocate([69,88,80,69,67,84,69,68,45,83,89,77,66,79,76,45,65,70,84,69,82,45,76,69,70,84,45,80,65,82,69,78,84,72,69,83,73,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53334=allocate([101,114,114,111,114,45,99,97,112,116,117,114,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63335=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73336=allocate([10,69,82,82,79,82,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83337=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93338=allocate([69,88,84,82,65,78,69,79,85,83,45,73,78,80,85,84,45,65,70,84,69,82,45,76,65,83,84,45,80,65,82,69,78,84,72,69,83,73,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103339=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3340=allocate([80,65,84,84,69,82,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13341=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23342=allocate([84,104,101,32,115,121,109,98,111,108,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33343=allocate([32,104,97,115,32,115,112,101,99,105,97,108,32,109,101,97,110,105,110,103,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43344=allocate([97,110,100,32,109,97,121,32,110,111,116,32,98,101,32,117,115,101,100,32,97,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53345=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str63346=allocate([123,78,85,76,76,44,78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73347=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83348=allocate([38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93349=allocate([37,100,44,37,100,44,37,100,44,48,44,48,44,37,100,44,37,100,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103350=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str113351=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123352=allocate([82,85,76,69,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133353=allocate([83,105,110,103,108,101,32,97,110,100,32,109,117,108,116,105,102,105,101,108,100,32,99,111,110,115,116,114,97,105,110,116,115,32,99,97,110,110,111,116,32,98,101,32,109,105,120,101,100,32,105,110,32,97,32,102,105,101,108,100,32,99,111,110,115,116,114,97,105,110,116,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143354=allocate([61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153355=allocate([58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3396=allocate([80,82,79,67,95,80,65,82,65,77,0],"i8",ALLOC_STATIC);
_InstallProcedurePrimitives_procParameterInfo=allocate([0,0,0,0,95,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1904,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str13397=allocate([80,82,79,67,95,87,73,76,68,95,80,65,82,65,77,0],"i8",ALLOC_STATIC);
_InstallProcedurePrimitives_procWildInfo=allocate([0,0,0,0,96,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str23398=allocate([80,82,79,67,95,71,69,84,95,66,73,78,68,0],"i8",ALLOC_STATIC);
_InstallProcedurePrimitives_procGetInfo=allocate([0,0,0,0,97,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1908,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str33399=allocate([80,82,79,67,95,66,73,78,68,0],"i8",ALLOC_STATIC);
_InstallProcedurePrimitives_procBindInfo=allocate([0,0,0,0,98,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1910,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str43400=allocate([112,97,114,97,109,101,116,101,114,32,108,105,115,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53401=allocate([80,82,67,67,79,68,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63402=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73403=allocate([68,117,112,108,105,99,97,116,101,32,112,97,114,97,109,101,116,101,114,32,110,97,109,101,115,32,110,111,116,32,97,108,108,111,119,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str83404=allocate([78,111,32,112,97,114,97,109,101,116,101,114,115,32,97,108,108,111,119,101,100,32,97,102,116,101,114,32,119,105,108,100,99,97,114,100,32,112,97,114,97,109,101,116,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93405=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103406=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113407=allocate([85,110,100,101,102,105,110,101,100,32,118,97,114,105,97,98,108,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str123408=allocate([32,114,101,102,101,114,101,110,99,101,100,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133409=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143410=allocate([98,105,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153411=allocate([69,120,101,99,117,116,105,111,110,32,104,97,108,116,101,100,32,100,117,114,105,110,103,32,116,104,101,32,97,99,116,105,111,110,115,32,111,102,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163412=allocate([32,40,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str173413=allocate([41,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183414=allocate([86,97,114,105,97,98,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193415=allocate([32,117,110,98,111,117,110,100,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203416=allocate([32,117,110,98,111,117,110,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str213417=allocate([70,117,110,99,116,105,111,110,115,32,119,105,116,104,111,117,116,32,97,32,114,101,116,117,114,110,32,118,97,108,117,101,32,97,114,101,32,105,108,108,101,103,97,108,32,97,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223418=allocate([32,97,114,103,117,109,101,110,116,115,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str233419=allocate([84,104,105,115,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,119,104,105,108,101,32,101,118,97,108,117,97,116,105,110,103,32,97,114,103,117,109,101,110,116,115,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243420=allocate([102,111,114,32,116,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3439=allocate([105,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13441=allocate([73,102,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str23442=allocate([119,104,105,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33443=allocate([87,104,105,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43444=allocate([108,111,111,112,45,102,111,114,45,99,111,117,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53445=allocate([76,111,111,112,70,111,114,67,111,117,110,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str63446=allocate([40,103,101,116,45,108,111,111,112,45,99,111,117,110,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73447=allocate([71,101,116,76,111,111,112,67,111,117,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83448=allocate([98,105,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93449=allocate([66,105,110,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103450=allocate([112,114,111,103,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str113451=allocate([80,114,111,103,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123452=allocate([114,101,116,117,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133453=allocate([82,101,116,117,114,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143454=allocate([98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153455=allocate([66,114,101,97,107,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str163456=allocate([115,119,105,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173457=allocate([83,119,105,116,99,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3464=allocate([98,105,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13465=allocate([112,114,111,103,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23466=allocate([105,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33467=allocate([119,104,105,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43468=allocate([108,111,111,112,45,102,111,114,45,99,111,117,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53469=allocate([114,101,116,117,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63470=allocate([98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73471=allocate([115,119,105,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83472=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93473=allocate([99,97,115,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str103474=allocate([80,82,67,68,82,80,83,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113475=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123476=allocate([68,117,112,108,105,99,97,116,101,32,99,97,115,101,32,102,111,117,110,100,32,105,110,32,115,119,105,116,99,104,32,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133477=allocate([116,104,101,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143478=allocate([100,101,102,97,117,108,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153479=allocate([115,119,105,116,99,104,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163480=allocate([84,104,101,32,98,114,101,97,107,32,102,117,110,99,116,105,111,110,32,110,111,116,32,118,97,108,105,100,32,105,110,32,116,104,105,115,32,99,111,110,116,101,120,116,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str173481=allocate([98,114,101,97,107,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183482=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193483=allocate([84,104,101,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,118,97,108,105,100,32,105,110,32,116,104,105,115,32,99,111,110,116,101,120,116,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str203484=allocate([114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213485=allocate([98,105,110,100,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223486=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233487=allocate([105,102,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243488=allocate([101,108,115,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str253489=allocate([100,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263490=allocate([67,97,110,110,111,116,32,114,101,98,105,110,100,32,108,111,111,112,32,118,97,114,105,97,98,108,101,32,105,110,32,102,117,110,99,116,105,111,110,32,108,111,111,112,45,102,111,114,45,99,111,117,110,116,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273491=allocate([108,111,111,112,45,102,111,114,45,99,111,117,110,116,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str283492=allocate([40,103,101,116,45,108,111,111,112,45,99,111,117,110,116,41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293493=allocate([119,104,105,108,101,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3510=allocate([110,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13511=allocate([78,111,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23512=allocate([49,49,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33513=allocate([97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43514=allocate([65,110,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53515=allocate([50,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63516=allocate([111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73517=allocate([79,114,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83518=allocate([101,113,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93519=allocate([69,113,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103520=allocate([110,101,113,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113521=allocate([78,101,113,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123522=allocate([60,61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133523=allocate([76,101,115,115,84,104,97,110,79,114,69,113,117,97,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143524=allocate([50,42,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153525=allocate([62,61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163526=allocate([71,114,101,97,116,101,114,84,104,97,110,79,114,69,113,117,97,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173527=allocate([60,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183528=allocate([76,101,115,115,84,104,97,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str193529=allocate([62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203530=allocate([71,114,101,97,116,101,114,84,104,97,110,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213531=allocate([61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223532=allocate([78,117,109,101,114,105,99,69,113,117,97,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233533=allocate([60,62,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str243534=allocate([78,117,109,101,114,105,99,78,111,116,69,113,117,97,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str253535=allocate([33,61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263536=allocate([115,121,109,98,111,108,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273537=allocate([83,121,109,98,111,108,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283538=allocate([119,111,114,100,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str293539=allocate([115,116,114,105,110,103,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str303540=allocate([83,116,114,105,110,103,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str313541=allocate([108,101,120,101,109,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323542=allocate([76,101,120,101,109,101,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str333543=allocate([110,117,109,98,101,114,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str343544=allocate([78,117,109,98,101,114,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str353545=allocate([105,110,116,101,103,101,114,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str363546=allocate([73,110,116,101,103,101,114,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str373547=allocate([102,108,111,97,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str383548=allocate([70,108,111,97,116,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str393549=allocate([111,100,100,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str403550=allocate([79,100,100,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str413551=allocate([49,49,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str423552=allocate([101,118,101,110,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str433553=allocate([69,118,101,110,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str443554=allocate([109,117,108,116,105,102,105,101,108,100,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str453555=allocate([77,117,108,116,105,102,105,101,108,100,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str463556=allocate([115,101,113,117,101,110,99,101,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str473557=allocate([112,111,105,110,116,101,114,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str483558=allocate([80,111,105,110,116,101,114,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3560=allocate([37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13561=allocate([34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23562=allocate([60,80,111,105,110,116,101,114,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33563=allocate([37,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43564=allocate([62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53565=allocate([91,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str63566=allocate([93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73567=allocate([60,117,110,107,110,111,119,110,32,97,116,111,109,32,116,121,112,101,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83568=allocate([70,111,114,32,97,32,116,111,116,97,108,32,111,102,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93569=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103570=allocate([46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113571=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str123572=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133573=allocate([93,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143574=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153575=allocate([93,32,87,65,82,78,73,78,71,58,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163576=allocate([80,82,78,84,85,84,73,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173577=allocate([85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str183578=allocate([32,105,110,32,102,117,110,99,116,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193579=allocate([85,110,97,98,108,101,32,116,111,32,100,101,108,101,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str203580=allocate([84,104,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213581=allocate([32,104,97,115,32,97,108,114,101,97,100,121,32,98,101,101,110,32,112,97,114,115,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str223582=allocate([83,121,110,116,97,120,32,69,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233583=allocate([58,32,32,67,104,101,99,107,32,97,112,112,114,111,112,114,105,97,116,101,32,115,121,110,116,97,120,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243584=allocate([76,111,99,97,108,32,118,97,114,105,97,98,108,101,115,32,99,97,110,32,110,111,116,32,98,101,32,97,99,99,101,115,115,101,100,32,98,121,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str253585=allocate([10,42,42,42,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263586=allocate([67,76,73,80,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273587=allocate([32,83,89,83,84,69,77,32,69,82,82,79,82,32,42,42,42,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283588=allocate([73,68,32,61,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str293589=allocate([32,100,97,116,97,32,115,116,114,117,99,116,117,114,101,115,32,97,114,101,32,105,110,32,97,110,32,105,110,99,111,110,115,105,115,116,101,110,116,32,111,114,32,99,111,114,114,117,112,116,101,100,32,115,116,97,116,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str303590=allocate([84,104,105,115,32,101,114,114,111,114,32,109,97,121,32,104,97,118,101,32,111,99,99,117,114,114,101,100,32,102,114,111,109,32,101,114,114,111,114,115,32,105,110,32,117,115,101,114,32,100,101,102,105,110,101,100,32,99,111,100,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str313591=allocate([42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str323592=allocate([65,116,116,101,109,112,116,32,116,111,32,100,105,118,105,100,101,32,98,121,32,122,101,114,111,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str333593=allocate([32,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str343594=allocate([37,46,49,53,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str353595=allocate([46,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str363596=allocate([40,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str373597=allocate([41,0],"i8",ALLOC_STATIC);__str383598=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str393599=allocate([60,68,117,109,109,121,32,73,110,115,116,97,110,99,101,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str403600=allocate([60,83,116,97,108,101,32,73,110,115,116,97,110,99,101,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str413601=allocate([60,73,110,115,116,97,110,99,101,45,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str423602=allocate([60,80,111,105,110,116,101,114,45,37,112,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str433603=allocate([60,68,117,109,109,121,32,70,97,99,116,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str443604=allocate([60,70,97,99,116,45,37,108,100,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str453605=allocate([84,66,68,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str463606=allocate([84,104,105,115,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,119,104,105,108,101,32,101,118,97,108,117,97,116,105,110,103,32,116,104,101,32,115,97,108,105,101,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str473607=allocate([32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str483608=allocate([83,97,108,105,101,110,99,101,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str493609=allocate([32,116,111,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str503610=allocate([83,97,108,105,101,110,99,101,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,32,118,97,108,117,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str513611=allocate([73,78,83,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str523612=allocate([78,111,32,115,117,99,104,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);
_ConstructProfilingFunctionDefinitions_profileDataInfo=allocate([0,0,0,0,1912,0,0,0,1914,0,0,0],["i8",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str3653=allocate([37,45,52,48,115,32,37,55,108,100,32,37,49,53,46,54,102,32,32,37,56,46,50,102,37,37,32,32,37,49,53,46,54,102,32,32,37,56,46,50,102,37,37,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13654=allocate([112,114,111,102,105,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str23655=allocate([80,114,111,102,105,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33656=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43657=allocate([112,114,111,102,105,108,101,45,105,110,102,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53658=allocate([80,114,111,102,105,108,101,73,110,102,111,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63659=allocate([48,49,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73660=allocate([112,114,111,102,105,108,101,45,114,101,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83661=allocate([80,114,111,102,105,108,101,82,101,115,101,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93662=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103663=allocate([115,101,116,45,112,114,111,102,105,108,101,45,112,101,114,99,101,110,116,45,116,104,114,101,115,104,111,108,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str113664=allocate([83,101,116,80,114,111,102,105,108,101,80,101,114,99,101,110,116,84,104,114,101,115,104,111,108,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123665=allocate([49,49,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133666=allocate([103,101,116,45,112,114,111,102,105,108,101,45,112,101,114,99,101,110,116,45,116,104,114,101,115,104,111,108,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143667=allocate([71,101,116,80,114,111,102,105,108,101,80,101,114,99,101,110,116,84,104,114,101,115,104,111,108,100,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153668=allocate([115,121,109,98,111,108,32,119,105,116,104,32,118,97,108,117,101,32,99,111,110,115,116,114,117,99,116,115,44,32,117,115,101,114,45,102,117,110,99,116,105,111,110,115,44,32,111,114,32,111,102,102,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str163669=allocate([117,115,101,114,45,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173670=allocate([99,111,110,115,116,114,117,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183671=allocate([111,102,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193672=allocate([80,114,111,102,105,108,101,32,101,108,97,112,115,101,100,32,116,105,109,101,32,61,32,37,103,32,115,101,99,111,110,100,115,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str203673=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213674=allocate([70,117,110,99,116,105,111,110,32,78,97,109,101,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223675=allocate([67,111,110,115,116,114,117,99,116,32,78,97,109,101,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str233676=allocate([69,110,116,114,105,101,115,32,32,32,32,32,32,32,32,32,84,105,109,101,32,32,32,32,32,32,32,32,32,32,32,37,32,32,32,32,32,32,32,32,32,32,84,105,109,101,43,75,105,100,115,32,32,32,32,32,37,43,75,105,100,115,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243677=allocate([45,45,45,45,45,45,45,45,45,45,45,45,45,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str253678=allocate([45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263679=allocate([45,45,45,45,45,45,45,32,32,32,32,32,32,32,32,45,45,45,45,45,45,32,32,32,32,32,32,32,32,45,45,45,45,45,32,32,32,32,32,32,32,32,45,45,45,45,45,45,45,45,45,32,32,32,32,32,45,45,45,45,45,45,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str273680=allocate([110,117,109,98,101,114,32,105,110,32,116,104,101,32,114,97,110,103,101,32,48,32,116,111,32,49,48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283681=allocate([10,42,42,42,32,68,101,102,102,117,110,99,116,105,111,110,115,32,42,42,42,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293682=allocate([10,42,42,42,32,68,101,102,103,101,110,101,114,105,99,115,32,42,42,42,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str303683=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str313684=allocate([10,42,42,42,32,68,101,102,99,108,97,115,115,101,115,32,42,42,42,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323685=allocate([10,42,42,42,32,68,101,102,114,117,108,101,115,32,42,42,42,10,10,0],"i8",ALLOC_STATIC);__str333686=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str3691=allocate([82,69,79,82,68,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13692=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3701=allocate([44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13702=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23703=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3726=allocate([82,69,84,82,65,67,84,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3741=allocate([101,120,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13742=allocate([69,120,105,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23743=allocate([42,49,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33744=allocate([37,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43745=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53746=allocate([82,79,85,84,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63747=allocate([76,111,103,105,99,97,108,32,110,97,109,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73748=allocate([32,119,97,115,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,32,98,121,32,97,110,121,32,114,111,117,116,101,114,115,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3775=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3787=allocate([99,111,109,112,105,108,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13788=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23789=allocate([61,106,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33790=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43791=allocate([43,106,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53792=allocate([66,85,73,76,68,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3793=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13794=allocate([114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23795=allocate([103,101,116,45,100,101,102,114,117,108,101,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33796=allocate([71,101,116,68,101,102,114,117,108,101,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str43797=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53798=allocate([117,110,100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63799=allocate([85,110,100,101,102,114,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73800=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83801=allocate([100,101,102,114,117,108,101,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93802=allocate([68,101,102,114,117,108,101,77,111,100,117,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103803=allocate([76,105,115,116,68,101,102,114,117,108,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113804=allocate([108,105,115,116,45,100,101,102,114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123805=allocate([112,112,100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str133806=allocate([80,80,68,101,102,114,117,108,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143807=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3812=allocate([100,101,102,114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13813=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str23814=allocate([35,105,110,99,108,117,100,101,32,34,114,117,108,101,100,101,102,46,104,34,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33815=allocate([115,116,114,117,99,116,32,100,101,102,114,117,108,101,77,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43816=allocate([115,116,114,117,99,116,32,100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53817=allocate([115,116,114,117,99,116,32,106,111,105,110,78,111,100,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str63818=allocate([123,37,100,44,37,100,44,37,100,44,37,100,44,48,44,48,44,37,100,44,37,100,44,48,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73819=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83820=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93821=allocate([86,83,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103822=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113823=allocate([78,85,76,76,125,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str123824=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133825=allocate([123,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143826=allocate([44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153827=allocate([44,78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3831=allocate([114,117,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str13832=allocate([82,117,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23833=allocate([42,49,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33834=allocate([104,97,108,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43835=allocate([72,97,108,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53836=allocate([48,48,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63837=allocate([102,111,99,117,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73838=allocate([70,111,99,117,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83839=allocate([49,42,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93840=allocate([99,108,101,97,114,45,102,111,99,117,115,45,115,116,97,99,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103841=allocate([67,108,101,97,114,70,111,99,117,115,83,116,97,99,107,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str113842=allocate([103,101,116,45,102,111,99,117,115,45,115,116,97,99,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123843=allocate([71,101,116,70,111,99,117,115,83,116,97,99,107,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133844=allocate([112,111,112,45,102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143845=allocate([80,111,112,70,111,99,117,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str153846=allocate([103,101,116,45,102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163847=allocate([71,101,116,70,111,99,117,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173848=allocate([115,101,116,45,98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183849=allocate([83,101,116,66,114,101,97,107,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193850=allocate([49,49,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str203851=allocate([114,101,109,111,118,101,45,98,114,101,97,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213852=allocate([82,101,109,111,118,101,66,114,101,97,107,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223853=allocate([42,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str233854=allocate([115,104,111,119,45,98,114,101,97,107,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243855=allocate([83,104,111,119,66,114,101,97,107,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str253856=allocate([48,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str263857=allocate([109,97,116,99,104,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273858=allocate([77,97,116,99,104,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283859=allocate([108,105,115,116,45,102,111,99,117,115,45,115,116,97,99,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str293860=allocate([76,105,115,116,70,111,99,117,115,83,116,97,99,107,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str303861=allocate([100,101,112,101,110,100,101,110,99,105,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str313862=allocate([68,101,112,101,110,100,101,110,99,105,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323863=allocate([49,49,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str333864=allocate([100,101,112,101,110,100,101,110,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str343865=allocate([68,101,112,101,110,100,101,110,116,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str353866=allocate([103,101,116,45,105,110,99,114,101,109,101,110,116,97,108,45,114,101,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str363867=allocate([71,101,116,73,110,99,114,101,109,101,110,116,97,108,82,101,115,101,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str373868=allocate([115,101,116,45,105,110,99,114,101,109,101,110,116,97,108,45,114,101,115,101,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str383869=allocate([83,101,116,73,110,99,114,101,109,101,110,116,97,108,82,101,115,101,116,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str393870=allocate([49,49,0],"i8",ALLOC_STATIC);STRING_TABLE.__str403871=allocate([103,101,116,45,115,116,114,97,116,101,103,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str413872=allocate([71,101,116,83,116,114,97,116,101,103,121,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str423873=allocate([115,101,116,45,115,116,114,97,116,101,103,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str433874=allocate([83,101,116,83,116,114,97,116,101,103,121,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str443875=allocate([114,117,108,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str453876=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str463877=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str473878=allocate([77,97,116,99,104,101,115,32,102,111,114,32,80,97,116,116,101,114,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str483879=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str493880=allocate([32,78,111,110,101,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str503881=allocate([80,97,114,116,105,97,108,32,109,97,116,99,104,101,115,32,102,111,114,32,67,69,115,32,49,32,45,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str513882=allocate([65,99,116,105,118,97,116,105,111,110,115,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3883=allocate([84,104,101,32,103,114,111,117,112,32,111,102,32,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13884=allocate([82,85,76,69,67,83,84,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str23885=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33886=allocate([80,114,101,118,105,111,117,115,32,118,97,114,105,97,98,108,101,32,98,105,110,100,105,110,103,115,32,111,102,32,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43887=allocate([32,99,97,117,115,101,100,32,116,104,101,32,116,121,112,101,32,114,101,115,116,114,105,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53888=allocate([10,102,111,114,32,97,114,103,117,109,101,110,116,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63889=allocate([32,111,102,32,116,104,101,32,101,120,112,114,101,115,115,105,111,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73890=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83891=allocate([102,111,117,110,100,32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93892=allocate([32,102,105,101,108,100,32,35,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str103893=allocate([32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113894=allocate([32,116,111,32,98,101,32,118,105,111,108,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123895=allocate([10,102,111,117,110,100,32,105,110,32,116,104,101,32,114,117,108,101,39,115,32,82,72,83,32,116,111,32,98,101,32,118,105,111,108,97,116,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133896=allocate([86,97,114,105,97,98,108,101,32,63,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str143897=allocate([32,105,110,32,67,69,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153898=allocate([80,97,116,116,101,114,110,32,35,0],"i8",ALLOC_STATIC);STRING_TABLE.__str163899=allocate([10,104,97,115,32,99,111,110,115,116,114,97,105,110,116,32,99,111,110,102,108,105,99,116,115,32,119,104,105,99,104,32,109,97,107,101,32,116,104,101,32,112,97,116,116,101,114,110,32,117,110,109,97,116,99,104,97,98,108,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3908=allocate([97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13909=allocate([110,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23910=allocate([111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33911=allocate([116,101,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43912=allocate([108,111,103,105,99,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53913=allocate([101,120,105,115,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63914=allocate([102,111,114,97,108,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str73915=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83916=allocate([100,101,102,114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3929=allocate([61,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13930=allocate([116,104,101,32,102,105,114,115,116,32,102,105,101,108,100,32,111,102,32,97,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23931=allocate([100,101,99,108,97,114,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str33932=allocate([82,85,76,69,76,72,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43933=allocate([116,101,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53934=allocate([97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63935=allocate([108,111,103,105,99,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73936=allocate([110,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83937=allocate([101,120,105,115,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str93938=allocate([102,111,114,97,108,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103939=allocate([111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113940=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123941=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str133942=allocate([65,32,112,97,116,116,101,114,110,32,67,69,32,99,97,110,110,111,116,32,98,101,32,98,111,117,110,100,32,116,111,32,97,32,112,97,116,116,101,114,110,45,97,100,100,114,101,115,115,32,119,105,116,104,105,110,32,97,32,110,111,116,32,67,69,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str143943=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str153944=allocate([60,45,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str163945=allocate([98,105,110,100,105,110,103,32,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str173946=allocate([61,0],"i8",ALLOC_STATIC);STRING_TABLE.__str183947=allocate([58,0],"i8",ALLOC_STATIC);STRING_TABLE.__str193948=allocate([116,104,101,32,102,105,101,108,100,32,102,105,101,108,100,32,111,102,32,97,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str203949=allocate([116,104,101,32,111,114,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str213950=allocate([32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str223951=allocate([116,104,101,32,97,110,100,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str233952=allocate([116,104,101,32,110,111,116,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str243953=allocate([116,104,101,32,101,120,105,115,116,115,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str253954=allocate([116,104,101,32,102,111,114,97,108,108,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str263955=allocate([116,104,101,32,108,111,103,105,99,97,108,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str273956=allocate([84,104,101,32,108,111,103,105,99,97,108,32,67,69,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,119,105,116,104,105,110,32,97,32,110,111,116,47,101,120,105,115,116,115,47,102,111,114,97,108,108,32,67,69,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str283957=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str293958=allocate([116,101,115,116,32,99,111,110,100,105,116,105,111,110,97,108,32,101,108,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str303959=allocate([100,101,99,108,97,114,101,32,115,116,97,116,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str313960=allocate([115,97,108,105,101,110,99,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str323961=allocate([115,97,108,105,101,110,99,101,32,100,101,99,108,97,114,97,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str333962=allocate([97,117,116,111,45,102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str343963=allocate([97,117,116,111,45,102,111,99,117,115,32,100,101,99,108,97,114,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str353964=allocate([32,40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str363965=allocate([97,117,116,111,45,102,111,99,117,115,32,115,116,97,116,101,109,101,110,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str373966=allocate([84,82,85,69,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str383967=allocate([70,65,76,83,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str3970=allocate([40,100,101,102,114,117,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13971=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23972=allocate([42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33973=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43974=allocate([97,99,116,105,118,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str53975=allocate([114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63976=allocate([10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73977=allocate([82,72,83,32,111,102,32,100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str83978=allocate([109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str93979=allocate([100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str103980=allocate([82,85,76,69,80,83,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str113981=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str123982=allocate([76,111,103,105,99,97,108,32,67,69,115,32,109,117,115,116,32,98,101,32,112,108,97,99,101,100,32,102,105,114,115,116,32,105,110,32,97,32,114,117,108,101,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str133983=allocate([71,97,112,115,32,109,97,121,32,110,111,116,32,101,120,105,115,116,32,98,101,116,119,101,101,110,32,108,111,103,105,99,97,108,32,67,69,115,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str3988=allocate([117,110,107,110,111,119,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str13989=allocate([63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str23990=allocate([36,63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str33991=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str43992=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str53993=allocate([126,0],"i8",ALLOC_STATIC);STRING_TABLE.__str63994=allocate([124,0],"i8",ALLOC_STATIC);STRING_TABLE.__str73995=allocate([38,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str83996=allocate([115,116,111,112,0],"i8",ALLOC_STATIC);__str93997=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str103998=allocate([60,60,60,117,110,112,114,105,110,116,97,98,108,101,32,99,104,97,114,97,99,116,101,114,62,62,62,0],"i8",ALLOC_STATIC);STRING_TABLE.__str113999=allocate([91,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124000=allocate([93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134001=allocate([83,67,65,78,78,69,82,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str144002=allocate([119,119,97,114,110,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154003=allocate([79,118,101,114,32,111,114,32,117,110,100,101,114,102,108,111,119,32,111,102,32,108,111,110,103,32,105,110,116,101,103,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164004=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str174005=allocate([10,69,110,99,111,117,110,116,101,114,101,100,32,69,110,100,45,79,102,45,70,105,108,101,32,119,104,105,108,101,32,115,99,97,110,110,105,110,103,32,97,32,115,116,114,105,110,103,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4014=allocate([115,111,114,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14015=allocate([83,111,114,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24016=allocate([49,42,42,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str34017=allocate([102,117,110,99,116,105,111,110,32,110,97,109,101,44,32,100,101,102,102,117,110,99,116,105,111,110,32,110,97,109,101,44,32,111,114,32,100,101,102,103,101,110,101,114,105,99,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44018=allocate([102,117,110,99,116,105,111,110,32,110,97,109,101,32,101,120,112,101,99,116,105,110,103,32,116,119,111,32,97,114,103,117,109,101,110,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54019=allocate([100,101,102,102,117,110,99,116,105,111,110,32,110,97,109,101,32,101,120,112,101,99,116,105,110,103,32,116,119,111,32,97,114,103,117,109,101,110,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4020=allocate([115,116,114,45,99,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14021=allocate([83,116,114,67,97,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24022=allocate([49,42,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str34023=allocate([115,121,109,45,99,97,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44024=allocate([83,121,109,67,97,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54025=allocate([115,116,114,45,108,101,110,103,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64026=allocate([83,116,114,76,101,110,103,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74027=allocate([49,49,106,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84028=allocate([115,116,114,45,99,111,109,112,97,114,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94029=allocate([83,116,114,67,111,109,112,97,114,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104030=allocate([50,51,42,106,106,105,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114031=allocate([117,112,99,97,115,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124032=allocate([85,112,99,97,115,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str134033=allocate([108,111,119,99,97,115,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144034=allocate([76,111,119,99,97,115,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154035=allocate([115,117,98,45,115,116,114,105,110,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164036=allocate([83,117,98,83,116,114,105,110,103,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174037=allocate([51,51,42,105,105,106,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str184038=allocate([115,116,114,45,105,110,100,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194039=allocate([83,116,114,73,110,100,101,120,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str204040=allocate([50,50,106,0],"i8",ALLOC_STATIC);STRING_TABLE.__str214041=allocate([101,118,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str224042=allocate([69,118,97,108,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str234043=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str244044=allocate([98,117,105,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str254045=allocate([66,117,105,108,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str264046=allocate([115,116,114,105,110,103,45,116,111,45,102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str274047=allocate([83,116,114,105,110,103,84,111,70,105,101,108,100,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
__str284048=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str294049=allocate([42,42,42,32,69,82,82,79,82,32,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str304050=allocate([115,116,114,105,110,103,45,116,111,45,102,105,101,108,100,45,115,116,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str314051=allocate([69,79,70,0],"i8",ALLOC_STATIC);_EnvEval_depth=allocate(4,"i8",ALLOC_STATIC);STRING_TABLE.__str324052=allocate([69,118,97,108,45,37,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str334053=allocate([77,73,83,67,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str344054=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str354055=allocate([101,120,112,97,110,100,36,32,109,117,115,116,32,98,101,32,117,115,101,100,32,105,110,32,116,104,101,32,97,114,103,117,109,101,110,116,32,108,105,115,116,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,99,97,108,108,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str364056=allocate([83,84,82,78,71,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str374057=allocate([83,111,109,101,32,118,97,114,105,97,98,108,101,115,32,99,111,117,108,100,32,110,111,116,32,98,101,32,97,99,99,101,115,115,101,100,32,98,121,32,116,104,101,32,101,118,97,108,32,102,117,110,99,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str384058=allocate([10,69,82,82,79,82,58,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str394059=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str404060=allocate([110,105,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str414061=allocate([115,116,114,105,110,103,44,32,105,110,115,116,97,110,99,101,32,110,97,109,101,44,32,115,121,109,98,111,108,44,32,102,108,111,97,116,44,32,111,114,32,105,110,116,101,103,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str424062=allocate([37,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4067=allocate([115,116,114,105,110,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14068=allocate([82,79,85,84,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4089=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14090=allocate([38,83,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24091=allocate([38,70,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34092=allocate([38,73,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44093=allocate([38,66,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54094=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,115,121,109,98,111,108,72,97,115,104,78,111,100,101,32,42,115,104,116,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64095=allocate([115,116,114,117,99,116,32,115,121,109,98,111,108,72,97,115,104,78,111,100,101,32,42,115,104,116,37,100,91,37,108,100,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74096=allocate([44,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84097=allocate([125,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94098=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,102,108,111,97,116,72,97,115,104,78,111,100,101,32,42,102,104,116,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104099=allocate([115,116,114,117,99,116,32,102,108,111,97,116,72,97,115,104,78,111,100,101,32,42,102,104,116,37,100,91,37,100,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str114100=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,105,110,116,101,103,101,114,72,97,115,104,78,111,100,101,32,42,105,104,116,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124101=allocate([115,116,114,117,99,116,32,105,110,116,101,103,101,114,72,97,115,104,78,111,100,101,32,42,105,104,116,37,100,91,37,100,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str134102=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,98,105,116,77,97,112,72,97,115,104,78,111,100,101,32,42,98,109,104,116,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144103=allocate([115,116,114,117,99,116,32,98,105,116,77,97,112,72,97,115,104,78,111,100,101,32,42,98,109,104,116,37,100,91,37,100,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str154104=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,105,110,116,101,103,101,114,72,97,115,104,78,111,100,101,32,73,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164105=allocate([115,116,114,117,99,116,32,105,110,116,101,103,101,114,72,97,115,104,78,111,100,101,32,73,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174106=allocate([123,78,85,76,76,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str184107=allocate([123,38,73,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194108=allocate([37,108,100,44,48,44,49,44,48,44,48,44,37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str204109=allocate([37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str214110=allocate([125,125,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str224111=allocate([125,44,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str234112=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,102,108,111,97,116,72,97,115,104,78,111,100,101,32,70,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str244113=allocate([115,116,114,117,99,116,32,102,108,111,97,116,72,97,115,104,78,111,100,101,32,70,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str254114=allocate([123,38,70,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str264115=allocate([37,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str274116=allocate([101,120,116,101,114,110,32,117,110,115,105,103,110,101,100,32,108,111,110,103,32,76,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str284117=allocate([117,110,115,105,103,110,101,100,32,108,111,110,103,32,76,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str294118=allocate([44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str304119=allocate([48,120,37,108,120,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str314120=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,98,105,116,77,97,112,72,97,115,104,78,111,100,101,32,66,37,100,95,37,100,91,93,59,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str324121=allocate([115,116,114,117,99,116,32,98,105,116,77,97,112,72,97,115,104,78,111,100,101,32,66,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str334122=allocate([123,38,66,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str344123=allocate([37,108,100,44,48,44,49,44,48,44,48,44,37,100,44,40,99,104,97,114,32,42,41,32,38,76,37,100,95,37,100,91,37,100,93,44,37,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str354124=allocate([101,120,116,101,114,110,32,115,116,114,117,99,116,32,115,121,109,98,111,108,72,97,115,104,78,111,100,101,32,83,37,100,95,37,108,100,91,93,59,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str364125=allocate([115,116,114,117,99,116,32,115,121,109,98,111,108,72,97,115,104,78,111,100,101,32,83,37,100,95,37,100,91,93,32,61,32,123,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str374126=allocate([123,38,83,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str384127=allocate([123,38,83,37,100,95,37,100,91,37,108,100,93,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str394128=allocate([37,108,100,44,48,44,49,44,48,44,48,44,37,108,100,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str404129=allocate([34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4140=allocate([84,82,85,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14141=allocate([70,65,76,83,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24142=allocate([43,111,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34143=allocate([45,111,111,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44144=allocate([83,89,77,66,79,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4181=allocate([45,102,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14182=allocate([45,102,50,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24184=allocate([45,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34185=allocate([83,89,83,68,69,80,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44186=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54187=allocate([73,110,118,97,108,105,100,32,111,112,116,105,111,110,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str64188=allocate([78,111,32,102,105,108,101,32,102,111,117,110,100,32,102,111,114,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74189=allocate([32,111,112,116,105,111,110,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84190=allocate([115,121,115,116,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94191=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str104192=allocate([83,121,115,116,101,109,32,102,117,110,99,116,105,111,110,32,110,111,116,32,102,117,108,108,121,32,100,101,102,105,110,101,100,32,102,111,114,32,116,104,105,115,32,115,121,115,116,101,109,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114193=allocate([114,98,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124194=allocate([100,101,102,114,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134195=allocate([100,101,102,103,108,111,98,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str144196=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154197=allocate([100,101,102,102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164198=allocate([100,101,102,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174199=allocate([100,101,102,109,101,116,104,111,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str184200=allocate([100,101,102,103,101,110,101,114,105,99,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str194201=allocate([100,101,102,99,108,97,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str204202=allocate([100,101,102,109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str214203=allocate([100,101,102,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str224204=allocate([100,101,112,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str234205=allocate([98,114,101,97,100,116,104,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str244206=allocate([108,101,120,0],"i8",ALLOC_STATIC);STRING_TABLE.__str254207=allocate([109,101,97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str264208=allocate([115,105,109,112,108,105,99,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str274209=allocate([99,111,109,112,108,101,120,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str284210=allocate([114,97,110,100,111,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str294211=allocate([119,104,101,110,45,100,101,102,105,110,101,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str304212=allocate([119,104,101,110,45,97,99,116,105,118,97,116,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str314213=allocate([101,118,101,114,121,45,99,121,99,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str324214=allocate([102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str334215=allocate([109,117,108,116,105,102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str344216=allocate([100,101,102,97,117,108,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str354217=allocate([116,121,112,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str364218=allocate([97,108,108,111,119,101,100,45,115,121,109,98,111,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str374219=allocate([97,108,108,111,119,101,100,45,115,116,114,105,110,103,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str384220=allocate([97,108,108,111,119,101,100,45,110,117,109,98,101,114,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str394221=allocate([97,108,108,111,119,101,100,45,105,110,116,101,103,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str404222=allocate([97,108,108,111,119,101,100,45,102,108,111,97,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str414223=allocate([97,108,108,111,119,101,100,45,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str424224=allocate([109,105,110,45,110,117,109,98,101,114,45,111,102,45,101,108,101,109,101,110,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str434225=allocate([109,97,120,45,110,117,109,98,101,114,45,111,102,45,101,108,101,109,101,110,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str444226=allocate([78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str454227=allocate([86,65,82,73,65,66,76,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str464228=allocate([100,101,99,108,97,114,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str474229=allocate([115,97,108,105,101,110,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str484230=allocate([116,101,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str494231=allocate([111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str504232=allocate([97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str514233=allocate([110,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str524234=allocate([108,111,103,105,99,97,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str534235=allocate([105,115,45,97,0],"i8",ALLOC_STATIC);STRING_TABLE.__str544236=allocate([114,111,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str554237=allocate([97,98,115,116,114,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str564238=allocate([99,111,110,99,114,101,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str574239=allocate([112,97,116,116,101,114,110,45,109,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str584240=allocate([114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str594241=allocate([110,111,110,45,114,101,97,99,116,105,118,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str604242=allocate([115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str614243=allocate([109,117,108,116,105,112,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str624244=allocate([115,105,110,103,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str634245=allocate([115,116,111,114,97,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str644246=allocate([115,104,97,114,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str654247=allocate([108,111,99,97,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str664248=allocate([97,99,99,101,115,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str674249=allocate([114,101,97,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str684250=allocate([119,114,105,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str694251=allocate([114,101,97,100,45,111,110,108,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str704252=allocate([114,101,97,100,45,119,114,105,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str714253=allocate([105,110,105,116,105,97,108,105,122,101,45,111,110,108,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str724254=allocate([112,114,111,112,97,103,97,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str734255=allocate([105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str744256=allocate([110,111,45,105,110,104,101,114,105,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str754257=allocate([115,111,117,114,99,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str764258=allocate([99,111,109,112,111,115,105,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str774259=allocate([101,120,99,108,117,115,105,118,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str784260=allocate([97,108,108,111,119,101,100,45,108,101,120,101,109,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str794261=allocate([97,108,108,111,119,101,100,45,105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str804262=allocate([97,114,111,117,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str814263=allocate([98,101,102,111,114,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str824264=allocate([112,114,105,109,97,114,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str834265=allocate([97,102,116,101,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str844266=allocate([111,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str854267=allocate([115,101,108,102,0],"i8",ALLOC_STATIC);STRING_TABLE.__str864268=allocate([118,105,115,105,98,105,108,105,116,121,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str874269=allocate([111,118,101,114,114,105,100,101,45,109,101,115,115,97,103,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str884270=allocate([112,114,105,118,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str894271=allocate([112,117,98,108,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str904272=allocate([99,114,101,97,116,101,45,97,99,99,101,115,115,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str914273=allocate([99,111,109,112,105,108,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str924274=allocate([100,101,102,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str934275=allocate([103,108,111,98,97,108,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str944276=allocate([114,117,108,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str954277=allocate([97,99,116,105,118,97,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str964278=allocate([115,116,97,116,105,115,116,105,99,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str974279=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str984280=allocate([103,101,110,101,114,105,99,45,102,117,110,99,116,105,111,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str994281=allocate([109,101,116,104,111,100,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1004282=allocate([105,110,115,116,97,110,99,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1014283=allocate([115,108,111,116,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str1024284=allocate([109,101,115,115,97,103,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1034285=allocate([109,101,115,115,97,103,101,45,104,97,110,100,108,101,114,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str1044286=allocate([102,111,99,117,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4319=allocate([114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14320=allocate([84,69,88,84,80,82,79,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24321=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str34322=allocate([67,111,117,108,100,32,110,111,116,32,111,112,101,110,32,102,105,108,101,32,34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44323=allocate([34,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54324=allocate([70,105,108,101,32,34,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64325=allocate([34,32,97,108,114,101,97,100,121,32,108,111,97,100,101,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74326=allocate([69,78,68,45,69,78,84,82,89,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84327=allocate([76,105,110,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94328=allocate([32,58,32,85,110,109,97,116,99,104,101,100,32,101,110,100,32,109,97,114,107,101,114,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104329=allocate([66,69,71,73,78,45,69,78,84,82,89,45,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114330=allocate([32,58,32,80,114,101,118,105,111,117,115,32,101,110,116,114,121,32,110,111,116,32,99,108,111,115,101,100,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str124331=allocate([99,108,105,112,115,46,104,108,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134332=allocate([119,100,105,97,108,111,103,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144333=allocate([76,111,97,100,105,110,103,32,104,101,108,112,32,102,105,108,101,32,101,110,116,114,105,101,115,32,102,114,111,109,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154334=allocate([46,10,80,108,101,97,115,101,32,119,97,105,116,46,46,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str164335=allocate([119,104,101,108,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174336=allocate([77,65,73,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str184337=allocate([10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194338=allocate([85,110,97,98,108,101,32,116,111,32,97,99,99,101,115,115,32,104,101,108,112,32,102,105,108,101,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str204339=allocate([82,111,111,116,32,101,110,116,114,121,32,34,77,65,73,78,34,32,110,111,116,32,102,111,117,110,100,32,105,110,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str214340=allocate([46,10,83,101,101,32,101,120,116,101,114,110,97,108,32,100,111,99,117,109,101,110,116,97,116,105,111,110,46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str224341=allocate([10,83,111,114,114,121,44,32,110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,97,118,97,105,108,97,98,108,101,46,10,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str234342=allocate([84,104,101,32,99,117,114,114,101,110,116,32,104,101,108,112,32,101,110,116,114,105,101,115,32,102,105,108,101,32,105,115,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str244343=allocate([82,101,108,101,97,115,105,110,103,32,104,101,108,112,32,101,110,116,114,105,101,115,32,102,114,111,109,32,102,105,108,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str254344=allocate([46,46,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str264345=allocate([104,101,108,112,45,112,97,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str274346=allocate([72,101,108,112,32,101,110,116,114,105,101,115,32,102,105,108,101,32,114,101,115,101,116,32,116,111,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str284347=allocate([102,101,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str294348=allocate([78,111,32,101,110,116,114,105,101,115,32,102,111,117,110,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str304349=allocate([116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str314350=allocate([115,116,100,111,117,116,0],"i8",ALLOC_STATIC);__str324351=allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str334352=allocate([116,111,115,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str344353=allocate([104,101,108,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str354354=allocate([72,101,108,112,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str364355=allocate([72,101,108,112,80,97,116,104,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str374356=allocate([42,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str384357=allocate([70,101,116,99,104,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str394358=allocate([49,49,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str404359=allocate([84,111,115,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str414360=allocate([112,114,105,110,116,45,114,101,103,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str424361=allocate([80,114,105,110,116,82,101,103,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str434362=allocate([50,42,42,119,107,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str444363=allocate([103,101,116,45,114,101,103,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str454364=allocate([71,101,116,82,101,103,105,111,110,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str464365=allocate([49,42,42,107,0],"i8",ALLOC_STATIC);STRING_TABLE.__str474366=allocate([94,0],"i8",ALLOC_STATIC);STRING_TABLE.__str484367=allocate([63,0],"i8",ALLOC_STATIC);STRING_TABLE.__str494368=allocate([32,84,111,112,105,99,63,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str504369=allocate([42,42,42,69,82,82,79,82,42,42,42,0],"i8",ALLOC_STATIC);STRING_TABLE.__str514370=allocate([115,116,100,105,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str524371=allocate([32,58,32,78,111,110,45,109,101,110,117,32,101,110,116,114,105,101,115,32,99,97,110,110,111,116,32,104,97,118,101,32,115,117,98,116,111,112,105,99,115,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str534372=allocate([37,100,37,49,115,37,49,50,115,37,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str544373=allocate([32,58,32,73,110,118,97,108,105,100,32,100,101,108,105,109,101,116,101,114,32,115,116,114,105,110,103,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str554374=allocate([32,58,32,73,110,118,97,108,105,100,32,101,110,116,114,121,32,116,121,112,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4377=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14378=allocate([105,110,105,116,105,97,108,45,102,97,99,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4385=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14386=allocate([103,101,116,45,100,101,102,116,101,109,112,108,97,116,101,45,108,105,115,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24387=allocate([71,101,116,68,101,102,116,101,109,112,108,97,116,101,76,105,115,116,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34388=allocate([48,49,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str44389=allocate([117,110,100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54390=allocate([85,110,100,101,102,116,101,109,112,108,97,116,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64391=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74392=allocate([100,101,102,116,101,109,112,108,97,116,101,45,109,111,100,117,108,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84393=allocate([68,101,102,116,101,109,112,108,97,116,101,77,111,100,117,108,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94394=allocate([108,105,115,116,45,100,101,102,116,101,109,112,108,97,116,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104395=allocate([76,105,115,116,68,101,102,116,101,109,112,108,97,116,101,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str114396=allocate([112,112,100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124397=allocate([80,80,68,101,102,116,101,109,112,108,97,116,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134398=allocate([105,110,105,116,105,97,108,45,102,97,99,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4403=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14404=allocate([77,73,72,83,32,38,37,115,37,100,95,37,100,91,37,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24405=allocate([78,85,76,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34406=allocate([38,37,115,37,100,95,37,108,100,91,37,108,100,93,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44407=allocate([35,105,110,99,108,117,100,101,32,34,116,109,112,108,116,100,101,102,46,104,34,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54408=allocate([115,116,114,117,99,116,32,100,101,102,116,101,109,112,108,97,116,101,77,111,100,117,108,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64409=allocate([115,116,114,117,99,116,32,100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74410=allocate([115,116,114,117,99,116,32,116,101,109,112,108,97,116,101,83,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84411=allocate([123,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str94412=allocate([44,37,100,44,37,100,44,37,100,44,37,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104413=allocate([44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114414=allocate([78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124415=allocate([38,37,115,37,100,95,37,100,91,37,100,93,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134416=allocate([78,85,76,76,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144417=allocate([38,37,115,37,100,95,37,100,91,37,100,93,44,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str154418=allocate([37,100,44,48,44,48,44,37,100,44,37,108,100,44,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164419=allocate([44,78,85,76,76,44,78,85,76,76,125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174420=allocate([125,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4426=allocate([68,69,70,84,69,77,80,76,65,84,69,95,80,84,82,0],"i8",ALLOC_STATIC);
_InitializeDeftemplates_deftemplatePtrRecord=allocate([0,0,0,0,63,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1916,0,0,0,1918,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"i8","i8",0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);STRING_TABLE.__str14427=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str24428=allocate([100,101,102,116,101,109,112,108,97,116,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4441=allocate([109,111,100,105,102,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14442=allocate([77,111,100,105,102,121,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24443=allocate([100,117,112,108,105,99,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34444=allocate([68,117,112,108,105,99,97,116,101,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str44445=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,110,97,109,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54446=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,78,97,109,101,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64447=allocate([49,49,122,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str74448=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,100,101,102,97,117,108,116,45,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84449=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,68,101,102,97,117,108,116,86,97,108,117,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94450=allocate([50,50,119,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str104451=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,99,97,114,100,105,110,97,108,105,116,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114452=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,67,97,114,100,105,110,97,108,105,116,121,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str124453=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,97,108,108,111,119,101,100,45,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134454=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,65,108,108,111,119,101,100,86,97,108,117,101,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144455=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,114,97,110,103,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str154456=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,82,97,110,103,101,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164457=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,116,121,112,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174458=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,84,121,112,101,115,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str184459=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,109,117,108,116,105,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194460=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,77,117,108,116,105,80,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str204461=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,115,105,110,103,108,101,112,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str214462=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,83,105,110,103,108,101,80,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str224463=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,101,120,105,115,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str234464=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,69,120,105,115,116,80,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str244465=allocate([100,101,102,116,101,109,112,108,97,116,101,45,115,108,111,116,45,100,101,102,97,117,108,116,112,0],"i8",ALLOC_STATIC);STRING_TABLE.__str254466=allocate([68,101,102,116,101,109,112,108,97,116,101,83,108,111,116,68,101,102,97,117,108,116,80,70,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str264467=allocate([100,101,102,116,101,109,112,108,97,116,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str274468=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str284469=allocate([105,109,112,108,105,101,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str294470=allocate([115,116,97,116,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str304471=allocate([100,121,110,97,109,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str314472=allocate([63,78,79,78,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str324473=allocate([70,76,79,65,84,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str334474=allocate([73,78,84,69,71,69,82,0],"i8",ALLOC_STATIC);STRING_TABLE.__str344475=allocate([83,89,77,66,79,76,0],"i8",ALLOC_STATIC);STRING_TABLE.__str354476=allocate([83,84,82,73,78,71,0],"i8",ALLOC_STATIC);STRING_TABLE.__str364477=allocate([69,88,84,69,82,78,65,76,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str374478=allocate([70,65,67,84,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str384479=allocate([73,78,83,84,65,78,67,69,45,65,68,68,82,69,83,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str394480=allocate([73,78,83,84,65,78,67,69,45,78,65,77,69,0],"i8",ALLOC_STATIC);STRING_TABLE.__str404481=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str414482=allocate([84,77,80,76,84,70,85,78,0],"i8",ALLOC_STATIC);STRING_TABLE.__str424483=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str434484=allocate([70,97,99,116,45,105,110,100,101,120,101,115,32,99,97,110,32,111,110,108,121,32,98,101,32,117,115,101,100,32,98,121,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str444485=allocate([32,97,115,32,97,32,116,111,112,32,108,101,118,101,108,32,99,111,109,109,97,110,100,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str454486=allocate([100,117,112,108,105,99,97,116,101,47,109,111,100,105,102,121,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str464487=allocate([115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str474488=allocate([100,101,102,116,101,109,112,108,97,116,101,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str484489=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str494490=allocate([102,45,37,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str504491=allocate([102,97,99,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str4496=allocate([100,101,102,116,101,109,112,108,97,116,101,32,112,97,116,116,101,114,110,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14497=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24498=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34499=allocate([115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4502=allocate([40,100,101,102,116,101,109,112,108,97,116,101,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str14503=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24504=allocate([37,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34505=allocate([97,32,100,101,102,116,101,109,112,108,97,116,101,32,110,97,109,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44506=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54507=allocate([10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64508=allocate([10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str74509=allocate([102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84510=allocate([109,117,108,116,105,102,105,101,108,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94511=allocate([115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104512=allocate([109,117,108,116,105,115,108,111,116,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114513=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124514=allocate([115,108,111,116,32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str134515=allocate([116,104,101,32,100,101,102,97,117,108,116,45,100,121,110,97,109,105,99,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144516=allocate([116,104,101,32,100,101,102,97,117,108,116,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154517=allocate([65,110,32,101,120,112,114,101,115,115,105,111,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164518=allocate([100,101,102,97,117,108,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str174519=allocate([100,101,102,97,117,108,116,45,100,121,110,97,109,105,99,0],"i8",ALLOC_STATIC);STRING_TABLE.__str184520=allocate([100,101,102,97,117,108,116,32,97,116,116,114,105,98,117,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194521=allocate([115,108,111,116,32,97,116,116,114,105,98,117,116,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4525=allocate([115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14526=allocate([97,115,115,101,114,116,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str24527=allocate([84,77,80,76,84,82,72,83,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34528=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44529=allocate([83,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54530=allocate([32,114,101,113,117,105,114,101,115,32,97,32,118,97,108,117,101,32,98,101,99,97,117,115,101,32,111,102,32,105,116,115,32,40,100,101,102,97,117,108,116,32,63,78,79,78,69,41,32,97,116,116,114,105,98,117,116,101,46,10,0],"i8",ALLOC_STATIC);
__str64531=allocate(2,"i8",ALLOC_STATIC);STRING_TABLE.__str74532=allocate([32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str84533=allocate([100,101,102,116,101,109,112,108,97,116,101,32,112,97,116,116,101,114,110,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94534=allocate([41,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4537=allocate([84,77,80,76,84,68,69,70,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14538=allocate([119,101,114,114,111,114,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str24539=allocate([73,110,118,97,108,105,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str34540=allocate([32,110,111,116,32,100,101,102,105,110,101,100,32,105,110,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,100,101,102,116,101,109,112,108,97,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44541=allocate([46,10,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str54542=allocate([84,104,101,32,115,105,110,103,108,101,32,102,105,101,108,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64543=allocate([32,99,97,110,32,111,110,108,121,32,99,111,110,116,97,105,110,32,97,32,115,105,110,103,108,101,32,102,105,101,108,100,32,118,97,108,117,101,46,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74544=allocate([84,77,80,76,84,70,85,78,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84545=allocate([65,116,116,101,109,112,116,101,100,32,116,111,32,97,115,115,101,114,116,32,97,32,109,117,108,116,105,102,105,101,108,100,32,118,97,108,117,101,32,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94546=allocate([105,110,116,111,32,116,104,101,32,115,105,110,103,108,101,32,102,105,101,108,100,32,115,108,111,116,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104547=allocate([60,60,117,110,107,110,111,119,110,62,62,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str114548=allocate([32,111,102,32,100,101,102,116,101,109,112,108,97,116,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124549=allocate([102,97,99,116,32,102,45,37,45,53,108,100,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str134550=allocate([67,83,84,82,78,67,72,75,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144551=allocate([83,108,111,116,32,118,97,108,117,101,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154552=allocate([32,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str164553=allocate([65,32,108,105,116,101,114,97,108,32,115,108,111,116,32,118,97,108,117,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str174554=allocate([76,105,116,101,114,97,108,32,115,108,111,116,32,118,97,108,117,101,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str184555=allocate([40,0],"i8",ALLOC_STATIC);STRING_TABLE.__str194556=allocate([10,32,32,32,0],"i8",ALLOC_STATIC);STRING_TABLE.__str204557=allocate([41,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str214558=allocate([100,101,102,116,101,109,112,108,97,116,101,0],"i8",ALLOC_STATIC);STRING_TABLE.__str224559=allocate([102,97,99,116,115,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4598=allocate([85,84,73,76,73,84,89,0],"i8",ALLOC_STATIC);STRING_TABLE.__str4627=allocate([97,108,108,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14628=allocate([119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24629=allocate([119,97,116,99,104,97,98,108,101,32,115,121,109,98,111,108,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str34630=allocate([117,110,119,97,116,99,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__str44631=allocate([119,100,105,115,112,108,97,121,0],"i8",ALLOC_STATIC);STRING_TABLE.__str54632=allocate([32,61,32,111,110,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str64633=allocate([32,61,32,111,102,102,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str74634=allocate([108,105,115,116,45,119,97,116,99,104,45,105,116,101,109,115,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str84635=allocate([103,101,116,45,119,97,116,99,104,45,105,116,101,109,0],"i8",ALLOC_STATIC);STRING_TABLE.__str94636=allocate([87,97,116,99,104,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str104637=allocate([49,42,42,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str114638=allocate([85,110,119,97,116,99,104,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str124639=allocate([71,101,116,87,97,116,99,104,73,116,101,109,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);
STRING_TABLE.__str134640=allocate([49,49,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str144641=allocate([76,105,115,116,87,97,116,99,104,73,116,101,109,115,67,111,109,109,97,110,100,0],"i8",ALLOC_STATIC);STRING_TABLE.__str154642=allocate([48,42,42,119,0],"i8",ALLOC_STATIC);STRING_TABLE.__str164643=allocate([119,116,114,97,99,101,0],"i8",ALLOC_STATIC);__gm_=allocate(468,"i8",ALLOC_STATIC);_mparams=allocate(24,"i8",ALLOC_STATIC);
STRING_TABLE.__str4652=allocate([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str14653=allocate([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str24654=allocate([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);__ZSt7nothrow=allocate(1,"i8",ALLOC_STATIC);
__ZL13__new_handler=allocate(4,"i8",ALLOC_STATIC);__ZTVSt9bad_alloc=allocate([0,0,0,0,0,0,0,0,1730,0,0,0,1920,0,0,0,1922,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str34655=allocate([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0],"i8",ALLOC_STATIC);__ZTVSt20bad_array_new_length=allocate([0,0,0,0,0,0,0,0,1924,0,0,0,1926,0,0,0,1928,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);
allocate(1,"i8",ALLOC_STATIC);STRING_TABLE.__str144656=allocate([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__ZTSSt9bad_alloc=allocate([83,116,57,98,97,100,95,97,108,108,111,99,0],"i8",ALLOC_STATIC);__ZTISt9bad_alloc=allocate(12,"i8",ALLOC_STATIC);STRING_TABLE.__ZTSSt20bad_array_new_length=allocate([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",ALLOC_STATIC);
__ZTISt20bad_array_new_length=allocate(12,"i8",ALLOC_STATIC);HEAP32[_SetupObjectSystem_defclassEntityRecord>>2]=STRING_TABLE.__str264|0;HEAP32[_SetupDeffunctions_deffunctionEntityRecord>>2]=STRING_TABLE.__str909|0;HEAP32[_InitializeFactReteFunctions_factJNGV1Info>>2]=STRING_TABLE.__str1371|0;HEAP32[_InitializeFactReteFunctions_factJNGV2Info>>2]=STRING_TABLE.__str11372|0;HEAP32[_InitializeFactReteFunctions_factJNGV3Info>>2]=STRING_TABLE.__str21373|0;
HEAP32[_InitializeFactReteFunctions_factPNGV1Info>>2]=STRING_TABLE.__str31374|0;HEAP32[_InitializeFactReteFunctions_factPNGV2Info>>2]=STRING_TABLE.__str41375|0;HEAP32[_InitializeFactReteFunctions_factPNGV3Info>>2]=STRING_TABLE.__str51376|0;HEAP32[_InitializeFactReteFunctions_factJNCV1Info>>2]=STRING_TABLE.__str61377|0;HEAP32[_InitializeFactReteFunctions_factJNCV2Info>>2]=STRING_TABLE.__str71378|0;HEAP32[_InitializeFactReteFunctions_factPNCV1Info>>2]=STRING_TABLE.__str81379|0;
HEAP32[_InitializeFactReteFunctions_factStoreMFInfo>>2]=STRING_TABLE.__str91380|0;HEAP32[_InitializeFactReteFunctions_factSlotLengthInfo>>2]=STRING_TABLE.__str101381|0;HEAP32[_InitializeFactReteFunctions_factPNConstant1Info>>2]=STRING_TABLE.__str111382|0;HEAP32[_InitializeFactReteFunctions_factPNConstant2Info>>2]=STRING_TABLE.__str121383|0;HEAP32[_InitializeFacts_factInfo>>2]=STRING_TABLE.__str1439|0;HEAP32[_SetupGenericFunctions_genericEntityRecord>>2]=STRING_TABLE.__str1695|0;
HEAP32[_InitializeDefglobals_globalInfo>>2]=STRING_TABLE.__str1974|0;HEAP32[_InitializeDefglobals_defglobalPtrRecord>>2]=STRING_TABLE.__str11975|0;HEAP32[_SetupInstances_instanceInfo>>2]=STRING_TABLE.__str2049|0;HEAP32[_SetupMessageHandlers_handlerGetInfo>>2]=STRING_TABLE.__str2828|0;HEAP32[_SetupMessageHandlers_handlerPutInfo>>2]=STRING_TABLE.__str12830|0;HEAP32[_InstallObjectPrimitives_objectGVInfo1>>2]=STRING_TABLE.__str3272|0;
HEAP32[_InstallObjectPrimitives_objectGVInfo2>>2]=STRING_TABLE.__str13273|0;HEAP32[_InstallObjectPrimitives_objectGVPNInfo1>>2]=STRING_TABLE.__str23274|0;HEAP32[_InstallObjectPrimitives_objectGVPNInfo2>>2]=STRING_TABLE.__str33275|0;HEAP32[_InstallObjectPrimitives_objectCmpConstantInfo>>2]=STRING_TABLE.__str43276|0;HEAP32[_InstallObjectPrimitives_lengthTestInfo>>2]=STRING_TABLE.__str53277|0;HEAP32[_InstallObjectPrimitives_pNSimpleCompareInfo1>>2]=STRING_TABLE.__str63278|0;
HEAP32[_InstallObjectPrimitives_pNSimpleCompareInfo2>>2]=STRING_TABLE.__str73279|0;HEAP32[_InstallObjectPrimitives_pNSimpleCompareInfo3>>2]=STRING_TABLE.__str83280|0;HEAP32[_InstallObjectPrimitives_jNSimpleCompareInfo1>>2]=STRING_TABLE.__str93281|0;HEAP32[_InstallObjectPrimitives_jNSimpleCompareInfo2>>2]=STRING_TABLE.__str103282|0;HEAP32[_InstallObjectPrimitives_jNSimpleCompareInfo3>>2]=STRING_TABLE.__str113283|0;HEAP32[_InstallProcedurePrimitives_procParameterInfo>>2]=STRING_TABLE.__str3396|0;
HEAP32[_InstallProcedurePrimitives_procWildInfo>>2]=STRING_TABLE.__str13397|0;HEAP32[_InstallProcedurePrimitives_procGetInfo>>2]=STRING_TABLE.__str23398|0;HEAP32[_InstallProcedurePrimitives_procBindInfo>>2]=STRING_TABLE.__str33399|0;HEAP32[_InitializeDeftemplates_deftemplatePtrRecord>>2]=STRING_TABLE.__str4426|0;HEAP32[__ZTVSt9bad_alloc+4>>2]=__ZTISt9bad_alloc;HEAP32[__ZTVSt20bad_array_new_length+4>>2]=__ZTISt20bad_array_new_length;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([2,0,0,0],["i8*",0,0,0],ALLOC_STATIC);HEAP32[__ZTISt9bad_alloc>>2]=__ZTVN10__cxxabiv120__si_class_type_infoE+8|0;HEAP32[__ZTISt9bad_alloc+4>>2]=STRING_TABLE.__ZTSSt9bad_alloc|0;HEAP32[__ZTISt9bad_alloc+8>>2]=__ZTISt9exception;HEAP32[__ZTISt20bad_array_new_length>>2]=__ZTVN10__cxxabiv120__si_class_type_infoE+8|0;HEAP32[__ZTISt20bad_array_new_length+4>>2]=STRING_TABLE.__ZTSSt20bad_array_new_length|0;HEAP32[__ZTISt20bad_array_new_length+8>>2]=__ZTISt9bad_alloc;
__ZNSt9bad_allocC1Ev=1930;__ZNSt9bad_allocD1Ev=1932;__ZNSt20bad_array_new_lengthC1Ev=1934;__ZNSt20bad_array_new_lengthD1Ev=1936;__ZNSt20bad_array_new_lengthD2Ev=1932;
FUNCTION_TABLE=[0,0,_AgendaClearFunction,0,_DefruleWatchAccess,0,_DefruleWatchPrint,0,_RefreshCommand,0,_RefreshAgendaCommand,0,_GetSalienceEvaluationCommand,0,_SetSalienceEvaluationCommand,0,_AgendaCommand,0,_EnvGetNextActivation,0,_PrintActivation,0,_DeallocateBloadData,0,_ClearBload,0,_BloadOutOfMemoryFunction,0,_AdditionFunction,0,_MultiplicationFunction,0,_SubtractionFunction,0,_DivisionFunction,0,_DivFunction,0,_SetAutoFloatDividendCommand,0,_GetAutoFloatDividendCommand,0,_IntegerFunction,0,
_FloatFunction,0,_AbsFunction,0,_MinFunction,0,_MaxFunction,0,_DeallocateBsaveData,0,_EnvGetDefclassWatchSlots,0,_EnvSetDefclassWatchSlots,0,_EnvGetDefclassWatchInstances,0,_EnvSetDefclassWatchInstances,0,_SaveDefclass,0,_EnvSlotFacets,0,_EnvSlotSources,0,_EnvSlotTypes,0,_EnvSlotAllowedValues,0,_EnvSlotAllowedClasses,0,_EnvSlotRange,0,_EnvSlotCardinality,0,_DeallocateDefclassData,0,_DestroyDefclassAction,0,_AllocateModule,0,_ReturnModule,0,_BloadDefclassModuleReference,0,_DefclassCModuleReference,
0,_EnvFindDefclass,0,_ParseDefclass,0,_GetConstructNamePointer,0,_GetConstructPPForm,0,_GetConstructModuleItem,0,_EnvGetNextDefclass,0,_SetNextConstruct,0,_EnvIsDefclassDeletable,0,_EnvUndefclass,0,_RemoveDefclass,0,_InstancesPurge,0,_CreateSystemClasses,0,_UpdateDefclassesScope,0,_UndefclassCommand,0,_SaveDefclasses,0,_ListDefclassesCommand,0,_PPDefclassCommand,0,_DescribeClassCommand,0,_BrowseClassesCommand,0,_GetDefclassListFunction,0,_SuperclassPCommand,0,_SubclassPCommand,0,_ClassExistPCommand,
0,_MessageHandlerExistPCommand,0,_ClassAbstractPCommand,0,_ClassReactivePCommand,0,_ClassSlotsCommand,0,_ClassSuperclassesCommand,0,_ClassSubclassesCommand,0,_GetDefmessageHandlersListCmd,0,_SlotExistPCommand,0,_SlotFacetsCommand,0,_SlotSourcesCommand,0,_SlotTypesCommand,0,_SlotAllowedValuesCommand,0,_SlotAllowedClassesCommand,0,_SlotRangeCommand,0,_SlotCardinalityCommand,0,_SlotWritablePCommand,0,_SlotInitablePCommand,0,_SlotPublicPCommand,0,_SlotDirectAccessPCommand,0,_SlotDefaultValueCommand,0,
_GetDefclassModuleCommand,0,_GetClassDefaultsModeCommand,0,_SetClassDefaultsModeCommand,0,_DefclassWatchAccess,0,_DefclassWatchPrint,0,_DefaultGetNextEvent,0,_DeallocateCommandLineData,0,_DeallocateConstructCompilerData,0,_ConstructsToCCommand,0,_MarkConstruct,0,_DeallocateConstructData,0,_ClearCommand,0,_ResetCommand,0,_DeallocateConstraintData,0,_GDCCommand,0,_SDCCommand,0,_GSCCommand,0,_SSCCommand,0,_CopyFromBsaveConstraintRecord,0,_DeallocateDefinstancesData,0,_AllocateModule840,0,_ReturnModule841,
0,_BloadDefinstancesModuleRef,0,_DefinstancesCModuleReference,0,_EnvFindDefinstances,0,_ParseDefinstances,0,_EnvGetNextDefinstances,0,_EnvIsDefinstancesDeletable,0,_EnvUndefinstances,0,_RemoveDefinstances,0,_ClearDefinstancesReady,0,_UndefinstancesCommand,0,_SaveDefinstances,0,_CreateInitialDefinstances,0,_PPDefinstancesCommand,0,_ListDefinstancesCommand,0,_GetDefinstancesListFunction,0,_GetDefinstancesModuleCommand,0,_ResetDefinstances,0,_DestroyDefinstancesAction,0,_CheckDefinstancesBusy,0,_ResetDefinstancesAction,
0,_DeallocateDeffactsBloadData,0,_BsaveFind,0,_BsaveExpressions,0,_BsaveStorage,0,_BsaveBinaryItem,0,_BloadStorage,0,_BloadBinaryItem,0,_ClearBload843,0,_UpdateDeffactsModule,0,_UpdateDeffacts,0,_ResetDeffacts,0,_ClearDeffacts,0,_SaveDeffacts,0,_GetDeffactsListFunction,0,_UndeffactsCommand,0,_DeffactsModuleFunction,0,_ListDeffactsCommand,0,_PPDeffactsCommand,0,_ResetDeffactsAction,0,_BeforeDeffactsToCode,0,_ConstructToCode,0,_DeallocateDeffactsData,0,_ParseDeffacts,0,_EnvFindDeffacts,0,_EnvGetNextDeffacts,
0,_EnvIsDeffactsDeletable,0,_EnvUndeffacts,0,_ReturnDeffacts,0,_DestroyDeffactsAction,0,_AllocateModule874,0,_ReturnModule875,0,_BloadDeffactsModuleReference,0,_DeffactsCModuleReference,0,_DeallocateDeffunctionBloadData,0,_BsaveDeffunctionFind,0,_BsaveDeffunctionExpressions,0,_BsaveStorageDeffunctions,0,_BsaveDeffunctions,0,_BloadStorageDeffunctions,0,_BloadDeffunctions,0,_ClearDeffunctionBload,0,_MarkDeffunctionItems,0,_BsaveDeffunctionExpression,0,_BsaveDeffunction,0,_UpdateDeffunctionModule,0,
_UpdateDeffunction,0,_ReadyDeffunctionsForCode,0,_DeffunctionsToCode,0,_UnboundDeffunctionErr,0,_DeallocateDeffunctionData,0,_AllocateModule936,0,_ReturnModule937,0,_BloadDeffunctionModuleReference,0,_DeffunctionCModuleReference,0,_EnvFindDeffunction,0,_ParseDeffunction,0,_EnvGetNextDeffunction,0,_EnvIsDeffunctionDeletable,0,_EnvUndeffunction,0,_RemoveDeffunction,0,_ClearDeffunctionsReady,0,_SaveDeffunctionHeaders,0,_SaveDeffunctions,0,_UndeffunctionCommand,0,_ListDeffunctionsCommand,0,_PPDeffunctionCommand,
0,_GetDeffunctionListFunction,0,_GetDeffunctionModuleCommand,0,_DeffunctionWatchAccess,0,_DeffunctionWatchPrint,0,_DestroyDeffunctionAction,0,_SaveDeffunctionHeader,0,_EnvGetDeffunctionWatch,0,_EnvSetDeffunctionWatch,0,_DeallocateDefinstancesBinaryData,0,_BsaveDefinstancesFind,0,_BsaveDefinstancesExpressions,0,_BsaveStorageDefinstances,0,_BsaveDefinstancesDriver,0,_BloadStorageDefinstances,0,_BloadDefinstances,0,_ClearDefinstancesBload,0,_MarkDefinstancesItems,0,_BsaveDefinstancesExpression,0,_BsaveDefinstances,
0,_UpdateDefinstancesModule,0,_UpdateDefinstances,0,_ReadyDefinstancesForCode,0,_DefinstancesToCode,0,_CosFunction,0,_SinFunction,0,_TanFunction,0,_SecFunction,0,_CscFunction,0,_CotFunction,0,_AcosFunction,0,_AsinFunction,0,_AtanFunction,0,_AsecFunction,0,_AcscFunction,0,_AcotFunction,0,_CoshFunction,0,_SinhFunction,0,_TanhFunction,0,_SechFunction,0,_CschFunction,0,_CothFunction,0,_AcoshFunction,0,_AsinhFunction,0,_AtanhFunction,0,_AsechFunction,0,_AcschFunction,0,_AcothFunction,0,_ModFunction,0,
_ExpFunction,0,_LogFunction,0,_Log10Function,0,_SqrtFunction,0,_PiFunction,0,_DegRadFunction,0,_RadDegFunction,0,_DegGradFunction,0,_GradDegFunction,0,_PowFunction,0,_RoundFunction,0,_DeallocateEngineData,0,_GetConstructNameString,0,_EnvGetNextDefrule,0,_EnvDefruleHasBreakpoint,0,_DeallocateExpressionData,0,_UpdateExpression,0,_PrognFunction,0,_DeallocateExternalFunctionData,0,_DeallocateFactBloadData,0,_BsaveFind1273,0,_BsaveStorage1274,0,_BsaveFactPatterns,0,_BloadStorage1275,0,_BloadBinaryItem1276,
0,_ClearBload1277,0,_UpdateFactPatterns,0,_FactPatternParserFind,0,_FactPatternParse,0,_PlaceFactPattern,0,_DetachFactPattern,0,_FactReplaceGetvar,0,_FactGenGetvar,0,_FactJNVariableComparison,0,_FactGenPNConstant,0,_FactReplaceGetfield,0,_FactGenGetfield,0,_FactPNVariableComparison,0,_MarkFactPatternForIncrementalReset,0,_FactsIncrementalReset,0,_CreateInitialFactPattern,0,_FactPatternNodeReference,0,_BeforePatternNetworkToCode,0,_PatternNetworkToCode,0,_FactsCommand,0,_AssertCommand,0,_RetractCommand,
0,_AssertStringFunction,0,_GetFactDuplicationCommand,0,_SetFactDuplicationCommand,0,_SaveFactsCommand,0,_LoadFactsCommand,0,_FactIndexFunction,0,_AssertParse,0,_FactExistpFunction,0,_FactRelationFunction,0,_FactSlotValueFunction,0,_FactSlotNamesFunction,0,_GetFactListFunction,0,_PPFactFunction,0,_DeallocateFactData,0,_ResetFacts,0,_ClearFactsReady,0,_RemoveGarbageFacts,0,_DeftemplateWatchAccess,0,_DeftemplateWatchPrint,0,_AnyFacts,0,_QueryFindFact,0,_QueryFindAllFacts,0,_QueryDoForFact,0,_QueryDoForAllFacts,
0,_DelayedQueryDoForAllFacts,0,_GetQueryFact,0,_GetQueryFactSlot,0,_FactParseQueryNoAction,0,_FactParseQueryAction,0,_DeallocateFileCommandData,0,_BatchCommand,0,_BatchStarCommand,0,_DribbleOnCommand,0,_DribbleOffCommand,0,_SaveCommand,0,_LoadCommand,0,_LoadStarCommand,0,_BsaveCommand,0,_BloadCommand,0,_FindDribble,0,_PrintDribble,0,_GetcDribble,0,_UngetcDribble,0,_ExitDribble,0,_FindBatch,0,_GetcBatch,0,_UngetcBatch,0,_ExitBatch,0,_DeallocateFileRouterData,0,_FindFile,0,_PrintFile,0,_GetcFile,0,
_UngetcFile,0,_ExitFile,0,_DeallocateDefgenericBinaryData,0,_BsaveGenericsFind,0,_BsaveGenericsExpressions,0,_BsaveStorageGenerics,0,_BsaveGenerics,0,_BloadStorageGenerics,0,_BloadGenerics,0,_ClearBloadGenerics,0,_MarkDefgenericItems,0,_BsaveMethodExpressions,0,_BsaveRestrictionExpressions,0,_BsaveDefgenericHeader,0,_BsaveMethods,0,_BsaveMethodRestrictions,0,_BsaveRestrictionTypes,0,_UpdateGenericModule,0,_UpdateGeneric,0,_UpdateMethod,0,_UpdateRestriction,0,_UpdateType,0,_ReadyDefgenericsForCode,
0,_DefgenericsToCode,0,_DeallocateDefgenericData,0,_AllocateDefgenericModule,0,_FreeDefgenericModule,0,_BloadDefgenericModuleReference,0,_DefgenericCModuleReference,0,_EnvFindDefgeneric,0,_ParseDefgeneric,0,_EnvGetNextDefgeneric,0,_EnvIsDefgenericDeletable,0,_EnvUndefgeneric,0,_RemoveDefgeneric,0,_ClearDefgenericsReady,0,_ParseDefmethod,0,_SaveDefgenerics,0,_SaveDefmethods,0,_UndefgenericCommand,0,_UndefmethodCommand,0,_CallNextMethod,0,_CallSpecificMethod,0,_OverrideNextMethod,0,_NextMethodP,0,_GetGenericCurrentArgument,
0,_PPDefgenericCommand,0,_ListDefgenericsCommand,0,_PPDefmethodCommand,0,_ListDefmethodsCommand,0,_PreviewGeneric,0,_GetDefgenericListFunction,0,_GetDefmethodListCommand,0,_GetMethodRestrictionsCommand,0,_GetDefgenericModuleCommand,0,_ClassCommand,0,_DefgenericWatchAccess,0,_DefgenericWatchPrint,0,_DefmethodWatchAccess,0,_DefmethodWatchPrint,0,_DestroyDefgenericAction,0,_SaveDefmethodsForDefgeneric,0,_EnvGetDefgenericWatch,0,_EnvSetDefgenericWatch,0,_EnvSetDefmethodWatch,0,_PrintMethodWatchFlag,0,
_UnboundMethodErr,0,_DeallocateDefglobalBloadData,0,_ResetDefglobals,0,_BsaveFind1916,0,_BsaveStorage1917,0,_BsaveBinaryItem1918,0,_BloadStorageDefglobals,0,_BloadBinaryItem1919,0,_ClearBload1920,0,_UpdateDefglobalModule,0,_UpdateDefglobal,0,_SaveDefglobals,0,_GetDefglobalListFunction,0,_UndefglobalCommand,0,_DefglobalModuleFunction,0,_ListDefglobalsCommand,0,_PPDefglobalCommand,0,_DefglobalWatchAccess,0,_DefglobalWatchPrint,0,_ResetDefglobalAction,0,_EnvGetDefglobalWatch,0,_EnvSetDefglobalWatch,
0,_BeforeDefglobalsToCode,0,_InitDefglobalsCode,0,_ConstructToCode1954,0,_SetResetGlobalsCommand,0,_GetResetGlobalsCommand,0,_ShowDefglobalsCommand,0,_DeallocateDefglobalData,0,_ParseDefglobal,0,_EnvFindDefglobal,0,_EnvGetNextDefglobal,0,_EnvIsDefglobalDeletable,0,_EnvUndefglobal,0,_ReturnDefglobal,0,_DestroyDefglobalAction,0,_AllocateModule1994,0,_ReturnModule1995,0,_BloadDefglobalModuleReference,0,_DefglobalCModuleReference,0,_DeallocateInstanceData,0,_InactiveInitializeInstance,0,_InitializeInstanceCommand,
0,_ParseInitializeInstance,0,_InactiveMakeInstance,0,_MakeInstanceCommand,0,_InitSlotsCommand,0,_DeleteInstanceCommand,0,_CreateInstanceHandler,0,_UnmakeInstanceCommand,0,_InstancesCommand,0,_PPInstanceCommand,0,_SymbolToInstanceName,0,_InstanceNameToSymbol,0,_InstanceAddressCommand,0,_InstanceAddressPCommand,0,_InstanceNamePCommand,0,_InstanceNameCommand,0,_InstancePCommand,0,_InstanceExistPCommand,0,_CleanupInstances,0,_DestroyAllInstances,0,_SaveInstancesCommand,0,_LoadInstancesCommand,0,_RestoreInstancesCommand,
0,_BinarySaveInstancesCommand,0,_BinaryLoadInstancesCommand,0,_EnvSaveInstances,0,_EnvBinarySaveInstances,0,_SaveSingleInstanceText,0,_MarkSingleInstance,0,_SaveSingleInstanceBinary,0,_InactiveModifyInstance,0,_ModifyInstance,0,_InactiveMsgModifyInstance,0,_MsgModifyInstance,0,_InactiveDuplicateInstance,0,_DuplicateInstance,0,_InactiveMsgDuplicateInstance,0,_MsgDuplicateInstance,0,_DirectModifyMsgHandler,0,_MsgModifyMsgHandler,0,_DirectDuplicateMsgHandler,0,_MsgDuplicateMsgHandler,0,_DirectMVReplaceCommand,
0,_DirectMVInsertCommand,0,_DirectMVDeleteCommand,0,_MVSlotReplaceCommand,0,_MVSlotInsertCommand,0,_MVSlotDeleteCommand,0,_GetQueryInstance,0,_GetQueryInstanceSlot,0,_AnyInstances,0,_ParseQueryNoAction,0,_QueryFindInstance,0,_QueryFindAllInstances,0,_QueryDoForInstance,0,_ParseQueryAction,0,_QueryDoForAllInstances,0,_DelayedQueryDoForAllInstances,0,_PrintoutFunction,0,_ReadFunction,0,_OpenFunction,0,_CloseFunction,0,_GetCharFunction,0,_RemoveFunction,0,_RenameFunction,0,_FormatFunction,0,_ReadlineFunction,
0,_SetLocaleFunction,0,_ReadNumberFunction,0,_DefaultOutOfMemoryFunction,0,_GensymFunction,0,_GensymStarFunction,0,_SetgenFunction,0,_gensystem,0,_LengthFunction,0,_TimeFunction,0,_RandomFunction,0,_SeedFunction,0,_ConserveMemCommand,0,_ReleaseMemCommand,0,_MemUsedCommand,0,_MemRequestsCommand,0,_OptionsCommand,0,_ExpandFuncCall,0,_DummyExpandFuncMultifield,0,_CauseEvaluationError,0,_SetSORCommand,0,_EnvGetSequenceOperatorRecognition,0,_GetFunctionRestrictions,0,_CreateFunction,0,_AproposCommand,
0,_GetFunctionListFunction,0,_FuncallFunction,0,_TimerFunction,0,_RemoveAllDefmodules,0,_BsaveFind2675,0,_BsaveStorage2676,0,_BsaveBinaryItem2677,0,_BloadStorage2678,0,_BloadBinaryItem2679,0,_ClearBload2680,0,_CreateMainModule,0,_UpdateDefmodule,0,_UpdatePortItem,0,_ClearDefmodules,0,_SaveDefmodules,0,_EnvGetDefmoduleList,0,_ListDefmodulesCommand,0,_PPDefmoduleCommand,0,_EnvGetNextDefmodule,0,_EnvGetDefmoduleName,0,_BeforeDefmodulesToCode,0,_InitDefmoduleCode,0,_ConstructToCode2722,0,_DeallocateDefmoduleData,
0,_ParseDefmodule,0,_GetCurrentModuleCommand,0,_SetCurrentModuleCommand,0,_EnvFindDefmodule,0,_DeleteDefmodule,0,_CreateSystemHandlers,0,_ParseDefmessageHandler,0,_UndefmessageHandlerCommand,0,_SendCommand,0,_PreviewSendCommand,0,_PPDefmessageHandlerCommand,0,_ListDefmessageHandlersCommand,0,_NextHandlerAvailable,0,_CallNextHandler,0,_DynamicHandlerGetSlot,0,_DynamicHandlerPutSlot,0,_DefmessageHandlerWatchAccess,0,_DefmessageHandlerWatchPrint,0,_EnvSetDefmessageHandlerWatch,0,_PrintHandlerWatchFlag,
0,_UnboundHandlerErr,0,_IsParameterSlotReference,0,_SlotReferenceVar,0,_BindSlotReference,0,_DeallocateMultifieldData,0,_FirstFunction,0,_RestFunction,0,_SubseqFunction,0,_DeleteMemberFunction,0,_ReplaceMemberFunction,0,_DeleteFunction,0,_ReplaceFunction,0,_InsertFunction,0,_ExplodeFunction,0,_ImplodeFunction,0,_NthFunction,0,_MemberFunction,0,_SubsetpFunction,0,_MultifieldPrognFunction,0,_MVReplaceFunction,0,_MVSubseqFunction,0,_MVDeleteFunction,0,_MultifieldPrognParser,0,_GetMvPrognField,0,_GetMvPrognIndex,
0,_DeallocateObjectBinaryData,0,_BsaveObjectsFind,0,_BsaveObjectsExpressions,0,_BsaveStorageObjects,0,_BsaveObjects,0,_BloadStorageObjects,0,_BloadObjects,0,_ClearBloadObjects,0,_MarkDefclassItems,0,_BsaveDefaultSlotExpressions,0,_BsaveHandlerActionExpressions,0,_BsaveDefclass,0,_BsaveClassLinks,0,_BsaveSlots,0,_BsaveTemplateSlots,0,_BsaveSlotMap,0,_BsaveHandlers,0,_BsaveHandlerMap,0,_UpdateDefclassModule,0,_UpdateDefclass,0,_UpdateLink,0,_UpdateSlotName,0,_UpdateSlot,0,_UpdateTemplateSlot,0,_UpdateHandler,
0,_ReadyObjectsForCode,0,_InitObjectsCode,0,_ObjectsToCode,0,_MarkDefclassAndSlots,0,_DeallocateObjectReteBinaryData,0,_BsaveObjectPatternsFind,0,_BsaveStorageObjectPatterns,0,_BsaveObjectPatterns,0,_BloadStorageObjectPatterns,0,_BloadObjectPatterns,0,_ClearBloadObjectPatterns,0,_UpdateAlpha,0,_UpdatePattern,0,_PatternParserFind,0,_ObjectLHSParse,0,_ReorderAndAnalyzeObjectPattern,0,_PlaceObjectPattern,0,_DetachObjectPattern,0,_ReplaceGetJNObjectValue,0,_GenGetJNObjectValue,0,_ObjectJNVariableComparison,
0,_GenObjectPNConstantCompare,0,_ReplaceGetPNObjectValue,0,_GenGetPNObjectValue,0,_ObjectPNVariableComparison,0,_DeleteClassBitMap,0,_CopyClassBitMap,0,_MarkObjectPtnIncrementalReset,0,_ObjectIncrementalReset,0,_CreateInitialObjectPattern,0,_ObjectPatternNodeReference,0,_ObjectMatchDelay,0,_ObjectMatchDelayParse,0,_BeforeObjectPatternsToCode,0,_InitObjectPatternsCode,0,_ObjectPatternsToCode,0,_DeallocateObjectReteData,0,_CheckSyntaxFunction,0,_FindErrorCapture,0,_PrintErrorCapture,0,_DeallocatePatternData,
0,_DeallocatePrettyPrintData,0,_DeallocateProceduralPrimitiveData,0,_IfFunction,0,_WhileFunction,0,_LoopForCountFunction,0,_GetLoopCount,0,_BindFunction,0,_ReturnFunction,0,_BreakFunction,0,_SwitchFunction,0,_BindParse,0,_PrognParse,0,_IfParse,0,_WhileParse,0,_LoopForCountParse,0,_ReturnParse,0,_BreakParse,0,_SwitchParse,0,_NotFunction,0,_AndFunction,0,_OrFunction,0,_EqFunction,0,_NeqFunction,0,_LessThanOrEqualFunction,0,_GreaterThanOrEqualFunction,0,_LessThanFunction,0,_GreaterThanFunction,0,_NumericEqualFunction,
0,_NumericNotEqualFunction,0,_SymbolpFunction,0,_StringpFunction,0,_LexemepFunction,0,_NumberpFunction,0,_IntegerpFunction,0,_FloatpFunction,0,_OddpFunction,0,_EvenpFunction,0,_MultifieldpFunction,0,_PointerpFunction,0,_ProfileCommand,0,_ProfileInfoCommand,0,_ProfileResetCommand,0,_SetProfilePercentThresholdCommand,0,_GetProfilePercentThresholdCommand,0,_ProfileClearFunction,0,_DeallocateRouterData,0,_ExitCommand,0,_DeallocateDefruleBloadData,0,_BsaveFind3776,0,_BsaveExpressions3777,0,_BsaveStorage3778,
0,_BsaveBinaryItem3779,0,_BloadStorage3780,0,_BloadBinaryItem3781,0,_ClearBload3782,0,_UpdateDefruleModule,0,_UpdateDefrule,0,_UpdateJoin,0,_ResetDefrules,0,_SaveDefrules,0,_ClearDefrulesReady,0,_ClearDefrules,0,_GetDefruleListFunction,0,_UndefruleCommand,0,_DefruleModuleFunction,0,_ListDefrulesCommand,0,_PPDefruleCommand,0,_EnvGetDefruleWatchActivations,0,_EnvSetDefruleWatchActivations,0,_EnvGetDefruleWatchFirings,0,_EnvSetDefruleWatchFirings,0,_BeforeDefrulesCode,0,_ConstructToCode3830,0,_RunCommand,
0,_HaltCommand,0,_FocusCommand,0,_ClearFocusStackCommand,0,_GetFocusStackFunction,0,_PopFocusFunction,0,_GetFocusFunction,0,_SetBreakCommand,0,_RemoveBreakCommand,0,_ShowBreaksCommand,0,_MatchesCommand,0,_ListFocusStackCommand,0,_DependenciesCommand,0,_DependentsCommand,0,_GetIncrementalResetCommand,0,_SetIncrementalResetCommand,0,_GetStrategyCommand,0,_SetStrategyCommand,0,_DeallocateDefruleData,0,_ParseDefrule,0,_EnvFindDefrule,0,_EnvIsDefruleDeletable,0,_EnvUndefrule,0,_ReturnDefrule,0,_DestroyDefruleAction,
0,_AllocateModule3923,0,_ReturnModule3924,0,_BloadDefruleModuleReference,0,_DefruleCModuleReference,0,_ReplaceRHSVariable,0,_DeallocateScannerData,0,_SortFunction,0,_DefaultCompareSwapFunction,0,_StrCatFunction,0,_SymCatFunction,0,_StrLengthFunction,0,_StrCompareFunction,0,_UpcaseFunction,0,_LowcaseFunction,0,_SubStringFunction,0,_StrIndexFunction,0,_EvalFunction,0,_BuildFunction,0,_StringToFieldFunction,0,_DeallocateStringRouterData,0,_FindString,0,_PrintString,0,_GetcString,0,_UngetcString,0,_DeallocateSymbolData,
0,_RecognizeHelpRouters,0,_HelpPrint,0,_HelpGetc,0,_HelpUngetc,0,_DeallocateTextProcessingData,0,_HelpFunction,0,_HelpPathFunction,0,_FetchCommand,0,_TossCommand,0,_PrintRegionCommand,0,_GetRegionCommand,0,_DeallocateDeftemplateBloadData,0,_BsaveFind4379,0,_BsaveStorage4380,0,_BsaveBinaryItem4381,0,_BloadStorage4382,0,_BloadBinaryItem4383,0,_ClearBload4384,0,_UpdateDeftemplateModule,0,_UpdateDeftemplate,0,_UpdateDeftemplateSlot,0,_ClearDeftemplates,0,_SaveDeftemplates,0,_GetDeftemplateListFunction,
0,_UndeftemplateCommand,0,_DeftemplateModuleFunction,0,_ListDeftemplatesCommand,0,_PPDeftemplateCommand,0,_EnvGetDeftemplateWatch,0,_EnvSetDeftemplateWatch,0,_ConstructToCode4423,0,_DeallocateDeftemplateData,0,_ParseDeftemplate,0,_EnvFindDeftemplate,0,_EnvGetNextDeftemplate,0,_EnvIsDeftemplateDeletable,0,_EnvUndeftemplate,0,_ReturnDeftemplate,0,_DestroyDeftemplateAction,0,_AllocateModule4439,0,_ReturnModule4440,0,_BloadDeftemplateModuleReference,0,_DeftemplateCModuleReference,0,_ModifyCommand,0,_DuplicateCommand,
0,_DeftemplateSlotNamesFunction,0,_DeftemplateSlotDefaultValueFunction,0,_DeftemplateSlotCardinalityFunction,0,_DeftemplateSlotAllowedValuesFunction,0,_DeftemplateSlotRangeFunction,0,_DeftemplateSlotTypesFunction,0,_DeftemplateSlotMultiPFunction,0,_DeftemplateSlotSinglePFunction,0,_DeftemplateSlotExistPFunction,0,_DeftemplateSlotDefaultPFunction,0,_ModifyParse,0,_DuplicateParse,0,_DeallocateUtilityData,0,_DeallocateWatchData,0,_WatchCommand,0,_UnwatchCommand,0,_GetWatchItemCommand,0,_ListWatchItemsCommand,
0,_RecognizeWatchRouters,0,_CaptureWatchPrints,0,__ZNSt9bad_allocD2Ev,0,_DecrementDefclassBusyCount,0,_IncrementDefclassBusyCount,0,_PrintDeffunctionCall,0,_EvaluateDeffunctionCall,0,_DecrementDeffunctionBusyCount,0,_IncrementDeffunctionBusyCount,0,_PrintFactJNGetVar1,0,_FactJNGetVar1,0,_PrintFactJNGetVar2,0,_FactJNGetVar2,0,_PrintFactJNGetVar3,0,_FactJNGetVar3,0,_PrintFactPNGetVar1,0,_FactPNGetVar1,0,_PrintFactPNGetVar2,0,_FactPNGetVar2,0,_PrintFactPNGetVar3,0,_FactPNGetVar3,0,_PrintFactJNCompVars1,
0,_FactJNCompVars1,0,_PrintFactJNCompVars2,0,_FactJNCompVars2,0,_PrintFactPNCompVars1,0,_FactPNCompVars1,0,_FactStoreMultifield,0,_PrintFactSlotLength,0,_FactSlotLength,0,_PrintFactPNConstant1,0,_FactPNConstant1,0,_PrintFactPNConstant2,0,_FactPNConstant2,0,_PrintFactIdentifier,0,_PrintFactIdentifierInLongForm,0,_EnvRetract,0,_EnvGetNextFact,0,_EnvIncrementFactCount,0,_EnvDecrementFactCount,0,_DecrementFactBasisCount,0,_IncrementFactBasisCount,0,_MatchFactFunction,0,_PrintGenericCall,0,_EvaluateGenericCall,
0,_DecrementGenericBusyCount,0,_IncrementGenericBusyCount,0,_GetDefglobalValue2,0,_QGetDefglobalValue,0,_DecrementDefglobalBusyCount,0,_IncrementDefglobalBusyCount,0,_PrintInstanceName,0,_PrintInstanceLongForm,0,_EnvUnmakeInstance,0,_EnvGetNextInstance,0,_EnvDecrementInstanceCount,0,_EnvIncrementInstanceCount,0,_DecrementObjectBasisCount,0,_IncrementObjectBasisCount,0,_MatchObjectFunction,0,_NetworkSynchronized,0,_PrintHandlerSlotGetFunction,0,_HandlerSlotGetFunction,0,_PrintHandlerSlotPutFunction,
0,_HandlerSlotPutFunction,0,_PrintObjectGetVarJN1,0,_ObjectGetVarJNFunction1,0,_PrintObjectGetVarJN2,0,_ObjectGetVarJNFunction2,0,_PrintObjectGetVarPN1,0,_ObjectGetVarPNFunction1,0,_PrintObjectGetVarPN2,0,_ObjectGetVarPNFunction2,0,_PrintObjectCmpConstant,0,_ObjectCmpConstantFunction,0,_PrintSlotLengthTest,0,_SlotLengthTestFunction,0,_PrintPNSimpleCompareFunction1,0,_PNSimpleCompareFunction1,0,_PrintPNSimpleCompareFunction2,0,_PNSimpleCompareFunction2,0,_PrintPNSimpleCompareFunction3,0,_PNSimpleCompareFunction3,
0,_PrintJNSimpleCompareFunction1,0,_JNSimpleCompareFunction1,0,_PrintJNSimpleCompareFunction2,0,_JNSimpleCompareFunction2,0,_PrintJNSimpleCompareFunction3,0,_JNSimpleCompareFunction3,0,_RtnProcParam,0,_RtnProcWild,0,_GetProcBind,0,_PutProcBind,0,_CreateProfileData,0,_DeleteProfileData,0,_DecrementDeftemplateBusyCount,0,_IncrementDeftemplateBusyCount,0,__ZNSt9bad_allocD0Ev,0,__ZNKSt9bad_alloc4whatEv,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthD0Ev,0,__ZNKSt20bad_array_new_length4whatEv,0,
__ZNSt9bad_allocC2Ev,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthC2Ev,0,__ZNSt9bad_allocD2Ev,0];Module.FUNCTION_TABLE=FUNCTION_TABLE;
function run(h){function f(){var a=0;calledRun=!0;Module._main&&(preMain(),a=Module.callMain(h),Module.noExitRuntime||exitRuntime());if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);0<Module.postRun.length;)Module.postRun.pop()();return a}h=h||Module.arguments;if(0<runDependencies)return Module.printErr("run() called, but dependencies remain, so not running"),0;if(Module.preRun){"function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);var c=Module.preRun;
Module.preRun=[];for(var a=c.length-1;0<=a;a--)c[a]();if(0<runDependencies)return 0}return Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1);f()},1),0):f()}Module.run=run;if(Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();initRuntime();var shouldRunNow=!0;Module.noInitialRun&&(shouldRunNow=!1);if(shouldRunNow)var ret=run();
